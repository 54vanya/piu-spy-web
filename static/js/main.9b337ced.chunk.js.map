{"version":3,"sources":["utils/polyfills.js","constants/routes.js","components/Shared/Overlay/Overlay.js","components/Shared/ToggleButton/ToggleButton.js","components/Shared/Loader/index.js","components/Shared/Input/Input.js","components/Shared/Toggle/Toggle.js","components/Shared/CollapsibleBar/index.js","components/Shared/Range/index.js","constants/leaderboard.js","components/Leaderboard/ChartFilter.js","utils/fetch.js","utils/exp.js","utils/achievements.js","utils/date.js","constants/env.js","reducers/ranking.js","reducers/profiles.js","constants/backend.js","reducers/results.js","reducers/presets.js","components/Leaderboard/PresetsControl.js","utils/leaderboards.js","utils/colors.js","reducers/selectors.js","components/Leaderboard/Leaderboard.js","components/Ranking/RankingList.js","components/Ranking/RankingFaq.js","components/Ranking/Ranking.js","components/Profile/MostPlayed.js","components/Profile/ExpFaq.js","components/Profile/Profile.js","components/Shared/TopBar/TopBar.js","components/App.js","reducers/tracklist.js","reducers/index.js","index.js"],"names":["Number","isNaN","value","Math","sign","x","Array","prototype","findIndex","Object","defineProperty","predicate","this","TypeError","o","len","length","thisArg","arguments","k","kValue","call","configurable","writable","routes","leaderboard","path","ranking","faq","profile","getPath","params","id","POPPER_MODIFIERS","preventOverflow","enabled","padding","boundariesElement","PLACEMENT_ARROW_MAPPING","right","left","top","bottom","getArrowPlacement","placement","split","Overlay","state","isVisible","containerItemRef","React","createRef","renderPopper","bind","toggleOverlayVisibility","setState","event","target","closest","hideOverlay","ref","style","arrowProps","outOfBoundaries","scheduleUpdate","props","children","hideWhenOutOfBounds","data-placement","className","classNames","overlayClassName","overlayItem","Fragment","onClick","ReactDOM","createPortal","container","document","body","modifiers","referenceElement","current","PureComponent","defaultTypes","listensToClickOutside","ToggleButton","active","onToggle","text","Loader","width","height","viewBox","xmlns","fill","cx","cy","r","attributeName","from","to","begin","dur","values","calcMode","repeatCount","fillOpacity","Input","_","isNil","defaultValue","bindAll","prevProps","e","newValue","onChange","type","numericValue","min","max","onBlur","key","handleBlur","omit","onKeyPress","handleKeyPress","onInput","handleChange","noop","Component","defaultProps","Toggle","checked","uniqueId","htmlFor","CollapsibleBar","open","defaultOpen","title","Range","range","step","renderTrack","onMouseDown","onTouchStart","position","display","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","justifyContent","alignItems","boxShadow","SORT","DEFAULT","PROTAGONIST","RANK_ASC","RANK_DESC","NEW_SCORES_PLAYER","CHART_MIN_MAX","DURATION","STD","SHORT","REMIX","FULL","DURATION_DEFAULT","ChartFilter","filterValue","onChangeEx","getOr","duration","buttonText","t","isEqual","isEmpty","newMin","newMax","includes","without","fetchJson","a","url","fetch","response","status","json","data","Error","console","error","Promise","reject","gradeValue","F","D","C","B","A","S","SS","SSS","getExp","result","chart","isBestGradeOnChart","chartType","chartLevel","grade","getRankImg","rank","color","src","process","iconName","alt","threshold","ranks","achievements","icon","GiRank1","description","resultFunction","progress","combo","GiRank2","GiRank3","GiSmokingFinger","initialState","playedSongs","songsToPlay","song","uniq","GiRetroController","GiLoveSong","Улитка","GiSnail","charts","some","songToPlay","chartLabel","GiPodiumSecond","miss","bad","GiLifeBar","GiWoodenPegleg","good","great","initialAchievementState","parseDate","textDate","moment","toDate","Date","localStorage","window","debugOn","setItem","debugOff","removeItem","DEBUG","getItem","SET_RANKINGS","RANKING_CHANGE_SET","map","flow","q","rating","fromPairs","SET_PROFILES","SET_FILTER","RESET_FILTER","defaultFilter","isLoading","filter","postProcessProfiles","profiles","tracklist","mapValues","neededGrades","expRank","findLast","exp","expRanks","expRankNext","find","double","single","gradeIncrementMap","keys","resultsByLevel","forEach","level","res","thisGrade","thisPlayerId","playerId","otherResults","results","sort","b","indexOf","gradeIncArray","gradeInc","l","g","prog","incrementLevel","number","minimumNumber","totalCharts","round","sqrt","getMinimumNumber","bonusCoefficientNumber","bonus","getBonusForLevel","accuracy","countAcc","sumAccuracy","HOST","LOADING","SUCCESS","ERROR","showRank","showRankAndNorank","players","sharedCharts","gradeComparator","guessGrade","misses","bads","goods","greats","mapResult","recognition_notes","isUnknownPlayer","player","arcade_name","isIntermediateResult","sharedChartId","shared_chart","nickname","nicknameArcade","date","gained","dateObject","isExactDate","exact_gain_date","score","isRank","rank_mode","_r","originalChartMix","original_mix","originalChartLabel","original_label","originalScore","original_score","scoreIncrease","score_increase","calories","perfect","perfects","max_combo","mods","mods_list","isHJ","isMachineBest","isMyBest","maxTotalSteps","infos","fixableIndex","absentNumbersCount","localStepSum","i","isNumber","tryFixIncompleteResult","acc","floor","accRaw","toFixed","accuracyRaw","getMaxScore","initializeProfile","name","nameArcade","resultsByGrade","lastResultDate","count","battleCount","grades","rankingHistory","ratingHistory","lastPlace","lastBattleDate","achName","getProfileInfoFromResult","replace","convert","cap","achState","processData","shared_charts","mappedResults","getTopResultId","getBestGradeResultId","topResults","bestGradeResults","battles","resRaw","sharedChart","label","toUpper","chart_label","match","track_name","max_total_steps","totalResultsCount","chartTop","push","topResultId","currentTopResult","oldScoreIndex","splice","newScoreIndex","sortedLastIndexBy","latestScoreDate","enemyResult","bestGradeResultId","currentBestGradeRes","chartId","maxScoreWithAccuracy","maxScoreResult","maxScore","dictChartElo","getDictChartEloId","enemyScore","dictRatingDiff","getDictRatingDiffId","p1","p2","scoreMultiplier","startingRating","r1","r2","R1","R2","E1","E2","S1","S2","kRating1","kRating2","maxK1","maxK2","kLevel1","kLevel2","kLevel","kMinimizer","startsWith","K1","K2","dr1","dr2","baseEloId1","baseEloId2","baseEloP1","baseEloP2","ratingDiffId1","ratingDiffId2","ratingDiff","ratingDiffLast","log","playersSorted","orderBy","battleDate","index","place","getTime","p1LastRating","last","p2LastRating","toInteger","ratingRaw","get","now","processBattles","fetchResults","async","dispatch","getState","toPairs","calculateRankingChanges","setFilter","getListOfNames","getMapOfRatings","all","localForage","lastChangedRanking","lastChangedRankingPoints","lastFetchedRanking","listNow","listLastFetched","listLastChanged","mapPointsNow","mapPointsLastFetched","rankingsPointsMap","listPrev","warn","SELECT_PRESET","LOAD_PRESETS","LOADING_START","LOADING_END","presets","currentPreset","itemToOption","item","reloadPresets","startLoading","endLoading","selectPreset","openPreset","then","noPresetsMessage","mapDispatchToProps","loadPresets","savePreset","newPreset","confirm","withoutOldPreset","remove","newPresets","deletePreset","PresetsControl","onChangeSelection","selected","onRewritePreset","onSavePreset","isAddingNew","classNamePrefix","placeholder","options","noOptionsMessage","disabled","connect","TimeAgo","addLocale","ru","timeAgo","timeStyle","flavour","gradation","convenient","units","tooltipFormatter","toLocaleDateString","resultType","undefined","flexDirection","getTimeAgo","dayDiff","startOf","diff","format","colorsArray","playersSelector","createSelector","sortBy","it","toLower","filteredDataSelector","names","namesOr","playersOr","namesNot","playersNot","sortingType","protagonist","excludeAntagonists","defaultSorting","newScoresProtagonistSorting","protagonistSorting","row","protIndex","protScore","enemies","take","uniqBy","distanceFromProtagonist","reduce","dist","enemy","getScoreSorting","direction","Infinity","sortingFunctions","compact","chartRange","items","rows","filterCharts","showOnlyRank","occuredNames","alreadyOccured","rowNames","every","size","matchSorter","ANIMATION_DURATION","sortingOptions","resetFilter","Leaderboard","showItemsCount","chartOverrides","curry","onRefresh","onTypeSongName","debounce","onRedoLatestResult","throttle","overrides","drop","onUndoLatestResult","undoedResult","maxBy","undoedPlayerId","previousPlayerResult","newResults","latestScore","overrideChart","closeMenuOnSelect","isMulti","isClearable","filteredData","canShowMore","visibleData","slice","showProtagonistRatingChange","highlightProtagonist","protagonistName","uniqueSelectedNames","renderSimpleSearch","renderFilters","renderSortings","preset","message","chartOriginal","chartIndex","first","topPlace","occuredNicknames","isSecondOccurenceInResults","singlep","doublep","coop","href","rel","isActive","currentIndex","canUndo","enterAnimation","leaveAnimation","typeName","maintainContainerHeight","placeDifference","nameIndex","prevScore","findLastIndex","empty","latest","fontWeight","vj","hj","content","tooltipClassName","numeral","exact","getGradeImg","RankingList","playerIndex","change","isString","prevRating","down","up","RankingFaq","rankingSelector","Ranking","render","component","withRouter","useState","setLoading","limit","setLimit","setData","useEffect","success","catch","latestDate","ExpFaq","MIN_GRAPH_HEIGHT","defaultGradesDistribution","defaultGradesWithLevelsDistribution","flatMap","cutRange","array","startIndex","endIndex","firstElement","lastElement","profileSelector","levelsDistribution","y","singlesLevels","doublesLevels","gradesData","update","gradesDistribution","groupBy","pick","sum","gradesValues","gradesAndLevelsDistribution","groupedResults","counts","countBy","reduced","levelsData","lastTickRating","lastTickRanking","lastTick","firstTick","lastDay","endOf","minMaxRange","filterRange","dayRange","dayRangeMs","placesChanges","ratingChanges","setProfilesFilter","resetProfilesFilter","Profile","isLevelGraphCombined","showFaq","onChangeDayRange","onShowFaq","onHideFaq","componentWillUnmount","renderRankingHistory","minHeight","aspect","margin","strokeDasharray","dataKey","domain","tickFormatter","allowDecimals","stroke","isAnimationActive","payload","strokeWidth","dot","renderPlaceHistory","dataMax","interval","reversed","renderGrades","ticks","stackId","renderGradesWithLevels","stackOffset","doubleItems","singleItems","abs","dataMin","offset","renderLevels","totalD","totalS","renderGradeBlock","obj","typeLetter","progr","minNumber","currentNumber","levelString","complete","zero","renderAchievement","achievement","Icon","expProgress","ariaHideApp","isOpen","onRequestClose","ceil","MostPlayed","TopBar","App","rootReducer","combineReducers","action","hasPrevList","playerOriginal","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","getElementById"],"mappings":"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","file":"static/js/main.9b337ced.chunk.js","sourcesContent":["/* eslint-disable */\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\r\nNumber.isNaN =\r\n  Number.isNaN ||\r\n  function(value) {\r\n    return value !== value;\r\n  };\r\n\r\nif (typeof Math.sign === 'undefined') {\r\n  Math.sign = function(x) {\r\n    return x > 0 ? 1 : x < 0 ? -1 : x;\r\n  };\r\n}\r\n\r\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\r\nif (!Array.prototype.findIndex) {\r\n  Object.defineProperty(Array.prototype, 'findIndex', {\r\n    value: function(predicate) {\r\n      // 1. Let O be ? ToObject(this value).\r\n      if (this == null) {\r\n        throw new TypeError('\"this\" is null or not defined');\r\n      }\r\n\r\n      var o = Object(this);\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('predicate must be a function');\r\n      }\r\n\r\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n      var thisArg = arguments[1];\r\n\r\n      // 5. Let k be 0.\r\n      var k = 0;\r\n\r\n      // 6. Repeat, while k < len\r\n      while (k < len) {\r\n        // a. Let Pk be ! ToString(k).\r\n        // b. Let kValue be ? Get(O, Pk).\r\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n        // d. If testResult is true, return k.\r\n        var kValue = o[k];\r\n        if (predicate.call(thisArg, kValue, k, o)) {\r\n          return k;\r\n        }\r\n        // e. Increase k by 1.\r\n        k++;\r\n      }\r\n\r\n      // 7. Return -1.\r\n      return -1;\r\n    },\r\n    configurable: true,\r\n    writable: true,\r\n  });\r\n}\r\n","export const routes = {\r\n  leaderboard: {\r\n    path: `/leaderboard`,\r\n  },\r\n  ranking: {\r\n    path: `/ranking`,\r\n    faq: {\r\n      path: '/ranking/faq',\r\n    },\r\n  },\r\n  profile: {\r\n    path: `/profiles/:id`,\r\n    getPath: params => `/profiles/${params.id}`,\r\n  },\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport toBe from 'prop-types';\r\nimport { Popper } from 'react-popper';\r\nimport classNames from 'classnames';\r\nimport listensToClickOutside from 'react-onclickoutside';\r\n\r\nimport './overlay.scss';\r\n\r\nconst POPPER_MODIFIERS = {\r\n  preventOverflow: {\r\n    enabled: true,\r\n    padding: 10,\r\n    boundariesElement: 'viewport',\r\n  },\r\n};\r\n\r\nconst PLACEMENT_ARROW_MAPPING = {\r\n  right: 'left',\r\n  left: 'right',\r\n  top: 'bottom',\r\n  bottom: 'top',\r\n};\r\n\r\nconst getArrowPlacement = placement => {\r\n  return placement && PLACEMENT_ARROW_MAPPING[placement.split('-')[0]];\r\n};\r\n\r\nclass Overlay extends React.PureComponent {\r\n  static propTypes = {\r\n    placement: toBe.string,\r\n    overlayItem: toBe.any,\r\n    hideWhenOutOfBounds: toBe.bool,\r\n  };\r\n\r\n  static defaultTypes = {\r\n    placement: 'bottom',\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isVisible: false,\r\n    };\r\n    this.containerItemRef = React.createRef();\r\n    this.renderPopper = this.renderPopper.bind(this);\r\n    this.toggleOverlayVisibility = this.toggleOverlayVisibility.bind(this);\r\n  }\r\n\r\n  hideOverlay() {\r\n    this.setState({\r\n      isVisible: false,\r\n    });\r\n  }\r\n\r\n  toggleOverlayVisibility() {\r\n    this.setState({\r\n      isVisible: !this.state.isVisible,\r\n    });\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    const preventHiding = event && event.target.closest('.inner-popper-overlay'); // prevent overlays from hiding when a modal is opened within overlay\r\n\r\n    if (!preventHiding) {\r\n      this.hideOverlay();\r\n    }\r\n  }\r\n\r\n  renderPopper({ ref, style, placement, arrowProps, scheduleUpdate, outOfBoundaries }) {\r\n    const { children, hideWhenOutOfBounds } = this.props;\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        data-placement={placement}\r\n        className={classNames(\r\n          'inner-popper-overlay',\r\n          `arrow-${getArrowPlacement(placement)}`,\r\n          this.props.overlayClassName,\r\n          { 'out-of-bounds': outOfBoundaries && hideWhenOutOfBounds }\r\n        )}\r\n      >\r\n        <div className=\"arrow-hider\">\r\n          <div className=\"arrow\" ref={arrowProps.ref} style={arrowProps.style} />\r\n        </div>\r\n        <div\r\n          className=\"inner-popper-content\"\r\n          // ref={ref => this.setupPopperContentRef(scheduleUpdate, ref)}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { placement, overlayItem } = this.props;\r\n    const { isVisible } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"overlay-item\"\r\n          ref={this.containerItemRef}\r\n          onClick={this.toggleOverlayVisibility}\r\n        >\r\n          {overlayItem}\r\n        </div>\r\n        {isVisible &&\r\n          ReactDOM.createPortal(\r\n            <Popper\r\n              container={document.body}\r\n              modifiers={POPPER_MODIFIERS}\r\n              placement={placement}\r\n              referenceElement={this.containerItemRef.current}\r\n            >\r\n              {this.renderPopper}\r\n            </Popper>,\r\n            document.body\r\n          )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default listensToClickOutside(Overlay);\r\n","import React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './toggle-button.scss';\r\n\r\nexport default class ToggleButton extends React.PureComponent {\r\n  static propTypes = {\r\n    text: toBe.string,\r\n    onToggle: toBe.func,\r\n    active: toBe.bool,\r\n  };\r\n\r\n  render() {\r\n    const { active, onToggle, text } = this.props;\r\n    return (\r\n      <div\r\n        className={classNames('toggle-button', { active: active })}\r\n        onClick={() => onToggle(!active)}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport './loader.scss';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"loader\">\r\n      <svg\r\n        width=\"40\"\r\n        height=\"12\"\r\n        viewBox=\"0 0 120 30\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"#eee\"\r\n      >\r\n        <circle cx=\"15\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"60\" cy=\"15\" r=\"9\" fillOpacity=\"0.3\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"9\"\r\n            to=\"9\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"9;15;9\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"0.5\"\r\n            to=\"0.5\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\".5;1;.5\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"105\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react/no-deprecated */\r\n// imports from vendor deps\r\nimport React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\n\r\n// imports from styles\r\nexport default class Input extends React.Component {\r\n  static propTypes = {\r\n    value: toBe.any,\r\n    defaultValue: toBe.any,\r\n    onChange: toBe.func,\r\n    onBlur: toBe.func,\r\n    type: toBe.string,\r\n    className: toBe.string,\r\n    trimOnBlur: toBe.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    value: null,\r\n    type: 'text',\r\n    onChange: _.noop,\r\n    onBlur: _.noop,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: (!_.isNil(props.value) ? props.value : props.defaultValue) || '',\r\n    };\r\n    _.bindAll(['handleChange', 'handleBlur', 'handleKeyPress'], this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.value !== this.props.value) {\r\n      this.setState({ value: this.props.value });\r\n    }\r\n  }\r\n\r\n  handleChange(e) {\r\n    const newValue = e.target.value;\r\n    this.setState({ value: newValue }, () => this.props.onChange(newValue));\r\n  }\r\n\r\n  handleBlur(e) {\r\n    const { type } = this.props;\r\n    const { value } = this.state;\r\n    if (type === 'number') {\r\n      const numericValue = Number(value);\r\n      if (numericValue >= Number(e.target.min) && numericValue <= Number(e.target.max)) {\r\n        this.props.onBlur(numericValue, e);\r\n      } else {\r\n        this.setState({ value: this.props.value });\r\n        this.props.onBlur(this.props.value, e);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleKeyPress(e) {\r\n    if (e.key === 'Enter') {\r\n      this.handleBlur(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props;\r\n\r\n    // HACK: This component uses onInput instead of onChange\r\n    // because IE11 fails to call onChange events when you paste/cut using context menu (RMB)\r\n    // We're using onInput because it works fine, and because for text input\r\n    // there's no difference between how onChange and onInput work\r\n    return (\r\n      <input\r\n        {..._.omit(['defaultValue', 'onChange'], this.props)}\r\n        className={classNames(className, 'text-input')}\r\n        value={this.state.value}\r\n        onBlur={this.handleBlur}\r\n        onKeyPress={this.handleKeyPress}\r\n        onInput={this.handleChange}\r\n        onChange={_.noop} // Handled by onInput\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './toggle.scss';\r\n\r\n// imports from styles\r\nexport default class Toggle extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.id = _.uniqueId();\r\n  }\r\n\r\n  onChange = e => {\r\n    this.props.onChange(e.target.checked);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"toggle-checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle-checkbox-cb\"\r\n          id={this.id}\r\n          onChange={this.onChange}\r\n          checked={this.props.checked}\r\n        />\r\n        <label htmlFor={this.id} className=\"toggle\">\r\n          <span></span>\r\n        </label>\r\n        <label htmlFor={this.id} className=\"text-label\">\r\n          {this.props.children}\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\nimport './styles.scss';\r\n\r\nexport default class CollapsibleBar extends PureComponent {\r\n  static propTypes = {\r\n    className: toBe.string,\r\n    children: toBe.any,\r\n    title: toBe.any,\r\n    defaultOpen: toBe.bool,\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = { open: props.defaultOpen || false };\r\n  }\r\n\r\n  render() {\r\n    const { children, title, className } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classNames('collapsible-bar', className, { open })}>\r\n        <div className=\"header\" onClick={() => this.setState(state => ({ open: !state.open }))}>\r\n          <div className=\"collapse-button\">\r\n            <FaChevronRight />\r\n          </div>\r\n          <div className=\"title\">{title}</div>\r\n        </div>\r\n        {children && <div className=\"collapsible-children\">{children}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Range as ReactRange, getTrackBackground } from 'react-range';\r\n\r\nexport default function Range({ range, min, max, onChange }) {\r\n  return (\r\n    <ReactRange\r\n      values={range}\r\n      step={1}\r\n      min={min}\r\n      max={max}\r\n      onChange={onChange}\r\n      renderTrack={({ props, children }) => (\r\n        <div\r\n          onMouseDown={props.onMouseDown}\r\n          onTouchStart={props.onTouchStart}\r\n          style={{\r\n            ...props.style,\r\n            position: 'relative',\r\n            height: '10px',\r\n            display: 'flex',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <div\r\n            ref={props.ref}\r\n            style={{\r\n              height: '6px',\r\n              width: '100%',\r\n              borderRadius: '3px',\r\n              background: getTrackBackground({\r\n                values: range,\r\n                colors: ['#ccc', '#88d3ff', '#ccc'],\r\n                min,\r\n                max,\r\n              }),\r\n              alignSelf: 'center',\r\n            }}\r\n          >\r\n            {children}\r\n          </div>\r\n        </div>\r\n      )}\r\n      renderThumb={({ props, isDragged }) => (\r\n        <div\r\n          {...props}\r\n          style={{\r\n            ...props.style,\r\n            height: '12px',\r\n            width: '12px',\r\n            borderRadius: '6px',\r\n            backgroundColor: '#FFF',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            boxShadow: '0px 2px 3px #AAA',\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              height: '6px',\r\n              width: '6px',\r\n              borderRadius: '3px',\r\n              backgroundColor: isDragged ? '#88d3ff' : '#CCC',\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import _ from 'lodash/fp';\r\n\r\nexport const SORT = {\r\n  DEFAULT: 'default',\r\n  PROTAGONIST: 'protagonist',\r\n  RANK_ASC: 'rankAsc',\r\n  RANK_DESC: 'rankDesc',\r\n  NEW_SCORES_PLAYER: 'newScoresPlayer',\r\n};\r\n\r\nexport const CHART_MIN_MAX = [1, 28];\r\nexport const DURATION = {\r\n  STD: 'Standard',\r\n  SHORT: 'Short',\r\n  REMIX: 'Remix',\r\n  FULL: 'Full',\r\n};\r\nexport const DURATION_DEFAULT = _.values(DURATION);\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\nimport { FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Range from 'components/Shared/Range';\r\n\r\nimport { CHART_MIN_MAX, DURATION_DEFAULT, DURATION } from 'constants/leaderboard';\r\n\r\nexport default function ChartFilter({ filterValue, onChange: onChangeEx }) {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filterValue);\r\n  const type = _.getOr(null, 'type', filterValue);\r\n  const duration = _.getOr(DURATION_DEFAULT, 'duration', filterValue);\r\n\r\n  let buttonText = 'фильтр чартов';\r\n  if (filterValue) {\r\n    const t = type || '';\r\n    buttonText = range[0] === range[1] ? `${t}${range[0]}` : `${t}${range[0]} - ${t}${range[1]}`;\r\n    buttonText = 'чарты: ' + buttonText;\r\n    if (!_.isEqual(duration, DURATION_DEFAULT)) {\r\n      buttonText += ' ***';\r\n      // buttonText += ` (${_.values(DURATION)\r\n      //   .filter(dur => duration.includes(dur))\r\n      //   .map(s => s.slice(0, 2))\r\n      //   .join('-')})`;\r\n    }\r\n  }\r\n\r\n  const onChange = value => {\r\n    onChangeEx({\r\n      range,\r\n      type,\r\n      ...value,\r\n      duration: _.isEmpty(value.duration) ? duration : value.duration,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Overlay\r\n        overlayClassName=\"chart-range-overlay-outer\"\r\n        overlayItem={\r\n          <button className=\"filter-charts-button btn btn-sm btn-dark\">{buttonText}</button>\r\n        }\r\n      >\r\n        <div className=\"chart-range-overlay\">\r\n          <div className=\"buttons\">\r\n            <ToggleButton\r\n              text=\"Single\"\r\n              active={type === 'S'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  type: active ? 'S' : null,\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Double\"\r\n              active={type === 'D'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  type: active ? 'D' : null,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <Range\r\n            range={range}\r\n            min={CHART_MIN_MAX[0]}\r\n            max={CHART_MIN_MAX[1]}\r\n            onChange={r => onChange({ range: r })}\r\n          />\r\n          <div className=\"inputs\">\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  range: [Math.max(range[0] - 1, CHART_MIN_MAX[0]), range[1]],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={CHART_MIN_MAX[0]}\r\n              max={Math.min(CHART_MIN_MAX[1], range[1])}\r\n              value={range[0]}\r\n              onBlur={value => {\r\n                onChange({ range: [value, range[1]] });\r\n              }}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMin = Math.min(range[0] + 1, CHART_MIN_MAX[1]);\r\n                onChange({\r\n                  range: [newMin, range[1] < newMin ? newMin : range[1]],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMax = Math.max(range[1] - 1, CHART_MIN_MAX[0]);\r\n                onChange({\r\n                  range: [range[0] > newMax ? newMax : range[0], newMax],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={Math.max(CHART_MIN_MAX[0], range[0])}\r\n              max={CHART_MIN_MAX[1]}\r\n              value={range[1]}\r\n              onBlur={value => onChange({ range: [range[0], value] })}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  range: [range[0], Math.min(range[1] + 1, CHART_MIN_MAX[1])],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n          </div>\r\n          <div className=\"buttons-duration\">\r\n            <ToggleButton\r\n              text=\"Standard\"\r\n              active={duration.includes(DURATION.STD)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.STD]\r\n                    : _.without([DURATION.STD], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Short\"\r\n              active={duration.includes(DURATION.SHORT)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.SHORT]\r\n                    : _.without([DURATION.SHORT], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Remix\"\r\n              active={duration.includes(DURATION.REMIX)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.REMIX]\r\n                    : _.without([DURATION.REMIX], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Full\"\r\n              active={duration.includes(DURATION.FULL)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.FULL]\r\n                    : _.without([DURATION.FULL], duration),\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Overlay>\r\n    </div>\r\n  );\r\n}\r\n","export const fetchJson = async ({ url }) => {\r\n  try {\r\n    const response = await fetch(url);\r\n    if (response.status >= 200 && response.status < 300) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      throw Error('HTTP Status ' + response.status);\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\nexport const gradeValue = {\r\n  F: 0.1,\r\n  D: 0.2,\r\n  'D+': 0.3,\r\n  C: 0.3,\r\n  'C+': 0.5,\r\n  B: 0.5,\r\n  'B+': 0.8,\r\n  A: 0.8,\r\n  'A+': 1,\r\n  S: 1.1,\r\n  SS: 1.2,\r\n  SSS: 1.2,\r\n};\r\n\r\nexport const getExp = (result, chart) => {\r\n  if (!result.isBestGradeOnChart) {\r\n    return 0;\r\n  }\r\n  if (chart.chartType === 'COOP') {\r\n    return (chart.chartLevel * 1000 * (gradeValue[result.grade] || 0.8)) / 8;\r\n  }\r\n  const exp = (chart.chartLevel ** 2.31 * (gradeValue[result.grade] || 0.8)) / 9;\r\n  return exp;\r\n};\r\n\r\nexport const getRankImg = rank => (\r\n  <img\r\n    className={rank.color}\r\n    src={`${process.env.PUBLIC_URL}/ranks/${rank.iconName}`}\r\n    alt={rank.threshold}\r\n  />\r\n);\r\n\r\nexport const ranks = [\r\n  {\r\n    threshold: 0,\r\n    iconName: '0.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 1000,\r\n    iconName: '1.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 2000,\r\n    iconName: '2.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 3000,\r\n    iconName: '3.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 4000,\r\n    iconName: '4.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 5000,\r\n    iconName: '5.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 6250,\r\n    iconName: '6.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 7500,\r\n    iconName: '7.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 8750,\r\n    iconName: '8.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 10000,\r\n    iconName: '9.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 12000,\r\n    iconName: '10.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 14000,\r\n    iconName: '11.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 16000,\r\n    iconName: '12.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 18000,\r\n    iconName: '13.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 22000,\r\n    iconName: '14.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 26000,\r\n    iconName: '15.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 30000,\r\n    iconName: '16.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 35000,\r\n    iconName: '17.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 40000,\r\n    iconName: '18.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 50000,\r\n    iconName: '19.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 60000,\r\n    iconName: '20.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 70000,\r\n    iconName: '21.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 80000,\r\n    iconName: '22.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 100000,\r\n    iconName: '23.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 120000,\r\n    iconName: '24.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 140000,\r\n    iconName: '25.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 160000,\r\n    iconName: '26.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 180000,\r\n    iconName: '27.png',\r\n    color: 'green',\r\n  },\r\n];\r\n","import _ from 'lodash/fp';\r\n\r\nimport {\r\n  GiLoveSong,\r\n  GiLifeBar,\r\n  GiSmokingFinger,\r\n  GiSnail,\r\n  GiRetroController,\r\n  GiRank1,\r\n  GiRank2,\r\n  GiRank3,\r\n  GiWoodenPegleg,\r\n  GiPodiumSecond,\r\n} from 'react-icons/gi';\r\n\r\nexport const achievements = {\r\n  '500 комбо': {\r\n    icon: GiRank1,\r\n    description: 'Заработать 500+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 500 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  '1000 комбо': {\r\n    icon: GiRank2,\r\n    description: 'Заработать 1000+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 1000 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  '2000 комбо': {\r\n    icon: GiRank3,\r\n    description: 'Заработать 2000+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 2000 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Мастер фингеринга': {\r\n    icon: GiSmokingFinger,\r\n    description: 'Сыграть все Fingers треки',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: ['Monkey Fingers', 'Kimchi Fingers', 'Monkey Fingers 2', 'Money Fingers'],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  '8-bit': {\r\n    icon: GiRetroController,\r\n    description: 'Сыграть Seize My Day, Tales of Pumpnia и Pumptris (8bit ver.)',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: ['Seize My Day', 'Tales of Pumpnia', 'Pumptris (8bit ver.)'],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  'Love is...': {\r\n    icon: GiLoveSong,\r\n    description: 'Сыграть все Love is a Danger Zone треки',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: [\r\n        'Love is a Danger Zone',\r\n        'Love is a Danger Zone [SHORT]',\r\n        'Love is a Danger Zone (Cranky Mix)',\r\n        'Love is a Danger Zone 2',\r\n        'Love is a Danger Zone 2 [SHORT]',\r\n        'Love is a Danger Zone 2 [FULL]',\r\n        'Love is a Danger Zone 2 (D&G Ver.)',\r\n        'Love is a Danger Zone (try to B.P.M.)',\r\n      ],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  Улитка: {\r\n    icon: GiSnail,\r\n    description:\r\n      'Мастер замедлений: сыграть старшие чарты Twist of Fate, Karyawisata, Awakening и Moonlight',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: [\r\n        { song: 'Twist of Fate (feat. Ruriling)', charts: ['D20', 'S19'] },\r\n        { song: 'Karyawisata', charts: ['S20', 'D16'] },\r\n        { song: 'Awakening', charts: ['S19', 'D20'] },\r\n        { song: 'Moonlight', charts: ['S19', 'D21'] },\r\n      ],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.some(\r\n        songToPlay => chart.song === songToPlay.song && songToPlay.charts.includes(chart.chartLabel)\r\n      )\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  'Коричневая S': {\r\n    icon: GiPodiumSecond,\r\n    description: 'Получить S, но 5+ бэдов',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.miss === 0 && result.bad >= 5 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Мы выживали как могли': {\r\n    icon: GiLifeBar,\r\n    description: 'Получить B или ниже, но удержать лайфбар',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress:\r\n          state.progress === 100 ? 100 : ['B+', 'C+', 'D+'].includes(result.grade) ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Падовый мисс': {\r\n    icon: GiWoodenPegleg,\r\n    description: 'Когда от SSS тебя удерживают только миссы из-за плохого моддинга падов',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress:\r\n          state.progress === 100\r\n            ? 100\r\n            : result.miss > 0 && result.bad === 0 && result.good === 0 && result.great === 0\r\n            ? 100\r\n            : 0,\r\n      };\r\n    },\r\n  },\r\n};\r\n\r\nexport const initialAchievementState = {\r\n  progress: 0,\r\n};\r\n","import moment from 'moment';\r\n\r\nexport const parseDate = textDate => {\r\n  if (typeof textDate === 'string') {\r\n    return moment(textDate, 'YYYY-MM-DD HH:mm:ss').toDate();\r\n  } else {\r\n    return new Date(textDate);\r\n  }\r\n};\r\n","if (localStorage) {\r\n  window.debugOn = () => {\r\n    localStorage.setItem('debug', 1);\r\n  };\r\n  window.debugOff = () => {\r\n    localStorage.removeItem('debug');\r\n  };\r\n}\r\n\r\nexport const DEBUG = localStorage && localStorage.getItem('debug');\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\n\r\nimport { DEBUG } from 'constants/env';\r\n\r\nconst SET_RANKINGS = `RANKINGS/SET_RANKINGS`;\r\nconst RANKING_CHANGE_SET = `RANKINGS/RANKING_CHANGE_SET`;\r\n\r\nexport default function reducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case SET_RANKINGS:\r\n      return {\r\n        ...state,\r\n        data: action.ranking,\r\n      };\r\n    case RANKING_CHANGE_SET:\r\n      const hasPrevList = !_.isEmpty(action.listPrev);\r\n      return {\r\n        ...state,\r\n        data: _.map(playerOriginal => {\r\n          const player = {\r\n            ...playerOriginal,\r\n            prevRating: _.get(playerOriginal.id, action.rankingsPointsMap),\r\n          };\r\n          if (!hasPrevList) {\r\n            return player; // First time opening this thing and we didn't have any previous data\r\n          }\r\n          if (!_.includes(player.id, action.listPrev)) {\r\n            return { ...player, change: 'NEW' };\r\n          } else if (!_.includes(player.id, action.listNow)) {\r\n            // Should NEVER happen, idk if this is possible\r\n            return { ...player, change: '?' };\r\n          } else {\r\n            return {\r\n              ...player,\r\n              change: _.indexOf(player.id, action.listPrev) - _.indexOf(player.id, action.listNow),\r\n            };\r\n          }\r\n        }, state.data),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const processBattles = ({ battles, profiles }) => {\r\n  const dictChartElo = {};\r\n  const getDictChartEloId = (score, enemyScore) =>\r\n    `${score.playerId}vs${enemyScore.playerId}-${score.sharedChartId}-${score.isRank}`;\r\n  const dictRatingDiff = {};\r\n  const getDictRatingDiffId = score => `${score.playerId}-${score.sharedChartId}-${score.isRank}`;\r\n  battles.forEach(([score, enemyScore, song]) => {\r\n    // For each battle\r\n    const p1 = profiles[score.playerId];\r\n    const p2 = profiles[enemyScore.playerId];\r\n\r\n    const scoreMultiplier = score.isRank ? 1.2 : 1;\r\n    let maxScore = null;\r\n    if (song.maxScore) {\r\n      maxScore = song.maxScore * scoreMultiplier;\r\n      if (\r\n        Math.max(maxScore, score.score, enemyScore.score) !== maxScore &&\r\n        !score.isRank &&\r\n        (!score.isExactDate || !enemyScore.isExactDate)\r\n      ) {\r\n        maxScore *= 1.2;\r\n        // Rank from machine best wasn't recognized most likely.\r\n        // Increasing max score by 20% is fine\r\n      }\r\n      if (Math.max(maxScore, score.score, enemyScore.score) !== maxScore) {\r\n        // If calculated max score isn't max score anyway, use current scores as max + cherry on top\r\n        maxScore = Math.max(maxScore, score.score, enemyScore.score) + 10000;\r\n      }\r\n    }\r\n    // Rating at the start of battle for this score\r\n    if (!score.startingRating) score.startingRating = p1.rating;\r\n    if (!enemyScore.startingRating) enemyScore.startingRating = p2.rating;\r\n\r\n    // Counting the number of battles\r\n    p1.battleCount++;\r\n    p2.battleCount++;\r\n\r\n    // This is one match between two players\r\n    //// Elo formula\r\n    // const r1 = score.startingRating;\r\n    // const r2 = enemyScore.startingRating;\r\n    const r1 = p1.rating;\r\n    const r2 = p2.rating;\r\n    const R1 = 10 ** (r1 / 400);\r\n    const R2 = 10 ** (r2 / 400);\r\n    const E1 = R1 / (R1 + R2);\r\n    const E2 = R2 / (R1 + R2);\r\n    let A = score.score;\r\n    let B = enemyScore.score;\r\n    let S1, S2;\r\n    if (A === B) {\r\n      S1 = S2 = 0.5;\r\n    } else if (maxScore && A !== 0 && B !== 0) {\r\n      A = maxScore / A - 1;\r\n      B = maxScore / B - 1;\r\n      S1 = (B / (A + B) - 0.5) * 5 + 0.5;\r\n      S2 = (A / (A + B) - 0.5) * 5 + 0.5;\r\n    } else {\r\n      S1 = A > B ? 1 : B < A ? 0 : 0.5;\r\n      S2 = 1 - S1;\r\n    }\r\n    S1 = Math.max(0, Math.min(1, S1)); // Set strict boundaries to [0, 1]\r\n    S2 = Math.max(0, Math.min(1, S2));\r\n\r\n    const kRating1 = Math.max(0, Math.min(1, (r1 - 700) / 800));\r\n    const kRating2 = Math.max(0, Math.min(1, (r2 - 700) / 800));\r\n    const maxK1 = 30 + 20 * kRating1;\r\n    const maxK2 = 30 + 20 * kRating2;\r\n    const kLevel1 = Math.max(\r\n      1,\r\n      Math.min(maxK1, (song.chartLevel / 25) ** ((kRating1 - 0.5) * 5 + 2.5) * maxK1)\r\n    );\r\n    const kLevel2 = Math.max(\r\n      1,\r\n      Math.min(maxK2, (song.chartLevel / 25) ** ((kRating2 - 0.5) * 5 + 2.5) * maxK2)\r\n    );\r\n    const kLevel = Math.min(kLevel1, kLevel2);\r\n\r\n    // When YOU vs ENEMY both have SS/SSS, and both scores are very close to SSS, this battle will NOT affect ELO too much\r\n    let kMinimizer = 1;\r\n    const kDropCutoff = 0.98; // Score is 98% of max score or higher -- K will be lower\r\n    if (\r\n      song.maxScore &&\r\n      (score.grade.startsWith('SS') || (score.miss === 0 && score.bad === 0)) &&\r\n      (enemyScore.grade.startsWith('SS') || (enemyScore.miss === 0 && enemyScore.bad === 0)) &&\r\n      score.score / maxScore > kDropCutoff &&\r\n      enemyScore.score / maxScore > kDropCutoff\r\n    ) {\r\n      kMinimizer =\r\n        Math.max(\r\n          Math.min(\r\n            1,\r\n            Math.max(\r\n              100 - (100 * score.score) / maxScore,\r\n              100 - (100 * enemyScore.score) / maxScore\r\n            ) /\r\n              (100 - kDropCutoff * 100)\r\n          ),\r\n          0\r\n        ) ** 2;\r\n    }\r\n\r\n    const K1 = kLevel * kMinimizer;\r\n    const K2 = kLevel * kMinimizer;\r\n    let dr1 = K1 * (S1 - E1);\r\n    let dr2 = K2 * (S2 - E2);\r\n    // Do not decrease rating if you have SSS - RIP zero-sum algorithm\r\n    dr1 = dr1 < 0 && score.grade === 'SSS' ? 0 : dr1;\r\n    dr2 = dr2 < 0 && enemyScore.grade === 'SSS' ? 0 : dr2;\r\n    // Recording this value for display\r\n    const baseEloId1 = getDictChartEloId(score, enemyScore);\r\n    const baseEloId2 = getDictChartEloId(enemyScore, score);\r\n    const baseEloP1 = dictChartElo[baseEloId1] || 0;\r\n    const baseEloP2 = dictChartElo[baseEloId2] || 0;\r\n    dictChartElo[baseEloId1] = dr1;\r\n    dictChartElo[baseEloId2] = dr2;\r\n\r\n    // Change rating as a result of this battle\r\n    p1.rating = p1.rating + dr1 - baseEloP1;\r\n    p2.rating = p2.rating + dr2 - baseEloP2;\r\n\r\n    const ratingDiffId1 = getDictRatingDiffId(score);\r\n    const ratingDiffId2 = getDictRatingDiffId(enemyScore);\r\n    dictRatingDiff[ratingDiffId1] = (dictRatingDiff[ratingDiffId1] || 0) + dr1 - baseEloP1;\r\n    dictRatingDiff[ratingDiffId2] = (dictRatingDiff[ratingDiffId2] || 0) + dr2 - baseEloP2;\r\n\r\n    score.ratingDiff = dictRatingDiff[ratingDiffId1];\r\n    score.ratingDiffLast = dr1 - baseEloP1;\r\n\r\n    enemyScore.ratingDiff = dictRatingDiff[ratingDiffId2];\r\n    enemyScore.ratingDiffLast = dr2 - baseEloP2;\r\n\r\n    if (DEBUG) {\r\n      // if (score.sharedChartId === 5292) {\r\n      // if (song.song === 'Club Night') {\r\n      // if (score.nickname === 'Liza' || enemyScore.nickname === 'Liza') {\r\n      // if (!song.maxScore) {\r\n      console.log(\r\n        `${song.chartLabel} - ${song.song} (${song.sharedChartId}) - ${\r\n          profiles[score.playerId].name\r\n        } / ${profiles[enemyScore.playerId].name}\r\n- ${score.score} / ${enemyScore.score} (${Math.floor(maxScore)} (${Math.floor(\r\n          song.maxScore * scoreMultiplier\r\n        )})) - R ${S1.toFixed(2)}/${S2.toFixed(2)} E ${E1.toFixed(2)} / ${E2.toFixed(2)}\r\n- Rating ${r1.toFixed(2)} / ${r2.toFixed(2)} - ${dr1.toFixed(2)} / ${dr2.toFixed(\r\n          2\r\n        )} - K ${K1.toFixed(2)} ${K2.toFixed(2)}${\r\n          kMinimizer === 1 ? '' : ` (coef ${kMinimizer.toFixed(2)})`\r\n        }\r\n- Base elo: ${baseEloP1.toFixed(2)} / ${baseEloP2.toFixed(2)}\r\n- Elo change: ${(dr1 - baseEloP1).toFixed(2)} / ${(dr2 - baseEloP2).toFixed(2)}\r\n- New base elo: ${dictChartElo[baseEloId1].toFixed(2)} / ${dictChartElo[baseEloId2].toFixed(2)}\r\n- RD: ${dictRatingDiff[ratingDiffId1].toFixed(2)} / ${dictRatingDiff[ratingDiffId2].toFixed(2)}`\r\n      );\r\n    }\r\n    // Rating floor\r\n    p1.rating = Math.max(100, p1.rating);\r\n    p2.rating = Math.max(100, p2.rating);\r\n\r\n    const playersSorted = _.flow(\r\n      _.keys,\r\n      _.map(id => ({ id, rating: profiles[id].rating })),\r\n      _.orderBy(['rating'], ['desc'])\r\n    )(profiles);\r\n    const battleDate =\r\n      score.dateObject > enemyScore.dateObject ? score.dateObject : enemyScore.dateObject;\r\n    playersSorted.forEach((player, index) => {\r\n      const lastPlace = profiles[player.id].lastPlace;\r\n      if (lastPlace !== index + 1) {\r\n        profiles[player.id].rankingHistory.push({\r\n          place: index + 1,\r\n          date: battleDate.getTime(),\r\n        });\r\n        profiles[player.id].lastPlace = index + 1;\r\n      }\r\n    });\r\n\r\n    const p1LastRating = _.last(p1.ratingHistory);\r\n    const p2LastRating = _.last(p2.ratingHistory);\r\n    if (p1LastRating !== p1.rating) {\r\n      p1.ratingHistory.push({\r\n        rating: p1.rating,\r\n        date: battleDate.getTime(),\r\n      });\r\n    }\r\n    if (p2LastRating !== p2.rating) {\r\n      p2.ratingHistory.push({\r\n        rating: p2.rating,\r\n        date: battleDate.getTime(),\r\n      });\r\n    }\r\n  });\r\n\r\n  _.flow(\r\n    _.keys,\r\n    _.forEach(key => {\r\n      profiles[key].id = _.toInteger(key);\r\n      profiles[key].accuracy =\r\n        profiles[key].countAcc > 0\r\n          ? Math.round((profiles[key].sumAccuracy / profiles[key].countAcc) * 100) / 100\r\n          : null;\r\n      profiles[key].ratingRaw = profiles[key].rating;\r\n      profiles[key].rating = Math.round(profiles[key].rating);\r\n      profiles[key].rankingHistory = [\r\n        ...profiles[key].rankingHistory,\r\n        { place: _.get('place', _.last(profiles[key].rankingHistory)), date: Date.now() },\r\n      ];\r\n    })\r\n  )(profiles);\r\n};\r\n\r\nexport const setRankingsAction = ranking => ({\r\n  type: SET_RANKINGS,\r\n  ranking,\r\n});\r\n\r\nconst getListOfNames = _.map('id');\r\nconst getMapOfRatings = _.flow(\r\n  _.map(q => [q.id, q.rating]),\r\n  _.fromPairs\r\n);\r\nexport const setRankings = ranking => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(setRankingsAction(ranking));\r\n    try {\r\n      const [lastChangedRanking, lastChangedRankingPoints, lastFetchedRanking] = await Promise.all([\r\n        localForage.getItem('lastChangedRanking_v3'),\r\n        localForage.getItem('lastChangedRankingPoints_v3'),\r\n        localForage.getItem('lastFetchedRanking_v3'),\r\n      ]);\r\n      const listNow = getListOfNames(ranking);\r\n      const listLastFetched = getListOfNames(lastFetchedRanking);\r\n      const listLastChanged = getListOfNames(lastChangedRanking);\r\n      const mapPointsNow = getMapOfRatings(ranking);\r\n      const mapPointsLastFetched = getMapOfRatings(lastFetchedRanking);\r\n      const mapPointsLastChanged = getMapOfRatings(lastChangedRankingPoints);\r\n\r\n      let rankingsPointsMap = mapPointsLastChanged;\r\n      // console.log(listNow, listLastFetched, listLastChanged);\r\n      // console.log(mapPointsNow, mapPointsLastFetched, mapPointsLastChanged);\r\n      if (!_.isEqual(mapPointsNow, mapPointsLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRankingPoints_v3', lastFetchedRanking);\r\n        rankingsPointsMap = mapPointsLastFetched;\r\n      }\r\n      let listPrev = listLastChanged;\r\n      if (!_.isEqual(listNow, listLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRanking_v3', lastFetchedRanking);\r\n        listPrev = listLastFetched;\r\n      }\r\n      dispatch({\r\n        type: RANKING_CHANGE_SET,\r\n        listNow,\r\n        listPrev,\r\n        rankingsPointsMap,\r\n      });\r\n      localForage.setItem('lastFetchedRanking_v3', ranking);\r\n    } catch (error) {\r\n      console.warn('Cannot get ranking from local storage', error);\r\n    }\r\n  };\r\n};\r\n","import _ from 'lodash/fp';\r\n\r\nimport { ranks as expRanks } from 'utils/exp';\r\n\r\nconst SET_PROFILES = `PROFILES/SET_PROFILES`;\r\nconst SET_FILTER = `PROFILES/SET_FILTER`;\r\nconst RESET_FILTER = `PROFILES/RESET_FILTER`;\r\n\r\nexport const defaultFilter = {};\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n  filter: defaultFilter,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_PROFILES:\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n      };\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const postProcessProfiles = (profiles, tracklist) => {\r\n  const getBonusForLevel = level => (30 * (1 + 2 ** (level / 4))) / 11;\r\n  const getMinimumNumber = totalCharts =>\r\n    Math.round(\r\n      Math.min(totalCharts, 1 + totalCharts / 20 + Math.sqrt(Math.max(totalCharts - 1, 0)) * 0.7)\r\n    );\r\n\r\n  const newProfiles = _.mapValues(profile => {\r\n    const neededGrades = ['A', 'A+', 'S', 'SS', 'SSS'];\r\n    profile.expRank = _.findLast(rank => rank.threshold <= profile.exp, expRanks);\r\n    profile.expRankNext = _.find(rank => rank.threshold > profile.exp, expRanks);\r\n    profile.progress = {\r\n      double: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n      single: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n    };\r\n    const gradeIncrementMap = {\r\n      SSS: ['SS', 'S', 'A+', 'A'],\r\n      SS: ['SS', 'S', 'A+', 'A'],\r\n      S: ['S', 'A+', 'A'],\r\n      'A+': ['A+', 'A'],\r\n      A: ['A'],\r\n    };\r\n    const incrementLevel = (l, g, chartType) => {\r\n      const prog =\r\n        chartType === 'S' || chartType === 'SP'\r\n          ? profile.progress.single\r\n          : chartType === 'D' || chartType === 'DP'\r\n          ? profile.progress.double\r\n          : null;\r\n      if (prog) {\r\n        prog[g][l] = prog[g][l] ? prog[g][l] + 1 : 1;\r\n      }\r\n    };\r\n    _.keys(profile.resultsByLevel).forEach(level => {\r\n      profile.resultsByLevel[level].forEach(res => {\r\n        const thisGrade = res.result.grade;\r\n        const thisPlayerId = res.result.playerId;\r\n        const otherResults = res.chart.results.filter(r => r.playerId === thisPlayerId);\r\n        if (otherResults.length > 1) {\r\n          const sortedResults = otherResults.sort(\r\n            (a, b) => neededGrades.indexOf(b.grade) - neededGrades.indexOf(a.grade)\r\n          );\r\n          if (sortedResults[0].grade !== thisGrade) {\r\n            return; // Don't do anything when we have a different result with better grade\r\n          }\r\n        }\r\n        const gradeIncArray = gradeIncrementMap[thisGrade];\r\n        if (gradeIncArray) {\r\n          gradeIncArray.forEach(gradeInc => {\r\n            incrementLevel(level, gradeInc, res.chart.chartType);\r\n          });\r\n        }\r\n      });\r\n    });\r\n    ['single', 'double'].forEach(chartType => {\r\n      profile.progress[`${chartType}-bonus`] = 0;\r\n      _.keys(profile.progress[chartType]).forEach(grade => {\r\n        profile.progress[chartType][`${grade}-bonus`] = 0;\r\n        _.keys(profile.progress[chartType][grade]).forEach(level => {\r\n          const number = profile.progress[chartType][grade][level];\r\n          const totalCharts = tracklist.data[`${chartType}sLevels`][level];\r\n          const minimumNumber = getMinimumNumber(totalCharts);\r\n          const bonusCoefficientNumber = Math.min(1, number / minimumNumber);\r\n          const rawBonus = getBonusForLevel(level);\r\n          const bonus = rawBonus * bonusCoefficientNumber;\r\n          profile.progress[chartType][grade][`${level}-bonus`] = bonus;\r\n          profile.progress[chartType][grade][`${level}-bonus-coef`] = bonusCoefficientNumber;\r\n          profile.progress[chartType][grade][`${level}-min-number`] = minimumNumber;\r\n          profile.progress[chartType][grade][`${level}-achieved-number`] = number;\r\n          if (bonus >= profile.progress[chartType][`${grade}-bonus`]) {\r\n            profile.progress[chartType][`${grade}-bonus`] = bonus;\r\n            profile.progress[chartType][`${grade}-bonus-level`] = level;\r\n            profile.progress[chartType][`${grade}-bonus-level-coef`] = bonusCoefficientNumber;\r\n            profile.progress[chartType][`${grade}-bonus-level-min-number`] = minimumNumber;\r\n            profile.progress[chartType][`${grade}-bonus-level-achieved-number`] = number;\r\n          }\r\n        });\r\n        profile.progress[`${chartType}-bonus`] += profile.progress[chartType][`${grade}-bonus`];\r\n      });\r\n    });\r\n    profile.progress.bonus = profile.progress['double-bonus'] + profile.progress['single-bonus'];\r\n    profile.rating = 850 + profile.progress.bonus;\r\n    profile.accuracy =\r\n      profile.countAcc > 0\r\n        ? Math.round((profile.sumAccuracy / profile.countAcc) * 100) / 100\r\n        : null;\r\n    return profile;\r\n  }, profiles);\r\n  return newProfiles;\r\n};\r\n\r\nexport const setProfiles = data => ({\r\n  type: SET_PROFILES,\r\n  data,\r\n});\r\n\r\nexport const setProfilesFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\n\r\nexport const resetProfilesFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n\r\nexport const calculateProfileData = profileId => (dispatch, getState) => {};\r\n","// export const HOST = 'http://localhost:5000';\r\nexport const HOST = 'https://vps720616.ovh.net:5000';\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\nimport { getExp } from 'utils/exp';\r\nimport { achievements, initialAchievementState } from 'utils/achievements';\r\nimport { parseDate } from 'utils/date';\r\n\r\nimport { processBattles } from './ranking';\r\nimport { postProcessProfiles } from './profiles';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TOP/LOADING`;\r\nconst SUCCESS = `TOP/SUCCESS`;\r\nconst ERROR = `TOP/ERROR`;\r\nconst SET_FILTER = `TOP/SET_FILTER`;\r\nconst RESET_FILTER = `TOP/RESET_FILTER`;\r\nconst RANKING_CHANGE_SET = `TOP/RANKING_CHANGE_SET`;\r\n\r\nexport const defaultFilter = { showRank: true, showRankAndNorank: true };\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n  filter: defaultFilter,\r\n  players: {},\r\n  profiles: {},\r\n  results: [],\r\n  sharedCharts: {},\r\n};\r\n\r\nexport const gradeComparator = {\r\n  '?': 0,\r\n  F: 1,\r\n  D: 2,\r\n  'D+': 3,\r\n  C: 4,\r\n  'C+': 5,\r\n  B: 6,\r\n  'B+': 7,\r\n  A: 8,\r\n  'A+': 9,\r\n  S: 10,\r\n  SS: 11,\r\n  SSS: 12,\r\n};\r\n\r\nconst tryFixIncompleteResult = (result, maxTotalSteps) => {\r\n  if (!maxTotalSteps) {\r\n    return;\r\n  }\r\n  const infos = [result.perfect, result.great, result.good, result.bad, result.miss];\r\n  let fixableIndex = -1,\r\n    absentNumbersCount = 0,\r\n    localStepSum = 0;\r\n  for (let i = 0; i < 5; ++i) {\r\n    if (!_.isNumber(infos[i])) {\r\n      fixableIndex = i;\r\n      absentNumbersCount++;\r\n    } else {\r\n      localStepSum += infos[i];\r\n    }\r\n  }\r\n  if (absentNumbersCount === 1) {\r\n    result[['perfect', 'great', 'good', 'bad', 'miss'][fixableIndex]] =\r\n      maxTotalSteps - localStepSum;\r\n  }\r\n};\r\n\r\nconst guessGrade = result => {\r\n  if (result.misses === 0 && result.bads === 0 && result.goods === 0) {\r\n    if (result.greats === 0) {\r\n      return 'SSS';\r\n    } else {\r\n      return 'SS';\r\n    }\r\n  }\r\n  return result.grade;\r\n};\r\n\r\nconst mapResult = (res, players, chart) => {\r\n  if (typeof res.recognition_notes === 'undefined') {\r\n    // Short result, minimum info, only for ELO calculation\r\n    // Will be replaced with better result later\r\n    return {\r\n      isUnknownPlayer: players[res.player].arcade_name === 'PUMPITUP',\r\n      isIntermediateResult: true,\r\n      sharedChartId: res.shared_chart,\r\n      playerId: res.player,\r\n      nickname: players[res.player].nickname,\r\n      nicknameArcade: players[res.player].arcade_name,\r\n      date: res.gained,\r\n      dateObject: parseDate(res.gained),\r\n      grade: res.grade,\r\n      isExactDate: !!res.exact_gain_date,\r\n      score: res.score,\r\n      isRank: !!res.rank_mode,\r\n    };\r\n  }\r\n  // Full best result\r\n  let _r = {\r\n    isUnknownPlayer: players[res.player].arcade_name === 'PUMPITUP',\r\n    isIntermediateResult: false,\r\n    sharedChartId: res.shared_chart,\r\n    id: res.id,\r\n    playerId: res.player,\r\n    nickname: players[res.player].nickname,\r\n    nicknameArcade: players[res.player].arcade_name,\r\n    originalChartMix: res.original_mix,\r\n    originalChartLabel: res.original_label,\r\n    originalScore: res.original_score,\r\n    date: res.gained,\r\n    dateObject: parseDate(res.gained),\r\n    grade: res.grade !== '?' ? res.grade : guessGrade(res),\r\n    isExactDate: !!res.exact_gain_date,\r\n    score: res.score,\r\n    scoreIncrease: res.score_increase,\r\n    calories: res.calories && res.calories / 1000,\r\n    perfect: res.perfects,\r\n    great: res.greats,\r\n    good: res.goods,\r\n    bad: res.bads,\r\n    miss: res.misses,\r\n    combo: res.max_combo,\r\n    mods: res.mods_list,\r\n    isRank: !!res.rank_mode,\r\n    isHJ: (res.mods_list || '').split(' ').includes('HJ'),\r\n    isMachineBest: res.recognition_notes === 'machine_best',\r\n    isMyBest: res.recognition_notes === 'personal_best',\r\n  };\r\n\r\n  tryFixIncompleteResult(_r, chart.maxTotalSteps);\r\n\r\n  const perfects = Math.sqrt(_r.perfect) * 10;\r\n  const acc = perfects\r\n    ? Math.floor(\r\n        ((perfects * 100 + _r.great * 60 + _r.good * 30 + _r.miss * -20) /\r\n          (perfects + _r.great + _r.good + _r.bad + _r.miss)) *\r\n          100\r\n      ) / 100\r\n    : null;\r\n  const accRaw = _r.perfect\r\n    ? Math.floor(\r\n        ((_r.perfect * 100 + _r.great * 60 + _r.good * 30 + _r.miss * -20) /\r\n          (_r.perfect + _r.great + _r.good + _r.bad + _r.miss)) *\r\n          100\r\n      ) / 100\r\n    : null;\r\n\r\n  _r.accuracy = acc < 0 ? 0 : accRaw === 100 ? 100 : acc && +acc.toFixed(2);\r\n  _r.accuracyRaw = accRaw;\r\n  return _r;\r\n};\r\n\r\nconst getMaxScore = score => {\r\n  return ((score.score / score.accuracyRaw) * 100) / (score.isRank ? 1.2 : 1);\r\n};\r\n\r\nconst initializeProfile = (result, profiles) => {\r\n  const id = result.playerId;\r\n  const resultsByLevel = _.fromPairs(Array.from({ length: 28 }).map((x, i) => [i + 1, []]));\r\n  profiles[id] = {\r\n    name: result.nickname,\r\n    nameArcade: result.nicknameArcade,\r\n    resultsByGrade: {},\r\n    resultsByLevel,\r\n    lastResultDate: result.dateObject,\r\n    count: 0,\r\n    battleCount: 0,\r\n    countAcc: 0,\r\n    grades: { F: 0, D: 0, C: 0, B: 0, A: 0, S: 0, SS: 0, SSS: 0 },\r\n    sumAccuracy: 0,\r\n    rankingHistory: [],\r\n    ratingHistory: [],\r\n    lastPlace: null,\r\n    lastBattleDate: 0,\r\n  };\r\n  profiles[id].achievements = _.flow(\r\n    _.keys,\r\n    _.map(achName => [\r\n      achName,\r\n      { ...(achievements[achName].initialState || initialAchievementState) },\r\n    ]),\r\n    _.fromPairs\r\n  )(achievements);\r\n  profiles[id].exp = 0;\r\n};\r\n\r\nconst getProfileInfoFromResult = (result, chart, profiles) => {\r\n  const profile = profiles[result.playerId];\r\n\r\n  profile.count++;\r\n  if (result.accuracy) {\r\n    profile.countAcc++;\r\n    profile.sumAccuracy += result.accuracy;\r\n  }\r\n  profile.grades[result.grade.replace('+', '')]++;\r\n\r\n  if (chart.chartType !== 'COOP' && result.isBestGradeOnChart) {\r\n    profile.resultsByGrade[result.grade] = [\r\n      ...(profile.resultsByGrade[result.grade] || []),\r\n      { result, chart },\r\n    ];\r\n    profile.resultsByLevel[chart.chartLevel] = [\r\n      ...(profile.resultsByLevel[chart.chartLevel] || []),\r\n      { result, chart },\r\n    ];\r\n  }\r\n  if (result.isExactDate && profile.lastResultDate < result.dateObject) {\r\n    profile.lastResultDate = result.dateObject;\r\n  }\r\n  profile.achievements = _.mapValues.convert({ cap: false })((achState, achName) => {\r\n    return achievements[achName].resultFunction(result, chart, achState, profile);\r\n  }, profile.achievements);\r\n  profile.exp += getExp(result, chart);\r\n};\r\n\r\nconst processData = (data, tracklist) => {\r\n  const { players, results, shared_charts } = data;\r\n  //// Initialization\r\n  // Init for TOP\r\n  const mappedResults = [];\r\n  const getTopResultId = result => `${result.sharedChartId}-${result.playerId}-${result.isRank}`;\r\n  const getBestGradeResultId = result => `${result.sharedChartId}-${result.playerId}`;\r\n  const topResults = {}; // Temp object\r\n  const bestGradeResults = {}; // Temp object\r\n  const top = {}; // Main top scores pbject\r\n\r\n  // Battles for ELO calculation\r\n  const battles = [];\r\n  // Profiles for every player\r\n  let profiles = {};\r\n\r\n  // Loop 1\r\n  for (let resRaw of results) {\r\n    const sharedChartId = resRaw.shared_chart;\r\n    // Initialize Song\r\n    if (!top[sharedChartId]) {\r\n      const sharedChart = shared_charts[sharedChartId];\r\n      const label = _.toUpper(sharedChart.chart_label);\r\n      const [chartType, chartLevel] = label.match(/(\\D+)|(\\d+)/g);\r\n      top[sharedChartId] = {\r\n        song: sharedChart.track_name,\r\n        chartLabel: label,\r\n        chartLevel,\r\n        chartType,\r\n        duration: sharedChart.duration,\r\n        sharedChartId: sharedChartId,\r\n        maxTotalSteps: sharedChart.max_total_steps,\r\n        results: [],\r\n        totalResultsCount: 0,\r\n      };\r\n    }\r\n\r\n    // Getting current chart and result (mapped)\r\n    const chartTop = top[sharedChartId];\r\n    const result = mapResult(resRaw, players, chartTop);\r\n    mappedResults.push(result);\r\n\r\n    // Inserting result into TOP\r\n    const topResultId = getTopResultId(result);\r\n    const currentTopResult = topResults[topResultId];\r\n    if (!currentTopResult || currentTopResult.score < result.score) {\r\n      let oldScoreIndex = -1;\r\n      if (currentTopResult) {\r\n        oldScoreIndex = chartTop.results.indexOf(currentTopResult);\r\n        chartTop.results.splice(oldScoreIndex, 1);\r\n      }\r\n      const newScoreIndex = _.sortedLastIndexBy(r => -r.score, result, chartTop.results);\r\n      if (!result.isUnknownPlayer || newScoreIndex === 0) {\r\n        chartTop.results.splice(newScoreIndex, 0, result);\r\n        chartTop.latestScoreDate = result.date;\r\n      }\r\n      chartTop.totalResultsCount++;\r\n      topResults[topResultId] = result;\r\n\r\n      if (!result.isUnknownPlayer) {\r\n        chartTop.results.forEach(enemyResult => {\r\n          if (\r\n            !enemyResult.isUnknownPlayer &&\r\n            enemyResult.isRank === result.isRank &&\r\n            enemyResult.playerId !== result.playerId &&\r\n            result.score &&\r\n            enemyResult.score\r\n          ) {\r\n            battles.push([result, enemyResult, chartTop]);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    // Getting best grade of player on this chart\r\n    if (!result.isIntermediateResult) {\r\n      const bestGradeResultId = getBestGradeResultId(result);\r\n      const currentBestGradeRes = bestGradeResults[bestGradeResultId];\r\n      if (\r\n        !currentBestGradeRes ||\r\n        gradeComparator[currentBestGradeRes.grade] <= gradeComparator[result.grade]\r\n      ) {\r\n        // Using <= here, so newer scores always win and rewrite old scores\r\n        currentBestGradeRes && (currentBestGradeRes.isBestGradeOnChart = false);\r\n        result.isBestGradeOnChart = true;\r\n        bestGradeResults[bestGradeResultId] = result;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Loop 2, when the TOP is already set up\r\n  for (let chartId in top) {\r\n    const chart = top[chartId];\r\n    chart.maxScoreWithAccuracy = 0;\r\n    for (let result of chart.results) {\r\n      if (result.accuracyRaw && chart.maxScoreWithAccuracy < result.score) {\r\n        chart.maxScoreResult = result;\r\n        chart.maxScoreWithAccuracy = result.score;\r\n      }\r\n      // Getting some info about players\r\n      if (!result.isUnknownPlayer && !result.isIntermediateResult) {\r\n        if (!profiles[result.playerId]) {\r\n          initializeProfile(result, profiles);\r\n        }\r\n        getProfileInfoFromResult(result, chart, profiles);\r\n      }\r\n    }\r\n    if (chart.maxScoreWithAccuracy) {\r\n      chart.maxScore = getMaxScore(chart.maxScoreResult, chart);\r\n    }\r\n  }\r\n\r\n  // Calculate Progress achievements and bonus for starting Elo\r\n  profiles = postProcessProfiles(profiles, tracklist);\r\n  // Calculate ELO\r\n  processBattles({ battles, profiles });\r\n\r\n  return { mappedResults, profiles, sharedCharts: top };\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n        players: action.players,\r\n        profiles: action.profiles,\r\n        results: action.results,\r\n        sharedCharts: action.sharedCharts,\r\n      };\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    case RANKING_CHANGE_SET:\r\n      const hasPrevList = !_.isEmpty(action.listPrev);\r\n      return {\r\n        ...state,\r\n        profiles: _.mapValues(playerOriginal => {\r\n          const player = {\r\n            ...playerOriginal,\r\n            prevRating: _.get(playerOriginal.id, action.rankingsPointsMap),\r\n          };\r\n          if (!hasPrevList) {\r\n            return player; // First time opening this thing and we didn't have any previous data\r\n          }\r\n          if (!_.includes(player.id, action.listPrev)) {\r\n            return { ...player, change: 'NEW' };\r\n          } else if (!_.includes(player.id, action.listNow)) {\r\n            // Should NEVER happen, idk if this is possible\r\n            return { ...player, change: '?' };\r\n          } else {\r\n            return {\r\n              ...player,\r\n              change: _.indexOf(player.id, action.listPrev) - _.indexOf(player.id, action.listNow),\r\n            };\r\n          }\r\n        }, state.profiles),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchResults = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await fetchJson({\r\n        url: `${HOST}/results/highscores`,\r\n      });\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n      const { tracklist } = getState();\r\n      const { sharedCharts, mappedResults, profiles } = processData(data, tracklist);\r\n\r\n      dispatch({\r\n        type: SUCCESS,\r\n        data: _.values(sharedCharts),\r\n        players: _.flow(\r\n          _.toPairs,\r\n          _.map(([id, player]) => ({ ...player, id: _.toInteger(id) }))\r\n        )(data.players),\r\n        results: mappedResults,\r\n        profiles,\r\n        sharedCharts,\r\n      });\r\n      dispatch(calculateRankingChanges(profiles));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\n\r\nexport const resetFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n\r\nconst getListOfNames = _.map('id');\r\nconst getMapOfRatings = _.flow(\r\n  _.map(q => [q.id, q.rating]),\r\n  _.fromPairs\r\n);\r\n\r\nexport const calculateRankingChanges = profiles => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const ranking = _.orderBy('ratingRaw', 'desc', _.values(profiles));\r\n      const [lastChangedRanking, lastChangedRankingPoints, lastFetchedRanking] = await Promise.all([\r\n        localForage.getItem('lastChangedRanking_v3'),\r\n        localForage.getItem('lastChangedRankingPoints_v3'),\r\n        localForage.getItem('lastFetchedRanking_v3'),\r\n      ]);\r\n      const listNow = getListOfNames(ranking);\r\n      const listLastFetched = getListOfNames(lastFetchedRanking);\r\n      const listLastChanged = getListOfNames(lastChangedRanking);\r\n      const mapPointsNow = getMapOfRatings(ranking);\r\n      const mapPointsLastFetched = getMapOfRatings(lastFetchedRanking);\r\n      const mapPointsLastChanged = getMapOfRatings(lastChangedRankingPoints);\r\n\r\n      let rankingsPointsMap = mapPointsLastChanged;\r\n      // console.log(listNow, listLastFetched, listLastChanged);\r\n      // console.log(mapPointsNow, mapPointsLastFetched, mapPointsLastChanged);\r\n      if (!_.isEqual(mapPointsNow, mapPointsLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRankingPoints_v3', lastFetchedRanking);\r\n        rankingsPointsMap = mapPointsLastFetched;\r\n      }\r\n      let listPrev = listLastChanged;\r\n      if (!_.isEqual(listNow, listLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRanking_v3', lastFetchedRanking);\r\n        listPrev = listLastFetched;\r\n      }\r\n      dispatch({\r\n        type: RANKING_CHANGE_SET,\r\n        listNow,\r\n        listPrev,\r\n        rankingsPointsMap,\r\n      });\r\n      localForage.setItem('lastFetchedRanking_v3', ranking);\r\n    } catch (error) {\r\n      console.warn('Cannot get ranking from local storage', error);\r\n    }\r\n  };\r\n};\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\n\r\nimport { setFilter } from 'reducers/results';\r\n\r\nconst SELECT_PRESET = `PRESETS/SELECT_PRESET`;\r\nconst LOAD_PRESETS = `PRESETS/LOAD_PRESETS`;\r\nconst LOADING_START = `PRESETS/LOADING_START`;\r\nconst LOADING_END = `PRESETS/LOADING_END`;\r\n\r\nconst initialState = {\r\n  presets: [],\r\n  currentPreset: null,\r\n  isLoading: false,\r\n};\r\n\r\nconst itemToOption = item =>\r\n  item && {\r\n    ...item,\r\n    label: item.name,\r\n    value: item.name,\r\n  };\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_PRESETS:\r\n      const currentPreset = _.find({ name: _.get('name', state.currentPreset) }, action.presets);\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(currentPreset) || null,\r\n        presets: _.map(itemToOption, action.presets),\r\n      };\r\n    case SELECT_PRESET:\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(action.currentPreset),\r\n      };\r\n    case LOADING_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case LOADING_END:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst reloadPresets = presets => ({ type: LOAD_PRESETS, presets: presets || [] });\r\n\r\nconst startLoading = () => ({\r\n  type: LOADING_START,\r\n});\r\n\r\nconst endLoading = () => ({\r\n  type: LOADING_END,\r\n});\r\n\r\nexport const selectPreset = currentPreset => ({\r\n  type: SELECT_PRESET,\r\n  currentPreset,\r\n});\r\n\r\nexport const loadPresets = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    dispatch(reloadPresets(presets));\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const savePreset = name => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const { filter } = getState().top;\r\n    const newPreset = { name, filter };\r\n    if (!_.some({ name }, presets)) {\r\n      const newPresets = [...(presets || []), newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      dispatch(selectPreset(newPreset));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    } else if (window.confirm('Preset with this name already exists, replace it?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      const newPresets = [...withoutOldPreset, newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const openPreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const currentPreset = getState().presets.currentPreset;\r\n  const name = _.get('name', currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = name && _.find({ name }, presets);\r\n    if (preset) {\r\n      dispatch(selectPreset(currentPreset));\r\n      dispatch(setFilter(currentPreset.filter));\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const deletePreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const name = _.get('name', getState().presets.currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = _.find({ name }, presets);\r\n    if (preset && window.confirm('Are you sure you want to delete selected preset?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      dispatch(reloadPresets(withoutOldPreset));\r\n      localForage.setItem('filterPresets', withoutOldPreset);\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaLayerGroup, FaFolderOpen, FaSave, FaPlus, FaTrashAlt } from 'react-icons/fa';\r\nimport Select from 'react-select';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport Input from 'components/Shared/Input/Input';\r\n\r\nimport { loadPresets, savePreset, selectPreset, openPreset, deletePreset } from 'reducers/presets';\r\n\r\nconst overlayItem = (\r\n  <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n    <FaLayerGroup />\r\n    пресеты\r\n  </button>\r\n);\r\n\r\nconst noPresetsMessage = () => 'пусто';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ...state.presets,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  loadPresets,\r\n  savePreset,\r\n  openPreset,\r\n  deletePreset,\r\n  selectPreset,\r\n};\r\n\r\nclass PresetsControl extends React.Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    this.props.loadPresets();\r\n  }\r\n\r\n  onChangeSelection = selected => {\r\n    this.props.selectPreset(selected.name);\r\n  };\r\n\r\n  onRewritePreset = () => {\r\n    const { currentPreset } = this.props;\r\n    this.props.savePreset(currentPreset.name);\r\n  };\r\n\r\n  onSavePreset = () => {\r\n    const { name } = this.state;\r\n    this.props.savePreset(name);\r\n    this.setState({ isAddingNew: false });\r\n  };\r\n\r\n  render() {\r\n    const { presets, currentPreset, isLoading } = this.props;\r\n    const { name, isAddingNew } = this.state;\r\n    return (\r\n      <div>\r\n        <Overlay overlayItem={overlayItem}>\r\n          <div className=\"presets-control-overlay\">\r\n            <Select\r\n              className=\"select _margin-bottom\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"пресеты...\"\r\n              options={presets}\r\n              value={currentPreset}\r\n              onChange={this.props.selectPreset}\r\n              noOptionsMessage={noPresetsMessage}\r\n            />\r\n            {currentPreset && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.props.openPreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaFolderOpen /> открыть\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.onRewritePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaSave /> перезаписать\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon\"\r\n                  onClick={this.props.deletePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaTrashAlt /> удалить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {!isAddingNew && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left _self-align-end\"\r\n                  onClick={() => this.setState({ isAddingNew: true })}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaPlus /> добавить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {isAddingNew && (\r\n              <div className=\"adding-new _margin-bottom\">\r\n                <Input\r\n                  value={name}\r\n                  placeholder=\"имя пресета...\"\r\n                  className=\"form-control\"\r\n                  onChange={name => this.setState({ name })}\r\n                />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={this.onSavePreset}\r\n                  disabled={!name || isLoading}\r\n                >\r\n                  <FaSave /> сохранить\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={() => this.setState({ isAddingNew: false })}\r\n                  disabled={isLoading}\r\n                >\r\n                  отмена\r\n                </button>\r\n              </div>\r\n            )}\r\n            {/* <div>\r\n              <Toggle\r\n                checked={false}\r\n                onToggle={active => {\r\n                  localForage.setItem('showTabs', active);\r\n                }}\r\n              >\r\n                показывать табы с пресетами\r\n              </Toggle>\r\n            </div> */}\r\n          </div>\r\n        </Overlay>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PresetsControl);\r\n","import React from 'react';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport moment from 'moment';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\n\r\nconst timeStyle = {\r\n  flavour: 'long',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nexport const tooltipFormatter = result => {\r\n  if (!result.isExactDate) {\r\n    const resultType =\r\n      result.isMyBest === undefined && result.isMachineBest === undefined\r\n        ? 'с my best или machine best'\r\n        : result.isMyBest\r\n        ? 'с my best'\r\n        : result.isMachineBest\r\n        ? 'с machine best'\r\n        : 'хз откуда';\r\n    return (\r\n      <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n        <div>точная дата взятия неизвестна</div>\r\n        <div>скор был записан {resultType}</div>\r\n        <div>дата записи: {result.dateObject.toLocaleDateString()}</div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return result.dateObject.toLocaleDateString();\r\n  }\r\n};\r\n\r\nexport const getTimeAgo = date => {\r\n  const dayDiff = moment()\r\n    .startOf('day')\r\n    .diff(moment(date).startOf('day'), 'days');\r\n  return dayDiff === 0 ? 'сегодня' : dayDiff === 1 ? 'вчера' : timeAgo.format(date, timeStyle);\r\n};\r\n","export const colorsArray = [\r\n  '#4DB3FF',\r\n  '#80B300',\r\n  '#FF6655',\r\n  '#FF99E6',\r\n  '#33FFCC',\r\n  '#e633c8',\r\n  '#dbe812',\r\n  '#FF1A66',\r\n  '#991AFF',\r\n  '#E6B333',\r\n  '#1AB399',\r\n  '#4D8066',\r\n  '#CC9999',\r\n  '#00E680',\r\n  '#809980',\r\n  '#E6FF80',\r\n  '#1AFF33',\r\n  '#999933',\r\n  '#E6331A',\r\n  '#CCCC00',\r\n  '#66E64D',\r\n  '#4D80CC',\r\n  '#9900B3',\r\n  '#4DB380',\r\n  '#FF4D4D',\r\n];\r\n","import _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport matchSorter from 'match-sorter';\r\n\r\nimport { SORT, CHART_MIN_MAX, DURATION_DEFAULT } from 'constants/leaderboard';\r\n\r\nexport const playersSelector = createSelector(\r\n  state => state.results.players,\r\n  _.flow(\r\n    _.toPairs,\r\n    _.map(([id, { nickname, arcade_name }]) => ({\r\n      label: `${nickname} (${arcade_name})`,\r\n      value: nickname,\r\n    })),\r\n    _.sortBy(it => _.toLower(it.label))\r\n  )\r\n);\r\n\r\nconst filterCharts = (filter, rows) => {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filter);\r\n  const type = _.getOr(null, 'type', filter);\r\n  const duration = _.getOr(DURATION_DEFAULT, 'duration', filter);\r\n\r\n  return _.filter(row => {\r\n    if (duration !== DURATION_DEFAULT && !duration.includes(row.duration)) {\r\n      return false;\r\n    }\r\n    return (\r\n      row.chartLevel >= range[0] &&\r\n      row.chartLevel <= range[1] &&\r\n      (!type || row.chartType.startsWith(type))\r\n    );\r\n  }, rows);\r\n};\r\n\r\nconst getFilteredData = (data, filter) => {\r\n  // const start = performance.now();\r\n  const names = _.map('value', filter.players);\r\n  const namesOr = _.map('value', filter.playersOr);\r\n  const namesNot = _.map('value', filter.playersNot);\r\n  const sortingType = _.get('value', filter.sortingType);\r\n  const protagonist = _.get('value', filter.protagonist);\r\n  const excludeAntagonists = _.map('value', filter.excludeAntagonists);\r\n\r\n  const defaultSorting = [_.orderBy(['latestScoreDate'], ['desc'])];\r\n  const newScoresProtagonistSorting = !protagonist\r\n    ? defaultSorting\r\n    : [\r\n        _.orderBy(\r\n          [\r\n            song =>\r\n              _.max(\r\n                _.map(\r\n                  res => (res.nickname === protagonist ? res.dateObject.getTime() : 0),\r\n                  song.results\r\n                )\r\n              ),\r\n          ],\r\n          ['desc']\r\n        ),\r\n      ];\r\n  const protagonistSorting = [\r\n    _.filter(row => _.map('nickname', row.results).includes(protagonist)),\r\n    _.map(row => {\r\n      const protIndex = _.findIndex({ nickname: protagonist }, row.results);\r\n      const protScore = row.results[protIndex].score;\r\n      const enemies = _.flow([\r\n        _.take(protIndex),\r\n        _.uniqBy('nickname'),\r\n        _.remove(res => excludeAntagonists.includes(res.nickname) || res.score === protScore),\r\n      ])(row.results);\r\n      const distance = Math.sqrt(\r\n        _.reduce((dist, enemy) => dist + (enemy.score / protScore - 0.99) ** 2, 0, enemies)\r\n      );\r\n      return {\r\n        ...row,\r\n        distanceFromProtagonist: distance,\r\n      };\r\n    }),\r\n    _.orderBy(['distanceFromProtagonist'], ['desc']),\r\n  ];\r\n  const getScoreSorting = direction => [\r\n    _.filter(row => _.map('nickname', row.results).includes(protagonist)),\r\n    _.orderBy(\r\n      [\r\n        row => {\r\n          return _.getOr(\r\n            direction === 'asc' ? Infinity : -Infinity,\r\n            'ratingDiff',\r\n            _.find({ nickname: protagonist }, row.results)\r\n          );\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const sortingFunctions =\r\n    {\r\n      [SORT.DEFAULT]: defaultSorting,\r\n      [SORT.NEW_SCORES_PLAYER]: newScoresProtagonistSorting,\r\n      [SORT.PROTAGONIST]: protagonistSorting,\r\n      [SORT.RANK_ASC]: getScoreSorting('asc'),\r\n      [SORT.RANK_DESC]: getScoreSorting('desc'),\r\n    }[sortingType] || defaultSorting;\r\n\r\n  const result = _.flow(\r\n    _.compact([\r\n      _.map(row => ({\r\n        ...row,\r\n        results: row.results.filter(\r\n          (res, index) => !res.isUnknownPlayer || index === 0,\r\n          row.results\r\n        ),\r\n      })),\r\n      filter.chartRange && (items => filterCharts(filter.chartRange, items)),\r\n      !filter.showRank &&\r\n        _.map(row => ({ ...row, results: _.filter(res => !res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        filter.showOnlyRank &&\r\n        _.map(row => ({ ...row, results: _.filter(res => res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        !filter.showOnlyRank &&\r\n        !filter.showRankAndNorank &&\r\n        _.map(row => {\r\n          const occuredNames = [];\r\n          return {\r\n            ...row,\r\n            results: _.filter(res => {\r\n              const alreadyOccured = occuredNames.includes(res.nickname);\r\n              occuredNames.push(res.nickname);\r\n              return !alreadyOccured;\r\n            }, row.results),\r\n          };\r\n        }),\r\n      (names.length || namesOr.length || namesNot.length) &&\r\n        _.filter(row => {\r\n          const rowNames = _.map('nickname', row.results);\r\n          return (\r\n            (!names.length || _.every(name => rowNames.includes(name), names)) &&\r\n            (!namesOr.length || _.some(name => rowNames.includes(name), namesOr)) &&\r\n            (!namesNot.length || !_.some(name => rowNames.includes(name), namesNot))\r\n          );\r\n        }),\r\n      _.filter(row => _.size(row.results)),\r\n      ...sortingFunctions,\r\n      filter.song && (items => matchSorter(items, filter.song, { keys: ['song'] })),\r\n    ])\r\n  )(data);\r\n  // console.log('Elapsed:', performance.now() - start);\r\n  return result;\r\n};\r\n\r\nexport const filteredDataSelector = createSelector(\r\n  state => state.results.data,\r\n  state => state.results.filter,\r\n  getFilteredData\r\n);\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash/fp';\r\nimport Select from 'react-select';\r\nimport classNames from 'classnames';\r\nimport numeral from 'numeral';\r\nimport localForage from 'localforage';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport {\r\n  FaRedoAlt,\r\n  FaExclamationTriangle,\r\n  FaSearch,\r\n  FaYoutube,\r\n  FaAngleDoubleUp,\r\n  FaBackward,\r\n  FaForward,\r\n} from 'react-icons/fa';\r\nimport FlipMove from 'react-flip-move';\r\n\r\n// styles\r\nimport './leaderboard.scss';\r\n\r\n// components\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport CollapsibleBar from 'components/Shared/CollapsibleBar';\r\nimport ChartFilter from './ChartFilter';\r\nimport PresetsControl from './PresetsControl';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\nimport { SORT } from 'constants/leaderboard';\r\nimport { DEBUG } from 'constants/env';\r\n\r\n// reducers\r\nimport { fetchResults, setFilter, resetFilter, defaultFilter } from 'reducers/results';\r\nimport { selectPreset, openPreset } from 'reducers/presets';\r\n\r\n// utils\r\nimport { getExp } from 'utils/exp';\r\nimport { tooltipFormatter, getTimeAgo } from 'utils/leaderboards';\r\nimport { colorsArray } from 'utils/colors';\r\nimport { playersSelector, filteredDataSelector } from 'reducers/selectors';\r\n\r\n// code\r\nconst ANIMATION_DURATION = 250;\r\nconst sortingOptions = [\r\n  {\r\n    label: 'от новых скоров',\r\n    value: SORT.DEFAULT,\r\n  },\r\n  {\r\n    label: 'от новых скоров конкретного игрока',\r\n    value: SORT.NEW_SCORES_PLAYER,\r\n  },\r\n  // {\r\n  //   label: 'отставанию от остальных',\r\n  //   value: SORT.PROTAGONIST,\r\n  // },\r\n  // ...(DEBUG\r\n  //   ? [\r\n  {\r\n    label: 'от худших результатов',\r\n    value: SORT.RANK_ASC,\r\n  },\r\n  {\r\n    label: 'от лучших результатов',\r\n    value: SORT.RANK_DESC,\r\n  },\r\n  //   ]\r\n  // : []),\r\n];\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    players: playersSelector(state),\r\n    results: state.results.results,\r\n    filteredData: filteredDataSelector(state),\r\n    data: state.results.data,\r\n    filter: state.results.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading: state.results.isLoading || state.tracklist.isLoading,\r\n    presets: state.presets.presets,\r\n    currentPreset: state.presets.currentPreset,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setFilter,\r\n  resetFilter,\r\n  selectPreset,\r\n  openPreset,\r\n};\r\n\r\nclass Leaderboard extends Component {\r\n  static propTypes = {\r\n    match: toBe.object,\r\n    data: toBe.array,\r\n    error: toBe.object,\r\n    results: toBe.array,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  state = { showItemsCount: 20, chartOverrides: {} };\r\n\r\n  setFilter = _.curry((name, value) => {\r\n    const filter = { ...this.props.filter, [name]: value };\r\n    this.props.setFilter(filter);\r\n    localForage.setItem('filter', filter);\r\n  });\r\n\r\n  resetFilter = () => {\r\n    this.props.resetFilter();\r\n    this.setState({ chartOverrides: {} });\r\n    localForage.setItem('filter', defaultFilter);\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    this.setState({ chartOverrides: {} });\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onTypeSongName = _.debounce(300, value => {\r\n    this.setFilter('song', value);\r\n  });\r\n\r\n  onRedoLatestResult = _.throttle(ANIMATION_DURATION + 10, chart => {\r\n    const overrides = _.drop(1, this.state.chartOverrides[chart.sharedChartId]);\r\n    this.setState(state => ({\r\n      chartOverrides: {\r\n        ...state.chartOverrides,\r\n        [chart.sharedChartId]: _.size(overrides) === 1 ? null : overrides,\r\n      },\r\n    }));\r\n  });\r\n\r\n  onUndoLatestResult = _.throttle(ANIMATION_DURATION + 10, chart => {\r\n    if (_.isEmpty(chart.results)) {\r\n      this.setState(state => ({\r\n        chartOverrides: _.omit(chart.sharedChartId, state.chartOverrides),\r\n      }));\r\n    }\r\n    const undoedResult = _.maxBy('date', chart.results);\r\n    if (!undoedResult) return;\r\n\r\n    const { results } = this.props;\r\n    const undoedPlayerId = undoedResult.playerId;\r\n    const previousPlayerResult = _.findLast(\r\n      res =>\r\n        res.playerId === undoedPlayerId &&\r\n        res.sharedChartId === chart.sharedChartId &&\r\n        res.isRank === undoedResult.isRank &&\r\n        res.date < undoedResult.date,\r\n      results\r\n    );\r\n    const newResults = _.orderBy(\r\n      'score',\r\n      'desc',\r\n      _.compact(_.map(res => (res === undoedResult ? previousPlayerResult : res), chart.results))\r\n    );\r\n    const latestScore = _.maxBy('date', newResults);\r\n    const overrideChart = {\r\n      ...chart,\r\n      latestScoreDate: latestScore && latestScore.date,\r\n      results: newResults,\r\n    };\r\n    if (_.isEmpty(newResults)) {\r\n      this.setState(state => ({\r\n        chartOverrides: {\r\n          ...state.chartOverrides,\r\n          [chart.sharedChartId]: null,\r\n        },\r\n      }));\r\n    } else {\r\n      this.setState(state => ({\r\n        chartOverrides: {\r\n          ...state.chartOverrides,\r\n          [chart.sharedChartId]: [\r\n            overrideChart,\r\n            ...(state.chartOverrides[chart.sharedChartId] || [chart]),\r\n          ],\r\n        },\r\n      }));\r\n    }\r\n  });\r\n\r\n  renderSimpleSearch() {\r\n    const { isLoading, filter } = this.props;\r\n    return (\r\n      <div className=\"simple-search\">\r\n        <div className=\"song-name _margin-right _margin-bottom\">\r\n          <Input\r\n            value={filter.song || ''}\r\n            placeholder=\"название песни...\"\r\n            className=\"form-control\"\r\n            onChange={this.onTypeSongName}\r\n          />\r\n        </div>\r\n        <div className=\"chart-range _margin-right _margin-bottom\">\r\n          <ChartFilter filterValue={filter.chartRange} onChange={this.setFilter('chartRange')} />\r\n        </div>\r\n        <div className=\"_flex-fill\" />\r\n        <div className=\"_flex-row _margin-bottom\">\r\n          <PresetsControl />\r\n          <button className=\"btn btn-sm btn-dark btn-icon _margin-right\" onClick={this.resetFilter}>\r\n            <FaRedoAlt /> сбросить фильтры\r\n          </button>\r\n          <button\r\n            disabled={isLoading}\r\n            className=\"btn btn-sm btn-dark btn-icon\"\r\n            onClick={this.onRefresh}\r\n          >\r\n            <FaSearch /> обновить\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFilters() {\r\n    const { players, filter } = this.props;\r\n\r\n    return (\r\n      <div className=\"filters\">\r\n        <div className=\"people-filters\">\r\n          <label className=\"label\">показывать чарты, которые сыграл:</label>\r\n          <div className=\"players-block\">\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">каждый из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'players', filter)}\r\n                onChange={this.setFilter('players')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и хоть один из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersOr', filter)}\r\n                onChange={this.setFilter('playersOr')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и никто из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersNot', filter)}\r\n                onChange={this.setFilter('playersNot')}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Toggle\r\n            checked={_.getOr(false, 'showRank', filter)}\r\n            onChange={this.setFilter('showRank')}\r\n          >\r\n            показывать скоры на ранке\r\n          </Toggle>\r\n        </div>\r\n        {_.get('showRank', filter) && (\r\n          <>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showOnlyRank', filter)}\r\n                onChange={value => {\r\n                  this.setFilter('showOnlyRank', value);\r\n                  if (_.get('showRankAndNorank', filter)) {\r\n                    this.setFilter('showRankAndNorank', false);\r\n                  }\r\n                }}\r\n              >\r\n                <strong>только</strong> на ранке\r\n              </Toggle>\r\n            </div>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showRankAndNorank', filter)}\r\n                onChange={value => {\r\n                  this.setFilter('showRankAndNorank', value);\r\n                  if (_.get('showOnlyRank', filter)) {\r\n                    this.setFilter('showOnlyRank', false);\r\n                  }\r\n                }}\r\n              >\r\n                показывать лучшие скоры с ранком и без\r\n              </Toggle>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSortings() {\r\n    const { players, filter } = this.props;\r\n    return (\r\n      <div className=\"sortings\">\r\n        <div>\r\n          <label className=\"label\">сортировка:</label>\r\n          <Select\r\n            placeholder=\"выберите сортировку\"\r\n            className=\"select\"\r\n            classNamePrefix=\"select\"\r\n            isClearable={false}\r\n            options={sortingOptions}\r\n            value={_.getOr(sortingOptions[0], 'sortingType', filter)}\r\n            onChange={this.setFilter('sortingType')}\r\n          />\r\n        </div>\r\n        {[SORT.PROTAGONIST, SORT.RANK_ASC, SORT.RANK_DESC, SORT.NEW_SCORES_PLAYER].includes(\r\n          _.get('sortingType.value', filter)\r\n        ) && (\r\n          <div>\r\n            <label className=\"label\">игрок:</label>\r\n            <Select\r\n              className={classNames('select players', {\r\n                'red-border': !_.get('protagonist', filter),\r\n              })}\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              value={_.getOr(null, 'protagonist', filter)}\r\n              onChange={this.setFilter('protagonist')}\r\n            />\r\n          </div>\r\n        )}\r\n        {[SORT.PROTAGONIST].includes(_.get('sortingType.value', filter)) && (\r\n          <div>\r\n            <label className=\"label\">не учитывать в сравнении:</label>\r\n            <Select\r\n              closeMenuOnSelect={false}\r\n              className=\"select players\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              isMulti\r\n              value={_.getOr([], 'excludeAntagonists', filter)}\r\n              onChange={this.setFilter('excludeAntagonists')}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, filteredData, error, filter } = this.props;\r\n    const { showItemsCount, chartOverrides } = this.state;\r\n    const canShowMore = filteredData.length > showItemsCount;\r\n    const visibleData = _.slice(0, showItemsCount, filteredData);\r\n\r\n    const showProtagonistRatingChange = [SORT.PROTAGONIST, SORT.RANK_ASC, SORT.RANK_DESC].includes(\r\n      _.get('sortingType.value', filter)\r\n    );\r\n    const highlightProtagonist = [\r\n      SORT.PROTAGONIST,\r\n      SORT.RANK_ASC,\r\n      SORT.RANK_DESC,\r\n      SORT.NEW_SCORES_PLAYER,\r\n    ].includes(_.get('sortingType.value', filter));\r\n    const protagonistName = _.get('protagonist.value', filter);\r\n    const uniqueSelectedNames = _.slice(\r\n      0,\r\n      colorsArray.length,\r\n      _.uniq(\r\n        _.compact([\r\n          highlightProtagonist && protagonistName,\r\n          ..._.map('value', filter.players),\r\n          ..._.map('value', filter.playersOr),\r\n        ])\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div className=\"leaderboard-page\">\r\n        <div className=\"content\">\r\n          <div className=\"search-block\">\r\n            {this.renderSimpleSearch()}\r\n            <CollapsibleBar title=\"фильтры\">{this.renderFilters()}</CollapsibleBar>\r\n            <CollapsibleBar title=\"сортировка\">{this.renderSortings()}</CollapsibleBar>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!!this.props.presets.length && (\r\n            <div className=\"presets-buttons\">\r\n              <span>пресеты:</span>\r\n              {this.props.presets.map(preset => (\r\n                <ToggleButton\r\n                  key={preset.name}\r\n                  text={preset.name}\r\n                  className=\"btn btn-sm btn-dark _margin-right\"\r\n                  active={_.get('filter', preset) === this.props.filter}\r\n                  onToggle={() => {\r\n                    this.props.selectPreset(preset);\r\n                    this.props.openPreset();\r\n                  }}\r\n                ></ToggleButton>\r\n              ))}\r\n            </div>\r\n          )}\r\n          <div className=\"top-list\">\r\n            {_.isEmpty(filteredData) && !isLoading && (error ? error.message : 'ничего не найдено')}\r\n            {!isLoading &&\r\n              visibleData.map((chartOriginal, chartIndex) => {\r\n                const overrides = chartOverrides[chartOriginal.sharedChartId];\r\n                const chart = _.first(overrides) || chartOriginal;\r\n                if (DEBUG) console.log(chart);\r\n                let topPlace = 1;\r\n                const occuredNicknames = [];\r\n                const results = chart.results.map((res, index) => {\r\n                  const isSecondOccurenceInResults = occuredNicknames.includes(res.nickname);\r\n                  occuredNicknames.push(res.nickname);\r\n                  if (index === 0) {\r\n                    topPlace = 1;\r\n                  } else if (\r\n                    !isSecondOccurenceInResults &&\r\n                    res.score !== _.get([index - 1, 'score'], chart.results)\r\n                  ) {\r\n                    topPlace += 1;\r\n                  }\r\n                  return {\r\n                    ...res,\r\n                    topPlace,\r\n                    isSecondOccurenceInResults,\r\n                  };\r\n                });\r\n                return (\r\n                  <div className=\"song-block\" key={chart.song + chart.chartLabel}>\r\n                    <div className=\"song-name\">\r\n                      <div\r\n                        className={classNames('chart-name', {\r\n                          single: chart.chartType === 'S',\r\n                          singlep: chart.chartType === 'SP',\r\n                          doublep: chart.chartType === 'DP',\r\n                          double: chart.chartType === 'D',\r\n                          coop: chart.chartType === 'COOP',\r\n                        })}\r\n                      >\r\n                        <span className=\"chart-letter\">{chart.chartType}</span>\r\n                        <span className=\"chart-number\">{chart.chartLevel}</span>\r\n                      </div>\r\n                      <div>{chart.song}</div>\r\n                      <div className=\"youtube-link\">\r\n                        <a\r\n                          href={`https://youtube.com/results?search_query=${chart.song\r\n                            .replace(/ /g, '+')\r\n                            .replace(/-/g, '')}+${chart.chartLabel}`}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          <FaYoutube />\r\n                        </a>\r\n                      </div>\r\n                      <div className=\"_flex-fill\" />\r\n                      {(() => {\r\n                        const isActive = !_.isEmpty(overrides);\r\n                        const currentIndex = isActive\r\n                          ? 1 + chart.totalResultsCount - _.size(overrides)\r\n                          : chart.totalResultsCount;\r\n                        const canUndo = !(currentIndex === 1 && chart.totalResultsCount === 1);\r\n                        return (\r\n                          <div\r\n                            className={classNames('undo-result-button', {\r\n                              active: isActive,\r\n                            })}\r\n                          >\r\n                            <FaBackward\r\n                              className={classNames('backward-btn', { disabled: !canUndo })}\r\n                              onClick={() => canUndo && this.onUndoLatestResult(chart)}\r\n                            />\r\n                            <span className=\"number\">\r\n                              {currentIndex}/{chart.totalResultsCount}\r\n                            </span>\r\n                            <FaForward\r\n                              className={classNames('forward-btn', { disabled: !isActive })}\r\n                              onClick={() => isActive && this.onRedoLatestResult(chart)}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      })()}\r\n                    </div>\r\n                    <div className=\"charts\">\r\n                      {!_.isEmpty(results) && (\r\n                        <div className=\"chart\">\r\n                          <div className=\"results\">\r\n                            <table>\r\n                              {chartIndex === 0 && (\r\n                                <thead>\r\n                                  <tr>\r\n                                    <th className=\"place\"></th>\r\n                                    <th className=\"nickname\"></th>\r\n                                    <th className=\"judge\"></th>\r\n                                    <th className=\"score\">score</th>\r\n                                    <th className=\"grade\"></th>\r\n                                    <th className=\"number\">miss</th>\r\n                                    <th className=\"number\">bad</th>\r\n                                    <th className=\"number\">good</th>\r\n                                    <th className=\"number\">great</th>\r\n                                    <th className=\"number\">perfect</th>\r\n                                    <th className=\"combo\">combo</th>\r\n                                    <th className=\"accuracy\">accuracy</th>\r\n                                    <th className=\"date\"></th>\r\n                                  </tr>\r\n                                </thead>\r\n                              )}\r\n                              <FlipMove\r\n                                enterAnimation=\"fade\"\r\n                                leaveAnimation=\"fade\"\r\n                                typeName=\"tbody\"\r\n                                maintainContainerHeight\r\n                                duration={ANIMATION_DURATION}\r\n                              >\r\n                                {results.map((res, index) => {\r\n                                  if (res.isUnknownPlayer && index !== 0) {\r\n                                    return null;\r\n                                  }\r\n                                  const nameIndex = uniqueSelectedNames.indexOf(res.nickname);\r\n                                  let placeDifference, newIndex;\r\n                                  if (res.scoreIncrease && res.date === chart.latestScoreDate) {\r\n                                    const prevScore = res.score - res.scoreIncrease;\r\n                                    newIndex = _.findLastIndex(\r\n                                      res => res.score > prevScore,\r\n                                      results\r\n                                    );\r\n                                    placeDifference = newIndex - index;\r\n                                  }\r\n                                  return (\r\n                                    <tr\r\n                                      key={res.isRank + '_' + res.nickname}\r\n                                      className={classNames({\r\n                                        empty: !res.isExactDate,\r\n                                        latest: res.date === chart.latestScoreDate,\r\n                                      })}\r\n                                    >\r\n                                      <td className=\"place\">\r\n                                        {res.isSecondOccurenceInResults ? '' : `#${res.topPlace}`}\r\n                                      </td>\r\n                                      <td\r\n                                        className=\"nickname\"\r\n                                        style={\r\n                                          nameIndex > -1\r\n                                            ? { fontWeight: 'bold', color: colorsArray[nameIndex] }\r\n                                            : {}\r\n                                        }\r\n                                      >\r\n                                        {res.nickname}\r\n                                        {!!placeDifference && (\r\n                                          <span className=\"change-holder up\">\r\n                                            <span>{placeDifference}</span>\r\n                                            <FaAngleDoubleUp />\r\n                                          </span>\r\n                                        )}\r\n                                        {DEBUG && (\r\n                                          <span>\r\n                                            {' '}\r\n                                            {res.startingRating &&\r\n                                              Math.round(res.startingRating)}{' '}\r\n                                            {res.ratingDiff && Math.round(res.ratingDiff)}{' '}\r\n                                            {res.ratingDiffLast && Math.round(res.ratingDiffLast)}\r\n                                          </span>\r\n                                        )}\r\n                                        {!DEBUG &&\r\n                                          showProtagonistRatingChange &&\r\n                                          res.nickname === protagonistName &&\r\n                                          res.ratingDiff && (\r\n                                            <span>\r\n                                              {` (${res.ratingDiff > 0 ? '+' : ''}${Math.round(\r\n                                                res.ratingDiff\r\n                                              )})`}\r\n                                            </span>\r\n                                          )}\r\n                                        {_.get('sortingType.value', filter) === SORT.PROTAGONIST &&\r\n                                          res.nickname === protagonistName &&\r\n                                          chart.distanceFromProtagonist > 0 && (\r\n                                            <span className=\"protagonist-diff\">\r\n                                              {' '}\r\n                                              -{(chart.distanceFromProtagonist * 100).toFixed(1)}%\r\n                                            </span>\r\n                                          )}\r\n                                      </td>\r\n                                      <td\r\n                                        className={classNames('judge', {\r\n                                          vj: res.isRank,\r\n                                          hj: res.isHJ,\r\n                                        })}\r\n                                      >\r\n                                        {res.isRank && (\r\n                                          <div className=\"inner\">\r\n                                            {res.isExactDate ? (\r\n                                              'VJ'\r\n                                            ) : (\r\n                                              <Tooltip\r\n                                                content={\r\n                                                  <div>\r\n                                                    наличие ранка на этом результате было угадано,\r\n                                                    основываясь на скоре\r\n                                                  </div>\r\n                                                }\r\n                                                tooltipClassName=\"pumpking-tooltip\"\r\n                                              >\r\n                                                VJ?\r\n                                              </Tooltip>\r\n                                            )}\r\n                                          </div>\r\n                                        )}\r\n                                        {res.isHJ && <div className=\"inner\">HJ</div>}\r\n                                      </td>\r\n                                      <td className=\"score\">\r\n                                        <Overlay\r\n                                          overlayClassName=\"score-overlay-outer\"\r\n                                          overlayItem={\r\n                                            <span className=\"score-span\">\r\n                                              {/* {res.scoreIncrease > res.score * 0.8 && <FaPlus />} */}\r\n                                              {res.scoreIncrease > res.score * 0.8 && '*'}\r\n                                              {numeral(res.score).format('0,0')}\r\n                                            </span>\r\n                                          }\r\n                                          placement=\"top\"\r\n                                        >\r\n                                          <div className=\"score-overlay\">\r\n                                            {DEBUG && (\r\n                                              <>\r\n                                                <div>\r\n                                                  <span className=\"_grey\">result id: </span>\r\n                                                  {res.id}\r\n                                                </div>\r\n                                                <div>\r\n                                                  <span className=\"_grey\">player id: </span>\r\n                                                  {res.playerId}\r\n                                                </div>\r\n                                              </>\r\n                                            )}\r\n                                            <div>\r\n                                              <span className=\"_grey\">игрок: </span>\r\n                                              <NavLink\r\n                                                exact\r\n                                                to={routes.profile.getPath({ id: res.playerId })}\r\n                                              >\r\n                                                {res.nickname} ({res.nicknameArcade})\r\n                                              </NavLink>\r\n                                            </div>\r\n                                            <div>\r\n                                              <span className=\"_grey\">опыт: </span>+\r\n                                              {numeral(getExp(res, chart)).format('0,0')}\r\n                                            </div>\r\n                                            {!res.isExactDate && (\r\n                                              <div className=\"warning\">\r\n                                                <FaExclamationTriangle />\r\n                                                рекорд взят с my best. часть данных недоступна\r\n                                              </div>\r\n                                            )}\r\n                                            {!!res.isExactDate && (\r\n                                              <>\r\n                                                {!!res.mods && (\r\n                                                  <div>\r\n                                                    <span className=\"_grey\">моды: </span>\r\n                                                    {res.mods}\r\n                                                  </div>\r\n                                                )}\r\n                                                {!!res.calories && (\r\n                                                  <div>\r\n                                                    <span className=\"_grey\">ккал: </span>\r\n                                                    {res.calories}\r\n                                                  </div>\r\n                                                )}\r\n                                                {!!res.scoreIncrease && (\r\n                                                  <div>\r\n                                                    <span className=\"_grey\">прирост: </span>+\r\n                                                    {numeral(res.scoreIncrease).format('0,0')}\r\n                                                  </div>\r\n                                                )}\r\n                                                {res.originalChartMix && (\r\n                                                  <div>\r\n                                                    <div className=\"warning\">\r\n                                                      <FaExclamationTriangle />\r\n                                                      было сыграно на {res.originalChartMix}\r\n                                                    </div>\r\n                                                    {res.originalChartLabel && (\r\n                                                      <div>\r\n                                                        <span className=\"_grey\">\r\n                                                          оригинальный чарт:{' '}\r\n                                                        </span>\r\n                                                        {res.originalChartLabel}\r\n                                                      </div>\r\n                                                    )}\r\n                                                    {res.originalScore && (\r\n                                                      <div>\r\n                                                        <span className=\"_grey\">\r\n                                                          оригинальный скор:{' '}\r\n                                                        </span>\r\n                                                        {res.originalScore}\r\n                                                      </div>\r\n                                                    )}\r\n                                                  </div>\r\n                                                )}\r\n                                                {res.scoreIncrease > res.score * 0.8 && '* сайтрид'}\r\n                                              </>\r\n                                            )}\r\n                                          </div>\r\n                                        </Overlay>\r\n                                      </td>\r\n                                      <td className=\"grade\">\r\n                                        <div className=\"img-holder\">\r\n                                          {res.grade && res.grade !== '?' && (\r\n                                            <img\r\n                                              src={`${process.env.PUBLIC_URL}/grades/${res.grade}.png`}\r\n                                              alt={res.grade}\r\n                                            />\r\n                                          )}\r\n                                          {res.grade === '?' && null}\r\n                                        </div>\r\n                                      </td>\r\n                                      <td className=\"number miss\">{res.miss}</td>\r\n                                      <td className=\"number bad\">{res.bad}</td>\r\n                                      <td className=\"number good\">{res.good}</td>\r\n                                      <td className=\"number great\">{res.great}</td>\r\n                                      <td className=\"number perfect\">{res.perfect}</td>\r\n                                      <td className=\"combo\">\r\n                                        {res.combo}\r\n                                        {res.combo ? 'x' : ''}\r\n                                      </td>\r\n                                      <td className=\"accuracy\">\r\n                                        {res.accuracy}\r\n                                        {res.accuracy ? '%' : ''}\r\n                                      </td>\r\n                                      <td\r\n                                        className={classNames('date', {\r\n                                          latest: res.date === chart.latestScoreDate,\r\n                                        })}\r\n                                      >\r\n                                        <Tooltip\r\n                                          content={tooltipFormatter(res)}\r\n                                          tooltipClassName=\"pumpking-tooltip\"\r\n                                        >\r\n                                          {getTimeAgo(res.dateObject)}\r\n                                          {res.isExactDate ? '' : '?'}\r\n                                        </Tooltip>\r\n                                      </td>\r\n                                    </tr>\r\n                                  );\r\n                                })}\r\n                              </FlipMove>\r\n                            </table>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            {!isLoading && canShowMore && (\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() =>\r\n                  this.setState(state => ({ showItemsCount: state.showItemsCount + 10 }))\r\n                }\r\n              >\r\n                show more...\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Leaderboard);\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n// import numeral from 'numeral';\r\nimport classNames from 'classnames';\r\nimport { GiQueenCrown } from 'react-icons/gi';\r\nimport { FaAngleDoubleUp, FaAngleDoubleDown } from 'react-icons/fa';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nimport { getRankImg } from 'utils/exp';\r\n\r\nconst getGradeImg = grade => (\r\n  <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n);\r\n\r\nexport default function RankingList({ ranking, isLoading }) {\r\n  return (\r\n    <div className=\"ranking-list\">\r\n      {_.isEmpty(ranking) && !isLoading && 'ничего не найдено'}\r\n      {isLoading && <Loader />}\r\n      {!isLoading && (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"place\"></th>\r\n              <th className=\"change\"></th>\r\n              <th className=\"exp-rank\">rank</th>\r\n              <th className=\"name\">name</th>\r\n              <th className=\"name2\">piu name</th>\r\n              <th className=\"rating\">elo</th>\r\n              <th className=\"rating-change-cell\"></th>\r\n              {/* <th className=\"total-score\">total score</th> */}\r\n              <th className=\"grades sss\">{getGradeImg('SSS')}</th>\r\n              <th className=\"grades ss\">{getGradeImg('SS')}</th>\r\n              <th className=\"grades s\">{getGradeImg('S')}</th>\r\n              <th className=\"grades a\">{getGradeImg('A+')}</th>\r\n              <th className=\"grades b\">{getGradeImg('B')}</th>\r\n              <th className=\"grades c\">{getGradeImg('C')}</th>\r\n              <th className=\"grades d\">{getGradeImg('D')}</th>\r\n              <th className=\"grades f\">{getGradeImg('F')}</th>\r\n              <th className=\"playcount\">scores</th>\r\n              {/* <th className=\"calories\">kcal</th> */}\r\n              <th className=\"accuracy\">accuracy</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {ranking.map((player, playerIndex) => {\r\n              return (\r\n                <tr className=\"player\" key={player.name}>\r\n                  <td className=\"place\">\r\n                    {playerIndex === 0 ? <GiQueenCrown /> : `#${playerIndex + 1}`}\r\n                  </td>\r\n                  <td className=\"change\">\r\n                    {player.change > 0 && (\r\n                      <div className=\"change-holder up\">\r\n                        <span>{player.change}</span>\r\n                        <FaAngleDoubleUp />\r\n                      </div>\r\n                    )}\r\n                    {player.change < 0 && (\r\n                      <div className=\"change-holder down\">\r\n                        <span>{-player.change}</span>\r\n                        <FaAngleDoubleDown />\r\n                      </div>\r\n                    )}\r\n                    {!!player.change && _.isString(player.change) && (\r\n                      <div className=\"change-holder text\">\r\n                        <span>{player.change}</span>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"exp-rank\">{getRankImg(player.expRank)}</td>\r\n                  <td className=\"name\">\r\n                    <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                      {player.name}\r\n                    </NavLink>\r\n                  </td>\r\n                  <td className=\"name\">\r\n                    <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                      {player.nameArcade}\r\n                    </NavLink>\r\n                  </td>\r\n                  <td className=\"rating\">{player.rating}</td>\r\n                  <td className=\"rating-change-cell\">\r\n                    {!!player.prevRating && player.prevRating !== player.rating && (\r\n                      <span\r\n                        className={classNames('rating-change', {\r\n                          down: player.prevRating > player.rating,\r\n                          up: player.prevRating < player.rating,\r\n                        })}\r\n                      >\r\n                        {player.prevRating < player.rating ? '+' : ''}\r\n                        {player.rating - player.prevRating}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"grades sss\">{player.grades.SSS}</td>\r\n                  <td className=\"grades ss\">{player.grades.SS}</td>\r\n                  <td className=\"grades s\">{player.grades.S}</td>\r\n                  <td className=\"grades a\">{player.grades.A}</td>\r\n                  <td className=\"grades b\">{player.grades.B}</td>\r\n                  <td className=\"grades c\">{player.grades.C}</td>\r\n                  <td className=\"grades d\">{player.grades.D}</td>\r\n                  <td className=\"grades f\">{player.grades.F}</td>\r\n                  <td className=\"playcount\">{player.count}</td>\r\n                  <td className=\"accuracy\">\r\n                    {player.accuracy ? `${player.accuracy.toFixed(2)}%` : ''}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function RankingFaq() {\r\n  return (\r\n    <div className=\"faq\">\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Как считается рейтинг?</div>\r\n        <div className=\"answer\">\r\n          A: Используется <a href=\"https://en.wikipedia.org/wiki/Elo_rating_system\">рейтинг Эло</a>,\r\n          широко используемый в шахматах и других играх, слегка модицированный под условия игры на\r\n          пампе. Средний рейтинг - 1000. Коэффициент К зависит от уровня чарта (более сложные чарты\r\n          сильнее влияют на рейтинг). Количество очков влияет на заработанный рейтинг (маленький\r\n          отрыв от противника не даст так много очков как большой отрыв).\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Система Эло используется для игр 1 на 1, как она используется на пампе, где на одном\r\n          чарте играет много игроков?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: Рекорды на одном чарте делятся на несколько игр 1 на 1. Если есть 3 игрока: A, B, C; то\r\n          считается, что было 3 отдельные игры: A vs B, A vs C, B vs C.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Учитываются ли рекорды на ранке в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: Да. Как минимум потому что у нас есть много рекордов, взятых с машин бестов, и мы не\r\n          знаем наверняка, на ранке они или нет. Если у игрока в топе есть два скора - на ранке и\r\n          без ранка, используется тот, где больше очков.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Почему меня нет в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: В таблицу попадают только те, у кого есть хотя бы 20 игр 1 на 1. Первые 20 игр\r\n          используются для определения изначального рейтинга.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Почему суммарное количество оценок S-A-B не совпадает с общим количеством скоров?\r\n        </div>\r\n        <div className=\"answer\">A: Не для каждого результата известна оценка.</div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Если у меня есть несколько рекордов на А, несколько на А+, как считается суммарное\r\n          количество грейдов в таблице?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: В каждой колонке учитываются обе буквы - и треснутые, и с удержанным лайфом. То есть и\r\n          А, и А+ идут в колонку А. Точно так же для B, C, D.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Убери аккураси из таблицы!</div>\r\n        <div className=\"answer\">A: Грем, это секция для вопросов.</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle } from 'react-icons/fa';\r\nimport { Link, Route, withRouter } from 'react-router-dom';\r\nimport { createSelector } from 'reselect';\r\nimport _ from 'lodash/fp';\r\n\r\n// styles\r\nimport './ranking.scss';\r\n\r\n// components\r\nimport RankingList from './RankingList';\r\nimport RankingFaq from './RankingFaq';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\n\r\n// utils\r\n\r\n// code\r\nconst rankingSelector = createSelector(\r\n  state => state.results.profiles,\r\n  _.flow(\r\n    _.values,\r\n    _.orderBy(['ratingRaw'], ['desc'])\r\n  )\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ranking: rankingSelector(state),\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading: state.results.isLoading || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n};\r\n\r\nclass Ranking extends Component {\r\n  static propTypes = {\r\n    ranking: toBe.array,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    ranking: [],\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, ranking, error } = this.props;\r\n\r\n    return (\r\n      <div className=\"ranking-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.path}\r\n              render={() => (\r\n                <>\r\n                  <Link to={routes.ranking.faq.path}>\r\n                    <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n                      <FaQuestionCircle /> faq\r\n                    </button>\r\n                  </Link>\r\n                  <button\r\n                    disabled={isLoading}\r\n                    className=\"btn btn-sm btn-dark btn-icon\"\r\n                    onClick={this.onRefresh}\r\n                  >\r\n                    <FaSearch /> обновить\r\n                  </button>\r\n                </>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.faq.path}\r\n              render={() => (\r\n                <Link to={routes.ranking.path}>\r\n                  <button className=\"btn btn-sm btn-dark btn-icon\">назад</button>\r\n                </Link>\r\n              )}\r\n            />\r\n          </div>\r\n          <Route\r\n            exact\r\n            path={routes.ranking.path}\r\n            render={() => <RankingList ranking={ranking} isLoading={isLoading} />}\r\n          />\r\n          <Route exact path={routes.ranking.faq.path} component={RankingFaq} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Ranking));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\nimport { FaPlay } from 'react-icons/fa';\r\nimport { MdExpandMore } from 'react-icons/md';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { parseDate } from 'utils/date';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport './most-played.scss';\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    charts: state.results.sharedCharts,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(({ playerId, charts }) => {\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [limit, setLimit] = useState(10);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchJson({\r\n      url: `${HOST}/player/${playerId}/mostPlayed?limit=${limit}`,\r\n    })\r\n      .then(result => {\r\n        setLoading(false);\r\n        if (result.success) {\r\n          setData(result.data);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [playerId, limit]);\r\n\r\n  return (\r\n    <div className=\"most-played\">\r\n      {isLoading && <Loader />}\r\n      {data.map(item => {\r\n        const chart = charts[item.shared_chart];\r\n        return (\r\n          <div className=\"chart\" key={item.shared_chart}>\r\n            <div\r\n              className={classNames('chart-name', {\r\n                single: chart.chartType === 'S',\r\n                singlep: chart.chartType === 'SP',\r\n                doublep: chart.chartType === 'DP',\r\n                double: chart.chartType === 'D',\r\n                coop: chart.chartType === 'COOP',\r\n              })}\r\n            >\r\n              <span className=\"chart-letter\">{chart.chartType}</span>\r\n              <span className=\"chart-number\">{chart.chartLevel}</span>\r\n            </div>\r\n            <div className=\"song-name\">{chart.song}</div>\r\n            <div className=\"date\">\r\n              {item.latestDate ? getTimeAgo(parseDate(item.latestDate)) : null}\r\n            </div>\r\n            <div className=\"playcount\">\r\n              <FaPlay />\r\n              <span>{item.count}</span>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      {limit === _.size(data) && (\r\n        <button\r\n          className=\"show-more btn btn-sm btn-dark btn-icon\"\r\n          onClick={() => setLimit(limit + 10)}\r\n        >\r\n          <MdExpandMore /> больше\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\n\r\nimport { ranks, getRankImg } from 'utils/exp';\r\n\r\nexport default function ExpFaq() {\r\n  return (\r\n    <div className=\"faq-exp\">\r\n      <div className=\"faq-header\">\r\n        <strong>Опыт</strong> игрока основывается на количестве сыгранных песен и чартов.\r\n        <br />\r\n        Чем выше уровень чарта и чем лучше оценка на чарте, тем больше опыта он даёт.\r\n        <br />\r\n        Повторные попытки на тех же чартах не дают больше опыта. Чтобы поднимать свой уровень, играй\r\n        новые треки и чарты.\r\n      </div>\r\n      <div className=\"faq-header\">Список уровней и необходимый опыт для их получения:</div>\r\n      <div className=\"ranks-list\">\r\n        {ranks.map(rank => (\r\n          <div key={rank.threshold} className=\"rank\">\r\n            <div className=\"exp-rank\">{getRankImg(rank)}</div>\r\n            <div className=\"threshold\">{rank.threshold}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle, FaTimes } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport ReactModal from 'react-modal';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as RechartsTooltip,\r\n  ReferenceLine,\r\n  CartesianGrid,\r\n  Line,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Label,\r\n} from 'recharts';\r\nimport { createSelector } from 'reselect';\r\nimport _ from 'lodash/fp';\r\nimport moment from 'moment';\r\n\r\n// styles\r\nimport './profile.scss';\r\n\r\n// constants\r\n\r\n// components\r\nimport Range from 'components/Shared/Range';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport MostPlayed from './MostPlayed';\r\nimport ExpFaq from './ExpFaq';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\nimport { setProfilesFilter, resetProfilesFilter } from 'reducers/profiles';\r\n\r\n// utils\r\nimport { parseDate } from 'utils/date';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { achievements } from 'utils/achievements';\r\nimport { getRankImg } from 'utils/exp';\r\n\r\n// code\r\nconst MIN_GRAPH_HEIGHT = undefined;\r\nconst defaultGradesDistribution = {\r\n  SSS: 0,\r\n  SS: 0,\r\n  S: 0,\r\n  'A+': 0,\r\n  A: 0,\r\n  B: 0,\r\n  C: 0,\r\n  D: 0,\r\n  F: 0,\r\n};\r\nconst defaultGradesWithLevelsDistribution = _.flow(\r\n  _.flatMap(type => {\r\n    return _.flow(\r\n      _.toPairs,\r\n      _.map(([grade, value]) => [`${type}-${grade}`, value])\r\n    )(defaultGradesDistribution);\r\n  }),\r\n  _.fromPairs\r\n)(['S', 'D']);\r\n\r\nconst cutRange = (array, range) => {\r\n  const startIndex = _.findIndex(item => item.date > range[0], array);\r\n  const endIndex = _.findLastIndex(item => item.date < range[1], array);\r\n  let firstElement =\r\n    startIndex > 0 ? array[startIndex - 1] : startIndex === 0 ? array[startIndex] : _.last(array);\r\n  let lastElement = endIndex > -1 ? array[endIndex] : _.first(array);\r\n  firstElement = { ...firstElement, date: range[0] };\r\n  lastElement = { ...lastElement, date: range[1] };\r\n  const middleElements =\r\n    startIndex > -1 && endIndex > -1 ? array.slice(startIndex, endIndex + 1) : [];\r\n\r\n  return [firstElement, ...middleElements, lastElement];\r\n};\r\nconst profileSelector = createSelector(\r\n  (state, props) => _.toInteger(props.match.params.id),\r\n  state => state.results.profiles,\r\n  state => state.profiles.filter,\r\n  state => state.tracklist.data,\r\n  (id, profiles, filter, tracklist) => {\r\n    const profile = profiles[id];\r\n    if (_.isEmpty(profile)) {\r\n      return null;\r\n    }\r\n    const levelsDistribution = _.flow(\r\n      _.get('resultsByLevel'),\r\n      _.toPairs,\r\n      _.map(([x, y]) => ({\r\n        x: _.toInteger(x),\r\n        S:\r\n          (_.size(_.filter(res => res.chart.chartType === 'S' || res.chart.chartType === 'SP', y)) /\r\n            tracklist.singlesLevels[x]) *\r\n          100,\r\n        D:\r\n          (-_.size(\r\n            _.filter(res => res.chart.chartType === 'D' || res.chart.chartType === 'DP', y)\r\n          ) /\r\n            tracklist.doublesLevels[x]) *\r\n          100,\r\n      }))\r\n    )(profile);\r\n    const gradesData = _.flow(\r\n      _.get('resultsByLevel'),\r\n      _.toPairs,\r\n      _.map(\r\n        _.update('[1].result.grade', grade =>\r\n          grade && grade.includes('+') && grade !== 'A+' ? grade.replace('+', '') : grade\r\n        )\r\n      )\r\n    )(profile);\r\n    const gradesDistribution = _.flow(\r\n      _.map(([x, y]) => ({\r\n        x: _.toInteger(x),\r\n        ...defaultGradesDistribution,\r\n        ..._.omit('?', _.mapValues(_.size, _.groupBy('result.grade', y))),\r\n      })),\r\n      _.map(item => {\r\n        const grades = _.pick(Object.keys(defaultGradesDistribution), item);\r\n        const sum = _.sum(_.values(grades));\r\n        return {\r\n          ...item,\r\n          gradesValues: grades,\r\n          ...(sum === 0 ? grades : _.mapValues(value => (100 * value) / sum, grades)),\r\n        };\r\n      })\r\n    )(gradesData);\r\n    const gradesAndLevelsDistribution = _.flow(\r\n      _.map(([x, y]) => {\r\n        const groupedResults = _.groupBy('result.grade', y);\r\n        const counts = _.omit(\r\n          '?',\r\n          _.mapValues(\r\n            _.countBy(res => {\r\n              return res.chart.chartType === 'S' || res.chart.chartType === 'SP'\r\n                ? 'S'\r\n                : res.chart.chartType === 'D' || res.chart.chartType === 'DP'\r\n                ? 'D'\r\n                : 'Other';\r\n            }),\r\n            groupedResults\r\n          )\r\n        );\r\n        const reduced = _.reduce(\r\n          (acc, [grade, levelsData]) => {\r\n            const accData = _.flow(\r\n              _.toPairs,\r\n              _.map(([type, count]) => [\r\n                `${type}-${grade}`,\r\n                type === 'S'\r\n                  ? (count / tracklist.singlesLevels[x]) * 100\r\n                  : (-count / tracklist.doublesLevels[x]) * 100,\r\n              ]),\r\n              _.fromPairs\r\n            )(levelsData);\r\n            return { ...acc, ...accData };\r\n          },\r\n          {},\r\n          _.toPairs(counts)\r\n        );\r\n\r\n        return {\r\n          x: _.toInteger(x),\r\n          ...defaultGradesWithLevelsDistribution,\r\n          ...reduced,\r\n        };\r\n      })\r\n    )(gradesData);\r\n    const lastTickRating = _.last(profile.ratingHistory).date;\r\n    const lastTickRanking = _.last(profile.rankingHistory).date;\r\n    const lastTick = lastTickRating > lastTickRanking ? lastTickRating : lastTickRanking; // End graph at either point\r\n    const firstTick = _.first(profile.ratingHistory).date; // Start graph from the first battle of this player\r\n    const lastDay = moment(lastTick).endOf('day');\r\n    const firstDay = moment(firstTick).startOf('day');\r\n    const minMaxRange = [firstDay / 1000 / 60 / 60 / 24, lastDay / 1000 / 60 / 60 / 24];\r\n\r\n    const filterRange = filter.dayRange || [\r\n      Math.max(minMaxRange[0], minMaxRange[1] - 30),\r\n      minMaxRange[1],\r\n    ];\r\n    const dayRangeMs = [\r\n      +moment(filterRange[0] * 1000 * 60 * 60 * 24).startOf('day'),\r\n      +moment(filterRange[1] * 1000 * 60 * 60 * 24).endOf('day'),\r\n    ];\r\n    const placesChanges = cutRange(profile.rankingHistory, dayRangeMs);\r\n    const ratingChanges = cutRange(profile.ratingHistory, dayRangeMs);\r\n    const rank = 1 + _.findIndex({ id }, _.orderBy(['ratingRaw'], ['desc'], _.values(profiles)));\r\n    return {\r\n      ...profile,\r\n      rank,\r\n      minMaxRange,\r\n      filterRange,\r\n      levelsDistribution,\r\n      gradesDistribution,\r\n      gradesAndLevelsDistribution,\r\n      placesChanges,\r\n      ratingChanges,\r\n    };\r\n  }\r\n);\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    profile: profileSelector(state, props),\r\n    tracklist: state.tracklist.data,\r\n    filter: state.profiles.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading: state.results.isLoading || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setProfilesFilter,\r\n  resetProfilesFilter,\r\n};\r\n\r\nclass Profile extends Component {\r\n  static propTypes = {\r\n    profile: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    profile: {},\r\n  };\r\n\r\n  state = {\r\n    isLevelGraphCombined: true,\r\n    showFaq: false,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetProfilesFilter();\r\n  }\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onChangeDayRange = range => {\r\n    const { filter } = this.props;\r\n    this.props.setProfilesFilter({\r\n      ...filter,\r\n      dayRange: range,\r\n    });\r\n  };\r\n\r\n  onShowFaq = () => {\r\n    this.setState({ showFaq: true });\r\n  };\r\n\r\n  onHideFaq = () => {\r\n    this.setState({ showFaq: false });\r\n  };\r\n\r\n  renderRankingHistory() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={profile.ratingChanges} margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={value => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={['dataMin - 100', 'dataMax + 100']}\r\n            tickFormatter={Math.round}\r\n            width={40}\r\n          />\r\n          <ReferenceLine y={1000} stroke=\"white\" />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Rating: {Math.round(payload[0].value)}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderPlaceHistory() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={profile.placesChanges} margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={value => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={[1, dataMax => (dataMax < 3 ? dataMax + 2 : dataMax + 1)]}\r\n            interval={0}\r\n            reversed\r\n            width={40}\r\n          />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Place: #{payload[0].value}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGrades() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <BarChart\r\n          data={profile.gradesDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {_.filter(item => item.value > 0, payload).map(item => (\r\n                    <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                      {item.name}: {payload[0].payload.gradesValues[item.name]}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            domain={[0, 100]}\r\n            ticks={[0, 50, 100]}\r\n            tickFormatter={x => `${Math.round(x)}%`}\r\n            width={40}\r\n          />\r\n          <Legend />\r\n          <Bar dataKey=\"SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"F\" fill=\"#774949\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradesWithLevels() {\r\n    const { profile, tracklist } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={0.74}>\r\n        <BarChart\r\n          data={profile.gradesAndLevelsDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n          stackOffset=\"sign\"\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              const doubleItems = _.filter(\r\n                item => item.value !== 0 && item.dataKey.startsWith('D'),\r\n                payload\r\n              );\r\n              const singleItems = _.filter(\r\n                item => item.value !== 0 && item.dataKey.startsWith('S'),\r\n                payload\r\n              );\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {!!singleItems.length && (\r\n                    <>\r\n                      <div>Single:</div>\r\n                      {singleItems.map(item => (\r\n                        <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                          {item.name.slice(2)}: {Math.round(Math.abs(item.value))}% (\r\n                          {Math.round((tracklist.singlesLevels[item.payload.x] * item.value) / 100)}\r\n                          /{tracklist.singlesLevels[item.payload.x]})\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                  {!!doubleItems.length && (\r\n                    <>\r\n                      <div>Double:</div>\r\n                      {doubleItems.map(item => (\r\n                        <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                          {item.name.slice(2)}: {Math.round(Math.abs(item.value))}% (\r\n                          {Math.round(\r\n                            (tracklist.doublesLevels[item.payload.x] * -item.value) / 100\r\n                          )}\r\n                          /{tracklist.doublesLevels[item.payload.x]})\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            tickFormatter={x => `${Math.round(Math.abs(x))}%`}\r\n            width={40}\r\n            domain={[dataMin => Math.min(dataMin, -10), dataMax => Math.max(10, dataMax)]}\r\n          />\r\n          <Bar dataKey=\"S-SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Label value=\"Double\" offset={0} position=\"insideBottomLeft\" />\r\n          <Label value=\"Single\" offset={0} position=\"insideTopLeft\" />\r\n          <ReferenceLine y={0} stroke=\"#bbb\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderLevels() {\r\n    const { profile, tracklist } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <BarChart\r\n          data={profile.levelsDistribution}\r\n          stackOffset=\"sign\"\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              const totalD = tracklist.doublesLevels[payload[0].payload.x];\r\n              const totalS = tracklist.singlesLevels[payload[0].payload.x];\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {totalS > 0 && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n                      Single: {Math.abs(payload[1].value).toFixed(1)}% (\r\n                      {Math.round((payload[1].value * totalS) / 100)}/{totalS})\r\n                    </div>\r\n                  )}\r\n                  {totalD > 0 && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n                      Double: {Math.abs(payload[0].value).toFixed(1)}% (\r\n                      {Math.round((Math.abs(payload[0].value) * totalD) / 100)}/{totalD})\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            tickFormatter={x => Math.round(Math.abs(x)) + '%'}\r\n            width={40}\r\n            domain={[dataMin => Math.min(dataMin, -10), dataMax => Math.max(10, dataMax)]}\r\n          />\r\n          <RechartsTooltip />\r\n          <ReferenceLine y={0} stroke=\"#555\" />\r\n          <Legend />\r\n          <Bar dataKey=\"D\" fill=\"#169c16\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#af2928\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradeBlock(type, grade) {\r\n    const { profile } = this.props;\r\n    const obj = profile.progress[type];\r\n    const typeLetter = type === 'double' ? 'D' : 'S';\r\n    const progr = Math.floor((obj[`${grade}-bonus-level-coef`] || 0) * 100);\r\n    const minNumber = obj[`${grade}-bonus-level-min-number`];\r\n    const currentNumber = obj[`${grade}-bonus-level-achieved-number`];\r\n    const levelString = obj[`${grade}-bonus-level`]\r\n      ? `${typeLetter}${obj[`${grade}-bonus-level`]}`\r\n      : '?';\r\n    return (\r\n      <div className=\"grade-block\">\r\n        <div className=\"grade-letter\">\r\n          <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n        </div>\r\n        <div className=\"grade-level\">{levelString}</div>\r\n        <div className=\"grade-progress\">\r\n          {progr}% ({progr === 100 ? minNumber : currentNumber}/{minNumber})\r\n        </div>\r\n        <div className=\"grade-progress\">бонус: +{Math.floor(obj[`${grade}-bonus`])}</div>\r\n        <div\r\n          className={classNames('progress-background', {\r\n            complete: progr === 100,\r\n            zero: progr === 0,\r\n          })}\r\n          style={{\r\n            height: `${progr}%`,\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderAchievement(achName, achievement) {\r\n    const Icon = achievements[achName].icon;\r\n    const description = achievements[achName].description;\r\n    return (\r\n      <Tooltip\r\n        key={achName}\r\n        content={<div>{description}</div>}\r\n        tooltipClassName=\"pumpking-tooltip achievement-tooltip\"\r\n      >\r\n        <div className=\"ach-block\">\r\n          {Icon && (\r\n            <div className=\"ach-icon\">\r\n              <Icon />\r\n            </div>\r\n          )}\r\n          <div className=\"ach-name\">{achName}</div>\r\n          <div\r\n            className={classNames('progress-background', {\r\n              complete: achievement.progress === 100,\r\n              zero: achievement.progress === 0,\r\n            })}\r\n            style={{\r\n              height: `${Math.round(achievement.progress)}%`,\r\n            }}\r\n          />\r\n        </div>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, profile, error, filter } = this.props;\r\n    const { isLevelGraphCombined } = this.state;\r\n\r\n    if (_.isEmpty(profile)) {\r\n      return null;\r\n    }\r\n\r\n    const expProgress = profile.expRankNext\r\n      ? (profile.exp - profile.expRank.threshold) /\r\n        (profile.expRankNext.threshold - profile.expRank.threshold)\r\n      : 100;\r\n    return (\r\n      <div className=\"profile-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            {/* <div className=\"beta\">страница в бета-версии</div> */}\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"btn btn-sm btn-dark btn-icon\"\r\n              onClick={this.onRefresh}\r\n            >\r\n              <FaSearch /> обновить\r\n            </button>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!isLoading && (\r\n            <div className=\"profile\">\r\n              <div className=\"profile-header\">\r\n                <div className=\"profile-name text-with-header\">\r\n                  <div className=\"text-header\">игрок</div>\r\n                  <div>{profile.name}</div>\r\n                </div>\r\n                <div className=\"text-with-header\">\r\n                  <div className=\"text-header\">ранк</div>\r\n                  <div>#{profile.rank}</div>\r\n                </div>\r\n                <div className=\"text-with-header\">\r\n                  <div className=\"text-header\">эло</div>\r\n                  <div>{profile.rating}</div>\r\n                </div>\r\n                <div className=\"text-with-header\">\r\n                  <div className=\"text-header\">последняя игра</div>\r\n                  <div>\r\n                    {profile.lastResultDate ? getTimeAgo(profile.lastResultDate) : 'никогда'}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"profile-section\">\r\n                <div className=\"profile-sm-section-header _flex-row _align-center\">\r\n                  <span>опыт</span>\r\n                  <div className=\"_flex-fill\" />\r\n                  <div onClick={this.onShowFaq} className=\"_clickable\">\r\n                    <FaQuestionCircle onClick={this.onShowFaq} />\r\n                  </div>\r\n                  <ReactModal\r\n                    ariaHideApp={false}\r\n                    className=\"Modal faq-modal\"\r\n                    overlayClassName=\"Overlay\"\r\n                    isOpen={this.state.showFaq}\r\n                    onRequestClose={this.onHideFaq}\r\n                  >\r\n                    <div className=\"close-btn\" onClick={this.onHideFaq}>\r\n                      <FaTimes />\r\n                    </div>{' '}\r\n                    <ExpFaq />\r\n                  </ReactModal>\r\n                </div>\r\n                <div className=\"exp-range\">\r\n                  <div className=\"rank exp-rank\">\r\n                    {getRankImg(profile.expRank)}\r\n                    {profile.expRank && <div>{profile.expRank.threshold}</div>}\r\n                  </div>\r\n                  <div className=\"exp-line-with-label\">\r\n                    <div className=\"exp-label\">\r\n                      {profile.expRankNext ? (\r\n                        <>\r\n                          <span className=\"taken-num\">\r\n                            {Math.round(profile.exp - profile.expRank.threshold)}\r\n                          </span>\r\n                          {` / ${profile.expRankNext.threshold - profile.expRank.threshold}`}\r\n                        </>\r\n                      ) : null}\r\n                    </div>\r\n                    <div className=\"exp-line\">\r\n                      <div\r\n                        className=\"taken\"\r\n                        style={{ width: Math.floor(100 * expProgress) + '%' }}\r\n                      ></div>\r\n                      <div\r\n                        className=\"rest\"\r\n                        style={{ width: 100 - Math.ceil(100 * expProgress) + '%' }}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"exp-label\">\r\n                      total: <span className=\"taken-num\">{Math.round(profile.exp)}</span>\r\n                    </div>\r\n                  </div>\r\n                  {profile.expRankNext && (\r\n                    <div className=\"rank exp-rank\">\r\n                      {getRankImg(profile.expRankNext)}\r\n                      {profile.expRankNext && <div>{profile.expRankNext.threshold}</div>}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"profile-section-horizontal-container\">\r\n                <div className=\"profile-section\">\r\n                  <div className=\"profile-section-content\">\r\n                    {!isLevelGraphCombined ? (\r\n                      <>\r\n                        <div className=\"profile-section-2\">\r\n                          <div className=\"profile-sm-section-header flex\">\r\n                            <span>уровни</span>\r\n                            <div className=\"toggle-holder\">\r\n                              <Toggle\r\n                                className=\"combine-toggle\"\r\n                                checked={isLevelGraphCombined}\r\n                                onChange={() =>\r\n                                  this.setState(state => ({\r\n                                    isLevelGraphCombined: !state.isLevelGraphCombined,\r\n                                  }))\r\n                                }\r\n                              >\r\n                                объединить графики\r\n                              </Toggle>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"chart-container\">{this.renderLevels()}</div>\r\n                        </div>\r\n                        <div className=\"profile-section-2\">\r\n                          <div className=\"profile-sm-section-header\">\r\n                            <span>оценки</span>\r\n                          </div>\r\n                          <div className=\"chart-container\">{this.renderGrades()}</div>\r\n                        </div>\r\n                      </>\r\n                    ) : (\r\n                      <div className=\"profile-section-2\">\r\n                        <div className=\"profile-sm-section-header flex\">\r\n                          <span>оценки</span>\r\n                          <div className=\"toggle-holder\">\r\n                            <Toggle\r\n                              className=\"combine-toggle\"\r\n                              checked={isLevelGraphCombined}\r\n                              onChange={() =>\r\n                                this.setState(state => ({\r\n                                  isLevelGraphCombined: !state.isLevelGraphCombined,\r\n                                }))\r\n                              }\r\n                            >\r\n                              объединить графики\r\n                            </Toggle>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"chart-container single-double-labels\">\r\n                          {this.renderGradesWithLevels()}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"profile-section\">\r\n                  <div className=\"profile-section-content\">\r\n                    <div className=\"profile-section-2\">\r\n                      <div className=\"profile-sm-section-header\">\r\n                        <span>эло</span>\r\n                      </div>\r\n                      <div className=\"chart-container\">{this.renderRankingHistory()}</div>\r\n                    </div>\r\n                    <div className=\"profile-section-2\">\r\n                      <div className=\"profile-sm-section-header\">\r\n                        <span>место в топе</span>\r\n                      </div>\r\n                      <div className=\"chart-container\">{this.renderPlaceHistory()}</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"range-container\">\r\n                    <Range\r\n                      range={filter.dayRange || profile.filterRange}\r\n                      min={profile.minMaxRange[0]}\r\n                      max={profile.minMaxRange[1]}\r\n                      onChange={this.onChangeDayRange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"profile-section progress-section\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>достижения по уровням</span>\r\n                </div>\r\n                <div className=\"progress-blocks-single-double\">\r\n                  <div className=\"progress-block\">\r\n                    <div className=\"achievements-grades single\">\r\n                      {this.renderGradeBlock('single', 'A')}\r\n                      {this.renderGradeBlock('single', 'A+')}\r\n                      {this.renderGradeBlock('single', 'S')}\r\n                      {this.renderGradeBlock('single', 'SS')}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"progress-block\">\r\n                    <div className=\"achievements-grades double\">\r\n                      {this.renderGradeBlock('double', 'A')}\r\n                      {this.renderGradeBlock('double', 'A+')}\r\n                      {this.renderGradeBlock('double', 'S')}\r\n                      {this.renderGradeBlock('double', 'SS')}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"bonus-faq\">\r\n                  * суммарный бонус (+{Math.round(profile.progress.bonus)}) добавляется к стартовому\r\n                  Эло\r\n                  <br />* для получения ачивки нужно сыграть около 10% всех чартов данного левела на\r\n                  нужный грейд\r\n                </div>\r\n              </div>\r\n              <div className=\"profile-section\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>достижения</span>\r\n                </div>\r\n                <div className=\"achievements\">\r\n                  {_.keys(profile.achievements).map(achName =>\r\n                    this.renderAchievement(achName, profile.achievements[achName])\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"profile-section\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>часто играемые чарты</span>\r\n                </div>\r\n                <MostPlayed playerId={profile.id} />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Profile));\r\n","import React, { Component } from 'react';\r\n// import toBe from 'prop-types';\r\n// import classNames from 'classnames';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './top-bar.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nclass TopBar extends Component {\r\n  static propTypes = {};\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"top-bar\">\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <NavLink exact to={routes.leaderboard.path}>\r\n                leaderboard\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink exact to={routes.ranking.path}>\r\n                ranking\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopBar;\r\n","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport 'react-responsive-ui/style.css';\r\nimport './App.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport Leaderboard from 'components/Leaderboard/Leaderboard';\r\nimport Ranking from 'components/Ranking/Ranking';\r\nimport Profile from 'components/Profile/Profile';\r\nimport TopBar from 'components/Shared/TopBar/TopBar';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <TopBar />\r\n        <Route exact path=\"/\" render={() => <Redirect to={routes.leaderboard.path} />} />\r\n        <Route path={routes.leaderboard.path} component={Leaderboard} />\r\n        <Route path={routes.ranking.path} component={Ranking} />\r\n        <Route path={routes.profile.path} component={Profile} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TRACKLIST/LOADING`;\r\nconst SUCCESS = `TRACKLIST/SUCCESS`;\r\nconst ERROR = `TRACKLIST/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTracklist = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await fetchJson({ url: `${HOST}/tracklist/stats/XX` });\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport tracklist from 'reducers/tracklist';\r\nimport ranking from 'reducers/ranking';\r\nimport profiles from 'reducers/profiles';\r\nimport presets from 'reducers/presets';\r\nimport results from 'reducers/results';\r\n\r\nconst rootReducer = combineReducers({\r\n  presets,\r\n  profiles,\r\n  ranking,\r\n  tracklist,\r\n  results,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && process.env.NODE_ENV === 'development'\r\n    ? compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__({\r\n          stateSanitizer: state => ({\r\n            ...state,\r\n          }),\r\n        })\r\n      )\r\n    : applyMiddleware(thunk)\r\n);\r\n","import 'promise-polyfill';\r\nimport 'whatwg-fetch';\r\nimport 'utils/polyfills';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport localForage from 'localforage';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './index.scss';\r\nimport App from 'components/App';\r\n\r\nimport { CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nimport { store } from 'reducers';\r\nimport { fetchResults, setFilter } from 'reducers/results';\r\nimport { fetchTracklist } from 'reducers/tracklist';\r\n\r\nlocalForage\r\n  .getItem('filter')\r\n  .then(filter => {\r\n    if (filter) {\r\n      store.dispatch(\r\n        setFilter({\r\n          ...filter,\r\n          chartRange: filter.chartRange && {\r\n            ...filter.chartRange,\r\n            range: _.every(\r\n              r => r >= CHART_MIN_MAX[0] && r <= CHART_MIN_MAX[1],\r\n              filter.chartRange.range\r\n            )\r\n              ? filter.chartRange.range\r\n              : CHART_MIN_MAX,\r\n          },\r\n        })\r\n      );\r\n    }\r\n  })\r\n  .catch(error => console.error('Cannot get filter from local storage', error));\r\n\r\nstore.dispatch(fetchTracklist()).then(() => {\r\n  store.dispatch(fetchResults());\r\n});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}