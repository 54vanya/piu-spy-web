{"version":3,"sources":["webpack:///./src/utils/workers/profilesPostProcess.js?f05c","utils/polyfills.js","constants/routes.js","constants/leaderboard.js","components/Shared/Loader/index.js","reducers/user/resetAction.js","utils/fetch.js","constants/backend.js","reducers/trackStats/mostPlayed.js","reducers/trackStats/mostPlayedMonth.js","reducers/trackStats/leastPlayed.js","utils/leaderboards.js","utils/date.js","components/SongsTop/SongsTop.js","components/Shared/ToggleButton/ToggleButton.js","components/Shared/Input/Input.js","components/Shared/Toggle/Toggle.js","components/Shared/CollapsibleBar/index.js","components/Shared/Overlay/Overlay.js","components/Shared/Range/index.js","components/Leaderboard/ChartFilter.js","utils/expRanks.js","utils/exp.js","utils/achievements.js","utils/score.js","utils/workers/profilesPostProcess.js","constants/env.js","reducers/results.js","reducers/presets.js","components/Leaderboard/PresetsControl.js","components/Shared/Flag/index.js","components/SocketTracker/helpers.js","utils/colors.js","components/Leaderboard/Result.js","components/Leaderboard/ChartLabel.js","components/Leaderboard/Chart.js","reducers/selectors.js","components/Leaderboard/Leaderboard.js","components/Ranking/RankingList.js","components/Ranking/RankingFaq.js","reducers/preferences.js","components/Ranking/Ranking.js","components/Profile/MostPlayed.js","components/Profile/ExpFaq.js","reducers/profiles.js","utils/profiles.js","components/Profile/Profile.js","components/ProfileCompare/ProfileCompare.js","reducers/user/index.js","reducers/login.js","components/Shared/TopBar/TopBar.js","components/LoginScreen/LoginScreen.js","constants/popups.js","reducers/popups.js","components/Shared/Popups/index.js","components/Shared/Popups/AchievementPopup.js","components/Shared/Popups/RankUpPopup.js","reducers/topPerSong.js","components/SocketTracker/PlayerCard.js","components/SocketTracker/SocketTracker.js","reducers/tournament.js","components/Tournaments/Tournaments.js","reducers/tracklist.js","components/App.js","reducers/trackStats/index.js","reducers/index.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","Number","isNaN","value","Math","sign","x","Array","prototype","findIndex","Object","defineProperty","predicate","this","TypeError","o","len","length","thisArg","arguments","k","kValue","call","configurable","writable","routes","path","sharedChart","getPath","params","sharedChartId","faq","id","compare","compareToId","SORT","DEFAULT","PROTAGONIST","RANK_ASC","RANK_DESC","PP_ASC","PP_DESC","NEW_SCORES_PLAYER","EASIEST_SONGS","HARDEST_SONGS","RANK_FILTER","CHART_MIN_MAX","DURATION","STD","SHORT","REMIX","FULL","DURATION_DEFAULT","_","values","Loader","className","width","height","viewBox","xmlns","fill","cx","cy","r","attributeName","from","to","begin","dur","calcMode","repeatCount","fillOpacity","fetchJson","url","request","method","postJson","body","JSON","stringify","headers","defaultHeaders","async","dispatch","getState","session","cookies","get","response","fetch","credentials","status","json","error","isObject","isString","Error","message","type","Promise","reject","HOST","ERROR","initialState","isLoading","data","TimeAgo","addLocale","ru","timeAgo","timeStyle","flavour","gradation","convenient","units","tooltipFormatter","result","isExactDate","dateObject","toLocaleDateString","resultType","undefined","isMyBest","isMachineBest","style","display","alignItems","flexDirection","getTimeAgo","date","dayDiff","moment","startOf","diff","hour","format","labelToTypeLevel","label","level","match","parseDate","textDate","toDate","Date","TopList","fetchList","title","renderRightSide","setData","useState","setLoading","getRightSide","item","countplay","useEffect","then","success","catch","map","index","key","classNames","best","full_name","leastPlayedRightSide","last_play","connect","fetchMostPlayed","fetchMostPlayedMonth","fetchLeastPlayed","ToggleButton","React","PureComponent","render","active","onToggle","text","props","onClick","Input","Component","constructor","super","state","isNil","defaultValue","bindAll","componentDidUpdate","prevProps","setState","handleChange","e","newValue","target","onChange","handleBlur","numericValue","min","max","onBlur","handleKeyPress","omit","onKeyPress","onInput","noop","defaultProps","Toggle","checked","uniqueId","htmlFor","children","CollapsibleBar","open","defaultOpen","POPPER_MODIFIERS","preventOverflow","enabled","padding","boundariesElement","PLACEMENT_ARROW_MAPPING","right","left","top","bottom","getArrowPlacement","placement","split","Overlay","isVisible","containerItemRef","createRef","renderPopper","bind","toggleOverlayVisibility","hideOverlay","handleClickOutside","event","closest","ref","arrowProps","scheduleUpdate","outOfBoundaries","hideWhenOutOfBounds","data-placement","overlayClassName","overlayItem","Fragment","ReactDOM","createPortal","container","document","modifiers","referenceElement","current","defaultTypes","listensToClickOutside","Range","range","step","renderTrack","onMouseDown","onTouchStart","position","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","justifyContent","boxShadow","ChartFilter","filterValue","onChangeEx","getOr","duration","buttonText","t","isEqual","isEmpty","newMin","newMax","includes","without","ranks","threshold","iconName","color","gradeValue","F","D","C","B","A","S","SS","SSS","getExp","chart","isBestGradeOnChart","chartType","chartLevel","grade","getRankImg","rank","src","process","alt","achievements","icon","GiRank1","description","resultFunction","progress","combo","GiRank2","GiRank3","GiSmokingFinger","playedSongs","songsToPlay","song","uniq","GiRetroController","GiLoveSong","Улитка","GiSnail","charts","some","songToPlay","chartLabel","GiPodiumSecond","miss","bad","GiLifeBar","GiWoodenPegleg","good","great","initialAchievementState","getScoreWithoutBonus","score","postProcessProfiles","profiles","tracklist","mapValues","profile","neededGrades","expRank","findLast","exp","expRanks","expRankNext","find","double","single","gradeIncrementMap","accuracyPointsRaw","keys","resultsByLevel","forEach","res","isRank","accuracyRaw","push","toNumber","thisGrade","thisPlayerId","playerId","otherResults","results","filter","sort","a","b","indexOf","gradeIncArray","gradeInc","l","g","prog","incrementLevel","number","minimumNumber","totalCharts","round","sqrt","getMinimumNumber","bonusCoefficientNumber","bonus","getBonusForLevel","achievementBonus","accuracy","countAcc","sumAccuracy","getProcessedProfiles","sharedCharts","battles","debug","resultInfo","chartId","chartResults","maxPP","interpolatedDifficulty","maxScore","K","scoreRaw","pp","ppPotential","ppRatio","ppFixed","toFixed","scores","pp_","s","rating","flow","orderBy","items","ratingHistory","firstResultDate","rankingHistory","place","processPP","sums","size","accuracyPointsInterpolated","maxAccuracy","maxBy","y","maxLevelWithMaxAcc","points","regression","logarithmic","f","calculated","predict","yx","i","interpolatedPoint","pair","returnValue","weight","abs","interpolation","identity","reduce","acc","diffSum","weightSum","averageDifficulty","interpolateDifficulties","logText","dictScoreInfo","dictChartElo","getDictChartEloId","enemyScore","dictRatingDiff","getDictRatingDiffId","p1","p2","scoreMultiplier","scoreInfo","enemyScoreInfo","startingRating","battleCount","r1","r2","R1","R2","E1","E2","S1","S2","kRating1","kRating2","maxK1","maxK2","kLevel1","kLevel2","kLevel","kMinimizer","startsWith","K1","K2","dr1","dr2","baseEloId1","baseEloId2","baseEloP1","baseEloP2","ratingDiffId1","ratingDiffId2","ratingDiff","ratingDiffLast","floor","playersSorted","battleDate","player","lastPlace","getTime","p1LastRating","last","p2LastRating","toInteger","ratingRaw","now","processBattles","localStorage","window","debugOn","setItem","debugOff","removeItem","DEBUG","getItem","highscoresUrl","REACT_APP_SOCKET","defaultFilter","isLoadingRanking","players","gradeComparator","mapResult","recognition_notes","isUnknownPlayer","arcade_name","isIntermediateResult","shared_chart","nickname","nicknameArcade","gained","exact_gain_date","rank_mode","_r","originalChartMix","original_mix","originalChartLabel","original_label","originalScore","original_score","misses","bads","goods","greats","scoreIncrease","score_increase","calories","perfect","perfects","max_combo","mods","mods_list","isHJ","maxTotalSteps","infos","fixableIndex","absentNumbersCount","localStepSum","isNumber","tryFixIncompleteResult","accRaw","initializeProfile","fromPairs","nameArcade","resultsByGrade","lastResultDate","count","grades","lastBattleDate","region","achName","getProfileInfoFromResult","replace","convert","cap","achState","fetchResults","processResultsData","console","log","mappedResults","shared_charts","getTopResultId","getBestGradeResultId","topResults","bestGradeResults","resRaw","toUpper","chart_label","track_name","max_total_steps","allResultsIds","chartTop","topResultId","currentTopResult","oldScoreIndex","splice","newScoreIndex","sortedLastIndexBy","latestScoreDate","enemyResult","bestGradeResultId","currentBestGradeRes","maxScoreCandidate","processData","toPairs","originalData","input","promise","worker","WorkerProfilesProcessing","profilesProcessing","output","q","calculateRankingChanges","terminate","setFilter","getListOfNames","getMapOfRatings","ranking","lastChangedRanking","lastChangedRankingPoints","lastFetchedRanking","all","localForage","listNow","listLastFetched","listLastChanged","mapPointsNow","mapPointsLastFetched","rankingsPointsMap","listPrev","warn","presets","currentPreset","itemToOption","reloadPresets","selectPreset","openPreset","noPresetsMessage","mapDispatchToProps","loadPresets","savePreset","newPreset","confirm","newPresets","remove","deletePreset","withoutOldPreset","PresetsControl","onChangeSelection","selected","onRewritePreset","onSavePreset","isAddingNew","componentDidMount","classNamePrefix","placeholder","options","noOptionsMessage","disabled","Flag","backgroundImage","preprocessData","fullRes","every","stepSum","sum","n","track","mix","resultInfoOverrides","numb","latest","hasRankScore","useTracked","resetIndicatorData","isDebugOn","prevData","setPrevData","currData","setCurrData","resetIndicator","useRef","reset","useCallback","useMemo","useResetTrackedObject","object","tracking","colorsArray","forwardRef","placeDifference","showProtagonistEloChange","showProtagonistPpChange","protagonistName","uniqueSelectedNames","leftProfile","rightProfile","isSocketView","inf","ratingInfoBlock","flag","nameIndex","empty","outline","isSecondOccurenceInResults","topPlace","fontWeight","exact","mod","avMod","endsWith","xMod","numeral","vj","hj","getShortTimeAgo","content","tooltipClassName","singlep","doublep","coop","Chart","allResults","playersHiddenStatus","chartOriginal","showHiddenPlayers","overrides","setOverrides","isHidingPlayers","setHidingPlayers","first","occuredNicknames","hiddenPlayersCount","isPlayerHidden","onRedoLatestResult","throttle","ANIMATION_DURATION","newOverrides","drop","onUndoLatestResult","undoedResult","undoedPlayerId","previousPlayerResult","newResults","compact","latestScore","overrideChart","isActive","totalResultsCount","countBy","true","currentIndex","canUndo","interpDiff","ChartLabel","href","queryString","search_query","rel","enterAnimation","leaveAnimation","typeName","maintainContainerHeight","isProtagonist","newIndex","prevScore","findLastIndex","preferences","playersSelector","createSelector","user","isCurrentPlayer","sortBy","it","toLower","filteredDataSelector","start","performance","showHidden","showHiddenFromPreferences","names","namesOr","playersOr","namesNot","playersNot","sortingType","rankFilter","protagonist","excludeAntagonists","defaultSorting","newScoresProtagonistSorting","protagonistSorting","row","protIndex","protScore","enemies","take","uniqBy","distance","dist","enemy","distanceFromProtagonist","getPpSorting","field","direction","info","Infinity","getEloSorting","getDiffSorting","chartInfo","sortingFunctions","occuredIds","isVisibleWithRankFilter","chartRange","rows","filterCharts","rowNames","matchSorter","trim","sharedChartDataSelector","sortingOptions","rankOptions","resetFilter","Leaderboard","showItemsCount","curry","onRefresh","onTypeSongName","debounce","renderSimpleSearch","renderFilters","closeMenuOnSelect","isMulti","renderSortings","isClearable","isChartView","filteredData","canShowMore","visibleData","slice","highlightProtagonist","preset","chartIndex","getGradeImg","RankingList","updatePreferences","playerIndex","isHidden","showHiddenPlayersInRanking","change","prevRating","down","up","set","RankingFaq","defaultPreferences","rankingSelector","Ranking","onChangeHidingPlayers","component","withRouter","limit","setLimit","latestDate","ExpFaq","setProfilesFilter","resetProfilesFilter","cutRange","array","startIndex","endIndex","firstElement","lastElement","defaultGradesDistribution","defaultGradesWithLevelsDistribution","flatMap","profileSelectorCreator","idParamName","levelsDistribution","singlesLevels","doublesLevels","gradesData","update","gradesDistribution","groupBy","pick","gradesValues","gradesAndLevelsDistribution","groupedResults","counts","reduced","levelsData","lastTickRating","lastTickRanking","lastTick","firstTick","lastDay","endOf","minMaxRange","filterRange","dayRange","dayRangeMs","placesChanges","ratingChanges","profileSelector","otherPlayersSelector","ind","Profile","isLevelGraphCombined","showFaq","onChangeDayRange","onShowFaq","onHideFaq","circleShape","args","componentWillUnmount","renderRankingHistory","minHeight","aspect","margin","strokeDasharray","dataKey","domain","tickFormatter","allowDecimals","stroke","isAnimationActive","payload","strokeWidth","dot","renderAccuracyPoints","interpolated","pointsByType","ticks","shape","false","renderPlaceHistory","dataMax","interval","reversed","renderGrades","stackId","renderGradesWithLevels","stackOffset","doubleItems","singleItems","dataMin","offset","renderLevels","totalD","totalS","renderGradeBlock","obj","typeLetter","progr","minNumber","currentNumber","levelString","complete","zero","renderAchievement","achievement","Icon","renderProfile","otherPlayers","expProgress","history","ariaHideApp","isOpen","onRequestClose","ceil","currentRange","dateL","dateR","l1","l2","MostPlayed","BARS_MODES","SINGLE_TWO","SINGLE_FIVE","DOUBLE_TWO","DOUBLE_FIVE","BOTH_TWO","BOTH_FIVE","profile1Selector","profile2Selector","getCombinedData","memoize","rc1","rc2","allRC","rating2","rating1","sortedUniqBy","allPC","place2","place1","perLevelComparison","p1win","p1notPlayed","p2win","p2notPlayed","notPlayed","twoBars","p1index","p2index","perType","normalizeTwo","dataObj","totalPlayed","normalizeFive","total","chartLevels","ProfileCompare","compareBarsMode","rhMargin","rhXDomain","rhYDomain","rhXTickFormatter","rhTooltip","profile2","p1Name","p2Name","plcMargin","plcTooltip","isTwo","renderLegendItem","plcXDomain","plcXTicks","plcXFormatter","combinedData","useProfile2","renderPerLevelComparison","layout","mode","getCompareBars","profile1","fetchUser","login","googleResponse","token","tokenId","expires","loginACs","logout","isLoadingLogin","isLoadingUser","isClown","setClown","onGoogleResponse","clientId","onSuccess","onFailure","cookiePolicy","TYPES","popups","popupByType","playerName","achievementName","progressNumber","setProgressNumber","prevPlace","currPlace","list","prevList","currList","setPlace","setList","listTop","delay","pl","renderPlayerLine","popupStyles","overlay","transition","opacity","removePopup","visiblePopup","setVisiblePopup","contentRef","popup","persistent","setTimeout","fadeOut","timeout","onAfterOpen","fadeIn","popupBody","PopupComponent","parameters","fetchingParams","PlayerCard","trackedData","isLeft","topPlayersList","addPopup","renderDeltaText","prevN","delta","rivals","closestPlayers","resetData","isDataValid","useTrackedEx","takenWidth","emptyWidth","diffWidth","renderExpLine","elo","topPlayersListSelector","fetchTopPerSong","songName","leftLabel","rightLabel","song_name","join","processedData","appendNewResults","lastDate","start_date","appendedResults","currentResults","oldResult","old","mergedData","popupType","fetchUserPreferences","topPerSong","songTopData","setMessage","socketErrorMessage","setSocketErrorMessage","isSocketReady","setSocketReady","isAlive","setAlive","setLeftLabel","setRightLabel","leftPlayer","setLeftPlayer","rightPlayer","setRightPlayer","recognizedSongName","setRecognizedSongName","leftPreferences","setLeftPreferences","rightPreferences","setRightPreferences","resultsContainerRef","leftResultRef","rightResultRef","socketRef","timeoutResetTokenRef","minBy","p","lev","onChangeAchievements","prevAchievement","currAchievement","leftTracked","resetLeftTracked","rightTracked","resetRightTracked","restartTimeout","clearTimeout","STATE_RESET_TIMEOUT_SEC","WebSocket","onerror","onopen","onmessage","parse","newSongName","totalSize","clientWidth","h","clientHeight","scaleHH","offsetWidth","scaleHW","offsetHeight","scaleWH","scaleWW","transform","scaleW","scaleH","leftChart","rightChart","chartsToShow","leftPlayersHiddenStatus","omitBy","v","rightPlayersHiddenStatus","isHiddenInBoth","Tournaments","useDispatch","selectedBracket","setSelectedBracket","tournData","useSelector","tournament","currentPlayerId","bracket","br","playerIds","brackets","monthText","toLocaleString","month","tournamentTitle","getFullYear","end_date","trackName","colSpan","columnIndex","playerData","bestPlayerScore","percent","player_name","playcount","percentRaw","totalPercentRaw","sumBy","infoByIndex","totalPercent","sortedIds","noResultsIds","toString","ReactModal","setAppElement","fetchTracklist","fetchPreferences","userData","SocketTracker","SongsTop","combineReducers","mostPlayed","action","mostPlayedMonth","leastPlayed","rootReducer","merge","hasPrevList","playerOriginal","trackStats","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","getElementById"],"mappings":"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AW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UCzIEC,GAAa,CACxBC,EAAG,GACHC,EAAG,GACH,KAAM,GACNC,EAAG,GACH,KAAM,GACNC,EAAG,GACH,KAAM,GACNC,EAAG,GACH,KAAM,EACNC,EAAG,IACHC,GAAI,IACJC,IAAK,KAGMC,GAAS,CAACvL,EAAQwL,KAC7B,IAAKxL,EAAOyL,mBACV,OAAO,EAET,GAAwB,SAApBD,EAAME,UACR,OAA2B,IAAnBF,EAAMG,YAAqBb,GAAW9K,EAAO4L,QAAU,IAAQ,EAGzE,OADaJ,EAAMG,YAAc,MA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","file":"static/js/main.c543dcca.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"getProcessedProfiles\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"ff211041b9e64f9be9e5.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","/* eslint-disable */\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\r\nNumber.isNaN =\r\n  Number.isNaN ||\r\n  function(value) {\r\n    return value !== value;\r\n  };\r\n\r\nif (typeof Math.sign === 'undefined') {\r\n  Math.sign = function(x) {\r\n    return x > 0 ? 1 : x < 0 ? -1 : x;\r\n  };\r\n}\r\n\r\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\r\nif (!Array.prototype.findIndex) {\r\n  Object.defineProperty(Array.prototype, 'findIndex', {\r\n    value: function(predicate) {\r\n      // 1. Let O be ? ToObject(this value).\r\n      if (this == null) {\r\n        throw new TypeError('\"this\" is null or not defined');\r\n      }\r\n\r\n      var o = Object(this);\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('predicate must be a function');\r\n      }\r\n\r\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n      var thisArg = arguments[1];\r\n\r\n      // 5. Let k be 0.\r\n      var k = 0;\r\n\r\n      // 6. Repeat, while k < len\r\n      while (k < len) {\r\n        // a. Let Pk be ! ToString(k).\r\n        // b. Let kValue be ? Get(O, Pk).\r\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n        // d. If testResult is true, return k.\r\n        var kValue = o[k];\r\n        if (predicate.call(thisArg, kValue, k, o)) {\r\n          return k;\r\n        }\r\n        // e. Increase k by 1.\r\n        k++;\r\n      }\r\n\r\n      // 7. Return -1.\r\n      return -1;\r\n    },\r\n    configurable: true,\r\n    writable: true,\r\n  });\r\n}\r\n","export const routes = {\r\n  leaderboard: {\r\n    path: `/leaderboard`,\r\n    sharedChart: {\r\n      path: `/leaderboard/chart/:sharedChartId`,\r\n      getPath: (params) => `/leaderboard/chart/${params.sharedChartId}`,\r\n    },\r\n  },\r\n  songs: {\r\n    path: `/songs`,\r\n  },\r\n  ranking: {\r\n    path: `/ranking`,\r\n    faq: {\r\n      path: '/ranking/faq',\r\n    },\r\n  },\r\n  tournaments: {\r\n    path: `/tournaments`,\r\n  },\r\n  profile: {\r\n    path: `/profiles/:id`,\r\n    getPath: (params) => `/profiles/${params.id}`,\r\n    compare: {\r\n      path: `/profiles/:id/vs/:compareToId`,\r\n      getPath: (params) => `/profiles/${params.id}/vs/${params.compareToId}`,\r\n    },\r\n  },\r\n};\r\n","import _ from 'lodash/fp';\r\n\r\nexport const SORT = {\r\n  DEFAULT: 'default',\r\n  PROTAGONIST: 'protagonist',\r\n  RANK_ASC: 'rankAsc',\r\n  RANK_DESC: 'rankDesc',\r\n  PP_ASC: 'ppAsc',\r\n  PP_DESC: 'ppDesc',\r\n  NEW_SCORES_PLAYER: 'newScoresPlayer',\r\n  EASIEST_SONGS: 'easiestSongs',\r\n  HARDEST_SONGS: 'hardestSongs',\r\n};\r\n\r\nexport const RANK_FILTER = {\r\n  SHOW_ALL: 'SHOW_ALL',\r\n  SHOW_BEST: 'SHOW_BEST',\r\n  SHOW_ONLY_RANK: 'SHOW_ONLY_RANK',\r\n  SHOW_ONLY_NORANK: 'SHOW_ONLY_NORANK',\r\n};\r\n\r\nexport const CHART_MIN_MAX = [1, 28];\r\nexport const DURATION = {\r\n  STD: 'Standard',\r\n  SHORT: 'Short',\r\n  REMIX: 'Remix',\r\n  FULL: 'Full',\r\n};\r\nexport const DURATION_DEFAULT = _.values(DURATION);\r\n","import React from 'react';\r\n\r\nimport './loader.scss';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"loader\">\r\n      <svg\r\n        width=\"40\"\r\n        height=\"12\"\r\n        viewBox=\"0 0 120 30\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"#eee\"\r\n      >\r\n        <circle cx=\"15\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"60\" cy=\"15\" r=\"9\" fillOpacity=\"0.3\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"9\"\r\n            to=\"9\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"9;15;9\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"0.5\"\r\n            to=\"0.5\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\".5;1;.5\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"105\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","export const RESET = `USER/RESET`;\r\nexport const resetUser = () => ({ type: RESET });\r\n","import _ from 'lodash/fp';\r\nimport cookies from 'browser-cookies';\r\n\r\nimport { resetUser } from 'reducers/user/resetAction';\r\n\r\nexport const fetchJson = ({ url }) => request({ url, method: 'get' });\r\nexport const postJson = ({ url, body }) =>\r\n  request({\r\n    url,\r\n    method: 'post',\r\n    body: JSON.stringify(body),\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n    },\r\n  });\r\n\r\nconst defaultHeaders = {};\r\n\r\nexport const request = ({ url, method, body, headers }) => async (dispatch, getState) => {\r\n  try {\r\n    const session = cookies.get('session');\r\n    if (session) {\r\n      defaultHeaders['Session'] = session;\r\n    }\r\n    const response = await fetch(url, {\r\n      method,\r\n      body,\r\n      headers: { ...defaultHeaders, ...headers },\r\n      credentials: 'include',\r\n    });\r\n    if (response.status >= 200 && response.status < 300) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      const error = await response.json();\r\n      if (_.isObject(error) && _.isString(error.error)) {\r\n        throw new Error(error.error);\r\n      } else if (_.isString(error)) {\r\n        throw new Error(error);\r\n      } else {\r\n        throw new Error('HTTP Status ' + response.status);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    if (error.message === 'Invalid session') {\r\n      dispatch(resetUser());\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n","// export const HOST = 'http://localhost:5000';\r\nexport const HOST = 'https://vps720616.ovh.net:5000';\r\nexport const SOCKET_SERVER_IP = 'ws://127.0.0.1:6789';\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `MOST_PLAYED/LOADING`;\r\nconst SUCCESS = `MOST_PLAYED/SUCCESS`;\r\nconst ERROR = `MOST_PLAYED/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchMostPlayed = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-played` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `MOST_PLAYED_MONTH/LOADING`;\r\nconst SUCCESS = `MOST_PLAYED_MONTH/SUCCESS`;\r\nconst ERROR = `MOST_PLAYED_MONTH/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchMostPlayedMonth = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-played-month` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `LEAST_PLAYED/LOADING`;\r\nconst SUCCESS = `LEAST_PLAYED/SUCCESS`;\r\nconst ERROR = `LEAST_PLAYED/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchLeastPlayed = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-time-not-played` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport moment from 'moment';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\n\r\nconst timeStyle = {\r\n  flavour: 'long',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nexport const tooltipFormatter = (result) => {\r\n  if (!result.isExactDate) {\r\n    const resultType =\r\n      result.isMyBest === undefined && result.isMachineBest === undefined\r\n        ? 'с my best или machine best'\r\n        : result.isMyBest\r\n        ? 'с my best'\r\n        : result.isMachineBest\r\n        ? 'с machine best'\r\n        : 'хз откуда';\r\n    return (\r\n      <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n        <div>точная дата взятия неизвестна</div>\r\n        <div>скор был записан {resultType}</div>\r\n        <div>дата записи: {result.dateObject.toLocaleDateString()}</div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return result.dateObject.toLocaleDateString();\r\n  }\r\n};\r\n\r\nexport const getTimeAgo = (date) => {\r\n  const dayDiff = moment().startOf('day').diff(moment(date).startOf('day'), 'days');\r\n  const hour = moment(date).hour();\r\n  if (moment().hour() < 5) {\r\n    return dayDiff <= 1 ? 'сегодня' : timeAgo.format(date, timeStyle);\r\n  }\r\n  return dayDiff === 0\r\n    ? hour < 5\r\n      ? 'вчера ночью'\r\n      : 'сегодня'\r\n    : dayDiff === 1\r\n    ? 'вчера'\r\n    : timeAgo.format(date, timeStyle);\r\n};\r\n\r\nexport const labelToTypeLevel = (label) => {\r\n  const [type, level] = label ? label.match(/(\\D+)|(\\d+)/g) : [];\r\n  return [type, level];\r\n};\r\n","import moment from 'moment';\r\n\r\nexport const parseDate = (textDate) => {\r\n  if (typeof textDate === 'string') {\r\n    return moment(textDate).toDate();\r\n  } else {\r\n    return new Date(textDate);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaPlay } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\n// styles\r\nimport './songs-top.scss';\r\n\r\n// components\r\nimport Loader from 'components/Shared/Loader';\r\n\r\n// constants\r\n\r\n// reducers\r\nimport { fetchMostPlayed } from 'reducers/trackStats/mostPlayed';\r\nimport { fetchMostPlayedMonth } from 'reducers/trackStats/mostPlayedMonth';\r\nimport { fetchLeastPlayed } from 'reducers/trackStats/leastPlayed';\r\n\r\n// utils\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { parseDate } from 'utils/date';\r\n\r\n// code\r\nfunction TopList({ fetchList, title, renderRightSide }) {\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const getRightSide =\r\n    renderRightSide ||\r\n    (item => (\r\n      <div className=\"playcount\">\r\n        <FaPlay />\r\n        <span>{item.countplay}</span>\r\n      </div>\r\n    ));\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchList()\r\n      .then(data => {\r\n        data.success && setData(data.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [fetchList]);\r\n\r\n  return (\r\n    <div className=\"top-songs-list\">\r\n      <div className=\"top-songs-header\">\r\n        <span>{title}</span>\r\n      </div>\r\n      {isLoading && <Loader />}\r\n      {!isLoading &&\r\n        data.map((item, index) => {\r\n          return (\r\n            <div key={item.id} className=\"top-songs-item\">\r\n              <div className={classNames('place', `top-${index + 1}`, { best: index < 3 })}>\r\n                <span>{index + 1}.</span>\r\n              </div>\r\n              <div className=\"song-name\">{item.full_name}</div>\r\n              {getRightSide(item)}\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst leastPlayedRightSide = item => (\r\n  <div className=\"date\">\r\n    <span>{item.last_play ? getTimeAgo(parseDate(item.last_play)) : 'никогда'}</span>\r\n  </div>\r\n);\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    fetchMostPlayed,\r\n    fetchMostPlayedMonth,\r\n    fetchLeastPlayed,\r\n  }\r\n)(function SongsTop({ fetchMostPlayed, fetchMostPlayedMonth, fetchLeastPlayed }) {\r\n  return (\r\n    <div className=\"songs-top-page\">\r\n      <TopList fetchList={fetchMostPlayed} title=\"топ популярных треков\" />\r\n      <TopList fetchList={fetchMostPlayedMonth} title=\"топ популярных треков за месяц\" />\r\n      <TopList\r\n        fetchList={fetchLeastPlayed}\r\n        title=\"треки, которые долго не играли\"\r\n        renderRightSide={leastPlayedRightSide}\r\n      />\r\n      <div className=\"top-songs-list -placeholder\" />\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './toggle-button.scss';\r\n\r\nexport default class ToggleButton extends React.PureComponent {\r\n  static propTypes = {\r\n    text: toBe.string,\r\n    onToggle: toBe.func,\r\n    active: toBe.bool,\r\n  };\r\n\r\n  render() {\r\n    const { active, onToggle, text } = this.props;\r\n    return (\r\n      <div\r\n        className={classNames('toggle-button', { active: active })}\r\n        onClick={() => onToggle(!active)}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable react/no-deprecated */\r\n// imports from vendor deps\r\nimport React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\n\r\n// imports from styles\r\nexport default class Input extends React.Component {\r\n  static propTypes = {\r\n    value: toBe.any,\r\n    defaultValue: toBe.any,\r\n    onChange: toBe.func,\r\n    onBlur: toBe.func,\r\n    type: toBe.string,\r\n    className: toBe.string,\r\n    trimOnBlur: toBe.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    value: null,\r\n    type: 'text',\r\n    onChange: _.noop,\r\n    onBlur: _.noop,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: (!_.isNil(props.value) ? props.value : props.defaultValue) || '',\r\n    };\r\n    _.bindAll(['handleChange', 'handleBlur', 'handleKeyPress'], this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.value !== this.props.value) {\r\n      this.setState({ value: this.props.value });\r\n    }\r\n  }\r\n\r\n  handleChange(e) {\r\n    const newValue = e.target.value;\r\n    this.setState({ value: newValue }, () => this.props.onChange(newValue));\r\n  }\r\n\r\n  handleBlur(e) {\r\n    const { type } = this.props;\r\n    const { value } = this.state;\r\n    if (type === 'number') {\r\n      const numericValue = Number(value);\r\n      if (numericValue >= Number(e.target.min) && numericValue <= Number(e.target.max)) {\r\n        this.props.onBlur(numericValue, e);\r\n      } else {\r\n        this.setState({ value: this.props.value });\r\n        this.props.onBlur(this.props.value, e);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleKeyPress(e) {\r\n    if (e.key === 'Enter') {\r\n      this.handleBlur(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props;\r\n\r\n    // HACK: This component uses onInput instead of onChange\r\n    // because IE11 fails to call onChange events when you paste/cut using context menu (RMB)\r\n    // We're using onInput because it works fine, and because for text input\r\n    // there's no difference between how onChange and onInput work\r\n    return (\r\n      <input\r\n        {..._.omit(['defaultValue', 'onChange'], this.props)}\r\n        className={classNames(className, 'text-input')}\r\n        value={this.state.value}\r\n        onBlur={this.handleBlur}\r\n        onKeyPress={this.handleKeyPress}\r\n        onInput={this.handleChange}\r\n        onChange={_.noop} // Handled by onInput\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './toggle.scss';\r\n\r\n// imports from styles\r\nexport default class Toggle extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.id = _.uniqueId();\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.props.onChange(e.target.checked);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"toggle-checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle-checkbox-cb\"\r\n          id={this.id}\r\n          onChange={this.onChange}\r\n          checked={this.props.checked}\r\n        />\r\n        <label htmlFor={this.id} className=\"toggle\">\r\n          <span></span>\r\n        </label>\r\n        {this.props.children && (\r\n          <label htmlFor={this.id} className=\"text-label\">\r\n            {this.props.children}\r\n          </label>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\nimport './styles.scss';\r\n\r\nexport default class CollapsibleBar extends PureComponent {\r\n  static propTypes = {\r\n    className: toBe.string,\r\n    children: toBe.any,\r\n    title: toBe.any,\r\n    defaultOpen: toBe.bool,\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = { open: props.defaultOpen || false };\r\n  }\r\n\r\n  render() {\r\n    const { children, title, className } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classNames('collapsible-bar', className, { open })}>\r\n        <div className=\"header\" onClick={() => this.setState(state => ({ open: !state.open }))}>\r\n          <div className=\"collapse-button\">\r\n            <FaChevronRight />\r\n          </div>\r\n          <div className=\"title\">{title}</div>\r\n        </div>\r\n        {children && <div className=\"collapsible-children\">{children}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport toBe from 'prop-types';\r\nimport { Popper } from 'react-popper';\r\nimport classNames from 'classnames';\r\nimport listensToClickOutside from 'react-onclickoutside';\r\n\r\nimport './overlay.scss';\r\n\r\nconst POPPER_MODIFIERS = {\r\n  preventOverflow: {\r\n    enabled: true,\r\n    padding: 10,\r\n    boundariesElement: 'viewport',\r\n  },\r\n};\r\n\r\nconst PLACEMENT_ARROW_MAPPING = {\r\n  right: 'left',\r\n  left: 'right',\r\n  top: 'bottom',\r\n  bottom: 'top',\r\n};\r\n\r\nconst getArrowPlacement = placement => {\r\n  return placement && PLACEMENT_ARROW_MAPPING[placement.split('-')[0]];\r\n};\r\n\r\nclass Overlay extends React.PureComponent {\r\n  static propTypes = {\r\n    placement: toBe.string,\r\n    overlayItem: toBe.any,\r\n    hideWhenOutOfBounds: toBe.bool,\r\n  };\r\n\r\n  static defaultTypes = {\r\n    placement: 'bottom',\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isVisible: false,\r\n    };\r\n    this.containerItemRef = React.createRef();\r\n    this.renderPopper = this.renderPopper.bind(this);\r\n    this.toggleOverlayVisibility = this.toggleOverlayVisibility.bind(this);\r\n  }\r\n\r\n  hideOverlay() {\r\n    this.setState({\r\n      isVisible: false,\r\n    });\r\n  }\r\n\r\n  toggleOverlayVisibility() {\r\n    this.setState({\r\n      isVisible: !this.state.isVisible,\r\n    });\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    const preventHiding = event && event.target.closest('.inner-popper-overlay'); // prevent overlays from hiding when a modal is opened within overlay\r\n\r\n    if (!preventHiding) {\r\n      this.hideOverlay();\r\n    }\r\n  }\r\n\r\n  renderPopper({ ref, style, placement, arrowProps, scheduleUpdate, outOfBoundaries }) {\r\n    const { children, hideWhenOutOfBounds } = this.props;\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        data-placement={placement}\r\n        className={classNames(\r\n          'inner-popper-overlay',\r\n          `arrow-${getArrowPlacement(placement)}`,\r\n          this.props.overlayClassName,\r\n          { 'out-of-bounds': outOfBoundaries && hideWhenOutOfBounds }\r\n        )}\r\n      >\r\n        <div className=\"arrow-hider\">\r\n          <div className=\"arrow\" ref={arrowProps.ref} style={arrowProps.style} />\r\n        </div>\r\n        <div\r\n          className=\"inner-popper-content\"\r\n          // ref={ref => this.setupPopperContentRef(scheduleUpdate, ref)}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { placement, overlayItem } = this.props;\r\n    const { isVisible } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"overlay-item\"\r\n          ref={this.containerItemRef}\r\n          onClick={this.toggleOverlayVisibility}\r\n        >\r\n          {overlayItem}\r\n        </div>\r\n        {isVisible &&\r\n          ReactDOM.createPortal(\r\n            <Popper\r\n              container={document.body}\r\n              modifiers={POPPER_MODIFIERS}\r\n              placement={placement}\r\n              referenceElement={this.containerItemRef.current}\r\n            >\r\n              {this.renderPopper}\r\n            </Popper>,\r\n            document.body\r\n          )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default listensToClickOutside(Overlay);\r\n","import React from 'react';\r\nimport { Range as ReactRange, getTrackBackground } from 'react-range';\r\n\r\nexport default function Range({ range, min, max, onChange }) {\r\n  return (\r\n    <ReactRange\r\n      values={range}\r\n      step={1}\r\n      min={min}\r\n      max={max}\r\n      onChange={onChange}\r\n      renderTrack={({ props, children }) => (\r\n        <div\r\n          onMouseDown={props.onMouseDown}\r\n          onTouchStart={props.onTouchStart}\r\n          style={{\r\n            ...props.style,\r\n            position: 'relative',\r\n            height: '10px',\r\n            display: 'flex',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <div\r\n            ref={props.ref}\r\n            style={{\r\n              height: '6px',\r\n              width: '100%',\r\n              borderRadius: '3px',\r\n              background: getTrackBackground({\r\n                values: range,\r\n                colors: ['#ccc', '#88d3ff', '#ccc'],\r\n                min,\r\n                max,\r\n              }),\r\n              alignSelf: 'center',\r\n            }}\r\n          >\r\n            {children}\r\n          </div>\r\n        </div>\r\n      )}\r\n      renderThumb={({ props, isDragged }) => (\r\n        <div\r\n          {...props}\r\n          style={{\r\n            ...props.style,\r\n            height: '12px',\r\n            width: '12px',\r\n            borderRadius: '6px',\r\n            backgroundColor: '#FFF',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            boxShadow: '0px 2px 3px #AAA',\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              height: '6px',\r\n              width: '6px',\r\n              borderRadius: '3px',\r\n              backgroundColor: isDragged ? '#88d3ff' : '#CCC',\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\nimport { FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Range from 'components/Shared/Range';\r\n\r\nimport { CHART_MIN_MAX, DURATION_DEFAULT, DURATION } from 'constants/leaderboard';\r\n\r\nexport default function ChartFilter({ filterValue, onChange: onChangeEx }) {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filterValue);\r\n  const type = _.getOr(null, 'type', filterValue);\r\n  const duration = _.getOr(DURATION_DEFAULT, 'duration', filterValue);\r\n\r\n  let buttonText = 'фильтр чартов';\r\n  if (filterValue) {\r\n    const t = type || '';\r\n    buttonText = range[0] === range[1] ? `${t}${range[0]}` : `${t}${range[0]} - ${t}${range[1]}`;\r\n    buttonText = 'чарты: ' + buttonText;\r\n    if (!_.isEqual(duration, DURATION_DEFAULT)) {\r\n      buttonText += ' ***';\r\n      // buttonText += ` (${_.values(DURATION)\r\n      //   .filter(dur => duration.includes(dur))\r\n      //   .map(s => s.slice(0, 2))\r\n      //   .join('-')})`;\r\n    }\r\n  }\r\n\r\n  const onChange = value => {\r\n    onChangeEx({\r\n      range,\r\n      type,\r\n      ...value,\r\n      duration: _.isEmpty(value.duration) ? duration : value.duration,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Overlay\r\n        overlayClassName=\"chart-range-overlay-outer\"\r\n        overlayItem={\r\n          <button className=\"filter-charts-button btn btn-sm btn-dark\">{buttonText}</button>\r\n        }\r\n      >\r\n        <div className=\"chart-range-overlay\">\r\n          <div className=\"buttons\">\r\n            <ToggleButton\r\n              text=\"Single\"\r\n              active={type === 'S'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  type: active ? 'S' : null,\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Double\"\r\n              active={type === 'D'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  type: active ? 'D' : null,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <Range\r\n            range={range}\r\n            min={CHART_MIN_MAX[0]}\r\n            max={CHART_MIN_MAX[1]}\r\n            onChange={r => onChange({ range: r })}\r\n          />\r\n          <div className=\"inputs\">\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  range: [Math.max(range[0] - 1, CHART_MIN_MAX[0]), range[1]],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={CHART_MIN_MAX[0]}\r\n              max={Math.min(CHART_MIN_MAX[1], range[1])}\r\n              value={range[0]}\r\n              onBlur={value => {\r\n                onChange({ range: [value, range[1]] });\r\n              }}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMin = Math.min(range[0] + 1, CHART_MIN_MAX[1]);\r\n                onChange({\r\n                  range: [newMin, range[1] < newMin ? newMin : range[1]],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMax = Math.max(range[1] - 1, CHART_MIN_MAX[0]);\r\n                onChange({\r\n                  range: [range[0] > newMax ? newMax : range[0], newMax],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={Math.max(CHART_MIN_MAX[0], range[0])}\r\n              max={CHART_MIN_MAX[1]}\r\n              value={range[1]}\r\n              onBlur={value => onChange({ range: [range[0], value] })}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  range: [range[0], Math.min(range[1] + 1, CHART_MIN_MAX[1])],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n          </div>\r\n          <div className=\"buttons-duration\">\r\n            <ToggleButton\r\n              text=\"Standard\"\r\n              active={duration.includes(DURATION.STD)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.STD]\r\n                    : _.without([DURATION.STD], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Short\"\r\n              active={duration.includes(DURATION.SHORT)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.SHORT]\r\n                    : _.without([DURATION.SHORT], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Remix\"\r\n              active={duration.includes(DURATION.REMIX)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.REMIX]\r\n                    : _.without([DURATION.REMIX], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Full\"\r\n              active={duration.includes(DURATION.FULL)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.FULL]\r\n                    : _.without([DURATION.FULL], duration),\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Overlay>\r\n    </div>\r\n  );\r\n}\r\n","export const ranks = [\r\n  {\r\n    threshold: 0,\r\n    iconName: '0.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 1000,\r\n    iconName: '1.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 2000,\r\n    iconName: '2.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 3000,\r\n    iconName: '3.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 4000,\r\n    iconName: '4.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 5000,\r\n    iconName: '5.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 6250,\r\n    iconName: '6.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 7500,\r\n    iconName: '7.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 8750,\r\n    iconName: '8.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 10000,\r\n    iconName: '9.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 12000,\r\n    iconName: '10.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 14000,\r\n    iconName: '11.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 16000,\r\n    iconName: '12.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 18000,\r\n    iconName: '13.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 22000,\r\n    iconName: '14.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 26000,\r\n    iconName: '15.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 30000,\r\n    iconName: '16.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 35000,\r\n    iconName: '17.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 40000,\r\n    iconName: '18.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 50000,\r\n    iconName: '19.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 60000,\r\n    iconName: '20.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 70000,\r\n    iconName: '21.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 80000,\r\n    iconName: '22.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 100000,\r\n    iconName: '23.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 120000,\r\n    iconName: '24.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 140000,\r\n    iconName: '25.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 160000,\r\n    iconName: '26.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 180000,\r\n    iconName: '27.png',\r\n    color: 'green',\r\n  },\r\n];\r\n","import React from 'react';\r\n\r\nexport const gradeValue = {\r\n  F: 0.1,\r\n  D: 0.2,\r\n  'D+': 0.3,\r\n  C: 0.3,\r\n  'C+': 0.5,\r\n  B: 0.5,\r\n  'B+': 0.8,\r\n  A: 0.8,\r\n  'A+': 1,\r\n  S: 1.1,\r\n  SS: 1.2,\r\n  SSS: 1.2,\r\n};\r\n\r\nexport const getExp = (result, chart) => {\r\n  if (!result.isBestGradeOnChart) {\r\n    return 0;\r\n  }\r\n  if (chart.chartType === 'COOP') {\r\n    return (chart.chartLevel * 1000 * (gradeValue[result.grade] || 0.8)) / 8;\r\n  }\r\n  const exp = (chart.chartLevel ** 2.31 * (gradeValue[result.grade] || 0.8)) / 9;\r\n  return exp;\r\n};\r\n\r\nexport const getRankImg = rank =>\r\n  rank && (\r\n    <img\r\n      className={rank.color}\r\n      src={`${process.env.PUBLIC_URL}/ranks/${rank.iconName}`}\r\n      alt={rank.threshold}\r\n    />\r\n  );\r\n\r\nexport { ranks } from './expRanks';\r\n","import _ from 'lodash/fp';\r\n\r\nimport {\r\n  GiLoveSong,\r\n  GiLifeBar,\r\n  GiSmokingFinger,\r\n  GiSnail,\r\n  GiRetroController,\r\n  GiRank1,\r\n  GiRank2,\r\n  GiRank3,\r\n  GiWoodenPegleg,\r\n  GiPodiumSecond,\r\n} from 'react-icons/gi';\r\n\r\nexport const achievements = {\r\n  '500 комбо': {\r\n    icon: GiRank1,\r\n    description: 'Заработать 500+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 500 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  '1000 комбо': {\r\n    icon: GiRank2,\r\n    description: 'Заработать 1000+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 1000 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  '2000 комбо': {\r\n    icon: GiRank3,\r\n    description: 'Заработать 2000+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 2000 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Мастер фингеринга': {\r\n    icon: GiSmokingFinger,\r\n    description: 'Сыграть все Fingers треки',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: ['Monkey Fingers', 'Kimchi Fingers', 'Monkey Fingers 2', 'Money Fingers'],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  '8-bit': {\r\n    icon: GiRetroController,\r\n    description: 'Сыграть Seize My Day, Tales of Pumpnia и Pumptris (8bit ver.)',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: ['Seize My Day', 'Tales of Pumpnia', 'Pumptris (8bit ver.)'],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  'Love is...': {\r\n    icon: GiLoveSong,\r\n    description: 'Сыграть все Love is a Danger Zone треки',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: [\r\n        'Love is a Danger Zone',\r\n        'Love is a Danger Zone [SHORT]',\r\n        'Love is a Danger Zone (Cranky Mix)',\r\n        'Love is a Danger Zone 2',\r\n        'Love is a Danger Zone 2 [SHORT]',\r\n        'Love is a Danger Zone 2 [FULL]',\r\n        'Love is a Danger Zone 2 (D&G Ver.)',\r\n        'Love is a Danger Zone (try to B.P.M.)',\r\n      ],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  Улитка: {\r\n    icon: GiSnail,\r\n    description:\r\n      'Мастер замедлений: сыграть старшие чарты Twist of Fate, Karyawisata, Awakening и Moonlight',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: [\r\n        { song: 'Twist of Fate (feat. Ruriling)', charts: ['D20', 'S19'] },\r\n        { song: 'Karyawisata', charts: ['S20', 'D16'] },\r\n        { song: 'Awakening', charts: ['S19', 'D20'] },\r\n        { song: 'Moonlight', charts: ['S19', 'D21'] },\r\n      ],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.some(\r\n        songToPlay => chart.song === songToPlay.song && songToPlay.charts.includes(chart.chartLabel)\r\n      )\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  'Коричневая S': {\r\n    icon: GiPodiumSecond,\r\n    description: 'Получить S, но 5+ бэдов',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.miss === 0 && result.bad >= 5 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Мы выживали как могли': {\r\n    icon: GiLifeBar,\r\n    description: 'Получить B или ниже, но удержать лайфбар',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress:\r\n          state.progress === 100 ? 100 : ['B+', 'C+', 'D+'].includes(result.grade) ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Падовый мисс': {\r\n    icon: GiWoodenPegleg,\r\n    description: 'Когда от SSS тебя удерживают только миссы из-за плохого моддинга падов',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress:\r\n          state.progress === 100\r\n            ? 100\r\n            : result.miss > 0 && result.bad === 0 && result.good === 0 && result.great === 0\r\n            ? 100\r\n            : 0,\r\n      };\r\n    },\r\n  },\r\n};\r\n\r\nexport const initialAchievementState = {\r\n  progress: 0,\r\n};\r\n","export const getScoreWithoutBonus = (score, grade) => {\r\n  if (grade === 'SSS') return score - 300000;\r\n  if (grade === 'SS') return score - 150000;\r\n  if (grade === 'S') return score - 100000;\r\n  return score;\r\n};\r\n","import _ from 'lodash/fp';\r\nimport regression from 'regression';\r\n\r\nimport { ranks as expRanks } from 'utils/expRanks';\r\n\r\nconst processBattles = ({ battles, profiles, debug, resultInfo: dictScoreInfo }) => {\r\n  let logText = '';\r\n  const dictChartElo = {};\r\n  const getDictChartEloId = (score, enemyScore) =>\r\n    `${score.playerId}vs${enemyScore.playerId}-${score.sharedChartId}-${score.isRank}`;\r\n  const dictRatingDiff = {};\r\n  const getDictRatingDiffId = (score) => `${score.playerId}-${score.sharedChartId}-${score.isRank}`;\r\n  // const dictScoreInfo = {};\r\n  battles.forEach(([score, enemyScore, song]) => {\r\n    // For each battle\r\n    const p1 = profiles[score.playerId];\r\n    const p2 = profiles[enemyScore.playerId];\r\n\r\n    const scoreMultiplier = score.isRank ? 1.2 : 1;\r\n    let maxScore = null;\r\n    if (song.maxScore) {\r\n      maxScore = song.maxScore * scoreMultiplier;\r\n      if (\r\n        Math.max(maxScore, score.score, enemyScore.score) !== maxScore &&\r\n        !score.isRank &&\r\n        (!score.isExactDate || !enemyScore.isExactDate)\r\n      ) {\r\n        maxScore *= 1.2;\r\n        // Rank from machine best wasn't recognized most likely.\r\n        // Increasing max score by 20% is fine\r\n      }\r\n      if (Math.max(maxScore, score.score, enemyScore.score) !== maxScore) {\r\n        // If calculated max score isn't max score anyway, use current scores as max + cherry on top\r\n        maxScore = Math.max(maxScore, score.score, enemyScore.score) + 10000;\r\n      }\r\n    }\r\n\r\n    // Data to be appended to every score outside of this thread\r\n    if (!dictScoreInfo[score.id]) dictScoreInfo[score.id] = {};\r\n    if (!dictScoreInfo[enemyScore.id]) dictScoreInfo[enemyScore.id] = {};\r\n    const scoreInfo = dictScoreInfo[score.id];\r\n    const enemyScoreInfo = dictScoreInfo[enemyScore.id];\r\n\r\n    // Rating at the start of battle for this score\r\n    if (!scoreInfo.startingRating) scoreInfo.startingRating = p1.rating;\r\n    if (!enemyScoreInfo.startingRating) enemyScoreInfo.startingRating = p2.rating;\r\n\r\n    // Counting the number of battles\r\n    p1.battleCount++;\r\n    p2.battleCount++;\r\n\r\n    // This is one match between two players\r\n    //// Elo formula\r\n    // const r1 = score.startingRating;\r\n    // const r2 = enemyScore.startingRating;\r\n    const r1 = p1.rating;\r\n    const r2 = p2.rating;\r\n    const R1 = 10 ** (r1 / 400);\r\n    const R2 = 10 ** (r2 / 400);\r\n    const E1 = R1 / (R1 + R2);\r\n    const E2 = R2 / (R1 + R2);\r\n    let A = score.score;\r\n    let B = enemyScore.score;\r\n    let S1, S2;\r\n    if (A === B) {\r\n      S1 = S2 = 0.5;\r\n    } else if (maxScore && A !== 0 && B !== 0) {\r\n      A = maxScore / A - 1;\r\n      B = maxScore / B - 1;\r\n      S1 = (B / (A + B) - 0.5) * 5 + 0.5;\r\n      S2 = (A / (A + B) - 0.5) * 5 + 0.5;\r\n    } else {\r\n      S1 = A > B ? 1 : B < A ? 0 : 0.5;\r\n      S2 = 1 - S1;\r\n    }\r\n    S1 = Math.max(0, Math.min(1, S1)); // Set strict boundaries to [0, 1]\r\n    S2 = Math.max(0, Math.min(1, S2));\r\n\r\n    const kRating1 = Math.max(0, Math.min(1, (r1 - 700) / 800));\r\n    const kRating2 = Math.max(0, Math.min(1, (r2 - 700) / 800));\r\n    const maxK1 = 20 + 20 * kRating1;\r\n    const maxK2 = 20 + 20 * kRating2;\r\n    const chartLevel = Number(song.interpolatedDifficulty || song.chartLevel);\r\n    const kLevel1 = Math.max(\r\n      1,\r\n      Math.min(maxK1, (chartLevel / 25) ** ((kRating1 - 0.5) * 5 + 2.5) * maxK1)\r\n    );\r\n    const kLevel2 = Math.max(\r\n      1,\r\n      Math.min(maxK2, (chartLevel / 25) ** ((kRating2 - 0.5) * 5 + 2.5) * maxK2)\r\n    );\r\n    const kLevel = Math.min(kLevel1, kLevel2);\r\n\r\n    // When YOU vs ENEMY both have SS/SSS, and both scores are very close to SSS, this battle will NOT affect ELO too much\r\n    let kMinimizer = 1;\r\n    const kDropCutoff = 0.98; // Score is 98% of max score or higher -- K will be lower\r\n    if (\r\n      song.maxScore &&\r\n      (score.grade.startsWith('SS') || (score.miss === 0 && score.bad === 0)) &&\r\n      (enemyScore.grade.startsWith('SS') || (enemyScore.miss === 0 && enemyScore.bad === 0)) &&\r\n      score.score / maxScore > kDropCutoff &&\r\n      enemyScore.score / maxScore > kDropCutoff\r\n    ) {\r\n      kMinimizer =\r\n        Math.max(\r\n          Math.min(\r\n            1,\r\n            Math.max(\r\n              100 - (100 * score.score) / maxScore,\r\n              100 - (100 * enemyScore.score) / maxScore\r\n            ) /\r\n              (100 - kDropCutoff * 100)\r\n          ),\r\n          0\r\n        ) ** 2;\r\n    }\r\n\r\n    const K1 = kLevel * kMinimizer;\r\n    const K2 = kLevel * kMinimizer;\r\n    let dr1 = K1 * (S1 - E1);\r\n    let dr2 = K2 * (S2 - E2);\r\n    // Do not decrease rating if you have SSS - RIP zero-sum algorithm\r\n    dr1 = dr1 < 0 && score.grade === 'SSS' ? 0 : dr1;\r\n    dr2 = dr2 < 0 && enemyScore.grade === 'SSS' ? 0 : dr2;\r\n    // Recording this value for display\r\n    const baseEloId1 = getDictChartEloId(score, enemyScore);\r\n    const baseEloId2 = getDictChartEloId(enemyScore, score);\r\n    const baseEloP1 = dictChartElo[baseEloId1] || 0;\r\n    const baseEloP2 = dictChartElo[baseEloId2] || 0;\r\n    dictChartElo[baseEloId1] = dr1;\r\n    dictChartElo[baseEloId2] = dr2;\r\n\r\n    // Change rating as a result of this battle\r\n    p1.rating = p1.rating + dr1 - baseEloP1;\r\n    p2.rating = p2.rating + dr2 - baseEloP2;\r\n\r\n    const ratingDiffId1 = getDictRatingDiffId(score);\r\n    const ratingDiffId2 = getDictRatingDiffId(enemyScore);\r\n    dictRatingDiff[ratingDiffId1] = (dictRatingDiff[ratingDiffId1] || 0) + dr1 - baseEloP1;\r\n    dictRatingDiff[ratingDiffId2] = (dictRatingDiff[ratingDiffId2] || 0) + dr2 - baseEloP2;\r\n\r\n    // Q\r\n    scoreInfo.ratingDiff = dictRatingDiff[ratingDiffId1];\r\n    scoreInfo.ratingDiffLast = dr1 - baseEloP1;\r\n\r\n    enemyScoreInfo.ratingDiff = dictRatingDiff[ratingDiffId2];\r\n    enemyScoreInfo.ratingDiffLast = dr2 - baseEloP2;\r\n\r\n    if (debug) {\r\n      // if (score.sharedChartId === 5292) {\r\n      // if (song.song === 'Club Night') {\r\n      // if (score.nickname === 'Liza' || enemyScore.nickname === 'Liza') {\r\n      // if (!song.maxScore) {\r\n      logText += `${song.chartLabel} - ${song.song} (${song.sharedChartId}) - ${\r\n        profiles[score.playerId].name\r\n      } / ${profiles[enemyScore.playerId].name}\r\n- ${score.score} / ${enemyScore.score} (${Math.floor(maxScore)} (${Math.floor(\r\n        song.maxScore * scoreMultiplier\r\n      )})) - R ${S1.toFixed(2)}/${S2.toFixed(2)} E ${E1.toFixed(2)} / ${E2.toFixed(2)}\r\n- Rating ${r1.toFixed(2)} / ${r2.toFixed(2)} - ${dr1.toFixed(2)} / ${dr2.toFixed(\r\n        2\r\n      )} - K ${K1.toFixed(2)} ${K2.toFixed(2)}${\r\n        kMinimizer === 1 ? '' : ` (coef ${kMinimizer.toFixed(2)})`\r\n      }\r\n- Base elo: ${baseEloP1.toFixed(2)} / ${baseEloP2.toFixed(2)}\r\n- Elo change: ${(dr1 - baseEloP1).toFixed(2)} / ${(dr2 - baseEloP2).toFixed(2)}\r\n- New base elo: ${dictChartElo[baseEloId1].toFixed(2)} / ${dictChartElo[baseEloId2].toFixed(2)}\r\n- RD: ${dictRatingDiff[ratingDiffId1].toFixed(2)} / ${dictRatingDiff[ratingDiffId2].toFixed(2)}\\n`;\r\n    }\r\n    // Rating floor\r\n    p1.rating = Math.max(100, p1.rating);\r\n    p2.rating = Math.max(100, p2.rating);\r\n\r\n    const playersSorted = _.flow(\r\n      _.keys,\r\n      _.map((id) => ({ id, rating: profiles[id].rating })),\r\n      _.orderBy(['rating'], ['desc'])\r\n    )(profiles);\r\n    const battleDate =\r\n      score.dateObject > enemyScore.dateObject ? score.dateObject : enemyScore.dateObject;\r\n    playersSorted.forEach((player, index) => {\r\n      const lastPlace = profiles[player.id].lastPlace;\r\n      if (lastPlace !== index + 1) {\r\n        profiles[player.id].rankingHistory.push({\r\n          place: index + 1,\r\n          date: battleDate.getTime(),\r\n        });\r\n        profiles[player.id].lastPlace = index + 1;\r\n      }\r\n    });\r\n\r\n    const p1LastRating = _.last(p1.ratingHistory);\r\n    const p2LastRating = _.last(p2.ratingHistory);\r\n    if (p1LastRating !== p1.rating) {\r\n      p1.ratingHistory.push({\r\n        rating: p1.rating,\r\n        date: battleDate.getTime(),\r\n      });\r\n    }\r\n    if (p2LastRating !== p2.rating) {\r\n      p2.ratingHistory.push({\r\n        rating: p2.rating,\r\n        date: battleDate.getTime(),\r\n      });\r\n    }\r\n  });\r\n\r\n  _.flow(\r\n    _.keys,\r\n    _.forEach((key) => {\r\n      profiles[key].id = _.toInteger(key);\r\n      profiles[key].accuracy =\r\n        profiles[key].countAcc > 0\r\n          ? Math.round((profiles[key].sumAccuracy / profiles[key].countAcc) * 100) / 100\r\n          : null;\r\n      profiles[key].ratingRaw = profiles[key].rating;\r\n      profiles[key].rating = Math.round(profiles[key].rating);\r\n      profiles[key].rankingHistory = [\r\n        ...profiles[key].rankingHistory,\r\n        { place: _.get('place', _.last(profiles[key].rankingHistory)), date: Date.now() },\r\n      ];\r\n    })\r\n  )(profiles);\r\n  return { logText };\r\n};\r\n\r\nconst postProcessProfiles = (profiles, tracklist) => {\r\n  const getBonusForLevel = (level) => (30 * (1 + 2 ** (level / 4))) / 11;\r\n  const getMinimumNumber = (totalCharts) =>\r\n    Math.round(\r\n      Math.min(totalCharts, 1 + totalCharts / 20 + Math.sqrt(Math.max(totalCharts - 1, 0)) * 0.7)\r\n    );\r\n\r\n  const newProfiles = _.mapValues((profile) => {\r\n    const neededGrades = ['A', 'A+', 'S', 'SS', 'SSS'];\r\n    profile.expRank = _.findLast((rank) => rank.threshold <= profile.exp, expRanks);\r\n    profile.expRankNext = _.find((rank) => rank.threshold > profile.exp, expRanks);\r\n    profile.progress = {\r\n      double: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n      single: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n    };\r\n    const gradeIncrementMap = {\r\n      SSS: ['SS', 'S', 'A+', 'A'],\r\n      SS: ['SS', 'S', 'A+', 'A'],\r\n      S: ['S', 'A+', 'A'],\r\n      'A+': ['A+', 'A'],\r\n      A: ['A'],\r\n    };\r\n    const incrementLevel = (l, g, chartType) => {\r\n      const prog =\r\n        chartType === 'S' || chartType === 'SP'\r\n          ? profile.progress.single\r\n          : chartType === 'D' || chartType === 'DP'\r\n          ? profile.progress.double\r\n          : null;\r\n      if (prog) {\r\n        prog[g][l] = prog[g][l] ? prog[g][l] + 1 : 1;\r\n      }\r\n    };\r\n\r\n    profile.accuracyPointsRaw = [];\r\n    _.keys(profile.resultsByLevel).forEach((level) => {\r\n      profile.resultsByLevel[level].forEach((res) => {\r\n        if (!res.result.isRank && res.result.accuracyRaw) {\r\n          profile.accuracyPointsRaw.push([\r\n            _.toNumber(level),\r\n            res.result.accuracyRaw,\r\n            res.result.sharedChartId,\r\n          ]);\r\n        }\r\n\r\n        const thisGrade = res.result.grade;\r\n        const thisPlayerId = res.result.playerId;\r\n        const otherResults = res.chart.results.filter((r) => r.playerId === thisPlayerId);\r\n        if (otherResults.length > 1) {\r\n          const sortedResults = otherResults.sort(\r\n            (a, b) => neededGrades.indexOf(b.grade) - neededGrades.indexOf(a.grade)\r\n          );\r\n          if (sortedResults[0].grade !== thisGrade) {\r\n            return; // Don't do anything when we have a different result with better grade\r\n          }\r\n        }\r\n        const gradeIncArray = gradeIncrementMap[thisGrade];\r\n        if (gradeIncArray) {\r\n          gradeIncArray.forEach((gradeInc) => {\r\n            incrementLevel(level, gradeInc, res.chart.chartType);\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    ['single', 'double'].forEach((chartType) => {\r\n      profile.progress[`${chartType}-bonus`] = 0;\r\n      _.keys(profile.progress[chartType]).forEach((grade) => {\r\n        profile.progress[chartType][`${grade}-bonus`] = 0;\r\n        _.keys(profile.progress[chartType][grade]).forEach((level) => {\r\n          const number = profile.progress[chartType][grade][level];\r\n          const totalCharts = tracklist.data[`${chartType}sLevels`][level];\r\n          const minimumNumber = getMinimumNumber(totalCharts);\r\n          const bonusCoefficientNumber = Math.min(1, number / minimumNumber);\r\n          const rawBonus = getBonusForLevel(level);\r\n          const bonus = rawBonus * bonusCoefficientNumber;\r\n          profile.progress[chartType][grade][`${level}-bonus`] = bonus;\r\n          profile.progress[chartType][grade][`${level}-bonus-coef`] = bonusCoefficientNumber;\r\n          profile.progress[chartType][grade][`${level}-min-number`] = minimumNumber;\r\n          profile.progress[chartType][grade][`${level}-achieved-number`] = number;\r\n          if (bonus >= profile.progress[chartType][`${grade}-bonus`]) {\r\n            profile.progress[chartType][`${grade}-bonus`] = bonus;\r\n            profile.progress[chartType][`${grade}-bonus-level`] = level;\r\n            profile.progress[chartType][`${grade}-bonus-level-coef`] = bonusCoefficientNumber;\r\n            profile.progress[chartType][`${grade}-bonus-level-min-number`] = minimumNumber;\r\n            profile.progress[chartType][`${grade}-bonus-level-achieved-number`] = number;\r\n          }\r\n        });\r\n        profile.progress[`${chartType}-bonus`] += profile.progress[chartType][`${grade}-bonus`];\r\n      });\r\n    });\r\n    profile.progress.bonus = profile.progress['double-bonus'] + profile.progress['single-bonus'];\r\n    profile.achievementBonus = profile.progress.bonus;\r\n    profile.accuracy =\r\n      profile.countAcc > 0\r\n        ? Math.round((profile.sumAccuracy / profile.countAcc) * 100) / 100\r\n        : null;\r\n    return profile;\r\n  }, profiles);\r\n  return newProfiles;\r\n};\r\n\r\nconst processPP = ({ profiles, sharedCharts }) => {\r\n  const resultInfo = {};\r\n  // const now = new Date();\r\n  for (const chartId in sharedCharts) {\r\n    const chart = sharedCharts[chartId];\r\n    const chartResults = chart.results;\r\n    const chartLevel = Number(chart.interpolatedDifficulty || chart.chartLevel);\r\n    const maxPP = chartLevel ** 2.2 / 7.6; // 7;\r\n    if (chart.maxScore) {\r\n      const maxScore = chart.maxScore;\r\n      for (const result of chartResults) {\r\n        if (!result.isRank && maxScore) {\r\n          const K1 = Math.max(0, Math.min(1, result.scoreRaw / maxScore - 0.3) / 0.7);\r\n          // Optional: decrease PP values for older scores. Testing showing this doesn't change anything really\r\n          // const millisecOld = now - result.dateObject;\r\n          // const maxDays = 365;\r\n          // const maxTimeDecrease = 0;\r\n          // const K2 =\r\n          //   1 -\r\n          //   maxTimeDecrease * Math.min(1, Math.max(0, millisecOld / 1000 / 60 / 60 / 24 / maxDays));\r\n          // const K = K1 * K2;\r\n\r\n          const K = K1;\r\n\r\n          // Final PP value\r\n          const pp = K * maxPP;\r\n          // Record result data\r\n          resultInfo[result.id] = {\r\n            pp: {\r\n              pp,\r\n              k: K,\r\n              maxScore,\r\n              maxPP,\r\n              ppPotential: maxPP - pp,\r\n              ppRatio: pp / maxPP,\r\n              ppFixed: Number(pp.toFixed(1)),\r\n            },\r\n          };\r\n          const profile = profiles[result.playerId];\r\n          if (profile) {\r\n            if (!profile.pp) {\r\n              profile.pp = { scores: [], pp: 0 };\r\n            }\r\n            profile.pp.scores.push({\r\n              pp_: Number(pp.toFixed(1)),\r\n              s: chart.song,\r\n              l: chart.chartLabel,\r\n              pp,\r\n              result,\r\n              chart,\r\n              K,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Calculate total pp\r\n  for (const playerId in profiles) {\r\n    const profile = profiles[playerId];\r\n    if (profile.pp) {\r\n      profile.pp.scores.sort((a, b) => b.pp - a.pp);\r\n      profile.pp.pp = 0;\r\n      profile.pp.scores.forEach((score, index) => {\r\n        profile.pp.pp += 0.95 ** index * score.pp;\r\n      });\r\n      profile.rating = profile.pp.pp;\r\n    } else {\r\n      profile.pp = {};\r\n      profile.rating = 0;\r\n    }\r\n  }\r\n\r\n  // Add first values for rankingHistory and ratingHistory\r\n  _.flow(\r\n    _.values,\r\n    _.orderBy((profile) => profile.rating, 'desc'),\r\n    (items) =>\r\n      items.forEach((profile, index) => {\r\n        profile.ratingHistory.push({\r\n          rating: profile.rating,\r\n          date: profile.firstResultDate,\r\n        });\r\n        profile.rankingHistory.push({\r\n          place: index + 1,\r\n          date: profile.firstResultDate,\r\n        });\r\n      })\r\n  )(profiles);\r\n\r\n  return resultInfo;\r\n};\r\n\r\nconst interpolateDifficulties = ({ sharedCharts, profiles, debug }) => {\r\n  let newSharedCharts = _.mapValues((chart) => {\r\n    const datas = chart.results\r\n      .map((r) => {\r\n        const profile = profiles[r.playerId];\r\n        if (!profile || !r.accuracy || r.isRank || _.size(profile.accuracyPointsRaw) < 50) {\r\n          return null;\r\n        }\r\n\r\n        if (!profile.accuracyPointsInterpolated) {\r\n          const maxAccuracy = _.maxBy(([x, y]) => y, profile.accuracyPointsRaw)[1];\r\n          const maxLevelWithMaxAcc = _.maxBy(\r\n            ([x, y]) => x,\r\n            _.filter(([x, y]) => y === maxAccuracy, profile.accuracyPointsRaw)\r\n          )[0];\r\n          const points = profile.accuracyPointsRaw\r\n            .filter(([x, y]) => x >= maxLevelWithMaxAcc - 1)\r\n            .map(([x, y]) => [30 - x, 101 - y]);\r\n          const result = regression.logarithmic(points);\r\n\r\n          const f = (x) => {\r\n            const calculated = 101 - result.predict(30 - x)[1];\r\n            return Math.max(0, Math.min(calculated, 100));\r\n          };\r\n          const yx = [];\r\n          for (let i = 1; i <= 28; i += 0.05) {\r\n            yx.push([i, f(i)]);\r\n          }\r\n\r\n          profile.accuracyPointsInterpolated = yx;\r\n        }\r\n\r\n        const interpolatedPoint = _.find(\r\n          (pair) => pair[1] < r.accuracyRaw,\r\n          profile.accuracyPointsInterpolated\r\n        );\r\n        const returnValue = {\r\n          interpolatedDifficulty: interpolatedPoint && interpolatedPoint[0],\r\n          weight:\r\n            r.accuracyRaw > 98\r\n              ? 1 - (r.accuracyRaw - 98) / (100 - 98)\r\n              : r.accuracyRaw < 80\r\n              ? Math.max(0, (r.accuracyRaw - 50) / (80 - 50))\r\n              : 1,\r\n        };\r\n        returnValue.weight *= Math.min(\r\n          1,\r\n          Math.max(0.1, (8 - Math.abs(returnValue.interpolatedDifficulty - chart.chartLevel)) / 8)\r\n        );\r\n        if (debug) {\r\n          r.interpolation = returnValue;\r\n        }\r\n        return returnValue;\r\n      })\r\n      .filter(_.identity);\r\n    const sums = datas.reduce(\r\n      (acc, item) => {\r\n        if (!item.interpolatedDifficulty) {\r\n          return acc;\r\n        }\r\n        return {\r\n          diffSum: acc.diffSum + item.interpolatedDifficulty * item.weight,\r\n          weightSum: acc.weightSum + item.weight,\r\n        };\r\n      },\r\n      { diffSum: 0, weightSum: 0 }\r\n    );\r\n    sums.diffSum += _.toNumber(chart.chartLevel) * 2;\r\n    sums.weightSum += 2;\r\n    const averageDifficulty = sums.diffSum / sums.weightSum;\r\n    // console.log(chart.song, chart.chartLabel, JSON.stringify(datas), averageDifficulty);\r\n\r\n    return {\r\n      ...chart,\r\n      interpolatedDifficulty: averageDifficulty,\r\n    };\r\n  }, sharedCharts);\r\n  return newSharedCharts;\r\n};\r\n\r\nexport const getProcessedProfiles = ({ profiles, sharedCharts, tracklist, battles, debug }) => {\r\n  // Calculate Progress achievements and bonus for starting Elo\r\n  profiles = postProcessProfiles(profiles, tracklist);\r\n\r\n  // Recalculate chart difficulty\r\n  sharedCharts = interpolateDifficulties({ debug, sharedCharts, profiles });\r\n\r\n  // Calculate PP\r\n  const resultInfo = processPP({\r\n    profiles,\r\n    sharedCharts,\r\n  });\r\n\r\n  // Calculate ELO\r\n  const { logText } = processBattles({\r\n    battles,\r\n    profiles,\r\n    resultInfo,\r\n    debug,\r\n  });\r\n\r\n  return { profiles, resultInfo, sharedCharts, logText };\r\n};\r\n","if (localStorage) {\r\n  window.debugOn = () => {\r\n    localStorage.setItem('debug', 1);\r\n  };\r\n  window.debugOff = () => {\r\n    localStorage.removeItem('debug');\r\n  };\r\n}\r\n\r\nexport const DEBUG = localStorage && localStorage.getItem('debug');\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\nimport queryString from 'query-string';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\nimport { getExp } from 'utils/exp';\r\nimport { achievements, initialAchievementState } from 'utils/achievements';\r\nimport { parseDate } from 'utils/date';\r\nimport { getScoreWithoutBonus } from 'utils/score';\r\nimport { labelToTypeLevel } from 'utils/leaderboards';\r\n\r\nimport WorkerProfilesProcessing from 'workerize-loader!utils/workers/profilesPostProcess'; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport * as profilesProcessing from 'utils/workers/profilesPostProcess';\r\n\r\nimport { HOST } from 'constants/backend';\r\nimport { DEBUG } from 'constants/env';\r\nimport { RANK_FILTER } from 'constants/leaderboard';\r\n\r\nconst LOADING = `TOP/LOADING`;\r\nconst STOP_LOADING = `TOP/STOP_LOADING`;\r\nconst SUCCESS = `TOP/SUCCESS`;\r\nconst ERROR = `TOP/ERROR`;\r\nconst SET_FILTER = `TOP/SET_FILTER`;\r\nconst RESET_FILTER = `TOP/RESET_FILTER`;\r\nconst RANKING_CHANGE_SET = `TOP/RANKING_CHANGE_SET`;\r\nconst PROFILES_UPDATE = `TOP/PROFILES_UPDATE`;\r\n\r\nconst highscoresUrl = process.env.REACT_APP_SOCKET\r\n  ? 'results/highscores/trusted'\r\n  : 'results/highscores';\r\n\r\nexport const defaultFilter = {\r\n  rank: RANK_FILTER.SHOW_ALL,\r\n};\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  isLoadingRanking: false,\r\n  data: [],\r\n  filter: defaultFilter,\r\n  players: {},\r\n  profiles: {},\r\n  results: [],\r\n  resultInfo: {},\r\n  sharedCharts: {},\r\n};\r\n\r\nexport const gradeComparator = {\r\n  '?': 0,\r\n  F: 1,\r\n  D: 2,\r\n  'D+': 3,\r\n  C: 4,\r\n  'C+': 5,\r\n  B: 6,\r\n  'B+': 7,\r\n  A: 8,\r\n  'A+': 9,\r\n  S: 10,\r\n  SS: 11,\r\n  SSS: 12,\r\n};\r\n\r\nconst tryFixIncompleteResult = (result, maxTotalSteps) => {\r\n  if (!maxTotalSteps) {\r\n    return;\r\n  }\r\n  const infos = [result.perfect, result.great, result.good, result.bad, result.miss];\r\n  let fixableIndex = -1,\r\n    absentNumbersCount = 0,\r\n    localStepSum = 0;\r\n  for (let i = 0; i < 5; ++i) {\r\n    if (!_.isNumber(infos[i])) {\r\n      fixableIndex = i;\r\n      absentNumbersCount++;\r\n    } else {\r\n      localStepSum += infos[i];\r\n    }\r\n  }\r\n  if (absentNumbersCount === 1) {\r\n    result[['perfect', 'great', 'good', 'bad', 'miss'][fixableIndex]] =\r\n      maxTotalSteps - localStepSum;\r\n  }\r\n};\r\n\r\nconst guessGrade = (result) => {\r\n  if (result.misses === 0 && result.bads === 0 && result.goods === 0) {\r\n    if (result.greats === 0) {\r\n      return 'SSS';\r\n    } else {\r\n      return 'SS';\r\n    }\r\n  }\r\n  return result.grade;\r\n};\r\n\r\nconst mapResult = (res, players, chart) => {\r\n  if (typeof res.recognition_notes === 'undefined') {\r\n    // Short result, minimum info, only for ELO calculation\r\n    // Will be replaced with better result later\r\n    return {\r\n      id: res.id,\r\n      isUnknownPlayer: players[res.player].arcade_name === 'PUMPITUP',\r\n      isIntermediateResult: true,\r\n      sharedChartId: res.shared_chart,\r\n      playerId: res.player,\r\n      nickname: players[res.player].nickname,\r\n      nicknameArcade: players[res.player].arcade_name,\r\n      date: res.gained,\r\n      dateObject: parseDate(res.gained),\r\n      grade: res.grade,\r\n      isExactDate: !!res.exact_gain_date,\r\n      score: res.score,\r\n      scoreRaw: getScoreWithoutBonus(res.score, res.grade),\r\n      isRank: !!res.rank_mode,\r\n    };\r\n  }\r\n  // Full best result\r\n  let _r = {\r\n    isUnknownPlayer: players[res.player].arcade_name === 'PUMPITUP',\r\n    isIntermediateResult: false,\r\n    sharedChartId: res.shared_chart,\r\n    id: res.id,\r\n    playerId: res.player,\r\n    nickname: players[res.player].nickname,\r\n    nicknameArcade: players[res.player].arcade_name,\r\n    originalChartMix: res.original_mix,\r\n    originalChartLabel: res.original_label,\r\n    originalScore: res.original_score,\r\n    date: res.gained,\r\n    dateObject: parseDate(res.gained),\r\n    grade: res.grade !== '?' ? res.grade : guessGrade(res),\r\n    isExactDate: !!res.exact_gain_date,\r\n    score: res.score,\r\n    scoreRaw: getScoreWithoutBonus(res.score, res.grade),\r\n    scoreIncrease: res.score_increase,\r\n    calories: res.calories && res.calories / 1000,\r\n    perfect: res.perfects,\r\n    great: res.greats,\r\n    good: res.goods,\r\n    bad: res.bads,\r\n    miss: res.misses,\r\n    combo: res.max_combo,\r\n    mods: res.mods_list,\r\n    isRank: !!res.rank_mode,\r\n    isHJ: (res.mods_list || '').split(' ').includes('HJ'),\r\n    isMachineBest: res.recognition_notes === 'machine_best',\r\n    isMyBest: res.recognition_notes === 'personal_best',\r\n  };\r\n\r\n  tryFixIncompleteResult(_r, chart.maxTotalSteps);\r\n\r\n  const perfects = Math.sqrt(_r.perfect) * 10;\r\n  const acc = perfects\r\n    ? Math.floor(\r\n        ((perfects * 100 + _r.great * 85 + _r.good * 60 + _r.bad * 20 + _r.miss * -25) /\r\n          (perfects + _r.great + _r.good + _r.bad + _r.miss)) *\r\n          100\r\n      ) / 100\r\n    : null;\r\n  const accRaw = _r.perfect\r\n    ? Math.floor(\r\n        ((_r.perfect * 100 + _r.great * 85 + _r.good * 60 + _r.bad * 20 + _r.miss * -25) /\r\n          (_r.perfect + _r.great + _r.good + _r.bad + _r.miss)) *\r\n          100\r\n      ) / 100\r\n    : null;\r\n\r\n  _r.accuracy = acc < 0 ? 0 : accRaw === 100 ? 100 : acc && +acc.toFixed(2);\r\n  _r.accuracyRaw = _.toNumber(_r.accuracy);\r\n  return _r;\r\n};\r\n\r\nconst getMaxRawScore = (score) => {\r\n  return ((score.scoreRaw / score.accuracy) * 100) / (score.isRank ? 1.2 : 1);\r\n};\r\n\r\nconst initializeProfile = (result, profiles, players) => {\r\n  const id = result.playerId;\r\n  const resultsByLevel = _.fromPairs(Array.from({ length: 28 }).map((x, i) => [i + 1, []]));\r\n  profiles[id] = {\r\n    name: result.nickname,\r\n    nameArcade: result.nicknameArcade,\r\n    resultsByGrade: {},\r\n    resultsByLevel,\r\n    firstResultDate: result.dateObject,\r\n    lastResultDate: result.dateObject,\r\n    count: 0,\r\n    battleCount: 0,\r\n    countAcc: 0,\r\n    grades: { F: 0, D: 0, C: 0, B: 0, A: 0, S: 0, SS: 0, SSS: 0 },\r\n    sumAccuracy: 0,\r\n    rankingHistory: [],\r\n    ratingHistory: [],\r\n    lastPlace: null,\r\n    lastBattleDate: 0,\r\n    region: players[id].region,\r\n  };\r\n  profiles[id].achievements = _.flow(\r\n    _.keys,\r\n    _.map((achName) => [\r\n      achName,\r\n      { ...(achievements[achName].initialState || initialAchievementState) },\r\n    ]),\r\n    _.fromPairs\r\n  )(achievements);\r\n  profiles[id].exp = 0;\r\n};\r\n\r\nconst getProfileInfoFromResult = (result, chart, profiles) => {\r\n  const profile = profiles[result.playerId];\r\n\r\n  profile.count++;\r\n  if (result.accuracy) {\r\n    profile.countAcc++;\r\n    profile.sumAccuracy += result.accuracy;\r\n  }\r\n  profile.grades[result.grade.replace('+', '')]++;\r\n  if (chart.chartType !== 'COOP' && result.isBestGradeOnChart) {\r\n    profile.resultsByGrade[result.grade] = [\r\n      ...(profile.resultsByGrade[result.grade] || []),\r\n      { result, chart },\r\n    ];\r\n    profile.resultsByLevel[chart.chartLevel] = [\r\n      ...(profile.resultsByLevel[chart.chartLevel] || []),\r\n      { result, chart },\r\n    ];\r\n  }\r\n  if (result.isExactDate && profile.lastResultDate < result.dateObject) {\r\n    profile.lastResultDate = result.dateObject;\r\n  }\r\n  profile.achievements = _.mapValues.convert({ cap: false })((achState, achName) => {\r\n    return achievements[achName].resultFunction(result, chart, achState, profile);\r\n  }, profile.achievements);\r\n  profile.exp += getExp(result, chart);\r\n};\r\n\r\nconst processData = (data, tracklist) => {\r\n  const { players, results, shared_charts } = data;\r\n  //// Initialization\r\n  // Init for TOP\r\n  const mappedResults = [];\r\n  const getTopResultId = (result) => `${result.sharedChartId}-${result.playerId}-${result.isRank}`;\r\n  const getBestGradeResultId = (result) => `${result.sharedChartId}-${result.playerId}`;\r\n  const topResults = {}; // Temp object\r\n  const bestGradeResults = {}; // Temp object\r\n  const top = {}; // Main top scores pbject\r\n\r\n  // Battles for ELO calculation\r\n  const battles = [];\r\n\r\n  // Profiles for every player\r\n  let profiles = {};\r\n\r\n  // Loop 1\r\n  for (let resRaw of results) {\r\n    if (!players[resRaw.player]) {\r\n      // Player of this result was not found in list of players. Ignoring this result like it doesn't exist\r\n      continue;\r\n    }\r\n\r\n    const sharedChartId = resRaw.shared_chart;\r\n    // Initialize Song\r\n    if (!top[sharedChartId]) {\r\n      const sharedChart = shared_charts[sharedChartId];\r\n      const label = _.toUpper(sharedChart.chart_label);\r\n      const [chartType, chartLevel] = labelToTypeLevel(label);\r\n      top[sharedChartId] = {\r\n        song: sharedChart.track_name,\r\n        chartLabel: label,\r\n        chartLevel,\r\n        chartType,\r\n        duration: sharedChart.duration,\r\n        sharedChartId: sharedChartId,\r\n        maxTotalSteps: sharedChart.max_total_steps,\r\n        results: [],\r\n        allResultsIds: [],\r\n      };\r\n    }\r\n\r\n    // Getting current chart and result (mapped)\r\n    const chartTop = top[sharedChartId];\r\n    const result = mapResult(resRaw, players, chartTop);\r\n    mappedResults.push(result);\r\n\r\n    // Inserting result into TOP\r\n    const topResultId = getTopResultId(result);\r\n    const currentTopResult = topResults[topResultId];\r\n    if (!currentTopResult || currentTopResult.score < result.score) {\r\n      if (currentTopResult) {\r\n        const oldScoreIndex = chartTop.results.indexOf(currentTopResult);\r\n        if (oldScoreIndex !== -1) {\r\n          chartTop.results.splice(oldScoreIndex, 1);\r\n        }\r\n      }\r\n      const newScoreIndex = _.sortedLastIndexBy((r) => -r.score, result, chartTop.results);\r\n      if (!result.isUnknownPlayer || newScoreIndex === 0) {\r\n        chartTop.results.splice(newScoreIndex, 0, result);\r\n        chartTop.latestScoreDate = result.date;\r\n        chartTop.allResultsIds.push(result.playerId);\r\n        topResults[topResultId] = result;\r\n      }\r\n      if (!result.isUnknownPlayer) {\r\n        chartTop.results.forEach((enemyResult) => {\r\n          if (\r\n            !enemyResult.isUnknownPlayer &&\r\n            enemyResult.isRank === result.isRank &&\r\n            enemyResult.playerId !== result.playerId &&\r\n            result.score &&\r\n            enemyResult.score\r\n          ) {\r\n            battles.push([result, enemyResult, chartTop]);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    // Getting best grade of player on this chart\r\n    if (!result.isIntermediateResult) {\r\n      const bestGradeResultId = getBestGradeResultId(result);\r\n      const currentBestGradeRes = bestGradeResults[bestGradeResultId];\r\n      if (\r\n        !currentBestGradeRes ||\r\n        gradeComparator[currentBestGradeRes.grade] <= gradeComparator[result.grade]\r\n      ) {\r\n        // Using <= here, so newer scores always win and rewrite old scores\r\n        currentBestGradeRes && (currentBestGradeRes.isBestGradeOnChart = false);\r\n        result.isBestGradeOnChart = true;\r\n        bestGradeResults[bestGradeResultId] = result;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Loop 2, when the TOP is already set up\r\n  for (let chartId in top) {\r\n    const chart = top[chartId];\r\n    chart.maxScore = null;\r\n    for (let result of chart.results) {\r\n      if (!result.isRank) {\r\n        if (result.accuracy) {\r\n          const maxScoreCandidate = getMaxRawScore(result, chart);\r\n          if (chart.maxScore < maxScoreCandidate) {\r\n            chart.maxScore = maxScoreCandidate;\r\n          }\r\n        } else if (chart.maxScore && chart.maxScore < result.score) {\r\n          chart.maxScore = result.score;\r\n        }\r\n      }\r\n      // Getting some info about players\r\n      if (!result.isUnknownPlayer && !result.isIntermediateResult) {\r\n        if (!profiles[result.playerId]) {\r\n          initializeProfile(result, profiles, players);\r\n        }\r\n        getProfileInfoFromResult(result, chart, profiles);\r\n      }\r\n    }\r\n  }\r\n\r\n  return { mappedResults, profiles, sharedCharts: top, battles };\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case STOP_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: initialState.data,\r\n        players: initialState.players,\r\n        profiles: initialState.profiles,\r\n        results: initialState.results,\r\n        sharedCharts: initialState.sharedCharts,\r\n        scoreInfo: {},\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isLoadingRanking: true,\r\n        data: action.data,\r\n        players: action.players,\r\n        profiles: action.profiles,\r\n        results: action.results,\r\n        sharedCharts: action.sharedCharts,\r\n        originalData: action.originalData,\r\n        scoreInfo: {},\r\n      };\r\n    case PROFILES_UPDATE:\r\n      return {\r\n        ...state,\r\n        isLoadingRanking: false,\r\n        profiles: action.profiles,\r\n        resultInfo: action.resultInfo,\r\n        sharedCharts: action.sharedCharts,\r\n        data: _.values(action.sharedCharts),\r\n      };\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    case RANKING_CHANGE_SET:\r\n      const hasPrevList = !_.isEmpty(action.listPrev);\r\n      return {\r\n        ...state,\r\n        profiles: _.mapValues((playerOriginal) => {\r\n          const player = {\r\n            ...playerOriginal,\r\n            prevRating: _.get(playerOriginal.id, action.rankingsPointsMap),\r\n          };\r\n          if (!hasPrevList) {\r\n            return player; // First time opening this thing and we didn't have any previous data\r\n          }\r\n          if (!_.includes(player.id, action.listPrev)) {\r\n            return { ...player, change: 'NEW' };\r\n          } else if (!_.includes(player.id, action.listNow)) {\r\n            // Should NEVER happen, idk if this is possible\r\n            return { ...player, change: '?' };\r\n          } else {\r\n            return {\r\n              ...player,\r\n              change: _.indexOf(player.id, action.listPrev) - _.indexOf(player.id, action.listNow),\r\n            };\r\n          }\r\n        }, state.profiles),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchResults = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        fetchJson({\r\n          url: `${HOST}/${highscoresUrl}`,\r\n        })\r\n      );\r\n\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n      // HACKS for test\r\n      // data.results = _.dropRight(500, data.results);\r\n      // data.results = _.dropRight(9500, data.results);\r\n      // console.log(1, data.results);\r\n      // data.results = _.filter((res) => res.gained < '2020-07-05 00:00:00', data.results);\r\n      // data.results = _.filter(res => res.gained < '2020-03-12 16:55:00', data.results);\r\n      // data.results = _.filter(res => res.gained < '2020-03-12 16:34:51', data.results);\r\n      // console.log(2, data.results);\r\n\r\n      dispatch(processResultsData(data));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const appendNewResults = (lastDate) => {\r\n  return async (dispatch, getState) => {\r\n    const { originalData, sharedCharts } = getState().results;\r\n    if (!lastDate) {\r\n      return dispatch(fetchResults());\r\n    }\r\n\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        fetchJson({\r\n          url: `${HOST}/${highscoresUrl}?${queryString.stringify({ start_date: lastDate })}`,\r\n        })\r\n      );\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n\r\n      const appendedResults = _.filter((result) => {\r\n        const currentResults = sharedCharts[result.shared_chart];\r\n        if (!currentResults) {\r\n          return true;\r\n        }\r\n        const oldResult = _.find(\r\n          (old) =>\r\n            old.id === result.id ||\r\n            (old.playerId === result.player && old.isRank === !!result.rank_mode),\r\n          currentResults.results\r\n        );\r\n        if (!oldResult) {\r\n          if (result.player === 1 && currentResults.results[0].score > result.score) {\r\n            return false;\r\n          }\r\n          return true;\r\n        }\r\n        if (oldResult.id === result.id || oldResult.score >= result.score) {\r\n          return false;\r\n        }\r\n        return true;\r\n      }, data.results);\r\n\r\n      console.log('Received results:', data, '; Will append:', appendedResults);\r\n\r\n      if (!_.isEmpty(appendedResults)) {\r\n        const mergedData = {\r\n          players: data.players,\r\n          results: [...originalData.results, ...appendedResults],\r\n          shared_charts: { ...originalData.shared_charts, ...data.shared_charts },\r\n        };\r\n        dispatch(processResultsData(mergedData));\r\n      } else {\r\n        dispatch({ type: STOP_LOADING });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nconst processResultsData = (data) => {\r\n  return async (dispatch, getState) => {\r\n    const { tracklist } = getState();\r\n    const { sharedCharts, mappedResults, profiles, battles } = processData(data, tracklist);\r\n\r\n    dispatch({\r\n      type: SUCCESS,\r\n      data: _.values(sharedCharts),\r\n      players: _.flow(\r\n        _.toPairs,\r\n        _.map(([id, player]) => ({ ...player, id: _.toInteger(id) }))\r\n      )(data.players),\r\n      results: mappedResults,\r\n      profiles,\r\n      sharedCharts,\r\n      originalData: data,\r\n    });\r\n\r\n    // Parallelized calculation of ELO and profile data\r\n    const input = { sharedCharts, profiles, tracklist, battles, debug: DEBUG };\r\n    let promise, worker;\r\n    if (window.Worker) {\r\n      worker = new WorkerProfilesProcessing();\r\n      promise = worker.getProcessedProfiles(input);\r\n    } else {\r\n      promise = new Promise((res) => res(profilesProcessing.getProcessedProfiles(input)));\r\n    }\r\n\r\n    const output = await promise;\r\n    DEBUG && console.log(output.logText);\r\n    DEBUG &&\r\n      console.log(\r\n        'Processed profiles:',\r\n        Object.values(output.profiles)\r\n          .filter((q) => q.pp)\r\n          .sort((a, b) => b.pp.pp - a.pp.pp)\r\n      );\r\n    // console.log(output.sharedCharts);\r\n    // let byLevel = _.groupBy((ch) => ch.chartLevel, _.values(output.sharedCharts));\r\n    // function getSD(array) {\r\n    //   const n = array.length;\r\n    //   const mean = array.reduce((a, b) => a + b) / n;\r\n    //   return Math.sqrt(array.map((x) => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / n);\r\n    // }\r\n    // byLevel = _.mapValues((charts) => {\r\n    //   return {\r\n    //     avgLevel: _.meanBy((ch) => ch.interpolatedDifficulty || Number(ch.chartLevel), charts),\r\n    //     deviation: getSD(charts.map((ch) => ch.interpolatedDifficulty || Number(ch.chartLevel))),\r\n    //     charts,\r\n    //   };\r\n    // }, byLevel);\r\n    // console.log(byLevel);\r\n    // console.log(\r\n    //   _.values(byLevel)\r\n    //     .map((q) => `${q.avgLevel}\\t${q.deviation}`)\r\n    //     .join('\\n')\r\n    // );\r\n    dispatch({\r\n      type: PROFILES_UPDATE,\r\n      ...output,\r\n    });\r\n    dispatch(calculateRankingChanges(output.profiles));\r\n    if (worker) worker.terminate();\r\n  };\r\n};\r\n\r\nexport const setFilter = (filter) => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\n\r\nexport const resetFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n\r\nconst getListOfNames = _.map('id');\r\nconst getMapOfRatings = _.flow(\r\n  _.map((q) => [q.id, q.rating]),\r\n  _.fromPairs\r\n);\r\n\r\nexport const calculateRankingChanges = (profiles) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const ranking = _.orderBy('ratingRaw', 'desc', _.values(profiles));\r\n      const [lastChangedRanking, lastChangedRankingPoints, lastFetchedRanking] = await Promise.all([\r\n        localForage.getItem('lastChangedRanking_v3'),\r\n        localForage.getItem('lastChangedRankingPoints_v3'),\r\n        localForage.getItem('lastFetchedRanking_v3'),\r\n      ]);\r\n      const listNow = getListOfNames(ranking);\r\n      const listLastFetched = getListOfNames(lastFetchedRanking);\r\n      const listLastChanged = getListOfNames(lastChangedRanking);\r\n      const mapPointsNow = getMapOfRatings(ranking);\r\n      const mapPointsLastFetched = getMapOfRatings(lastFetchedRanking);\r\n      const mapPointsLastChanged = getMapOfRatings(lastChangedRankingPoints);\r\n\r\n      let rankingsPointsMap = mapPointsLastChanged;\r\n      // console.log(listNow, listLastFetched, listLastChanged);\r\n      // console.log(mapPointsNow, mapPointsLastFetched, mapPointsLastChanged);\r\n      if (!_.isEqual(mapPointsNow, mapPointsLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRankingPoints_v3', lastFetchedRanking);\r\n        rankingsPointsMap = mapPointsLastFetched;\r\n      }\r\n      let listPrev = listLastChanged;\r\n      if (!_.isEqual(listNow, listLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRanking_v3', lastFetchedRanking);\r\n        listPrev = listLastFetched;\r\n      }\r\n      dispatch({\r\n        type: RANKING_CHANGE_SET,\r\n        listNow,\r\n        listPrev,\r\n        rankingsPointsMap,\r\n      });\r\n      localForage.setItem('lastFetchedRanking_v3', ranking);\r\n    } catch (error) {\r\n      console.warn('Cannot get ranking from local storage', error);\r\n    }\r\n  };\r\n};\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\n\r\nimport { setFilter } from 'reducers/results';\r\n\r\nconst SELECT_PRESET = `PRESETS/SELECT_PRESET`;\r\nconst LOAD_PRESETS = `PRESETS/LOAD_PRESETS`;\r\nconst LOADING_START = `PRESETS/LOADING_START`;\r\nconst LOADING_END = `PRESETS/LOADING_END`;\r\n\r\nconst initialState = {\r\n  presets: [],\r\n  currentPreset: null,\r\n  isLoading: false,\r\n};\r\n\r\nconst itemToOption = item =>\r\n  item && {\r\n    ...item,\r\n    label: item.name,\r\n    value: item.name,\r\n  };\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_PRESETS:\r\n      const currentPreset = _.find({ name: _.get('name', state.currentPreset) }, action.presets);\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(currentPreset) || null,\r\n        presets: _.map(itemToOption, action.presets),\r\n      };\r\n    case SELECT_PRESET:\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(action.currentPreset),\r\n      };\r\n    case LOADING_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case LOADING_END:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst reloadPresets = presets => ({ type: LOAD_PRESETS, presets: presets || [] });\r\n\r\nconst startLoading = () => ({\r\n  type: LOADING_START,\r\n});\r\n\r\nconst endLoading = () => ({\r\n  type: LOADING_END,\r\n});\r\n\r\nexport const selectPreset = currentPreset => ({\r\n  type: SELECT_PRESET,\r\n  currentPreset,\r\n});\r\n\r\nexport const loadPresets = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    dispatch(reloadPresets(presets));\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const savePreset = name => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const { filter } = getState().top;\r\n    const newPreset = { name, filter };\r\n    if (!_.some({ name }, presets)) {\r\n      const newPresets = [...(presets || []), newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      dispatch(selectPreset(newPreset));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    } else if (window.confirm('Preset with this name already exists, replace it?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      const newPresets = [...withoutOldPreset, newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const openPreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const currentPreset = getState().presets.currentPreset;\r\n  const name = _.get('name', currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = name && _.find({ name }, presets);\r\n    if (preset) {\r\n      dispatch(selectPreset(currentPreset));\r\n      dispatch(setFilter(currentPreset.filter));\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const deletePreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const name = _.get('name', getState().presets.currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = _.find({ name }, presets);\r\n    if (preset && window.confirm('Are you sure you want to delete selected preset?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      dispatch(reloadPresets(withoutOldPreset));\r\n      localForage.setItem('filterPresets', withoutOldPreset);\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaLayerGroup, FaFolderOpen, FaSave, FaPlus, FaTrashAlt } from 'react-icons/fa';\r\nimport Select from 'react-select';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport Input from 'components/Shared/Input/Input';\r\n\r\nimport { loadPresets, savePreset, selectPreset, openPreset, deletePreset } from 'reducers/presets';\r\n\r\nconst overlayItem = (\r\n  <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n    <FaLayerGroup />\r\n    пресеты\r\n  </button>\r\n);\r\n\r\nconst noPresetsMessage = () => 'пусто';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ...state.presets,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  loadPresets,\r\n  savePreset,\r\n  openPreset,\r\n  deletePreset,\r\n  selectPreset,\r\n};\r\n\r\nclass PresetsControl extends React.Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    this.props.loadPresets();\r\n  }\r\n\r\n  onChangeSelection = selected => {\r\n    this.props.selectPreset(selected.name);\r\n  };\r\n\r\n  onRewritePreset = () => {\r\n    const { currentPreset } = this.props;\r\n    this.props.savePreset(currentPreset.name);\r\n  };\r\n\r\n  onSavePreset = () => {\r\n    const { name } = this.state;\r\n    this.props.savePreset(name);\r\n    this.setState({ isAddingNew: false });\r\n  };\r\n\r\n  render() {\r\n    const { presets, currentPreset, isLoading } = this.props;\r\n    const { name, isAddingNew } = this.state;\r\n    return (\r\n      <div>\r\n        <Overlay overlayItem={overlayItem}>\r\n          <div className=\"presets-control-overlay\">\r\n            <Select\r\n              className=\"select _margin-bottom\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"пресеты...\"\r\n              options={presets}\r\n              value={currentPreset}\r\n              onChange={this.props.selectPreset}\r\n              noOptionsMessage={noPresetsMessage}\r\n            />\r\n            {currentPreset && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.props.openPreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaFolderOpen /> открыть\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.onRewritePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaSave /> перезаписать\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon\"\r\n                  onClick={this.props.deletePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaTrashAlt /> удалить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {!isAddingNew && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left _self-align-end\"\r\n                  onClick={() => this.setState({ isAddingNew: true })}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaPlus /> добавить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {isAddingNew && (\r\n              <div className=\"adding-new _margin-bottom\">\r\n                <Input\r\n                  value={name}\r\n                  placeholder=\"имя пресета...\"\r\n                  className=\"form-control\"\r\n                  onChange={name => this.setState({ name })}\r\n                />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={this.onSavePreset}\r\n                  disabled={!name || isLoading}\r\n                >\r\n                  <FaSave /> сохранить\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={() => this.setState({ isAddingNew: false })}\r\n                  disabled={isLoading}\r\n                >\r\n                  отмена\r\n                </button>\r\n              </div>\r\n            )}\r\n            {/* <div>\r\n              <Toggle\r\n                checked={false}\r\n                onToggle={active => {\r\n                  localForage.setItem('showTabs', active);\r\n                }}\r\n              >\r\n                показывать табы с пресетами\r\n              </Toggle>\r\n            </div> */}\r\n          </div>\r\n        </Overlay>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PresetsControl);\r\n","import React from 'react';\r\n\r\nconst Flag = ({ region }) => {\r\n  return (\r\n    <div\r\n      className=\"flag-img\"\r\n      style={{\r\n        backgroundImage: `url(https://osu.ppy.sh/images/flags/${region}.png)`,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Flag;\r\n","import { useState, useEffect, useMemo, useCallback, useRef } from 'react';\r\nimport _ from 'lodash/fp';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport moment from 'moment';\r\n\r\nimport { labelToTypeLevel } from 'utils/leaderboards';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\nconst timeStyle = {\r\n  flavour: 'short',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nexport const getTimeAgo = (date) => {\r\n  const dayDiff = moment().startOf('day').diff(moment(date).startOf('day'), 'days');\r\n  return dayDiff === 0\r\n    ? 'сегодня'\r\n    : dayDiff === 1\r\n    ? 'вчера'\r\n    : timeAgo.format(date, timeStyle).replace('назад', '');\r\n};\r\n\r\nexport const preprocessData = (data) => ({\r\n  ...data,\r\n  results: _.flow(\r\n    _.get('results'),\r\n    _.toPairs,\r\n    _.map(([chartId, item]) => {\r\n      const fullRes = _.find(\r\n        (r) => _.every(_.isNumber, [r.perfects, r.greats, r.goods, r.bads, r.misses]),\r\n        item.results\r\n      );\r\n      const stepSum =\r\n        fullRes &&\r\n        [fullRes.perfects, fullRes.greats, fullRes.goods, fullRes.bads, fullRes.misses].reduce(\r\n          (sum, n) => sum + n,\r\n          0\r\n        );\r\n\r\n      const [chartType, chartLevel] = labelToTypeLevel(item.chart_label);\r\n\r\n      return {\r\n        song: item.track,\r\n        sharedChartId: _.toNumber(chartId),\r\n        chartLabel: item.chart_label,\r\n        chartLevel,\r\n        chartType,\r\n        mix: item.mix,\r\n        duration: item.duration,\r\n        results: item.results.map((res, index) => {\r\n          let resultInfoOverrides = {};\r\n          if (stepSum) {\r\n            const infos = [res.perfects, res.greats, res.goods, res.bads, res.misses];\r\n            let fixableIndex = -1;\r\n            let localStepSum = 0;\r\n            const canFix =\r\n              infos.filter((numb, index) => {\r\n                if (!_.isNumber(numb)) {\r\n                  fixableIndex = index;\r\n                  return true;\r\n                }\r\n                localStepSum += numb;\r\n                return false;\r\n              }).length === 1;\r\n            if (canFix) {\r\n              resultInfoOverrides[['perfect', 'great', 'good', 'bad', 'miss'][fixableIndex]] =\r\n                stepSum - localStepSum;\r\n            }\r\n          }\r\n          return {\r\n            id: res.id,\r\n            playerId: res.player,\r\n            nickname: data.players[res.player].nickname,\r\n            nicknameArcade: data.players[res.player].arcade_name,\r\n            originalChartMix: res.originalChartMix,\r\n            originalChartLabel: res.originalChartLabel,\r\n            originalScore: res.originalScore,\r\n            date: res.gained,\r\n            dateObject: new Date(res.gained),\r\n            grade: res.grade,\r\n            isExactDate: !!res.exact_gain_date,\r\n            score: res.score,\r\n            scoreIncrease: res.score_increase,\r\n            calories: res.calories && res.calories / 1000,\r\n            perfect: res.perfects,\r\n            great: res.greats,\r\n            good: res.goods,\r\n            bad: res.bads,\r\n            miss: res.misses,\r\n            combo: res.max_combo,\r\n            mods: res.mods_list,\r\n            isRank: !!res.rank_mode,\r\n            isHJ: (res.mods_list || '').split(' ').includes('HJ'),\r\n            ...resultInfoOverrides,\r\n          };\r\n        }),\r\n      };\r\n    }),\r\n    _.map((song) => {\r\n      return {\r\n        ...song,\r\n        latestScoreDate: song.results.reduce(\r\n          (latest, current) => (current.date > latest ? current.date : latest),\r\n          song.results[0].date\r\n        ),\r\n        results: song.results.map((res) => {\r\n          const perfects = (Math.sqrt(res.perfect) * _.toInteger(song.chartLevel)) / 2;\r\n          const acc = perfects\r\n            ? Math.floor(\r\n                ((perfects * 100 + res.great * 60 + res.good * 30 + res.miss * -20) /\r\n                  (perfects + res.great + res.good + res.bad + res.miss)) *\r\n                  100\r\n              ) / 100\r\n            : null;\r\n          const accRaw = res.perfect\r\n            ? Math.floor(\r\n                ((res.perfect * 100 + res.great * 60 + res.good * 30 + res.miss * -20) /\r\n                  (res.perfect + res.great + res.good + res.bad + res.miss)) *\r\n                  100\r\n              ) / 100\r\n            : null;\r\n          return {\r\n            ...res,\r\n            accuracy: acc < 0 ? 0 : accRaw === 100 ? 100 : acc && +acc.toFixed(2),\r\n            accuracyRaw: accRaw,\r\n            hasRankScore: _.some({ playerId: res.playerId, isRank: true }, song.results),\r\n          };\r\n        }),\r\n      };\r\n    }),\r\n    _.orderBy(['latestScoreDate', 'song', 'chartLevel'], ['desc', 'asc', 'desc'])\r\n  )(data),\r\n});\r\n\r\nexport const useTrackedEx = ({\r\n  data,\r\n  resetData,\r\n  onChange = _.noop,\r\n  isDataValid = _.identity,\r\n  isDebugOn = false,\r\n}) => {\r\n  const [prevData, setPrevData] = useState(data);\r\n  const [currData, setCurrData] = useState(data);\r\n  const resetIndicator = useRef(resetData);\r\n\r\n  useEffect(() => {\r\n    // isDebugOn && console.log('tracking effect', resetIndicatorData, data, currData, prevData);\r\n    if (resetIndicator.current !== resetData) {\r\n      // isDebugOn && console.log('resetting due to indicator chage', data);\r\n      resetIndicator.current = resetData;\r\n      setPrevData(data);\r\n      setCurrData(data);\r\n    } else if (isDataValid(data) && !_.isEqual(data, currData)) {\r\n      // isDebugOn && console.log('data has updated', data, currData);\r\n      setPrevData(currData);\r\n      setCurrData(data);\r\n      onChange(currData, data);\r\n    }\r\n  }, [data, onChange, currData, prevData, resetData, isDataValid]);\r\n\r\n  const reset = useCallback(() => {\r\n    // isDebugOn && console.log('reset called from function');\r\n    setPrevData(data);\r\n    setCurrData(data);\r\n  }, [data]);\r\n\r\n  return useMemo(() => [currData, prevData, reset], [currData, prevData, reset]);\r\n};\r\n\r\nexport const useTracked = (data, resetIndicatorData, onChange = _.noop, isDebugOn) => {\r\n  const [prevData, setPrevData] = useState(data);\r\n  const [currData, setCurrData] = useState(data);\r\n  const resetIndicator = useRef(resetIndicatorData);\r\n\r\n  useEffect(() => {\r\n    // isDebugOn && console.log('tracking effect', resetIndicatorData, data, currData, prevData);\r\n    if (resetIndicator.current !== resetIndicatorData) {\r\n      // isDebugOn && console.log('resetting due to indicator chage', data);\r\n      resetIndicator.current = resetIndicatorData;\r\n      setPrevData(data);\r\n      setCurrData(data);\r\n    } else if (data && !_.isEqual(data, currData)) {\r\n      // isDebugOn && console.log('data has updated', data, currData);\r\n      setPrevData(currData);\r\n      setCurrData(data);\r\n      onChange(currData, data);\r\n    }\r\n  }, [data, onChange, currData, prevData, resetIndicatorData]);\r\n\r\n  const reset = useCallback(() => {\r\n    // isDebugOn && console.log('reset called from function');\r\n    setPrevData(data);\r\n    setCurrData(data);\r\n  }, [data]);\r\n\r\n  return useMemo(() => [currData, prevData, reset], [currData, prevData, reset]);\r\n};\r\n\r\nexport const useResetTrackedObject = (object) => {\r\n  return useCallback(() => {\r\n    const trackings = _.values(object);\r\n    trackings.forEach((tracking) => tracking[2]());\r\n  }, [object]);\r\n};\r\n","export const colorsArray = [\r\n  '#4DB3FF',\r\n  '#80B300',\r\n  '#FF6655',\r\n  '#FF99E6',\r\n  '#33FFCC',\r\n  '#e633c8',\r\n  '#dbe812',\r\n  '#FF1A66',\r\n  '#991AFF',\r\n  '#E6B333',\r\n  '#1AB399',\r\n  '#4D8066',\r\n  '#CC9999',\r\n  '#00E680',\r\n  '#809980',\r\n  '#E6FF80',\r\n  '#1AFF33',\r\n  '#999933',\r\n  '#E6331A',\r\n  '#CCCC00',\r\n  '#66E64D',\r\n  '#4D80CC',\r\n  '#9900B3',\r\n  '#4DB380',\r\n  '#FF4D4D',\r\n];\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport _ from 'lodash/fp';\r\nimport classNames from 'classnames';\r\nimport numeral from 'numeral';\r\nimport { FaExclamationTriangle, FaAngleDoubleUp } from 'react-icons/fa';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\n\r\nimport { routes } from 'constants/routes';\r\nimport { DEBUG } from 'constants/env';\r\n\r\nimport Flag from 'components/Shared/Flag';\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\n\r\nimport { getTimeAgo as getShortTimeAgo } from 'components/SocketTracker/helpers';\r\n\r\nimport { tooltipFormatter } from 'utils/leaderboards';\r\nimport { getExp } from 'utils/exp';\r\nimport { colorsArray } from 'utils/colors';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    resultInfo: state.results.resultInfo,\r\n    profiles: state.results.profiles,\r\n  };\r\n};\r\n\r\nconst Result = (\r\n  {\r\n    // shared\r\n    res,\r\n    chart,\r\n    resultInfo,\r\n    profiles,\r\n    placeDifference,\r\n    // leaderboard\r\n    showProtagonistEloChange = false,\r\n    showProtagonistPpChange = false,\r\n    protagonistName = null,\r\n    uniqueSelectedNames = [],\r\n    // socket\r\n    leftProfile = {},\r\n    rightProfile = {},\r\n    isSocketView = false,\r\n  },\r\n  ref\r\n) => {\r\n  const inf = resultInfo[res.id] || {};\r\n\r\n  // Rating info for nickname column:\r\n  let ratingInfoBlock = null;\r\n  if (DEBUG) {\r\n    // In debug mode we show all info\r\n    ratingInfoBlock = (\r\n      <>\r\n        <span className=\"debug-elo-info\">\r\n          {' '}\r\n          {inf.startingRating && Math.round(inf.startingRating)}\r\n          {' / '}\r\n          {inf.ratingDiff > 0 ? '+' : ''}\r\n          {inf.ratingDiff && Math.round(inf.ratingDiff)}\r\n          {' / '}\r\n          {inf.pp && inf.pp.ppFixed}pp\r\n        </span>\r\n      </>\r\n    );\r\n  } else if (\r\n    res.nickname === protagonistName &&\r\n    (showProtagonistEloChange || showProtagonistPpChange)\r\n  ) {\r\n    // In non-debug mode we show relevant info for selected protagonist\r\n    ratingInfoBlock = (\r\n      <>\r\n        {' / '}\r\n        {showProtagonistEloChange && inf.ratingDiff && (\r\n          <span>{`${inf.ratingDiff > 0 ? '+' : ''}${Math.round(inf.ratingDiff)}`}</span>\r\n        )}\r\n        {showProtagonistPpChange && inf.pp && <span>{inf.pp.ppFixed}pp</span>}\r\n      </>\r\n    );\r\n  }\r\n\r\n  const flag = profiles[res.playerId] ? <Flag region={profiles[res.playerId].region} /> : null;\r\n\r\n  const nameIndex = uniqueSelectedNames.indexOf(res.nickname);\r\n\r\n  return (\r\n    <tr\r\n      key={res.id}\r\n      ref={ref}\r\n      className={classNames({\r\n        empty: !res.accuracy,\r\n        latest: new Date(chart.latestScoreDate) - new Date(res.date) < 12 * 60 * 60 * 1000,\r\n        left: res.nickname === leftProfile.name,\r\n        right: res.nickname === rightProfile.name,\r\n      })}\r\n      style={\r\n        nameIndex > -1\r\n          ? {\r\n              background: colorsArray[nameIndex] + '3A',\r\n              outline: `1px solid ${colorsArray[nameIndex]}A0`,\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      {!isSocketView && (\r\n        <td className=\"place\">{res.isSecondOccurenceInResults ? '' : `#${res.topPlace}`}</td>\r\n      )}\r\n      <td className=\"nickname\" style={nameIndex > -1 ? { fontWeight: 'bold' } : {}}>\r\n        <div className=\"nickname-container\">\r\n          {flag}\r\n          <span className=\"nickname-text\">\r\n            <NavLink exact to={routes.profile.getPath({ id: res.playerId })}>\r\n              {res.nickname}\r\n            </NavLink>\r\n            {!!placeDifference && (\r\n              <span className=\"change-holder up\">\r\n                <span>{placeDifference}</span>\r\n                <FaAngleDoubleUp />\r\n              </span>\r\n            )}\r\n            {ratingInfoBlock}\r\n          </span>\r\n          {!isSocketView && (\r\n            <div className=\"mods-container\">\r\n              {isSocketView &&\r\n                res.mods &&\r\n                res.mods\r\n                  .split(' ')\r\n                  .filter((mod) => mod.includes('AV'))\r\n                  .map((avMod) => (\r\n                    <div className=\"mod av-mod\">\r\n                      <div className=\"av-text\">AV</div>\r\n                      <div className=\"av-number\">{avMod.replace('AV', '')}</div>\r\n                    </div>\r\n                  ))}\r\n              {isSocketView &&\r\n                res.mods &&\r\n                res.mods\r\n                  .split(' ')\r\n                  .filter((mod) => mod.endsWith('X'))\r\n                  .map((xMod) => (\r\n                    <div className=\"mod x-mod\">\r\n                      <div className=\"x-number\">{xMod}</div>\r\n                    </div>\r\n                  ))}\r\n              {res.isRank && <div className=\"mod vj\">{res.isExactDate ? 'R' : 'R?'}</div>}\r\n              {res.isHJ && <div className=\"mod hj\">HJ</div>}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </td>\r\n      <td className=\"score\">\r\n        <Overlay\r\n          overlayClassName=\"score-overlay-outer\"\r\n          overlayItem={\r\n            <span className=\"score-span\">\r\n              {res.scoreIncrease > res.score * 0.8 && '*'}\r\n              {numeral(res.score).format('0,0')}\r\n            </span>\r\n          }\r\n          placement=\"top\"\r\n        >\r\n          <div className=\"score-overlay\">\r\n            {DEBUG && (\r\n              <>\r\n                <div>\r\n                  <span className=\"_grey\">result id: </span>\r\n                  {res.id}\r\n                </div>\r\n                <div>\r\n                  <span className=\"_grey\">player id: </span>\r\n                  {res.playerId}\r\n                </div>\r\n              </>\r\n            )}\r\n            <div>\r\n              <span className=\"_grey\">игрок: </span>\r\n              <NavLink exact to={routes.profile.getPath({ id: res.playerId })}>\r\n                {res.nickname} ({res.nicknameArcade})\r\n              </NavLink>\r\n            </div>\r\n            {!!getExp(res, chart) && (\r\n              <div className=\"important\">\r\n                <span className=\"_grey\">опыт: </span>+{numeral(getExp(res, chart)).format('0,0')}\r\n              </div>\r\n            )}\r\n            {_.isNumber(inf.startingRating) && _.isNumber(inf.ratingDiff) && (\r\n              <div className=\"important\">\r\n                <span className=\"_grey\">эло: {inf.startingRating.toFixed(0)} </span>\r\n                {inf.ratingDiff >= 0 ? `+${inf.ratingDiff.toFixed(0)}` : inf.ratingDiff.toFixed(0)}\r\n              </div>\r\n            )}\r\n            {inf.pp && (\r\n              <div className=\"important\">\r\n                <span className=\"_grey\">pp: </span>\r\n                <span>{inf.pp.ppFixed}pp</span>\r\n              </div>\r\n            )}\r\n            {!res.isExactDate && (\r\n              <div className=\"warning\">\r\n                <FaExclamationTriangle />\r\n                рекорд взят с my best. часть данных недоступна\r\n              </div>\r\n            )}\r\n            {!!res.isExactDate && (\r\n              <>\r\n                {!!res.mods && (\r\n                  <div>\r\n                    <span className=\"_grey\">моды: </span>\r\n                    {res.mods}\r\n                  </div>\r\n                )}\r\n                {!!res.calories && (\r\n                  <div>\r\n                    <span className=\"_grey\">ккал: </span>\r\n                    {res.calories}\r\n                  </div>\r\n                )}\r\n                {!!res.scoreIncrease && (\r\n                  <div>\r\n                    <span className=\"_grey\">прирост: </span>+\r\n                    {numeral(res.scoreIncrease).format('0,0')}\r\n                  </div>\r\n                )}\r\n                {res.originalChartMix && (\r\n                  <div>\r\n                    <div className=\"warning\">\r\n                      <FaExclamationTriangle />\r\n                      было сыграно на {res.originalChartMix}\r\n                    </div>\r\n                    {res.originalChartLabel && (\r\n                      <div>\r\n                        <span className=\"_grey\">оригинальный чарт: </span>\r\n                        {res.originalChartLabel}\r\n                      </div>\r\n                    )}\r\n                    {res.originalScore && (\r\n                      <div>\r\n                        <span className=\"_grey\">оригинальный скор: </span>\r\n                        {res.originalScore}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                {res.scoreIncrease > res.score * 0.8 && '* сайтрид'}\r\n              </>\r\n            )}\r\n          </div>\r\n        </Overlay>\r\n      </td>\r\n      <td className=\"grade\">\r\n        <div className=\"img-holder\">\r\n          {res.grade && res.grade !== '?' && (\r\n            <img src={`${process.env.PUBLIC_URL}/grades/${res.grade}.png`} alt={res.grade} />\r\n          )}\r\n          {res.grade === '?' && null}\r\n        </div>\r\n      </td>\r\n      {isSocketView && (\r\n        <td\r\n          className={classNames('mods', {\r\n            vj: res.isRank,\r\n            hj: res.isHJ,\r\n          })}\r\n        >\r\n          <div className=\"mods-container\">\r\n            {isSocketView &&\r\n              res.mods &&\r\n              res.mods\r\n                .split(' ')\r\n                .filter((mod) => mod.includes('AV'))\r\n                .map((avMod) => (\r\n                  <div className=\"av-mod\">\r\n                    <div className=\"av-text\">AV</div>\r\n                    <div className=\"av-number\">{avMod.replace('AV', '')}</div>\r\n                  </div>\r\n                ))}\r\n            {isSocketView &&\r\n              res.mods &&\r\n              res.mods\r\n                .split(' ')\r\n                .filter((mod) => mod.endsWith('X'))\r\n                .map((xMod) => (\r\n                  <div className=\"x-mod\">\r\n                    <div className=\"x-number\">{xMod}</div>\r\n                  </div>\r\n                ))}\r\n            {res.isRank && <div className=\"inner\">{res.isExactDate ? 'R' : 'R?'}</div>}\r\n            {res.isHJ && <div className=\"inner\">HJ</div>}\r\n          </div>\r\n        </td>\r\n      )}\r\n      <td className=\"number miss\">{res.miss}</td>\r\n      <td className=\"number bad\">{res.bad}</td>\r\n      <td className=\"number good\">{res.good}</td>\r\n      <td className=\"number great\">{res.great}</td>\r\n      <td className=\"number perfect\">{res.perfect}</td>\r\n      <td className=\"combo\">\r\n        {res.combo}\r\n        {res.combo ? 'x' : ''}\r\n      </td>\r\n      <td className=\"accuracy\">\r\n        {res.accuracy === 100 ? 100 : res.accuracy ? res.accuracy.toFixed(2) : ''}\r\n        {res.accuracy ? '%' : ''}\r\n      </td>\r\n      <td\r\n        className={classNames('date', {\r\n          latest: res.date === chart.latestScoreDate,\r\n        })}\r\n      >\r\n        {isSocketView ? (\r\n          getShortTimeAgo(res.dateObject)\r\n        ) : (\r\n          <Tooltip content={tooltipFormatter(res)} tooltipClassName=\"pumpking-tooltip\">\r\n            {getShortTimeAgo(res.dateObject)}\r\n            {res.isExactDate ? '' : '?'}\r\n          </Tooltip>\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null, null, { forwardRef: true })(React.forwardRef(Result));\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport default ({ type, level }) => {\r\n  return (\r\n    <div\r\n      className={classNames('chart-name', {\r\n        single: type === 'S',\r\n        singlep: type === 'SP',\r\n        doublep: type === 'DP',\r\n        double: type === 'D',\r\n        coop: type === 'COOP',\r\n      })}\r\n    >\r\n      <span className=\"chart-letter\">{type}</span>\r\n      <span className=\"chart-number\">{level}</span>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash/fp';\r\nimport { FaYoutube, FaBackward, FaForward, FaGlobeAmericas } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\nimport FlipMove from 'react-flip-move';\r\nimport queryString from 'query-string';\r\n\r\nimport { routes } from 'constants/routes';\r\nimport { DEBUG } from 'constants/env';\r\n\r\nimport Result from './Result';\r\nimport ChartLabel from './ChartLabel';\r\n\r\nconst ANIMATION_DURATION = 250;\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    allResults: state.results.results,\r\n    sharedCharts: state.results.sharedCharts,\r\n    playersHiddenStatus: props.playersHiddenStatus || state.preferences.data.playersHiddenStatus,\r\n  };\r\n};\r\n\r\nconst Chart = React.forwardRef(\r\n  (\r\n    {\r\n      allResults,\r\n      playersHiddenStatus = {},\r\n      sharedCharts = {},\r\n      // shared\r\n      chart: chartOriginal,\r\n      // leaderboards\r\n      showHiddenPlayers = false,\r\n      showProtagonistEloChange = false,\r\n      showProtagonistPpChange = false,\r\n      uniqueSelectedNames = [],\r\n      protagonistName = null,\r\n      // socket stuff\r\n      leftProfile = {},\r\n      rightProfile = {},\r\n      isSocketView = false,\r\n    },\r\n    ref\r\n  ) => {\r\n    const [overrides, setOverrides] = useState(null);\r\n    const [isHidingPlayers, setHidingPlayers] = useState(!showHiddenPlayers);\r\n\r\n    useEffect(() => {\r\n      setHidingPlayers(!showHiddenPlayers);\r\n    }, [showHiddenPlayers]);\r\n\r\n    const chart = _.first(overrides) || chartOriginal;\r\n    if (DEBUG) {\r\n      console.log(chart, overrides);\r\n    }\r\n\r\n    let topPlace = 1;\r\n    const occuredNicknames = [];\r\n    let hiddenPlayersCount = 0;\r\n    const results = chart.results.map((res, index) => {\r\n      const isPlayerHidden = isHidingPlayers && (playersHiddenStatus[res.playerId] || false);\r\n      const isSecondOccurenceInResults = occuredNicknames.includes(res.nickname);\r\n      occuredNicknames.push(res.nickname);\r\n      if (index === 0) {\r\n        topPlace = 1;\r\n      } else if (\r\n        !isSecondOccurenceInResults &&\r\n        res.score !== _.get([index - 1, 'score'], chart.results)\r\n      ) {\r\n        topPlace += 1;\r\n      }\r\n      if (isPlayerHidden) {\r\n        hiddenPlayersCount++;\r\n      }\r\n      return {\r\n        ...res,\r\n        topPlace,\r\n        isSecondOccurenceInResults,\r\n        isPlayerHidden,\r\n      };\r\n    });\r\n\r\n    const onRedoLatestResult = _.throttle(ANIMATION_DURATION + 10, (chart) => {\r\n      const newOverrides = _.drop(1, overrides);\r\n      setOverrides(_.size(newOverrides) === 1 ? null : newOverrides);\r\n    });\r\n\r\n    const onUndoLatestResult = _.throttle(ANIMATION_DURATION + 10, (chart) => {\r\n      if (_.isEmpty(results)) {\r\n        setOverrides(null);\r\n      }\r\n      const undoedResult = _.maxBy('date', results);\r\n      if (!undoedResult) return;\r\n\r\n      const undoedPlayerId = undoedResult.playerId;\r\n      const previousPlayerResult = _.findLast(\r\n        (res) =>\r\n          res.playerId === undoedPlayerId &&\r\n          res.sharedChartId === chart.sharedChartId &&\r\n          res.isRank === undoedResult.isRank &&\r\n          res.date < undoedResult.date,\r\n        allResults\r\n      );\r\n      const newResults = _.orderBy(\r\n        'score',\r\n        'desc',\r\n        _.compact(\r\n          _.map((res) => (res.id === undoedResult.id ? previousPlayerResult : res), results)\r\n        )\r\n      );\r\n      const latestScore = _.maxBy('date', newResults);\r\n      const overrideChart = {\r\n        ...chart,\r\n        latestScoreDate: latestScore && latestScore.date,\r\n        results: newResults,\r\n      };\r\n      if (_.isEmpty(newResults)) {\r\n        setOverrides(null);\r\n      } else {\r\n        setOverrides([overrideChart, ...(overrides || [chart])]);\r\n      }\r\n    });\r\n\r\n    const isActive = !_.isEmpty(overrides);\r\n    const totalResultsCount = _.countBy((id) => !playersHiddenStatus[id], chart.allResultsIds).true;\r\n    const currentIndex = isActive ? 1 + totalResultsCount - _.size(overrides) : totalResultsCount;\r\n    const canUndo = !(currentIndex === 1 && totalResultsCount === 1);\r\n\r\n    // TODO: remove check from sharedCharts when SocketTracker works off results data instead of topPerSong\r\n    const interpDiff =\r\n      chart.interpolatedDifficulty ||\r\n      _.get('interpolatedDifficulty', sharedCharts[chart.sharedChartId]);\r\n\r\n    return (\r\n      <div className=\"song-block\" ref={ref}>\r\n        <div className=\"song-name\">\r\n          <ChartLabel type={chart.chartType} level={chart.chartLevel} />\r\n          {isSocketView ? (\r\n            <div className=\"song-name-text\">\r\n              {interpDiff ? `(${interpDiff.toFixed(1)}) ` : ''}\r\n              {chart.song}\r\n            </div>\r\n          ) : (\r\n            <div className=\"song-name-text\">\r\n              <NavLink\r\n                exact\r\n                to={routes.leaderboard.sharedChart.getPath({ sharedChartId: chart.sharedChartId })}\r\n              >\r\n                {chart.song}\r\n              </NavLink>{' '}\r\n              <span className=\"_grey-text\">({interpDiff && interpDiff.toFixed(1)})</span>\r\n            </div>\r\n          )}\r\n          {!isSocketView && (\r\n            <div className=\"youtube-link\">\r\n              <a\r\n                href={`https://youtube.com/results?${queryString.stringify({\r\n                  search_query: `${chart.song} ${chart.chartLabel}`.replace(/( -)|(- )/g, ' '),\r\n                })}`}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <FaYoutube />\r\n              </a>\r\n            </div>\r\n          )}\r\n          <div className=\"_flex-fill\" />\r\n          <div className=\"right-side-block\">\r\n            {hiddenPlayersCount > 0 && (\r\n              <div\r\n                className={classNames('players-hidden-count _grey-text', {\r\n                  '_on-hover': !isSocketView,\r\n                })}\r\n              >\r\n                скрыто: {hiddenPlayersCount}\r\n              </div>\r\n            )}\r\n            {(hiddenPlayersCount > 0 || !isHidingPlayers) && !isSocketView && (\r\n              <div\r\n                className=\"globe-icon _on-hover\"\r\n                onClick={() => setHidingPlayers(!isHidingPlayers)}\r\n              >\r\n                <FaGlobeAmericas />\r\n              </div>\r\n            )}\r\n            {!isSocketView && (\r\n              <div\r\n                className={classNames('undo-result-button _on-hover', {\r\n                  active: isActive,\r\n                })}\r\n              >\r\n                <FaBackward\r\n                  className={classNames('backward-btn', { disabled: !canUndo })}\r\n                  onClick={() => canUndo && onUndoLatestResult(chart)}\r\n                />\r\n                <span className=\"number\">\r\n                  {currentIndex}/{totalResultsCount}\r\n                </span>\r\n                <FaForward\r\n                  className={classNames('forward-btn', { disabled: !isActive })}\r\n                  onClick={() => isActive && onRedoLatestResult(chart)}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"charts\">\r\n          {!_.isEmpty(results) && (\r\n            <div className=\"chart\">\r\n              <div className=\"results\">\r\n                <table>\r\n                  {/* {chartIndex === 0 && (\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"place\"></th>\r\n                        <th className=\"nickname\"></th>\r\n                        <th className=\"judge\"></th>\r\n                        <th className=\"score\">score</th>\r\n                        <th className=\"grade\"></th>\r\n                        <th className=\"number\">miss</th>\r\n                        <th className=\"number\">bad</th>\r\n                        <th className=\"number\">good</th>\r\n                        <th className=\"number\">great</th>\r\n                        <th className=\"number\">perfect</th>\r\n                        <th className=\"combo\">combo</th>\r\n                        <th className=\"accuracy\">accuracy</th>\r\n                        <th className=\"date\"></th>\r\n                      </tr>\r\n                    </thead>\r\n                  )} */}\r\n                  <FlipMove\r\n                    enterAnimation=\"fade\"\r\n                    leaveAnimation=\"fade\"\r\n                    typeName=\"tbody\"\r\n                    maintainContainerHeight\r\n                    duration={ANIMATION_DURATION}\r\n                  >\r\n                    {results.map((res, index) => {\r\n                      const isProtagonist = res.nickname === protagonistName;\r\n                      if (\r\n                        (res.isPlayerHidden && !isProtagonist) ||\r\n                        (res.isUnknownPlayer && index !== 0)\r\n                      ) {\r\n                        return null;\r\n                      }\r\n\r\n                      let placeDifference, newIndex;\r\n                      if (res.scoreIncrease && res.date === chart.latestScoreDate) {\r\n                        const prevScore = res.score - res.scoreIncrease;\r\n                        newIndex = _.findLastIndex((res) => res.score > prevScore, results);\r\n                        placeDifference = newIndex - index;\r\n                      }\r\n\r\n                      return (\r\n                        <Result\r\n                          key={res.isRank + '_' + res.nickname}\r\n                          chart={chart}\r\n                          results={results}\r\n                          res={res}\r\n                          placeDifference={placeDifference}\r\n                          showProtagonistEloChange={showProtagonistEloChange}\r\n                          showProtagonistPpChange={showProtagonistPpChange}\r\n                          uniqueSelectedNames={uniqueSelectedNames}\r\n                          protagonistName={protagonistName}\r\n                          leftProfile={leftProfile}\r\n                          rightProfile={rightProfile}\r\n                          isSocketView={isSocketView}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </FlipMove>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default connect(mapStateToProps, null, null, { forwardRef: true })(Chart);\r\n","import _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport matchSorter from 'match-sorter';\r\n\r\nimport { SORT, CHART_MIN_MAX, DURATION_DEFAULT, RANK_FILTER } from 'constants/leaderboard';\r\nimport { defaultFilter } from 'reducers/results';\r\n\r\nexport const playersSelector = createSelector(\r\n  (state) => state.results.players,\r\n  (state) => state.user.data.player.id,\r\n  (players, playerId) =>\r\n    _.flow(\r\n      _.toPairs,\r\n      _.map(([, { nickname, arcade_name, id, region }]) => ({\r\n        label: `${nickname} (${arcade_name})`,\r\n        value: nickname,\r\n        isCurrentPlayer: playerId === id,\r\n      })),\r\n      _.sortBy((it) => (it.isCurrentPlayer ? '!' : _.toLower(it.label)))\r\n    )(players)\r\n);\r\n\r\nconst filterCharts = (filter, rows) => {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filter);\r\n  const type = _.getOr(null, 'type', filter);\r\n  const duration = _.getOr(DURATION_DEFAULT, 'duration', filter);\r\n\r\n  return _.filter((row) => {\r\n    if (duration !== DURATION_DEFAULT && !duration.includes(row.duration)) {\r\n      return false;\r\n    }\r\n    return (\r\n      row.chartLevel >= range[0] &&\r\n      row.chartLevel <= range[1] &&\r\n      (!type || row.chartType.startsWith(type))\r\n    );\r\n  }, rows);\r\n};\r\n\r\nconst getFilteredData = (\r\n  data,\r\n  sharedCharts,\r\n  filter = defaultFilter,\r\n  resultInfo = {},\r\n  preferences\r\n) => {\r\n  const start = performance.now();\r\n  const playersHiddenStatus = preferences.playersHiddenStatus;\r\n  const showHidden = filter.showHiddenFromPreferences;\r\n  const names = _.map('value', filter.players);\r\n  const namesOr = _.map('value', filter.playersOr);\r\n  const namesNot = _.map('value', filter.playersNot);\r\n  const sortingType = _.get('value', filter.sortingType);\r\n  const rankFilter = _.get('value', filter.rank) || RANK_FILTER.SHOW_ALL;\r\n  const protagonist = [\r\n    SORT.PROTAGONIST,\r\n    SORT.RANK_ASC,\r\n    SORT.RANK_DESC,\r\n    SORT.PP_ASC,\r\n    SORT.PP_DESC,\r\n    SORT.NEW_SCORES_PLAYER,\r\n  ].includes(sortingType)\r\n    ? _.get('value', filter.protagonist)\r\n    : null;\r\n  const excludeAntagonists = _.map('value', filter.excludeAntagonists);\r\n\r\n  const defaultSorting = [\r\n    _.orderBy(\r\n      [\r\n        (song) =>\r\n          _.max(\r\n            _.map(\r\n              (res) =>\r\n                showHidden || !playersHiddenStatus[res.playerId] ? res.dateObject.getTime() : 0,\r\n              song.results\r\n            )\r\n          ),\r\n      ],\r\n      ['desc']\r\n    ),\r\n  ];\r\n  const newScoresProtagonistSorting = !protagonist\r\n    ? defaultSorting\r\n    : [\r\n        _.orderBy(\r\n          [\r\n            (song) =>\r\n              _.max(\r\n                _.map(\r\n                  (res) => (res.nickname === protagonist ? res.dateObject.getTime() : 0),\r\n                  song.results\r\n                )\r\n              ),\r\n          ],\r\n          ['desc']\r\n        ),\r\n      ];\r\n  const protagonistSorting = [\r\n    _.filter((row) => _.map('nickname', row.results).includes(protagonist)),\r\n    _.map((row) => {\r\n      const protIndex = _.findIndex({ nickname: protagonist }, row.results);\r\n      const protScore = row.results[protIndex].score;\r\n      const enemies = _.flow([\r\n        _.take(protIndex),\r\n        _.uniqBy('nickname'),\r\n        _.remove((res) => excludeAntagonists.includes(res.nickname) || res.score === protScore),\r\n      ])(row.results);\r\n      const distance = Math.sqrt(\r\n        _.reduce((dist, enemy) => dist + (enemy.score / protScore - 0.99) ** 2, 0, enemies)\r\n      );\r\n      return {\r\n        ...row,\r\n        distanceFromProtagonist: distance,\r\n      };\r\n    }),\r\n    _.orderBy(['distanceFromProtagonist'], ['desc']),\r\n  ];\r\n  const getPpSorting = (field, direction = 'desc') => [\r\n    _.filter((row) => _.map('nickname', row.results).includes(protagonist)),\r\n    _.orderBy(\r\n      [\r\n        (row) => {\r\n          const result = _.find({ nickname: protagonist }, row.results);\r\n          const info = resultInfo[result.id] || {};\r\n          return _.getOr(direction === 'desc' ? -Infinity : Infinity, field, info);\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const getEloSorting = (direction) => [\r\n    _.filter((row) => _.map('nickname', row.results).includes(protagonist)),\r\n    _.orderBy(\r\n      [\r\n        (row) => {\r\n          const score = _.find({ nickname: protagonist }, row.results);\r\n          const info = resultInfo[score.id];\r\n          return _.getOr(direction === 'asc' ? Infinity : -Infinity, 'ratingDiff', info);\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const getDiffSorting = (direction = 'desc') => [\r\n    _.orderBy(\r\n      [\r\n        (row) => {\r\n          const chartInfo = sharedCharts[row.sharedChartId];\r\n          return _.getOr(_.toNumber(row.chartLevel), 'interpolatedDifficulty', chartInfo);\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const sortingFunctions =\r\n    {\r\n      [SORT.DEFAULT]: defaultSorting,\r\n      [SORT.NEW_SCORES_PLAYER]: newScoresProtagonistSorting,\r\n      [SORT.PROTAGONIST]: protagonistSorting,\r\n      [SORT.RANK_ASC]: getEloSorting('asc'),\r\n      [SORT.RANK_DESC]: getEloSorting('desc'),\r\n      [SORT.PP_ASC]: getPpSorting('pp.ppRatio', 'asc'),\r\n      [SORT.PP_DESC]: getPpSorting('pp.pp'),\r\n      [SORT.EASIEST_SONGS]: getDiffSorting('asc'),\r\n      [SORT.HARDEST_SONGS]: getDiffSorting('desc'),\r\n    }[sortingType] || defaultSorting;\r\n\r\n  const result = _.flow(\r\n    _.compact([\r\n      _.map((row) => {\r\n        let latestScoreDate = null;\r\n        const occuredIds = [];\r\n        const results = row.results.filter((res, index) => {\r\n          const isVisibleWithRankFilter =\r\n            !rankFilter || rankFilter === RANK_FILTER.SHOW_ALL\r\n              ? true\r\n              : rankFilter === RANK_FILTER.SHOW_ONLY_RANK\r\n              ? res.isRank\r\n              : rankFilter === RANK_FILTER.SHOW_ONLY_NORANK\r\n              ? !res.isRank\r\n              : rankFilter === RANK_FILTER.SHOW_BEST\r\n              ? !occuredIds.includes(res.playerId)\r\n              : true;\r\n          rankFilter === RANK_FILTER.SHOW_BEST && occuredIds.push(res.playerId);\r\n\r\n          const isVisible = (!res.isUnknownPlayer || index === 0) && isVisibleWithRankFilter;\r\n          if (isVisible && (!latestScoreDate || latestScoreDate < res.date)) {\r\n            latestScoreDate = res.date;\r\n          }\r\n          return isVisible;\r\n        }, row.results);\r\n        return {\r\n          ...row,\r\n          latestScoreDate,\r\n          results,\r\n        };\r\n      }),\r\n      filter.chartRange && ((items) => filterCharts(filter.chartRange, items)),\r\n      (names.length || namesOr.length || namesNot.length) &&\r\n        _.filter((row) => {\r\n          const rowNames = _.map('nickname', row.results);\r\n          return (\r\n            (!names.length || _.every((name) => rowNames.includes(name), names)) &&\r\n            (!namesOr.length || _.some((name) => rowNames.includes(name), namesOr)) &&\r\n            (!namesNot.length || !_.some((name) => rowNames.includes(name), namesNot))\r\n          );\r\n        }),\r\n      _.filter((row) => _.size(row.results)),\r\n      ...sortingFunctions,\r\n      filter.song && ((items) => matchSorter(items, filter.song.trim(), { keys: ['song'] })),\r\n    ])\r\n  )(data);\r\n  console.log('Sorting took', performance.now() - start, 'ms');\r\n  return result;\r\n};\r\n\r\nexport const filteredDataSelector = createSelector(\r\n  (state) => state.results.data,\r\n  (state) => state.results.sharedCharts,\r\n  (state) => state.results.filter,\r\n  (state) => state.results.resultInfo,\r\n  (state) => state.preferences.data,\r\n  getFilteredData\r\n);\r\n\r\nexport const sharedChartDataSelector = createSelector(\r\n  (state) => state.results.data,\r\n  (state, props) => props.match.params.sharedChartId,\r\n  (data, sharedChartId) => {\r\n    const chartId = _.toNumber(sharedChartId);\r\n    return data.filter((chart) => chart.sharedChartId === chartId);\r\n  }\r\n);\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport _ from 'lodash/fp';\r\nimport Select from 'react-select';\r\nimport classNames from 'classnames';\r\nimport localForage from 'localforage';\r\nimport { FaRedoAlt, FaSearch, FaArrowLeft } from 'react-icons/fa';\r\n\r\n// styles\r\nimport './leaderboard.scss';\r\n\r\n// components\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport CollapsibleBar from 'components/Shared/CollapsibleBar';\r\nimport ChartFilter from './ChartFilter';\r\nimport PresetsControl from './PresetsControl';\r\nimport Chart from './Chart';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\nimport { SORT, RANK_FILTER } from 'constants/leaderboard';\r\n\r\n// reducers\r\nimport { fetchResults, setFilter, resetFilter, defaultFilter } from 'reducers/results';\r\nimport { selectPreset, openPreset } from 'reducers/presets';\r\n\r\n// utils\r\nimport { colorsArray } from 'utils/colors';\r\nimport { playersSelector, filteredDataSelector, sharedChartDataSelector } from 'reducers/selectors';\r\n\r\n// code\r\nconst sortingOptions = [\r\n  {\r\n    label: 'от новых скоров',\r\n    value: SORT.DEFAULT,\r\n  },\r\n  {\r\n    label: 'от новых скоров конкретного игрока',\r\n    value: SORT.NEW_SCORES_PLAYER,\r\n  },\r\n  // {\r\n  //   label: 'отставанию от остальных',\r\n  //   value: SORT.PROTAGONIST,\r\n  // },\r\n  {\r\n    label: 'от худших результатов (эло)',\r\n    value: SORT.RANK_ASC,\r\n  },\r\n  {\r\n    label: 'от лучших результатов (эло)',\r\n    value: SORT.RANK_DESC,\r\n  },\r\n  {\r\n    label: 'от худших результатов (pp)',\r\n    value: SORT.PP_ASC,\r\n  },\r\n  {\r\n    label: 'от лучших результатов (pp)',\r\n    value: SORT.PP_DESC,\r\n  },\r\n  {\r\n    label: 'от лёгких чартов',\r\n    value: SORT.EASIEST_SONGS,\r\n  },\r\n  {\r\n    label: 'от сложных чартов',\r\n    value: SORT.HARDEST_SONGS,\r\n  },\r\n];\r\n\r\nconst rankOptions = [\r\n  {\r\n    label: 'показывать все скоры',\r\n    value: RANK_FILTER.SHOW_ALL,\r\n  },\r\n  {\r\n    label: 'один лучший скор каждого игрока (ранк или нет)',\r\n    value: RANK_FILTER.SHOW_BEST,\r\n  },\r\n  {\r\n    label: 'только на ранке',\r\n    value: RANK_FILTER.SHOW_ONLY_RANK,\r\n  },\r\n  {\r\n    label: 'только без ранка',\r\n    value: RANK_FILTER.SHOW_ONLY_NORANK,\r\n  },\r\n];\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const isChartView = !!props.match.params.sharedChartId;\r\n\r\n  return {\r\n    isChartView,\r\n    players: playersSelector(state),\r\n    filteredData: isChartView ? sharedChartDataSelector(state, props) : filteredDataSelector(state),\r\n    filter: isChartView ? defaultFilter : state.results.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading: state.results.isLoading || state.tracklist.isLoading,\r\n    presets: state.presets.presets,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setFilter,\r\n  resetFilter,\r\n  selectPreset,\r\n  openPreset,\r\n};\r\n\r\nclass Leaderboard extends Component {\r\n  static propTypes = {\r\n    match: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  state = { showItemsCount: 20 };\r\n\r\n  setFilter = _.curry((name, value) => {\r\n    const filter = { ...this.props.filter, [name]: value };\r\n    this.props.setFilter(filter);\r\n    localForage.setItem('filter', filter);\r\n  });\r\n\r\n  resetFilter = () => {\r\n    this.props.resetFilter();\r\n    localForage.setItem('filter', defaultFilter);\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onTypeSongName = _.debounce(300, (value) => {\r\n    this.setFilter('song', value);\r\n  });\r\n\r\n  renderSimpleSearch() {\r\n    const { isLoading, filter } = this.props;\r\n    return (\r\n      <div className=\"simple-search\">\r\n        <div className=\"song-name _margin-right _margin-bottom\">\r\n          <Input\r\n            value={filter.song || ''}\r\n            placeholder=\"название песни...\"\r\n            className=\"form-control\"\r\n            onChange={this.onTypeSongName}\r\n          />\r\n        </div>\r\n        <div className=\"chart-range _margin-right _margin-bottom\">\r\n          <ChartFilter filterValue={filter.chartRange} onChange={this.setFilter('chartRange')} />\r\n        </div>\r\n        <div className=\"_flex-fill\" />\r\n        <div className=\"_flex-row _margin-bottom\">\r\n          <PresetsControl />\r\n          <button className=\"btn btn-sm btn-dark btn-icon _margin-right\" onClick={this.resetFilter}>\r\n            <FaRedoAlt /> сбросить фильтры\r\n          </button>\r\n          <button\r\n            disabled={isLoading}\r\n            className=\"btn btn-sm btn-dark btn-icon\"\r\n            onClick={this.onRefresh}\r\n          >\r\n            <FaSearch /> обновить\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFilters() {\r\n    const { players, filter } = this.props;\r\n    return (\r\n      <div className=\"filters\">\r\n        <div className=\"people-filters\">\r\n          <label className=\"label\">показывать чарты, которые сыграл:</label>\r\n          <div className=\"players-block\">\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">каждый из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'players', filter)}\r\n                onChange={this.setFilter('players')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и хоть один из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersOr', filter)}\r\n                onChange={this.setFilter('playersOr')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и никто из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersNot', filter)}\r\n                onChange={this.setFilter('playersNot')}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"people-filters\">\r\n          <div className=\"players-block\">\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">показывать ранк:</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"...\"\r\n                options={rankOptions}\r\n                value={_.getOr(null, 'rank', filter) || RANK_FILTER.SHOW_ALL}\r\n                onChange={this.setFilter('rank')}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Toggle\r\n            checked={_.getOr(false, 'showHiddenFromPreferences', filter)}\r\n            onChange={this.setFilter('showHiddenFromPreferences')}\r\n          >\r\n            показывать скрытых игроков\r\n          </Toggle>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSortings() {\r\n    const { players, filter } = this.props;\r\n    return (\r\n      <div className=\"sortings\">\r\n        <div>\r\n          <label className=\"label\">сортировка:</label>\r\n          <Select\r\n            placeholder=\"выберите сортировку\"\r\n            className=\"select\"\r\n            classNamePrefix=\"select\"\r\n            isClearable={false}\r\n            options={sortingOptions}\r\n            value={_.getOr(sortingOptions[0], 'sortingType', filter)}\r\n            onChange={this.setFilter('sortingType')}\r\n          />\r\n        </div>\r\n        {[\r\n          SORT.PROTAGONIST,\r\n          SORT.RANK_ASC,\r\n          SORT.RANK_DESC,\r\n          SORT.PP_ASC,\r\n          SORT.PP_DESC,\r\n          SORT.NEW_SCORES_PLAYER,\r\n        ].includes(_.get('sortingType.value', filter)) && (\r\n          <div>\r\n            <label className=\"label\">игрок:</label>\r\n            <Select\r\n              className={classNames('select players', {\r\n                'red-border': !_.get('protagonist', filter),\r\n              })}\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              value={_.getOr(null, 'protagonist', filter)}\r\n              onChange={this.setFilter('protagonist')}\r\n            />\r\n          </div>\r\n        )}\r\n        {[SORT.PROTAGONIST].includes(_.get('sortingType.value', filter)) && (\r\n          <div>\r\n            <label className=\"label\">не учитывать в сравнении:</label>\r\n            <Select\r\n              closeMenuOnSelect={false}\r\n              className=\"select players\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              isMulti\r\n              value={_.getOr([], 'excludeAntagonists', filter)}\r\n              onChange={this.setFilter('excludeAntagonists')}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, isChartView, filteredData, error, filter, presets } = this.props;\r\n    const { showItemsCount } = this.state;\r\n    const canShowMore = filteredData.length > showItemsCount;\r\n    const visibleData = _.slice(0, showItemsCount, filteredData);\r\n\r\n    const sortingType = _.get('sortingType.value', filter);\r\n    const showProtagonistEloChange = [SORT.RANK_ASC, SORT.RANK_DESC].includes(sortingType);\r\n    const showProtagonistPpChange = [SORT.PP_ASC, SORT.PP_DESC].includes(sortingType);\r\n    const highlightProtagonist = [\r\n      SORT.PROTAGONIST,\r\n      SORT.RANK_ASC,\r\n      SORT.RANK_DESC,\r\n      SORT.PP_ASC,\r\n      SORT.PP_DESC,\r\n      SORT.NEW_SCORES_PLAYER,\r\n    ].includes(sortingType);\r\n    const protagonistName = _.get('protagonist.value', filter);\r\n    const uniqueSelectedNames = _.slice(\r\n      0,\r\n      colorsArray.length,\r\n      _.uniq(\r\n        _.compact([\r\n          highlightProtagonist && protagonistName,\r\n          ..._.map('value', filter.players),\r\n          ..._.map('value', filter.playersOr),\r\n        ])\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div className=\"leaderboard-page\">\r\n        <div className=\"content\">\r\n          {isChartView && (\r\n            <div className=\"simple-search\">\r\n              <NavLink exact to={routes.leaderboard.path}>\r\n                <button className=\"btn btn-sm btn-dark btn-icon\">\r\n                  <FaArrowLeft /> ко всем чартам\r\n                </button>\r\n              </NavLink>\r\n            </div>\r\n          )}\r\n          {!isChartView && (\r\n            <>\r\n              <div className=\"search-block\">\r\n                {this.renderSimpleSearch()}\r\n                <CollapsibleBar title=\"фильтры\">{this.renderFilters()}</CollapsibleBar>\r\n                <CollapsibleBar title=\"сортировка\">{this.renderSortings()}</CollapsibleBar>\r\n              </div>\r\n              {!!presets.length && (\r\n                <div className=\"presets-buttons\">\r\n                  <span>пресеты:</span>\r\n                  {presets.map((preset) => (\r\n                    <ToggleButton\r\n                      key={preset.name}\r\n                      text={preset.name}\r\n                      className=\"btn btn-sm btn-dark _margin-right\"\r\n                      active={_.get('filter', preset) === filter}\r\n                      onToggle={() => {\r\n                        this.props.selectPreset(preset);\r\n                        this.props.openPreset();\r\n                      }}\r\n                    ></ToggleButton>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n          <div className=\"top-list\">\r\n            {isLoading && <Loader />}\r\n            {_.isEmpty(filteredData) && !isLoading && (error ? error.message : 'ничего не найдено')}\r\n            {!isLoading &&\r\n              visibleData.map((chart, chartIndex) => {\r\n                return (\r\n                  <Chart\r\n                    showHiddenPlayers={isChartView || filter.showHiddenFromPreferences}\r\n                    key={chart.sharedChartId}\r\n                    chart={chart}\r\n                    chartIndex={chartIndex}\r\n                    showProtagonistEloChange={showProtagonistEloChange}\r\n                    showProtagonistPpChange={showProtagonistPpChange}\r\n                    uniqueSelectedNames={uniqueSelectedNames}\r\n                    protagonistName={protagonistName}\r\n                  />\r\n                );\r\n              })}\r\n            {!isLoading && canShowMore && (\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() =>\r\n                  this.setState((state) => ({ showItemsCount: state.showItemsCount + 10 }))\r\n                }\r\n              >\r\n                show more...\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Leaderboard);\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n// import numeral from 'numeral';\r\nimport classNames from 'classnames';\r\nimport { GiQueenCrown } from 'react-icons/gi';\r\nimport { FaAngleDoubleUp, FaAngleDoubleDown } from 'react-icons/fa';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\nimport Flag from 'components/Shared/Flag';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\n// import CheckBox from 'components/Shared/CheckBox';\r\n\r\nimport { getRankImg } from 'utils/exp';\r\n\r\nconst getGradeImg = (grade) => (\r\n  <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n);\r\n\r\nexport default function RankingList({ ranking, isLoading, preferences, updatePreferences }) {\r\n  return (\r\n    <div className=\"ranking-list\">\r\n      {_.isEmpty(ranking) && !isLoading && 'ничего не найдено'}\r\n      {isLoading && <Loader />}\r\n      {!isLoading && (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"place\"></th>\r\n              <th className=\"change\"></th>\r\n              <th className=\"exp-rank\">rank</th>\r\n              <th className=\"name\">name</th>\r\n              <th className=\"name name-piu\">piu name</th>\r\n              <th className=\"rating\">elo</th>\r\n              <th className=\"rating-change-cell\"></th>\r\n              <th className=\"rating\">pp</th>\r\n              {/* <th className=\"total-score\">total score</th> */}\r\n              <th className=\"grades sss\">{getGradeImg('SSS')}</th>\r\n              <th className=\"grades ss\">{getGradeImg('SS')}</th>\r\n              <th className=\"grades s\">{getGradeImg('S')}</th>\r\n              <th className=\"grades a\">{getGradeImg('A+')}</th>\r\n              <th className=\"grades b\">{getGradeImg('B')}</th>\r\n              <th className=\"grades c\">{getGradeImg('C')}</th>\r\n              <th className=\"grades d\">{getGradeImg('D')}</th>\r\n              <th className=\"grades f\">{getGradeImg('F')}</th>\r\n              <th className=\"playcount\">scores</th>\r\n              {/* <th className=\"calories\">kcal</th> */}\r\n              <th className=\"accuracy\">accuracy</th>\r\n              <th className=\"hide-col\"> </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {ranking.map((player, playerIndex) => {\r\n              const isHidden = preferences.playersHiddenStatus[player.id];\r\n              if (isHidden && !preferences.showHiddenPlayersInRanking) {\r\n                return null;\r\n              }\r\n              return (\r\n                <tr\r\n                  className={classNames('player', { 'hidden-player': isHidden })}\r\n                  key={player.name}\r\n                >\r\n                  <td className=\"place\">\r\n                    {playerIndex === 0 ? <GiQueenCrown /> : `#${playerIndex + 1}`}\r\n                  </td>\r\n                  <td className=\"change\">\r\n                    {player.change > 0 && (\r\n                      <div className=\"change-holder up\">\r\n                        <span>{player.change}</span>\r\n                        <FaAngleDoubleUp />\r\n                      </div>\r\n                    )}\r\n                    {player.change < 0 && (\r\n                      <div className=\"change-holder down\">\r\n                        <span>{-player.change}</span>\r\n                        <FaAngleDoubleDown />\r\n                      </div>\r\n                    )}\r\n                    {!!player.change && _.isString(player.change) && (\r\n                      <div className=\"change-holder text\">\r\n                        <span>{player.change}</span>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"exp-rank\">{getRankImg(player.expRank)}</td>\r\n                  <td className=\"name\">\r\n                    <div className=\"name-container\">\r\n                      <Flag region={player.region} />\r\n                      <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                        {player.name}\r\n                      </NavLink>\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"name name-piu\">\r\n                    <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                      {player.nameArcade}\r\n                    </NavLink>\r\n                  </td>\r\n                  <td className=\"rating\">{player.rating}</td>\r\n                  <td className=\"rating-change-cell\">\r\n                    {!!player.prevRating && player.prevRating !== player.rating && (\r\n                      <span\r\n                        className={classNames('rating-change', {\r\n                          down: player.prevRating > player.rating,\r\n                          up: player.prevRating < player.rating,\r\n                        })}\r\n                      >\r\n                        {player.prevRating < player.rating ? '+' : ''}\r\n                        {player.rating - player.prevRating}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"rating secondary\">{Math.round(player.pp.pp)}</td>\r\n                  <td className=\"grades sss\">{player.grades.SSS}</td>\r\n                  <td className=\"grades ss\">{player.grades.SS}</td>\r\n                  <td className=\"grades s\">{player.grades.S}</td>\r\n                  <td className=\"grades a\">{player.grades.A}</td>\r\n                  <td className=\"grades b\">{player.grades.B}</td>\r\n                  <td className=\"grades c\">{player.grades.C}</td>\r\n                  <td className=\"grades d\">{player.grades.D}</td>\r\n                  <td className=\"grades f\">{player.grades.F}</td>\r\n                  <td className=\"playcount\">{player.count}</td>\r\n                  <td className=\"accuracy\">\r\n                    {player.accuracy ? `${player.accuracy.toFixed(2)}%` : ''}\r\n                  </td>\r\n                  <td className=\"hide-col\">\r\n                    <Toggle\r\n                      onChange={() => {\r\n                        updatePreferences(\r\n                          _.set(['playersHiddenStatus', player.id], !isHidden, preferences)\r\n                        );\r\n                      }}\r\n                      checked={!isHidden}\r\n                    />\r\n                    {/* <CheckBox\r\n                      onChange={() => {\r\n                        updatePreferences(\r\n                          _.set(['playersHiddenStatus', player.id], !isHidden, preferences)\r\n                        );\r\n                      }}\r\n                      isChecked={isHidden}\r\n                    /> */}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function RankingFaq() {\r\n  return (\r\n    <div className=\"faq\">\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Как считается рейтинг?</div>\r\n        <div className=\"answer\">\r\n          A: Используется <a href=\"https://en.wikipedia.org/wiki/Elo_rating_system\">рейтинг Эло</a>,\r\n          широко используемый в шахматах и других играх, слегка модицированный под условия игры на\r\n          пампе. Средний рейтинг - 1000. Коэффициент К зависит от уровня чарта (более сложные чарты\r\n          сильнее влияют на рейтинг). Количество очков влияет на заработанный рейтинг (маленький\r\n          отрыв от противника не даст так много очков как большой отрыв).\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Что такое рр и чем оно отличается от эло?</div>\r\n        <div className=\"answer\">\r\n          A: РР (performance points) - система очков, взятая из osu!. Эло - система рейтинга, взятая\r\n          из шахмат. Основные отличия:\r\n          <br />\r\n          С эло твои очки зависят от других игроков на этом чарте, с рр твои очки зависят только от\r\n          того, как ты сыграешь чарт.\r\n          <br />\r\n          С эло можно потерять очки или заставить другого игрока их потерять, с рр можно только\r\n          набирать больше очков.\r\n          <br />\r\n          С эло намного проще кого-то обогнать, с рр люди редко меняются местами в рейтинге.\r\n          <br />\r\n          Эло показывает кто кого обыгрывает в последнее время, а рр показывает, кто на каком\r\n          примерно уровне по скиллу.\r\n          <br />\r\n          Сейчас рейтинг сортируется по Эло. РР выступает в качестве дополнительной инфы для\r\n          интереса, плюс используется как стартовое значение Эло.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Система Эло используется для игр 1 на 1, как она используется на пампе, где на одном\r\n          чарте играет много игроков?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: Рекорды на одном чарте делятся на несколько игр 1 на 1. Если есть 3 игрока: A, B, C; то\r\n          считается, что было 3 отдельные игры: A vs B, A vs C, B vs C.\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Как считается сумма рр?</div>\r\n        <div className=\"answer\">\r\n          A: Сначала все скоры игрока сортируются по рр. Затем в общую сумму рр добавляется 100% от\r\n          лучшего скора, 95% от второго скора, 90% от третьего, 86% от 4-го и так далее. (Формула\r\n          коэффициента - 0.95^N). Таким образом, на общую сумму рр больше всего влияют самые лучшие\r\n          результаты человека за всё время, и чтобы поднять свой уровень рр, нужно получать новые\r\n          топовые результаты (и поднимать свой скилл).\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Учитываются ли рекорды на ранке в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: Да. Как минимум потому что у нас есть много рекордов, взятых с машин бестов, и мы не\r\n          знаем наверняка, на ранке они или нет. Если у игрока в топе есть два скора - на ранке и\r\n          без ранка, используется тот, где больше очков.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Почему меня нет в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: В таблицу попадают только те, у кого есть хотя бы 20 игр 1 на 1. Первые 20 игр\r\n          используются для определения изначального рейтинга.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Почему суммарное количество оценок S-A-B не совпадает с общим количеством скоров?\r\n        </div>\r\n        <div className=\"answer\">A: Не для каждого результата известна оценка.</div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Если у меня есть несколько рекордов на А, несколько на А+, как считается суммарное\r\n          количество грейдов в таблице?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: В каждой колонке учитываются обе буквы - и треснутые, и с удержанным лайфом. То есть и\r\n          А, и А+ идут в колонку А. Точно так же для B, C, D.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Убери аккураси из таблицы!</div>\r\n        <div className=\"answer\">A: Грем, это секция для вопросов.</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import _ from 'lodash/fp';\r\n\r\nimport { fetchJson, postJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `PREFERENCES/LOADING`;\r\nconst SUCCESS = `PREFERENCES/SUCCESS`;\r\nconst ERROR = `PREFERENCES/ERROR`;\r\n// const UPDATE_LOADING = `PREFERENCES/UPDATE/LOADING`;\r\n// const UPDATE_SUCCESS = `PREFERENCES/UPDATE/SUCCESS`;\r\n// const UPDATE_ERROR = `PREFERENCES/UPDATE/ERROR`;\r\nconst CHANGE = `PREFERENCES/CHANGE`;\r\n\r\nconst defaultPreferences = {\r\n  playersHiddenStatus: {},\r\n};\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: defaultPreferences,\r\n  error: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: defaultPreferences,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: _.merge(defaultPreferences, action.data),\r\n      };\r\n    case CHANGE:\r\n      return {\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchPreferences = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/profile/preferences` }));\r\n      dispatch({ type: SUCCESS, data: data.preferences });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchUserPreferences = (id) => {\r\n  return async (dispatch) => {\r\n    const data = await dispatch(fetchJson({ url: `${HOST}/player/${id}/preferences` }));\r\n    return data;\r\n  };\r\n};\r\n\r\nexport const updatePreferences = (preferences) => {\r\n  return async (dispatch) => {\r\n    // dispatch({ type: LOADING });\r\n    dispatch({ type: CHANGE, data: preferences });\r\n    try {\r\n      await dispatch(\r\n        postJson({\r\n          url: `${HOST}/profile/preferences`,\r\n          body: { preferences },\r\n        })\r\n      );\r\n      // dispatch({ type: SUCCESS, data: data.preferences });\r\n      // return data.preferences;\r\n    } catch (error) {\r\n      // dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle } from 'react-icons/fa';\r\nimport { Link, Route, withRouter } from 'react-router-dom';\r\nimport { createSelector } from 'reselect';\r\nimport _ from 'lodash/fp';\r\n\r\n// styles\r\nimport './ranking.scss';\r\n\r\n// components\r\nimport RankingList from './RankingList';\r\nimport RankingFaq from './RankingFaq';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\nimport { updatePreferences } from 'reducers/preferences';\r\n\r\n// utils\r\n\r\n// code\r\nconst rankingSelector = createSelector(\r\n  (state) => state.results.profiles,\r\n  // _.flow(_.values, _.orderBy(['pp.pp'], ['desc']))\r\n  _.flow(_.values, _.orderBy(['ratingRaw'], ['desc']))\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    preferences: state.preferences.data,\r\n    ranking: rankingSelector(state),\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading:\r\n      state.results.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  updatePreferences,\r\n};\r\n\r\nclass Ranking extends Component {\r\n  static propTypes = {\r\n    ranking: toBe.array,\r\n    error: toBe.object,\r\n    preferences: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n    updatePreferences: toBe.func.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    ranking: [],\r\n  };\r\n\r\n  onChangeHidingPlayers = () => {\r\n    const { preferences, updatePreferences } = this.props;\r\n\r\n    updatePreferences(\r\n      _.set(['showHiddenPlayersInRanking'], !preferences.showHiddenPlayersInRanking, preferences)\r\n    );\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, ranking, error, preferences, updatePreferences } = this.props;\r\n    return (\r\n      <div className=\"ranking-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.path}\r\n              render={() => (\r\n                <>\r\n                  <button\r\n                    className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                    onClick={this.onChangeHidingPlayers}\r\n                  >\r\n                    {preferences.showHiddenPlayersInRanking\r\n                      ? 'скрыть невыбранных'\r\n                      : 'показать всех'}\r\n                  </button>\r\n                  <Link to={routes.ranking.faq.path}>\r\n                    <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n                      <FaQuestionCircle /> faq\r\n                    </button>\r\n                  </Link>\r\n                  <button\r\n                    disabled={isLoading}\r\n                    className=\"btn btn-sm btn-dark btn-icon\"\r\n                    onClick={this.onRefresh}\r\n                  >\r\n                    <FaSearch /> обновить\r\n                  </button>\r\n                </>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.faq.path}\r\n              render={() => (\r\n                <Link to={routes.ranking.path}>\r\n                  <button className=\"btn btn-sm btn-dark btn-icon\">назад</button>\r\n                </Link>\r\n              )}\r\n            />\r\n          </div>\r\n          <Route\r\n            exact\r\n            path={routes.ranking.path}\r\n            render={() => (\r\n              <RankingList\r\n                ranking={ranking}\r\n                isLoading={isLoading}\r\n                preferences={preferences}\r\n                updatePreferences={updatePreferences}\r\n              />\r\n            )}\r\n          />\r\n          <Route exact path={routes.ranking.faq.path} component={RankingFaq} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Ranking));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\nimport { FaPlay } from 'react-icons/fa';\r\nimport { MdExpandMore } from 'react-icons/md';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { parseDate } from 'utils/date';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nimport { routes } from 'constants/routes';\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport './most-played.scss';\r\n\r\nexport default connect((state) => ({ charts: state.results.sharedCharts }), { fetchJson })(\r\n  ({ playerId, charts, fetchJson }) => {\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [limit, setLimit] = useState(10);\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n      setLoading(true);\r\n      fetchJson({\r\n        url: `${HOST}/player/${playerId}/mostPlayed?limit=${limit}`,\r\n      })\r\n        .then((result) => {\r\n          setLoading(false);\r\n          if (result.success) {\r\n            setData(result.data);\r\n          }\r\n        })\r\n        .catch(() => {\r\n          setLoading(false);\r\n        });\r\n    }, [playerId, limit, fetchJson]);\r\n\r\n    return (\r\n      <div className=\"most-played\">\r\n        {isLoading && <Loader />}\r\n        {data.map((item) => {\r\n          const chart = charts[item.shared_chart];\r\n          return (\r\n            <div className=\"chart\" key={item.shared_chart}>\r\n              <div\r\n                className={classNames('chart-name', {\r\n                  single: chart.chartType === 'S',\r\n                  singlep: chart.chartType === 'SP',\r\n                  doublep: chart.chartType === 'DP',\r\n                  double: chart.chartType === 'D',\r\n                  coop: chart.chartType === 'COOP',\r\n                })}\r\n              >\r\n                <span className=\"chart-letter\">{chart.chartType}</span>\r\n                <span className=\"chart-number\">{chart.chartLevel}</span>\r\n              </div>\r\n              <div className=\"song-name\">\r\n                <NavLink\r\n                  exact\r\n                  to={routes.leaderboard.sharedChart.getPath({\r\n                    sharedChartId: chart.sharedChartId,\r\n                  })}\r\n                >\r\n                  {chart.song}\r\n                </NavLink>\r\n              </div>\r\n              <div className=\"date\">\r\n                {item.latestDate ? getTimeAgo(parseDate(item.latestDate)) : null}\r\n              </div>\r\n              <div className=\"playcount\">\r\n                <FaPlay />\r\n                <span>{item.count}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        {limit === _.size(data) && (\r\n          <button\r\n            className=\"show-more btn btn-sm btn-dark btn-icon\"\r\n            onClick={() => setLimit(limit + 10)}\r\n          >\r\n            <MdExpandMore /> больше\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React from 'react';\r\n\r\nimport { ranks, getRankImg } from 'utils/exp';\r\n\r\nexport default function ExpFaq() {\r\n  return (\r\n    <div className=\"faq-exp\">\r\n      <div className=\"faq-header\">\r\n        <strong>Опыт</strong> игрока основывается на количестве сыгранных песен и чартов.\r\n        <br />\r\n        Чем выше уровень чарта и чем лучше оценка на чарте, тем больше опыта он даёт.\r\n        <br />\r\n        Повторные попытки на тех же чартах не дают больше опыта. Чтобы поднимать свой уровень, играй\r\n        новые треки и чарты.\r\n      </div>\r\n      <div className=\"faq-header\">Список уровней и необходимый опыт для их получения:</div>\r\n      <div className=\"ranks-list\">\r\n        {ranks.map(rank => (\r\n          <div key={rank.threshold} className=\"rank\">\r\n            <div className=\"exp-rank\">{getRankImg(rank)}</div>\r\n            <div className=\"threshold\">{rank.threshold}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const SET_FILTER = `PROFILES/SET_FILTER`;\r\nconst RESET_FILTER = `PROFILES/RESET_FILTER`;\r\n\r\nexport const defaultFilter = {};\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  filter: defaultFilter,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setProfilesFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\n\r\nexport const resetProfilesFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n","import _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport moment from 'moment';\r\n\r\nconst cutRange = (array, range) => {\r\n  const startIndex = _.findIndex(item => item.date > range[0], array);\r\n  const endIndex = _.findLastIndex(item => item.date < range[1], array);\r\n  let firstElement =\r\n    startIndex > 0 ? array[startIndex - 1] : startIndex === 0 ? array[startIndex] : _.last(array);\r\n  let lastElement = endIndex > -1 ? array[endIndex] : _.first(array);\r\n  firstElement = { ...firstElement, date: range[0] };\r\n  lastElement = { ...lastElement, date: range[1] };\r\n  const middleElements =\r\n    startIndex > -1 && endIndex > -1 ? array.slice(startIndex, endIndex + 1) : [];\r\n\r\n  return [firstElement, ...middleElements, lastElement];\r\n};\r\n\r\nconst defaultGradesDistribution = {\r\n  SSS: 0,\r\n  SS: 0,\r\n  S: 0,\r\n  'A+': 0,\r\n  A: 0,\r\n  B: 0,\r\n  C: 0,\r\n  D: 0,\r\n  F: 0,\r\n};\r\nconst defaultGradesWithLevelsDistribution = _.flow(\r\n  _.flatMap(type => {\r\n    return _.flow(\r\n      _.toPairs,\r\n      _.map(([grade, value]) => [`${type}-${grade}`, value])\r\n    )(defaultGradesDistribution);\r\n  }),\r\n  _.fromPairs\r\n)(['S', 'D']);\r\n\r\nexport const profileSelectorCreator = idParamName =>\r\n  createSelector(\r\n    (state, props) => _.toInteger(props.match.params[idParamName]),\r\n    state => state.results.isLoading || state.results.isLoadingRanking,\r\n    state => state.results.profiles,\r\n    state => state.profiles.filter,\r\n    state => state.tracklist.data,\r\n    (id, isLoading, profiles, filter, tracklist) => {\r\n      const profile = profiles[id];\r\n      if (_.isEmpty(profile) || isLoading) {\r\n        return null;\r\n      }\r\n      const levelsDistribution = _.flow(\r\n        _.get('resultsByLevel'),\r\n        _.toPairs,\r\n        _.map(([x, y]) => ({\r\n          x: _.toInteger(x),\r\n          S:\r\n            (_.size(\r\n              _.filter(res => res.chart.chartType === 'S' || res.chart.chartType === 'SP', y)\r\n            ) /\r\n              tracklist.singlesLevels[x]) *\r\n            100,\r\n          D:\r\n            (-_.size(\r\n              _.filter(res => res.chart.chartType === 'D' || res.chart.chartType === 'DP', y)\r\n            ) /\r\n              tracklist.doublesLevels[x]) *\r\n            100,\r\n        }))\r\n      )(profile);\r\n      const gradesData = _.flow(\r\n        _.get('resultsByLevel'),\r\n        _.toPairs,\r\n        _.map(\r\n          _.update('[1].result.grade', grade =>\r\n            grade && grade.includes('+') && grade !== 'A+' ? grade.replace('+', '') : grade\r\n          )\r\n        )\r\n      )(profile);\r\n      const gradesDistribution = _.flow(\r\n        _.map(([x, y]) => ({\r\n          x: _.toInteger(x),\r\n          ...defaultGradesDistribution,\r\n          ..._.omit('?', _.mapValues(_.size, _.groupBy('result.grade', y))),\r\n        })),\r\n        _.map(item => {\r\n          const grades = _.pick(Object.keys(defaultGradesDistribution), item);\r\n          const sum = _.sum(_.values(grades));\r\n          return {\r\n            ...item,\r\n            gradesValues: grades,\r\n            ...(sum === 0 ? grades : _.mapValues(value => (100 * value) / sum, grades)),\r\n          };\r\n        })\r\n      )(gradesData);\r\n      const gradesAndLevelsDistribution = _.flow(\r\n        _.map(([x, y]) => {\r\n          const groupedResults = _.groupBy('result.grade', y);\r\n          const counts = _.omit(\r\n            '?',\r\n            _.mapValues(\r\n              _.countBy(res => {\r\n                return res.chart.chartType === 'S' || res.chart.chartType === 'SP'\r\n                  ? 'S'\r\n                  : res.chart.chartType === 'D' || res.chart.chartType === 'DP'\r\n                  ? 'D'\r\n                  : 'Other';\r\n              }),\r\n              groupedResults\r\n            )\r\n          );\r\n          const reduced = _.reduce(\r\n            (acc, [grade, levelsData]) => {\r\n              const accData = _.flow(\r\n                _.toPairs,\r\n                _.map(([type, count]) => [\r\n                  `${type}-${grade}`,\r\n                  type === 'S'\r\n                    ? (count / tracklist.singlesLevels[x]) * 100\r\n                    : (-count / tracklist.doublesLevels[x]) * 100,\r\n                ]),\r\n                _.fromPairs\r\n              )(levelsData);\r\n              return { ...acc, ...accData };\r\n            },\r\n            {},\r\n            _.toPairs(counts)\r\n          );\r\n\r\n          return {\r\n            x: _.toInteger(x),\r\n            ...defaultGradesWithLevelsDistribution,\r\n            ...reduced,\r\n          };\r\n        })\r\n      )(gradesData);\r\n\r\n      const lastTickRating = _.last(profile.ratingHistory).date;\r\n      const lastTickRanking = _.last(profile.rankingHistory).date;\r\n      const lastTick = lastTickRating > lastTickRanking ? lastTickRating : lastTickRanking; // End graph at either point\r\n      const firstTick = _.first(profile.ratingHistory).date; // Start graph from the first battle of this player\r\n      const lastDay = moment(lastTick).endOf('day');\r\n      const firstDay = moment(firstTick).startOf('day');\r\n      const minMaxRange = [firstDay / 1000 / 60 / 60 / 24, lastDay / 1000 / 60 / 60 / 24];\r\n\r\n      const filterRange = filter.dayRange || [\r\n        Math.max(minMaxRange[0], minMaxRange[1] - 30),\r\n        minMaxRange[1],\r\n      ];\r\n      const dayRangeMs = [\r\n        +moment(filterRange[0] * 1000 * 60 * 60 * 24).startOf('day'),\r\n        +moment(filterRange[1] * 1000 * 60 * 60 * 24).endOf('day'),\r\n      ];\r\n      const placesChanges = cutRange(profile.rankingHistory, dayRangeMs);\r\n      const ratingChanges = cutRange(profile.ratingHistory, dayRangeMs);\r\n\r\n      const rank = 1 + _.findIndex({ id }, _.orderBy(['ratingRaw'], ['desc'], _.values(profiles)));\r\n\r\n      return {\r\n        ...profile,\r\n        rank,\r\n        minMaxRange,\r\n        filterRange,\r\n        levelsDistribution,\r\n        gradesDistribution,\r\n        gradesAndLevelsDistribution,\r\n        placesChanges,\r\n        ratingChanges,\r\n      };\r\n    }\r\n  );\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle, FaTimes, FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport ReactModal from 'react-modal';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport Select from 'react-select';\r\nimport moment from 'moment';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as RechartsTooltip,\r\n  ReferenceLine,\r\n  CartesianGrid,\r\n  Line,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Label,\r\n  Scatter,\r\n  ScatterChart,\r\n} from 'recharts';\r\nimport _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\n\r\n// styles\r\nimport './profile.scss';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\nimport { DEBUG } from 'constants/env';\r\n\r\n// components\r\nimport Range from 'components/Shared/Range';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport MostPlayed from './MostPlayed';\r\nimport ExpFaq from './ExpFaq';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\nimport { setProfilesFilter, resetProfilesFilter } from 'reducers/profiles';\r\n\r\n// utils\r\nimport { profileSelectorCreator } from 'utils/profiles';\r\nimport { parseDate } from 'utils/date';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { achievements } from 'utils/achievements';\r\nimport { getRankImg } from 'utils/exp';\r\n\r\n// code\r\nconst MIN_GRAPH_HEIGHT = undefined;\r\n\r\nconst profileSelector = profileSelectorCreator('id');\r\n\r\nexport const otherPlayersSelector = createSelector(\r\n  (state) => state.results.players,\r\n  (state, props) => _.toNumber(props.match.params.id),\r\n  (players, id) =>\r\n    _.flow(\r\n      _.toPairs,\r\n      _.map(([ind, { nickname, arcade_name, id }]) => ({\r\n        label: `${nickname} (${arcade_name})`,\r\n        value: nickname,\r\n        id: _.toNumber(id),\r\n      })),\r\n      _.remove((it) => it.id === id),\r\n      _.sortBy((it) => _.toLower(it.label))\r\n    )(players)\r\n);\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    profile: profileSelector(state, props),\r\n    otherPlayers: otherPlayersSelector(state, props),\r\n    tracklist: state.tracklist.data,\r\n    filter: state.profiles.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    sharedCharts: state.results.sharedCharts,\r\n    isLoading:\r\n      state.results.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setProfilesFilter,\r\n  resetProfilesFilter,\r\n};\r\n\r\nclass Profile extends Component {\r\n  static propTypes = {\r\n    profile: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    profile: {},\r\n  };\r\n\r\n  state = {\r\n    isLevelGraphCombined: true,\r\n    showFaq: false,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetProfilesFilter();\r\n  }\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onChangeDayRange = (range) => {\r\n    const { filter } = this.props;\r\n    this.props.setProfilesFilter({\r\n      ...filter,\r\n      dayRange: range,\r\n    });\r\n  };\r\n\r\n  onShowFaq = () => {\r\n    this.setState({ showFaq: true });\r\n  };\r\n\r\n  onHideFaq = () => {\r\n    this.setState({ showFaq: false });\r\n  };\r\n\r\n  renderRankingHistory() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={profile.ratingChanges} margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={(value) => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={['dataMin - 100', 'dataMax + 100']}\r\n            tickFormatter={Math.round}\r\n            width={40}\r\n          />\r\n          <ReferenceLine y={1000} stroke=\"white\" />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Rating: {Math.round(payload[0].value)}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  circleShape = (args) => (\r\n    <circle key={args.key} cx={args.cx} cy={args.cy} r={4} fill={args.fill}></circle>\r\n  );\r\n  renderAccuracyPoints(interpolated = false) {\r\n    const { profile, sharedCharts } = this.props;\r\n    const pointsByType = _.groupBy(([, , chartId]) => {\r\n      const type = sharedCharts[chartId].chartType;\r\n      return type === 'D' || type === 'DP';\r\n    }, profile.accuracyPointsRaw);\r\n    if (!interpolated) {\r\n      return (\r\n        <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n          <ScatterChart margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis\r\n              dataKey=\"[0]\"\r\n              type=\"number\"\r\n              domain={[1, 28]}\r\n              tickFormatter={(value) => Math.round(value)}\r\n              ticks={[1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27]}\r\n            />\r\n            <YAxis\r\n              dataKey=\"[1]\"\r\n              type=\"number\"\r\n              domain={[0, 100]}\r\n              width={40}\r\n              tickFormatter={(value) => Math.round(value) + '%'}\r\n            />\r\n            <Scatter data={pointsByType.true} shape={this.circleShape} fill=\"#169c16\" />\r\n            <Scatter data={pointsByType.false} shape={this.circleShape} fill=\"#af2928\" />\r\n            <RechartsTooltip\r\n              isAnimationActive={false}\r\n              content={({ active, payload, label }) => {\r\n                if (!payload || !payload[0] || !payload[1]) {\r\n                  return null;\r\n                }\r\n                const chart = payload[0].payload[2] && sharedCharts[payload[0].payload[2]];\r\n                return (\r\n                  <div className=\"history-tooltip\">\r\n                    <div>Level: {payload[0].value}</div>\r\n                    <div>Accuracy: {payload[1].value}%</div>\r\n                    {chart && (\r\n                      <div>\r\n                        {chart.song} {chart.chartLabel} ({chart.interpolatedDifficulty.toFixed(1)})\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                );\r\n              }}\r\n            />\r\n          </ScatterChart>\r\n        </ResponsiveContainer>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"[0]\"\r\n            type=\"number\"\r\n            domain={[1, 28]}\r\n            tickFormatter={(value) => Math.round(value)}\r\n          />\r\n          <YAxis domain={[0, 100]} width={40} />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{payload[0].payload[0]}</div>\r\n                  {payload && payload[0] && <div>Acc: #{payload[0].value}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            data={profile.accuracyPointsInterpolated}\r\n            isAnimationActive={false}\r\n            dataKey=\"[1]\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderPlaceHistory() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={profile.placesChanges} margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={(value) => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={[1, (dataMax) => (dataMax < 3 ? dataMax + 2 : dataMax + 1)]}\r\n            interval={0}\r\n            reversed\r\n            width={40}\r\n          />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Place: #{payload[0].value}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGrades() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <BarChart\r\n          data={profile.gradesDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {_.filter((item) => item.value > 0, payload).map((item) => (\r\n                    <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                      {item.name}: {payload[0].payload.gradesValues[item.name]}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            domain={[0, 100]}\r\n            ticks={[0, 50, 100]}\r\n            tickFormatter={(x) => `${Math.round(x)}%`}\r\n            width={40}\r\n          />\r\n          <Legend />\r\n          <Bar dataKey=\"SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"F\" fill=\"#774949\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradesWithLevels() {\r\n    const { profile, tracklist } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={0.74}>\r\n        <BarChart\r\n          data={profile.gradesAndLevelsDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n          stackOffset=\"sign\"\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              const doubleItems = _.filter(\r\n                (item) => item.value !== 0 && item.dataKey.startsWith('D'),\r\n                payload\r\n              );\r\n              const singleItems = _.filter(\r\n                (item) => item.value !== 0 && item.dataKey.startsWith('S'),\r\n                payload\r\n              );\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {!!singleItems.length && (\r\n                    <>\r\n                      <div>Single:</div>\r\n                      {singleItems.map((item) => (\r\n                        <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                          {item.name.slice(2)}: {Math.round(Math.abs(item.value))}% (\r\n                          {Math.round((tracklist.singlesLevels[item.payload.x] * item.value) / 100)}\r\n                          /{tracklist.singlesLevels[item.payload.x]})\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                  {!!doubleItems.length && (\r\n                    <>\r\n                      <div>Double:</div>\r\n                      {doubleItems.map((item) => (\r\n                        <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                          {item.name.slice(2)}: {Math.round(Math.abs(item.value))}% (\r\n                          {Math.round(\r\n                            (tracklist.doublesLevels[item.payload.x] * -item.value) / 100\r\n                          )}\r\n                          /{tracklist.doublesLevels[item.payload.x]})\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            tickFormatter={(x) => `${Math.round(Math.abs(x))}%`}\r\n            width={40}\r\n            domain={[(dataMin) => Math.min(dataMin, -10), (dataMax) => Math.max(10, dataMax)]}\r\n          />\r\n          <Bar dataKey=\"S-SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Label value=\"Double\" offset={0} position=\"insideBottomLeft\" />\r\n          <Label value=\"Single\" offset={0} position=\"insideTopLeft\" />\r\n          <ReferenceLine y={0} stroke=\"#bbb\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderLevels() {\r\n    const { profile, tracklist } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <BarChart\r\n          data={profile.levelsDistribution}\r\n          stackOffset=\"sign\"\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              const totalD = tracklist.doublesLevels[payload[0].payload.x];\r\n              const totalS = tracklist.singlesLevels[payload[0].payload.x];\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {totalS > 0 && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n                      Single: {Math.abs(payload[1].value).toFixed(1)}% (\r\n                      {Math.round((payload[1].value * totalS) / 100)}/{totalS})\r\n                    </div>\r\n                  )}\r\n                  {totalD > 0 && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n                      Double: {Math.abs(payload[0].value).toFixed(1)}% (\r\n                      {Math.round((Math.abs(payload[0].value) * totalD) / 100)}/{totalD})\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            tickFormatter={(x) => Math.round(Math.abs(x)) + '%'}\r\n            width={40}\r\n            domain={[(dataMin) => Math.min(dataMin, -10), (dataMax) => Math.max(10, dataMax)]}\r\n          />\r\n          <RechartsTooltip />\r\n          <ReferenceLine y={0} stroke=\"#555\" />\r\n          <Legend />\r\n          <Bar dataKey=\"D\" fill=\"#169c16\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#af2928\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradeBlock(type, grade) {\r\n    const { profile } = this.props;\r\n    const obj = profile.progress[type];\r\n    const typeLetter = type === 'double' ? 'D' : 'S';\r\n    const progr = Math.floor((obj[`${grade}-bonus-level-coef`] || 0) * 100);\r\n    const minNumber = obj[`${grade}-bonus-level-min-number`];\r\n    const currentNumber = obj[`${grade}-bonus-level-achieved-number`];\r\n    const levelString = obj[`${grade}-bonus-level`]\r\n      ? `${typeLetter}${obj[`${grade}-bonus-level`]}`\r\n      : '?';\r\n    return (\r\n      <div className=\"grade-block\">\r\n        <div className=\"grade-letter\">\r\n          <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n        </div>\r\n        <div className=\"grade-level\">{levelString}</div>\r\n        <div className=\"grade-progress\">\r\n          {progr}% ({progr === 100 ? minNumber : currentNumber}/{minNumber})\r\n        </div>\r\n        <div\r\n          className={classNames('progress-background', {\r\n            complete: progr === 100,\r\n            zero: progr === 0,\r\n          })}\r\n          style={{\r\n            height: `${progr}%`,\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderAchievement(achName, achievement) {\r\n    const Icon = achievements[achName].icon;\r\n    const description = achievements[achName].description;\r\n    return (\r\n      <Tooltip\r\n        key={achName}\r\n        content={<div>{description}</div>}\r\n        tooltipClassName=\"pumpking-tooltip achievement-tooltip\"\r\n      >\r\n        <div className=\"ach-block\">\r\n          {Icon && (\r\n            <div className=\"ach-icon\">\r\n              <Icon />\r\n            </div>\r\n          )}\r\n          <div className=\"ach-name\">{achName}</div>\r\n          <div\r\n            className={classNames('progress-background', {\r\n              complete: achievement.progress === 100,\r\n              zero: achievement.progress === 0,\r\n            })}\r\n            style={{\r\n              height: `${Math.round(achievement.progress)}%`,\r\n            }}\r\n          />\r\n        </div>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  renderProfile() {\r\n    const { profile, otherPlayers, filter } = this.props;\r\n    const { isLevelGraphCombined } = this.state;\r\n    const expProgress = profile.expRankNext\r\n      ? (profile.exp - profile.expRank.threshold) /\r\n        (profile.expRankNext.threshold - profile.expRank.threshold)\r\n      : 100;\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"profile-header\">\r\n          <div className=\"profile-name text-with-header\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile.lastResultDate ? getTimeAgo(profile.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n          <div className=\"_flex-fill\"></div>\r\n          <div className=\"text-with-header -select\">\r\n            <div className=\"text-header\">сравнить с</div>\r\n            <div>\r\n              <Select\r\n                closeMenuOnSelect\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                options={otherPlayers}\r\n                onChange={(value) => {\r\n                  this.props.history.push(\r\n                    routes.profile.compare.getPath({ id: profile.id, compareToId: value.id })\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header _flex-row _align-center\">\r\n            <span>опыт</span>\r\n            <div className=\"_flex-fill\" />\r\n            <div onClick={this.onShowFaq} className=\"_clickable\">\r\n              <FaQuestionCircle onClick={this.onShowFaq} />\r\n            </div>\r\n            <ReactModal\r\n              ariaHideApp={false}\r\n              className=\"Modal faq-modal\"\r\n              overlayClassName=\"Overlay\"\r\n              isOpen={this.state.showFaq}\r\n              onRequestClose={this.onHideFaq}\r\n            >\r\n              <div className=\"close-btn\" onClick={this.onHideFaq}>\r\n                <FaTimes />\r\n              </div>{' '}\r\n              <ExpFaq />\r\n            </ReactModal>\r\n          </div>\r\n          <div className=\"exp-range\">\r\n            <div className=\"rank exp-rank\">\r\n              {getRankImg(profile.expRank)}\r\n              {profile.expRank && <div>{profile.expRank.threshold}</div>}\r\n            </div>\r\n            <div className=\"exp-line-with-label\">\r\n              <div className=\"exp-label\">\r\n                {profile.expRankNext ? (\r\n                  <>\r\n                    <span className=\"taken-num\">\r\n                      {Math.round(profile.exp - profile.expRank.threshold)}\r\n                    </span>\r\n                    {` / ${profile.expRankNext.threshold - profile.expRank.threshold}`}\r\n                  </>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"exp-line\">\r\n                <div className=\"taken\" style={{ width: Math.floor(100 * expProgress) + '%' }}></div>\r\n                <div\r\n                  className=\"rest\"\r\n                  style={{ width: 100 - Math.ceil(100 * expProgress) + '%' }}\r\n                ></div>\r\n              </div>\r\n              <div className=\"exp-label\">\r\n                total: <span className=\"taken-num\">{Math.round(profile.exp)}</span>\r\n              </div>\r\n            </div>\r\n            {profile.expRankNext && (\r\n              <div className=\"rank exp-rank\">\r\n                {getRankImg(profile.expRankNext)}\r\n                {profile.expRankNext && <div>{profile.expRankNext.threshold}</div>}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              {!isLevelGraphCombined ? (\r\n                <>\r\n                  <div className=\"profile-section-2\">\r\n                    <div className=\"profile-sm-section-header flex\">\r\n                      <span>уровни</span>\r\n                      <div className=\"toggle-holder\">\r\n                        <Toggle\r\n                          className=\"combine-toggle\"\r\n                          checked={isLevelGraphCombined}\r\n                          onChange={() =>\r\n                            this.setState((state) => ({\r\n                              isLevelGraphCombined: !state.isLevelGraphCombined,\r\n                            }))\r\n                          }\r\n                        >\r\n                          объединить графики\r\n                        </Toggle>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"chart-container\">{this.renderLevels()}</div>\r\n                  </div>\r\n                  <div className=\"profile-section-2\">\r\n                    <div className=\"profile-sm-section-header\">\r\n                      <span>оценки</span>\r\n                    </div>\r\n                    <div className=\"chart-container\">{this.renderGrades()}</div>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div className=\"profile-section-2\">\r\n                  <div className=\"profile-sm-section-header flex\">\r\n                    <span>оценки</span>\r\n                    <div className=\"toggle-holder\">\r\n                      <Toggle\r\n                        className=\"combine-toggle\"\r\n                        checked={isLevelGraphCombined}\r\n                        onChange={() =>\r\n                          this.setState((state) => ({\r\n                            isLevelGraphCombined: !state.isLevelGraphCombined,\r\n                          }))\r\n                        }\r\n                      >\r\n                        объединить графики\r\n                      </Toggle>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"chart-container single-double-labels\">\r\n                    {this.renderGradesWithLevels()}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>эло</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderRankingHistory()}</div>\r\n                {/* <div className=\"chart-container\">{this.renderAccuracyPoints()}</div> */}\r\n              </div>\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>место в топе</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderPlaceHistory()}</div>\r\n                {/* <div className=\"chart-container\">{this.renderAccuracyPoints(true)}</div> */}\r\n              </div>\r\n            </div>\r\n            {(() => {\r\n              const currentRange = filter.dayRange || profile.filterRange;\r\n              const dateL = moment(currentRange[0] * 1000 * 60 * 60 * 24).format('L');\r\n              const dateR = moment(currentRange[1] * 1000 * 60 * 60 * 24).format('L');\r\n              const l1 = Math.max(currentRange[0] - 1, profile.minMaxRange[0]);\r\n              const l2 = Math.min(currentRange[0] + 1, currentRange[1]);\r\n              const r1 = Math.max(currentRange[1] - 1, currentRange[0]);\r\n              const r2 = Math.min(currentRange[1] + 1, profile.minMaxRange[1]);\r\n              return (\r\n                <div className=\"range-container\">\r\n                  <Range\r\n                    range={currentRange}\r\n                    min={profile.minMaxRange[0]}\r\n                    max={profile.minMaxRange[1]}\r\n                    onChange={this.onChangeDayRange}\r\n                  />\r\n                  <div className=\"range-controls _flex-row\">\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l1, currentRange[1]])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateL}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l2, currentRange[1]])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                    <div className=\"_flex-fill\"></div>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r1])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateR}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r2])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })()}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>точность по уровням</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderAccuracyPoints()}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\"></div>\r\n        </div>\r\n        <div className=\"profile-section progress-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>достижения по уровням</span>\r\n          </div>\r\n          <div className=\"progress-blocks-single-double\">\r\n            <div className=\"progress-block\">\r\n              <div className=\"achievements-grades single\">\r\n                {this.renderGradeBlock('single', 'A')}\r\n                {this.renderGradeBlock('single', 'A+')}\r\n                {this.renderGradeBlock('single', 'S')}\r\n                {this.renderGradeBlock('single', 'SS')}\r\n              </div>\r\n            </div>\r\n            <div className=\"progress-block\">\r\n              <div className=\"achievements-grades double\">\r\n                {this.renderGradeBlock('double', 'A')}\r\n                {this.renderGradeBlock('double', 'A+')}\r\n                {this.renderGradeBlock('double', 'S')}\r\n                {this.renderGradeBlock('double', 'SS')}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"bonus-faq\">\r\n            * для получения ачивки нужно сыграть около 10% всех чартов данного левела на нужный\r\n            грейд\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>достижения</span>\r\n          </div>\r\n          <div className=\"achievements\">\r\n            {_.keys(profile.achievements).map((achName) =>\r\n              this.renderAchievement(achName, profile.achievements[achName])\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>часто играемые чарты</span>\r\n          </div>\r\n          <MostPlayed playerId={profile.id} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, profile, error } = this.props;\r\n    DEBUG && console.log('profile:', profile);\r\n    return (\r\n      <div className=\"profile-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"btn btn-sm btn-dark btn-icon\"\r\n              onClick={this.onRefresh}\r\n            >\r\n              <FaSearch /> обновить\r\n            </button>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!isLoading && _.isEmpty(profile) && <div className=\"profile\">Profile not found</div>}\r\n          {!isLoading && !_.isEmpty(profile) && this.renderProfile()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Profile));\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport Select from 'react-select';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as RechartsTooltip,\r\n  ReferenceLine,\r\n  CartesianGrid,\r\n  Line,\r\n  ResponsiveContainer,\r\n  ScatterChart,\r\n  Scatter,\r\n} from 'recharts';\r\nimport _ from 'lodash/fp';\r\nimport memoize from 'lru-memoize';\r\n\r\n// styles\r\nimport './profile-compare.scss';\r\n\r\n// constants\r\nimport { DEBUG } from 'constants/env';\r\nimport { routes } from 'constants/routes';\r\n\r\n// components\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Range from 'components/Shared/Range';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\nimport { setProfilesFilter, resetProfilesFilter } from 'reducers/profiles';\r\n\r\n// utils\r\nimport { profileSelectorCreator } from 'utils/profiles';\r\nimport { parseDate } from 'utils/date';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { otherPlayersSelector } from 'components/Profile/Profile';\r\n\r\n// code\r\nconst BARS_MODES = {\r\n  SINGLE_TWO: 'SINGLE_TWO',\r\n  SINGLE_FIVE: 'SINGLE_FIVE',\r\n  DOUBLE_TWO: 'DOUBLE_TWO',\r\n  DOUBLE_FIVE: 'DOUBLE_FIVE',\r\n  BOTH_TWO: 'BOTH_TWO',\r\n  BOTH_FIVE: 'BOTH_FIVE',\r\n};\r\nconst getCompareBars = (mode) => {\r\n  switch (mode) {\r\n    case BARS_MODES.SINGLE_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"single.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"single.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.SINGLE_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"single.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar\r\n          key=\"2\"\r\n          dataKey=\"single.p2notPlayed\"\r\n          fill=\"#899db3\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"3\"\r\n          dataKey=\"single.notPlayed\"\r\n          fill=\"#70707060\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"4\"\r\n          dataKey=\"single.p1notPlayed\"\r\n          fill=\"#bfa988\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar key=\"5\" dataKey=\"single.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    case BARS_MODES.DOUBLE_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"double.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"double.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.DOUBLE_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"double.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar\r\n          key=\"2\"\r\n          dataKey=\"double.p2notPlayed\"\r\n          fill=\"#899db3\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"3\"\r\n          dataKey=\"double.notPlayed\"\r\n          fill=\"#70707060\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"4\"\r\n          dataKey=\"double.p1notPlayed\"\r\n          fill=\"#bfa988\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar key=\"5\" dataKey=\"double.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    case BARS_MODES.BOTH_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"all.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"all.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.BOTH_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"all.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"2\" dataKey=\"all.p2notPlayed\" fill=\"#899db3\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"3\" dataKey=\"all.notPlayed\" fill=\"#70707060\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"4\" dataKey=\"all.p1notPlayed\" fill=\"#bfa988\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"5\" dataKey=\"all.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst MIN_GRAPH_HEIGHT = undefined;\r\n\r\nconst profile1Selector = profileSelectorCreator('id');\r\nconst profile2Selector = profileSelectorCreator('compareToId');\r\n\r\nconst getCombinedData = memoize()((p1, p2, tracklist) => {\r\n  if (!p1 || !p2) {\r\n    return {};\r\n  }\r\n  let rc1 = p1.ratingChanges[0].rating;\r\n  let rc2 = p2.ratingChanges[0].rating;\r\n  const allRC = _.flow(\r\n    _.sortBy('date'),\r\n    _.map((item) => {\r\n      if (item.rating) {\r\n        rc1 = item.rating;\r\n      }\r\n      if (item.rating2) {\r\n        rc2 = item.rating2;\r\n      }\r\n      return {\r\n        rating1: rc1,\r\n        rating2: rc2,\r\n        date: item.date,\r\n      };\r\n    }),\r\n    _.sortedUniqBy('date')\r\n  )([\r\n    ...p1.ratingChanges,\r\n    ...p2.ratingChanges.map((it) => ({ date: it.date, rating2: it.rating })),\r\n  ]);\r\n\r\n  rc1 = p1.placesChanges[0].place;\r\n  rc2 = p2.placesChanges[0].place;\r\n  const allPC = _.flow(\r\n    _.sortBy('date'),\r\n    _.map((item) => {\r\n      if (item.place) {\r\n        rc1 = item.place;\r\n      }\r\n      if (item.place2) {\r\n        rc2 = item.place2;\r\n      }\r\n      return {\r\n        place1: rc1,\r\n        place2: rc2,\r\n        date: item.date,\r\n      };\r\n    })\r\n  )([...p1.placesChanges, ...p2.placesChanges.map((it) => ({ date: it.date, place2: it.place }))]);\r\n\r\n  const perLevelComparison = _.fromPairs(Array.from({ length: 28 }).map((x, i) => [i + 1, {}]));\r\n  _.keys(perLevelComparison).forEach((level) => {\r\n    const charts = _.flow(\r\n      _.map('chart'),\r\n      _.uniqBy('sharedChartId')\r\n    )([...p1.resultsByLevel[level], ...p2.resultsByLevel[level]]);\r\n    const data = {\r\n      x: level,\r\n      all: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        // notPlayedHalf: 0,\r\n        twoBars: {},\r\n      },\r\n      double: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        twoBars: {},\r\n      },\r\n      single: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        twoBars: {},\r\n      },\r\n    };\r\n    charts.forEach((chart) => {\r\n      const p1index = chart.results.findIndex((r) => r.playerId === p1.id);\r\n      const p2index = chart.results.findIndex((r) => r.playerId === p2.id);\r\n      const perType = chart.chartType.startsWith('D') ? data.double : data.single;\r\n      if (p1index < 0 && p2index < 0) {\r\n        console.log('wtf?');\r\n      } else if (p1index < 0) {\r\n        data.all.p1notPlayed++;\r\n        perType.p1notPlayed++;\r\n      } else if (p2index < 0) {\r\n        data.all.p2notPlayed++;\r\n        perType.p2notPlayed++;\r\n      } else if (p1index < p2index) {\r\n        data.all.p1win++;\r\n        perType.p1win++;\r\n      } else if (p2index < p1index) {\r\n        data.all.p2win++;\r\n        perType.p2win++;\r\n      }\r\n    });\r\n\r\n    const normalizeTwo = (dataObj) => {\r\n      const totalPlayed = dataObj.p1win + dataObj.p2win || 1; // in case of divide by 0\r\n      dataObj.twoBars.p1win = dataObj.p1win / totalPlayed;\r\n      dataObj.twoBars.p2win = dataObj.p2win / totalPlayed;\r\n    };\r\n    normalizeTwo(data.all);\r\n    normalizeTwo(data.single);\r\n    normalizeTwo(data.double);\r\n\r\n    const normalizeFive = (dataObj, total) => {\r\n      dataObj.p1win = dataObj.p1win / total;\r\n      dataObj.p1notPlayed = dataObj.p1notPlayed / total;\r\n      dataObj.p2win = dataObj.p2win / total;\r\n      dataObj.p2notPlayed = dataObj.p2notPlayed / total;\r\n      dataObj.notPlayed =\r\n        1 - dataObj.p1win - dataObj.p1notPlayed - dataObj.p2win - dataObj.p2notPlayed;\r\n      // dataObj.notPlayedHalf = dataObj.notPlayed / 2;\r\n    };\r\n    normalizeFive(data.all, tracklist.chartLevels[level]);\r\n    normalizeFive(data.double, tracklist.doublesLevels[level]);\r\n    normalizeFive(data.single, tracklist.singlesLevels[level]);\r\n\r\n    perLevelComparison[level] = data;\r\n  });\r\n\r\n  return {\r\n    ratingChanges: allRC,\r\n    placesChanges: allPC,\r\n    perLevelComparison: _.values(perLevelComparison),\r\n  };\r\n});\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const profile1 = profile1Selector(state, props);\r\n  const profile2 = profile2Selector(state, props);\r\n  return {\r\n    profile: profile1,\r\n    profile2,\r\n    otherPlayers: otherPlayersSelector(state, props),\r\n    combinedData: getCombinedData(profile1, profile2, state.tracklist.data),\r\n    tracklist: state.tracklist.data,\r\n    filter: state.profiles.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading:\r\n      state.results.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setProfilesFilter,\r\n  resetProfilesFilter,\r\n};\r\n\r\nclass ProfileCompare extends Component {\r\n  static propTypes = {\r\n    profile: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    profile: {},\r\n    profile2: {},\r\n    combinedData: {},\r\n  };\r\n\r\n  state = {\r\n    isLevelGraphCombined: true,\r\n    compareBarsMode: BARS_MODES.BOTH_TWO,\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onChangeDayRange = (range) => {\r\n    const { filter } = this.props;\r\n    this.props.setProfilesFilter({\r\n      ...filter,\r\n      dayRange: range,\r\n    });\r\n  };\r\n\r\n  rhMargin = { top: 5, bottom: 5, right: 5, left: 0 };\r\n  rhXDomain = ['dataMin', 'dataMax'];\r\n  rhYDomain = ['dataMin - 100', 'dataMax + 100'];\r\n  rhXTickFormatter = (value) => parseDate(value).toLocaleDateString();\r\n  rhTooltip = ({ active, payload, label }) => {\r\n    const { profile, profile2 } = this.props;\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n    if (!payload || !payload[0]) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"history-tooltip\">\r\n        <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n        {payload[1] && (\r\n          <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n            {p1Name}: {Math.round(payload[1].value)}\r\n          </div>\r\n        )}\r\n        {payload[0] && (\r\n          <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n            {p2Name}: {Math.round(payload[0].value)}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderRankingHistory() {\r\n    const { combinedData } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={combinedData.ratingChanges} margin={this.rhMargin}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={this.rhXDomain}\r\n            tickFormatter={this.rhXTickFormatter}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={this.rhYDomain}\r\n            tickFormatter={Math.round}\r\n            width={40}\r\n          />\r\n          <ReferenceLine y={1000} stroke=\"white\" />\r\n          <RechartsTooltip isAnimationActive={false} content={this.rhTooltip} />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating2\"\r\n            stroke=\"#ffd388\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating1\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  circleShape = (args) => (\r\n    <circle key={args.key} cx={args.cx} cy={args.cy} r={4} fill={args.fill}></circle>\r\n  );\r\n  renderAccuracyPoints(useProfile2 = false) {\r\n    const { profile, profile2 } = this.props;\r\n\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <ScatterChart margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"[0]\"\r\n            type=\"number\"\r\n            domain={[1, 28]}\r\n            tickFormatter={(value) => Math.round(value)}\r\n            ticks={[1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27]}\r\n          />\r\n          <YAxis\r\n            dataKey=\"[1]\"\r\n            type=\"number\"\r\n            domain={[0, 100]}\r\n            width={40}\r\n            tickFormatter={(value) => Math.round(value) + '%'}\r\n          />\r\n          <Scatter\r\n            shape={this.circleShape}\r\n            data={(useProfile2 ? profile2 : profile).accuracyPointsRaw}\r\n            fill={useProfile2 ? '#ffd388' : '#88d3ff'}\r\n          />\r\n        </ScatterChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderPlaceHistory() {\r\n    const { combinedData, profile, profile2 } = this.props;\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart\r\n          data={combinedData.placesChanges}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={(value) => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={[1, (dataMax) => (dataMax < 3 ? dataMax + 2 : dataMax + 1)]}\r\n            interval={0}\r\n            reversed\r\n            width={40}\r\n          />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload[1] && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n                      {p1Name}: #{payload[1].value}\r\n                    </div>\r\n                  )}\r\n                  {payload[0] && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n                      {p2Name}: #{payload[0].value}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place2\"\r\n            stroke=\"#ffd388\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place1\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  plcMargin = { top: 5, bottom: 5, right: 5, left: 0 };\r\n  plcTooltip = ({ active, payload, label }) => {\r\n    const { profile, profile2 } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n    const isTwo = [BARS_MODES.SINGLE_TWO, BARS_MODES.DOUBLE_TWO, BARS_MODES.BOTH_TWO].includes(\r\n      compareBarsMode\r\n    );\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n\r\n    if (!payload || !payload[0]) {\r\n      return null;\r\n    }\r\n    const renderLegendItem = (item, label) => (\r\n      <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n        {label}: {Math.round(_.get(item.dataKey, item.payload) * 100)}%\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"history-tooltip\">\r\n        <div>Level: {payload[0].payload.x}</div>\r\n        {renderLegendItem(payload[0], `${p1Name} wins`)}\r\n        {!isTwo && renderLegendItem(payload[1], `${p2Name} has no score`)}\r\n        {!isTwo && renderLegendItem(payload[2], `Both have no score`)}\r\n        {!isTwo && renderLegendItem(payload[3], `${p1Name} has no score`)}\r\n        {renderLegendItem(isTwo ? payload[1] : payload[4], `${p2Name} wins`)}\r\n      </div>\r\n    );\r\n  };\r\n  plcXDomain = [0, 1];\r\n  plcXTicks = [0, 0.5, 1];\r\n  plcXFormatter = (x) => `${Math.round(x * 100)}%`;\r\n\r\n  renderPerLevelComparison() {\r\n    const { combinedData } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" aspect={0.7}>\r\n        <BarChart\r\n          layout=\"vertical\"\r\n          data={[...combinedData.perLevelComparison]}\r\n          margin={this.plcMargin}\r\n        >\r\n          <RechartsTooltip isAnimationActive={false} content={this.plcTooltip} />\r\n          <YAxis reversed dataKey=\"x\" type=\"category\" width={23} />\r\n          <XAxis\r\n            type=\"number\"\r\n            domain={this.plcXDomain}\r\n            ticks={this.plcXTicks}\r\n            tickFormatter={this.plcXFormatter}\r\n          />\r\n          <ReferenceLine x={0.5} stroke=\"#666\" />\r\n          {getCompareBars(compareBarsMode)}\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderProfile() {\r\n    const { profile, profile2, filter, otherPlayers } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"profile-header\">\r\n          <div className=\"profile-name text-with-header blue\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile.lastResultDate ? getTimeAgo(profile.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n          <div className=\"_flex-fill\"></div>\r\n          <div className=\"text-with-header -select\">\r\n            <div className=\"text-header\">сравнить с</div>\r\n            <div>\r\n              <Select\r\n                closeMenuOnSelect\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                options={otherPlayers}\r\n                onChange={(value) => {\r\n                  this.props.history.push(\r\n                    routes.profile.compare.getPath({ id: profile.id, compareToId: value.id })\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-header right-align\">\r\n          <div className=\"profile-name text-with-header orange\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile2.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile2.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile2.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile2.lastResultDate ? getTimeAgo(profile2.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header flex\">\r\n                  <span>победы по уровням</span>\r\n                </div>\r\n                <div className=\"profile-sm-section-header flex\">\r\n                  {(() => {\r\n                    const isTwo = [\r\n                      BARS_MODES.SINGLE_TWO,\r\n                      BARS_MODES.DOUBLE_TWO,\r\n                      BARS_MODES.BOTH_TWO,\r\n                    ].includes(compareBarsMode);\r\n                    return (\r\n                      <div className=\"toggle-holder\">\r\n                        <Toggle\r\n                          className=\"combine-toggle\"\r\n                          checked={!isTwo}\r\n                          onChange={() =>\r\n                            this.setState((state) => ({\r\n                              compareBarsMode: {\r\n                                [BARS_MODES.SINGLE_TWO]: BARS_MODES.SINGLE_FIVE,\r\n                                [BARS_MODES.DOUBLE_TWO]: BARS_MODES.DOUBLE_FIVE,\r\n                                [BARS_MODES.BOTH_TWO]: BARS_MODES.BOTH_FIVE,\r\n                                [BARS_MODES.SINGLE_FIVE]: BARS_MODES.SINGLE_TWO,\r\n                                [BARS_MODES.DOUBLE_FIVE]: BARS_MODES.DOUBLE_TWO,\r\n                                [BARS_MODES.BOTH_FIVE]: BARS_MODES.BOTH_TWO,\r\n                              }[state.compareBarsMode],\r\n                            }))\r\n                          }\r\n                        >\r\n                          подробно\r\n                        </Toggle>\r\n                        <div className=\"tabs-holder\">\r\n                          <ToggleButton\r\n                            text=\"все\"\r\n                            active={[BARS_MODES.BOTH_TWO, BARS_MODES.BOTH_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={() => {\r\n                              this.setState((state) => ({\r\n                                compareBarsMode: isTwo ? BARS_MODES.BOTH_TWO : BARS_MODES.BOTH_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                          <ToggleButton\r\n                            text=\"синглы\"\r\n                            active={[BARS_MODES.SINGLE_TWO, BARS_MODES.SINGLE_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={(active) => {\r\n                              this.setState((state) => ({\r\n                                compareBarsMode: isTwo\r\n                                  ? BARS_MODES.SINGLE_TWO\r\n                                  : BARS_MODES.SINGLE_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                          <ToggleButton\r\n                            text=\"даблы\"\r\n                            active={[BARS_MODES.DOUBLE_TWO, BARS_MODES.DOUBLE_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={(active) => {\r\n                              this.setState((state) => ({\r\n                                compareBarsMode: isTwo\r\n                                  ? BARS_MODES.DOUBLE_TWO\r\n                                  : BARS_MODES.DOUBLE_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })()}\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderPerLevelComparison()}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>эло</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderRankingHistory()}</div>\r\n              </div>\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>место в топе</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderPlaceHistory()}</div>\r\n              </div>\r\n            </div>\r\n            {(() => {\r\n              const currentRange = filter.dayRange || profile.filterRange;\r\n              const dateL = moment(currentRange[0] * 1000 * 60 * 60 * 24).format('L');\r\n              const dateR = moment(currentRange[1] * 1000 * 60 * 60 * 24).format('L');\r\n              const l1 = Math.max(currentRange[0] - 1, profile.minMaxRange[0]);\r\n              const l2 = Math.min(currentRange[0] + 1, currentRange[1]);\r\n              const r1 = Math.max(currentRange[1] - 1, currentRange[0]);\r\n              const r2 = Math.min(currentRange[1] + 1, profile.minMaxRange[1]);\r\n              return (\r\n                <div className=\"range-container\">\r\n                  <Range\r\n                    range={currentRange}\r\n                    min={profile.minMaxRange[0]}\r\n                    max={profile.minMaxRange[1]}\r\n                    onChange={this.onChangeDayRange}\r\n                  />\r\n                  <div className=\"range-controls _flex-row\">\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l1, currentRange[1]])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateL}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l2, currentRange[1]])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                    <div className=\"_flex-fill\"></div>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r1])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateR}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r2])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })()}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>точность по уровням</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderAccuracyPoints()}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>точность по уровням</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderAccuracyPoints(true)}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, profile, error } = this.props;\r\n    DEBUG && console.log('profile:', profile);\r\n    return (\r\n      <div className=\"profile-compare-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"btn btn-sm btn-dark btn-icon\"\r\n              onClick={this.onRefresh}\r\n            >\r\n              <FaSearch /> обновить\r\n            </button>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!isLoading && _.isEmpty(profile) && <div className=\"profile\">Profile not found</div>}\r\n          {!isLoading && !_.isEmpty(profile) && this.renderProfile()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProfileCompare));\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\nimport { RESET } from './resetAction';\r\n\r\nconst LOADING = `USER/LOADING`;\r\nconst SUCCESS = `USER/SUCCESS`;\r\nconst ERROR = `USER/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        data: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: null,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    case RESET:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchUser = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/profile` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport { resetUser } from './resetAction';\r\n","import cookies from 'browser-cookies';\r\n\r\nimport { postJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport { fetchUser, resetUser } from 'reducers/user';\r\n\r\nconst LOADING = `LOGIN/LOADING`;\r\nconst SUCCESS = `LOGIN/SUCCESS`;\r\nconst ERROR = `LOGIN/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n  error: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        data: null,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: null,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const login = googleResponse => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        postJson({\r\n          url: `${HOST}/login/google`,\r\n          body: { token: googleResponse.tokenId },\r\n        })\r\n      );\r\n      cookies.set('session', data.session, { expires: 30 });\r\n      dispatch({ type: SUCCESS, data });\r\n      dispatch(fetchUser());\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    dispatch(resetUser());\r\n    try {\r\n      const data = await dispatch(\r\n        postJson({\r\n          url: `${HOST}/logout`,\r\n        })\r\n      );\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './top-bar.scss';\r\n\r\n// routes\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport * as loginACs from 'reducers/login';\r\n\r\n// redux\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoadingLogin: state.login.isLoading,\r\n    isLoadingUser: state.user.isLoading,\r\n    user: state.user.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login: loginACs.login,\r\n  logout: loginACs.logout,\r\n};\r\n\r\nfunction TopBar({ isLoadingLogin, isLoadingUser, user, login, logout }) {\r\n  return (\r\n    <header className=\"top-bar\">\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <NavLink exact to={routes.leaderboard.path}>\r\n              leaderboards\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact to={routes.ranking.path}>\r\n              ranking\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact to={routes.tournaments.path}>\r\n              tournaments\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact to={routes.songs.path}>\r\n              songs\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div className=\"_flex-fill\" />\r\n      <div className=\"login-container\">\r\n        <NavLink\r\n          className=\"player-info\"\r\n          exact\r\n          to={routes.profile.getPath({ id: _.get('player.id', user) })}\r\n        >\r\n          {_.getOr('', 'player.nickname', user)}\r\n        </NavLink>\r\n        <button\r\n          className=\"btn btn-dark btn-icon btn-sm\"\r\n          onClick={logout}\r\n          disabled={isLoadingLogin || isLoadingUser}\r\n        >\r\n          <span> logout</span>\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { FaGoogle } from 'react-icons/fa';\r\nimport Emoji from 'react-emoji-render';\r\n\r\nimport './login-screen.scss';\r\n\r\n// reducers\r\nimport * as loginACs from 'reducers/login';\r\n\r\n// redux\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoading: state.login.isLoading,\r\n    error: state.login.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login: loginACs.login,\r\n};\r\n\r\nfunction LoginScreen({ isLoading, error, login }) {\r\n  const [isClown, setClown] = useState(false);\r\n  const onGoogleResponse = res => {\r\n    if (res.error) {\r\n      console.log('Google login response error:', res);\r\n    } else {\r\n      login(res);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <div className=\"site-name\">pumpking</div>\r\n      <div className=\"login-button\">\r\n        <GoogleLogin\r\n          clientId=\"197132042723-cmibep21qf6dald9l2l01rif7l5dtd4s.apps.googleusercontent.com\"\r\n          buttonText=\"Login\"\r\n          onSuccess={onGoogleResponse}\r\n          onFailure={onGoogleResponse}\r\n          cookiePolicy={'single_host_origin'}\r\n          render={({ onClick, disabled }) => (\r\n            <button\r\n              className=\"btn btn-dark btn-icon btn-sm\"\r\n              onClick={onClick}\r\n              disabled={disabled || isLoading}\r\n            >\r\n              <FaGoogle />\r\n              <span> login</span>\r\n            </button>\r\n          )}\r\n        />\r\n      </div>\r\n      {error && <div className=\"error\">{error.message}</div>}\r\n      <div className=\"footer\">\r\n        By logging in, you agree to our{' '}\r\n        {isClown ? (\r\n          <Emoji text=\"🤡\" className=\"clown\" />\r\n        ) : (\r\n          <span onClick={() => setClown(true)} className=\"link-style\">\r\n            Privacy Policy\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginScreen);\r\n","export const TYPES = {\r\n  ACHIEVEMENT: 'ACHIEVEMENT',\r\n  RANK_UP: 'RANK_UP',\r\n};\r\n","import _ from 'lodash/fp';\r\n\r\nconst ADD_POPUP = `POPUPS/ADD`;\r\nconst REMOVE_POPUP = `POPUPS/REMOVE`;\r\n\r\nconst ID_PREFIX = 'popup';\r\n\r\nconst initialState = {\r\n  popups: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_POPUP:\r\n      const id = _.uniqueId(ID_PREFIX);\r\n      return {\r\n        ...state,\r\n        popups: [\r\n          ...state.popups,\r\n          {\r\n            id,\r\n            type: action.popupType,\r\n            ..._.pick(['parameters', 'fadeIn', 'fadeOut', 'timeout', 'persistent'], action),\r\n          },\r\n        ],\r\n      };\r\n    case REMOVE_POPUP:\r\n      return {\r\n        ...state,\r\n        popups: _.remove({ id: action.id }, state.popups),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addPopup = ({ type, parameters, fadeIn, fadeOut, timeout, persistent }) => {\r\n  return { type: ADD_POPUP, popupType: type, parameters, fadeIn, fadeOut, timeout, persistent };\r\n};\r\n\r\nexport const removePopup = ({ id }) => {\r\n  return { type: REMOVE_POPUP, id };\r\n};\r\n","import React, { useEffect, useCallback, useState, useRef } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport ReactModal from 'react-modal';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './popups.scss';\r\n\r\nimport { TYPES } from 'constants/popups';\r\n\r\nimport { removePopup } from 'reducers/popups';\r\n\r\nimport AchievementPopup from './AchievementPopup';\r\nimport RankUpPopup from './RankUpPopup';\r\n\r\nconst popupByType = {\r\n  [TYPES.ACHIEVEMENT]: AchievementPopup,\r\n  [TYPES.RANK_UP]: RankUpPopup,\r\n};\r\n\r\nconst popupStyles = {\r\n  overlay: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0.1)',\r\n  },\r\n  content: {\r\n    top: null,\r\n    bottom: null,\r\n    left: null,\r\n    right: null,\r\n    position: null,\r\n    borderRadius: null,\r\n    padding: null,\r\n    background: null,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    height: '100%',\r\n    transition: '2.5s opacity ease',\r\n    opacity: 1,\r\n  },\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    popups: state.popups.popups,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  removePopup,\r\n};\r\n\r\nconst Popups = ({ popups, removePopup }) => {\r\n  const [visiblePopup, setVisiblePopup] = useState(null);\r\n  const contentRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (popups.length > 0) {\r\n      const popup = popups[0];\r\n      setVisiblePopup(popup);\r\n      if (!popup.persistent) {\r\n        setTimeout(() => {\r\n          if (popup && popup.fadeOut) {\r\n            contentRef.current.style.opacity = 0;\r\n            setTimeout(() => {\r\n              setVisiblePopup(null);\r\n              removePopup(popup);\r\n            }, 2500);\r\n          } else {\r\n            setVisiblePopup(null);\r\n            removePopup(popup);\r\n          }\r\n        }, popup.timeout || 6000);\r\n      }\r\n    } else {\r\n      setVisiblePopup(null);\r\n    }\r\n  }, [popups, removePopup]);\r\n\r\n  const onAfterOpen = useCallback(() => {\r\n    if (visiblePopup && visiblePopup.fadeIn) {\r\n      contentRef.current.style.opacity = 1;\r\n    }\r\n  }, [visiblePopup]);\r\n\r\n  let style = popupStyles;\r\n  let popupBody = null;\r\n  if (visiblePopup) {\r\n    const PopupComponent = popupByType[visiblePopup.type];\r\n    popupBody = PopupComponent ? (\r\n      <PopupComponent {...visiblePopup.parameters} />\r\n    ) : (\r\n      <div>{JSON.stringify(visiblePopup)}</div>\r\n    );\r\n\r\n    if (visiblePopup.fadeIn) {\r\n      style = _.set('content.opacity', 0, popupStyles);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"popups-holder\">\r\n      <ReactModal\r\n        isOpen={!!visiblePopup}\r\n        contentRef={(ref) => (contentRef.current = ref)}\r\n        onAfterOpen={onAfterOpen}\r\n        style={style}\r\n      >\r\n        {popupBody}\r\n      </ReactModal>\r\n    </div>\r\n  );\r\n};\r\nPopups.propTypes = {\r\n  popups: toBe.array,\r\n  removePopup: toBe.func,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Popups);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { GiAchievement } from 'react-icons/gi';\r\nimport classNames from 'classnames';\r\n\r\nimport { achievements } from 'utils/achievements';\r\n\r\nconst renderAchievement = (achName, progress) => {\r\n  const Icon = achievements[achName].icon;\r\n  return (\r\n    <div className=\"ach-block\">\r\n      {Icon && (\r\n        <div className=\"ach-icon\">\r\n          <Icon />\r\n        </div>\r\n      )}\r\n      <div className=\"ach-name\">{achName}</div>\r\n      <div\r\n        className={classNames('progress-background', {\r\n          complete: progress === 100,\r\n          zero: progress === 0,\r\n        })}\r\n        style={{\r\n          height: `${Math.round(progress)}%`,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AchievementPopup = ({ playerName, achievementName, progress }) => {\r\n  const [progressNumber, setProgressNumber] = useState(progress[0]);\r\n\r\n  useEffect(() => {\r\n    setProgressNumber(progress[1]);\r\n  }, []); // eslint-disable-line\r\n\r\n  return (\r\n    <div className=\"achievement-popup popup\">\r\n      <div className=\"player\">\r\n        <GiAchievement />\r\n        <span>{playerName}</span>\r\n        <GiAchievement />\r\n      </div>\r\n      <div className=\"ach-holder\">{renderAchievement(achievementName, progressNumber)}</div>\r\n      <div className=\"description\">{achievements[achievementName].description}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AchievementPopup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { GiAchievement } from 'react-icons/gi';\r\nimport _ from 'lodash/fp';\r\nimport FlipMove from 'react-flip-move';\r\nimport classNames from 'classnames';\r\n\r\nconst renderPlayerLine = (pl, isCurrentPlayer) => {\r\n  return (\r\n    <div className={`closest-player ${isCurrentPlayer ? 'current-player' : ''}`}>\r\n      <div className=\"place\">#{pl.place}</div>\r\n      <div className=\"name\">{pl.name}</div>\r\n      <div className=\"elo\">{pl.rating}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RankUpPopup = ({ playerName, place: [prevPlace, currPlace], list: [prevList, currList] }) => {\r\n  const [place, setPlace] = useState(prevPlace);\r\n  const [list, setList] = useState(prevList);\r\n\r\n  useEffect(() => {\r\n    setList(currList);\r\n    setPlace(currPlace);\r\n  }, []); // eslint-disable-line\r\n\r\n  const listTop = Math.min(0, Math.max(-60 * (_.size(list) - 7), -60 * (place - 4)));\r\n  return (\r\n    <div className=\"rank-up-popup popup\">\r\n      <div className=\"player\">\r\n        <GiAchievement />\r\n        <span>{playerName}</span>\r\n        <GiAchievement />\r\n      </div>\r\n      <div className=\"ranking-holder\">\r\n        <div className=\"moving-list\" style={{ top: listTop }}>\r\n          <FlipMove duration={4500} delay={2000} maintainContainerHeight>\r\n            {list.map((pl, index) => {\r\n              return (\r\n                <div\r\n                  key={pl.id}\r\n                  className={classNames('player-block', { current: index === place - 1 })}\r\n                >\r\n                  {renderPlayerLine(pl, index === place - 1)}\r\n                </div>\r\n              );\r\n            })}\r\n          </FlipMove>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankUpPopup;\r\n","import { fetchJson } from 'utils/fetch';\r\nimport queryString from 'query-string';\r\nimport _ from 'lodash/fp';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport { preprocessData } from 'components/SocketTracker/helpers';\r\n\r\nconst LOADING = `TOP_PER_SONG/LOADING`;\r\nconst SUCCESS = `TOP_PER_SONG/SUCCESS`;\r\nconst ERROR = `TOP_PER_SONG/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n  error: null,\r\n  fetchingParams: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        fetchingParams: action.fetchingParams,\r\n        data: null,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return action.fetchingParams === state.fetchingParams\r\n        ? {\r\n            ...state,\r\n            isLoading: false,\r\n            error: action.error,\r\n            data: null,\r\n            fetchingParams: null,\r\n          }\r\n        : state;\r\n    case SUCCESS:\r\n      return action.fetchingParams === state.fetchingParams\r\n        ? {\r\n            ...state,\r\n            isLoading: false,\r\n            data: action.data,\r\n            fetchingParams: null,\r\n          }\r\n        : state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTopPerSong = (songName, leftLabel, rightLabel) => {\r\n  const fetchingParams = queryString.stringify({\r\n    song_name: songName,\r\n    charts: _.compact(_.uniq([leftLabel, rightLabel])).join(','),\r\n  });\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING, fetchingParams });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/topPerSong?${fetchingParams}` }));\r\n      const processedData = _.flow(preprocessData, _.get('results'))(data);\r\n      dispatch({ type: SUCCESS, data: processedData, fetchingParams });\r\n      return processedData;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error, fetchingParams });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React, { useCallback } from 'react';\r\nimport _ from 'lodash/fp';\r\n\r\nimport { TYPES } from 'constants/popups';\r\n\r\nimport ChartLabel from 'components/Leaderboard/ChartLabel';\r\n\r\nimport { useTrackedEx } from './helpers';\r\n\r\nimport { getRankImg } from 'utils/exp';\r\nimport { labelToTypeLevel } from 'utils/leaderboards';\r\n\r\nexport const PlayerCard = ({\r\n  player,\r\n  profile,\r\n  label,\r\n  trackedData,\r\n  isLeft = false,\r\n  preferences,\r\n  topPlayersList,\r\n  addPopup,\r\n}) => {\r\n  const playersHiddenStatus = _.getOr({}, 'playersHiddenStatus', preferences);\r\n\r\n  const renderDeltaText = (n, prevN) => {\r\n    if (!prevN || prevN === n) {\r\n      return null;\r\n    }\r\n    const delta = n - prevN;\r\n    return (\r\n      <span className={`change ${delta >= 0 ? 'pos' : 'neg'}`}>\r\n        {delta < 0 ? delta.toFixed(1) : `+${delta.toFixed(1)}`}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const renderExpLine = () => {\r\n    if (!profile.expRank || !profile.exp) {\r\n      return null;\r\n    }\r\n\r\n    let takenWidth = profile.expRankNext\r\n      ? (profile.exp - profile.expRank.threshold) /\r\n        (profile.expRankNext.threshold - profile.expRank.threshold)\r\n      : 1;\r\n    const emptyWidth = 1 - takenWidth;\r\n    let diffWidth = 0;\r\n\r\n    if (trackedData.exp[1]) {\r\n      takenWidth = profile.expRankNext\r\n        ? (trackedData.exp[1] - profile.expRank.threshold) /\r\n          (profile.expRankNext.threshold - profile.expRank.threshold)\r\n        : 1;\r\n      diffWidth = 1 - emptyWidth - takenWidth;\r\n    }\r\n    return (\r\n      <div className=\"exp-line\">\r\n        <div className=\"taken\" style={{ width: Math.floor(100 * takenWidth) + '%' }}></div>\r\n        <div className=\"diff\" style={{ width: Math.ceil(100 * diffWidth) + '%' }}></div>\r\n        <div className=\"rest\" style={{ width: Math.ceil(100 * emptyWidth) + '%' }}></div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const rivals = topPlayersList.filter((pl) => !playersHiddenStatus[pl.id]);\r\n  const playerIndex = _.findIndex({ id: profile.id }, rivals);\r\n  const closestPlayers =\r\n    playerIndex < 0\r\n      ? []\r\n      : rivals.slice(Math.max(0, playerIndex - 2), Math.min(playerIndex + 3, rivals.length));\r\n\r\n  useTrackedEx({\r\n    data: topPlayersList,\r\n    resetData: profile.name,\r\n    isDataValid: useCallback(_.get('[0].rating'), []), // top list is only valid when rating is calculated\r\n    onChange: useCallback(\r\n      (prevList, currList) => {\r\n        const prevPlace = _.get('place', _.find({ id: profile.id }, prevList));\r\n        const currPlace = _.get('place', _.find({ id: profile.id }, currList));\r\n        // console.log('List update:', prevList, currList, prevPlace, currPlace);\r\n        if (prevPlace && currPlace && prevPlace > currPlace) {\r\n          // console.log('Place update:', profile.name, prevPlace, currPlace);\r\n          addPopup({\r\n            type: TYPES.RANK_UP,\r\n            fadeIn: true,\r\n            fadeOut: true,\r\n            timeout: 7500,\r\n            parameters: {\r\n              playerName: profile.name,\r\n              place: [prevPlace, currPlace],\r\n              list: [prevList, currList],\r\n            },\r\n          });\r\n        }\r\n      },\r\n      [addPopup, profile.id, profile.name]\r\n    ),\r\n  });\r\n\r\n  const [type, level] = labelToTypeLevel(label);\r\n\r\n  return (\r\n    <div className={`player-container ${isLeft ? 'left' : 'right'}`}>\r\n      {player && (\r\n        <>\r\n          {/* <div className=\"title-header\">player {isLeft ? 1 : 2}:</div> */}\r\n          <div className=\"name-with-label\">\r\n            <div className=\"name\">{profile.name || player}</div>\r\n            <div className=\"chart-label\">\r\n              <ChartLabel type={type} level={level} />\r\n            </div>\r\n          </div>\r\n          {profile.exp && profile.expRank && (\r\n            <div className=\"exp exp-rank\">\r\n              {getRankImg(profile.expRank)}\r\n              {renderExpLine()}\r\n            </div>\r\n          )}\r\n          {trackedData.exp[0] && (\r\n            <div className=\"exp-text\">\r\n              <span className=\"_grey-text\">exp:</span>\r\n              <span>{Math.round(trackedData.exp[0])}</span>\r\n              {renderDeltaText(trackedData.exp[0], trackedData.exp[1])}\r\n            </div>\r\n          )}\r\n          {trackedData.elo[0] && (\r\n            <div className=\"rating\">\r\n              <span className=\"_grey-text\">elo:</span>\r\n              <span>{Math.round(trackedData.elo[0])}</span>\r\n              {renderDeltaText(trackedData.elo[0], trackedData.elo[1])}\r\n            </div>\r\n          )}\r\n          {trackedData.pp[0] && (\r\n            <div className=\"rating\">\r\n              <span className=\"_grey-text\">pp:</span>\r\n              <span>{Math.round(trackedData.pp[0])}</span>\r\n              {renderDeltaText(trackedData.pp[0], trackedData.pp[1])}\r\n            </div>\r\n          )}\r\n          <div className=\"closest-players\">\r\n            {_.map((pl) => {\r\n              return (\r\n                <div className={`closest-player ${profile.id === pl.id ? 'current-player' : ''}`}>\r\n                  <div className=\"place\">#{pl.place}</div>\r\n                  <div className=\"name\">{pl.name}</div>\r\n                  <div className=\"elo\">{pl.rating}</div>\r\n                </div>\r\n              );\r\n            }, closestPlayers)}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState, useRef, useCallback, useMemo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport lev from 'fast-levenshtein';\r\n\r\nimport './socket.scss';\r\n\r\nimport { SOCKET_SERVER_IP } from 'constants/backend';\r\n\r\nimport Popups from 'components/Shared/Popups';\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nimport { appendNewResults } from 'reducers/results';\r\nimport { fetchTopPerSong } from 'reducers/topPerSong';\r\nimport { fetchUserPreferences } from 'reducers/preferences';\r\nimport { addPopup } from 'reducers/popups';\r\n\r\nimport { useTracked, useResetTrackedObject } from './helpers';\r\n\r\nimport { PlayerCard } from './PlayerCard';\r\nimport Chart from 'components/Leaderboard/Chart';\r\nimport { TYPES } from 'constants/popups';\r\n\r\n// code\r\nconst STATE_RESET_TIMEOUT_SEC = 5 * 60 + 10; // 5 minutes 10 seconds\r\n\r\nconst topPlayersListSelector = createSelector(\r\n  (state) => state.results.profiles,\r\n  _.flow(_.values, _.orderBy('ratingRaw', 'desc'), (items) =>\r\n    items.map((it, index) => ({ place: index + 1, ..._.pick(['id', 'name', 'rating'], it) }))\r\n  )\r\n);\r\n\r\n// redux\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.topPerSong.isLoading,\r\n    songTopData: state.topPerSong.data,\r\n    error: state.topPerSong.error,\r\n    profiles: state.results.profiles,\r\n    topPlayersList: topPlayersListSelector(state),\r\n    sharedCharts: state.results.sharedCharts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopPerSong,\r\n  appendNewResults,\r\n  addPopup,\r\n  fetchUserPreferences,\r\n};\r\n\r\nfunction TrackerApp({\r\n  isLoading,\r\n  fetchTopPerSong,\r\n  fetchUserPreferences,\r\n  appendNewResults,\r\n  songTopData,\r\n  error,\r\n  profiles,\r\n  topPlayersList,\r\n  sharedCharts = {},\r\n  addPopup,\r\n}) {\r\n  // useEffect(() => {\r\n  //   addPopup({\r\n  //     type: TYPES.ACHIEVEMENT,\r\n  //     fadeIn: true,\r\n  //     fadeOut: true,\r\n  //     // persistent: true,\r\n  //     parameters: {\r\n  //       playerName: 'grumd',\r\n  //       achievementName: 'Падовый мисс',\r\n  //       progress: [0, 100],\r\n  //     },\r\n  //   });\r\n  //   addPopup({\r\n  //     type: TYPES.ACHIEVEMENT,\r\n  //     fadeIn: true,\r\n  //     fadeOut: true,\r\n  //     parameters: {\r\n  //       playerName: 'Dino',\r\n  //       achievementName: 'Мастер фингеринга',\r\n  //       progress: [33, 66],\r\n  //     },\r\n  //   });\r\n  // }, [addPopup]);\r\n  // useEffect(() => {\r\n  //   if (_.get('[0].rating', topPlayersList)) {\r\n  //     const prevList = [...topPlayersList];\r\n  //     const p = 30,\r\n  //       c = 26;\r\n  //     const currList = _.pullAt(p - 1, topPlayersList);\r\n  //     currList.splice(c - 1, 0, topPlayersList[p - 1]);\r\n  //     addPopup({\r\n  //       type: TYPES.RANK_UP,\r\n  //       fadeIn: true,\r\n  //       fadeOut: true,\r\n  //       persistent: true,\r\n  //       parameters: {\r\n  //         playerName: 'grumd',\r\n  //         place: [p, c],\r\n  //         list: [prevList, currList],\r\n  //       },\r\n  //     });\r\n  //   }\r\n  // }, [addPopup, topPlayersList]);\r\n\r\n  // Setup\r\n  const [message, setMessage] = useState('');\r\n  const [socketErrorMessage, setSocketErrorMessage] = useState('');\r\n  const [isSocketReady, setSocketReady] = useState(false);\r\n  const [isAlive, setAlive] = useState(null);\r\n  const [leftLabel, setLeftLabel] = useState(null);\r\n  const [rightLabel, setRightLabel] = useState(null);\r\n  const [leftPlayer, setLeftPlayer] = useState(null);\r\n  const [rightPlayer, setRightPlayer] = useState(null);\r\n  const [recognizedSongName, setRecognizedSongName] = useState('');\r\n  const [leftPreferences, setLeftPreferences] = useState(null);\r\n  const [rightPreferences, setRightPreferences] = useState(null);\r\n\r\n  const resultsContainerRef = useRef(null);\r\n  const leftResultRef = useRef(null);\r\n  const rightResultRef = useRef(null);\r\n\r\n  const socketRef = useRef(null);\r\n  const timeoutResetTokenRef = useRef(null);\r\n\r\n  // Get profile objects from player names\r\n  const leftProfile = useMemo(() => {\r\n    if (!leftPlayer || _.isEmpty(profiles)) return {};\r\n    return _.minBy((p) => lev.get(p.nameArcade, leftPlayer), _.values(profiles)) || {};\r\n  }, [leftPlayer, profiles]);\r\n  const rightProfile = useMemo(() => {\r\n    if (!rightPlayer || _.isEmpty(profiles)) return {};\r\n    return _.minBy((p) => lev.get(p.nameArcade, rightPlayer), _.values(profiles)) || {};\r\n  }, [rightPlayer, profiles]);\r\n\r\n  const onChangeAchievements = (playerName) => (prevAchievement, currAchievement) => {\r\n    _.keys(prevAchievement).forEach((achievementName) => {\r\n      if (prevAchievement[achievementName].progress !== currAchievement[achievementName].progress) {\r\n        addPopup({\r\n          type: TYPES.ACHIEVEMENT,\r\n          fadeIn: true,\r\n          fadeOut: true,\r\n          parameters: {\r\n            playerName,\r\n            achievementName,\r\n            progress: [\r\n              prevAchievement[achievementName].progress,\r\n              currAchievement[achievementName].progress,\r\n            ],\r\n          },\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  // Track changes in profiles\r\n  const leftTracked = {\r\n    pp: useTracked(_.get('pp.pp', leftProfile), leftProfile.name),\r\n    elo: useTracked(leftProfile.ratingRaw, leftProfile.name),\r\n    exp: useTracked(leftProfile.exp, leftProfile.name),\r\n    expRank: useTracked(leftProfile.expRank, leftProfile.name),\r\n    achievements: useTracked(\r\n      leftProfile.achievements,\r\n      leftProfile.name,\r\n      onChangeAchievements(leftProfile.name)\r\n    ),\r\n  };\r\n  const resetLeftTracked = useResetTrackedObject(leftTracked);\r\n  const rightTracked = {\r\n    pp: useTracked(_.get('pp.pp', rightProfile), rightProfile.name),\r\n    elo: useTracked(rightProfile.ratingRaw, rightProfile.name),\r\n    exp: useTracked(rightProfile.exp, rightProfile.name),\r\n    expRank: useTracked(rightProfile.expRank, rightProfile.name),\r\n    achievements: useTracked(\r\n      rightProfile.achievements,\r\n      rightProfile.name,\r\n      onChangeAchievements(rightProfile.name)\r\n    ),\r\n  };\r\n  const resetRightTracked = useResetTrackedObject(rightTracked);\r\n\r\n  // Fetch preferences when player id changes\r\n  useEffect(() => {\r\n    if (leftProfile.id) {\r\n      fetchUserPreferences(leftProfile.id).then((response) => {\r\n        setLeftPreferences(response.preferences);\r\n      });\r\n    }\r\n  }, [leftProfile.id, fetchUserPreferences]);\r\n  useEffect(() => {\r\n    if (rightProfile.id) {\r\n      fetchUserPreferences(rightProfile.id).then((response) => {\r\n        setRightPreferences(response.preferences);\r\n      });\r\n    }\r\n  }, [rightProfile.id, fetchUserPreferences]);\r\n\r\n  // Reset the page when sockets didn't receive any messages for a long time\r\n  const restartTimeout = useCallback(() => {\r\n    setAlive(true);\r\n    if (timeoutResetTokenRef.current) {\r\n      clearTimeout(timeoutResetTokenRef.current);\r\n    }\r\n    timeoutResetTokenRef.current = setTimeout(() => {\r\n      // TODO: reset page\r\n      setAlive(false);\r\n      setLeftPlayer(null);\r\n      setRightPlayer(null);\r\n      setLeftLabel(null);\r\n      setRightLabel(null);\r\n      setRecognizedSongName('');\r\n      setLeftPreferences(null);\r\n      setRightPreferences(null);\r\n    }, STATE_RESET_TIMEOUT_SEC * 1000);\r\n  }, []);\r\n\r\n  // Start websockets\r\n  useEffect(() => {\r\n    socketRef.current = new WebSocket(SOCKET_SERVER_IP);\r\n    socketRef.current.onerror = () => {\r\n      setMessage(`Cannot connect to websocket server, please reload the page`);\r\n    };\r\n    socketRef.current.onopen = (e) => {\r\n      setSocketReady(true);\r\n    };\r\n  }, []);\r\n\r\n  // Set the onmessage callback\r\n  useEffect(() => {\r\n    socketRef.current.onmessage = (event) => {\r\n      restartTimeout();\r\n      try {\r\n        const data = event && event.data && JSON.parse(event.data);\r\n        console.log(data);\r\n\r\n        if (data.type === 'result_screen') {\r\n          console.log('Resetting tracking because received result screen');\r\n          resetLeftTracked();\r\n          resetRightTracked();\r\n          const songName = data.data.track_name;\r\n          const leftLabel = _.get('left.chart_label', data.data);\r\n          const rightLabel = _.get('right.chart_label', data.data);\r\n          const leftPlayer = _.get('left.result.player_name', data.data);\r\n          const rightPlayer = _.get('right.result.player_name', data.data);\r\n          setLeftPlayer(leftPlayer);\r\n          setRightPlayer(rightPlayer);\r\n          setLeftLabel(leftLabel);\r\n          setRightLabel(rightLabel);\r\n          setRecognizedSongName(songName);\r\n          appendNewResults(data.data.gained); // Fetch results that we don't have here yet (to calculate elo)\r\n          fetchTopPerSong(songName, leftLabel, rightLabel);\r\n        } else if (data.type === 'chart_selected') {\r\n          setSocketErrorMessage(data.data.error || '');\r\n          if (data.data.leftPlayer || data.data.rightPlayer) {\r\n            setLeftPlayer(data.data.leftPlayer);\r\n            setRightPlayer(data.data.rightPlayer);\r\n          }\r\n          if (data.data.leftLabel || data.data.rightLabel) {\r\n            setLeftLabel(data.data.leftLabel);\r\n            setRightLabel(data.data.rightLabel);\r\n            if (data.data.text) {\r\n              // If we have full info, try to fetch if needed\r\n              const newSongName = data.data.text;\r\n              setRecognizedSongName(newSongName);\r\n              console.log('song name', newSongName, recognizedSongName);\r\n              if (recognizedSongName !== newSongName) {\r\n                fetchTopPerSong(newSongName, data.data.leftLabel, data.data.rightLabel);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.log('on message error', e);\r\n        setMessage(`Error: ${e.message}`);\r\n      }\r\n    };\r\n  }, [\r\n    recognizedSongName,\r\n    fetchTopPerSong,\r\n    restartTimeout,\r\n    appendNewResults,\r\n    resetLeftTracked,\r\n    resetRightTracked,\r\n  ]);\r\n\r\n  // FOR DEBUG\r\n  // useEffect(() => {\r\n  //   if (!_.isEmpty(profiles) && !leftPlayer && !rightPlayer) {\r\n  //     socketRef.current.onmessage({\r\n  //       data:\r\n  //         '{\"type\": \"chart_selected\", \"data\": {\"text\": \"Iolite Sky\", \"leftLabel\": \"D17\", \"rightLabel\": \"S16\", \"leftPlayer\": \"GRUMD\", \"rightPlayer\": \"DINO\"}}',\r\n  //     });\r\n  //   }\r\n  // }, [profiles, leftPlayer, rightPlayer]);\r\n\r\n  // Resize the results blocks to fill the most space on the page\r\n  useEffect(() => {\r\n    // return;\r\n    if (resultsContainerRef.current && leftResultRef.current) {\r\n      if (rightResultRef.current) {\r\n        // Both refs\r\n        const left = leftResultRef.current;\r\n        const right = rightResultRef.current;\r\n        const totalSize = {\r\n          w: resultsContainerRef.current.clientWidth,\r\n          h: resultsContainerRef.current.clientHeight,\r\n        };\r\n        const scaleHH = totalSize.w / (left.offsetWidth + right.offsetWidth);\r\n        const scaleHW = totalSize.h / Math.max(left.offsetHeight, right.offsetHeight);\r\n        const scaleWH = totalSize.w / Math.max(left.offsetWidth, right.offsetWidth);\r\n        const scaleWW = totalSize.h / (left.offsetHeight + right.offsetHeight);\r\n        // console.log(scaleHH, scaleHW, scaleWH, scaleWW);\r\n        if (Math.min(scaleHH, scaleHW) > Math.min(scaleWH, scaleWW)) {\r\n          resultsContainerRef.current.style.flexDirection = 'row';\r\n          resultsContainerRef.current.style.alignItems = 'center';\r\n          if (scaleHH > scaleHW) {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleHW})`;\r\n          } else {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleHH})`;\r\n          }\r\n        } else {\r\n          resultsContainerRef.current.style.flexDirection = 'column';\r\n          resultsContainerRef.current.style.alignItems = 'center';\r\n          if (scaleWH > scaleWW) {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleWW})`;\r\n          } else {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleWH})`;\r\n          }\r\n        }\r\n      } else {\r\n        // One ref\r\n        const left = leftResultRef.current;\r\n        const totalSize = {\r\n          w: resultsContainerRef.current.clientWidth,\r\n          h: resultsContainerRef.current.clientHeight,\r\n        };\r\n        const scaleW = totalSize.w / left.offsetWidth;\r\n        const scaleH = totalSize.h / left.offsetHeight;\r\n        if (scaleW < scaleH) {\r\n          resultsContainerRef.current.style.transform = `scale(${0.98 * scaleW})`;\r\n        } else {\r\n          resultsContainerRef.current.style.transform = `scale(${0.98 * scaleH})`;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  const leftChart = _.find({ chartLabel: leftLabel }, songTopData);\r\n  const rightChart = _.find({ chartLabel: rightLabel }, songTopData);\r\n  const chartsToShow = _.uniq(_.compact([leftChart, rightChart]));\r\n\r\n  return (\r\n    <div className=\"tracker-container\">\r\n      <Popups />\r\n      <div className=\"sidebar\">\r\n        <PlayerCard\r\n          player={leftPlayer}\r\n          profile={leftProfile}\r\n          label={leftLabel}\r\n          trackedData={leftTracked}\r\n          preferences={leftPreferences}\r\n          topPlayersList={topPlayersList}\r\n          isLeft\r\n          addPopup={addPopup}\r\n        />\r\n        <PlayerCard\r\n          player={rightPlayer}\r\n          profile={rightProfile}\r\n          label={rightLabel}\r\n          trackedData={rightTracked}\r\n          preferences={rightPreferences}\r\n          topPlayersList={topPlayersList}\r\n          addPopup={addPopup}\r\n        />\r\n      </div>\r\n      <div className=\"results\" ref={resultsContainerRef}>\r\n        {(error || message) && (\r\n          <div className=\"error\">\r\n            {message}\r\n            <br />\r\n            {error && error.message}\r\n          </div>\r\n        )}\r\n        {isSocketReady &&\r\n          !leftPlayer &&\r\n          !rightPlayer &&\r\n          !socketErrorMessage &&\r\n          !isLoading &&\r\n          _.isEmpty(chartsToShow) &&\r\n          (isAlive === null ? (\r\n            <div className=\"msg\">Waiting for recognizer...</div>\r\n          ) : isAlive ? (\r\n            <div className=\"msg\">Waiting for chart select...</div>\r\n          ) : (\r\n            <div className=\"offline msg\">Recognizer is offline</div>\r\n          ))}\r\n        {isSocketReady &&\r\n          (leftLabel || rightLabel) &&\r\n          !socketErrorMessage &&\r\n          !isLoading &&\r\n          _.isEmpty(chartsToShow) &&\r\n          'No results for this chart'}\r\n        {isLoading && <Loader />}\r\n        {!isLoading &&\r\n          chartsToShow.map((chart, chartIndex) => {\r\n            const leftPlayersHiddenStatus = _.omitBy(\r\n              (v) => !v,\r\n              _.getOr({}, 'playersHiddenStatus', leftPreferences)\r\n            );\r\n            const rightPlayersHiddenStatus = _.omitBy(\r\n              (v) => !v,\r\n              _.getOr({}, 'playersHiddenStatus', rightPreferences)\r\n            );\r\n\r\n            const isHiddenInBoth = Object.keys(leftPlayersHiddenStatus).reduce(\r\n              (obj, key) => ({\r\n                ...obj,\r\n                [key]: leftPlayersHiddenStatus[key] && rightPlayersHiddenStatus[key],\r\n              }),\r\n              {}\r\n            );\r\n            return (\r\n              <Chart\r\n                ref={chartIndex === 0 ? leftResultRef : rightResultRef}\r\n                playersHiddenStatus={isHiddenInBoth}\r\n                key={chart.sharedChartId}\r\n                chart={chart}\r\n                leftProfile={leftProfile}\r\n                rightProfile={rightProfile}\r\n                isSocketView\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TrackerApp);\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TOURNAMENT/LOADING`;\r\nconst SUCCESS = `TOURNAMENT/SUCCESS`;\r\nconst ERROR = `TOURNAMENT/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: {},\r\n  error: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: {},\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchCurrentTournament = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/tournament/info` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport numeral from 'numeral';\r\n\r\nimport './tournaments.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport { fetchCurrentTournament } from 'reducers/tournament';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\nimport ChartLabel from 'components/Leaderboard/ChartLabel';\r\n\r\nimport { labelToTypeLevel } from 'utils/leaderboards';\r\n\r\nexport default function Tournaments() {\r\n  const dispatch = useDispatch();\r\n  const [selectedBracket, setSelectedBracket] = useState(null);\r\n\r\n  const tournData = useSelector((state) => state.tournament.data);\r\n  const profiles = useSelector((state) => state.results.profiles);\r\n  const isLoading = useSelector((state) => state.tournament.isLoading);\r\n  const currentPlayerId = useSelector((state) => _.get('player.id', state.user.data));\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCurrentTournament());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (currentPlayerId && !selectedBracket && _.get('brackets', tournData)) {\r\n      const bracket = _.find((br) => {\r\n        return br.playerIds.includes(currentPlayerId);\r\n      }, tournData.brackets);\r\n      bracket && setSelectedBracket(bracket);\r\n    }\r\n  }, [currentPlayerId, selectedBracket, tournData]);\r\n\r\n  if (isLoading || _.isEmpty(profiles)) {\r\n    return <Loader />;\r\n  }\r\n\r\n  const { tournament, brackets } = tournData;\r\n\r\n  if (!tournament) {\r\n    return null;\r\n  }\r\n\r\n  const date = new Date(tournament.start_date);\r\n  const monthText = date.toLocaleString('default', {\r\n    month: 'long',\r\n  });\r\n  const tournamentTitle = `${date.getFullYear()} ${monthText}`;\r\n\r\n  return (\r\n    <div className=\"tournaments-page\">\r\n      <header>{tournamentTitle}</header>\r\n      <div className=\"description\">\r\n        <div className=\"labeled-item\">\r\n          <div className=\"title\">Start date:</div>\r\n          <div className=\"text\">{new Date(tournament.start_date).toLocaleDateString()}</div>\r\n        </div>\r\n        <div className=\"labeled-item\">\r\n          <div className=\"title\">End date:</div>\r\n          <div className=\"text\">{new Date(tournament.end_date).toLocaleDateString()}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"brackets-title\">Brackets:</div>\r\n      <div className=\"brackets\">\r\n        {brackets.map((bracket) => {\r\n          return (\r\n            <div\r\n              key={bracket.name}\r\n              className={classNames('bracket', {\r\n                active: bracket.name === _.get('name', selectedBracket),\r\n              })}\r\n              onClick={() => setSelectedBracket(bracket)}\r\n            >\r\n              <div className=\"bracket-name\">{bracket.name}</div>\r\n              {bracket.charts.map((chart) => {\r\n                const [type, level] = labelToTypeLevel(chart.label);\r\n                return (\r\n                  <div className=\"chart\" key={chart.sharedChartId}>\r\n                    <ChartLabel type={type} level={level} /> {chart.trackName}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      {selectedBracket && (\r\n        <>\r\n          <div className=\"results-title\">Results:</div>\r\n          <div className=\"results\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"player-name\">player</th>\r\n                  <th className=\"total\">total</th>\r\n                  {selectedBracket.charts.map((chart) => {\r\n                    const [type, level] = labelToTypeLevel(chart.label);\r\n                    return (\r\n                      <th colSpan={3} key={chart.sharedChartId}>\r\n                        <div className=\"chart-header\">\r\n                          <ChartLabel type={type} level={level} />{' '}\r\n                          <NavLink\r\n                            exact\r\n                            to={routes.leaderboard.sharedChart.getPath({\r\n                              sharedChartId: chart.sharedChartId,\r\n                            })}\r\n                          >\r\n                            {chart.trackName}\r\n                          </NavLink>\r\n                        </div>\r\n                      </th>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {(() => {\r\n                  const players = _.flow(\r\n                    _.groupBy('player_id'),\r\n                    _.mapValues(\r\n                      _.flow(\r\n                        _.map((result) => ({\r\n                          ...result,\r\n                          columnIndex: _.findIndex(\r\n                            { sharedChartId: result.shared_chart },\r\n                            selectedBracket.charts\r\n                          ),\r\n                        })),\r\n                        _.groupBy('columnIndex')\r\n                      )\r\n                    )\r\n                  )(selectedBracket.scores);\r\n                  const charts = selectedBracket.charts.map((chart, index) => {\r\n                    return {\r\n                      ...chart,\r\n                      maxScore: _.flow(\r\n                        _.values,\r\n                        _.flatMap(index),\r\n                        _.maxBy('score'),\r\n                        _.get('score')\r\n                      )(players),\r\n                    };\r\n                  });\r\n\r\n                  const playerData = _.mapValues(\r\n                    _.flow(\r\n                      _.toPairs,\r\n                      _.map(([index, results]) => {\r\n                        const maxScore = charts[index].maxScore;\r\n                        const bestPlayerScore = _.flow(_.maxBy('score'), _.get('score'))(results);\r\n                        const percent = ((bestPlayerScore / maxScore) * 100).toFixed(1);\r\n                        return [\r\n                          index,\r\n                          {\r\n                            playerName: results[0].player_name,\r\n                            playcount: results.length,\r\n                            score: bestPlayerScore,\r\n                            percent: percent,\r\n                            percentRaw: bestPlayerScore / maxScore,\r\n                          },\r\n                        ];\r\n                      }),\r\n                      (chartResults) => {\r\n                        const totalPercentRaw = _.sumBy('[1].percentRaw', chartResults);\r\n                        return {\r\n                          infoByIndex: _.fromPairs(chartResults),\r\n                          totalPercentRaw,\r\n                          totalPercent: (totalPercentRaw * 100).toFixed(1),\r\n                        };\r\n                      }\r\n                    ),\r\n                    players\r\n                  );\r\n                  const sortedIds = _.flow(\r\n                    _.keys,\r\n                    _.orderBy((id) => playerData[id].totalPercentRaw, ['desc'])\r\n                  )(playerData);\r\n                  const noResultsIds = _.remove(\r\n                    (id) => sortedIds.includes(_.toString(id)) || !profiles[id],\r\n                    selectedBracket.playerIds\r\n                  );\r\n\r\n                  return [...sortedIds, ...noResultsIds].map((playerId) => {\r\n                    const data = playerData[playerId] || {};\r\n                    const playerName = _.get('name', profiles[playerId]) || data.playerName;\r\n                    return (\r\n                      <tr key={playerId}>\r\n                        <td className=\"player-name\">{playerName}</td>\r\n                        <td className=\"total\">{data.totalPercent || 0}</td>\r\n                        {selectedBracket.charts.map((chart, index) => {\r\n                          const info = data.infoByIndex && data.infoByIndex[index];\r\n                          return (\r\n                            <React.Fragment key={index}>\r\n                              <td>{info && `${info.percent}%`}</td>\r\n                              <td>{info && numeral(info.score).format('0,0')}</td>\r\n                              <td>{info && info.playcount}</td>\r\n                            </React.Fragment>\r\n                          );\r\n                        })}\r\n                      </tr>\r\n                    );\r\n                  });\r\n                })()}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TRACKLIST/LOADING`;\r\nconst SUCCESS = `TRACKLIST/SUCCESS`;\r\nconst ERROR = `TRACKLIST/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTracklist = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/tracklist/stats/XX` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport localForage from 'localforage';\r\nimport ReactModal from 'react-modal';\r\nimport _ from 'lodash/fp';\r\n\r\nimport 'react-responsive-ui/style.css';\r\nimport './App.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\nimport { CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nimport SongsTop from 'components/SongsTop/SongsTop';\r\nimport Leaderboard from 'components/Leaderboard/Leaderboard';\r\nimport Ranking from 'components/Ranking/Ranking';\r\nimport Profile from 'components/Profile/Profile';\r\nimport ProfileCompare from 'components/ProfileCompare/ProfileCompare';\r\nimport TopBar from 'components/Shared/TopBar/TopBar';\r\nimport Loader from 'components/Shared/Loader';\r\nimport LoginScreen from 'components/LoginScreen/LoginScreen';\r\nimport SocketTracker from 'components/SocketTracker/SocketTracker';\r\nimport Tournaments from 'components/Tournaments/Tournaments';\r\n\r\nimport { fetchResults, setFilter } from 'reducers/results';\r\nimport { fetchTracklist } from 'reducers/tracklist';\r\nimport { fetchUser } from 'reducers/user';\r\nimport { fetchPreferences } from 'reducers/preferences';\r\n\r\nReactModal.setAppElement('#root');\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userData: state.user.data,\r\n    isLoading: state.user.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setFilter,\r\n  fetchResults,\r\n  fetchTracklist,\r\n  fetchUser,\r\n  fetchPreferences,\r\n};\r\n\r\nfunction App({\r\n  fetchUser,\r\n  fetchTracklist,\r\n  fetchResults,\r\n  fetchPreferences,\r\n  setFilter,\r\n  userData,\r\n  isLoading,\r\n}) {\r\n  useEffect(() => {\r\n    if (!process.env.REACT_APP_SOCKET) {\r\n      fetchUser();\r\n      localForage\r\n        .getItem('filter')\r\n        .then((filter) => {\r\n          if (filter) {\r\n            setFilter({\r\n              ..._.omit('song', filter),\r\n              chartRange: filter.chartRange && {\r\n                ...filter.chartRange,\r\n                range: _.every(\r\n                  (r) => r >= CHART_MIN_MAX[0] && r <= CHART_MIN_MAX[1],\r\n                  filter.chartRange.range\r\n                )\r\n                  ? filter.chartRange.range\r\n                  : CHART_MIN_MAX,\r\n              },\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => console.error('Cannot get filter from local storage', error));\r\n    }\r\n  }, [fetchUser, fetchTracklist, fetchResults, setFilter]);\r\n\r\n  useEffect(() => {\r\n    if (!process.env.REACT_APP_SOCKET && userData && userData.player) {\r\n      Promise.all([fetchTracklist(), fetchPreferences()]).then(() => {\r\n        fetchResults();\r\n      });\r\n    }\r\n  }, [userData, fetchPreferences, fetchResults, fetchTracklist]);\r\n\r\n  useEffect(() => {\r\n    if (process.env.REACT_APP_SOCKET) {\r\n      fetchTracklist().then(() => {\r\n        fetchResults();\r\n      });\r\n    }\r\n  }, [fetchResults, fetchTracklist]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <Loader />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (process.env.REACT_APP_SOCKET) {\r\n    return <SocketTracker />;\r\n  }\r\n\r\n  if (!userData || !userData.player) {\r\n    return <LoginScreen />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TopBar />\r\n      <Route exact path=\"/\" render={() => <Redirect to={routes.leaderboard.path} />} />\r\n      <Route exact path={routes.leaderboard.path} component={Leaderboard} />\r\n      <Route exact path={routes.leaderboard.sharedChart.path} component={Leaderboard} />\r\n      <Route path={routes.ranking.path} component={Ranking} />\r\n      <Route path={routes.profile.path}>\r\n        <Switch>\r\n          <Route path={routes.profile.path} exact component={Profile} />\r\n          <Route path={routes.profile.compare.path} exact component={ProfileCompare} />\r\n        </Switch>\r\n      </Route>\r\n      <Route path={routes.songs.path} component={SongsTop} />\r\n      <Route path={routes.tournaments.path} component={Tournaments} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { combineReducers } from 'redux';\r\n\r\nimport mostPlayed from './mostPlayed';\r\nimport mostPlayedMonth from './mostPlayedMonth';\r\nimport leastPlayed from './leastPlayed';\r\n\r\nexport default combineReducers({\r\n  mostPlayed,\r\n  mostPlayedMonth,\r\n  leastPlayed,\r\n});\r\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport _ from 'lodash/fp';\r\n\r\nimport login from 'reducers/login';\r\nimport popups from 'reducers/popups';\r\nimport preferences from 'reducers/preferences';\r\nimport presets from 'reducers/presets';\r\nimport profiles from 'reducers/profiles';\r\nimport results from 'reducers/results';\r\nimport topPerSong from 'reducers/topPerSong';\r\nimport tournament from 'reducers/tournament';\r\nimport tracklist from 'reducers/tracklist';\r\nimport trackStats from 'reducers/trackStats';\r\nimport user from 'reducers/user';\r\n\r\nconst rootReducer = combineReducers({\r\n  login,\r\n  popups,\r\n  preferences,\r\n  presets,\r\n  profiles,\r\n  results,\r\n  topPerSong,\r\n  tournament,\r\n  tracklist,\r\n  trackStats,\r\n  user,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && process.env.NODE_ENV === 'development'\r\n    ? compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__({\r\n          stateSanitizer: (state) => ({\r\n            ...state,\r\n            results: {\r\n              ...state.results,\r\n              data: `big array, ${_.size(state.results.data)}`,\r\n              results: `big array, ${_.size(state.results.results)}`,\r\n              sharedCharts: 'big object',\r\n              originalData: 'big object',\r\n              resultInfo: 'big object',\r\n              profiles: _.mapValues(\r\n                (pl) => ({\r\n                  ...pl,\r\n                  resultsByGrade: '...',\r\n                  resultsByLevel: '...',\r\n                  rankingHistory: '...',\r\n                  ratingHistory: '...',\r\n                  pp: {\r\n                    pp: pl.pp && pl.pp.pp,\r\n                    scores: '...',\r\n                  },\r\n                }),\r\n                state.results.profiles\r\n              ),\r\n            },\r\n          }),\r\n        })\r\n      )\r\n    : applyMiddleware(thunk)\r\n);\r\n","import 'promise-polyfill';\r\nimport 'whatwg-fetch';\r\nimport 'utils/polyfills';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.scss';\r\nimport App from 'components/App';\r\n\r\nimport { store } from 'reducers';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}