{"version":3,"sources":["utils/polyfills.js","constants/routes.js","constants/leaderboard.js","components/Shared/Loader/index.js","reducers/user/resetAction.js","utils/fetch.js","constants/backend.js","reducers/trackStats/mostPlayed.js","reducers/trackStats/mostPlayedMonth.js","reducers/trackStats/leastPlayed.js","utils/date.js","utils/score.js","utils/expRanks.js","utils/exp.js","utils/achievements.js","utils/leaderboards.js","components/SongsTop/SongsTop.js","components/Shared/ToggleButton/ToggleButton.js","components/Shared/Input/Input.js","components/Shared/Toggle/Toggle.js","components/Shared/CollapsibleBar/index.js","components/Shared/Overlay/Overlay.js","components/Shared/Range/index.js","components/Leaderboard/ChartFilter.js","utils/workers/profilesPostProcess.js","constants/env.js","reducers/results.js","reducers/presets.js","components/Leaderboard/PresetsControl.js","components/Shared/Flag/index.js","components/SocketTracker/helpers.js","utils/colors.js","components/Leaderboard/Result.js","components/Leaderboard/ChartLabel.js","components/Leaderboard/Chart.js","constants/storageKeys.js","reducers/charts.js","reducers/selectors.js","components/Leaderboard/Leaderboard.js","components/Ranking/RankingList.js","components/Ranking/RankingFaq.js","reducers/preferences.js","components/Ranking/Ranking.js","components/Profile/MostPlayed.js","components/Profile/ExpFaq.js","reducers/profiles.js","utils/profiles.js","components/Profile/Profile.js","components/ProfileCompare/ProfileCompare.js","reducers/user/index.js","reducers/login.js","components/Shared/TopBar/TopBar.js","components/LoginScreen/LoginScreen.js","constants/popups.js","reducers/popups.js","components/Shared/Popups/index.js","components/Shared/Popups/AchievementPopup.js","components/Shared/Popups/RankUpPopup.js","reducers/topPerSong.js","components/SocketTracker/PlayerCard.js","components/SocketTracker/SocketTracker.js","reducers/tournament.js","components/Tournaments/Tournaments.js","reducers/tracklist.js","reducers/players.js","components/App.js","reducers/trackStats/index.js","reducers/index.js","index.js","webpack:///./src/utils/workers/profilesPostProcess.js?f05c"],"names":["Number","isNaN","value","Math","sign","x","Array","prototype","findIndex","Object","defineProperty","predicate","this","TypeError","o","len","length","thisArg","arguments","k","kValue","call","configurable","writable","routes","path","sharedChart","getPath","params","sharedChartId","faq","id","compare","compareToId","SORT","DEFAULT","PROTAGONIST","RANK_ASC","RANK_DESC","PP_ASC","PP_DESC","NEW_SCORES_PLAYER","EASIEST_SONGS","HARDEST_SONGS","RANK_FILTER","CHART_MIN_MAX","DURATION","STD","SHORT","REMIX","FULL","DURATION_DEFAULT","_","values","Loader","className","width","height","viewBox","xmlns","fill","cx","cy","r","attributeName","from","to","begin","dur","calcMode","repeatCount","fillOpacity","fetchJson","url","request","method","postJson","body","JSON","stringify","headers","defaultHeaders","async","dispatch","getState","session","cookies","get","response","fetch","credentials","status","json","error","isObject","isString","Error","message","type","Promise","reject","HOST","ERROR","initialState","isLoading","data","parseDate","textDate","moment","toDate","Date","getScoreWithoutBonus","score","grade","ranks","threshold","iconName","color","gradeValue","F","D","C","B","A","S","SS","SSS","getExp","result","chart","isBestGradeOnChart","chartType","chartLevel","getRankImg","rank","src","process","alt","achievements","icon","GiRank1","description","resultFunction","state","progress","combo","GiRank2","GiRank3","GiSmokingFinger","playedSongs","songsToPlay","includes","song","uniq","GiRetroController","GiLoveSong","Улитка","GiSnail","charts","some","songToPlay","chartLabel","GiPodiumSecond","miss","bad","GiLifeBar","GiWoodenPegleg","good","great","initialAchievementState","TimeAgo","addLocale","ru","timeAgo","timeStyle","flavour","gradation","convenient","units","tooltipFormatter","isExactDate","dateObject","toLocaleDateString","resultType","undefined","isMyBest","isMachineBest","style","display","alignItems","flexDirection","getTimeAgo","date","dayDiff","startOf","diff","hour","format","labelToTypeLevel","label","level","match","gradeComparator","mapResult","res","players","chartId","misses","bads","goods","greats","recognition_notes","isUnknownPlayer","player","arcade_name","isIntermediateResult","shared_chart","playerId","nickname","nicknameArcade","gained","exact_gain_date","scoreRaw","isRank","rank_mode","_r","originalChartMix","original_mix","originalChartLabel","original_label","originalScore","original_score","scoreIncrease","score_increase","calories","perfect","perfects","max_combo","mods","mods_list","isHJ","split","maxTotalSteps","infos","fixableIndex","absentNumbersCount","localStepSum","i","isNumber","tryFixIncompleteResult","sqrt","acc","floor","accRaw","accuracy","toFixed","accuracyRaw","toNumber","initializeProfile","profiles","resultsByLevel","fromPairs","map","name","nameArcade","resultsByGrade","firstResultDate","lastResultDate","count","battleCount","countAcc","grades","sumAccuracy","rankingHistory","ratingHistory","lastPlace","lastBattleDate","region","flow","keys","achName","exp","getProfileInfoFromResult","profile","replace","mapValues","convert","cap","achState","getMaxRawScore","TopList","fetchList","title","renderRightSide","setData","useState","setLoading","getRightSide","item","countplay","useEffect","then","success","catch","index","key","classNames","best","full_name","leastPlayedRightSide","last_play","connect","fetchMostPlayed","fetchMostPlayedMonth","fetchLeastPlayed","ToggleButton","React","PureComponent","render","active","onToggle","text","props","onClick","Input","Component","constructor","super","isNil","defaultValue","bindAll","componentDidUpdate","prevProps","setState","handleChange","e","newValue","target","onChange","handleBlur","numericValue","min","max","onBlur","handleKeyPress","omit","onKeyPress","onInput","noop","defaultProps","Toggle","checked","uniqueId","htmlFor","children","CollapsibleBar","open","defaultOpen","POPPER_MODIFIERS","preventOverflow","enabled","padding","boundariesElement","PLACEMENT_ARROW_MAPPING","right","left","top","bottom","getArrowPlacement","placement","Overlay","isVisible","containerItemRef","createRef","renderPopper","bind","toggleOverlayVisibility","hideOverlay","handleClickOutside","event","closest","ref","arrowProps","scheduleUpdate","outOfBoundaries","hideWhenOutOfBounds","data-placement","overlayClassName","overlayItem","Fragment","ReactDOM","createPortal","container","document","modifiers","referenceElement","current","defaultTypes","listensToClickOutside","Range","range","step","renderTrack","onMouseDown","onTouchStart","position","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","justifyContent","boxShadow","ChartFilter","filterValue","onChangeEx","getOr","duration","buttonText","t","isEqual","isEmpty","newMin","newMax","without","postProcessProfiles","tracklist","neededGrades","expRank","findLast","expRanks","expRankNext","find","double","single","gradeIncrementMap","accuracyPointsRaw","forEach","push","thisGrade","thisPlayerId","otherResults","results","filter","sort","a","b","indexOf","gradeIncArray","gradeInc","l","g","prog","incrementLevel","number","minimumNumber","totalCharts","round","getMinimumNumber","bonusCoefficientNumber","bonus","getBonusForLevel","achievementBonus","getProcessedProfiles","sharedCharts","battles","debug","resultInfo","chartResults","maxPP","interpolatedDifficulty","maxScore","K","pp","ppPotential","ppRatio","ppFixed","scores","pp_","s","rating","orderBy","items","getTime","place","processPP","sums","size","accuracyPointsInterpolated","maxAccuracy","maxBy","y","maxLevelWithMaxAcc","points","regression","logarithmic","f","calculated","predict","yx","interpolatedPoint","pair","returnValue","weight","abs","interpolation","identity","reduce","diffSum","weightSum","averageDifficulty","interpolateDifficulties","logText","dictScoreInfo","dictChartElo","getDictChartEloId","enemyScore","dictRatingDiff","getDictRatingDiffId","p1","p2","scoreMultiplier","scoreInfo","enemyScoreInfo","startingRating","r1","r2","R1","R2","E1","E2","S1","S2","kRating1","kRating2","maxK1","maxK2","kLevel1","kLevel2","kLevel","kMinimizer","startsWith","K1","K2","dr1","dr2","baseEloId1","baseEloId2","baseEloP1","baseEloP2","ratingDiffId1","ratingDiffId2","ratingDiff","ratingDiffLast","playersSorted","battleDate","p1LastRating","last","p2LastRating","toInteger","ratingRaw","now","processBattles","DEBUG","localStorage","getItem","window","debugOn","setItem","debugOff","removeItem","highscoresUrl","REACT_APP_SOCKET","defaultFilter","isLoadingRanking","fetchResults","processResultsData","console","log","mappedResults","shared_charts","getTopResultId","getBestGradeResultId","topResults","bestGradeResults","resRaw","toUpper","chart_label","track_name","max_total_steps","allResultsIds","chartTop","topResultId","currentTopResult","oldScoreIndex","splice","newScoreIndex","sortedLastIndexBy","latestScoreDate","enemyResult","bestGradeResultId","currentBestGradeRes","maxScoreCandidate","processData","toPairs","originalData","input","output","Worker","worker","WorkerProfilesProcessing","terminate","profilesProcessing","q","calculateRankingChanges","setFilter","getListOfNames","getMapOfRatings","ranking","lastChangedRanking","lastChangedRankingPoints","lastFetchedRanking","all","localForage","listNow","listLastFetched","listLastChanged","mapPointsNow","mapPointsLastFetched","rankingsPointsMap","listPrev","warn","presets","currentPreset","itemToOption","reloadPresets","selectPreset","openPreset","noPresetsMessage","mapDispatchToProps","loadPresets","savePreset","newPreset","confirm","newPresets","remove","deletePreset","withoutOldPreset","PresetsControl","onChangeSelection","selected","onRewritePreset","onSavePreset","isAddingNew","componentDidMount","classNamePrefix","placeholder","options","noOptionsMessage","disabled","Flag","backgroundImage","preprocessData","fullRes","every","stepSum","sum","n","track","mix","resultInfoOverrides","numb","latest","hasRankScore","useTracked","resetIndicatorData","isDebugOn","prevData","setPrevData","currData","setCurrData","resetIndicator","useRef","reset","useCallback","useMemo","useResetTrackedObject","object","tracking","colorsArray","forwardRef","placeDifference","showProtagonistEloChange","showProtagonistPpChange","protagonistName","uniqueSelectedNames","leftProfile","rightProfile","isSocketView","inf","ratingInfoBlock","flag","nameIndex","empty","outline","isSecondOccurenceInResults","topPlace","fontWeight","exact","mod","avMod","endsWith","xMod","numeral","vj","hj","getShortTimeAgo","content","tooltipClassName","singlep","doublep","coop","Chart","playersHiddenStatus","chartOriginal","showHiddenPlayers","overrides","setOverrides","isHidingPlayers","setHidingPlayers","first","occuredNicknames","hiddenPlayersCount","isPlayerHidden","onRedoLatestResult","throttle","ANIMATION_DURATION","newOverrides","drop","onUndoLatestResult","undoedResult","undoedPlayerId","previousResults","previousPlayerResult","newResults","compact","latestScore","overrideChart","isActive","totalResultsCount","countBy","eachResultPlayerIds","true","currentIndex","canUndo","interpDiff","ChartLabel","href","queryString","search_query","rel","enterAnimation","leaveAnimation","typeName","maintainContainerHeight","isProtagonist","newIndex","prevScore","findLastIndex","preferences","resultsUrl","lastUpdatedOn","setChartsData","fetchChartsData","cache","cachedData","slice","queryParams","since","fetchedData","lastUpdatedAt","newLastUpdated","newData","setAndCacheData","chartsData","allResults","chartEntry","chartInfo","forEachRight","_result","resultIndex","sortedIndexBy","processChartsData","playersSelector","createSelector","user","isCurrentPlayer","sortBy","it","toLower","filteredDataSelector","start","performance","showHidden","showHiddenFromPreferences","names","namesOr","playersOr","namesNot","playersNot","sortingType","rankFilter","protagonist","excludeAntagonists","defaultSorting","newScoresProtagonistSorting","protagonistSorting","row","protIndex","protScore","enemies","take","uniqBy","distance","dist","enemy","distanceFromProtagonist","getPpSorting","field","direction","info","Infinity","getEloSorting","getDiffSorting","sortingFunctions","occuredIds","isVisibleWithRankFilter","chartRange","rows","filterCharts","rowNames","matchSorter","trim","sharedChartDataSelector","sortingOptions","rankOptions","resetFilter","Leaderboard","showItemsCount","curry","onRefresh","onTypeSongName","debounce","renderSimpleSearch","renderFilters","closeMenuOnSelect","isMulti","renderSortings","isClearable","isChartView","filteredData","canShowMore","visibleData","highlightProtagonist","preset","chartIndex","getGradeImg","RankingList","updatePreferences","playerIndex","isHidden","showHiddenPlayersInRanking","change","prevRating","down","up","set","RankingFaq","defaultPreferences","rankingSelector","Ranking","onChangeHidingPlayers","component","withRouter","limit","setLimit","latestDate","ExpFaq","setProfilesFilter","resetProfilesFilter","cutRange","array","startIndex","endIndex","firstElement","lastElement","defaultGradesDistribution","defaultGradesWithLevelsDistribution","flatMap","profileSelectorCreator","idParamName","levelsDistribution","singlesLevels","doublesLevels","gradesData","update","gradesDistribution","groupBy","pick","gradesValues","gradesAndLevelsDistribution","groupedResults","counts","reduced","levelsData","lastTickRating","lastTickRanking","lastTick","firstTick","lastDay","endOf","minMaxRange","filterRange","dayRange","dayRangeMs","placesChanges","ratingChanges","profileSelector","otherPlayersSelector","ind","Profile","isLevelGraphCombined","showFaq","onChangeDayRange","onShowFaq","onHideFaq","circleShape","args","componentWillUnmount","renderRankingHistory","minHeight","aspect","margin","strokeDasharray","dataKey","domain","tickFormatter","allowDecimals","stroke","isAnimationActive","payload","strokeWidth","dot","renderAccuracyPoints","interpolated","pointsByType","ticks","shape","false","renderPlaceHistory","dataMax","interval","reversed","renderGrades","stackId","renderGradesWithLevels","stackOffset","doubleItems","singleItems","dataMin","offset","renderLevels","totalD","totalS","renderGradeBlock","obj","typeLetter","progr","minNumber","currentNumber","levelString","complete","zero","renderAchievement","achievement","Icon","renderProfile","otherPlayers","expProgress","history","ariaHideApp","isOpen","onRequestClose","ceil","currentRange","dateL","dateR","l1","l2","MostPlayed","BARS_MODES","SINGLE_TWO","SINGLE_FIVE","DOUBLE_TWO","DOUBLE_FIVE","BOTH_TWO","BOTH_FIVE","profile1Selector","profile2Selector","getCombinedData","memoize","rc1","rc2","allRC","rating2","rating1","sortedUniqBy","allPC","place2","place1","perLevelComparison","p1win","p1notPlayed","p2win","p2notPlayed","notPlayed","twoBars","p1index","p2index","perType","normalizeTwo","dataObj","totalPlayed","normalizeFive","total","chartLevels","ProfileCompare","compareBarsMode","rhMargin","rhXDomain","rhYDomain","rhXTickFormatter","rhTooltip","profile2","p1Name","p2Name","plcMargin","plcTooltip","isTwo","renderLegendItem","plcXDomain","plcXTicks","plcXFormatter","combinedData","useProfile2","renderPerLevelComparison","layout","mode","getCompareBars","profile1","fetchUser","login","googleResponse","token","tokenId","expires","loginACs","logout","isLoadingLogin","isLoadingUser","isClown","setClown","onGoogleResponse","clientId","onSuccess","onFailure","cookiePolicy","TYPES","popups","popupByType","playerName","achievementName","progressNumber","setProgressNumber","prevPlace","currPlace","list","prevList","currList","setPlace","setList","listTop","delay","pl","renderPlayerLine","popupStyles","overlay","transition","opacity","removePopup","visiblePopup","setVisiblePopup","contentRef","popup","persistent","setTimeout","fadeOut","timeout","onAfterOpen","fadeIn","popupBody","PopupComponent","parameters","fetchingParams","PlayerCard","trackedData","isLeft","topPlayersList","addPopup","renderDeltaText","prevN","delta","rivals","closestPlayers","resetData","isDataValid","useTrackedEx","takenWidth","emptyWidth","diffWidth","renderExpLine","elo","topPlayersListSelector","fetchTopPerSong","songName","leftLabel","rightLabel","song_name","join","processedData","appendNewResults","lastDate","start_date","appendedResults","currentResults","oldResult","old","mergedData","popupType","fetchUserPreferences","topPerSong","songTopData","setMessage","socketErrorMessage","setSocketErrorMessage","isSocketReady","setSocketReady","isAlive","setAlive","setLeftLabel","setRightLabel","leftPlayer","setLeftPlayer","rightPlayer","setRightPlayer","recognizedSongName","setRecognizedSongName","leftPreferences","setLeftPreferences","rightPreferences","setRightPreferences","resultsContainerRef","leftResultRef","rightResultRef","socketRef","timeoutResetTokenRef","minBy","p","lev","onChangeAchievements","prevAchievement","currAchievement","leftTracked","resetLeftTracked","rightTracked","resetRightTracked","restartTimeout","clearTimeout","STATE_RESET_TIMEOUT_SEC","WebSocket","onerror","onopen","onmessage","parse","newSongName","totalSize","w","clientWidth","h","clientHeight","scaleHH","offsetWidth","scaleHW","offsetHeight","scaleWH","scaleWW","transform","scaleW","scaleH","leftChart","rightChart","chartsToShow","leftPlayersHiddenStatus","omitBy","v","rightPlayersHiddenStatus","isHiddenInBoth","Tournaments","useDispatch","selectedBracket","setSelectedBracket","tournData","useSelector","tournament","currentPlayerId","bracket","br","playerIds","brackets","monthText","toLocaleString","month","tournamentTitle","getFullYear","end_date","trackName","colSpan","columnIndex","playerData","bestPlayerScore","percent","player_name","playcount","percentRaw","totalPercentRaw","sumBy","infoByIndex","totalPercent","sortedIds","noResultsIds","toString","fetchTracklist","ReactModal","setAppElement","App","userData","SocketTracker","SongsTop","combineReducers","mostPlayed","action","mostPlayedMonth","leastPlayed","rootReducer","merge","hasPrevList","playerOriginal","trackStats","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","getElementById","addMethods","methods","module","exports"],"mappings":"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","file":"static/js/main.ff7a93a0.chunk.js","sourcesContent":["/* eslint-disable */\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\r\nNumber.isNaN =\r\n  Number.isNaN ||\r\n  function(value) {\r\n    return value !== value;\r\n  };\r\n\r\nif (typeof Math.sign === 'undefined') {\r\n  Math.sign = function(x) {\r\n    return x > 0 ? 1 : x < 0 ? -1 : x;\r\n  };\r\n}\r\n\r\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\r\nif (!Array.prototype.findIndex) {\r\n  Object.defineProperty(Array.prototype, 'findIndex', {\r\n    value: function(predicate) {\r\n      // 1. Let O be ? ToObject(this value).\r\n      if (this == null) {\r\n        throw new TypeError('\"this\" is null or not defined');\r\n      }\r\n\r\n      var o = Object(this);\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('predicate must be a function');\r\n      }\r\n\r\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n      var thisArg = arguments[1];\r\n\r\n      // 5. Let k be 0.\r\n      var k = 0;\r\n\r\n      // 6. Repeat, while k < len\r\n      while (k < len) {\r\n        // a. Let Pk be ! ToString(k).\r\n        // b. Let kValue be ? Get(O, Pk).\r\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n        // d. If testResult is true, return k.\r\n        var kValue = o[k];\r\n        if (predicate.call(thisArg, kValue, k, o)) {\r\n          return k;\r\n        }\r\n        // e. Increase k by 1.\r\n        k++;\r\n      }\r\n\r\n      // 7. Return -1.\r\n      return -1;\r\n    },\r\n    configurable: true,\r\n    writable: true,\r\n  });\r\n}\r\n","export const routes = {\r\n  leaderboard: {\r\n    path: `/leaderboard`,\r\n    sharedChart: {\r\n      path: `/leaderboard/chart/:sharedChartId`,\r\n      getPath: (params) => `/leaderboard/chart/${params.sharedChartId}`,\r\n    },\r\n  },\r\n  songs: {\r\n    path: `/songs`,\r\n  },\r\n  ranking: {\r\n    path: `/ranking`,\r\n    faq: {\r\n      path: '/ranking/faq',\r\n    },\r\n  },\r\n  tournaments: {\r\n    path: `/tournaments`,\r\n  },\r\n  profile: {\r\n    path: `/profiles/:id`,\r\n    getPath: (params) => `/profiles/${params.id}`,\r\n    compare: {\r\n      path: `/profiles/:id/vs/:compareToId`,\r\n      getPath: (params) => `/profiles/${params.id}/vs/${params.compareToId}`,\r\n    },\r\n  },\r\n};\r\n","import _ from 'lodash/fp';\r\n\r\nexport const SORT = {\r\n  DEFAULT: 'default',\r\n  PROTAGONIST: 'protagonist',\r\n  RANK_ASC: 'rankAsc',\r\n  RANK_DESC: 'rankDesc',\r\n  PP_ASC: 'ppAsc',\r\n  PP_DESC: 'ppDesc',\r\n  NEW_SCORES_PLAYER: 'newScoresPlayer',\r\n  EASIEST_SONGS: 'easiestSongs',\r\n  HARDEST_SONGS: 'hardestSongs',\r\n};\r\n\r\nexport const RANK_FILTER = {\r\n  SHOW_ALL: 'SHOW_ALL',\r\n  SHOW_BEST: 'SHOW_BEST',\r\n  SHOW_ONLY_RANK: 'SHOW_ONLY_RANK',\r\n  SHOW_ONLY_NORANK: 'SHOW_ONLY_NORANK',\r\n};\r\n\r\nexport const CHART_MIN_MAX = [1, 28];\r\nexport const DURATION = {\r\n  STD: 'Standard',\r\n  SHORT: 'Short',\r\n  REMIX: 'Remix',\r\n  FULL: 'Full',\r\n};\r\nexport const DURATION_DEFAULT = _.values(DURATION);\r\n","import React from 'react';\r\n\r\nimport './loader.scss';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"loader\">\r\n      <svg\r\n        width=\"40\"\r\n        height=\"12\"\r\n        viewBox=\"0 0 120 30\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"#eee\"\r\n      >\r\n        <circle cx=\"15\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"60\" cy=\"15\" r=\"9\" fillOpacity=\"0.3\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"9\"\r\n            to=\"9\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"9;15;9\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"0.5\"\r\n            to=\"0.5\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\".5;1;.5\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"105\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","export const RESET = `USER/RESET`;\r\nexport const resetUser = () => ({ type: RESET });\r\n","import _ from 'lodash/fp';\r\nimport cookies from 'browser-cookies';\r\n\r\nimport { resetUser } from 'reducers/user/resetAction';\r\n\r\nexport const fetchJson = ({ url }) => request({ url, method: 'get' });\r\nexport const postJson = ({ url, body }) =>\r\n  request({\r\n    url,\r\n    method: 'post',\r\n    body: JSON.stringify(body),\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n    },\r\n  });\r\n\r\nconst defaultHeaders = {};\r\n\r\nexport const request = ({ url, method, body, headers }) => async (dispatch, getState) => {\r\n  try {\r\n    const session = cookies.get('session');\r\n    if (session) {\r\n      defaultHeaders['Session'] = session;\r\n    }\r\n    const response = await fetch(url, {\r\n      method,\r\n      body,\r\n      headers: { ...defaultHeaders, ...headers },\r\n      credentials: 'include',\r\n    });\r\n    if (response.status >= 200 && response.status < 300) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      const error = await response.json();\r\n      if (_.isObject(error) && _.isString(error.error)) {\r\n        throw new Error(error.error);\r\n      } else if (_.isString(error)) {\r\n        throw new Error(error);\r\n      } else {\r\n        throw new Error('HTTP Status ' + response.status);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    if (error.message === 'Invalid session') {\r\n      dispatch(resetUser());\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n","// export const HOST = 'http://localhost:5000';\r\nexport const HOST = 'https://vps720616.ovh.net:5000';\r\nexport const SOCKET_SERVER_IP = 'ws://127.0.0.1:6789';\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `MOST_PLAYED/LOADING`;\r\nconst SUCCESS = `MOST_PLAYED/SUCCESS`;\r\nconst ERROR = `MOST_PLAYED/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchMostPlayed = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-played` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `MOST_PLAYED_MONTH/LOADING`;\r\nconst SUCCESS = `MOST_PLAYED_MONTH/SUCCESS`;\r\nconst ERROR = `MOST_PLAYED_MONTH/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchMostPlayedMonth = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-played-month` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `LEAST_PLAYED/LOADING`;\r\nconst SUCCESS = `LEAST_PLAYED/SUCCESS`;\r\nconst ERROR = `LEAST_PLAYED/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchLeastPlayed = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-time-not-played` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import moment from 'moment';\r\n\r\nexport const parseDate = (textDate) => {\r\n  if (typeof textDate === 'string') {\r\n    return moment(textDate).toDate();\r\n  } else {\r\n    return new Date(textDate);\r\n  }\r\n};\r\n","export const getScoreWithoutBonus = (score, grade) => {\r\n  if (grade === 'SSS') return score - 300000;\r\n  if (grade === 'SS') return score - 150000;\r\n  if (grade === 'S') return score - 100000;\r\n  return score;\r\n};\r\n","export const ranks = [\r\n  {\r\n    threshold: 0,\r\n    iconName: '0.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 1000,\r\n    iconName: '1.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 2000,\r\n    iconName: '2.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 3000,\r\n    iconName: '3.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 4000,\r\n    iconName: '4.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 5000,\r\n    iconName: '5.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 6250,\r\n    iconName: '6.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 7500,\r\n    iconName: '7.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 8750,\r\n    iconName: '8.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 10000,\r\n    iconName: '9.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 12000,\r\n    iconName: '10.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 14000,\r\n    iconName: '11.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 16000,\r\n    iconName: '12.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 18000,\r\n    iconName: '13.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 22000,\r\n    iconName: '14.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 26000,\r\n    iconName: '15.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 30000,\r\n    iconName: '16.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 35000,\r\n    iconName: '17.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 40000,\r\n    iconName: '18.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 50000,\r\n    iconName: '19.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 60000,\r\n    iconName: '20.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 70000,\r\n    iconName: '21.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 80000,\r\n    iconName: '22.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 100000,\r\n    iconName: '23.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 120000,\r\n    iconName: '24.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 140000,\r\n    iconName: '25.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 160000,\r\n    iconName: '26.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 180000,\r\n    iconName: '27.png',\r\n    color: 'green',\r\n  },\r\n];\r\n","import React from 'react';\r\n\r\nexport const gradeValue = {\r\n  F: 0.1,\r\n  D: 0.2,\r\n  'D+': 0.3,\r\n  C: 0.3,\r\n  'C+': 0.5,\r\n  B: 0.5,\r\n  'B+': 0.8,\r\n  A: 0.8,\r\n  'A+': 1,\r\n  S: 1.1,\r\n  SS: 1.2,\r\n  SSS: 1.2,\r\n};\r\n\r\nexport const getExp = (result, chart) => {\r\n  if (!result.isBestGradeOnChart) {\r\n    return 0;\r\n  }\r\n  if (chart.chartType === 'COOP') {\r\n    return (chart.chartLevel * 1000 * (gradeValue[result.grade] || 0.8)) / 8;\r\n  }\r\n  const exp = (chart.chartLevel ** 2.31 * (gradeValue[result.grade] || 0.8)) / 9;\r\n  return exp;\r\n};\r\n\r\nexport const getRankImg = rank =>\r\n  rank && (\r\n    <img\r\n      className={rank.color}\r\n      src={`${process.env.PUBLIC_URL}/ranks/${rank.iconName}`}\r\n      alt={rank.threshold}\r\n    />\r\n  );\r\n\r\nexport { ranks } from './expRanks';\r\n","import _ from 'lodash/fp';\r\n\r\nimport {\r\n  GiLoveSong,\r\n  GiLifeBar,\r\n  GiSmokingFinger,\r\n  GiSnail,\r\n  GiRetroController,\r\n  GiRank1,\r\n  GiRank2,\r\n  GiRank3,\r\n  GiWoodenPegleg,\r\n  GiPodiumSecond,\r\n} from 'react-icons/gi';\r\n\r\nexport const achievements = {\r\n  '500 комбо': {\r\n    icon: GiRank1,\r\n    description: 'Заработать 500+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 500 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  '1000 комбо': {\r\n    icon: GiRank2,\r\n    description: 'Заработать 1000+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 1000 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  '2000 комбо': {\r\n    icon: GiRank3,\r\n    description: 'Заработать 2000+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 2000 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Мастер фингеринга': {\r\n    icon: GiSmokingFinger,\r\n    description: 'Сыграть все Fingers треки',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: ['Monkey Fingers', 'Kimchi Fingers', 'Monkey Fingers 2', 'Money Fingers'],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  '8-bit': {\r\n    icon: GiRetroController,\r\n    description: 'Сыграть Seize My Day, Tales of Pumpnia и Pumptris (8bit ver.)',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: ['Seize My Day', 'Tales of Pumpnia', 'Pumptris (8bit ver.)'],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  'Love is...': {\r\n    icon: GiLoveSong,\r\n    description: 'Сыграть все Love is a Danger Zone треки',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: [\r\n        'Love is a Danger Zone',\r\n        'Love is a Danger Zone [SHORT]',\r\n        'Love is a Danger Zone (Cranky Mix)',\r\n        'Love is a Danger Zone 2',\r\n        'Love is a Danger Zone 2 [SHORT]',\r\n        'Love is a Danger Zone 2 [FULL]',\r\n        'Love is a Danger Zone 2 (D&G Ver.)',\r\n        'Love is a Danger Zone (try to B.P.M.)',\r\n      ],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  Улитка: {\r\n    icon: GiSnail,\r\n    description:\r\n      'Мастер замедлений: сыграть старшие чарты Twist of Fate, Karyawisata, Awakening и Moonlight',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: [\r\n        { song: 'Twist of Fate (feat. Ruriling)', charts: ['D20', 'S19'] },\r\n        { song: 'Karyawisata', charts: ['S20', 'D16'] },\r\n        { song: 'Awakening', charts: ['S19', 'D20'] },\r\n        { song: 'Moonlight', charts: ['S19', 'D21'] },\r\n      ],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.some(\r\n        songToPlay => chart.song === songToPlay.song && songToPlay.charts.includes(chart.chartLabel)\r\n      )\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  'Коричневая S': {\r\n    icon: GiPodiumSecond,\r\n    description: 'Получить S, но 5+ бэдов',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.miss === 0 && result.bad >= 5 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Мы выживали как могли': {\r\n    icon: GiLifeBar,\r\n    description: 'Получить B или ниже, но удержать лайфбар',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress:\r\n          state.progress === 100 ? 100 : ['B+', 'C+', 'D+'].includes(result.grade) ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Падовый мисс': {\r\n    icon: GiWoodenPegleg,\r\n    description: 'Когда от SSS тебя удерживают только миссы из-за плохого моддинга падов',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress:\r\n          state.progress === 100\r\n            ? 100\r\n            : result.miss > 0 && result.bad === 0 && result.good === 0 && result.great === 0\r\n            ? 100\r\n            : 0,\r\n      };\r\n    },\r\n  },\r\n};\r\n\r\nexport const initialAchievementState = {\r\n  progress: 0,\r\n};\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport moment from 'moment';\r\n\r\nimport { parseDate } from 'utils/date';\r\nimport { getScoreWithoutBonus } from 'utils/score';\r\nimport { getExp } from 'utils/exp';\r\nimport { achievements, initialAchievementState } from 'utils/achievements';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\n\r\nconst timeStyle = {\r\n  flavour: 'long',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nexport const tooltipFormatter = (result) => {\r\n  if (!result.isExactDate) {\r\n    const resultType =\r\n      result.isMyBest === undefined && result.isMachineBest === undefined\r\n        ? 'с my best или machine best'\r\n        : result.isMyBest\r\n        ? 'с my best'\r\n        : result.isMachineBest\r\n        ? 'с machine best'\r\n        : 'хз откуда';\r\n    return (\r\n      <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n        <div>точная дата взятия неизвестна</div>\r\n        <div>скор был записан {resultType}</div>\r\n        <div>дата записи: {result.dateObject.toLocaleDateString()}</div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return result.dateObject.toLocaleDateString();\r\n  }\r\n};\r\n\r\nexport const getTimeAgo = (date) => {\r\n  const dayDiff = moment().startOf('day').diff(moment(date).startOf('day'), 'days');\r\n  const hour = moment(date).hour();\r\n  if (moment().hour() < 5) {\r\n    return dayDiff <= 1 ? 'сегодня' : timeAgo.format(date, timeStyle);\r\n  }\r\n  return dayDiff === 0\r\n    ? hour < 5\r\n      ? 'вчера ночью'\r\n      : 'сегодня'\r\n    : dayDiff === 1\r\n    ? 'вчера'\r\n    : timeAgo.format(date, timeStyle);\r\n};\r\n\r\nexport const labelToTypeLevel = (label) => {\r\n  const [type, level] = label ? label.match(/(\\D+)|(\\d+)/g) : [];\r\n  return [type, level];\r\n};\r\n\r\nexport const gradeComparator = {\r\n  '?': 0,\r\n  F: 1,\r\n  D: 2,\r\n  'D+': 3,\r\n  C: 4,\r\n  'C+': 5,\r\n  B: 6,\r\n  'B+': 7,\r\n  A: 8,\r\n  'A+': 9,\r\n  S: 10,\r\n  SS: 11,\r\n  SSS: 12,\r\n};\r\n\r\nconst tryFixIncompleteResult = (result, maxTotalSteps) => {\r\n  if (!maxTotalSteps) {\r\n    return;\r\n  }\r\n  const infos = [result.perfect, result.great, result.good, result.bad, result.miss];\r\n  let fixableIndex = -1,\r\n    absentNumbersCount = 0,\r\n    localStepSum = 0;\r\n  for (let i = 0; i < 5; ++i) {\r\n    if (!_.isNumber(infos[i])) {\r\n      fixableIndex = i;\r\n      absentNumbersCount++;\r\n    } else {\r\n      localStepSum += infos[i];\r\n    }\r\n  }\r\n  if (absentNumbersCount === 1) {\r\n    result[['perfect', 'great', 'good', 'bad', 'miss'][fixableIndex]] =\r\n      maxTotalSteps - localStepSum;\r\n  }\r\n};\r\n\r\nconst guessGrade = (result) => {\r\n  if (result.misses === 0 && result.bads === 0 && result.goods === 0) {\r\n    if (result.greats === 0) {\r\n      return 'SSS';\r\n    } else {\r\n      return 'SS';\r\n    }\r\n  }\r\n  return result.grade;\r\n};\r\n\r\nexport const mapResult = (res, players, chart, chartId) => {\r\n  const grade = res.grade !== '?' ? res.grade : guessGrade(res);\r\n\r\n  if (typeof res.recognition_notes === 'undefined') {\r\n    // Short result, minimum info, only for ELO calculation\r\n    // Will be replaced with better result later\r\n    return {\r\n      id: res.id,\r\n      isUnknownPlayer: players[res.player].arcade_name === 'PUMPITUP',\r\n      isIntermediateResult: true,\r\n      sharedChartId: res.shared_chart || chartId,\r\n      playerId: res.player,\r\n      nickname: players[res.player].nickname,\r\n      nicknameArcade: players[res.player].arcade_name,\r\n      date: res.gained,\r\n      dateObject: parseDate(res.gained),\r\n      grade,\r\n      isExactDate: !!res.exact_gain_date,\r\n      score: res.score,\r\n      scoreRaw: getScoreWithoutBonus(res.score, grade),\r\n      isRank: !!res.rank_mode,\r\n    };\r\n  }\r\n  // Full best result\r\n  let _r = {\r\n    isUnknownPlayer: players[res.player].arcade_name === 'PUMPITUP',\r\n    isIntermediateResult: false,\r\n    sharedChartId: res.shared_chart || chartId,\r\n    id: res.id,\r\n    playerId: res.player,\r\n    nickname: players[res.player].nickname,\r\n    nicknameArcade: players[res.player].arcade_name,\r\n    originalChartMix: res.original_mix,\r\n    originalChartLabel: res.original_label,\r\n    originalScore: res.original_score,\r\n    date: res.gained,\r\n    dateObject: parseDate(res.gained),\r\n    grade,\r\n    isExactDate: !!res.exact_gain_date,\r\n    score: res.score,\r\n    scoreRaw: getScoreWithoutBonus(res.score, grade),\r\n    scoreIncrease: res.score_increase,\r\n    calories: res.calories && res.calories / 1000,\r\n    perfect: res.perfects,\r\n    great: res.greats,\r\n    good: res.goods,\r\n    bad: res.bads,\r\n    miss: res.misses,\r\n    combo: res.max_combo,\r\n    mods: res.mods_list,\r\n    isRank: !!res.rank_mode,\r\n    isHJ: (res.mods_list || '').split(' ').includes('HJ'),\r\n    isMachineBest: res.recognition_notes === 'machine_best',\r\n    isMyBest: res.recognition_notes === 'personal_best',\r\n  };\r\n\r\n  tryFixIncompleteResult(_r, chart.maxTotalSteps);\r\n\r\n  const perfects = Math.sqrt(_r.perfect) * 10;\r\n  const acc = perfects\r\n    ? Math.floor(\r\n        ((perfects * 100 + _r.great * 85 + _r.good * 60 + _r.bad * 20 + _r.miss * -25) /\r\n          (perfects + _r.great + _r.good + _r.bad + _r.miss)) *\r\n          100\r\n      ) / 100\r\n    : null;\r\n  const accRaw = _r.perfect\r\n    ? Math.floor(\r\n        ((_r.perfect * 100 + _r.great * 85 + _r.good * 60 + _r.bad * 20 + _r.miss * -25) /\r\n          (_r.perfect + _r.great + _r.good + _r.bad + _r.miss)) *\r\n          100\r\n      ) / 100\r\n    : null;\r\n\r\n  _r.accuracy = acc < 0 ? 0 : accRaw === 100 ? 100 : acc && +acc.toFixed(2);\r\n  _r.accuracyRaw = _.toNumber(_r.accuracy);\r\n  return _r;\r\n};\r\n\r\nexport const initializeProfile = (result, profiles, players) => {\r\n  const id = result.playerId;\r\n  const resultsByLevel = _.fromPairs(Array.from({ length: 28 }).map((x, i) => [i + 1, []]));\r\n\r\n  profiles[id] = {\r\n    name: players[id].nickname,\r\n    nameArcade: players[id].arcade_name,\r\n    resultsByGrade: {},\r\n    resultsByLevel,\r\n    firstResultDate: result.dateObject,\r\n    lastResultDate: result.dateObject,\r\n    count: 0,\r\n    battleCount: 0,\r\n    countAcc: 0,\r\n    grades: { F: 0, D: 0, C: 0, B: 0, A: 0, S: 0, SS: 0, SSS: 0 },\r\n    sumAccuracy: 0,\r\n    rankingHistory: [],\r\n    ratingHistory: [],\r\n    lastPlace: null,\r\n    lastBattleDate: 0,\r\n    region: players[id].region,\r\n  };\r\n  profiles[id].achievements = _.flow(\r\n    _.keys,\r\n    _.map((achName) => [\r\n      achName,\r\n      { ...(achievements[achName].initialState || initialAchievementState) },\r\n    ]),\r\n    _.fromPairs\r\n  )(achievements);\r\n  profiles[id].exp = 0;\r\n};\r\n\r\nexport const getProfileInfoFromResult = (result, chart, profiles) => {\r\n  const profile = profiles[result.playerId];\r\n\r\n  profile.count++;\r\n  if (result.accuracy) {\r\n    profile.countAcc++;\r\n    profile.sumAccuracy += result.accuracy;\r\n  }\r\n  profile.grades[result.grade.replace('+', '')]++;\r\n  if (chart.chartType !== 'COOP' && result.isBestGradeOnChart) {\r\n    profile.resultsByGrade[result.grade] = [\r\n      ...(profile.resultsByGrade[result.grade] || []),\r\n      { result, chart },\r\n    ];\r\n    profile.resultsByLevel[chart.chartLevel] = [\r\n      ...(profile.resultsByLevel[chart.chartLevel] || []),\r\n      { result, chart },\r\n    ];\r\n  }\r\n  if (result.isExactDate && profile.lastResultDate < result.dateObject) {\r\n    profile.lastResultDate = result.dateObject;\r\n  }\r\n  if (result.isExactDate && profile.firstResultDate > result.dateObject) {\r\n    profile.firstResultDate = result.dateObject;\r\n  }\r\n  profile.achievements = _.mapValues.convert({ cap: false })((achState, achName) => {\r\n    return achievements[achName].resultFunction(result, chart, achState, profile);\r\n  }, profile.achievements);\r\n  profile.exp += getExp(result, chart);\r\n};\r\n\r\nexport const getMaxRawScore = (score) => {\r\n  return ((score.scoreRaw / score.accuracy) * 100) / (score.isRank ? 1.2 : 1);\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaPlay } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\n// styles\r\nimport './songs-top.scss';\r\n\r\n// components\r\nimport Loader from 'components/Shared/Loader';\r\n\r\n// constants\r\n\r\n// reducers\r\nimport { fetchMostPlayed } from 'reducers/trackStats/mostPlayed';\r\nimport { fetchMostPlayedMonth } from 'reducers/trackStats/mostPlayedMonth';\r\nimport { fetchLeastPlayed } from 'reducers/trackStats/leastPlayed';\r\n\r\n// utils\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { parseDate } from 'utils/date';\r\n\r\n// code\r\nfunction TopList({ fetchList, title, renderRightSide }) {\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const getRightSide =\r\n    renderRightSide ||\r\n    (item => (\r\n      <div className=\"playcount\">\r\n        <FaPlay />\r\n        <span>{item.countplay}</span>\r\n      </div>\r\n    ));\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchList()\r\n      .then(data => {\r\n        data.success && setData(data.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [fetchList]);\r\n\r\n  return (\r\n    <div className=\"top-songs-list\">\r\n      <div className=\"top-songs-header\">\r\n        <span>{title}</span>\r\n      </div>\r\n      {isLoading && <Loader />}\r\n      {!isLoading &&\r\n        data.map((item, index) => {\r\n          return (\r\n            <div key={item.id} className=\"top-songs-item\">\r\n              <div className={classNames('place', `top-${index + 1}`, { best: index < 3 })}>\r\n                <span>{index + 1}.</span>\r\n              </div>\r\n              <div className=\"song-name\">{item.full_name}</div>\r\n              {getRightSide(item)}\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst leastPlayedRightSide = item => (\r\n  <div className=\"date\">\r\n    <span>{item.last_play ? getTimeAgo(parseDate(item.last_play)) : 'никогда'}</span>\r\n  </div>\r\n);\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    fetchMostPlayed,\r\n    fetchMostPlayedMonth,\r\n    fetchLeastPlayed,\r\n  }\r\n)(function SongsTop({ fetchMostPlayed, fetchMostPlayedMonth, fetchLeastPlayed }) {\r\n  return (\r\n    <div className=\"songs-top-page\">\r\n      <TopList fetchList={fetchMostPlayed} title=\"топ популярных треков\" />\r\n      <TopList fetchList={fetchMostPlayedMonth} title=\"топ популярных треков за месяц\" />\r\n      <TopList\r\n        fetchList={fetchLeastPlayed}\r\n        title=\"треки, которые долго не играли\"\r\n        renderRightSide={leastPlayedRightSide}\r\n      />\r\n      <div className=\"top-songs-list -placeholder\" />\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './toggle-button.scss';\r\n\r\nexport default class ToggleButton extends React.PureComponent {\r\n  static propTypes = {\r\n    text: toBe.string,\r\n    onToggle: toBe.func,\r\n    active: toBe.bool,\r\n  };\r\n\r\n  render() {\r\n    const { active, onToggle, text } = this.props;\r\n    return (\r\n      <div\r\n        className={classNames('toggle-button', { active: active })}\r\n        onClick={() => onToggle(!active)}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable react/no-deprecated */\r\n// imports from vendor deps\r\nimport React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\n\r\n// imports from styles\r\nexport default class Input extends React.Component {\r\n  static propTypes = {\r\n    value: toBe.any,\r\n    defaultValue: toBe.any,\r\n    onChange: toBe.func,\r\n    onBlur: toBe.func,\r\n    type: toBe.string,\r\n    className: toBe.string,\r\n    trimOnBlur: toBe.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    value: null,\r\n    type: 'text',\r\n    onChange: _.noop,\r\n    onBlur: _.noop,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: (!_.isNil(props.value) ? props.value : props.defaultValue) || '',\r\n    };\r\n    _.bindAll(['handleChange', 'handleBlur', 'handleKeyPress'], this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.value !== this.props.value) {\r\n      this.setState({ value: this.props.value });\r\n    }\r\n  }\r\n\r\n  handleChange(e) {\r\n    const newValue = e.target.value;\r\n    this.setState({ value: newValue }, () => this.props.onChange(newValue));\r\n  }\r\n\r\n  handleBlur(e) {\r\n    const { type } = this.props;\r\n    const { value } = this.state;\r\n    if (type === 'number') {\r\n      const numericValue = Number(value);\r\n      if (numericValue >= Number(e.target.min) && numericValue <= Number(e.target.max)) {\r\n        this.props.onBlur(numericValue, e);\r\n      } else {\r\n        this.setState({ value: this.props.value });\r\n        this.props.onBlur(this.props.value, e);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleKeyPress(e) {\r\n    if (e.key === 'Enter') {\r\n      this.handleBlur(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props;\r\n\r\n    // HACK: This component uses onInput instead of onChange\r\n    // because IE11 fails to call onChange events when you paste/cut using context menu (RMB)\r\n    // We're using onInput because it works fine, and because for text input\r\n    // there's no difference between how onChange and onInput work\r\n    return (\r\n      <input\r\n        {..._.omit(['defaultValue', 'onChange'], this.props)}\r\n        className={classNames(className, 'text-input')}\r\n        value={this.state.value}\r\n        onBlur={this.handleBlur}\r\n        onKeyPress={this.handleKeyPress}\r\n        onInput={this.handleChange}\r\n        onChange={_.noop} // Handled by onInput\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './toggle.scss';\r\n\r\n// imports from styles\r\nexport default class Toggle extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.id = _.uniqueId();\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.props.onChange(e.target.checked);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"toggle-checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle-checkbox-cb\"\r\n          id={this.id}\r\n          onChange={this.onChange}\r\n          checked={this.props.checked}\r\n        />\r\n        <label htmlFor={this.id} className=\"toggle\">\r\n          <span></span>\r\n        </label>\r\n        {this.props.children && (\r\n          <label htmlFor={this.id} className=\"text-label\">\r\n            {this.props.children}\r\n          </label>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\nimport './styles.scss';\r\n\r\nexport default class CollapsibleBar extends PureComponent {\r\n  static propTypes = {\r\n    className: toBe.string,\r\n    children: toBe.any,\r\n    title: toBe.any,\r\n    defaultOpen: toBe.bool,\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = { open: props.defaultOpen || false };\r\n  }\r\n\r\n  render() {\r\n    const { children, title, className } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classNames('collapsible-bar', className, { open })}>\r\n        <div className=\"header\" onClick={() => this.setState(state => ({ open: !state.open }))}>\r\n          <div className=\"collapse-button\">\r\n            <FaChevronRight />\r\n          </div>\r\n          <div className=\"title\">{title}</div>\r\n        </div>\r\n        {children && <div className=\"collapsible-children\">{children}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport toBe from 'prop-types';\r\nimport { Popper } from 'react-popper';\r\nimport classNames from 'classnames';\r\nimport listensToClickOutside from 'react-onclickoutside';\r\n\r\nimport './overlay.scss';\r\n\r\nconst POPPER_MODIFIERS = {\r\n  preventOverflow: {\r\n    enabled: true,\r\n    padding: 10,\r\n    boundariesElement: 'viewport',\r\n  },\r\n};\r\n\r\nconst PLACEMENT_ARROW_MAPPING = {\r\n  right: 'left',\r\n  left: 'right',\r\n  top: 'bottom',\r\n  bottom: 'top',\r\n};\r\n\r\nconst getArrowPlacement = placement => {\r\n  return placement && PLACEMENT_ARROW_MAPPING[placement.split('-')[0]];\r\n};\r\n\r\nclass Overlay extends React.PureComponent {\r\n  static propTypes = {\r\n    placement: toBe.string,\r\n    overlayItem: toBe.any,\r\n    hideWhenOutOfBounds: toBe.bool,\r\n  };\r\n\r\n  static defaultTypes = {\r\n    placement: 'bottom',\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isVisible: false,\r\n    };\r\n    this.containerItemRef = React.createRef();\r\n    this.renderPopper = this.renderPopper.bind(this);\r\n    this.toggleOverlayVisibility = this.toggleOverlayVisibility.bind(this);\r\n  }\r\n\r\n  hideOverlay() {\r\n    this.setState({\r\n      isVisible: false,\r\n    });\r\n  }\r\n\r\n  toggleOverlayVisibility() {\r\n    this.setState({\r\n      isVisible: !this.state.isVisible,\r\n    });\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    const preventHiding = event && event.target.closest('.inner-popper-overlay'); // prevent overlays from hiding when a modal is opened within overlay\r\n\r\n    if (!preventHiding) {\r\n      this.hideOverlay();\r\n    }\r\n  }\r\n\r\n  renderPopper({ ref, style, placement, arrowProps, scheduleUpdate, outOfBoundaries }) {\r\n    const { children, hideWhenOutOfBounds } = this.props;\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        data-placement={placement}\r\n        className={classNames(\r\n          'inner-popper-overlay',\r\n          `arrow-${getArrowPlacement(placement)}`,\r\n          this.props.overlayClassName,\r\n          { 'out-of-bounds': outOfBoundaries && hideWhenOutOfBounds }\r\n        )}\r\n      >\r\n        <div className=\"arrow-hider\">\r\n          <div className=\"arrow\" ref={arrowProps.ref} style={arrowProps.style} />\r\n        </div>\r\n        <div\r\n          className=\"inner-popper-content\"\r\n          // ref={ref => this.setupPopperContentRef(scheduleUpdate, ref)}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { placement, overlayItem } = this.props;\r\n    const { isVisible } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"overlay-item\"\r\n          ref={this.containerItemRef}\r\n          onClick={this.toggleOverlayVisibility}\r\n        >\r\n          {overlayItem}\r\n        </div>\r\n        {isVisible &&\r\n          ReactDOM.createPortal(\r\n            <Popper\r\n              container={document.body}\r\n              modifiers={POPPER_MODIFIERS}\r\n              placement={placement}\r\n              referenceElement={this.containerItemRef.current}\r\n            >\r\n              {this.renderPopper}\r\n            </Popper>,\r\n            document.body\r\n          )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default listensToClickOutside(Overlay);\r\n","import React from 'react';\r\nimport { Range as ReactRange, getTrackBackground } from 'react-range';\r\n\r\nexport default function Range({ range, min, max, onChange }) {\r\n  return (\r\n    <ReactRange\r\n      values={range}\r\n      step={1}\r\n      min={min}\r\n      max={max}\r\n      onChange={onChange}\r\n      renderTrack={({ props, children }) => (\r\n        <div\r\n          onMouseDown={props.onMouseDown}\r\n          onTouchStart={props.onTouchStart}\r\n          style={{\r\n            ...props.style,\r\n            position: 'relative',\r\n            height: '10px',\r\n            display: 'flex',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <div\r\n            ref={props.ref}\r\n            style={{\r\n              height: '6px',\r\n              width: '100%',\r\n              borderRadius: '3px',\r\n              background: getTrackBackground({\r\n                values: range,\r\n                colors: ['#ccc', '#88d3ff', '#ccc'],\r\n                min,\r\n                max,\r\n              }),\r\n              alignSelf: 'center',\r\n            }}\r\n          >\r\n            {children}\r\n          </div>\r\n        </div>\r\n      )}\r\n      renderThumb={({ props, isDragged }) => (\r\n        <div\r\n          {...props}\r\n          style={{\r\n            ...props.style,\r\n            height: '12px',\r\n            width: '12px',\r\n            borderRadius: '6px',\r\n            backgroundColor: '#FFF',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            boxShadow: '0px 2px 3px #AAA',\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              height: '6px',\r\n              width: '6px',\r\n              borderRadius: '3px',\r\n              backgroundColor: isDragged ? '#88d3ff' : '#CCC',\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\nimport { FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Range from 'components/Shared/Range';\r\n\r\nimport { CHART_MIN_MAX, DURATION_DEFAULT, DURATION } from 'constants/leaderboard';\r\n\r\nexport default function ChartFilter({ filterValue, onChange: onChangeEx }) {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filterValue);\r\n  const type = _.getOr(null, 'type', filterValue);\r\n  const duration = _.getOr(DURATION_DEFAULT, 'duration', filterValue);\r\n\r\n  let buttonText = 'фильтр чартов';\r\n  if (filterValue) {\r\n    const t = type || '';\r\n    buttonText = range[0] === range[1] ? `${t}${range[0]}` : `${t}${range[0]} - ${t}${range[1]}`;\r\n    buttonText = 'чарты: ' + buttonText;\r\n    if (!_.isEqual(duration, DURATION_DEFAULT)) {\r\n      buttonText += ' ***';\r\n      // buttonText += ` (${_.values(DURATION)\r\n      //   .filter(dur => duration.includes(dur))\r\n      //   .map(s => s.slice(0, 2))\r\n      //   .join('-')})`;\r\n    }\r\n  }\r\n\r\n  const onChange = value => {\r\n    onChangeEx({\r\n      range,\r\n      type,\r\n      ...value,\r\n      duration: _.isEmpty(value.duration) ? duration : value.duration,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Overlay\r\n        overlayClassName=\"chart-range-overlay-outer\"\r\n        overlayItem={\r\n          <button className=\"filter-charts-button btn btn-sm btn-dark\">{buttonText}</button>\r\n        }\r\n      >\r\n        <div className=\"chart-range-overlay\">\r\n          <div className=\"buttons\">\r\n            <ToggleButton\r\n              text=\"Single\"\r\n              active={type === 'S'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  type: active ? 'S' : null,\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Double\"\r\n              active={type === 'D'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  type: active ? 'D' : null,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <Range\r\n            range={range}\r\n            min={CHART_MIN_MAX[0]}\r\n            max={CHART_MIN_MAX[1]}\r\n            onChange={r => onChange({ range: r })}\r\n          />\r\n          <div className=\"inputs\">\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  range: [Math.max(range[0] - 1, CHART_MIN_MAX[0]), range[1]],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={CHART_MIN_MAX[0]}\r\n              max={Math.min(CHART_MIN_MAX[1], range[1])}\r\n              value={range[0]}\r\n              onBlur={value => {\r\n                onChange({ range: [value, range[1]] });\r\n              }}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMin = Math.min(range[0] + 1, CHART_MIN_MAX[1]);\r\n                onChange({\r\n                  range: [newMin, range[1] < newMin ? newMin : range[1]],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMax = Math.max(range[1] - 1, CHART_MIN_MAX[0]);\r\n                onChange({\r\n                  range: [range[0] > newMax ? newMax : range[0], newMax],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={Math.max(CHART_MIN_MAX[0], range[0])}\r\n              max={CHART_MIN_MAX[1]}\r\n              value={range[1]}\r\n              onBlur={value => onChange({ range: [range[0], value] })}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  range: [range[0], Math.min(range[1] + 1, CHART_MIN_MAX[1])],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n          </div>\r\n          <div className=\"buttons-duration\">\r\n            <ToggleButton\r\n              text=\"Standard\"\r\n              active={duration.includes(DURATION.STD)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.STD]\r\n                    : _.without([DURATION.STD], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Short\"\r\n              active={duration.includes(DURATION.SHORT)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.SHORT]\r\n                    : _.without([DURATION.SHORT], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Remix\"\r\n              active={duration.includes(DURATION.REMIX)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.REMIX]\r\n                    : _.without([DURATION.REMIX], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Full\"\r\n              active={duration.includes(DURATION.FULL)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.FULL]\r\n                    : _.without([DURATION.FULL], duration),\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Overlay>\r\n    </div>\r\n  );\r\n}\r\n","import _ from 'lodash/fp';\r\nimport regression from 'regression';\r\n\r\nimport { ranks as expRanks } from 'utils/expRanks';\r\n\r\nconst processBattles = ({ battles, profiles, debug, resultInfo: dictScoreInfo }) => {\r\n  let logText = '';\r\n  const dictChartElo = {};\r\n  const getDictChartEloId = (score, enemyScore) =>\r\n    `${score.playerId}vs${enemyScore.playerId}-${score.sharedChartId}-${score.isRank}`;\r\n  const dictRatingDiff = {};\r\n  const getDictRatingDiffId = (score) => `${score.playerId}-${score.sharedChartId}-${score.isRank}`;\r\n  // const dictScoreInfo = {};\r\n  battles.forEach(([score, enemyScore, song]) => {\r\n    // For each battle\r\n    const p1 = profiles[score.playerId];\r\n    const p2 = profiles[enemyScore.playerId];\r\n\r\n    const scoreMultiplier = score.isRank ? 1.2 : 1;\r\n    let maxScore = null;\r\n    if (song.maxScore) {\r\n      maxScore = song.maxScore * scoreMultiplier;\r\n      if (\r\n        Math.max(maxScore, score.score, enemyScore.score) !== maxScore &&\r\n        !score.isRank &&\r\n        (!score.isExactDate || !enemyScore.isExactDate)\r\n      ) {\r\n        maxScore *= 1.2;\r\n        // Rank from machine best wasn't recognized most likely.\r\n        // Increasing max score by 20% is fine\r\n      }\r\n      if (Math.max(maxScore, score.score, enemyScore.score) !== maxScore) {\r\n        // If calculated max score isn't max score anyway, use current scores as max + cherry on top\r\n        maxScore = Math.max(maxScore, score.score, enemyScore.score) + 10000;\r\n      }\r\n    }\r\n\r\n    // Data to be appended to every score outside of this thread\r\n    if (!dictScoreInfo[score.id]) dictScoreInfo[score.id] = {};\r\n    if (!dictScoreInfo[enemyScore.id]) dictScoreInfo[enemyScore.id] = {};\r\n    const scoreInfo = dictScoreInfo[score.id];\r\n    const enemyScoreInfo = dictScoreInfo[enemyScore.id];\r\n\r\n    // Rating at the start of battle for this score\r\n    if (!scoreInfo.startingRating) scoreInfo.startingRating = p1.rating;\r\n    if (!enemyScoreInfo.startingRating) enemyScoreInfo.startingRating = p2.rating;\r\n\r\n    // Counting the number of battles\r\n    p1.battleCount++;\r\n    p2.battleCount++;\r\n\r\n    // This is one match between two players\r\n    //// Elo formula\r\n    // const r1 = score.startingRating;\r\n    // const r2 = enemyScore.startingRating;\r\n    const r1 = p1.rating;\r\n    const r2 = p2.rating;\r\n    const R1 = 10 ** (r1 / 400);\r\n    const R2 = 10 ** (r2 / 400);\r\n    const E1 = R1 / (R1 + R2);\r\n    const E2 = R2 / (R1 + R2);\r\n    let A = score.score;\r\n    let B = enemyScore.score;\r\n    let S1, S2;\r\n    if (A === B) {\r\n      S1 = S2 = 0.5;\r\n    } else if (maxScore && A !== 0 && B !== 0) {\r\n      A = maxScore / A - 1;\r\n      B = maxScore / B - 1;\r\n      S1 = (B / (A + B) - 0.5) * 5 + 0.5;\r\n      S2 = (A / (A + B) - 0.5) * 5 + 0.5;\r\n    } else {\r\n      S1 = A > B ? 1 : B < A ? 0 : 0.5;\r\n      S2 = 1 - S1;\r\n    }\r\n    S1 = Math.max(0, Math.min(1, S1)); // Set strict boundaries to [0, 1]\r\n    S2 = Math.max(0, Math.min(1, S2));\r\n\r\n    const kRating1 = Math.max(0, Math.min(1, (r1 - 700) / 800));\r\n    const kRating2 = Math.max(0, Math.min(1, (r2 - 700) / 800));\r\n    const maxK1 = 20 + 20 * kRating1;\r\n    const maxK2 = 20 + 20 * kRating2;\r\n    const chartLevel = Number(song.interpolatedDifficulty || song.chartLevel);\r\n    const kLevel1 = Math.max(\r\n      1,\r\n      Math.min(maxK1, (chartLevel / 25) ** ((kRating1 - 0.5) * 5 + 2.5) * maxK1)\r\n    );\r\n    const kLevel2 = Math.max(\r\n      1,\r\n      Math.min(maxK2, (chartLevel / 25) ** ((kRating2 - 0.5) * 5 + 2.5) * maxK2)\r\n    );\r\n    const kLevel = Math.min(kLevel1, kLevel2);\r\n\r\n    // When YOU vs ENEMY both have SS/SSS, and both scores are very close to SSS, this battle will NOT affect ELO too much\r\n    let kMinimizer = 1;\r\n    const kDropCutoff = 0.98; // Score is 98% of max score or higher -- K will be lower\r\n    if (\r\n      song.maxScore &&\r\n      (score.grade.startsWith('SS') || (score.miss === 0 && score.bad === 0)) &&\r\n      (enemyScore.grade.startsWith('SS') || (enemyScore.miss === 0 && enemyScore.bad === 0)) &&\r\n      score.score / maxScore > kDropCutoff &&\r\n      enemyScore.score / maxScore > kDropCutoff\r\n    ) {\r\n      kMinimizer =\r\n        Math.max(\r\n          Math.min(\r\n            1,\r\n            Math.max(\r\n              100 - (100 * score.score) / maxScore,\r\n              100 - (100 * enemyScore.score) / maxScore\r\n            ) /\r\n              (100 - kDropCutoff * 100)\r\n          ),\r\n          0\r\n        ) ** 2;\r\n    }\r\n\r\n    const K1 = kLevel * kMinimizer;\r\n    const K2 = kLevel * kMinimizer;\r\n    let dr1 = K1 * (S1 - E1);\r\n    let dr2 = K2 * (S2 - E2);\r\n    // Do not decrease rating if you have SSS - RIP zero-sum algorithm\r\n    dr1 = dr1 < 0 && score.grade === 'SSS' ? 0 : dr1;\r\n    dr2 = dr2 < 0 && enemyScore.grade === 'SSS' ? 0 : dr2;\r\n    // Recording this value for display\r\n    const baseEloId1 = getDictChartEloId(score, enemyScore);\r\n    const baseEloId2 = getDictChartEloId(enemyScore, score);\r\n    const baseEloP1 = dictChartElo[baseEloId1] || 0;\r\n    const baseEloP2 = dictChartElo[baseEloId2] || 0;\r\n    dictChartElo[baseEloId1] = dr1;\r\n    dictChartElo[baseEloId2] = dr2;\r\n\r\n    // Change rating as a result of this battle\r\n    p1.rating = p1.rating + dr1 - baseEloP1;\r\n    p2.rating = p2.rating + dr2 - baseEloP2;\r\n\r\n    const ratingDiffId1 = getDictRatingDiffId(score);\r\n    const ratingDiffId2 = getDictRatingDiffId(enemyScore);\r\n    dictRatingDiff[ratingDiffId1] = (dictRatingDiff[ratingDiffId1] || 0) + dr1 - baseEloP1;\r\n    dictRatingDiff[ratingDiffId2] = (dictRatingDiff[ratingDiffId2] || 0) + dr2 - baseEloP2;\r\n\r\n    // Q\r\n    scoreInfo.ratingDiff = dictRatingDiff[ratingDiffId1];\r\n    scoreInfo.ratingDiffLast = dr1 - baseEloP1;\r\n\r\n    enemyScoreInfo.ratingDiff = dictRatingDiff[ratingDiffId2];\r\n    enemyScoreInfo.ratingDiffLast = dr2 - baseEloP2;\r\n\r\n    if (debug) {\r\n      // if (score.sharedChartId === 5292) {\r\n      // if (song.song === 'Club Night') {\r\n      // if (score.nickname === 'Liza' || enemyScore.nickname === 'Liza') {\r\n      // if (!song.maxScore) {\r\n      logText += `${song.chartLabel} - ${song.song} (${song.sharedChartId}) - ${\r\n        profiles[score.playerId].name\r\n      } / ${profiles[enemyScore.playerId].name}\r\n- ${score.score} / ${enemyScore.score} (${Math.floor(maxScore)} (${Math.floor(\r\n        song.maxScore * scoreMultiplier\r\n      )})) - R ${S1.toFixed(2)}/${S2.toFixed(2)} E ${E1.toFixed(2)} / ${E2.toFixed(2)}\r\n- Rating ${r1.toFixed(2)} / ${r2.toFixed(2)} - ${dr1.toFixed(2)} / ${dr2.toFixed(\r\n        2\r\n      )} - K ${K1.toFixed(2)} ${K2.toFixed(2)}${\r\n        kMinimizer === 1 ? '' : ` (coef ${kMinimizer.toFixed(2)})`\r\n      }\r\n- Base elo: ${baseEloP1.toFixed(2)} / ${baseEloP2.toFixed(2)}\r\n- Elo change: ${(dr1 - baseEloP1).toFixed(2)} / ${(dr2 - baseEloP2).toFixed(2)}\r\n- New base elo: ${dictChartElo[baseEloId1].toFixed(2)} / ${dictChartElo[baseEloId2].toFixed(2)}\r\n- RD: ${dictRatingDiff[ratingDiffId1].toFixed(2)} / ${dictRatingDiff[ratingDiffId2].toFixed(2)}\\n`;\r\n    }\r\n    // Rating floor\r\n    p1.rating = Math.max(100, p1.rating);\r\n    p2.rating = Math.max(100, p2.rating);\r\n\r\n    const playersSorted = _.flow(\r\n      _.keys,\r\n      _.map((id) => ({ id, rating: profiles[id].rating })),\r\n      _.orderBy(['rating'], ['desc'])\r\n    )(profiles);\r\n    const battleDate =\r\n      score.dateObject > enemyScore.dateObject ? score.dateObject : enemyScore.dateObject;\r\n    playersSorted.forEach((player, index) => {\r\n      const lastPlace = profiles[player.id].lastPlace;\r\n      if (lastPlace !== index + 1) {\r\n        profiles[player.id].rankingHistory.push({\r\n          place: index + 1,\r\n          date: battleDate.getTime(),\r\n        });\r\n        profiles[player.id].lastPlace = index + 1;\r\n      }\r\n    });\r\n\r\n    const p1LastRating = _.last(p1.ratingHistory);\r\n    const p2LastRating = _.last(p2.ratingHistory);\r\n    if (p1LastRating !== p1.rating) {\r\n      p1.ratingHistory.push({\r\n        rating: p1.rating,\r\n        date: battleDate.getTime(),\r\n      });\r\n    }\r\n    if (p2LastRating !== p2.rating) {\r\n      p2.ratingHistory.push({\r\n        rating: p2.rating,\r\n        date: battleDate.getTime(),\r\n      });\r\n    }\r\n  });\r\n\r\n  _.flow(\r\n    _.keys,\r\n    _.forEach((key) => {\r\n      profiles[key].id = _.toInteger(key);\r\n      profiles[key].accuracy =\r\n        profiles[key].countAcc > 0\r\n          ? Math.round((profiles[key].sumAccuracy / profiles[key].countAcc) * 100) / 100\r\n          : null;\r\n      profiles[key].ratingRaw = profiles[key].rating;\r\n      profiles[key].rating = Math.round(profiles[key].rating);\r\n      profiles[key].rankingHistory = [\r\n        ...profiles[key].rankingHistory,\r\n        { place: _.get('place', _.last(profiles[key].rankingHistory)), date: Date.now() },\r\n      ];\r\n    })\r\n  )(profiles);\r\n  return { logText };\r\n};\r\n\r\nconst postProcessProfiles = (profiles, tracklist) => {\r\n  const getBonusForLevel = (level) => (30 * (1 + 2 ** (level / 4))) / 11;\r\n  const getMinimumNumber = (totalCharts) =>\r\n    Math.round(\r\n      Math.min(totalCharts, 1 + totalCharts / 20 + Math.sqrt(Math.max(totalCharts - 1, 0)) * 0.7)\r\n    );\r\n\r\n  const newProfiles = _.mapValues((profile) => {\r\n    const neededGrades = ['A', 'A+', 'S', 'SS', 'SSS'];\r\n    profile.expRank = _.findLast((rank) => rank.threshold <= profile.exp, expRanks);\r\n    profile.expRankNext = _.find((rank) => rank.threshold > profile.exp, expRanks);\r\n    profile.progress = {\r\n      double: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n      single: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n    };\r\n    const gradeIncrementMap = {\r\n      SSS: ['SS', 'S', 'A+', 'A'],\r\n      SS: ['SS', 'S', 'A+', 'A'],\r\n      S: ['S', 'A+', 'A'],\r\n      'A+': ['A+', 'A'],\r\n      A: ['A'],\r\n    };\r\n    const incrementLevel = (l, g, chartType) => {\r\n      const prog =\r\n        chartType === 'S' || chartType === 'SP'\r\n          ? profile.progress.single\r\n          : chartType === 'D' || chartType === 'DP'\r\n          ? profile.progress.double\r\n          : null;\r\n      if (prog) {\r\n        prog[g][l] = prog[g][l] ? prog[g][l] + 1 : 1;\r\n      }\r\n    };\r\n\r\n    profile.accuracyPointsRaw = [];\r\n    _.keys(profile.resultsByLevel).forEach((level) => {\r\n      profile.resultsByLevel[level].forEach((res) => {\r\n        if (!res.result.isRank && res.result.accuracyRaw) {\r\n          profile.accuracyPointsRaw.push([\r\n            _.toNumber(level),\r\n            res.result.accuracyRaw,\r\n            res.result.sharedChartId,\r\n          ]);\r\n        }\r\n\r\n        const thisGrade = res.result.grade;\r\n        const thisPlayerId = res.result.playerId;\r\n        const otherResults = res.chart.results.filter((r) => r.playerId === thisPlayerId);\r\n        if (otherResults.length > 1) {\r\n          const sortedResults = otherResults.sort(\r\n            (a, b) => neededGrades.indexOf(b.grade) - neededGrades.indexOf(a.grade)\r\n          );\r\n          if (sortedResults[0].grade !== thisGrade) {\r\n            return; // Don't do anything when we have a different result with better grade\r\n          }\r\n        }\r\n        const gradeIncArray = gradeIncrementMap[thisGrade];\r\n        if (gradeIncArray) {\r\n          gradeIncArray.forEach((gradeInc) => {\r\n            incrementLevel(level, gradeInc, res.chart.chartType);\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    ['single', 'double'].forEach((chartType) => {\r\n      profile.progress[`${chartType}-bonus`] = 0;\r\n      _.keys(profile.progress[chartType]).forEach((grade) => {\r\n        profile.progress[chartType][`${grade}-bonus`] = 0;\r\n        _.keys(profile.progress[chartType][grade]).forEach((level) => {\r\n          const number = profile.progress[chartType][grade][level];\r\n          const totalCharts = tracklist.data[`${chartType}sLevels`][level];\r\n          const minimumNumber = getMinimumNumber(totalCharts);\r\n          const bonusCoefficientNumber = Math.min(1, number / minimumNumber);\r\n          const rawBonus = getBonusForLevel(level);\r\n          const bonus = rawBonus * bonusCoefficientNumber;\r\n          profile.progress[chartType][grade][`${level}-bonus`] = bonus;\r\n          profile.progress[chartType][grade][`${level}-bonus-coef`] = bonusCoefficientNumber;\r\n          profile.progress[chartType][grade][`${level}-min-number`] = minimumNumber;\r\n          profile.progress[chartType][grade][`${level}-achieved-number`] = number;\r\n          if (bonus >= profile.progress[chartType][`${grade}-bonus`]) {\r\n            profile.progress[chartType][`${grade}-bonus`] = bonus;\r\n            profile.progress[chartType][`${grade}-bonus-level`] = level;\r\n            profile.progress[chartType][`${grade}-bonus-level-coef`] = bonusCoefficientNumber;\r\n            profile.progress[chartType][`${grade}-bonus-level-min-number`] = minimumNumber;\r\n            profile.progress[chartType][`${grade}-bonus-level-achieved-number`] = number;\r\n          }\r\n        });\r\n        profile.progress[`${chartType}-bonus`] += profile.progress[chartType][`${grade}-bonus`];\r\n      });\r\n    });\r\n    profile.progress.bonus = profile.progress['double-bonus'] + profile.progress['single-bonus'];\r\n    profile.achievementBonus = profile.progress.bonus;\r\n    profile.accuracy =\r\n      profile.countAcc > 0\r\n        ? Math.round((profile.sumAccuracy / profile.countAcc) * 100) / 100\r\n        : null;\r\n    return profile;\r\n  }, profiles);\r\n  return newProfiles;\r\n};\r\n\r\nconst processPP = ({ profiles, sharedCharts }) => {\r\n  const resultInfo = {};\r\n  // const now = new Date();\r\n  for (const chartId in sharedCharts) {\r\n    const chart = sharedCharts[chartId];\r\n    const chartResults = chart.results;\r\n    const chartLevel = Number(chart.interpolatedDifficulty || chart.chartLevel);\r\n    const maxPP = chartLevel ** 2.2 / 7.6; // 7;\r\n    if (chart.maxScore) {\r\n      const maxScore = chart.maxScore;\r\n      for (const result of chartResults) {\r\n        if (!result.isRank && maxScore) {\r\n          const K1 = Math.max(0, Math.min(1, result.scoreRaw / maxScore - 0.3) / 0.7);\r\n          // Optional: decrease PP values for older scores. Testing showing this doesn't change anything really\r\n          // const millisecOld = now - result.dateObject;\r\n          // const maxDays = 365;\r\n          // const maxTimeDecrease = 0;\r\n          // const K2 =\r\n          //   1 -\r\n          //   maxTimeDecrease * Math.min(1, Math.max(0, millisecOld / 1000 / 60 / 60 / 24 / maxDays));\r\n          // const K = K1 * K2;\r\n\r\n          const K = K1;\r\n\r\n          // Final PP value\r\n          const pp = K * maxPP;\r\n          // Record result data\r\n          resultInfo[result.id] = {\r\n            pp: {\r\n              pp,\r\n              k: K,\r\n              maxScore,\r\n              maxPP,\r\n              ppPotential: maxPP - pp,\r\n              ppRatio: pp / maxPP,\r\n              ppFixed: Number(pp.toFixed(1)),\r\n            },\r\n          };\r\n          const profile = profiles[result.playerId];\r\n          if (profile) {\r\n            if (!profile.pp) {\r\n              profile.pp = { scores: [], pp: 0 };\r\n            }\r\n            profile.pp.scores.push({\r\n              pp_: Number(pp.toFixed(1)),\r\n              s: chart.song,\r\n              l: chart.chartLabel,\r\n              pp,\r\n              result,\r\n              chart,\r\n              K,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Calculate total pp\r\n  for (const playerId in profiles) {\r\n    const profile = profiles[playerId];\r\n    if (profile.pp) {\r\n      profile.pp.scores.sort((a, b) => b.pp - a.pp);\r\n      profile.pp.pp = 0;\r\n      profile.pp.scores.forEach((score, index) => {\r\n        profile.pp.pp += 0.95 ** index * score.pp;\r\n      });\r\n      profile.rating = profile.pp.pp;\r\n    } else {\r\n      profile.pp = {};\r\n      profile.rating = 0;\r\n    }\r\n  }\r\n\r\n  // Add first values for rankingHistory and ratingHistory\r\n  _.flow(\r\n    _.values,\r\n    _.orderBy((profile) => profile.rating, 'desc'),\r\n    (items) =>\r\n      items.forEach((profile, index) => {\r\n        profile.ratingHistory.push({\r\n          rating: profile.rating,\r\n          date: profile.firstResultDate.getTime(),\r\n        });\r\n        profile.rankingHistory.push({\r\n          place: index + 1,\r\n          date: profile.firstResultDate.getTime(),\r\n        });\r\n      })\r\n  )(profiles);\r\n\r\n  return resultInfo;\r\n};\r\n\r\nconst interpolateDifficulties = ({ sharedCharts, profiles, debug }) => {\r\n  let newSharedCharts = _.mapValues((chart) => {\r\n    const datas = chart.results\r\n      .map((r) => {\r\n        const profile = profiles[r.playerId];\r\n        if (!profile || !r.accuracy || r.isRank || _.size(profile.accuracyPointsRaw) < 50) {\r\n          return null;\r\n        }\r\n\r\n        if (!profile.accuracyPointsInterpolated) {\r\n          const maxAccuracy = _.maxBy(([x, y]) => y, profile.accuracyPointsRaw)[1];\r\n          const maxLevelWithMaxAcc = _.maxBy(\r\n            ([x, y]) => x,\r\n            _.filter(([x, y]) => y === maxAccuracy, profile.accuracyPointsRaw)\r\n          )[0];\r\n          const points = profile.accuracyPointsRaw\r\n            .filter(([x, y]) => x >= maxLevelWithMaxAcc - 1)\r\n            .map(([x, y]) => [30 - x, 101 - y]);\r\n          const result = regression.logarithmic(points);\r\n\r\n          const f = (x) => {\r\n            const calculated = 101 - result.predict(30 - x)[1];\r\n            return Math.max(0, Math.min(calculated, 100));\r\n          };\r\n          const yx = [];\r\n          for (let i = 1; i <= 28; i += 0.05) {\r\n            yx.push([i, f(i)]);\r\n          }\r\n\r\n          profile.accuracyPointsInterpolated = yx;\r\n        }\r\n\r\n        const interpolatedPoint = _.find(\r\n          (pair) => pair[1] < r.accuracyRaw,\r\n          profile.accuracyPointsInterpolated\r\n        );\r\n        const returnValue = {\r\n          interpolatedDifficulty: interpolatedPoint && interpolatedPoint[0],\r\n          weight:\r\n            r.accuracyRaw > 98\r\n              ? 1 - (r.accuracyRaw - 98) / (100 - 98)\r\n              : r.accuracyRaw < 80\r\n              ? Math.max(0, (r.accuracyRaw - 50) / (80 - 50))\r\n              : 1,\r\n        };\r\n        returnValue.weight *= Math.min(\r\n          1,\r\n          Math.max(0.1, (8 - Math.abs(returnValue.interpolatedDifficulty - chart.chartLevel)) / 8)\r\n        );\r\n        if (debug) {\r\n          r.interpolation = returnValue;\r\n        }\r\n        return returnValue;\r\n      })\r\n      .filter(_.identity);\r\n    const sums = datas.reduce(\r\n      (acc, item) => {\r\n        if (!item.interpolatedDifficulty) {\r\n          return acc;\r\n        }\r\n        return {\r\n          diffSum: acc.diffSum + item.interpolatedDifficulty * item.weight,\r\n          weightSum: acc.weightSum + item.weight,\r\n        };\r\n      },\r\n      { diffSum: 0, weightSum: 0 }\r\n    );\r\n    sums.diffSum += _.toNumber(chart.chartLevel) * 2;\r\n    sums.weightSum += 2;\r\n    const averageDifficulty = sums.diffSum / sums.weightSum;\r\n    // console.log(chart.song, chart.chartLabel, JSON.stringify(datas), averageDifficulty);\r\n\r\n    return {\r\n      ...chart,\r\n      interpolatedDifficulty: averageDifficulty,\r\n    };\r\n  }, sharedCharts);\r\n  return newSharedCharts;\r\n};\r\n\r\nexport const getProcessedProfiles = ({ profiles, sharedCharts, tracklist, battles, debug }) => {\r\n  // Calculate Progress achievements and bonus for starting Elo\r\n  profiles = postProcessProfiles(profiles, tracklist);\r\n\r\n  // Recalculate chart difficulty\r\n  sharedCharts = interpolateDifficulties({ debug, sharedCharts, profiles });\r\n\r\n  // Calculate PP\r\n  const resultInfo = processPP({\r\n    profiles,\r\n    sharedCharts,\r\n  });\r\n\r\n  // Calculate ELO\r\n  const { logText } = processBattles({\r\n    battles,\r\n    profiles,\r\n    resultInfo,\r\n    debug,\r\n  });\r\n\r\n  return { profiles, resultInfo, sharedCharts, logText };\r\n};\r\n","\r\nexport let DEBUG = localStorage && localStorage.getItem('debug');\r\n\r\nif (localStorage) {\r\n  window.debugOn = () => {\r\n    localStorage.setItem('debug', 1);\r\n    DEBUG = 1;\r\n  };\r\n  window.debugOff = () => {\r\n    localStorage.removeItem('debug');\r\n    DEBUG = 0;\r\n  };\r\n}\r\n\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\nimport queryString from 'query-string';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\nimport {\r\n  labelToTypeLevel,\r\n  gradeComparator,\r\n  mapResult,\r\n  initializeProfile,\r\n  getProfileInfoFromResult,\r\n  getMaxRawScore,\r\n} from 'utils/leaderboards';\r\n\r\nimport WorkerProfilesProcessing from 'workerize-loader!utils/workers/profilesPostProcess'; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport * as profilesProcessing from 'utils/workers/profilesPostProcess';\r\n\r\nimport { HOST } from 'constants/backend';\r\nimport { DEBUG } from 'constants/env';\r\nimport { RANK_FILTER } from 'constants/leaderboard';\r\n\r\nconst LOADING = `TOP/LOADING`;\r\nconst STOP_LOADING = `TOP/STOP_LOADING`;\r\nexport const SUCCESS = `TOP/SUCCESS`;\r\nconst ERROR = `TOP/ERROR`;\r\nconst SET_FILTER = `TOP/SET_FILTER`;\r\nconst RESET_FILTER = `TOP/RESET_FILTER`;\r\nconst RANKING_CHANGE_SET = `TOP/RANKING_CHANGE_SET`;\r\nexport const PROFILES_UPDATE = `TOP/PROFILES_UPDATE`;\r\n\r\nconst highscoresUrl = process.env.REACT_APP_SOCKET\r\n  ? 'results/highscores/trusted'\r\n  : 'results/highscores';\r\n\r\nexport const defaultFilter = {\r\n  rank: RANK_FILTER.SHOW_ALL,\r\n};\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  isLoadingRanking: false,\r\n  data: [],\r\n  filter: defaultFilter,\r\n  players: {},\r\n  profiles: {},\r\n  results: [],\r\n  resultInfo: {},\r\n  sharedCharts: {},\r\n};\r\n\r\nconst processData = (data, tracklist) => {\r\n  const { players, results, shared_charts } = data;\r\n\r\n  //// Initialization\r\n  // Init for TOP\r\n  const mappedResults = [];\r\n  const getTopResultId = (result) => `${result.sharedChartId}-${result.playerId}-${result.isRank}`;\r\n  const getBestGradeResultId = (result) => `${result.sharedChartId}-${result.playerId}`;\r\n  const topResults = {}; // Temp object\r\n  const bestGradeResults = {}; // Temp object\r\n  const top = {}; // Main top scores pbject\r\n\r\n  // Battles for ELO calculation\r\n  const battles = [];\r\n\r\n  // Profiles for every player\r\n  let profiles = {};\r\n\r\n  // Loop 1\r\n  for (let resRaw of results) {\r\n    if (!players[resRaw.player]) {\r\n      // Player of this result was not found in list of players. Ignoring this result like it doesn't exist\r\n      continue;\r\n    }\r\n\r\n    const sharedChartId = resRaw.shared_chart;\r\n    // Initialize Song\r\n    if (!top[sharedChartId]) {\r\n      const sharedChart = shared_charts[sharedChartId];\r\n      const label = _.toUpper(sharedChart.chart_label);\r\n      const [chartType, chartLevel] = labelToTypeLevel(label);\r\n      top[sharedChartId] = {\r\n        song: sharedChart.track_name,\r\n        chartLabel: label,\r\n        chartLevel,\r\n        chartType,\r\n        duration: sharedChart.duration,\r\n        sharedChartId: sharedChartId,\r\n        maxTotalSteps: sharedChart.max_total_steps,\r\n        results: [],\r\n        allResultsIds: [],\r\n      };\r\n    }\r\n\r\n    // Getting current chart and result (mapped)\r\n    const chartTop = top[sharedChartId];\r\n    const result = mapResult(resRaw, players, chartTop);\r\n    mappedResults.push(result);\r\n\r\n    // Inserting result into TOP\r\n    const topResultId = getTopResultId(result);\r\n    const currentTopResult = topResults[topResultId];\r\n    if (!currentTopResult || currentTopResult.score < result.score) {\r\n      if (currentTopResult) {\r\n        const oldScoreIndex = chartTop.results.indexOf(currentTopResult);\r\n        if (oldScoreIndex !== -1) {\r\n          chartTop.results.splice(oldScoreIndex, 1);\r\n        }\r\n      }\r\n      const newScoreIndex = _.sortedLastIndexBy((r) => -r.score, result, chartTop.results);\r\n      if (!result.isUnknownPlayer || newScoreIndex === 0) {\r\n        chartTop.results.splice(newScoreIndex, 0, result);\r\n        chartTop.latestScoreDate = result.date;\r\n        chartTop.allResultsIds.push(result.playerId);\r\n        topResults[topResultId] = result;\r\n      }\r\n      if (!result.isUnknownPlayer) {\r\n        chartTop.results.forEach((enemyResult) => {\r\n          if (\r\n            !enemyResult.isUnknownPlayer &&\r\n            enemyResult.isRank === result.isRank &&\r\n            enemyResult.playerId !== result.playerId &&\r\n            result.score &&\r\n            enemyResult.score\r\n          ) {\r\n            battles.push([result, enemyResult, chartTop]);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    // Getting best grade of player on this chart\r\n    if (!result.isIntermediateResult) {\r\n      const bestGradeResultId = getBestGradeResultId(result);\r\n      const currentBestGradeRes = bestGradeResults[bestGradeResultId];\r\n      if (\r\n        !currentBestGradeRes ||\r\n        gradeComparator[currentBestGradeRes.grade] <= gradeComparator[result.grade]\r\n      ) {\r\n        // Using <= here, so newer scores always win and rewrite old scores\r\n        currentBestGradeRes && (currentBestGradeRes.isBestGradeOnChart = false);\r\n        result.isBestGradeOnChart = true;\r\n        bestGradeResults[bestGradeResultId] = result;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Loop 2, when the TOP is already set up\r\n  for (let chartId in top) {\r\n    const chart = top[chartId];\r\n    chart.maxScore = null;\r\n    for (let result of chart.results) {\r\n      if (!result.isRank) {\r\n        if (result.accuracy) {\r\n          const maxScoreCandidate = getMaxRawScore(result, chart);\r\n          if (chart.maxScore < maxScoreCandidate) {\r\n            chart.maxScore = maxScoreCandidate;\r\n          }\r\n        } else if (chart.maxScore && chart.maxScore < result.score) {\r\n          chart.maxScore = result.score;\r\n        }\r\n      }\r\n      // Getting some info about players\r\n      if (!result.isUnknownPlayer && !result.isIntermediateResult) {\r\n        if (!profiles[result.playerId]) {\r\n          initializeProfile(result, profiles, players);\r\n        }\r\n        getProfileInfoFromResult(result, chart, profiles);\r\n      }\r\n    }\r\n  }\r\n\r\n  return { mappedResults, profiles, sharedCharts: top, battles };\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case STOP_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: initialState.data,\r\n        players: initialState.players,\r\n        profiles: initialState.profiles,\r\n        results: initialState.results,\r\n        sharedCharts: initialState.sharedCharts,\r\n        scoreInfo: {},\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isLoadingRanking: true,\r\n        data: action.data,\r\n        players: action.players,\r\n        profiles: action.profiles,\r\n        results: action.results,\r\n        sharedCharts: action.sharedCharts,\r\n        originalData: action.originalData,\r\n        scoreInfo: {},\r\n      };\r\n    case PROFILES_UPDATE:\r\n      return {\r\n        ...state,\r\n        isLoadingRanking: false,\r\n        profiles: action.profiles,\r\n        resultInfo: action.resultInfo,\r\n        sharedCharts: action.sharedCharts,\r\n        data: _.values(action.sharedCharts),\r\n      };\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    case RANKING_CHANGE_SET:\r\n      const hasPrevList = !_.isEmpty(action.listPrev);\r\n      return {\r\n        ...state,\r\n        profiles: _.mapValues((playerOriginal) => {\r\n          const player = {\r\n            ...playerOriginal,\r\n            prevRating: _.get(playerOriginal.id, action.rankingsPointsMap),\r\n          };\r\n          if (!hasPrevList) {\r\n            return player; // First time opening this thing and we didn't have any previous data\r\n          }\r\n          if (!_.includes(player.id, action.listPrev)) {\r\n            return { ...player, change: 'NEW' };\r\n          } else if (!_.includes(player.id, action.listNow)) {\r\n            // Should NEVER happen, idk if this is possible\r\n            return { ...player, change: '?' };\r\n          } else {\r\n            return {\r\n              ...player,\r\n              change: _.indexOf(player.id, action.listPrev) - _.indexOf(player.id, action.listNow),\r\n            };\r\n          }\r\n        }, state.profiles),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchResults = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        fetchJson({\r\n          url: `${HOST}/${highscoresUrl}`,\r\n        })\r\n      );\r\n\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n      // HACKS for test\r\n      // data.results = _.dropRight(500, data.results);\r\n      // data.results = _.dropRight(9500, data.results);\r\n      // console.log(1, data.results);\r\n      // data.results = _.filter((res) => res.gained < '2020-07-05 00:00:00', data.results);\r\n      // data.results = _.filter(res => res.gained < '2020-03-12 16:55:00', data.results);\r\n      // data.results = _.filter(res => res.gained < '2020-03-12 16:34:51', data.results);\r\n      // console.log(2, data.results);\r\n\r\n      dispatch(processResultsData(data));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const appendNewResults = (lastDate) => {\r\n  return async (dispatch, getState) => {\r\n    const { originalData, sharedCharts } = getState().results;\r\n    if (!lastDate) {\r\n      return dispatch(fetchResults());\r\n    }\r\n\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        fetchJson({\r\n          url: `${HOST}/${highscoresUrl}?${queryString.stringify({ start_date: lastDate })}`,\r\n        })\r\n      );\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n\r\n      const appendedResults = _.filter((result) => {\r\n        const currentResults = sharedCharts[result.shared_chart];\r\n        if (!currentResults) {\r\n          return true;\r\n        }\r\n        const oldResult = _.find(\r\n          (old) =>\r\n            old.id === result.id ||\r\n            (old.playerId === result.player && old.isRank === !!result.rank_mode),\r\n          currentResults.results\r\n        );\r\n        if (!oldResult) {\r\n          if (result.player === 1 && currentResults.results[0].score > result.score) {\r\n            return false;\r\n          }\r\n          return true;\r\n        }\r\n        if (oldResult.id === result.id || oldResult.score >= result.score) {\r\n          return false;\r\n        }\r\n        return true;\r\n      }, data.results);\r\n\r\n      console.log('Received results:', data, '; Will append:', appendedResults);\r\n\r\n      if (!_.isEmpty(appendedResults)) {\r\n        const mergedData = {\r\n          players: data.players,\r\n          results: [...originalData.results, ...appendedResults],\r\n          shared_charts: { ...originalData.shared_charts, ...data.shared_charts },\r\n        };\r\n        dispatch(processResultsData(mergedData));\r\n      } else {\r\n        dispatch({ type: STOP_LOADING });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nconst processResultsData = (data) => {\r\n  return async (dispatch, getState) => {\r\n    const { tracklist } = getState();\r\n    const { sharedCharts, mappedResults, profiles, battles } = processData(data, tracklist);\r\n\r\n    dispatch({\r\n      type: SUCCESS,\r\n      data: _.values(sharedCharts),\r\n      players: _.flow(\r\n        _.toPairs,\r\n        _.map(([id, player]) => ({ ...player, id: _.toInteger(id) }))\r\n      )(data.players),\r\n      results: mappedResults,\r\n      profiles,\r\n      sharedCharts,\r\n      originalData: data,\r\n    });\r\n\r\n    // Parallelized calculation of ELO and profile data\r\n    const input = { sharedCharts, profiles, tracklist, battles, debug: DEBUG };\r\n    let output;\r\n    if (window.Worker) {\r\n      const worker = new WorkerProfilesProcessing();\r\n      output = await worker.getProcessedProfiles(input);\r\n      worker.terminate();\r\n    } else {\r\n      output = profilesProcessing.getProcessedProfiles(input);\r\n    }\r\n\r\n    DEBUG && console.log(output.logText);\r\n    DEBUG &&\r\n      console.log(\r\n        'Processed profiles:',\r\n        Object.values(output.profiles)\r\n          .filter((q) => q.pp)\r\n          .sort((a, b) => b.pp.pp - a.pp.pp)\r\n      );\r\n    // console.log(output.sharedCharts);\r\n    // let byLevel = _.groupBy((ch) => ch.chartLevel, _.values(output.sharedCharts));\r\n    // function getSD(array) {\r\n    //   const n = array.length;\r\n    //   const mean = array.reduce((a, b) => a + b) / n;\r\n    //   return Math.sqrt(array.map((x) => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / n);\r\n    // }\r\n    // byLevel = _.mapValues((charts) => {\r\n    //   return {\r\n    //     avgLevel: _.meanBy((ch) => ch.interpolatedDifficulty || Number(ch.chartLevel), charts),\r\n    //     deviation: getSD(charts.map((ch) => ch.interpolatedDifficulty || Number(ch.chartLevel))),\r\n    //     charts,\r\n    //   };\r\n    // }, byLevel);\r\n    // console.log(byLevel);\r\n    // console.log(\r\n    //   _.values(byLevel)\r\n    //     .map((q) => `${q.avgLevel}\\t${q.deviation}`)\r\n    //     .join('\\n')\r\n    // );\r\n    dispatch({\r\n      type: PROFILES_UPDATE,\r\n      ...output,\r\n    });\r\n    dispatch(calculateRankingChanges(output.profiles));\r\n  };\r\n};\r\n\r\nexport const setFilter = (filter) => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\n\r\nexport const resetFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n\r\nconst getListOfNames = _.map('id');\r\nconst getMapOfRatings = _.flow(\r\n  _.map((q) => [q.id, q.rating]),\r\n  _.fromPairs\r\n);\r\n\r\nexport const calculateRankingChanges = (profiles) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const ranking = _.orderBy('ratingRaw', 'desc', _.values(profiles));\r\n      const [lastChangedRanking, lastChangedRankingPoints, lastFetchedRanking] = await Promise.all([\r\n        localForage.getItem('lastChangedRanking_v3'),\r\n        localForage.getItem('lastChangedRankingPoints_v3'),\r\n        localForage.getItem('lastFetchedRanking_v3'),\r\n      ]);\r\n      const listNow = getListOfNames(ranking);\r\n      const listLastFetched = getListOfNames(lastFetchedRanking);\r\n      const listLastChanged = getListOfNames(lastChangedRanking);\r\n      const mapPointsNow = getMapOfRatings(ranking);\r\n      const mapPointsLastFetched = getMapOfRatings(lastFetchedRanking);\r\n      const mapPointsLastChanged = getMapOfRatings(lastChangedRankingPoints);\r\n\r\n      let rankingsPointsMap = mapPointsLastChanged;\r\n      // console.log(listNow, listLastFetched, listLastChanged);\r\n      // console.log(mapPointsNow, mapPointsLastFetched, mapPointsLastChanged);\r\n      if (!_.isEqual(mapPointsNow, mapPointsLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRankingPoints_v3', lastFetchedRanking);\r\n        rankingsPointsMap = mapPointsLastFetched;\r\n      }\r\n      let listPrev = listLastChanged;\r\n      if (!_.isEqual(listNow, listLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRanking_v3', lastFetchedRanking);\r\n        listPrev = listLastFetched;\r\n      }\r\n      dispatch({\r\n        type: RANKING_CHANGE_SET,\r\n        listNow,\r\n        listPrev,\r\n        rankingsPointsMap,\r\n      });\r\n      localForage.setItem('lastFetchedRanking_v3', ranking);\r\n    } catch (error) {\r\n      console.warn('Cannot get ranking from local storage', error);\r\n    }\r\n  };\r\n};\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\n\r\nimport { setFilter } from 'reducers/results';\r\n\r\nconst SELECT_PRESET = `PRESETS/SELECT_PRESET`;\r\nconst LOAD_PRESETS = `PRESETS/LOAD_PRESETS`;\r\nconst LOADING_START = `PRESETS/LOADING_START`;\r\nconst LOADING_END = `PRESETS/LOADING_END`;\r\n\r\nconst initialState = {\r\n  presets: [],\r\n  currentPreset: null,\r\n  isLoading: false,\r\n};\r\n\r\nconst itemToOption = item =>\r\n  item && {\r\n    ...item,\r\n    label: item.name,\r\n    value: item.name,\r\n  };\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_PRESETS:\r\n      const currentPreset = _.find({ name: _.get('name', state.currentPreset) }, action.presets);\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(currentPreset) || null,\r\n        presets: _.map(itemToOption, action.presets),\r\n      };\r\n    case SELECT_PRESET:\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(action.currentPreset),\r\n      };\r\n    case LOADING_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case LOADING_END:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst reloadPresets = presets => ({ type: LOAD_PRESETS, presets: presets || [] });\r\n\r\nconst startLoading = () => ({\r\n  type: LOADING_START,\r\n});\r\n\r\nconst endLoading = () => ({\r\n  type: LOADING_END,\r\n});\r\n\r\nexport const selectPreset = currentPreset => ({\r\n  type: SELECT_PRESET,\r\n  currentPreset,\r\n});\r\n\r\nexport const loadPresets = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    dispatch(reloadPresets(presets));\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const savePreset = name => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const { filter } = getState().top;\r\n    const newPreset = { name, filter };\r\n    if (!_.some({ name }, presets)) {\r\n      const newPresets = [...(presets || []), newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      dispatch(selectPreset(newPreset));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    } else if (window.confirm('Preset with this name already exists, replace it?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      const newPresets = [...withoutOldPreset, newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const openPreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const currentPreset = getState().presets.currentPreset;\r\n  const name = _.get('name', currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = name && _.find({ name }, presets);\r\n    if (preset) {\r\n      dispatch(selectPreset(currentPreset));\r\n      dispatch(setFilter(currentPreset.filter));\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const deletePreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const name = _.get('name', getState().presets.currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = _.find({ name }, presets);\r\n    if (preset && window.confirm('Are you sure you want to delete selected preset?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      dispatch(reloadPresets(withoutOldPreset));\r\n      localForage.setItem('filterPresets', withoutOldPreset);\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaLayerGroup, FaFolderOpen, FaSave, FaPlus, FaTrashAlt } from 'react-icons/fa';\r\nimport Select from 'react-select';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport Input from 'components/Shared/Input/Input';\r\n\r\nimport { loadPresets, savePreset, selectPreset, openPreset, deletePreset } from 'reducers/presets';\r\n\r\nconst overlayItem = (\r\n  <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n    <FaLayerGroup />\r\n    пресеты\r\n  </button>\r\n);\r\n\r\nconst noPresetsMessage = () => 'пусто';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ...state.presets,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  loadPresets,\r\n  savePreset,\r\n  openPreset,\r\n  deletePreset,\r\n  selectPreset,\r\n};\r\n\r\nclass PresetsControl extends React.Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    this.props.loadPresets();\r\n  }\r\n\r\n  onChangeSelection = selected => {\r\n    this.props.selectPreset(selected.name);\r\n  };\r\n\r\n  onRewritePreset = () => {\r\n    const { currentPreset } = this.props;\r\n    this.props.savePreset(currentPreset.name);\r\n  };\r\n\r\n  onSavePreset = () => {\r\n    const { name } = this.state;\r\n    this.props.savePreset(name);\r\n    this.setState({ isAddingNew: false });\r\n  };\r\n\r\n  render() {\r\n    const { presets, currentPreset, isLoading } = this.props;\r\n    const { name, isAddingNew } = this.state;\r\n    return (\r\n      <div>\r\n        <Overlay overlayItem={overlayItem}>\r\n          <div className=\"presets-control-overlay\">\r\n            <Select\r\n              className=\"select _margin-bottom\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"пресеты...\"\r\n              options={presets}\r\n              value={currentPreset}\r\n              onChange={this.props.selectPreset}\r\n              noOptionsMessage={noPresetsMessage}\r\n            />\r\n            {currentPreset && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.props.openPreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaFolderOpen /> открыть\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.onRewritePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaSave /> перезаписать\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon\"\r\n                  onClick={this.props.deletePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaTrashAlt /> удалить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {!isAddingNew && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left _self-align-end\"\r\n                  onClick={() => this.setState({ isAddingNew: true })}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaPlus /> добавить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {isAddingNew && (\r\n              <div className=\"adding-new _margin-bottom\">\r\n                <Input\r\n                  value={name}\r\n                  placeholder=\"имя пресета...\"\r\n                  className=\"form-control\"\r\n                  onChange={name => this.setState({ name })}\r\n                />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={this.onSavePreset}\r\n                  disabled={!name || isLoading}\r\n                >\r\n                  <FaSave /> сохранить\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={() => this.setState({ isAddingNew: false })}\r\n                  disabled={isLoading}\r\n                >\r\n                  отмена\r\n                </button>\r\n              </div>\r\n            )}\r\n            {/* <div>\r\n              <Toggle\r\n                checked={false}\r\n                onToggle={active => {\r\n                  localForage.setItem('showTabs', active);\r\n                }}\r\n              >\r\n                показывать табы с пресетами\r\n              </Toggle>\r\n            </div> */}\r\n          </div>\r\n        </Overlay>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PresetsControl);\r\n","import React from 'react';\r\n\r\nconst Flag = ({ region }) => {\r\n  return (\r\n    <div\r\n      className=\"flag-img\"\r\n      style={{\r\n        backgroundImage: `url(https://osu.ppy.sh/images/flags/${region}.png)`,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Flag;\r\n","import { useState, useEffect, useMemo, useCallback, useRef } from 'react';\r\nimport _ from 'lodash/fp';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport moment from 'moment';\r\n\r\nimport { labelToTypeLevel } from 'utils/leaderboards';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\nconst timeStyle = {\r\n  flavour: 'short',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nexport const getTimeAgo = (date) => {\r\n  const dayDiff = moment().startOf('day').diff(moment(date).startOf('day'), 'days');\r\n  return dayDiff === 0\r\n    ? 'сегодня'\r\n    : dayDiff === 1\r\n    ? 'вчера'\r\n    : timeAgo.format(date, timeStyle).replace('назад', '');\r\n};\r\n\r\nexport const preprocessData = (data) => ({\r\n  ...data,\r\n  results: _.flow(\r\n    _.get('results'),\r\n    _.toPairs,\r\n    _.map(([chartId, item]) => {\r\n      const fullRes = _.find(\r\n        (r) => _.every(_.isNumber, [r.perfects, r.greats, r.goods, r.bads, r.misses]),\r\n        item.results\r\n      );\r\n      const stepSum =\r\n        fullRes &&\r\n        [fullRes.perfects, fullRes.greats, fullRes.goods, fullRes.bads, fullRes.misses].reduce(\r\n          (sum, n) => sum + n,\r\n          0\r\n        );\r\n\r\n      const [chartType, chartLevel] = labelToTypeLevel(item.chart_label);\r\n\r\n      return {\r\n        song: item.track,\r\n        sharedChartId: _.toNumber(chartId),\r\n        chartLabel: item.chart_label,\r\n        chartLevel,\r\n        chartType,\r\n        mix: item.mix,\r\n        duration: item.duration,\r\n        results: item.results.map((res, index) => {\r\n          let resultInfoOverrides = {};\r\n          if (stepSum) {\r\n            const infos = [res.perfects, res.greats, res.goods, res.bads, res.misses];\r\n            let fixableIndex = -1;\r\n            let localStepSum = 0;\r\n            const canFix =\r\n              infos.filter((numb, index) => {\r\n                if (!_.isNumber(numb)) {\r\n                  fixableIndex = index;\r\n                  return true;\r\n                }\r\n                localStepSum += numb;\r\n                return false;\r\n              }).length === 1;\r\n            if (canFix) {\r\n              resultInfoOverrides[['perfect', 'great', 'good', 'bad', 'miss'][fixableIndex]] =\r\n                stepSum - localStepSum;\r\n            }\r\n          }\r\n          return {\r\n            id: res.id,\r\n            playerId: res.player,\r\n            nickname: data.players[res.player].nickname,\r\n            nicknameArcade: data.players[res.player].arcade_name,\r\n            originalChartMix: res.originalChartMix,\r\n            originalChartLabel: res.originalChartLabel,\r\n            originalScore: res.originalScore,\r\n            date: res.gained,\r\n            dateObject: new Date(res.gained),\r\n            grade: res.grade,\r\n            isExactDate: !!res.exact_gain_date,\r\n            score: res.score,\r\n            scoreIncrease: res.score_increase,\r\n            calories: res.calories && res.calories / 1000,\r\n            perfect: res.perfects,\r\n            great: res.greats,\r\n            good: res.goods,\r\n            bad: res.bads,\r\n            miss: res.misses,\r\n            combo: res.max_combo,\r\n            mods: res.mods_list,\r\n            isRank: !!res.rank_mode,\r\n            isHJ: (res.mods_list || '').split(' ').includes('HJ'),\r\n            ...resultInfoOverrides,\r\n          };\r\n        }),\r\n      };\r\n    }),\r\n    _.map((song) => {\r\n      return {\r\n        ...song,\r\n        latestScoreDate: song.results.reduce(\r\n          (latest, current) => (current.date > latest ? current.date : latest),\r\n          song.results[0].date\r\n        ),\r\n        results: song.results.map((res) => {\r\n          const perfects = (Math.sqrt(res.perfect) * _.toInteger(song.chartLevel)) / 2;\r\n          const acc = perfects\r\n            ? Math.floor(\r\n                ((perfects * 100 + res.great * 60 + res.good * 30 + res.miss * -20) /\r\n                  (perfects + res.great + res.good + res.bad + res.miss)) *\r\n                  100\r\n              ) / 100\r\n            : null;\r\n          const accRaw = res.perfect\r\n            ? Math.floor(\r\n                ((res.perfect * 100 + res.great * 60 + res.good * 30 + res.miss * -20) /\r\n                  (res.perfect + res.great + res.good + res.bad + res.miss)) *\r\n                  100\r\n              ) / 100\r\n            : null;\r\n          return {\r\n            ...res,\r\n            accuracy: acc < 0 ? 0 : accRaw === 100 ? 100 : acc && +acc.toFixed(2),\r\n            accuracyRaw: accRaw,\r\n            hasRankScore: _.some({ playerId: res.playerId, isRank: true }, song.results),\r\n          };\r\n        }),\r\n      };\r\n    }),\r\n    _.orderBy(['latestScoreDate', 'song', 'chartLevel'], ['desc', 'asc', 'desc'])\r\n  )(data),\r\n});\r\n\r\nexport const useTrackedEx = ({\r\n  data,\r\n  resetData,\r\n  onChange = _.noop,\r\n  isDataValid = _.identity,\r\n  isDebugOn = false,\r\n}) => {\r\n  const [prevData, setPrevData] = useState(data);\r\n  const [currData, setCurrData] = useState(data);\r\n  const resetIndicator = useRef(resetData);\r\n\r\n  useEffect(() => {\r\n    // isDebugOn && console.log('tracking effect', resetIndicatorData, data, currData, prevData);\r\n    if (resetIndicator.current !== resetData) {\r\n      // isDebugOn && console.log('resetting due to indicator chage', data);\r\n      resetIndicator.current = resetData;\r\n      setPrevData(data);\r\n      setCurrData(data);\r\n    } else if (isDataValid(data) && !_.isEqual(data, currData)) {\r\n      // isDebugOn && console.log('data has updated', data, currData);\r\n      setPrevData(currData);\r\n      setCurrData(data);\r\n      onChange(currData, data);\r\n    }\r\n  }, [data, onChange, currData, prevData, resetData, isDataValid]);\r\n\r\n  const reset = useCallback(() => {\r\n    // isDebugOn && console.log('reset called from function');\r\n    setPrevData(data);\r\n    setCurrData(data);\r\n  }, [data]);\r\n\r\n  return useMemo(() => [currData, prevData, reset], [currData, prevData, reset]);\r\n};\r\n\r\nexport const useTracked = (data, resetIndicatorData, onChange = _.noop, isDebugOn) => {\r\n  const [prevData, setPrevData] = useState(data);\r\n  const [currData, setCurrData] = useState(data);\r\n  const resetIndicator = useRef(resetIndicatorData);\r\n\r\n  useEffect(() => {\r\n    // isDebugOn && console.log('tracking effect', resetIndicatorData, data, currData, prevData);\r\n    if (resetIndicator.current !== resetIndicatorData) {\r\n      // isDebugOn && console.log('resetting due to indicator chage', data);\r\n      resetIndicator.current = resetIndicatorData;\r\n      setPrevData(data);\r\n      setCurrData(data);\r\n    } else if (data && !_.isEqual(data, currData)) {\r\n      // isDebugOn && console.log('data has updated', data, currData);\r\n      setPrevData(currData);\r\n      setCurrData(data);\r\n      onChange(currData, data);\r\n    }\r\n  }, [data, onChange, currData, prevData, resetIndicatorData]);\r\n\r\n  const reset = useCallback(() => {\r\n    // isDebugOn && console.log('reset called from function');\r\n    setPrevData(data);\r\n    setCurrData(data);\r\n  }, [data]);\r\n\r\n  return useMemo(() => [currData, prevData, reset], [currData, prevData, reset]);\r\n};\r\n\r\nexport const useResetTrackedObject = (object) => {\r\n  return useCallback(() => {\r\n    const trackings = _.values(object);\r\n    trackings.forEach((tracking) => tracking[2]());\r\n  }, [object]);\r\n};\r\n","export const colorsArray = [\r\n  '#4DB3FF',\r\n  '#80B300',\r\n  '#FF6655',\r\n  '#FF99E6',\r\n  '#33FFCC',\r\n  '#e633c8',\r\n  '#dbe812',\r\n  '#FF1A66',\r\n  '#991AFF',\r\n  '#E6B333',\r\n  '#1AB399',\r\n  '#4D8066',\r\n  '#CC9999',\r\n  '#00E680',\r\n  '#809980',\r\n  '#E6FF80',\r\n  '#1AFF33',\r\n  '#999933',\r\n  '#E6331A',\r\n  '#CCCC00',\r\n  '#66E64D',\r\n  '#4D80CC',\r\n  '#9900B3',\r\n  '#4DB380',\r\n  '#FF4D4D',\r\n];\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport _ from 'lodash/fp';\r\nimport classNames from 'classnames';\r\nimport numeral from 'numeral';\r\nimport { FaExclamationTriangle, FaAngleDoubleUp } from 'react-icons/fa';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\n\r\nimport { routes } from 'constants/routes';\r\nimport { DEBUG } from 'constants/env';\r\n\r\nimport Flag from 'components/Shared/Flag';\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\n\r\nimport { getTimeAgo as getShortTimeAgo } from 'components/SocketTracker/helpers';\r\n\r\nimport { tooltipFormatter } from 'utils/leaderboards';\r\nimport { getExp } from 'utils/exp';\r\nimport { colorsArray } from 'utils/colors';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    resultInfo: state.results.resultInfo,\r\n    profiles: state.results.profiles,\r\n  };\r\n};\r\n\r\nconst Result = (\r\n  {\r\n    // shared\r\n    res,\r\n    chart,\r\n    resultInfo,\r\n    profiles,\r\n    placeDifference,\r\n    // leaderboard\r\n    showProtagonistEloChange = false,\r\n    showProtagonistPpChange = false,\r\n    protagonistName = null,\r\n    uniqueSelectedNames = [],\r\n    // socket\r\n    leftProfile = {},\r\n    rightProfile = {},\r\n    isSocketView = false,\r\n  },\r\n  ref\r\n) => {\r\n  const inf = resultInfo[res.id] || {};\r\n\r\n  // Rating info for nickname column:\r\n  let ratingInfoBlock = null;\r\n  if (DEBUG) {\r\n    // In debug mode we show all info\r\n    ratingInfoBlock = (\r\n      <>\r\n        <span className=\"debug-elo-info\">\r\n          {' '}\r\n          {inf.startingRating && Math.round(inf.startingRating)}\r\n          {' / '}\r\n          {inf.ratingDiff > 0 ? '+' : ''}\r\n          {inf.ratingDiff && Math.round(inf.ratingDiff)}\r\n          {' / '}\r\n          {inf.pp && inf.pp.ppFixed}pp\r\n        </span>\r\n      </>\r\n    );\r\n  } else if (\r\n    res.nickname === protagonistName &&\r\n    (showProtagonistEloChange || showProtagonistPpChange)\r\n  ) {\r\n    // In non-debug mode we show relevant info for selected protagonist\r\n    ratingInfoBlock = (\r\n      <>\r\n        {' / '}\r\n        {showProtagonistEloChange && inf.ratingDiff && (\r\n          <span>{`${inf.ratingDiff > 0 ? '+' : ''}${Math.round(inf.ratingDiff)}`}</span>\r\n        )}\r\n        {showProtagonistPpChange && inf.pp && <span>{inf.pp.ppFixed}pp</span>}\r\n      </>\r\n    );\r\n  }\r\n\r\n  const flag = profiles[res.playerId] ? <Flag region={profiles[res.playerId].region} /> : null;\r\n\r\n  const nameIndex = uniqueSelectedNames.indexOf(res.nickname);\r\n\r\n  return (\r\n    <tr\r\n      key={res.id}\r\n      ref={ref}\r\n      className={classNames({\r\n        empty: !res.accuracy,\r\n        latest: new Date(chart.latestScoreDate) - new Date(res.date) < 12 * 60 * 60 * 1000,\r\n        left: res.nickname === leftProfile.name,\r\n        right: res.nickname === rightProfile.name,\r\n      })}\r\n      style={\r\n        nameIndex > -1\r\n          ? {\r\n              background: colorsArray[nameIndex] + '3A',\r\n              outline: `1px solid ${colorsArray[nameIndex]}A0`,\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      {!isSocketView && (\r\n        <td className=\"place\">{res.isSecondOccurenceInResults ? '' : `#${res.topPlace}`}</td>\r\n      )}\r\n      <td className=\"nickname\" style={nameIndex > -1 ? { fontWeight: 'bold' } : {}}>\r\n        <div className=\"nickname-container\">\r\n          {flag}\r\n          <span className=\"nickname-text\">\r\n            <NavLink exact to={routes.profile.getPath({ id: res.playerId })}>\r\n              {res.nickname}\r\n            </NavLink>\r\n            {!!placeDifference && (\r\n              <span className=\"change-holder up\">\r\n                <span>{placeDifference}</span>\r\n                <FaAngleDoubleUp />\r\n              </span>\r\n            )}\r\n            {ratingInfoBlock}\r\n          </span>\r\n          {!isSocketView && (\r\n            <div className=\"mods-container\">\r\n              {isSocketView &&\r\n                res.mods &&\r\n                res.mods\r\n                  .split(' ')\r\n                  .filter((mod) => mod.includes('AV'))\r\n                  .map((avMod) => (\r\n                    <div className=\"mod av-mod\">\r\n                      <div className=\"av-text\">AV</div>\r\n                      <div className=\"av-number\">{avMod.replace('AV', '')}</div>\r\n                    </div>\r\n                  ))}\r\n              {isSocketView &&\r\n                res.mods &&\r\n                res.mods\r\n                  .split(' ')\r\n                  .filter((mod) => mod.endsWith('X'))\r\n                  .map((xMod) => (\r\n                    <div className=\"mod x-mod\">\r\n                      <div className=\"x-number\">{xMod}</div>\r\n                    </div>\r\n                  ))}\r\n              {res.isRank && <div className=\"mod vj\">{res.mods ? 'R' : 'R?'}</div>}\r\n              {res.isHJ && <div className=\"mod hj\">HJ</div>}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </td>\r\n      <td className=\"score\">\r\n        <Overlay\r\n          overlayClassName=\"score-overlay-outer\"\r\n          overlayItem={\r\n            <span className=\"score-span\">\r\n              {res.scoreIncrease > res.score * 0.8 && '*'}\r\n              {numeral(res.score).format('0,0')}\r\n            </span>\r\n          }\r\n          placement=\"top\"\r\n        >\r\n          <div className=\"score-overlay\">\r\n            {DEBUG && (\r\n              <>\r\n                <div>\r\n                  <span className=\"_grey\">result id: </span>\r\n                  {res.id}\r\n                </div>\r\n                <div>\r\n                  <span className=\"_grey\">player id: </span>\r\n                  {res.playerId}\r\n                </div>\r\n              </>\r\n            )}\r\n            <div>\r\n              <span className=\"_grey\">игрок: </span>\r\n              <NavLink exact to={routes.profile.getPath({ id: res.playerId })}>\r\n                {res.nickname} ({res.nicknameArcade})\r\n              </NavLink>\r\n            </div>\r\n            {!!getExp(res, chart) && (\r\n              <div className=\"important\">\r\n                <span className=\"_grey\">опыт: </span>+{numeral(getExp(res, chart)).format('0,0')}\r\n              </div>\r\n            )}\r\n            {_.isNumber(inf.startingRating) && _.isNumber(inf.ratingDiff) && (\r\n              <div className=\"important\">\r\n                <span className=\"_grey\">эло: {inf.startingRating.toFixed(0)} </span>\r\n                {inf.ratingDiff >= 0 ? `+${inf.ratingDiff.toFixed(0)}` : inf.ratingDiff.toFixed(0)}\r\n              </div>\r\n            )}\r\n            {inf.pp && (\r\n              <div className=\"important\">\r\n                <span className=\"_grey\">pp: </span>\r\n                <span>{inf.pp.ppFixed}pp</span>\r\n              </div>\r\n            )}\r\n            {!res.isExactDate && (\r\n              <div className=\"warning\">\r\n                <FaExclamationTriangle />\r\n                рекорд взят с my best. часть данных недоступна\r\n              </div>\r\n            )}\r\n            {!!res.isExactDate && (\r\n              <>\r\n                {!!res.mods && (\r\n                  <div>\r\n                    <span className=\"_grey\">моды: </span>\r\n                    {res.mods}\r\n                  </div>\r\n                )}\r\n                {!!res.calories && (\r\n                  <div>\r\n                    <span className=\"_grey\">ккал: </span>\r\n                    {res.calories}\r\n                  </div>\r\n                )}\r\n                {!!res.scoreIncrease && (\r\n                  <div>\r\n                    <span className=\"_grey\">прирост: </span>+\r\n                    {numeral(res.scoreIncrease).format('0,0')}\r\n                  </div>\r\n                )}\r\n                {res.originalChartMix && (\r\n                  <div>\r\n                    <div className=\"warning\">\r\n                      <FaExclamationTriangle />\r\n                      было сыграно на {res.originalChartMix}\r\n                    </div>\r\n                    {res.originalChartLabel && (\r\n                      <div>\r\n                        <span className=\"_grey\">оригинальный чарт: </span>\r\n                        {res.originalChartLabel}\r\n                      </div>\r\n                    )}\r\n                    {res.originalScore && (\r\n                      <div>\r\n                        <span className=\"_grey\">оригинальный скор: </span>\r\n                        {res.originalScore}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                {res.scoreIncrease > res.score * 0.8 && '* сайтрид'}\r\n              </>\r\n            )}\r\n          </div>\r\n        </Overlay>\r\n      </td>\r\n      <td className=\"grade\">\r\n        <div className=\"img-holder\">\r\n          {res.grade && res.grade !== '?' && (\r\n            <img src={`${process.env.PUBLIC_URL}/grades/${res.grade}.png`} alt={res.grade} />\r\n          )}\r\n          {res.grade === '?' && null}\r\n        </div>\r\n      </td>\r\n      {isSocketView && (\r\n        <td\r\n          className={classNames('mods', {\r\n            vj: res.isRank,\r\n            hj: res.isHJ,\r\n          })}\r\n        >\r\n          <div className=\"mods-container\">\r\n            {isSocketView &&\r\n              res.mods &&\r\n              res.mods\r\n                .split(' ')\r\n                .filter((mod) => mod.includes('AV'))\r\n                .map((avMod) => (\r\n                  <div className=\"av-mod\">\r\n                    <div className=\"av-text\">AV</div>\r\n                    <div className=\"av-number\">{avMod.replace('AV', '')}</div>\r\n                  </div>\r\n                ))}\r\n            {isSocketView &&\r\n              res.mods &&\r\n              res.mods\r\n                .split(' ')\r\n                .filter((mod) => mod.endsWith('X'))\r\n                .map((xMod) => (\r\n                  <div className=\"x-mod\">\r\n                    <div className=\"x-number\">{xMod}</div>\r\n                  </div>\r\n                ))}\r\n            {res.isRank && <div className=\"inner\">{res.isExactDate ? 'R' : 'R?'}</div>}\r\n            {res.isHJ && <div className=\"inner\">HJ</div>}\r\n          </div>\r\n        </td>\r\n      )}\r\n      <td className=\"number miss\">{res.miss}</td>\r\n      <td className=\"number bad\">{res.bad}</td>\r\n      <td className=\"number good\">{res.good}</td>\r\n      <td className=\"number great\">{res.great}</td>\r\n      <td className=\"number perfect\">{res.perfect}</td>\r\n      <td className=\"combo\">\r\n        {res.combo}\r\n        {res.combo ? 'x' : ''}\r\n      </td>\r\n      <td className=\"accuracy\">\r\n        {res.accuracy === 100 ? 100 : res.accuracy ? res.accuracy.toFixed(2) : ''}\r\n        {res.accuracy ? '%' : ''}\r\n      </td>\r\n      <td\r\n        className={classNames('date', {\r\n          latest: res.date === chart.latestScoreDate,\r\n        })}\r\n      >\r\n        {isSocketView ? (\r\n          getShortTimeAgo(res.dateObject)\r\n        ) : (\r\n          <Tooltip content={tooltipFormatter(res)} tooltipClassName=\"pumpking-tooltip\">\r\n            {getShortTimeAgo(res.dateObject)}\r\n            {res.isExactDate ? '' : '?'}\r\n          </Tooltip>\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null, null, { forwardRef: true })(React.forwardRef(Result));\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport default ({ type, level }) => {\r\n  return (\r\n    <div\r\n      className={classNames('chart-name', {\r\n        single: type === 'S',\r\n        singlep: type === 'SP',\r\n        doublep: type === 'DP',\r\n        double: type === 'D',\r\n        coop: type === 'COOP',\r\n      })}\r\n    >\r\n      <span className=\"chart-letter\">{type}</span>\r\n      <span className=\"chart-number\">{level}</span>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash/fp';\r\nimport { FaYoutube, FaBackward, FaForward, FaGlobeAmericas } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\nimport FlipMove from 'react-flip-move';\r\nimport queryString from 'query-string';\r\n\r\nimport { routes } from 'constants/routes';\r\nimport { DEBUG } from 'constants/env';\r\n\r\nimport Result from './Result';\r\nimport ChartLabel from './ChartLabel';\r\n\r\nconst ANIMATION_DURATION = 250;\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    sharedCharts: state.results.sharedCharts,\r\n    playersHiddenStatus: props.playersHiddenStatus || state.preferences.data.playersHiddenStatus,\r\n  };\r\n};\r\n\r\nconst Chart = React.forwardRef(\r\n  (\r\n    {\r\n      playersHiddenStatus = {},\r\n      sharedCharts = {},\r\n      // shared\r\n      chart: chartOriginal,\r\n      // leaderboards\r\n      showHiddenPlayers = false,\r\n      showProtagonistEloChange = false,\r\n      showProtagonistPpChange = false,\r\n      uniqueSelectedNames = [],\r\n      protagonistName = null,\r\n      // socket stuff\r\n      leftProfile = {},\r\n      rightProfile = {},\r\n      isSocketView = false,\r\n    },\r\n    ref\r\n  ) => {\r\n    const [overrides, setOverrides] = useState(null);\r\n    const [isHidingPlayers, setHidingPlayers] = useState(!showHiddenPlayers);\r\n\r\n    useEffect(() => {\r\n      setHidingPlayers(!showHiddenPlayers);\r\n    }, [showHiddenPlayers]);\r\n\r\n    const chart = _.first(overrides) || chartOriginal;\r\n    if (DEBUG) {\r\n      console.log(chart, overrides);\r\n    }\r\n\r\n    let topPlace = 1;\r\n    const occuredNicknames = [];\r\n    let hiddenPlayersCount = 0;\r\n    const results = chart.results.map((res, index) => {\r\n      const isPlayerHidden = isHidingPlayers && (playersHiddenStatus[res.playerId] || false);\r\n      const isSecondOccurenceInResults = occuredNicknames.includes(res.nickname);\r\n      occuredNicknames.push(res.nickname);\r\n      if (index === 0) {\r\n        topPlace = 1;\r\n      } else if (\r\n        !isSecondOccurenceInResults &&\r\n        res.score !== _.get([index - 1, 'score'], chart.results)\r\n      ) {\r\n        topPlace += 1;\r\n      }\r\n      if (isPlayerHidden) {\r\n        hiddenPlayersCount++;\r\n      }\r\n      return {\r\n        ...res,\r\n        topPlace,\r\n        isSecondOccurenceInResults,\r\n        isPlayerHidden,\r\n      };\r\n    });\r\n\r\n    const onRedoLatestResult = _.throttle(ANIMATION_DURATION + 10, (chart) => {\r\n      const newOverrides = _.drop(1, overrides);\r\n      setOverrides(_.size(newOverrides) === 1 ? null : newOverrides);\r\n    });\r\n\r\n    const onUndoLatestResult = _.throttle(ANIMATION_DURATION + 10, (chart) => {\r\n      if (_.isEmpty(results)) {\r\n        setOverrides(null);\r\n      }\r\n      const undoedResult = _.maxBy('date', results);\r\n      if (!undoedResult) return;\r\n\r\n      const undoedPlayerId = undoedResult.playerId;\r\n      const previousResults =sharedCharts[chart.sharedChartId].previousResults; \r\n      const previousPlayerResult = _.findLast(\r\n        (res) =>\r\n          res.playerId === undoedPlayerId &&\r\n          res.isRank === undoedResult.isRank &&\r\n          res.date < undoedResult.date,\r\n          previousResults\r\n      );\r\n      \r\n      const newResults = _.orderBy(\r\n        'score',\r\n        'desc',\r\n        _.compact(\r\n          _.map((res) => (res.id === undoedResult.id ? previousPlayerResult : res), results)\r\n        )\r\n      );\r\n      const latestScore = _.maxBy('date', newResults);\r\n      const overrideChart = {\r\n        ...chart,\r\n        latestScoreDate: latestScore && latestScore.date,\r\n        results: newResults,\r\n      };\r\n      if (_.isEmpty(newResults)) {\r\n        setOverrides(null);\r\n      } else {\r\n        setOverrides([overrideChart, ...(overrides || [chart])]);\r\n      }\r\n    });\r\n\r\n    const isActive = !_.isEmpty(overrides);\r\n    const totalResultsCount = _.countBy((id) => !playersHiddenStatus[id], chart.eachResultPlayerIds).true;\r\n    const currentIndex = isActive ? 1 + totalResultsCount - _.size(overrides) : totalResultsCount;\r\n    const canUndo = !(currentIndex === 1 && totalResultsCount === 1);\r\n\r\n    // TODO: remove check from sharedCharts when SocketTracker works off results data instead of topPerSong\r\n    const interpDiff =\r\n      chart.interpolatedDifficulty ||\r\n      _.get('interpolatedDifficulty', sharedCharts[chart.sharedChartId]);\r\n\r\n    return (\r\n      <div className=\"song-block\" ref={ref}>\r\n        <div className=\"song-name\">\r\n          <ChartLabel type={chart.chartType} level={chart.chartLevel} />\r\n          {isSocketView ? (\r\n            <div className=\"song-name-text\">\r\n              {interpDiff ? `(${interpDiff.toFixed(1)}) ` : ''}\r\n              {chart.song}\r\n            </div>\r\n          ) : (\r\n            <div className=\"song-name-text\">\r\n              <NavLink\r\n                exact\r\n                to={routes.leaderboard.sharedChart.getPath({ sharedChartId: chart.sharedChartId })}\r\n              >\r\n                {chart.song}\r\n              </NavLink>{' '}\r\n              <span className=\"_grey-text\">({interpDiff && interpDiff.toFixed(1)})</span>\r\n            </div>\r\n          )}\r\n          {!isSocketView && (\r\n            <div className=\"youtube-link\">\r\n              <a\r\n                href={`https://youtube.com/results?${queryString.stringify({\r\n                  search_query: `${chart.song} ${chart.chartLabel}`.replace(/( -)|(- )/g, ' '),\r\n                })}`}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <FaYoutube />\r\n              </a>\r\n            </div>\r\n          )}\r\n          <div className=\"_flex-fill\" />\r\n          <div className=\"right-side-block\">\r\n            {hiddenPlayersCount > 0 && (\r\n              <div\r\n                className={classNames('players-hidden-count _grey-text', {\r\n                  '_on-hover': !isSocketView,\r\n                })}\r\n              >\r\n                скрыто: {hiddenPlayersCount}\r\n              </div>\r\n            )}\r\n            {(hiddenPlayersCount > 0 || !isHidingPlayers) && !isSocketView && (\r\n              <div\r\n                className=\"globe-icon _on-hover\"\r\n                onClick={() => setHidingPlayers(!isHidingPlayers)}\r\n              >\r\n                <FaGlobeAmericas />\r\n              </div>\r\n            )}\r\n            {!isSocketView && (\r\n              <div\r\n                className={classNames('undo-result-button _on-hover', {\r\n                  active: isActive,\r\n                })}\r\n              >\r\n                <FaBackward\r\n                  className={classNames('backward-btn', { disabled: !canUndo })}\r\n                  onClick={() => canUndo && onUndoLatestResult(chart)}\r\n                />\r\n                <span className=\"number\">\r\n                  {currentIndex}/{totalResultsCount}\r\n                </span>\r\n                <FaForward\r\n                  className={classNames('forward-btn', { disabled: !isActive })}\r\n                  onClick={() => isActive && onRedoLatestResult(chart)}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"charts\">\r\n          {!_.isEmpty(results) && (\r\n            <div className=\"chart\">\r\n              <div className=\"results\">\r\n                <table>\r\n                  {/* {chartIndex === 0 && (\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"place\"></th>\r\n                        <th className=\"nickname\"></th>\r\n                        <th className=\"judge\"></th>\r\n                        <th className=\"score\">score</th>\r\n                        <th className=\"grade\"></th>\r\n                        <th className=\"number\">miss</th>\r\n                        <th className=\"number\">bad</th>\r\n                        <th className=\"number\">good</th>\r\n                        <th className=\"number\">great</th>\r\n                        <th className=\"number\">perfect</th>\r\n                        <th className=\"combo\">combo</th>\r\n                        <th className=\"accuracy\">accuracy</th>\r\n                        <th className=\"date\"></th>\r\n                      </tr>\r\n                    </thead>\r\n                  )} */}\r\n                  <FlipMove\r\n                    enterAnimation=\"fade\"\r\n                    leaveAnimation=\"fade\"\r\n                    typeName=\"tbody\"\r\n                    maintainContainerHeight\r\n                    duration={ANIMATION_DURATION}\r\n                  >\r\n                    {results.map((res, index) => {\r\n                      const isProtagonist = res.nickname === protagonistName;\r\n                      if (\r\n                        (res.isPlayerHidden && !isProtagonist) ||\r\n                        (res.isUnknownPlayer && index !== 0)\r\n                      ) {\r\n                        return null;\r\n                      }\r\n\r\n                      let placeDifference, newIndex;\r\n                      if (res.scoreIncrease && res.date === chart.latestScoreDate) {\r\n                        const prevScore = res.score - res.scoreIncrease;\r\n                        newIndex = _.findLastIndex((res) => res.score > prevScore, results);\r\n                        placeDifference = newIndex - index;\r\n                      }\r\n\r\n                      return (\r\n                        <Result\r\n                          key={res.isRank + '_' + res.nickname}\r\n                          chart={chart}\r\n                          results={results}\r\n                          res={res}\r\n                          placeDifference={placeDifference}\r\n                          showProtagonistEloChange={showProtagonistEloChange}\r\n                          showProtagonistPpChange={showProtagonistPpChange}\r\n                          uniqueSelectedNames={uniqueSelectedNames}\r\n                          protagonistName={protagonistName}\r\n                          leftProfile={leftProfile}\r\n                          rightProfile={rightProfile}\r\n                          isSocketView={isSocketView}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </FlipMove>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default connect(mapStateToProps, null, null, { forwardRef: true })(Chart);\r\n","export const RESULTS_CACHE = 'resultsCache';","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\nimport queryString from 'query-string';\r\n\r\nimport { RESULTS_CACHE } from 'constants/storageKeys';\r\nimport { HOST } from 'constants/backend';\r\nimport { DEBUG } from 'constants/env';\r\n\r\nimport {\r\n  SUCCESS as RESULTS_SUCCESS,\r\n  PROFILES_UPDATE as RESULTS_PROFILES_UPDATE,\r\n  calculateRankingChanges,\r\n} from 'reducers/results';\r\n\r\nimport WorkerProfilesProcessing from 'workerize-loader!utils/workers/profilesPostProcess'; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport * as profilesProcessing from 'utils/workers/profilesPostProcess';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\nimport {\r\n  labelToTypeLevel,\r\n  gradeComparator,\r\n  mapResult,\r\n  initializeProfile,\r\n  getProfileInfoFromResult,\r\n  getMaxRawScore,\r\n} from 'utils/leaderboards';\r\n\r\nconst processChartsData = (chartsData, players) => {\r\n  // let a0, a1, b0, b1, bSum, c0, c1;\r\n  // a0 = performance.now();\r\n  // bSum = 0;\r\n\r\n  //// Initialization\r\n  // Init for TOP\r\n  const getTopResultId = (result) => `${result.sharedChartId}-${result.playerId}-${result.isRank}`;\r\n  const getBestGradeResultId = (result) => `${result.sharedChartId}-${result.playerId}`;\r\n  const top = {}; // Main top scores pbject\r\n\r\n  // Battles for ELO calculation\r\n  const battles = [];\r\n  const allResults = [];\r\n\r\n  // Profiles for every player\r\n  let profiles = {};\r\n\r\n  // Loop 1\r\n  for (let sharedChartId in chartsData) {\r\n    const chartEntry = chartsData[sharedChartId];\r\n    // console.log(chartEntry);\r\n    // Initialize chart info\r\n    const chartInfo = chartEntry.chart;\r\n    const label = _.toUpper(chartInfo.chart_label);\r\n    const [chartType, chartLevel] = labelToTypeLevel(label);\r\n    top[sharedChartId] = {\r\n      song: chartInfo.track_name,\r\n      chartLabel: label,\r\n      chartLevel,\r\n      chartType,\r\n      duration: chartInfo.duration,\r\n      sharedChartId: sharedChartId,\r\n      maxTotalSteps: chartInfo.max_total_steps,\r\n      results: [],\r\n      previousResults: [],\r\n      eachResultPlayerIds: [],\r\n      latestScoreDate: _.last(chartEntry.results).gained,\r\n      maxScore: null,\r\n    };\r\n\r\n    // Parsing results\r\n    const topResults = {};\r\n    const bestGradeResults = {};\r\n    _.forEachRight((_result) => {\r\n      if (!players[_result.player]) {\r\n        // Player of this result was not found in list of players. Ignoring this result like it doesn't exist\r\n        return;\r\n      }\r\n\r\n      const chartTop = top[sharedChartId];\r\n      const result = mapResult(_result, players, chartTop, sharedChartId);\r\n      const topResultId = getTopResultId(result);\r\n      const bestGradeResultId = getBestGradeResultId(result);\r\n\r\n      // b0 = performance.now();\r\n      // Chronological results array to calculate battles order\r\n      const resultIndex = _.sortedLastIndexBy((r) => r.dateObject, result, allResults);\r\n      allResults.splice(resultIndex, 0, result);\r\n      // b1 = performance.now();\r\n      // bSum += b1 - b0;\r\n\r\n      // Recording player ids just to calculate total number of results made on this chart (and be able to filter out hidden players)\r\n      chartTop.eachResultPlayerIds.push(result.id);\r\n\r\n      // Recording best grade for every player on every chart\r\n      if (\r\n        !bestGradeResults[bestGradeResultId] ||\r\n        gradeComparator[bestGradeResults[bestGradeResultId].grade] < gradeComparator[result.grade]\r\n      ) {\r\n        if (bestGradeResults[bestGradeResultId]) {\r\n          bestGradeResults[bestGradeResultId].isBestGradeOnChart = false;\r\n        }\r\n        result.isBestGradeOnChart = true;\r\n        bestGradeResults[bestGradeResultId] = result;\r\n      }\r\n\r\n      // Splitting all results into best results and previous results\r\n      if (!topResults[topResultId]) {\r\n        const newScoreIndex = _.sortedIndexBy((r) => -r.score, result, chartTop.results);\r\n        // Sorted from higher score to lower score\r\n        chartTop.results.splice(newScoreIndex, 0, result);\r\n        topResults[topResultId] = result;\r\n\r\n        // Additional info that can be derived from best results:\r\n        if (!result.isRank) {\r\n          if (result.accuracy) {\r\n            const maxScoreCandidate = getMaxRawScore(result);\r\n            if (chartTop.maxScore < maxScoreCandidate) {\r\n              chartTop.maxScore = maxScoreCandidate;\r\n            }\r\n          } else if (chartTop.maxScore && chartTop.maxScore < result.score) {\r\n            chartTop.maxScore = result.score;\r\n          }\r\n        }\r\n        if (!result.isUnknownPlayer && !result.isIntermediateResult) {\r\n          if (!profiles[result.playerId]) {\r\n            initializeProfile(result, profiles, players);\r\n          }\r\n          getProfileInfoFromResult(result, chartTop, profiles);\r\n        }\r\n      } else {\r\n        result.isIntermediateResult = true;\r\n        // Sorted from latest to oldest\r\n        chartTop.previousResults.push(result);\r\n      }\r\n    }, chartsData[sharedChartId].results);\r\n  }\r\n\r\n  // c0 = performance.now();\r\n  allResults.forEach((res) => {\r\n    if (!res.isUnknownPlayer) {\r\n      const chartTop = top[res.sharedChartId];\r\n\r\n      for (let i = 0; i < chartTop.results.length; i++) {\r\n        const enemyResult = chartTop.results[i];\r\n        if (res.dateObject < enemyResult.dateObject) {\r\n          break;\r\n        }\r\n        if (\r\n          !enemyResult.isUnknownPlayer &&\r\n          enemyResult.isRank === res.isRank &&\r\n          enemyResult.playerId !== res.playerId &&\r\n          res.score &&\r\n          enemyResult.score\r\n        ) {\r\n          battles.push([res, enemyResult, chartTop]);\r\n        }\r\n      }\r\n    }\r\n  });\r\n  // c1 = performance.now();\r\n\r\n  // a1 = performance.now();\r\n  // console.log('Perf data:', a1 - a0, bSum, c1 - c0);\r\n  return { profiles, sharedCharts: top, battles };\r\n};\r\n\r\nconst resultsUrl = process.env.REACT_APP_SOCKET ? 'results/best/trusted' : 'results/best';\r\n\r\nconst CHARTS_LOADING = `CHARTS_LOADING`;\r\nconst CHARTS_LOADING_FINISH = `CHARTS_LOADING_FINISH`;\r\nconst SET_CHARTS = `SET_CHARTS`;\r\nconst RESET_CHARTS = `RESET_CHARTS`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n  lastUpdatedOn: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CHARTS_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case CHARTS_LOADING_FINISH:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    case SET_CHARTS:\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n        lastUpdatedOn: action.lastUpdatedOn,\r\n      };\r\n    case RESET_CHARTS:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setChartsData = (data, lastUpdatedOn) => ({\r\n  type: SET_CHARTS,\r\n  data,\r\n  lastUpdatedOn,\r\n});\r\nexport const startLoadingCharts = () => ({\r\n  type: CHARTS_LOADING,\r\n});\r\nexport const endLoadingCharts = () => ({\r\n  type: CHARTS_LOADING_FINISH,\r\n});\r\n\r\nexport const setAndCacheData = (data, lastUpdatedOn) => (dispatch, getState) => {\r\n  localForage.setItem(RESULTS_CACHE, { data, lastUpdatedOn });\r\n  dispatch(setChartsData(data, lastUpdatedOn));\r\n};\r\n\r\nexport const resetChartsData = () => ({\r\n  type: RESET_CHARTS,\r\n});\r\n\r\nexport const loadCachedData = () => async (dispatch, getState) => {\r\n  const cache = await localForage.getItem(RESULTS_CACHE);\r\n  if (cache) {\r\n    dispatch(setChartsData(cache.data, cache.lastUpdatedOn));\r\n  }\r\n};\r\n\r\nexport const fetchChartsData = () => async (dispatch, getState) => {\r\n  dispatch(startLoadingCharts());\r\n\r\n  if (!getState().charts.data) {\r\n    // Check if we have any cached data\r\n    await dispatch(loadCachedData());\r\n  }\r\n\r\n  const { data: cachedData, lastUpdatedOn: x } = getState().charts;\r\n  // TODO: remove this hack when dino fixes date formats\r\n  const lastUpdatedOn = x && x.indexOf('.') > -1 ? x.slice(0, x.indexOf('.')) : x;\r\n\r\n  const queryParams = queryString.stringify({ since: lastUpdatedOn });\r\n  const url = `${HOST}/${resultsUrl}?${queryParams}`;\r\n  const { charts: fetchedData, lastUpdatedAt: newLastUpdated } = await dispatch(fetchJson({ url }));\r\n  const newData = {\r\n    ...(cachedData || {}),\r\n    ...fetchedData,\r\n  };\r\n\r\n  await dispatch(setAndCacheData(newData, newLastUpdated));\r\n\r\n  const players = getState().players.data;\r\n  const { profiles, sharedCharts, battles } = processChartsData(newData, players);\r\n\r\n  dispatch({\r\n    type: RESULTS_SUCCESS,\r\n    data: _.values(sharedCharts),\r\n    players: _.flow(\r\n      _.toPairs,\r\n      _.map(([id, player]) => ({ ...player, id: _.toInteger(id) }))\r\n    )(players),\r\n    profiles,\r\n    sharedCharts,\r\n  });\r\n  dispatch(endLoadingCharts());\r\n\r\n  // Parallelized calculation of ELO and profile data\r\n  const { tracklist } = getState();\r\n  const input = { sharedCharts, profiles, tracklist, battles, debug: DEBUG };\r\n\r\n  let output;\r\n  if (window.Worker) {\r\n    const worker = new WorkerProfilesProcessing();\r\n    output = await worker.getProcessedProfiles(input);\r\n    worker.terminate();\r\n  } else {\r\n    output = profilesProcessing.getProcessedProfiles(input);\r\n  }\r\n\r\n  DEBUG && console.log(output.logText);\r\n  DEBUG &&\r\n    console.log(\r\n      'Processed profiles:',\r\n      Object.values(output.profiles)\r\n        .filter((q) => q.pp)\r\n        .sort((a, b) => b.pp.pp - a.pp.pp)\r\n    );\r\n  dispatch({\r\n    type: RESULTS_PROFILES_UPDATE,\r\n    ...output,\r\n  });\r\n  dispatch(calculateRankingChanges(output.profiles));\r\n};\r\n","import _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport matchSorter from 'match-sorter';\r\n\r\nimport { SORT, CHART_MIN_MAX, DURATION_DEFAULT, RANK_FILTER } from 'constants/leaderboard';\r\nimport { defaultFilter } from 'reducers/results';\r\n\r\nexport const playersSelector = createSelector(\r\n  (state) => state.results.players,\r\n  (state) => state.user.data.player.id,\r\n  (players, playerId) =>\r\n    _.flow(\r\n      _.toPairs,\r\n      _.map(([, { nickname, arcade_name, id, region }]) => ({\r\n        label: `${nickname} (${arcade_name})`,\r\n        value: nickname,\r\n        isCurrentPlayer: playerId === id,\r\n      })),\r\n      _.sortBy((it) => (it.isCurrentPlayer ? '!' : _.toLower(it.label)))\r\n    )(players)\r\n);\r\n\r\nconst filterCharts = (filter, rows) => {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filter);\r\n  const type = _.getOr(null, 'type', filter);\r\n  const duration = _.getOr(DURATION_DEFAULT, 'duration', filter);\r\n\r\n  return _.filter((row) => {\r\n    if (duration !== DURATION_DEFAULT && !duration.includes(row.duration)) {\r\n      return false;\r\n    }\r\n    return (\r\n      row.chartLevel >= range[0] &&\r\n      row.chartLevel <= range[1] &&\r\n      (!type || row.chartType.startsWith(type))\r\n    );\r\n  }, rows);\r\n};\r\n\r\nconst getFilteredData = (\r\n  data,\r\n  sharedCharts,\r\n  filter = defaultFilter,\r\n  resultInfo = {},\r\n  preferences\r\n) => {\r\n  const start = performance.now();\r\n  const playersHiddenStatus = preferences.playersHiddenStatus;\r\n  const showHidden = filter.showHiddenFromPreferences;\r\n  const names = _.map('value', filter.players);\r\n  const namesOr = _.map('value', filter.playersOr);\r\n  const namesNot = _.map('value', filter.playersNot);\r\n  const sortingType = _.get('value', filter.sortingType);\r\n  const rankFilter = _.get('value', filter.rank) || RANK_FILTER.SHOW_ALL;\r\n  const protagonist = [\r\n    SORT.PROTAGONIST,\r\n    SORT.RANK_ASC,\r\n    SORT.RANK_DESC,\r\n    SORT.PP_ASC,\r\n    SORT.PP_DESC,\r\n    SORT.NEW_SCORES_PLAYER,\r\n  ].includes(sortingType)\r\n    ? _.get('value', filter.protagonist)\r\n    : null;\r\n  const excludeAntagonists = _.map('value', filter.excludeAntagonists);\r\n\r\n  const defaultSorting = [\r\n    _.orderBy(\r\n      [\r\n        (song) =>\r\n          _.max(\r\n            _.map(\r\n              (res) =>\r\n                showHidden || !playersHiddenStatus[res.playerId] ? res.dateObject.getTime() : 0,\r\n              song.results\r\n            )\r\n          ),\r\n      ],\r\n      ['desc']\r\n    ),\r\n  ];\r\n  const newScoresProtagonistSorting = !protagonist\r\n    ? defaultSorting\r\n    : [\r\n        _.orderBy(\r\n          [\r\n            (song) =>\r\n              _.max(\r\n                _.map(\r\n                  (res) => (res.nickname === protagonist ? res.dateObject.getTime() : 0),\r\n                  song.results\r\n                )\r\n              ),\r\n          ],\r\n          ['desc']\r\n        ),\r\n      ];\r\n  const protagonistSorting = [\r\n    _.filter((row) => _.map('nickname', row.results).includes(protagonist)),\r\n    _.map((row) => {\r\n      const protIndex = _.findIndex({ nickname: protagonist }, row.results);\r\n      const protScore = row.results[protIndex].score;\r\n      const enemies = _.flow([\r\n        _.take(protIndex),\r\n        _.uniqBy('nickname'),\r\n        _.remove((res) => excludeAntagonists.includes(res.nickname) || res.score === protScore),\r\n      ])(row.results);\r\n      const distance = Math.sqrt(\r\n        _.reduce((dist, enemy) => dist + (enemy.score / protScore - 0.99) ** 2, 0, enemies)\r\n      );\r\n      return {\r\n        ...row,\r\n        distanceFromProtagonist: distance,\r\n      };\r\n    }),\r\n    _.orderBy(['distanceFromProtagonist'], ['desc']),\r\n  ];\r\n  const getPpSorting = (field, direction = 'desc') => [\r\n    _.filter((row) => _.map('nickname', row.results).includes(protagonist)),\r\n    _.orderBy(\r\n      [\r\n        (row) => {\r\n          const result = _.find({ nickname: protagonist }, row.results);\r\n          const info = resultInfo[result.id] || {};\r\n          return _.getOr(direction === 'desc' ? -Infinity : Infinity, field, info);\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const getEloSorting = (direction) => [\r\n    _.filter((row) => _.map('nickname', row.results).includes(protagonist)),\r\n    _.orderBy(\r\n      [\r\n        (row) => {\r\n          const score = _.find({ nickname: protagonist }, row.results);\r\n          const info = resultInfo[score.id];\r\n          return _.getOr(direction === 'asc' ? Infinity : -Infinity, 'ratingDiff', info);\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const getDiffSorting = (direction = 'desc') => [\r\n    _.orderBy(\r\n      [\r\n        (row) => {\r\n          const chartInfo = sharedCharts[row.sharedChartId];\r\n          return _.getOr(_.toNumber(row.chartLevel), 'interpolatedDifficulty', chartInfo);\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const sortingFunctions =\r\n    {\r\n      [SORT.DEFAULT]: defaultSorting,\r\n      [SORT.NEW_SCORES_PLAYER]: newScoresProtagonistSorting,\r\n      [SORT.PROTAGONIST]: protagonistSorting,\r\n      [SORT.RANK_ASC]: getEloSorting('asc'),\r\n      [SORT.RANK_DESC]: getEloSorting('desc'),\r\n      [SORT.PP_ASC]: getPpSorting('pp.ppRatio', 'asc'),\r\n      [SORT.PP_DESC]: getPpSorting('pp.pp'),\r\n      [SORT.EASIEST_SONGS]: getDiffSorting('asc'),\r\n      [SORT.HARDEST_SONGS]: getDiffSorting('desc'),\r\n    }[sortingType] || defaultSorting;\r\n\r\n  const result = _.flow(\r\n    _.compact([\r\n      _.map((row) => {\r\n        let latestScoreDate = null;\r\n        const occuredIds = [];\r\n        const results = row.results.filter((res, index) => {\r\n          const isVisibleWithRankFilter =\r\n            !rankFilter || rankFilter === RANK_FILTER.SHOW_ALL\r\n              ? true\r\n              : rankFilter === RANK_FILTER.SHOW_ONLY_RANK\r\n              ? res.isRank\r\n              : rankFilter === RANK_FILTER.SHOW_ONLY_NORANK\r\n              ? !res.isRank\r\n              : rankFilter === RANK_FILTER.SHOW_BEST\r\n              ? !occuredIds.includes(res.playerId)\r\n              : true;\r\n          rankFilter === RANK_FILTER.SHOW_BEST && occuredIds.push(res.playerId);\r\n\r\n          const isVisible = (!res.isUnknownPlayer || index === 0) && isVisibleWithRankFilter;\r\n          if (isVisible && (!latestScoreDate || latestScoreDate < res.date)) {\r\n            latestScoreDate = res.date;\r\n          }\r\n          return isVisible;\r\n        }, row.results);\r\n        return {\r\n          ...row,\r\n          latestScoreDate,\r\n          results,\r\n        };\r\n      }),\r\n      filter.chartRange && ((items) => filterCharts(filter.chartRange, items)),\r\n      (names.length || namesOr.length || namesNot.length) &&\r\n        _.filter((row) => {\r\n          const rowNames = _.map('nickname', row.results);\r\n          return (\r\n            (!names.length || _.every((name) => rowNames.includes(name), names)) &&\r\n            (!namesOr.length || _.some((name) => rowNames.includes(name), namesOr)) &&\r\n            (!namesNot.length || !_.some((name) => rowNames.includes(name), namesNot))\r\n          );\r\n        }),\r\n      _.filter((row) => _.size(row.results)),\r\n      ...sortingFunctions,\r\n      filter.song && ((items) => matchSorter(items, filter.song.trim(), { keys: ['song'] })),\r\n    ])\r\n  )(data);\r\n  console.log('Sorting took', performance.now() - start, 'ms');\r\n  return result;\r\n};\r\n\r\nexport const filteredDataSelector = createSelector(\r\n  (state) => state.results.data,\r\n  (state) => state.results.sharedCharts,\r\n  (state) => state.results.filter,\r\n  (state) => state.results.resultInfo,\r\n  (state) => state.preferences.data,\r\n  getFilteredData\r\n);\r\n\r\nexport const sharedChartDataSelector = createSelector(\r\n  (state) => state.results.data,\r\n  (state, props) => props.match.params.sharedChartId,\r\n  (data, sharedChartId) => {\r\n    const chartId = _.toNumber(sharedChartId);\r\n    return data.filter((chart) => chart.sharedChartId === chartId);\r\n  }\r\n);\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport _ from 'lodash/fp';\r\nimport Select from 'react-select';\r\nimport classNames from 'classnames';\r\nimport localForage from 'localforage';\r\nimport { FaRedoAlt, FaSearch, FaArrowLeft } from 'react-icons/fa';\r\n\r\n// styles\r\nimport './leaderboard.scss';\r\n\r\n// components\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport CollapsibleBar from 'components/Shared/CollapsibleBar';\r\nimport ChartFilter from './ChartFilter';\r\nimport PresetsControl from './PresetsControl';\r\nimport Chart from './Chart';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\nimport { SORT, RANK_FILTER } from 'constants/leaderboard';\r\n\r\n// reducers\r\nimport { fetchChartsData } from 'reducers/charts';\r\nimport { setFilter, resetFilter, defaultFilter } from 'reducers/results';\r\nimport { selectPreset, openPreset } from 'reducers/presets';\r\n\r\n// utils\r\nimport { colorsArray } from 'utils/colors';\r\nimport { playersSelector, filteredDataSelector, sharedChartDataSelector } from 'reducers/selectors';\r\n\r\n// code\r\nconst sortingOptions = [\r\n  {\r\n    label: 'от новых скоров',\r\n    value: SORT.DEFAULT,\r\n  },\r\n  {\r\n    label: 'от новых скоров конкретного игрока',\r\n    value: SORT.NEW_SCORES_PLAYER,\r\n  },\r\n  // {\r\n  //   label: 'отставанию от остальных',\r\n  //   value: SORT.PROTAGONIST,\r\n  // },\r\n  {\r\n    label: 'от худших результатов (эло)',\r\n    value: SORT.RANK_ASC,\r\n  },\r\n  {\r\n    label: 'от лучших результатов (эло)',\r\n    value: SORT.RANK_DESC,\r\n  },\r\n  {\r\n    label: 'от худших результатов (pp)',\r\n    value: SORT.PP_ASC,\r\n  },\r\n  {\r\n    label: 'от лучших результатов (pp)',\r\n    value: SORT.PP_DESC,\r\n  },\r\n  {\r\n    label: 'от лёгких чартов',\r\n    value: SORT.EASIEST_SONGS,\r\n  },\r\n  {\r\n    label: 'от сложных чартов',\r\n    value: SORT.HARDEST_SONGS,\r\n  },\r\n];\r\n\r\nconst rankOptions = [\r\n  {\r\n    label: 'показывать все скоры',\r\n    value: RANK_FILTER.SHOW_ALL,\r\n  },\r\n  {\r\n    label: 'один лучший скор каждого игрока (ранк или нет)',\r\n    value: RANK_FILTER.SHOW_BEST,\r\n  },\r\n  {\r\n    label: 'только на ранке',\r\n    value: RANK_FILTER.SHOW_ONLY_RANK,\r\n  },\r\n  {\r\n    label: 'только без ранка',\r\n    value: RANK_FILTER.SHOW_ONLY_NORANK,\r\n  },\r\n];\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const isChartView = !!props.match.params.sharedChartId;\r\n\r\n  return {\r\n    isChartView,\r\n    players: playersSelector(state),\r\n    filteredData: isChartView ? sharedChartDataSelector(state, props) : filteredDataSelector(state),\r\n    filter: isChartView ? defaultFilter : state.results.filter,\r\n    error: state.charts.error || state.tracklist.error,\r\n    isLoading: state.charts.isLoading || state.tracklist.isLoading,\r\n    presets: state.presets.presets,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchChartsData,\r\n  setFilter,\r\n  resetFilter,\r\n  selectPreset,\r\n  openPreset,\r\n};\r\n\r\nclass Leaderboard extends Component {\r\n  static propTypes = {\r\n    match: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  state = { showItemsCount: 20 };\r\n\r\n  setFilter = _.curry((name, value) => {\r\n    const filter = { ...this.props.filter, [name]: value };\r\n    this.props.setFilter(filter);\r\n    localForage.setItem('filter', filter);\r\n  });\r\n\r\n  resetFilter = () => {\r\n    this.props.resetFilter();\r\n    localForage.setItem('filter', defaultFilter);\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchChartsData();\r\n  };\r\n\r\n  onTypeSongName = _.debounce(300, (value) => {\r\n    this.setFilter('song', value);\r\n  });\r\n\r\n  renderSimpleSearch() {\r\n    const { isLoading, filter } = this.props;\r\n    return (\r\n      <div className=\"simple-search\">\r\n        <div className=\"song-name _margin-right _margin-bottom\">\r\n          <Input\r\n            value={filter.song || ''}\r\n            placeholder=\"название песни...\"\r\n            className=\"form-control\"\r\n            onChange={this.onTypeSongName}\r\n          />\r\n        </div>\r\n        <div className=\"chart-range _margin-right _margin-bottom\">\r\n          <ChartFilter filterValue={filter.chartRange} onChange={this.setFilter('chartRange')} />\r\n        </div>\r\n        <div className=\"_flex-fill\" />\r\n        <div className=\"_flex-row _margin-bottom\">\r\n          <PresetsControl />\r\n          <button className=\"btn btn-sm btn-dark btn-icon _margin-right\" onClick={this.resetFilter}>\r\n            <FaRedoAlt /> сбросить фильтры\r\n          </button>\r\n          <button\r\n            disabled={isLoading}\r\n            className=\"btn btn-sm btn-dark btn-icon\"\r\n            onClick={this.onRefresh}\r\n          >\r\n            <FaSearch /> обновить\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFilters() {\r\n    const { players, filter } = this.props;\r\n    return (\r\n      <div className=\"filters\">\r\n        <div className=\"people-filters\">\r\n          <label className=\"label\">показывать чарты, которые сыграл:</label>\r\n          <div className=\"players-block\">\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">каждый из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'players', filter)}\r\n                onChange={this.setFilter('players')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и хоть один из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersOr', filter)}\r\n                onChange={this.setFilter('playersOr')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и никто из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersNot', filter)}\r\n                onChange={this.setFilter('playersNot')}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"people-filters\">\r\n          <div className=\"players-block\">\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">показывать ранк:</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"...\"\r\n                options={rankOptions}\r\n                value={_.getOr(null, 'rank', filter) || RANK_FILTER.SHOW_ALL}\r\n                onChange={this.setFilter('rank')}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Toggle\r\n            checked={_.getOr(false, 'showHiddenFromPreferences', filter)}\r\n            onChange={this.setFilter('showHiddenFromPreferences')}\r\n          >\r\n            показывать скрытых игроков\r\n          </Toggle>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSortings() {\r\n    const { players, filter } = this.props;\r\n    return (\r\n      <div className=\"sortings\">\r\n        <div>\r\n          <label className=\"label\">сортировка:</label>\r\n          <Select\r\n            placeholder=\"выберите сортировку\"\r\n            className=\"select\"\r\n            classNamePrefix=\"select\"\r\n            isClearable={false}\r\n            options={sortingOptions}\r\n            value={_.getOr(sortingOptions[0], 'sortingType', filter)}\r\n            onChange={this.setFilter('sortingType')}\r\n          />\r\n        </div>\r\n        {[\r\n          SORT.PROTAGONIST,\r\n          SORT.RANK_ASC,\r\n          SORT.RANK_DESC,\r\n          SORT.PP_ASC,\r\n          SORT.PP_DESC,\r\n          SORT.NEW_SCORES_PLAYER,\r\n        ].includes(_.get('sortingType.value', filter)) && (\r\n          <div>\r\n            <label className=\"label\">игрок:</label>\r\n            <Select\r\n              className={classNames('select players', {\r\n                'red-border': !_.get('protagonist', filter),\r\n              })}\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              value={_.getOr(null, 'protagonist', filter)}\r\n              onChange={this.setFilter('protagonist')}\r\n            />\r\n          </div>\r\n        )}\r\n        {[SORT.PROTAGONIST].includes(_.get('sortingType.value', filter)) && (\r\n          <div>\r\n            <label className=\"label\">не учитывать в сравнении:</label>\r\n            <Select\r\n              closeMenuOnSelect={false}\r\n              className=\"select players\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              isMulti\r\n              value={_.getOr([], 'excludeAntagonists', filter)}\r\n              onChange={this.setFilter('excludeAntagonists')}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, isChartView, filteredData, error, filter, presets } = this.props;\r\n    const { showItemsCount } = this.state;\r\n    const canShowMore = filteredData.length > showItemsCount;\r\n    const visibleData = _.slice(0, showItemsCount, filteredData);\r\n\r\n    const sortingType = _.get('sortingType.value', filter);\r\n    const showProtagonistEloChange = [SORT.RANK_ASC, SORT.RANK_DESC].includes(sortingType);\r\n    const showProtagonistPpChange = [SORT.PP_ASC, SORT.PP_DESC].includes(sortingType);\r\n    const highlightProtagonist = [\r\n      SORT.PROTAGONIST,\r\n      SORT.RANK_ASC,\r\n      SORT.RANK_DESC,\r\n      SORT.PP_ASC,\r\n      SORT.PP_DESC,\r\n      SORT.NEW_SCORES_PLAYER,\r\n    ].includes(sortingType);\r\n    const protagonistName = _.get('protagonist.value', filter);\r\n    const uniqueSelectedNames = _.slice(\r\n      0,\r\n      colorsArray.length,\r\n      _.uniq(\r\n        _.compact([\r\n          highlightProtagonist && protagonistName,\r\n          ..._.map('value', filter.players),\r\n          ..._.map('value', filter.playersOr),\r\n        ])\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div className=\"leaderboard-page\">\r\n        <div className=\"content\">\r\n          {isChartView && (\r\n            <div className=\"simple-search\">\r\n              <NavLink exact to={routes.leaderboard.path}>\r\n                <button className=\"btn btn-sm btn-dark btn-icon\">\r\n                  <FaArrowLeft /> ко всем чартам\r\n                </button>\r\n              </NavLink>\r\n            </div>\r\n          )}\r\n          {!isChartView && (\r\n            <>\r\n              <div className=\"search-block\">\r\n                {this.renderSimpleSearch()}\r\n                <CollapsibleBar title=\"фильтры\">{this.renderFilters()}</CollapsibleBar>\r\n                <CollapsibleBar title=\"сортировка\">{this.renderSortings()}</CollapsibleBar>\r\n              </div>\r\n              {!!presets.length && (\r\n                <div className=\"presets-buttons\">\r\n                  <span>пресеты:</span>\r\n                  {presets.map((preset) => (\r\n                    <ToggleButton\r\n                      key={preset.name}\r\n                      text={preset.name}\r\n                      className=\"btn btn-sm btn-dark _margin-right\"\r\n                      active={_.get('filter', preset) === filter}\r\n                      onToggle={() => {\r\n                        this.props.selectPreset(preset);\r\n                        this.props.openPreset();\r\n                      }}\r\n                    ></ToggleButton>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n          <div className=\"top-list\">\r\n            {isLoading && <Loader />}\r\n            {_.isEmpty(filteredData) && !isLoading && (error ? error.message : 'ничего не найдено')}\r\n            {!isLoading &&\r\n              visibleData.map((chart, chartIndex) => {\r\n                return (\r\n                  <Chart\r\n                    showHiddenPlayers={isChartView || filter.showHiddenFromPreferences}\r\n                    key={chart.sharedChartId}\r\n                    chart={chart}\r\n                    chartIndex={chartIndex}\r\n                    showProtagonistEloChange={showProtagonistEloChange}\r\n                    showProtagonistPpChange={showProtagonistPpChange}\r\n                    uniqueSelectedNames={uniqueSelectedNames}\r\n                    protagonistName={protagonistName}\r\n                  />\r\n                );\r\n              })}\r\n            {!isLoading && canShowMore && (\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() =>\r\n                  this.setState((state) => ({ showItemsCount: state.showItemsCount + 10 }))\r\n                }\r\n              >\r\n                show more...\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Leaderboard);\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n// import numeral from 'numeral';\r\nimport classNames from 'classnames';\r\nimport { GiQueenCrown } from 'react-icons/gi';\r\nimport { FaAngleDoubleUp, FaAngleDoubleDown } from 'react-icons/fa';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\nimport Flag from 'components/Shared/Flag';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\n// import CheckBox from 'components/Shared/CheckBox';\r\n\r\nimport { getRankImg } from 'utils/exp';\r\n\r\nconst getGradeImg = (grade) => (\r\n  <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n);\r\n\r\nexport default function RankingList({ ranking, isLoading, preferences, updatePreferences }) {\r\n  return (\r\n    <div className=\"ranking-list\">\r\n      {_.isEmpty(ranking) && !isLoading && 'ничего не найдено'}\r\n      {isLoading && <Loader />}\r\n      {!isLoading && (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"place\"></th>\r\n              <th className=\"change\"></th>\r\n              <th className=\"exp-rank\">rank</th>\r\n              <th className=\"name\">name</th>\r\n              <th className=\"name name-piu\">piu name</th>\r\n              <th className=\"rating\">elo</th>\r\n              <th className=\"rating-change-cell\"></th>\r\n              <th className=\"rating\">pp</th>\r\n              {/* <th className=\"total-score\">total score</th> */}\r\n              <th className=\"grades sss\">{getGradeImg('SSS')}</th>\r\n              <th className=\"grades ss\">{getGradeImg('SS')}</th>\r\n              <th className=\"grades s\">{getGradeImg('S')}</th>\r\n              <th className=\"grades a\">{getGradeImg('A+')}</th>\r\n              <th className=\"grades b\">{getGradeImg('B')}</th>\r\n              <th className=\"grades c\">{getGradeImg('C')}</th>\r\n              <th className=\"grades d\">{getGradeImg('D')}</th>\r\n              <th className=\"grades f\">{getGradeImg('F')}</th>\r\n              <th className=\"playcount\">scores</th>\r\n              {/* <th className=\"calories\">kcal</th> */}\r\n              <th className=\"accuracy\">accuracy</th>\r\n              <th className=\"hide-col\"> </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {ranking.map((player, playerIndex) => {\r\n              const isHidden = preferences.playersHiddenStatus[player.id];\r\n              if (isHidden && !preferences.showHiddenPlayersInRanking) {\r\n                return null;\r\n              }\r\n              return (\r\n                <tr\r\n                  className={classNames('player', { 'hidden-player': isHidden })}\r\n                  key={player.name}\r\n                >\r\n                  <td className=\"place\">\r\n                    {playerIndex === 0 ? <GiQueenCrown /> : `#${playerIndex + 1}`}\r\n                  </td>\r\n                  <td className=\"change\">\r\n                    {player.change > 0 && (\r\n                      <div className=\"change-holder up\">\r\n                        <span>{player.change}</span>\r\n                        <FaAngleDoubleUp />\r\n                      </div>\r\n                    )}\r\n                    {player.change < 0 && (\r\n                      <div className=\"change-holder down\">\r\n                        <span>{-player.change}</span>\r\n                        <FaAngleDoubleDown />\r\n                      </div>\r\n                    )}\r\n                    {!!player.change && _.isString(player.change) && (\r\n                      <div className=\"change-holder text\">\r\n                        <span>{player.change}</span>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"exp-rank\">{getRankImg(player.expRank)}</td>\r\n                  <td className=\"name\">\r\n                    <div className=\"name-container\">\r\n                      <Flag region={player.region} />\r\n                      <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                        {player.name}\r\n                      </NavLink>\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"name name-piu\">\r\n                    <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                      {player.nameArcade}\r\n                    </NavLink>\r\n                  </td>\r\n                  <td className=\"rating\">{player.rating}</td>\r\n                  <td className=\"rating-change-cell\">\r\n                    {!!player.prevRating && player.prevRating !== player.rating && (\r\n                      <span\r\n                        className={classNames('rating-change', {\r\n                          down: player.prevRating > player.rating,\r\n                          up: player.prevRating < player.rating,\r\n                        })}\r\n                      >\r\n                        {player.prevRating < player.rating ? '+' : ''}\r\n                        {player.rating - player.prevRating}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"rating secondary\">{Math.round(player.pp.pp)}</td>\r\n                  <td className=\"grades sss\">{player.grades.SSS}</td>\r\n                  <td className=\"grades ss\">{player.grades.SS}</td>\r\n                  <td className=\"grades s\">{player.grades.S}</td>\r\n                  <td className=\"grades a\">{player.grades.A}</td>\r\n                  <td className=\"grades b\">{player.grades.B}</td>\r\n                  <td className=\"grades c\">{player.grades.C}</td>\r\n                  <td className=\"grades d\">{player.grades.D}</td>\r\n                  <td className=\"grades f\">{player.grades.F}</td>\r\n                  <td className=\"playcount\">{player.count}</td>\r\n                  <td className=\"accuracy\">\r\n                    {player.accuracy ? `${player.accuracy.toFixed(2)}%` : ''}\r\n                  </td>\r\n                  <td className=\"hide-col\">\r\n                    <Toggle\r\n                      onChange={() => {\r\n                        updatePreferences(\r\n                          _.set(['playersHiddenStatus', player.id], !isHidden, preferences)\r\n                        );\r\n                      }}\r\n                      checked={!isHidden}\r\n                    />\r\n                    {/* <CheckBox\r\n                      onChange={() => {\r\n                        updatePreferences(\r\n                          _.set(['playersHiddenStatus', player.id], !isHidden, preferences)\r\n                        );\r\n                      }}\r\n                      isChecked={isHidden}\r\n                    /> */}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function RankingFaq() {\r\n  return (\r\n    <div className=\"faq\">\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Как считается рейтинг?</div>\r\n        <div className=\"answer\">\r\n          A: Используется <a href=\"https://en.wikipedia.org/wiki/Elo_rating_system\">рейтинг Эло</a>,\r\n          широко используемый в шахматах и других играх, слегка модицированный под условия игры на\r\n          пампе. Средний рейтинг - 1000. Коэффициент К зависит от уровня чарта (более сложные чарты\r\n          сильнее влияют на рейтинг). Количество очков влияет на заработанный рейтинг (маленький\r\n          отрыв от противника не даст так много очков как большой отрыв).\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Что такое рр и чем оно отличается от эло?</div>\r\n        <div className=\"answer\">\r\n          A: РР (performance points) - система очков, взятая из osu!. Эло - система рейтинга, взятая\r\n          из шахмат. Основные отличия:\r\n          <br />\r\n          С эло твои очки зависят от других игроков на этом чарте, с рр твои очки зависят только от\r\n          того, как ты сыграешь чарт.\r\n          <br />\r\n          С эло можно потерять очки или заставить другого игрока их потерять, с рр можно только\r\n          набирать больше очков.\r\n          <br />\r\n          С эло намного проще кого-то обогнать, с рр люди редко меняются местами в рейтинге.\r\n          <br />\r\n          Эло показывает кто кого обыгрывает в последнее время, а рр показывает, кто на каком\r\n          примерно уровне по скиллу.\r\n          <br />\r\n          Сейчас рейтинг сортируется по Эло. РР выступает в качестве дополнительной инфы для\r\n          интереса, плюс используется как стартовое значение Эло.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Система Эло используется для игр 1 на 1, как она используется на пампе, где на одном\r\n          чарте играет много игроков?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: Рекорды на одном чарте делятся на несколько игр 1 на 1. Если есть 3 игрока: A, B, C; то\r\n          считается, что было 3 отдельные игры: A vs B, A vs C, B vs C.\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Как считается сумма рр?</div>\r\n        <div className=\"answer\">\r\n          A: Сначала все скоры игрока сортируются по рр. Затем в общую сумму рр добавляется 100% от\r\n          лучшего скора, 95% от второго скора, 90% от третьего, 86% от 4-го и так далее. (Формула\r\n          коэффициента - 0.95^N). Таким образом, на общую сумму рр больше всего влияют самые лучшие\r\n          результаты человека за всё время, и чтобы поднять свой уровень рр, нужно получать новые\r\n          топовые результаты (и поднимать свой скилл).\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Учитываются ли рекорды на ранке в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: Да. Как минимум потому что у нас есть много рекордов, взятых с машин бестов, и мы не\r\n          знаем наверняка, на ранке они или нет. Если у игрока в топе есть два скора - на ранке и\r\n          без ранка, используется тот, где больше очков.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Почему меня нет в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: В таблицу попадают только те, у кого есть хотя бы 20 игр 1 на 1. Первые 20 игр\r\n          используются для определения изначального рейтинга.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Почему суммарное количество оценок S-A-B не совпадает с общим количеством скоров?\r\n        </div>\r\n        <div className=\"answer\">A: Не для каждого результата известна оценка.</div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Если у меня есть несколько рекордов на А, несколько на А+, как считается суммарное\r\n          количество грейдов в таблице?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: В каждой колонке учитываются обе буквы - и треснутые, и с удержанным лайфом. То есть и\r\n          А, и А+ идут в колонку А. Точно так же для B, C, D.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Убери аккураси из таблицы!</div>\r\n        <div className=\"answer\">A: Грем, это секция для вопросов.</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import _ from 'lodash/fp';\r\n\r\nimport { fetchJson, postJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `PREFERENCES/LOADING`;\r\nconst SUCCESS = `PREFERENCES/SUCCESS`;\r\nconst ERROR = `PREFERENCES/ERROR`;\r\n// const UPDATE_LOADING = `PREFERENCES/UPDATE/LOADING`;\r\n// const UPDATE_SUCCESS = `PREFERENCES/UPDATE/SUCCESS`;\r\n// const UPDATE_ERROR = `PREFERENCES/UPDATE/ERROR`;\r\nconst CHANGE = `PREFERENCES/CHANGE`;\r\n\r\nconst defaultPreferences = {\r\n  playersHiddenStatus: {},\r\n};\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: defaultPreferences,\r\n  error: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: defaultPreferences,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: _.merge(defaultPreferences, action.data),\r\n      };\r\n    case CHANGE:\r\n      return {\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchPreferences = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/profile/preferences` }));\r\n      dispatch({ type: SUCCESS, data: data.preferences });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchUserPreferences = (id) => {\r\n  return async (dispatch) => {\r\n    const data = await dispatch(fetchJson({ url: `${HOST}/player/${id}/preferences` }));\r\n    return data;\r\n  };\r\n};\r\n\r\nexport const updatePreferences = (preferences) => {\r\n  return async (dispatch) => {\r\n    // dispatch({ type: LOADING });\r\n    dispatch({ type: CHANGE, data: preferences });\r\n    try {\r\n      await dispatch(\r\n        postJson({\r\n          url: `${HOST}/profile/preferences`,\r\n          body: { preferences },\r\n        })\r\n      );\r\n      // dispatch({ type: SUCCESS, data: data.preferences });\r\n      // return data.preferences;\r\n    } catch (error) {\r\n      // dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle } from 'react-icons/fa';\r\nimport { Link, Route, withRouter } from 'react-router-dom';\r\nimport { createSelector } from 'reselect';\r\nimport _ from 'lodash/fp';\r\n\r\n// styles\r\nimport './ranking.scss';\r\n\r\n// components\r\nimport RankingList from './RankingList';\r\nimport RankingFaq from './RankingFaq';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport { fetchChartsData } from 'reducers/charts';\r\nimport { updatePreferences } from 'reducers/preferences';\r\n\r\n// utils\r\n\r\n// code\r\nconst rankingSelector = createSelector(\r\n  (state) => state.results.profiles,\r\n  // _.flow(_.values, _.orderBy(['pp.pp'], ['desc']))\r\n  _.flow(_.values, _.orderBy(['ratingRaw'], ['desc']))\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    preferences: state.preferences.data,\r\n    ranking: rankingSelector(state),\r\n    error: state.charts.error || state.tracklist.error,\r\n    isLoading:\r\n      state.charts.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchChartsData,\r\n  updatePreferences,\r\n};\r\n\r\nclass Ranking extends Component {\r\n  static propTypes = {\r\n    ranking: toBe.array,\r\n    error: toBe.object,\r\n    preferences: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n    updatePreferences: toBe.func.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    ranking: [],\r\n  };\r\n\r\n  onChangeHidingPlayers = () => {\r\n    const { preferences, updatePreferences } = this.props;\r\n\r\n    updatePreferences(\r\n      _.set(['showHiddenPlayersInRanking'], !preferences.showHiddenPlayersInRanking, preferences)\r\n    );\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchChartsData();\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, ranking, error, preferences, updatePreferences } = this.props;\r\n    return (\r\n      <div className=\"ranking-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.path}\r\n              render={() => (\r\n                <>\r\n                  <button\r\n                    className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                    onClick={this.onChangeHidingPlayers}\r\n                  >\r\n                    {preferences.showHiddenPlayersInRanking\r\n                      ? 'скрыть невыбранных'\r\n                      : 'показать всех'}\r\n                  </button>\r\n                  <Link to={routes.ranking.faq.path}>\r\n                    <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n                      <FaQuestionCircle /> faq\r\n                    </button>\r\n                  </Link>\r\n                  <button\r\n                    disabled={isLoading}\r\n                    className=\"btn btn-sm btn-dark btn-icon\"\r\n                    onClick={this.onRefresh}\r\n                  >\r\n                    <FaSearch /> обновить\r\n                  </button>\r\n                </>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.faq.path}\r\n              render={() => (\r\n                <Link to={routes.ranking.path}>\r\n                  <button className=\"btn btn-sm btn-dark btn-icon\">назад</button>\r\n                </Link>\r\n              )}\r\n            />\r\n          </div>\r\n          <Route\r\n            exact\r\n            path={routes.ranking.path}\r\n            render={() => (\r\n              <RankingList\r\n                ranking={ranking}\r\n                isLoading={isLoading}\r\n                preferences={preferences}\r\n                updatePreferences={updatePreferences}\r\n              />\r\n            )}\r\n          />\r\n          <Route exact path={routes.ranking.faq.path} component={RankingFaq} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Ranking));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\nimport { FaPlay } from 'react-icons/fa';\r\nimport { MdExpandMore } from 'react-icons/md';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { parseDate } from 'utils/date';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nimport { routes } from 'constants/routes';\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport './most-played.scss';\r\n\r\nexport default connect((state) => ({ charts: state.results.sharedCharts }), { fetchJson })(\r\n  ({ playerId, charts, fetchJson }) => {\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [limit, setLimit] = useState(10);\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n      setLoading(true);\r\n      fetchJson({\r\n        url: `${HOST}/player/${playerId}/mostPlayed?limit=${limit}`,\r\n      })\r\n        .then((result) => {\r\n          setLoading(false);\r\n          if (result.success) {\r\n            setData(result.data);\r\n          }\r\n        })\r\n        .catch(() => {\r\n          setLoading(false);\r\n        });\r\n    }, [playerId, limit, fetchJson]);\r\n\r\n    return (\r\n      <div className=\"most-played\">\r\n        {isLoading && <Loader />}\r\n        {data.map((item) => {\r\n          const chart = charts[item.shared_chart];\r\n          return (\r\n            <div className=\"chart\" key={item.shared_chart}>\r\n              <div\r\n                className={classNames('chart-name', {\r\n                  single: chart.chartType === 'S',\r\n                  singlep: chart.chartType === 'SP',\r\n                  doublep: chart.chartType === 'DP',\r\n                  double: chart.chartType === 'D',\r\n                  coop: chart.chartType === 'COOP',\r\n                })}\r\n              >\r\n                <span className=\"chart-letter\">{chart.chartType}</span>\r\n                <span className=\"chart-number\">{chart.chartLevel}</span>\r\n              </div>\r\n              <div className=\"song-name\">\r\n                <NavLink\r\n                  exact\r\n                  to={routes.leaderboard.sharedChart.getPath({\r\n                    sharedChartId: chart.sharedChartId,\r\n                  })}\r\n                >\r\n                  {chart.song}\r\n                </NavLink>\r\n              </div>\r\n              <div className=\"date\">\r\n                {item.latestDate ? getTimeAgo(parseDate(item.latestDate)) : null}\r\n              </div>\r\n              <div className=\"playcount\">\r\n                <FaPlay />\r\n                <span>{item.count}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        {limit === _.size(data) && (\r\n          <button\r\n            className=\"show-more btn btn-sm btn-dark btn-icon\"\r\n            onClick={() => setLimit(limit + 10)}\r\n          >\r\n            <MdExpandMore /> больше\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React from 'react';\r\n\r\nimport { ranks, getRankImg } from 'utils/exp';\r\n\r\nexport default function ExpFaq() {\r\n  return (\r\n    <div className=\"faq-exp\">\r\n      <div className=\"faq-header\">\r\n        <strong>Опыт</strong> игрока основывается на количестве сыгранных песен и чартов.\r\n        <br />\r\n        Чем выше уровень чарта и чем лучше оценка на чарте, тем больше опыта он даёт.\r\n        <br />\r\n        Повторные попытки на тех же чартах не дают больше опыта. Чтобы поднимать свой уровень, играй\r\n        новые треки и чарты.\r\n      </div>\r\n      <div className=\"faq-header\">Список уровней и необходимый опыт для их получения:</div>\r\n      <div className=\"ranks-list\">\r\n        {ranks.map(rank => (\r\n          <div key={rank.threshold} className=\"rank\">\r\n            <div className=\"exp-rank\">{getRankImg(rank)}</div>\r\n            <div className=\"threshold\">{rank.threshold}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const SET_FILTER = `PROFILES/SET_FILTER`;\r\nconst RESET_FILTER = `PROFILES/RESET_FILTER`;\r\n\r\nexport const defaultFilter = {};\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  filter: defaultFilter,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setProfilesFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\n\r\nexport const resetProfilesFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n","import _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport moment from 'moment';\r\n\r\nconst cutRange = (array, range) => {\r\n  const startIndex = _.findIndex(item => item.date > range[0], array);\r\n  const endIndex = _.findLastIndex(item => item.date < range[1], array);\r\n  let firstElement =\r\n    startIndex > 0 ? array[startIndex - 1] : startIndex === 0 ? array[startIndex] : _.last(array);\r\n  let lastElement = endIndex > -1 ? array[endIndex] : _.first(array);\r\n  firstElement = { ...firstElement, date: range[0] };\r\n  lastElement = { ...lastElement, date: range[1] };\r\n  const middleElements =\r\n    startIndex > -1 && endIndex > -1 ? array.slice(startIndex, endIndex + 1) : [];\r\n\r\n  return [firstElement, ...middleElements, lastElement];\r\n};\r\n\r\nconst defaultGradesDistribution = {\r\n  SSS: 0,\r\n  SS: 0,\r\n  S: 0,\r\n  'A+': 0,\r\n  A: 0,\r\n  B: 0,\r\n  C: 0,\r\n  D: 0,\r\n  F: 0,\r\n};\r\nconst defaultGradesWithLevelsDistribution = _.flow(\r\n  _.flatMap(type => {\r\n    return _.flow(\r\n      _.toPairs,\r\n      _.map(([grade, value]) => [`${type}-${grade}`, value])\r\n    )(defaultGradesDistribution);\r\n  }),\r\n  _.fromPairs\r\n)(['S', 'D']);\r\n\r\nexport const profileSelectorCreator = idParamName =>\r\n  createSelector(\r\n    (state, props) => _.toInteger(props.match.params[idParamName]),\r\n    state => state.charts.isLoading || state.results.isLoadingRanking,\r\n    state => state.results.profiles,\r\n    state => state.profiles.filter,\r\n    state => state.tracklist.data,\r\n    (id, isLoading, profiles, filter, tracklist) => {\r\n      const profile = profiles[id];\r\n      if (_.isEmpty(profile) || isLoading) {\r\n        return null;\r\n      }\r\n      const levelsDistribution = _.flow(\r\n        _.get('resultsByLevel'),\r\n        _.toPairs,\r\n        _.map(([x, y]) => ({\r\n          x: _.toInteger(x),\r\n          S:\r\n            (_.size(\r\n              _.filter(res => res.chart.chartType === 'S' || res.chart.chartType === 'SP', y)\r\n            ) /\r\n              tracklist.singlesLevels[x]) *\r\n            100,\r\n          D:\r\n            (-_.size(\r\n              _.filter(res => res.chart.chartType === 'D' || res.chart.chartType === 'DP', y)\r\n            ) /\r\n              tracklist.doublesLevels[x]) *\r\n            100,\r\n        }))\r\n      )(profile);\r\n      const gradesData = _.flow(\r\n        _.get('resultsByLevel'),\r\n        _.toPairs,\r\n        _.map(\r\n          _.update('[1].result.grade', grade =>\r\n            grade && grade.includes('+') && grade !== 'A+' ? grade.replace('+', '') : grade\r\n          )\r\n        )\r\n      )(profile);\r\n      const gradesDistribution = _.flow(\r\n        _.map(([x, y]) => ({\r\n          x: _.toInteger(x),\r\n          ...defaultGradesDistribution,\r\n          ..._.omit('?', _.mapValues(_.size, _.groupBy('result.grade', y))),\r\n        })),\r\n        _.map(item => {\r\n          const grades = _.pick(Object.keys(defaultGradesDistribution), item);\r\n          const sum = _.sum(_.values(grades));\r\n          return {\r\n            ...item,\r\n            gradesValues: grades,\r\n            ...(sum === 0 ? grades : _.mapValues(value => (100 * value) / sum, grades)),\r\n          };\r\n        })\r\n      )(gradesData);\r\n      const gradesAndLevelsDistribution = _.flow(\r\n        _.map(([x, y]) => {\r\n          const groupedResults = _.groupBy('result.grade', y);\r\n          const counts = _.omit(\r\n            '?',\r\n            _.mapValues(\r\n              _.countBy(res => {\r\n                return res.chart.chartType === 'S' || res.chart.chartType === 'SP'\r\n                  ? 'S'\r\n                  : res.chart.chartType === 'D' || res.chart.chartType === 'DP'\r\n                  ? 'D'\r\n                  : 'Other';\r\n              }),\r\n              groupedResults\r\n            )\r\n          );\r\n          const reduced = _.reduce(\r\n            (acc, [grade, levelsData]) => {\r\n              const accData = _.flow(\r\n                _.toPairs,\r\n                _.map(([type, count]) => [\r\n                  `${type}-${grade}`,\r\n                  type === 'S'\r\n                    ? (count / tracklist.singlesLevels[x]) * 100\r\n                    : (-count / tracklist.doublesLevels[x]) * 100,\r\n                ]),\r\n                _.fromPairs\r\n              )(levelsData);\r\n              return { ...acc, ...accData };\r\n            },\r\n            {},\r\n            _.toPairs(counts)\r\n          );\r\n\r\n          return {\r\n            x: _.toInteger(x),\r\n            ...defaultGradesWithLevelsDistribution,\r\n            ...reduced,\r\n          };\r\n        })\r\n      )(gradesData);\r\n\r\n      const lastTickRating = _.last(profile.ratingHistory).date;\r\n      const lastTickRanking = _.last(profile.rankingHistory).date;\r\n      const lastTick = lastTickRating > lastTickRanking ? lastTickRating : lastTickRanking; // End graph at either point\r\n      const firstTick = _.first(profile.ratingHistory).date; // Start graph from the first battle of this player\r\n      const lastDay = moment(lastTick).endOf('day');\r\n      const firstDay = moment(firstTick).startOf('day');\r\n      const minMaxRange = [firstDay / 1000 / 60 / 60 / 24, lastDay / 1000 / 60 / 60 / 24];\r\n\r\n      const filterRange = filter.dayRange || [\r\n        Math.max(minMaxRange[0], minMaxRange[1] - 30),\r\n        minMaxRange[1],\r\n      ];\r\n      const dayRangeMs = [\r\n        +moment(filterRange[0] * 1000 * 60 * 60 * 24).startOf('day'),\r\n        +moment(filterRange[1] * 1000 * 60 * 60 * 24).endOf('day'),\r\n      ];\r\n      const placesChanges = cutRange(profile.rankingHistory, dayRangeMs);\r\n      const ratingChanges = cutRange(profile.ratingHistory, dayRangeMs);\r\n\r\n      const rank = 1 + _.findIndex({ id }, _.orderBy(['ratingRaw'], ['desc'], _.values(profiles)));\r\n\r\n      return {\r\n        ...profile,\r\n        rank,\r\n        minMaxRange,\r\n        filterRange,\r\n        levelsDistribution,\r\n        gradesDistribution,\r\n        gradesAndLevelsDistribution,\r\n        placesChanges,\r\n        ratingChanges,\r\n      };\r\n    }\r\n  );\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle, FaTimes, FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport ReactModal from 'react-modal';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport Select from 'react-select';\r\nimport moment from 'moment';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as RechartsTooltip,\r\n  ReferenceLine,\r\n  CartesianGrid,\r\n  Line,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Label,\r\n  Scatter,\r\n  ScatterChart,\r\n} from 'recharts';\r\nimport _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\n\r\n// styles\r\nimport './profile.scss';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\nimport { DEBUG } from 'constants/env';\r\n\r\n// components\r\nimport Range from 'components/Shared/Range';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport MostPlayed from './MostPlayed';\r\nimport ExpFaq from './ExpFaq';\r\n\r\n// reducers\r\nimport { fetchChartsData } from 'reducers/charts';\r\nimport { setProfilesFilter, resetProfilesFilter } from 'reducers/profiles';\r\n\r\n// utils\r\nimport { profileSelectorCreator } from 'utils/profiles';\r\nimport { parseDate } from 'utils/date';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { achievements } from 'utils/achievements';\r\nimport { getRankImg } from 'utils/exp';\r\n\r\n// code\r\nconst MIN_GRAPH_HEIGHT = undefined;\r\n\r\nconst profileSelector = profileSelectorCreator('id');\r\n\r\nexport const otherPlayersSelector = createSelector(\r\n  (state) => state.results.players,\r\n  (state, props) => _.toNumber(props.match.params.id),\r\n  (players, id) =>\r\n    _.flow(\r\n      _.toPairs,\r\n      _.map(([ind, { nickname, arcade_name, id }]) => ({\r\n        label: `${nickname} (${arcade_name})`,\r\n        value: nickname,\r\n        id: _.toNumber(id),\r\n      })),\r\n      _.remove((it) => it.id === id),\r\n      _.sortBy((it) => _.toLower(it.label))\r\n    )(players)\r\n);\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    profile: profileSelector(state, props),\r\n    otherPlayers: otherPlayersSelector(state, props),\r\n    tracklist: state.tracklist.data,\r\n    filter: state.profiles.filter,\r\n    error: state.charts.error || state.tracklist.error,\r\n    sharedCharts: state.results.sharedCharts,\r\n    isLoading:\r\n      state.charts.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchChartsData,\r\n  setProfilesFilter,\r\n  resetProfilesFilter,\r\n};\r\n\r\nclass Profile extends Component {\r\n  static propTypes = {\r\n    profile: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    profile: {},\r\n  };\r\n\r\n  state = {\r\n    isLevelGraphCombined: true,\r\n    showFaq: false,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetProfilesFilter();\r\n  }\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchChartsData();\r\n  };\r\n\r\n  onChangeDayRange = (range) => {\r\n    const { filter } = this.props;\r\n    this.props.setProfilesFilter({\r\n      ...filter,\r\n      dayRange: range,\r\n    });\r\n  };\r\n\r\n  onShowFaq = () => {\r\n    this.setState({ showFaq: true });\r\n  };\r\n\r\n  onHideFaq = () => {\r\n    this.setState({ showFaq: false });\r\n  };\r\n\r\n  renderRankingHistory() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={profile.ratingChanges} margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={(value) => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={['dataMin - 100', 'dataMax + 100']}\r\n            tickFormatter={Math.round}\r\n            width={40}\r\n          />\r\n          <ReferenceLine y={1000} stroke=\"white\" />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Rating: {Math.round(payload[0].value)}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  circleShape = (args) => (\r\n    <circle key={args.key} cx={args.cx} cy={args.cy} r={4} fill={args.fill}></circle>\r\n  );\r\n  renderAccuracyPoints(interpolated = false) {\r\n    const { profile, sharedCharts } = this.props;\r\n    const pointsByType = _.groupBy(([, , chartId]) => {\r\n      const type = sharedCharts[chartId].chartType;\r\n      return type === 'D' || type === 'DP';\r\n    }, profile.accuracyPointsRaw);\r\n    if (!interpolated) {\r\n      return (\r\n        <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n          <ScatterChart margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis\r\n              dataKey=\"[0]\"\r\n              type=\"number\"\r\n              domain={[1, 28]}\r\n              tickFormatter={(value) => Math.round(value)}\r\n              ticks={[1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27]}\r\n            />\r\n            <YAxis\r\n              dataKey=\"[1]\"\r\n              type=\"number\"\r\n              domain={[0, 100]}\r\n              width={40}\r\n              tickFormatter={(value) => Math.round(value) + '%'}\r\n            />\r\n            <Scatter data={pointsByType.true} shape={this.circleShape} fill=\"#169c16\" />\r\n            <Scatter data={pointsByType.false} shape={this.circleShape} fill=\"#af2928\" />\r\n            <RechartsTooltip\r\n              isAnimationActive={false}\r\n              content={({ active, payload, label }) => {\r\n                if (!payload || !payload[0] || !payload[1]) {\r\n                  return null;\r\n                }\r\n                const chart = payload[0].payload[2] && sharedCharts[payload[0].payload[2]];\r\n                return (\r\n                  <div className=\"history-tooltip\">\r\n                    <div>Level: {payload[0].value}</div>\r\n                    <div>Accuracy: {payload[1].value}%</div>\r\n                    {chart && (\r\n                      <div>\r\n                        {chart.song} {chart.chartLabel} ({chart.interpolatedDifficulty.toFixed(1)})\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                );\r\n              }}\r\n            />\r\n          </ScatterChart>\r\n        </ResponsiveContainer>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"[0]\"\r\n            type=\"number\"\r\n            domain={[1, 28]}\r\n            tickFormatter={(value) => Math.round(value)}\r\n          />\r\n          <YAxis domain={[0, 100]} width={40} />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{payload[0].payload[0]}</div>\r\n                  {payload && payload[0] && <div>Acc: #{payload[0].value}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            data={profile.accuracyPointsInterpolated}\r\n            isAnimationActive={false}\r\n            dataKey=\"[1]\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderPlaceHistory() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={profile.placesChanges} margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={(value) => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={[1, (dataMax) => (dataMax < 3 ? dataMax + 2 : dataMax + 1)]}\r\n            interval={0}\r\n            reversed\r\n            width={40}\r\n          />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Place: #{payload[0].value}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGrades() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <BarChart\r\n          data={profile.gradesDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {_.filter((item) => item.value > 0, payload).map((item) => (\r\n                    <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                      {item.name}: {payload[0].payload.gradesValues[item.name]}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            domain={[0, 100]}\r\n            ticks={[0, 50, 100]}\r\n            tickFormatter={(x) => `${Math.round(x)}%`}\r\n            width={40}\r\n          />\r\n          <Legend />\r\n          <Bar dataKey=\"SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"F\" fill=\"#774949\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradesWithLevels() {\r\n    const { profile, tracklist } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={0.74}>\r\n        <BarChart\r\n          data={profile.gradesAndLevelsDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n          stackOffset=\"sign\"\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              const doubleItems = _.filter(\r\n                (item) => item.value !== 0 && item.dataKey.startsWith('D'),\r\n                payload\r\n              );\r\n              const singleItems = _.filter(\r\n                (item) => item.value !== 0 && item.dataKey.startsWith('S'),\r\n                payload\r\n              );\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {!!singleItems.length && (\r\n                    <>\r\n                      <div>Single:</div>\r\n                      {singleItems.map((item) => (\r\n                        <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                          {item.name.slice(2)}: {Math.round(Math.abs(item.value))}% (\r\n                          {Math.round((tracklist.singlesLevels[item.payload.x] * item.value) / 100)}\r\n                          /{tracklist.singlesLevels[item.payload.x]})\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                  {!!doubleItems.length && (\r\n                    <>\r\n                      <div>Double:</div>\r\n                      {doubleItems.map((item) => (\r\n                        <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                          {item.name.slice(2)}: {Math.round(Math.abs(item.value))}% (\r\n                          {Math.round(\r\n                            (tracklist.doublesLevels[item.payload.x] * -item.value) / 100\r\n                          )}\r\n                          /{tracklist.doublesLevels[item.payload.x]})\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            tickFormatter={(x) => `${Math.round(Math.abs(x))}%`}\r\n            width={40}\r\n            domain={[(dataMin) => Math.min(dataMin, -10), (dataMax) => Math.max(10, dataMax)]}\r\n          />\r\n          <Bar dataKey=\"S-SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Label value=\"Double\" offset={0} position=\"insideBottomLeft\" />\r\n          <Label value=\"Single\" offset={0} position=\"insideTopLeft\" />\r\n          <ReferenceLine y={0} stroke=\"#bbb\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderLevels() {\r\n    const { profile, tracklist } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <BarChart\r\n          data={profile.levelsDistribution}\r\n          stackOffset=\"sign\"\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              const totalD = tracklist.doublesLevels[payload[0].payload.x];\r\n              const totalS = tracklist.singlesLevels[payload[0].payload.x];\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {totalS > 0 && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n                      Single: {Math.abs(payload[1].value).toFixed(1)}% (\r\n                      {Math.round((payload[1].value * totalS) / 100)}/{totalS})\r\n                    </div>\r\n                  )}\r\n                  {totalD > 0 && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n                      Double: {Math.abs(payload[0].value).toFixed(1)}% (\r\n                      {Math.round((Math.abs(payload[0].value) * totalD) / 100)}/{totalD})\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            tickFormatter={(x) => Math.round(Math.abs(x)) + '%'}\r\n            width={40}\r\n            domain={[(dataMin) => Math.min(dataMin, -10), (dataMax) => Math.max(10, dataMax)]}\r\n          />\r\n          <RechartsTooltip />\r\n          <ReferenceLine y={0} stroke=\"#555\" />\r\n          <Legend />\r\n          <Bar dataKey=\"D\" fill=\"#169c16\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#af2928\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradeBlock(type, grade) {\r\n    const { profile } = this.props;\r\n    const obj = profile.progress[type];\r\n    const typeLetter = type === 'double' ? 'D' : 'S';\r\n    const progr = Math.floor((obj[`${grade}-bonus-level-coef`] || 0) * 100);\r\n    const minNumber = obj[`${grade}-bonus-level-min-number`];\r\n    const currentNumber = obj[`${grade}-bonus-level-achieved-number`];\r\n    const levelString = obj[`${grade}-bonus-level`]\r\n      ? `${typeLetter}${obj[`${grade}-bonus-level`]}`\r\n      : '?';\r\n    return (\r\n      <div className=\"grade-block\">\r\n        <div className=\"grade-letter\">\r\n          <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n        </div>\r\n        <div className=\"grade-level\">{levelString}</div>\r\n        <div className=\"grade-progress\">\r\n          {progr}% ({progr === 100 ? minNumber : currentNumber}/{minNumber})\r\n        </div>\r\n        <div\r\n          className={classNames('progress-background', {\r\n            complete: progr === 100,\r\n            zero: progr === 0,\r\n          })}\r\n          style={{\r\n            height: `${progr}%`,\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderAchievement(achName, achievement) {\r\n    const Icon = achievements[achName].icon;\r\n    const description = achievements[achName].description;\r\n    return (\r\n      <Tooltip\r\n        key={achName}\r\n        content={<div>{description}</div>}\r\n        tooltipClassName=\"pumpking-tooltip achievement-tooltip\"\r\n      >\r\n        <div className=\"ach-block\">\r\n          {Icon && (\r\n            <div className=\"ach-icon\">\r\n              <Icon />\r\n            </div>\r\n          )}\r\n          <div className=\"ach-name\">{achName}</div>\r\n          <div\r\n            className={classNames('progress-background', {\r\n              complete: achievement.progress === 100,\r\n              zero: achievement.progress === 0,\r\n            })}\r\n            style={{\r\n              height: `${Math.round(achievement.progress)}%`,\r\n            }}\r\n          />\r\n        </div>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  renderProfile() {\r\n    const { profile, otherPlayers, filter } = this.props;\r\n    const { isLevelGraphCombined } = this.state;\r\n    const expProgress = profile.expRankNext\r\n      ? (profile.exp - profile.expRank.threshold) /\r\n        (profile.expRankNext.threshold - profile.expRank.threshold)\r\n      : 100;\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"profile-header\">\r\n          <div className=\"profile-name text-with-header\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile.lastResultDate ? getTimeAgo(profile.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n          <div className=\"_flex-fill\"></div>\r\n          <div className=\"text-with-header -select\">\r\n            <div className=\"text-header\">сравнить с</div>\r\n            <div>\r\n              <Select\r\n                closeMenuOnSelect\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                options={otherPlayers}\r\n                onChange={(value) => {\r\n                  this.props.history.push(\r\n                    routes.profile.compare.getPath({ id: profile.id, compareToId: value.id })\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header _flex-row _align-center\">\r\n            <span>опыт</span>\r\n            <div className=\"_flex-fill\" />\r\n            <div onClick={this.onShowFaq} className=\"_clickable\">\r\n              <FaQuestionCircle onClick={this.onShowFaq} />\r\n            </div>\r\n            <ReactModal\r\n              ariaHideApp={false}\r\n              className=\"Modal faq-modal\"\r\n              overlayClassName=\"Overlay\"\r\n              isOpen={this.state.showFaq}\r\n              onRequestClose={this.onHideFaq}\r\n            >\r\n              <div className=\"close-btn\" onClick={this.onHideFaq}>\r\n                <FaTimes />\r\n              </div>{' '}\r\n              <ExpFaq />\r\n            </ReactModal>\r\n          </div>\r\n          <div className=\"exp-range\">\r\n            <div className=\"rank exp-rank\">\r\n              {getRankImg(profile.expRank)}\r\n              {profile.expRank && <div>{profile.expRank.threshold}</div>}\r\n            </div>\r\n            <div className=\"exp-line-with-label\">\r\n              <div className=\"exp-label\">\r\n                {profile.expRankNext ? (\r\n                  <>\r\n                    <span className=\"taken-num\">\r\n                      {Math.round(profile.exp - profile.expRank.threshold)}\r\n                    </span>\r\n                    {` / ${profile.expRankNext.threshold - profile.expRank.threshold}`}\r\n                  </>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"exp-line\">\r\n                <div className=\"taken\" style={{ width: Math.floor(100 * expProgress) + '%' }}></div>\r\n                <div\r\n                  className=\"rest\"\r\n                  style={{ width: 100 - Math.ceil(100 * expProgress) + '%' }}\r\n                ></div>\r\n              </div>\r\n              <div className=\"exp-label\">\r\n                total: <span className=\"taken-num\">{Math.round(profile.exp)}</span>\r\n              </div>\r\n            </div>\r\n            {profile.expRankNext && (\r\n              <div className=\"rank exp-rank\">\r\n                {getRankImg(profile.expRankNext)}\r\n                {profile.expRankNext && <div>{profile.expRankNext.threshold}</div>}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              {!isLevelGraphCombined ? (\r\n                <>\r\n                  <div className=\"profile-section-2\">\r\n                    <div className=\"profile-sm-section-header flex\">\r\n                      <span>уровни</span>\r\n                      <div className=\"toggle-holder\">\r\n                        <Toggle\r\n                          className=\"combine-toggle\"\r\n                          checked={isLevelGraphCombined}\r\n                          onChange={() =>\r\n                            this.setState((state) => ({\r\n                              isLevelGraphCombined: !state.isLevelGraphCombined,\r\n                            }))\r\n                          }\r\n                        >\r\n                          объединить графики\r\n                        </Toggle>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"chart-container\">{this.renderLevels()}</div>\r\n                  </div>\r\n                  <div className=\"profile-section-2\">\r\n                    <div className=\"profile-sm-section-header\">\r\n                      <span>оценки</span>\r\n                    </div>\r\n                    <div className=\"chart-container\">{this.renderGrades()}</div>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div className=\"profile-section-2\">\r\n                  <div className=\"profile-sm-section-header flex\">\r\n                    <span>оценки</span>\r\n                    <div className=\"toggle-holder\">\r\n                      <Toggle\r\n                        className=\"combine-toggle\"\r\n                        checked={isLevelGraphCombined}\r\n                        onChange={() =>\r\n                          this.setState((state) => ({\r\n                            isLevelGraphCombined: !state.isLevelGraphCombined,\r\n                          }))\r\n                        }\r\n                      >\r\n                        объединить графики\r\n                      </Toggle>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"chart-container single-double-labels\">\r\n                    {this.renderGradesWithLevels()}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>эло</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderRankingHistory()}</div>\r\n                {/* <div className=\"chart-container\">{this.renderAccuracyPoints()}</div> */}\r\n              </div>\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>место в топе</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderPlaceHistory()}</div>\r\n                {/* <div className=\"chart-container\">{this.renderAccuracyPoints(true)}</div> */}\r\n              </div>\r\n            </div>\r\n            {(() => {\r\n              const currentRange = filter.dayRange || profile.filterRange;\r\n              const dateL = moment(currentRange[0] * 1000 * 60 * 60 * 24).format('L');\r\n              const dateR = moment(currentRange[1] * 1000 * 60 * 60 * 24).format('L');\r\n              const l1 = Math.max(currentRange[0] - 1, profile.minMaxRange[0]);\r\n              const l2 = Math.min(currentRange[0] + 1, currentRange[1]);\r\n              const r1 = Math.max(currentRange[1] - 1, currentRange[0]);\r\n              const r2 = Math.min(currentRange[1] + 1, profile.minMaxRange[1]);\r\n              return (\r\n                <div className=\"range-container\">\r\n                  <Range\r\n                    range={currentRange}\r\n                    min={profile.minMaxRange[0]}\r\n                    max={profile.minMaxRange[1]}\r\n                    onChange={this.onChangeDayRange}\r\n                  />\r\n                  <div className=\"range-controls _flex-row\">\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l1, currentRange[1]])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateL}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l2, currentRange[1]])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                    <div className=\"_flex-fill\"></div>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r1])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateR}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r2])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })()}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>точность по уровням</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderAccuracyPoints()}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\"></div>\r\n        </div>\r\n        <div className=\"profile-section progress-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>достижения по уровням</span>\r\n          </div>\r\n          <div className=\"progress-blocks-single-double\">\r\n            <div className=\"progress-block\">\r\n              <div className=\"achievements-grades single\">\r\n                {this.renderGradeBlock('single', 'A')}\r\n                {this.renderGradeBlock('single', 'A+')}\r\n                {this.renderGradeBlock('single', 'S')}\r\n                {this.renderGradeBlock('single', 'SS')}\r\n              </div>\r\n            </div>\r\n            <div className=\"progress-block\">\r\n              <div className=\"achievements-grades double\">\r\n                {this.renderGradeBlock('double', 'A')}\r\n                {this.renderGradeBlock('double', 'A+')}\r\n                {this.renderGradeBlock('double', 'S')}\r\n                {this.renderGradeBlock('double', 'SS')}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"bonus-faq\">\r\n            * для получения ачивки нужно сыграть около 10% всех чартов данного левела на нужный\r\n            грейд\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>достижения</span>\r\n          </div>\r\n          <div className=\"achievements\">\r\n            {_.keys(profile.achievements).map((achName) =>\r\n              this.renderAchievement(achName, profile.achievements[achName])\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>часто играемые чарты</span>\r\n          </div>\r\n          <MostPlayed playerId={profile.id} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, profile, error } = this.props;\r\n    DEBUG && console.log('profile:', profile);\r\n    return (\r\n      <div className=\"profile-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"btn btn-sm btn-dark btn-icon\"\r\n              onClick={this.onRefresh}\r\n            >\r\n              <FaSearch /> обновить\r\n            </button>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!isLoading && _.isEmpty(profile) && <div className=\"profile\">Profile not found</div>}\r\n          {!isLoading && !_.isEmpty(profile) && this.renderProfile()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Profile));\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport Select from 'react-select';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as RechartsTooltip,\r\n  ReferenceLine,\r\n  CartesianGrid,\r\n  Line,\r\n  ResponsiveContainer,\r\n  ScatterChart,\r\n  Scatter,\r\n} from 'recharts';\r\nimport _ from 'lodash/fp';\r\nimport memoize from 'lru-memoize';\r\n\r\n// styles\r\nimport './profile-compare.scss';\r\n\r\n// constants\r\nimport { DEBUG } from 'constants/env';\r\nimport { routes } from 'constants/routes';\r\n\r\n// components\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Range from 'components/Shared/Range';\r\n\r\n// reducers\r\nimport { fetchChartsData } from 'reducers/charts';\r\nimport { setProfilesFilter, resetProfilesFilter } from 'reducers/profiles';\r\n\r\n// utils\r\nimport { profileSelectorCreator } from 'utils/profiles';\r\nimport { parseDate } from 'utils/date';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { otherPlayersSelector } from 'components/Profile/Profile';\r\n\r\n// code\r\nconst BARS_MODES = {\r\n  SINGLE_TWO: 'SINGLE_TWO',\r\n  SINGLE_FIVE: 'SINGLE_FIVE',\r\n  DOUBLE_TWO: 'DOUBLE_TWO',\r\n  DOUBLE_FIVE: 'DOUBLE_FIVE',\r\n  BOTH_TWO: 'BOTH_TWO',\r\n  BOTH_FIVE: 'BOTH_FIVE',\r\n};\r\nconst getCompareBars = (mode) => {\r\n  switch (mode) {\r\n    case BARS_MODES.SINGLE_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"single.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"single.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.SINGLE_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"single.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar\r\n          key=\"2\"\r\n          dataKey=\"single.p2notPlayed\"\r\n          fill=\"#899db3\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"3\"\r\n          dataKey=\"single.notPlayed\"\r\n          fill=\"#70707060\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"4\"\r\n          dataKey=\"single.p1notPlayed\"\r\n          fill=\"#bfa988\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar key=\"5\" dataKey=\"single.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    case BARS_MODES.DOUBLE_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"double.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"double.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.DOUBLE_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"double.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar\r\n          key=\"2\"\r\n          dataKey=\"double.p2notPlayed\"\r\n          fill=\"#899db3\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"3\"\r\n          dataKey=\"double.notPlayed\"\r\n          fill=\"#70707060\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"4\"\r\n          dataKey=\"double.p1notPlayed\"\r\n          fill=\"#bfa988\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar key=\"5\" dataKey=\"double.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    case BARS_MODES.BOTH_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"all.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"all.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.BOTH_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"all.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"2\" dataKey=\"all.p2notPlayed\" fill=\"#899db3\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"3\" dataKey=\"all.notPlayed\" fill=\"#70707060\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"4\" dataKey=\"all.p1notPlayed\" fill=\"#bfa988\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"5\" dataKey=\"all.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst MIN_GRAPH_HEIGHT = undefined;\r\n\r\nconst profile1Selector = profileSelectorCreator('id');\r\nconst profile2Selector = profileSelectorCreator('compareToId');\r\n\r\nconst getCombinedData = memoize()((p1, p2, tracklist) => {\r\n  if (!p1 || !p2) {\r\n    return {};\r\n  }\r\n  let rc1 = p1.ratingChanges[0].rating;\r\n  let rc2 = p2.ratingChanges[0].rating;\r\n  const allRC = _.flow(\r\n    _.sortBy('date'),\r\n    _.map((item) => {\r\n      if (item.rating) {\r\n        rc1 = item.rating;\r\n      }\r\n      if (item.rating2) {\r\n        rc2 = item.rating2;\r\n      }\r\n      return {\r\n        rating1: rc1,\r\n        rating2: rc2,\r\n        date: item.date,\r\n      };\r\n    }),\r\n    _.sortedUniqBy('date')\r\n  )([\r\n    ...p1.ratingChanges,\r\n    ...p2.ratingChanges.map((it) => ({ date: it.date, rating2: it.rating })),\r\n  ]);\r\n\r\n  rc1 = p1.placesChanges[0].place;\r\n  rc2 = p2.placesChanges[0].place;\r\n  const allPC = _.flow(\r\n    _.sortBy('date'),\r\n    _.map((item) => {\r\n      if (item.place) {\r\n        rc1 = item.place;\r\n      }\r\n      if (item.place2) {\r\n        rc2 = item.place2;\r\n      }\r\n      return {\r\n        place1: rc1,\r\n        place2: rc2,\r\n        date: item.date,\r\n      };\r\n    })\r\n  )([...p1.placesChanges, ...p2.placesChanges.map((it) => ({ date: it.date, place2: it.place }))]);\r\n\r\n  const perLevelComparison = _.fromPairs(Array.from({ length: 28 }).map((x, i) => [i + 1, {}]));\r\n  _.keys(perLevelComparison).forEach((level) => {\r\n    const charts = _.flow(\r\n      _.map('chart'),\r\n      _.uniqBy('sharedChartId')\r\n    )([...p1.resultsByLevel[level], ...p2.resultsByLevel[level]]);\r\n    const data = {\r\n      x: level,\r\n      all: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        // notPlayedHalf: 0,\r\n        twoBars: {},\r\n      },\r\n      double: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        twoBars: {},\r\n      },\r\n      single: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        twoBars: {},\r\n      },\r\n    };\r\n    charts.forEach((chart) => {\r\n      const p1index = chart.results.findIndex((r) => r.playerId === p1.id);\r\n      const p2index = chart.results.findIndex((r) => r.playerId === p2.id);\r\n      const perType = chart.chartType.startsWith('D') ? data.double : data.single;\r\n      if (p1index < 0 && p2index < 0) {\r\n        console.log('wtf?');\r\n      } else if (p1index < 0) {\r\n        data.all.p1notPlayed++;\r\n        perType.p1notPlayed++;\r\n      } else if (p2index < 0) {\r\n        data.all.p2notPlayed++;\r\n        perType.p2notPlayed++;\r\n      } else if (p1index < p2index) {\r\n        data.all.p1win++;\r\n        perType.p1win++;\r\n      } else if (p2index < p1index) {\r\n        data.all.p2win++;\r\n        perType.p2win++;\r\n      }\r\n    });\r\n\r\n    const normalizeTwo = (dataObj) => {\r\n      const totalPlayed = dataObj.p1win + dataObj.p2win || 1; // in case of divide by 0\r\n      dataObj.twoBars.p1win = dataObj.p1win / totalPlayed;\r\n      dataObj.twoBars.p2win = dataObj.p2win / totalPlayed;\r\n    };\r\n    normalizeTwo(data.all);\r\n    normalizeTwo(data.single);\r\n    normalizeTwo(data.double);\r\n\r\n    const normalizeFive = (dataObj, total) => {\r\n      dataObj.p1win = dataObj.p1win / total;\r\n      dataObj.p1notPlayed = dataObj.p1notPlayed / total;\r\n      dataObj.p2win = dataObj.p2win / total;\r\n      dataObj.p2notPlayed = dataObj.p2notPlayed / total;\r\n      dataObj.notPlayed =\r\n        1 - dataObj.p1win - dataObj.p1notPlayed - dataObj.p2win - dataObj.p2notPlayed;\r\n      // dataObj.notPlayedHalf = dataObj.notPlayed / 2;\r\n    };\r\n    normalizeFive(data.all, tracklist.chartLevels[level]);\r\n    normalizeFive(data.double, tracklist.doublesLevels[level]);\r\n    normalizeFive(data.single, tracklist.singlesLevels[level]);\r\n\r\n    perLevelComparison[level] = data;\r\n  });\r\n\r\n  return {\r\n    ratingChanges: allRC,\r\n    placesChanges: allPC,\r\n    perLevelComparison: _.values(perLevelComparison),\r\n  };\r\n});\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const profile1 = profile1Selector(state, props);\r\n  const profile2 = profile2Selector(state, props);\r\n  return {\r\n    profile: profile1,\r\n    profile2,\r\n    otherPlayers: otherPlayersSelector(state, props),\r\n    combinedData: getCombinedData(profile1, profile2, state.tracklist.data),\r\n    tracklist: state.tracklist.data,\r\n    filter: state.profiles.filter,\r\n    error: state.charts.error || state.tracklist.error,\r\n    isLoading:\r\n      state.charts.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchChartsData,\r\n  setProfilesFilter,\r\n  resetProfilesFilter,\r\n};\r\n\r\nclass ProfileCompare extends Component {\r\n  static propTypes = {\r\n    profile: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    profile: {},\r\n    profile2: {},\r\n    combinedData: {},\r\n  };\r\n\r\n  state = {\r\n    isLevelGraphCombined: true,\r\n    compareBarsMode: BARS_MODES.BOTH_TWO,\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchChartsData();\r\n  };\r\n\r\n  onChangeDayRange = (range) => {\r\n    const { filter } = this.props;\r\n    this.props.setProfilesFilter({\r\n      ...filter,\r\n      dayRange: range,\r\n    });\r\n  };\r\n\r\n  rhMargin = { top: 5, bottom: 5, right: 5, left: 0 };\r\n  rhXDomain = ['dataMin', 'dataMax'];\r\n  rhYDomain = ['dataMin - 100', 'dataMax + 100'];\r\n  rhXTickFormatter = (value) => parseDate(value).toLocaleDateString();\r\n  rhTooltip = ({ active, payload, label }) => {\r\n    const { profile, profile2 } = this.props;\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n    if (!payload || !payload[0]) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"history-tooltip\">\r\n        <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n        {payload[1] && (\r\n          <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n            {p1Name}: {Math.round(payload[1].value)}\r\n          </div>\r\n        )}\r\n        {payload[0] && (\r\n          <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n            {p2Name}: {Math.round(payload[0].value)}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderRankingHistory() {\r\n    const { combinedData } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={combinedData.ratingChanges} margin={this.rhMargin}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={this.rhXDomain}\r\n            tickFormatter={this.rhXTickFormatter}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={this.rhYDomain}\r\n            tickFormatter={Math.round}\r\n            width={40}\r\n          />\r\n          <ReferenceLine y={1000} stroke=\"white\" />\r\n          <RechartsTooltip isAnimationActive={false} content={this.rhTooltip} />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating2\"\r\n            stroke=\"#ffd388\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating1\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  circleShape = (args) => (\r\n    <circle key={args.key} cx={args.cx} cy={args.cy} r={4} fill={args.fill}></circle>\r\n  );\r\n  renderAccuracyPoints(useProfile2 = false) {\r\n    const { profile, profile2 } = this.props;\r\n\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <ScatterChart margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"[0]\"\r\n            type=\"number\"\r\n            domain={[1, 28]}\r\n            tickFormatter={(value) => Math.round(value)}\r\n            ticks={[1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27]}\r\n          />\r\n          <YAxis\r\n            dataKey=\"[1]\"\r\n            type=\"number\"\r\n            domain={[0, 100]}\r\n            width={40}\r\n            tickFormatter={(value) => Math.round(value) + '%'}\r\n          />\r\n          <Scatter\r\n            shape={this.circleShape}\r\n            data={(useProfile2 ? profile2 : profile).accuracyPointsRaw}\r\n            fill={useProfile2 ? '#ffd388' : '#88d3ff'}\r\n          />\r\n        </ScatterChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderPlaceHistory() {\r\n    const { combinedData, profile, profile2 } = this.props;\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart\r\n          data={combinedData.placesChanges}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={(value) => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={[1, (dataMax) => (dataMax < 3 ? dataMax + 2 : dataMax + 1)]}\r\n            interval={0}\r\n            reversed\r\n            width={40}\r\n          />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload[1] && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n                      {p1Name}: #{payload[1].value}\r\n                    </div>\r\n                  )}\r\n                  {payload[0] && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n                      {p2Name}: #{payload[0].value}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place2\"\r\n            stroke=\"#ffd388\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place1\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  plcMargin = { top: 5, bottom: 5, right: 5, left: 0 };\r\n  plcTooltip = ({ active, payload, label }) => {\r\n    const { profile, profile2 } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n    const isTwo = [BARS_MODES.SINGLE_TWO, BARS_MODES.DOUBLE_TWO, BARS_MODES.BOTH_TWO].includes(\r\n      compareBarsMode\r\n    );\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n\r\n    if (!payload || !payload[0]) {\r\n      return null;\r\n    }\r\n    const renderLegendItem = (item, label) => (\r\n      <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n        {label}: {Math.round(_.get(item.dataKey, item.payload) * 100)}%\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"history-tooltip\">\r\n        <div>Level: {payload[0].payload.x}</div>\r\n        {renderLegendItem(payload[0], `${p1Name} wins`)}\r\n        {!isTwo && renderLegendItem(payload[1], `${p2Name} has no score`)}\r\n        {!isTwo && renderLegendItem(payload[2], `Both have no score`)}\r\n        {!isTwo && renderLegendItem(payload[3], `${p1Name} has no score`)}\r\n        {renderLegendItem(isTwo ? payload[1] : payload[4], `${p2Name} wins`)}\r\n      </div>\r\n    );\r\n  };\r\n  plcXDomain = [0, 1];\r\n  plcXTicks = [0, 0.5, 1];\r\n  plcXFormatter = (x) => `${Math.round(x * 100)}%`;\r\n\r\n  renderPerLevelComparison() {\r\n    const { combinedData } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" aspect={0.7}>\r\n        <BarChart\r\n          layout=\"vertical\"\r\n          data={[...combinedData.perLevelComparison]}\r\n          margin={this.plcMargin}\r\n        >\r\n          <RechartsTooltip isAnimationActive={false} content={this.plcTooltip} />\r\n          <YAxis reversed dataKey=\"x\" type=\"category\" width={23} />\r\n          <XAxis\r\n            type=\"number\"\r\n            domain={this.plcXDomain}\r\n            ticks={this.plcXTicks}\r\n            tickFormatter={this.plcXFormatter}\r\n          />\r\n          <ReferenceLine x={0.5} stroke=\"#666\" />\r\n          {getCompareBars(compareBarsMode)}\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderProfile() {\r\n    const { profile, profile2, filter, otherPlayers } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"profile-header\">\r\n          <div className=\"profile-name text-with-header blue\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile.lastResultDate ? getTimeAgo(profile.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n          <div className=\"_flex-fill\"></div>\r\n          <div className=\"text-with-header -select\">\r\n            <div className=\"text-header\">сравнить с</div>\r\n            <div>\r\n              <Select\r\n                closeMenuOnSelect\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                options={otherPlayers}\r\n                onChange={(value) => {\r\n                  this.props.history.push(\r\n                    routes.profile.compare.getPath({ id: profile.id, compareToId: value.id })\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-header right-align\">\r\n          <div className=\"profile-name text-with-header orange\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile2.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile2.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile2.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile2.lastResultDate ? getTimeAgo(profile2.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header flex\">\r\n                  <span>победы по уровням</span>\r\n                </div>\r\n                <div className=\"profile-sm-section-header flex\">\r\n                  {(() => {\r\n                    const isTwo = [\r\n                      BARS_MODES.SINGLE_TWO,\r\n                      BARS_MODES.DOUBLE_TWO,\r\n                      BARS_MODES.BOTH_TWO,\r\n                    ].includes(compareBarsMode);\r\n                    return (\r\n                      <div className=\"toggle-holder\">\r\n                        <Toggle\r\n                          className=\"combine-toggle\"\r\n                          checked={!isTwo}\r\n                          onChange={() =>\r\n                            this.setState((state) => ({\r\n                              compareBarsMode: {\r\n                                [BARS_MODES.SINGLE_TWO]: BARS_MODES.SINGLE_FIVE,\r\n                                [BARS_MODES.DOUBLE_TWO]: BARS_MODES.DOUBLE_FIVE,\r\n                                [BARS_MODES.BOTH_TWO]: BARS_MODES.BOTH_FIVE,\r\n                                [BARS_MODES.SINGLE_FIVE]: BARS_MODES.SINGLE_TWO,\r\n                                [BARS_MODES.DOUBLE_FIVE]: BARS_MODES.DOUBLE_TWO,\r\n                                [BARS_MODES.BOTH_FIVE]: BARS_MODES.BOTH_TWO,\r\n                              }[state.compareBarsMode],\r\n                            }))\r\n                          }\r\n                        >\r\n                          подробно\r\n                        </Toggle>\r\n                        <div className=\"tabs-holder\">\r\n                          <ToggleButton\r\n                            text=\"все\"\r\n                            active={[BARS_MODES.BOTH_TWO, BARS_MODES.BOTH_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={() => {\r\n                              this.setState((state) => ({\r\n                                compareBarsMode: isTwo ? BARS_MODES.BOTH_TWO : BARS_MODES.BOTH_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                          <ToggleButton\r\n                            text=\"синглы\"\r\n                            active={[BARS_MODES.SINGLE_TWO, BARS_MODES.SINGLE_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={(active) => {\r\n                              this.setState((state) => ({\r\n                                compareBarsMode: isTwo\r\n                                  ? BARS_MODES.SINGLE_TWO\r\n                                  : BARS_MODES.SINGLE_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                          <ToggleButton\r\n                            text=\"даблы\"\r\n                            active={[BARS_MODES.DOUBLE_TWO, BARS_MODES.DOUBLE_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={(active) => {\r\n                              this.setState((state) => ({\r\n                                compareBarsMode: isTwo\r\n                                  ? BARS_MODES.DOUBLE_TWO\r\n                                  : BARS_MODES.DOUBLE_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })()}\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderPerLevelComparison()}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>эло</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderRankingHistory()}</div>\r\n              </div>\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>место в топе</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderPlaceHistory()}</div>\r\n              </div>\r\n            </div>\r\n            {(() => {\r\n              const currentRange = filter.dayRange || profile.filterRange;\r\n              const dateL = moment(currentRange[0] * 1000 * 60 * 60 * 24).format('L');\r\n              const dateR = moment(currentRange[1] * 1000 * 60 * 60 * 24).format('L');\r\n              const l1 = Math.max(currentRange[0] - 1, profile.minMaxRange[0]);\r\n              const l2 = Math.min(currentRange[0] + 1, currentRange[1]);\r\n              const r1 = Math.max(currentRange[1] - 1, currentRange[0]);\r\n              const r2 = Math.min(currentRange[1] + 1, profile.minMaxRange[1]);\r\n              return (\r\n                <div className=\"range-container\">\r\n                  <Range\r\n                    range={currentRange}\r\n                    min={profile.minMaxRange[0]}\r\n                    max={profile.minMaxRange[1]}\r\n                    onChange={this.onChangeDayRange}\r\n                  />\r\n                  <div className=\"range-controls _flex-row\">\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l1, currentRange[1]])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateL}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l2, currentRange[1]])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                    <div className=\"_flex-fill\"></div>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r1])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateR}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r2])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })()}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>точность по уровням</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderAccuracyPoints()}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>точность по уровням</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderAccuracyPoints(true)}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, profile, error } = this.props;\r\n    DEBUG && console.log('profile:', profile);\r\n    return (\r\n      <div className=\"profile-compare-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"btn btn-sm btn-dark btn-icon\"\r\n              onClick={this.onRefresh}\r\n            >\r\n              <FaSearch /> обновить\r\n            </button>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!isLoading && _.isEmpty(profile) && <div className=\"profile\">Profile not found</div>}\r\n          {!isLoading && !_.isEmpty(profile) && this.renderProfile()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProfileCompare));\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\nimport { RESET } from './resetAction';\r\n\r\nconst LOADING = `USER/LOADING`;\r\nconst SUCCESS = `USER/SUCCESS`;\r\nconst ERROR = `USER/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        data: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: null,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    case RESET:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchUser = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/profile` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport { resetUser } from './resetAction';\r\n","import cookies from 'browser-cookies';\r\n\r\nimport { postJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport { fetchUser, resetUser } from 'reducers/user';\r\n\r\nconst LOADING = `LOGIN/LOADING`;\r\nconst SUCCESS = `LOGIN/SUCCESS`;\r\nconst ERROR = `LOGIN/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n  error: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        data: null,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: null,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const login = googleResponse => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        postJson({\r\n          url: `${HOST}/login/google`,\r\n          body: { token: googleResponse.tokenId },\r\n        })\r\n      );\r\n      cookies.set('session', data.session, { expires: 30 });\r\n      dispatch({ type: SUCCESS, data });\r\n      dispatch(fetchUser());\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    dispatch(resetUser());\r\n    try {\r\n      const data = await dispatch(\r\n        postJson({\r\n          url: `${HOST}/logout`,\r\n        })\r\n      );\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './top-bar.scss';\r\n\r\n// routes\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport * as loginACs from 'reducers/login';\r\n\r\n// redux\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoadingLogin: state.login.isLoading,\r\n    isLoadingUser: state.user.isLoading,\r\n    user: state.user.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login: loginACs.login,\r\n  logout: loginACs.logout,\r\n};\r\n\r\nfunction TopBar({ isLoadingLogin, isLoadingUser, user, login, logout }) {\r\n  return (\r\n    <header className=\"top-bar\">\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <NavLink exact to={routes.leaderboard.path}>\r\n              leaderboards\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact to={routes.ranking.path}>\r\n              ranking\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact to={routes.tournaments.path}>\r\n              tournaments\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact to={routes.songs.path}>\r\n              songs\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div className=\"_flex-fill\" />\r\n      <div className=\"login-container\">\r\n        <NavLink\r\n          className=\"player-info\"\r\n          exact\r\n          to={routes.profile.getPath({ id: _.get('player.id', user) })}\r\n        >\r\n          {_.getOr('', 'player.nickname', user)}\r\n        </NavLink>\r\n        <button\r\n          className=\"btn btn-dark btn-icon btn-sm\"\r\n          onClick={logout}\r\n          disabled={isLoadingLogin || isLoadingUser}\r\n        >\r\n          <span> logout</span>\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { FaGoogle } from 'react-icons/fa';\r\nimport Emoji from 'react-emoji-render';\r\n\r\nimport './login-screen.scss';\r\n\r\n// reducers\r\nimport * as loginACs from 'reducers/login';\r\n\r\n// redux\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoading: state.login.isLoading,\r\n    error: state.login.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login: loginACs.login,\r\n};\r\n\r\nfunction LoginScreen({ isLoading, error, login }) {\r\n  const [isClown, setClown] = useState(false);\r\n  const onGoogleResponse = res => {\r\n    if (res.error) {\r\n      console.log('Google login response error:', res);\r\n    } else {\r\n      login(res);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <div className=\"site-name\">pumpking</div>\r\n      <div className=\"login-button\">\r\n        <GoogleLogin\r\n          clientId=\"197132042723-cmibep21qf6dald9l2l01rif7l5dtd4s.apps.googleusercontent.com\"\r\n          buttonText=\"Login\"\r\n          onSuccess={onGoogleResponse}\r\n          onFailure={onGoogleResponse}\r\n          cookiePolicy={'single_host_origin'}\r\n          render={({ onClick, disabled }) => (\r\n            <button\r\n              className=\"btn btn-dark btn-icon btn-sm\"\r\n              onClick={onClick}\r\n              disabled={disabled || isLoading}\r\n            >\r\n              <FaGoogle />\r\n              <span> login</span>\r\n            </button>\r\n          )}\r\n        />\r\n      </div>\r\n      {error && <div className=\"error\">{error.message}</div>}\r\n      <div className=\"footer\">\r\n        By logging in, you agree to our{' '}\r\n        {isClown ? (\r\n          <Emoji text=\"🤡\" className=\"clown\" />\r\n        ) : (\r\n          <span onClick={() => setClown(true)} className=\"link-style\">\r\n            Privacy Policy\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginScreen);\r\n","export const TYPES = {\r\n  ACHIEVEMENT: 'ACHIEVEMENT',\r\n  RANK_UP: 'RANK_UP',\r\n};\r\n","import _ from 'lodash/fp';\r\n\r\nconst ADD_POPUP = `POPUPS/ADD`;\r\nconst REMOVE_POPUP = `POPUPS/REMOVE`;\r\n\r\nconst ID_PREFIX = 'popup';\r\n\r\nconst initialState = {\r\n  popups: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_POPUP:\r\n      const id = _.uniqueId(ID_PREFIX);\r\n      return {\r\n        ...state,\r\n        popups: [\r\n          ...state.popups,\r\n          {\r\n            id,\r\n            type: action.popupType,\r\n            ..._.pick(['parameters', 'fadeIn', 'fadeOut', 'timeout', 'persistent'], action),\r\n          },\r\n        ],\r\n      };\r\n    case REMOVE_POPUP:\r\n      return {\r\n        ...state,\r\n        popups: _.remove({ id: action.id }, state.popups),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addPopup = ({ type, parameters, fadeIn, fadeOut, timeout, persistent }) => {\r\n  return { type: ADD_POPUP, popupType: type, parameters, fadeIn, fadeOut, timeout, persistent };\r\n};\r\n\r\nexport const removePopup = ({ id }) => {\r\n  return { type: REMOVE_POPUP, id };\r\n};\r\n","import React, { useEffect, useCallback, useState, useRef } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport ReactModal from 'react-modal';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './popups.scss';\r\n\r\nimport { TYPES } from 'constants/popups';\r\n\r\nimport { removePopup } from 'reducers/popups';\r\n\r\nimport AchievementPopup from './AchievementPopup';\r\nimport RankUpPopup from './RankUpPopup';\r\n\r\nconst popupByType = {\r\n  [TYPES.ACHIEVEMENT]: AchievementPopup,\r\n  [TYPES.RANK_UP]: RankUpPopup,\r\n};\r\n\r\nconst popupStyles = {\r\n  overlay: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0.1)',\r\n  },\r\n  content: {\r\n    top: null,\r\n    bottom: null,\r\n    left: null,\r\n    right: null,\r\n    position: null,\r\n    borderRadius: null,\r\n    padding: null,\r\n    background: null,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    height: '100%',\r\n    transition: '2.5s opacity ease',\r\n    opacity: 1,\r\n  },\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    popups: state.popups.popups,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  removePopup,\r\n};\r\n\r\nconst Popups = ({ popups, removePopup }) => {\r\n  const [visiblePopup, setVisiblePopup] = useState(null);\r\n  const contentRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (popups.length > 0) {\r\n      const popup = popups[0];\r\n      setVisiblePopup(popup);\r\n      if (!popup.persistent) {\r\n        setTimeout(() => {\r\n          if (popup && popup.fadeOut) {\r\n            contentRef.current.style.opacity = 0;\r\n            setTimeout(() => {\r\n              setVisiblePopup(null);\r\n              removePopup(popup);\r\n            }, 2500);\r\n          } else {\r\n            setVisiblePopup(null);\r\n            removePopup(popup);\r\n          }\r\n        }, popup.timeout || 6000);\r\n      }\r\n    } else {\r\n      setVisiblePopup(null);\r\n    }\r\n  }, [popups, removePopup]);\r\n\r\n  const onAfterOpen = useCallback(() => {\r\n    if (visiblePopup && visiblePopup.fadeIn) {\r\n      contentRef.current.style.opacity = 1;\r\n    }\r\n  }, [visiblePopup]);\r\n\r\n  let style = popupStyles;\r\n  let popupBody = null;\r\n  if (visiblePopup) {\r\n    const PopupComponent = popupByType[visiblePopup.type];\r\n    popupBody = PopupComponent ? (\r\n      <PopupComponent {...visiblePopup.parameters} />\r\n    ) : (\r\n      <div>{JSON.stringify(visiblePopup)}</div>\r\n    );\r\n\r\n    if (visiblePopup.fadeIn) {\r\n      style = _.set('content.opacity', 0, popupStyles);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"popups-holder\">\r\n      <ReactModal\r\n        isOpen={!!visiblePopup}\r\n        contentRef={(ref) => (contentRef.current = ref)}\r\n        onAfterOpen={onAfterOpen}\r\n        style={style}\r\n      >\r\n        {popupBody}\r\n      </ReactModal>\r\n    </div>\r\n  );\r\n};\r\nPopups.propTypes = {\r\n  popups: toBe.array,\r\n  removePopup: toBe.func,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Popups);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { GiAchievement } from 'react-icons/gi';\r\nimport classNames from 'classnames';\r\n\r\nimport { achievements } from 'utils/achievements';\r\n\r\nconst renderAchievement = (achName, progress) => {\r\n  const Icon = achievements[achName].icon;\r\n  return (\r\n    <div className=\"ach-block\">\r\n      {Icon && (\r\n        <div className=\"ach-icon\">\r\n          <Icon />\r\n        </div>\r\n      )}\r\n      <div className=\"ach-name\">{achName}</div>\r\n      <div\r\n        className={classNames('progress-background', {\r\n          complete: progress === 100,\r\n          zero: progress === 0,\r\n        })}\r\n        style={{\r\n          height: `${Math.round(progress)}%`,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AchievementPopup = ({ playerName, achievementName, progress }) => {\r\n  const [progressNumber, setProgressNumber] = useState(progress[0]);\r\n\r\n  useEffect(() => {\r\n    setProgressNumber(progress[1]);\r\n  }, []); // eslint-disable-line\r\n\r\n  return (\r\n    <div className=\"achievement-popup popup\">\r\n      <div className=\"player\">\r\n        <GiAchievement />\r\n        <span>{playerName}</span>\r\n        <GiAchievement />\r\n      </div>\r\n      <div className=\"ach-holder\">{renderAchievement(achievementName, progressNumber)}</div>\r\n      <div className=\"description\">{achievements[achievementName].description}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AchievementPopup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { GiAchievement } from 'react-icons/gi';\r\nimport _ from 'lodash/fp';\r\nimport FlipMove from 'react-flip-move';\r\nimport classNames from 'classnames';\r\n\r\nconst renderPlayerLine = (pl, isCurrentPlayer) => {\r\n  return (\r\n    <div className={`closest-player ${isCurrentPlayer ? 'current-player' : ''}`}>\r\n      <div className=\"place\">#{pl.place}</div>\r\n      <div className=\"name\">{pl.name}</div>\r\n      <div className=\"elo\">{pl.rating}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RankUpPopup = ({ playerName, place: [prevPlace, currPlace], list: [prevList, currList] }) => {\r\n  const [place, setPlace] = useState(prevPlace);\r\n  const [list, setList] = useState(prevList);\r\n\r\n  useEffect(() => {\r\n    setList(currList);\r\n    setPlace(currPlace);\r\n  }, []); // eslint-disable-line\r\n\r\n  const listTop = Math.min(0, Math.max(-60 * (_.size(list) - 7), -60 * (place - 4)));\r\n  return (\r\n    <div className=\"rank-up-popup popup\">\r\n      <div className=\"player\">\r\n        <GiAchievement />\r\n        <span>{playerName}</span>\r\n        <GiAchievement />\r\n      </div>\r\n      <div className=\"ranking-holder\">\r\n        <div className=\"moving-list\" style={{ top: listTop }}>\r\n          <FlipMove duration={4500} delay={2000} maintainContainerHeight>\r\n            {list.map((pl, index) => {\r\n              return (\r\n                <div\r\n                  key={pl.id}\r\n                  className={classNames('player-block', { current: index === place - 1 })}\r\n                >\r\n                  {renderPlayerLine(pl, index === place - 1)}\r\n                </div>\r\n              );\r\n            })}\r\n          </FlipMove>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankUpPopup;\r\n","import { fetchJson } from 'utils/fetch';\r\nimport queryString from 'query-string';\r\nimport _ from 'lodash/fp';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport { preprocessData } from 'components/SocketTracker/helpers';\r\n\r\nconst LOADING = `TOP_PER_SONG/LOADING`;\r\nconst SUCCESS = `TOP_PER_SONG/SUCCESS`;\r\nconst ERROR = `TOP_PER_SONG/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n  error: null,\r\n  fetchingParams: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        fetchingParams: action.fetchingParams,\r\n        data: null,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return action.fetchingParams === state.fetchingParams\r\n        ? {\r\n            ...state,\r\n            isLoading: false,\r\n            error: action.error,\r\n            data: null,\r\n            fetchingParams: null,\r\n          }\r\n        : state;\r\n    case SUCCESS:\r\n      return action.fetchingParams === state.fetchingParams\r\n        ? {\r\n            ...state,\r\n            isLoading: false,\r\n            data: action.data,\r\n            fetchingParams: null,\r\n          }\r\n        : state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTopPerSong = (songName, leftLabel, rightLabel) => {\r\n  const fetchingParams = queryString.stringify({\r\n    song_name: songName,\r\n    charts: _.compact(_.uniq([leftLabel, rightLabel])).join(','),\r\n  });\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING, fetchingParams });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/topPerSong?${fetchingParams}` }));\r\n      const processedData = _.flow(preprocessData, _.get('results'))(data);\r\n      dispatch({ type: SUCCESS, data: processedData, fetchingParams });\r\n      return processedData;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error, fetchingParams });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React, { useCallback } from 'react';\r\nimport _ from 'lodash/fp';\r\n\r\nimport { TYPES } from 'constants/popups';\r\n\r\nimport ChartLabel from 'components/Leaderboard/ChartLabel';\r\n\r\nimport { useTrackedEx } from './helpers';\r\n\r\nimport { getRankImg } from 'utils/exp';\r\nimport { labelToTypeLevel } from 'utils/leaderboards';\r\n\r\nexport const PlayerCard = ({\r\n  player,\r\n  profile,\r\n  label,\r\n  trackedData,\r\n  isLeft = false,\r\n  preferences,\r\n  topPlayersList,\r\n  addPopup,\r\n}) => {\r\n  const playersHiddenStatus = _.getOr({}, 'playersHiddenStatus', preferences);\r\n\r\n  const renderDeltaText = (n, prevN) => {\r\n    if (!prevN || prevN === n) {\r\n      return null;\r\n    }\r\n    const delta = n - prevN;\r\n    return (\r\n      <span className={`change ${delta >= 0 ? 'pos' : 'neg'}`}>\r\n        {delta < 0 ? delta.toFixed(1) : `+${delta.toFixed(1)}`}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const renderExpLine = () => {\r\n    if (!profile.expRank || !profile.exp) {\r\n      return null;\r\n    }\r\n\r\n    let takenWidth = profile.expRankNext\r\n      ? (profile.exp - profile.expRank.threshold) /\r\n        (profile.expRankNext.threshold - profile.expRank.threshold)\r\n      : 1;\r\n    const emptyWidth = 1 - takenWidth;\r\n    let diffWidth = 0;\r\n\r\n    if (trackedData.exp[1]) {\r\n      takenWidth = profile.expRankNext\r\n        ? (trackedData.exp[1] - profile.expRank.threshold) /\r\n          (profile.expRankNext.threshold - profile.expRank.threshold)\r\n        : 1;\r\n      diffWidth = 1 - emptyWidth - takenWidth;\r\n    }\r\n    return (\r\n      <div className=\"exp-line\">\r\n        <div className=\"taken\" style={{ width: Math.floor(100 * takenWidth) + '%' }}></div>\r\n        <div className=\"diff\" style={{ width: Math.ceil(100 * diffWidth) + '%' }}></div>\r\n        <div className=\"rest\" style={{ width: Math.ceil(100 * emptyWidth) + '%' }}></div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const rivals = topPlayersList.filter((pl) => !playersHiddenStatus[pl.id]);\r\n  const playerIndex = _.findIndex({ id: profile.id }, rivals);\r\n  const closestPlayers =\r\n    playerIndex < 0\r\n      ? []\r\n      : rivals.slice(Math.max(0, playerIndex - 2), Math.min(playerIndex + 3, rivals.length));\r\n\r\n  useTrackedEx({\r\n    data: topPlayersList,\r\n    resetData: profile.name,\r\n    isDataValid: useCallback(_.get('[0].rating'), []), // top list is only valid when rating is calculated\r\n    onChange: useCallback(\r\n      (prevList, currList) => {\r\n        const prevPlace = _.get('place', _.find({ id: profile.id }, prevList));\r\n        const currPlace = _.get('place', _.find({ id: profile.id }, currList));\r\n        // console.log('List update:', prevList, currList, prevPlace, currPlace);\r\n        if (prevPlace && currPlace && prevPlace > currPlace) {\r\n          // console.log('Place update:', profile.name, prevPlace, currPlace);\r\n          addPopup({\r\n            type: TYPES.RANK_UP,\r\n            fadeIn: true,\r\n            fadeOut: true,\r\n            timeout: 7500,\r\n            parameters: {\r\n              playerName: profile.name,\r\n              place: [prevPlace, currPlace],\r\n              list: [prevList, currList],\r\n            },\r\n          });\r\n        }\r\n      },\r\n      [addPopup, profile.id, profile.name]\r\n    ),\r\n  });\r\n\r\n  const [type, level] = labelToTypeLevel(label);\r\n\r\n  return (\r\n    <div className={`player-container ${isLeft ? 'left' : 'right'}`}>\r\n      {player && (\r\n        <>\r\n          {/* <div className=\"title-header\">player {isLeft ? 1 : 2}:</div> */}\r\n          <div className=\"name-with-label\">\r\n            <div className=\"name\">{profile.name || player}</div>\r\n            <div className=\"chart-label\">\r\n              <ChartLabel type={type} level={level} />\r\n            </div>\r\n          </div>\r\n          {profile.exp && profile.expRank && (\r\n            <div className=\"exp exp-rank\">\r\n              {getRankImg(profile.expRank)}\r\n              {renderExpLine()}\r\n            </div>\r\n          )}\r\n          {trackedData.exp[0] && (\r\n            <div className=\"exp-text\">\r\n              <span className=\"_grey-text\">exp:</span>\r\n              <span>{Math.round(trackedData.exp[0])}</span>\r\n              {renderDeltaText(trackedData.exp[0], trackedData.exp[1])}\r\n            </div>\r\n          )}\r\n          {trackedData.elo[0] && (\r\n            <div className=\"rating\">\r\n              <span className=\"_grey-text\">elo:</span>\r\n              <span>{Math.round(trackedData.elo[0])}</span>\r\n              {renderDeltaText(trackedData.elo[0], trackedData.elo[1])}\r\n            </div>\r\n          )}\r\n          {trackedData.pp[0] && (\r\n            <div className=\"rating\">\r\n              <span className=\"_grey-text\">pp:</span>\r\n              <span>{Math.round(trackedData.pp[0])}</span>\r\n              {renderDeltaText(trackedData.pp[0], trackedData.pp[1])}\r\n            </div>\r\n          )}\r\n          <div className=\"closest-players\">\r\n            {_.map((pl) => {\r\n              return (\r\n                <div className={`closest-player ${profile.id === pl.id ? 'current-player' : ''}`}>\r\n                  <div className=\"place\">#{pl.place}</div>\r\n                  <div className=\"name\">{pl.name}</div>\r\n                  <div className=\"elo\">{pl.rating}</div>\r\n                </div>\r\n              );\r\n            }, closestPlayers)}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState, useRef, useCallback, useMemo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport lev from 'fast-levenshtein';\r\n\r\nimport './socket.scss';\r\n\r\nimport { SOCKET_SERVER_IP } from 'constants/backend';\r\n\r\nimport Popups from 'components/Shared/Popups';\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nimport { appendNewResults } from 'reducers/results';\r\nimport { fetchTopPerSong } from 'reducers/topPerSong';\r\nimport { fetchUserPreferences } from 'reducers/preferences';\r\nimport { addPopup } from 'reducers/popups';\r\n\r\nimport { useTracked, useResetTrackedObject } from './helpers';\r\n\r\nimport { PlayerCard } from './PlayerCard';\r\nimport Chart from 'components/Leaderboard/Chart';\r\nimport { TYPES } from 'constants/popups';\r\n\r\n// code\r\nconst STATE_RESET_TIMEOUT_SEC = 5 * 60 + 10; // 5 minutes 10 seconds\r\n\r\nconst topPlayersListSelector = createSelector(\r\n  (state) => state.results.profiles,\r\n  _.flow(_.values, _.orderBy('ratingRaw', 'desc'), (items) =>\r\n    items.map((it, index) => ({ place: index + 1, ..._.pick(['id', 'name', 'rating'], it) }))\r\n  )\r\n);\r\n\r\n// redux\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.topPerSong.isLoading,\r\n    songTopData: state.topPerSong.data,\r\n    error: state.topPerSong.error,\r\n    profiles: state.results.profiles,\r\n    topPlayersList: topPlayersListSelector(state),\r\n    sharedCharts: state.results.sharedCharts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopPerSong,\r\n  appendNewResults,\r\n  addPopup,\r\n  fetchUserPreferences,\r\n};\r\n\r\nfunction TrackerApp({\r\n  isLoading,\r\n  fetchTopPerSong,\r\n  fetchUserPreferences,\r\n  appendNewResults,\r\n  songTopData,\r\n  error,\r\n  profiles,\r\n  topPlayersList,\r\n  sharedCharts = {},\r\n  addPopup,\r\n}) {\r\n  // useEffect(() => {\r\n  //   addPopup({\r\n  //     type: TYPES.ACHIEVEMENT,\r\n  //     fadeIn: true,\r\n  //     fadeOut: true,\r\n  //     // persistent: true,\r\n  //     parameters: {\r\n  //       playerName: 'grumd',\r\n  //       achievementName: 'Падовый мисс',\r\n  //       progress: [0, 100],\r\n  //     },\r\n  //   });\r\n  //   addPopup({\r\n  //     type: TYPES.ACHIEVEMENT,\r\n  //     fadeIn: true,\r\n  //     fadeOut: true,\r\n  //     parameters: {\r\n  //       playerName: 'Dino',\r\n  //       achievementName: 'Мастер фингеринга',\r\n  //       progress: [33, 66],\r\n  //     },\r\n  //   });\r\n  // }, [addPopup]);\r\n  // useEffect(() => {\r\n  //   if (_.get('[0].rating', topPlayersList)) {\r\n  //     const prevList = [...topPlayersList];\r\n  //     const p = 30,\r\n  //       c = 26;\r\n  //     const currList = _.pullAt(p - 1, topPlayersList);\r\n  //     currList.splice(c - 1, 0, topPlayersList[p - 1]);\r\n  //     addPopup({\r\n  //       type: TYPES.RANK_UP,\r\n  //       fadeIn: true,\r\n  //       fadeOut: true,\r\n  //       persistent: true,\r\n  //       parameters: {\r\n  //         playerName: 'grumd',\r\n  //         place: [p, c],\r\n  //         list: [prevList, currList],\r\n  //       },\r\n  //     });\r\n  //   }\r\n  // }, [addPopup, topPlayersList]);\r\n\r\n  // Setup\r\n  const [message, setMessage] = useState('');\r\n  const [socketErrorMessage, setSocketErrorMessage] = useState('');\r\n  const [isSocketReady, setSocketReady] = useState(false);\r\n  const [isAlive, setAlive] = useState(null);\r\n  const [leftLabel, setLeftLabel] = useState(null);\r\n  const [rightLabel, setRightLabel] = useState(null);\r\n  const [leftPlayer, setLeftPlayer] = useState(null);\r\n  const [rightPlayer, setRightPlayer] = useState(null);\r\n  const [recognizedSongName, setRecognizedSongName] = useState('');\r\n  const [leftPreferences, setLeftPreferences] = useState(null);\r\n  const [rightPreferences, setRightPreferences] = useState(null);\r\n\r\n  const resultsContainerRef = useRef(null);\r\n  const leftResultRef = useRef(null);\r\n  const rightResultRef = useRef(null);\r\n\r\n  const socketRef = useRef(null);\r\n  const timeoutResetTokenRef = useRef(null);\r\n\r\n  // Get profile objects from player names\r\n  const leftProfile = useMemo(() => {\r\n    if (!leftPlayer || _.isEmpty(profiles)) return {};\r\n    return _.minBy((p) => lev.get(p.nameArcade, leftPlayer), _.values(profiles)) || {};\r\n  }, [leftPlayer, profiles]);\r\n  const rightProfile = useMemo(() => {\r\n    if (!rightPlayer || _.isEmpty(profiles)) return {};\r\n    return _.minBy((p) => lev.get(p.nameArcade, rightPlayer), _.values(profiles)) || {};\r\n  }, [rightPlayer, profiles]);\r\n\r\n  const onChangeAchievements = (playerName) => (prevAchievement, currAchievement) => {\r\n    _.keys(prevAchievement).forEach((achievementName) => {\r\n      if (prevAchievement[achievementName].progress !== currAchievement[achievementName].progress) {\r\n        addPopup({\r\n          type: TYPES.ACHIEVEMENT,\r\n          fadeIn: true,\r\n          fadeOut: true,\r\n          parameters: {\r\n            playerName,\r\n            achievementName,\r\n            progress: [\r\n              prevAchievement[achievementName].progress,\r\n              currAchievement[achievementName].progress,\r\n            ],\r\n          },\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  // Track changes in profiles\r\n  const leftTracked = {\r\n    pp: useTracked(_.get('pp.pp', leftProfile), leftProfile.name),\r\n    elo: useTracked(leftProfile.ratingRaw, leftProfile.name),\r\n    exp: useTracked(leftProfile.exp, leftProfile.name),\r\n    expRank: useTracked(leftProfile.expRank, leftProfile.name),\r\n    achievements: useTracked(\r\n      leftProfile.achievements,\r\n      leftProfile.name,\r\n      onChangeAchievements(leftProfile.name)\r\n    ),\r\n  };\r\n  const resetLeftTracked = useResetTrackedObject(leftTracked);\r\n  const rightTracked = {\r\n    pp: useTracked(_.get('pp.pp', rightProfile), rightProfile.name),\r\n    elo: useTracked(rightProfile.ratingRaw, rightProfile.name),\r\n    exp: useTracked(rightProfile.exp, rightProfile.name),\r\n    expRank: useTracked(rightProfile.expRank, rightProfile.name),\r\n    achievements: useTracked(\r\n      rightProfile.achievements,\r\n      rightProfile.name,\r\n      onChangeAchievements(rightProfile.name)\r\n    ),\r\n  };\r\n  const resetRightTracked = useResetTrackedObject(rightTracked);\r\n\r\n  // Fetch preferences when player id changes\r\n  useEffect(() => {\r\n    if (leftProfile.id) {\r\n      fetchUserPreferences(leftProfile.id).then((response) => {\r\n        setLeftPreferences(response.preferences);\r\n      });\r\n    }\r\n  }, [leftProfile.id, fetchUserPreferences]);\r\n  useEffect(() => {\r\n    if (rightProfile.id) {\r\n      fetchUserPreferences(rightProfile.id).then((response) => {\r\n        setRightPreferences(response.preferences);\r\n      });\r\n    }\r\n  }, [rightProfile.id, fetchUserPreferences]);\r\n\r\n  // Reset the page when sockets didn't receive any messages for a long time\r\n  const restartTimeout = useCallback(() => {\r\n    setAlive(true);\r\n    if (timeoutResetTokenRef.current) {\r\n      clearTimeout(timeoutResetTokenRef.current);\r\n    }\r\n    timeoutResetTokenRef.current = setTimeout(() => {\r\n      // TODO: reset page\r\n      setAlive(false);\r\n      setLeftPlayer(null);\r\n      setRightPlayer(null);\r\n      setLeftLabel(null);\r\n      setRightLabel(null);\r\n      setRecognizedSongName('');\r\n      setLeftPreferences(null);\r\n      setRightPreferences(null);\r\n    }, STATE_RESET_TIMEOUT_SEC * 1000);\r\n  }, []);\r\n\r\n  // Start websockets\r\n  useEffect(() => {\r\n    socketRef.current = new WebSocket(SOCKET_SERVER_IP);\r\n    socketRef.current.onerror = () => {\r\n      setMessage(`Cannot connect to websocket server, please reload the page`);\r\n    };\r\n    socketRef.current.onopen = (e) => {\r\n      setSocketReady(true);\r\n    };\r\n  }, []);\r\n\r\n  // Set the onmessage callback\r\n  useEffect(() => {\r\n    socketRef.current.onmessage = (event) => {\r\n      restartTimeout();\r\n      try {\r\n        const data = event && event.data && JSON.parse(event.data);\r\n        console.log(data);\r\n\r\n        if (data.type === 'result_screen') {\r\n          console.log('Resetting tracking because received result screen');\r\n          resetLeftTracked();\r\n          resetRightTracked();\r\n          const songName = data.data.track_name;\r\n          const leftLabel = _.get('left.chart_label', data.data);\r\n          const rightLabel = _.get('right.chart_label', data.data);\r\n          const leftPlayer = _.get('left.result.player_name', data.data);\r\n          const rightPlayer = _.get('right.result.player_name', data.data);\r\n          setLeftPlayer(leftPlayer);\r\n          setRightPlayer(rightPlayer);\r\n          setLeftLabel(leftLabel);\r\n          setRightLabel(rightLabel);\r\n          setRecognizedSongName(songName);\r\n          appendNewResults(data.data.gained); // Fetch results that we don't have here yet (to calculate elo)\r\n          fetchTopPerSong(songName, leftLabel, rightLabel);\r\n        } else if (data.type === 'chart_selected') {\r\n          setSocketErrorMessage(data.data.error || '');\r\n          if (data.data.leftPlayer || data.data.rightPlayer) {\r\n            setLeftPlayer(data.data.leftPlayer);\r\n            setRightPlayer(data.data.rightPlayer);\r\n          }\r\n          if (data.data.leftLabel || data.data.rightLabel) {\r\n            setLeftLabel(data.data.leftLabel);\r\n            setRightLabel(data.data.rightLabel);\r\n            if (data.data.text) {\r\n              // If we have full info, try to fetch if needed\r\n              const newSongName = data.data.text;\r\n              setRecognizedSongName(newSongName);\r\n              console.log('song name', newSongName, recognizedSongName);\r\n              if (recognizedSongName !== newSongName) {\r\n                fetchTopPerSong(newSongName, data.data.leftLabel, data.data.rightLabel);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.log('on message error', e);\r\n        setMessage(`Error: ${e.message}`);\r\n      }\r\n    };\r\n  }, [\r\n    recognizedSongName,\r\n    fetchTopPerSong,\r\n    restartTimeout,\r\n    appendNewResults,\r\n    resetLeftTracked,\r\n    resetRightTracked,\r\n  ]);\r\n\r\n  // FOR DEBUG\r\n  // useEffect(() => {\r\n  //   if (!_.isEmpty(profiles) && !leftPlayer && !rightPlayer) {\r\n  //     socketRef.current.onmessage({\r\n  //       data:\r\n  //         '{\"type\": \"chart_selected\", \"data\": {\"text\": \"Iolite Sky\", \"leftLabel\": \"D17\", \"rightLabel\": \"S16\", \"leftPlayer\": \"GRUMD\", \"rightPlayer\": \"DINO\"}}',\r\n  //     });\r\n  //   }\r\n  // }, [profiles, leftPlayer, rightPlayer]);\r\n\r\n  // Resize the results blocks to fill the most space on the page\r\n  useEffect(() => {\r\n    // return;\r\n    if (resultsContainerRef.current && leftResultRef.current) {\r\n      if (rightResultRef.current) {\r\n        // Both refs\r\n        const left = leftResultRef.current;\r\n        const right = rightResultRef.current;\r\n        const totalSize = {\r\n          w: resultsContainerRef.current.clientWidth,\r\n          h: resultsContainerRef.current.clientHeight,\r\n        };\r\n        const scaleHH = totalSize.w / (left.offsetWidth + right.offsetWidth);\r\n        const scaleHW = totalSize.h / Math.max(left.offsetHeight, right.offsetHeight);\r\n        const scaleWH = totalSize.w / Math.max(left.offsetWidth, right.offsetWidth);\r\n        const scaleWW = totalSize.h / (left.offsetHeight + right.offsetHeight);\r\n        // console.log(scaleHH, scaleHW, scaleWH, scaleWW);\r\n        if (Math.min(scaleHH, scaleHW) > Math.min(scaleWH, scaleWW)) {\r\n          resultsContainerRef.current.style.flexDirection = 'row';\r\n          resultsContainerRef.current.style.alignItems = 'center';\r\n          if (scaleHH > scaleHW) {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleHW})`;\r\n          } else {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleHH})`;\r\n          }\r\n        } else {\r\n          resultsContainerRef.current.style.flexDirection = 'column';\r\n          resultsContainerRef.current.style.alignItems = 'center';\r\n          if (scaleWH > scaleWW) {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleWW})`;\r\n          } else {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleWH})`;\r\n          }\r\n        }\r\n      } else {\r\n        // One ref\r\n        const left = leftResultRef.current;\r\n        const totalSize = {\r\n          w: resultsContainerRef.current.clientWidth,\r\n          h: resultsContainerRef.current.clientHeight,\r\n        };\r\n        const scaleW = totalSize.w / left.offsetWidth;\r\n        const scaleH = totalSize.h / left.offsetHeight;\r\n        if (scaleW < scaleH) {\r\n          resultsContainerRef.current.style.transform = `scale(${0.98 * scaleW})`;\r\n        } else {\r\n          resultsContainerRef.current.style.transform = `scale(${0.98 * scaleH})`;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  const leftChart = _.find({ chartLabel: leftLabel }, songTopData);\r\n  const rightChart = _.find({ chartLabel: rightLabel }, songTopData);\r\n  const chartsToShow = _.uniq(_.compact([leftChart, rightChart]));\r\n\r\n  return (\r\n    <div className=\"tracker-container\">\r\n      <Popups />\r\n      <div className=\"sidebar\">\r\n        <PlayerCard\r\n          player={leftPlayer}\r\n          profile={leftProfile}\r\n          label={leftLabel}\r\n          trackedData={leftTracked}\r\n          preferences={leftPreferences}\r\n          topPlayersList={topPlayersList}\r\n          isLeft\r\n          addPopup={addPopup}\r\n        />\r\n        <PlayerCard\r\n          player={rightPlayer}\r\n          profile={rightProfile}\r\n          label={rightLabel}\r\n          trackedData={rightTracked}\r\n          preferences={rightPreferences}\r\n          topPlayersList={topPlayersList}\r\n          addPopup={addPopup}\r\n        />\r\n      </div>\r\n      <div className=\"results\" ref={resultsContainerRef}>\r\n        {(error || message) && (\r\n          <div className=\"error\">\r\n            {message}\r\n            <br />\r\n            {error && error.message}\r\n          </div>\r\n        )}\r\n        {isSocketReady &&\r\n          !leftPlayer &&\r\n          !rightPlayer &&\r\n          !socketErrorMessage &&\r\n          !isLoading &&\r\n          _.isEmpty(chartsToShow) &&\r\n          (isAlive === null ? (\r\n            <div className=\"msg\">Waiting for recognizer...</div>\r\n          ) : isAlive ? (\r\n            <div className=\"msg\">Waiting for chart select...</div>\r\n          ) : (\r\n            <div className=\"offline msg\">Recognizer is offline</div>\r\n          ))}\r\n        {isSocketReady &&\r\n          (leftLabel || rightLabel) &&\r\n          !socketErrorMessage &&\r\n          !isLoading &&\r\n          _.isEmpty(chartsToShow) &&\r\n          'No results for this chart'}\r\n        {isLoading && <Loader />}\r\n        {!isLoading &&\r\n          chartsToShow.map((chart, chartIndex) => {\r\n            const leftPlayersHiddenStatus = _.omitBy(\r\n              (v) => !v,\r\n              _.getOr({}, 'playersHiddenStatus', leftPreferences)\r\n            );\r\n            const rightPlayersHiddenStatus = _.omitBy(\r\n              (v) => !v,\r\n              _.getOr({}, 'playersHiddenStatus', rightPreferences)\r\n            );\r\n\r\n            const isHiddenInBoth = Object.keys(leftPlayersHiddenStatus).reduce(\r\n              (obj, key) => ({\r\n                ...obj,\r\n                [key]: leftPlayersHiddenStatus[key] && rightPlayersHiddenStatus[key],\r\n              }),\r\n              {}\r\n            );\r\n            return (\r\n              <Chart\r\n                ref={chartIndex === 0 ? leftResultRef : rightResultRef}\r\n                playersHiddenStatus={isHiddenInBoth}\r\n                key={chart.sharedChartId}\r\n                chart={chart}\r\n                leftProfile={leftProfile}\r\n                rightProfile={rightProfile}\r\n                isSocketView\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TrackerApp);\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TOURNAMENT/LOADING`;\r\nconst SUCCESS = `TOURNAMENT/SUCCESS`;\r\nconst ERROR = `TOURNAMENT/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: {},\r\n  error: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: {},\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchCurrentTournament = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/tournament/info` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport numeral from 'numeral';\r\n\r\nimport './tournaments.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport { fetchCurrentTournament } from 'reducers/tournament';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\nimport ChartLabel from 'components/Leaderboard/ChartLabel';\r\n\r\nimport { labelToTypeLevel } from 'utils/leaderboards';\r\n\r\nexport default function Tournaments() {\r\n  const dispatch = useDispatch();\r\n  const [selectedBracket, setSelectedBracket] = useState(null);\r\n\r\n  const tournData = useSelector((state) => state.tournament.data);\r\n  const profiles = useSelector((state) => state.results.profiles);\r\n  const isLoading = useSelector((state) => state.tournament.isLoading);\r\n  const currentPlayerId = useSelector((state) => _.get('player.id', state.user.data));\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCurrentTournament());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (currentPlayerId && !selectedBracket && _.get('brackets', tournData)) {\r\n      const bracket = _.find((br) => {\r\n        return br.playerIds.includes(currentPlayerId);\r\n      }, tournData.brackets);\r\n      bracket && setSelectedBracket(bracket);\r\n    }\r\n  }, [currentPlayerId, selectedBracket, tournData]);\r\n\r\n  if (isLoading || _.isEmpty(profiles)) {\r\n    return <Loader />;\r\n  }\r\n\r\n  const { tournament, brackets } = tournData;\r\n\r\n  if (!tournament) {\r\n    return null;\r\n  }\r\n\r\n  const date = new Date(tournament.start_date);\r\n  const monthText = date.toLocaleString('default', {\r\n    month: 'long',\r\n  });\r\n  const tournamentTitle = `${date.getFullYear()} ${monthText}`;\r\n\r\n  return (\r\n    <div className=\"tournaments-page\">\r\n      <header>{tournamentTitle}</header>\r\n      <div className=\"description\">\r\n        <div className=\"labeled-item\">\r\n          <div className=\"title\">Start date:</div>\r\n          <div className=\"text\">{new Date(tournament.start_date).toLocaleDateString()}</div>\r\n        </div>\r\n        <div className=\"labeled-item\">\r\n          <div className=\"title\">End date:</div>\r\n          <div className=\"text\">{new Date(tournament.end_date).toLocaleDateString()}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"brackets-title\">Brackets:</div>\r\n      <div className=\"brackets\">\r\n        {brackets.map((bracket) => {\r\n          return (\r\n            <div\r\n              key={bracket.name}\r\n              className={classNames('bracket', {\r\n                active: bracket.name === _.get('name', selectedBracket),\r\n              })}\r\n              onClick={() => setSelectedBracket(bracket)}\r\n            >\r\n              <div className=\"bracket-name\">{bracket.name}</div>\r\n              {bracket.charts.map((chart) => {\r\n                const [type, level] = labelToTypeLevel(chart.label);\r\n                return (\r\n                  <div className=\"chart\" key={chart.sharedChartId}>\r\n                    <ChartLabel type={type} level={level} /> {chart.trackName}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      {selectedBracket && (\r\n        <>\r\n          <div className=\"results-title\">Results:</div>\r\n          <div className=\"results\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"player-name\">player</th>\r\n                  <th className=\"total\">total</th>\r\n                  {selectedBracket.charts.map((chart) => {\r\n                    const [type, level] = labelToTypeLevel(chart.label);\r\n                    return (\r\n                      <th colSpan={3} key={chart.sharedChartId}>\r\n                        <div className=\"chart-header\">\r\n                          <ChartLabel type={type} level={level} />{' '}\r\n                          <NavLink\r\n                            exact\r\n                            to={routes.leaderboard.sharedChart.getPath({\r\n                              sharedChartId: chart.sharedChartId,\r\n                            })}\r\n                          >\r\n                            {chart.trackName}\r\n                          </NavLink>\r\n                        </div>\r\n                      </th>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {(() => {\r\n                  const players = _.flow(\r\n                    _.groupBy('player_id'),\r\n                    _.mapValues(\r\n                      _.flow(\r\n                        _.map((result) => ({\r\n                          ...result,\r\n                          columnIndex: _.findIndex(\r\n                            { sharedChartId: result.shared_chart },\r\n                            selectedBracket.charts\r\n                          ),\r\n                        })),\r\n                        _.groupBy('columnIndex')\r\n                      )\r\n                    )\r\n                  )(selectedBracket.scores);\r\n                  const charts = selectedBracket.charts.map((chart, index) => {\r\n                    return {\r\n                      ...chart,\r\n                      maxScore: _.flow(\r\n                        _.values,\r\n                        _.flatMap(index),\r\n                        _.maxBy('score'),\r\n                        _.get('score')\r\n                      )(players),\r\n                    };\r\n                  });\r\n\r\n                  const playerData = _.mapValues(\r\n                    _.flow(\r\n                      _.toPairs,\r\n                      _.map(([index, results]) => {\r\n                        const maxScore = charts[index].maxScore;\r\n                        const bestPlayerScore = _.flow(_.maxBy('score'), _.get('score'))(results);\r\n                        const percent = ((bestPlayerScore / maxScore) * 100).toFixed(1);\r\n                        return [\r\n                          index,\r\n                          {\r\n                            playerName: results[0].player_name,\r\n                            playcount: results.length,\r\n                            score: bestPlayerScore,\r\n                            percent: percent,\r\n                            percentRaw: bestPlayerScore / maxScore,\r\n                          },\r\n                        ];\r\n                      }),\r\n                      (chartResults) => {\r\n                        const totalPercentRaw = _.sumBy('[1].percentRaw', chartResults);\r\n                        return {\r\n                          infoByIndex: _.fromPairs(chartResults),\r\n                          totalPercentRaw,\r\n                          totalPercent: (totalPercentRaw * 100).toFixed(1),\r\n                        };\r\n                      }\r\n                    ),\r\n                    players\r\n                  );\r\n                  const sortedIds = _.flow(\r\n                    _.keys,\r\n                    _.orderBy((id) => playerData[id].totalPercentRaw, ['desc'])\r\n                  )(playerData);\r\n                  const noResultsIds = _.remove(\r\n                    (id) => sortedIds.includes(_.toString(id)) || !profiles[id],\r\n                    selectedBracket.playerIds\r\n                  );\r\n\r\n                  return [...sortedIds, ...noResultsIds].map((playerId) => {\r\n                    const data = playerData[playerId] || {};\r\n                    const playerName = _.get('name', profiles[playerId]) || data.playerName;\r\n                    return (\r\n                      <tr key={playerId}>\r\n                        <td className=\"player-name\">{playerName}</td>\r\n                        <td className=\"total\">{data.totalPercent || 0}</td>\r\n                        {selectedBracket.charts.map((chart, index) => {\r\n                          const info = data.infoByIndex && data.infoByIndex[index];\r\n                          return (\r\n                            <React.Fragment key={index}>\r\n                              <td>{info && `${info.percent}%`}</td>\r\n                              <td>{info && numeral(info.score).format('0,0')}</td>\r\n                              <td>{info && info.playcount}</td>\r\n                            </React.Fragment>\r\n                          );\r\n                        })}\r\n                      </tr>\r\n                    );\r\n                  });\r\n                })()}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TRACKLIST/LOADING`;\r\nconst SUCCESS = `TRACKLIST/SUCCESS`;\r\nconst ERROR = `TRACKLIST/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTracklist = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/tracklist/stats/XX` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `PLAYERS/LOADING`;\r\nconst SUCCESS = `PLAYERS/SUCCESS`;\r\nconst ERROR = `PLAYERS/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n  error: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: {},\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchPlayers = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/players` }));\r\n      dispatch({ type: SUCCESS, data: data.players });\r\n      return data.players;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport localForage from 'localforage';\r\nimport ReactModal from 'react-modal';\r\nimport _ from 'lodash/fp';\r\n\r\nimport 'react-responsive-ui/style.css';\r\nimport './App.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\nimport { CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nimport SongsTop from 'components/SongsTop/SongsTop';\r\nimport Leaderboard from 'components/Leaderboard/Leaderboard';\r\nimport Ranking from 'components/Ranking/Ranking';\r\nimport Profile from 'components/Profile/Profile';\r\nimport ProfileCompare from 'components/ProfileCompare/ProfileCompare';\r\nimport TopBar from 'components/Shared/TopBar/TopBar';\r\nimport Loader from 'components/Shared/Loader';\r\nimport LoginScreen from 'components/LoginScreen/LoginScreen';\r\nimport SocketTracker from 'components/SocketTracker/SocketTracker';\r\nimport Tournaments from 'components/Tournaments/Tournaments';\r\n\r\nimport { fetchResults, setFilter } from 'reducers/results';\r\nimport { fetchTracklist } from 'reducers/tracklist';\r\nimport { fetchUser } from 'reducers/user';\r\nimport { fetchPreferences } from 'reducers/preferences';\r\nimport { fetchChartsData } from 'reducers/charts';\r\nimport { fetchPlayers } from 'reducers/players';\r\n\r\nReactModal.setAppElement('#root');\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const userData = useSelector((state) => state.user.data);\r\n  const isLoading = useSelector((state) => state.user.isLoading);\r\n\r\n  // const resultsStore = useSelector(state => state.results);\r\n  // console.log(resultsStore)\r\n\r\n  useEffect(() => {\r\n    if (!process.env.REACT_APP_SOCKET) {\r\n      dispatch(fetchUser());\r\n      localForage\r\n        .getItem('filter')\r\n        .then((filter) => {\r\n          if (filter) {\r\n            dispatch(\r\n              setFilter({\r\n                ..._.omit('song', filter),\r\n                chartRange: filter.chartRange && {\r\n                  ...filter.chartRange,\r\n                  range: _.every(\r\n                    (r) => r >= CHART_MIN_MAX[0] && r <= CHART_MIN_MAX[1],\r\n                    filter.chartRange.range\r\n                  )\r\n                    ? filter.chartRange.range\r\n                    : CHART_MIN_MAX,\r\n                },\r\n              })\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => console.error('Cannot get filter from local storage', error));\r\n    }\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!process.env.REACT_APP_SOCKET && userData && userData.player) {\r\n      Promise.all([\r\n        dispatch(fetchPlayers()),\r\n        dispatch(fetchTracklist()),\r\n        dispatch(fetchPreferences()),\r\n      ]).then(() => {\r\n        dispatch(fetchChartsData());\r\n      });\r\n    }\r\n  }, [dispatch, userData]);\r\n\r\n  useEffect(() => {\r\n    if (process.env.REACT_APP_SOCKET) {\r\n      dispatch(fetchTracklist()).then(() => {\r\n        dispatch(fetchResults());\r\n      });\r\n    }\r\n  }, [dispatch]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <Loader />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (process.env.REACT_APP_SOCKET) {\r\n    return <SocketTracker />;\r\n  }\r\n\r\n  if (!userData || !userData.player) {\r\n    return <LoginScreen />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TopBar />\r\n      <Route exact path=\"/\" render={() => <Redirect to={routes.leaderboard.path} />} />\r\n      <Route exact path={routes.leaderboard.path} component={Leaderboard} />\r\n      <Route exact path={routes.leaderboard.sharedChart.path} component={Leaderboard} />\r\n      <Route path={routes.ranking.path} component={Ranking} />\r\n      <Route path={routes.profile.path}>\r\n        <Switch>\r\n          <Route path={routes.profile.path} exact component={Profile} />\r\n          <Route path={routes.profile.compare.path} exact component={ProfileCompare} />\r\n        </Switch>\r\n      </Route>\r\n      <Route path={routes.songs.path} component={SongsTop} />\r\n      <Route path={routes.tournaments.path} component={Tournaments} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport mostPlayed from './mostPlayed';\r\nimport mostPlayedMonth from './mostPlayedMonth';\r\nimport leastPlayed from './leastPlayed';\r\n\r\nexport default combineReducers({\r\n  mostPlayed,\r\n  mostPlayedMonth,\r\n  leastPlayed,\r\n});\r\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport charts from 'reducers/charts';\r\nimport login from 'reducers/login';\r\nimport players from 'reducers/players';\r\nimport popups from 'reducers/popups';\r\nimport preferences from 'reducers/preferences';\r\nimport presets from 'reducers/presets';\r\nimport profiles from 'reducers/profiles';\r\nimport results from 'reducers/results';\r\nimport topPerSong from 'reducers/topPerSong';\r\nimport tournament from 'reducers/tournament';\r\nimport tracklist from 'reducers/tracklist';\r\nimport trackStats from 'reducers/trackStats';\r\nimport user from 'reducers/user';\r\n\r\nconst rootReducer = combineReducers({\r\n  charts,\r\n  login,\r\n  players,\r\n  popups,\r\n  preferences,\r\n  presets,\r\n  profiles,\r\n  results,\r\n  topPerSong,\r\n  tournament,\r\n  tracklist,\r\n  trackStats,\r\n  user,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && process.env.NODE_ENV === 'development'\r\n    ? compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__({\r\n          stateSanitizer: (state) => ({\r\n            ...state,\r\n            charts: {\r\n              ...state.charts,\r\n              data: `big object`,\r\n            },\r\n            results: {\r\n              ...state.results,\r\n              data: `big array`,\r\n              results: `big array`,\r\n              sharedCharts: 'big object',\r\n              originalData: 'big object',\r\n              resultInfo: 'big object',\r\n              profiles: `big object`,\r\n            },\r\n          }),\r\n        })\r\n      )\r\n    : applyMiddleware(thunk)\r\n);\r\n","import 'promise-polyfill';\r\nimport 'whatwg-fetch';\r\nimport 'utils/polyfills';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.scss';\r\nimport App from 'components/App';\r\n\r\nimport { store } from 'reducers';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","\n\t\t\t\tvar addMethods = require(\"../../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"getProcessedProfiles\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"59428aa818000367af89.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t"],"sourceRoot":""}