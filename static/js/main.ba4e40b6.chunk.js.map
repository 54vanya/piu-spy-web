{"version":3,"sources":["webpack:///./src/utils/workers/profilesPostProcess.js?f05c","utils/polyfills.js","constants/routes.js","constants/leaderboard.js","components/Shared/Loader/index.js","reducers/user/resetAction.js","utils/fetch.js","constants/backend.js","reducers/trackStats/mostPlayed.js","reducers/trackStats/mostPlayedMonth.js","reducers/trackStats/leastPlayed.js","utils/leaderboards.js","utils/date.js","components/SongsTop/SongsTop.js","components/Shared/Overlay/Overlay.js","components/Shared/ToggleButton/ToggleButton.js","components/Shared/Input/Input.js","components/Shared/Toggle/Toggle.js","components/Shared/CollapsibleBar/index.js","components/Shared/Flag/index.js","components/Shared/Range/index.js","components/Leaderboard/ChartFilter.js","utils/expRanks.js","utils/exp.js","utils/achievements.js","utils/score.js","utils/workers/profilesPostProcess.js","constants/env.js","reducers/results.js","reducers/presets.js","components/Leaderboard/PresetsControl.js","utils/colors.js","reducers/selectors.js","components/Leaderboard/Leaderboard.js","components/Ranking/RankingList.js","components/Ranking/RankingFaq.js","reducers/preferences.js","components/Ranking/Ranking.js","components/Profile/MostPlayed.js","components/Profile/ExpFaq.js","reducers/profiles.js","utils/profiles.js","components/Profile/Profile.js","components/ProfileCompare/ProfileCompare.js","reducers/user/index.js","reducers/login.js","components/Shared/TopBar/TopBar.js","components/LoginScreen/LoginScreen.js","components/SocketTracker/helpers.js","reducers/topPerSong.js","components/SocketTracker/PlayerCard.js","components/SocketTracker/Result.js","components/SocketTracker/Chart.js","components/SocketTracker/SocketTracker.js","reducers/tracklist.js","components/App.js","reducers/trackStats/index.js","reducers/popups.js","reducers/index.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","Number","isNaN","value","Math","sign","x","Array","prototype","findIndex","Object","defineProperty","predicate","this","TypeError","o","len","length","thisArg","arguments","k","kValue","call","configurable","writable","routes","leaderboard","path","songs","ranking","faq","profile","getPath","params","id","compare","compareToId","SORT","DEFAULT","PROTAGONIST","RANK_ASC","RANK_DESC","PP_ASC","PP_DESC","NEW_SCORES_PLAYER","EASIEST_SONGS","HARDEST_SONGS","CHART_MIN_MAX","DURATION","STD","SHORT","REMIX","FULL","DURATION_DEFAULT","_","values","Loader","className","width","height","viewBox","xmlns","fill","cx","cy","r","attributeName","from","to","begin","dur","calcMode","repeatCount","fillOpacity","RESET","resetUser","type","fetchJson","url","request","method","postJson","body","JSON","stringify","headers","defaultHeaders","async","dispatch","getState","session","cookies","get","response","fetch","credentials","status","json","error","isObject","isString","Error","message","Promise","reject","HOST","SOCKET_SERVER_IP","LOADING","SUCCESS","ERROR","initialState","isLoading","data","TimeAgo","addLocale","ru","timeAgo","timeStyle","flavour","gradation","convenient","units","tooltipFormatter","result","isExactDate","dateObject","toLocaleDateString","resultType","undefined","isMyBest","isMachineBest","style","display","alignItems","flexDirection","getTimeAgo","date","dayDiff","moment","startOf","diff","hour","format","parseDate","textDate","toDate","Date","TopList","fetchList","title","renderRightSide","useState","setData","setLoading","getRightSide","item","countplay","useEffect","then","success","catch","map","index","key","classNames","best","full_name","leastPlayedRightSide","last_play","connect","fetchMostPlayed","fetchMostPlayedMonth","fetchLeastPlayed","POPPER_MODIFIERS","preventOverflow","enabled","padding","boundariesElement","PLACEMENT_ARROW_MAPPING","right","left","top","bottom","getArrowPlacement","placement","split","Overlay","state","isVisible","containerItemRef","React","createRef","renderPopper","bind","toggleOverlayVisibility","setState","event","target","closest","hideOverlay","ref","arrowProps","outOfBoundaries","scheduleUpdate","props","children","hideWhenOutOfBounds","data-placement","overlayClassName","overlayItem","Fragment","onClick","ReactDOM","createPortal","container","document","modifiers","referenceElement","current","PureComponent","defaultTypes","listensToClickOutside","ToggleButton","active","onToggle","text","Input","isNil","defaultValue","bindAll","prevProps","e","newValue","onChange","numericValue","min","max","onBlur","handleBlur","omit","onKeyPress","handleKeyPress","onInput","handleChange","noop","Component","defaultProps","Toggle","constructor","super","checked","uniqueId","render","htmlFor","CollapsibleBar","open","defaultOpen","Flag","region","backgroundImage","Range","range","step","renderTrack","onMouseDown","onTouchStart","position","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","justifyContent","boxShadow","ChartFilter","filterValue","onChangeEx","getOr","duration","buttonText","t","isEqual","isEmpty","newMin","newMax","includes","without","ranks","threshold","iconName","color","gradeValue","F","D","C","B","A","S","SS","SSS","getExp","chart","isBestGradeOnChart","chartType","chartLevel","grade","getRankImg","rank","src","process","alt","achievements","icon","GiRank1","description","resultFunction","progress","combo","GiRank2","GiRank3","GiSmokingFinger","playedSongs","songsToPlay","song","uniq","GiRetroController","GiLoveSong","Улитка","GiSnail","charts","some","songToPlay","chartLabel","GiPodiumSecond","miss","bad","GiLifeBar","GiWoodenPegleg","good","great","initialAchievementState","getScoreWithoutBonus","score","postProcessProfiles","profiles","tracklist","mapValues","neededGrades","expRank","findLast","exp","expRanks","expRankNext","find","double","single","gradeIncrementMap","accuracyByLevel","keys","resultsByLevel","forEach","level","count","sum","average","res","isRank","accuracy","thisGrade","thisPlayerId","playerId","otherResults","results","filter","sort","a","b","indexOf","gradeIncArray","gradeInc","l","g","prog","incrementLevel","points","flow","toPairs","toNumber","accuracyPoints","number","minimumNumber","totalCharts","round","sqrt","getMinimumNumber","bonusCoefficientNumber","bonus","getBonusForLevel","achievementBonus","countAcc","sumAccuracy","interpolateDifficulties","sharedCharts","processedProfiles","sums","accData","accuracyPointsInterpolated","i","regression","predict","equation","f","calculated","yx","push","interpolatedPoint","pair","avgAccuracy","interpolatedDifficulty","weight","identity","reduce","acc","diffSum","weightSum","averageDifficulty","getProcessedProfiles","battles","debug","resultInfo","chartId","chartResults","maxPP","maxScore","K","scoreRaw","pp","ppPotential","ppRatio","ppFixed","toFixed","scores","pp_","s","rating","processPP","dictScoreInfo","logText","dictChartElo","getDictChartEloId","enemyScore","sharedChartId","dictRatingDiff","getDictRatingDiffId","p1","p2","scoreMultiplier","scoreInfo","enemyScoreInfo","startingRating","battleCount","r1","r2","R1","R2","E1","E2","S1","S2","kRating1","kRating2","maxK1","maxK2","kLevel1","kLevel2","kLevel","kMinimizer","startsWith","K1","K2","dr1","dr2","baseEloId1","baseEloId2","baseEloP1","baseEloP2","ratingDiffId1","ratingDiffId2","ratingDiff","ratingDiffLast","floor","playersSorted","orderBy","battleDate","player","lastPlace","rankingHistory","place","getTime","p1LastRating","last","ratingHistory","p2LastRating","toInteger","ratingRaw","now","processBattles","localStorage","window","debugOn","setItem","debugOff","removeItem","DEBUG","getItem","SET_FILTER","RESET_FILTER","RANKING_CHANGE_SET","PROFILES_UPDATE","highscoresUrl","REACT_APP_SOCKET","defaultFilter","showRank","showRankAndNorank","isLoadingRanking","players","gradeComparator","guessGrade","misses","bads","goods","greats","mapResult","recognition_notes","isUnknownPlayer","arcade_name","isIntermediateResult","shared_chart","nickname","nicknameArcade","gained","exact_gain_date","rank_mode","_r","originalChartMix","original_mix","originalChartLabel","original_label","originalScore","original_score","scoreIncrease","score_increase","calories","perfect","perfects","max_combo","mods","mods_list","isHJ","maxTotalSteps","infos","fixableIndex","absentNumbersCount","localStepSum","isNumber","tryFixIncompleteResult","accRaw","accuracyRaw","getMaxRawScore","initializeProfile","fromPairs","nameArcade","resultsByGrade","lastResultDate","grades","lastBattleDate","achName","getProfileInfoFromResult","replace","convert","cap","achState","fetchResults","processResultsData","console","log","shared_charts","mappedResults","getTopResultId","getBestGradeResultId","topResults","bestGradeResults","resRaw","sharedChart","label","toUpper","chart_label","match","track_name","max_total_steps","totalResultsCount","chartTop","topResultId","currentTopResult","oldScoreIndex","splice","newScoreIndex","sortedLastIndexBy","latestScoreDate","enemyResult","bestGradeResultId","currentBestGradeRes","maxScoreCandidate","processData","originalData","input","promise","worker","WorkerProfilesProcessing","profilesProcessing","output","q","calculateRankingChanges","terminate","setFilter","getListOfNames","getMapOfRatings","all","localForage","lastChangedRanking","lastChangedRankingPoints","lastFetchedRanking","listNow","listLastFetched","listLastChanged","mapPointsNow","mapPointsLastFetched","rankingsPointsMap","listPrev","warn","SELECT_PRESET","LOAD_PRESETS","LOADING_START","LOADING_END","presets","currentPreset","itemToOption","reloadPresets","startLoading","endLoading","selectPreset","openPreset","noPresetsMessage","mapDispatchToProps","loadPresets","savePreset","newPreset","confirm","withoutOldPreset","remove","newPresets","deletePreset","PresetsControl","onChangeSelection","selected","onRewritePreset","onSavePreset","isAddingNew","classNamePrefix","placeholder","options","noOptionsMessage","disabled","colorsArray","playersSelector","createSelector","user","isCurrentPlayer","sortBy","it","toLower","filteredDataSelector","preferences","playersHiddenStatus","names","namesOr","playersOr","namesNot","playersNot","sortingType","protagonist","excludeAntagonists","defaultSorting","newScoresProtagonistSorting","protagonistSorting","row","protIndex","protScore","enemies","take","uniqBy","distanceFromProtagonist","dist","enemy","getPpSorting","field","direction","info","Infinity","getEloSorting","getDiffSorting","chartInfo","sortingFunctions","compact","chartRange","items","rows","filterCharts","showOnlyRank","occuredNames","alreadyOccured","rowNames","every","size","matchSorter","trim","ANIMATION_DURATION","sortingOptions","resetFilter","Leaderboard","showItemsCount","chartOverrides","curry","onRefresh","onTypeSongName","debounce","onRedoLatestResult","throttle","overrides","drop","onUndoLatestResult","undoedResult","maxBy","undoedPlayerId","previousPlayerResult","newResults","latestScore","overrideChart","renderSimpleSearch","renderFilters","closeMenuOnSelect","isMulti","renderSortings","isClearable","filteredData","canShowMore","visibleData","slice","showProtagonistEloChange","showProtagonistPpChange","highlightProtagonist","protagonistName","uniqueSelectedNames","preset","chartOriginal","chartIndex","first","topPlace","occuredNicknames","isPlayerHidden","isSecondOccurenceInResults","singlep","doublep","coop","href","queryString","search_query","rel","isActive","currentIndex","canUndo","enterAnimation","leaveAnimation","typeName","maintainContainerHeight","isProtagonist","nameIndex","placeDifference","newIndex","prevScore","findLastIndex","inf","ratingInfoBlock","flag","empty","latest","fontWeight","vj","hj","content","tooltipClassName","numeral","exact","getGradeImg","RankingList","updatePreferences","playerIndex","isHidden","change","prevRating","down","up","set","RankingFaq","CHANGE","defaultPreferences","rankingSelector","Ranking","component","withRouter","limit","setLimit","latestDate","ExpFaq","setProfilesFilter","resetProfilesFilter","cutRange","array","startIndex","endIndex","firstElement","lastElement","defaultGradesDistribution","defaultGradesWithLevelsDistribution","flatMap","profileSelectorCreator","idParamName","levelsDistribution","y","singlesLevels","doublesLevels","gradesData","update","gradesDistribution","groupBy","pick","gradesValues","gradesAndLevelsDistribution","groupedResults","counts","countBy","reduced","levelsData","lastTickRating","lastTickRanking","lastTick","firstTick","lastDay","endOf","minMaxRange","filterRange","dayRange","dayRangeMs","placesChanges","ratingChanges","MIN_GRAPH_HEIGHT","profileSelector","otherPlayersSelector","ind","Profile","isLevelGraphCombined","showFaq","onChangeDayRange","onShowFaq","onHideFaq","componentWillUnmount","renderRankingHistory","minHeight","aspect","margin","strokeDasharray","dataKey","domain","tickFormatter","allowDecimals","stroke","isAnimationActive","payload","strokeWidth","dot","renderPlaceHistory","dataMax","interval","reversed","renderGrades","ticks","stackId","renderGradesWithLevels","stackOffset","doubleItems","singleItems","abs","dataMin","offset","renderLevels","totalD","totalS","renderGradeBlock","obj","typeLetter","progr","minNumber","currentNumber","levelString","complete","zero","renderAchievement","achievement","Icon","renderProfile","otherPlayers","expProgress","history","ariaHideApp","isOpen","onRequestClose","ceil","currentRange","dateL","dateR","l1","l2","MostPlayed","BARS_MODES","SINGLE_TWO","SINGLE_FIVE","DOUBLE_TWO","DOUBLE_FIVE","BOTH_TWO","BOTH_FIVE","getCompareBars","mode","profile1Selector","profile2Selector","getCombinedData","memoize","rc1","rc2","allRC","rating2","rating1","sortedUniqBy","allPC","place2","place1","perLevelComparison","p1win","p1notPlayed","p2win","p2notPlayed","notPlayed","twoBars","p1index","p2index","perType","normalizeTwo","dataObj","totalPlayed","normalizeFive","total","chartLevels","ProfileCompare","compareBarsMode","rhMargin","rhXDomain","rhYDomain","rhXTickFormatter","rhTooltip","profile2","p1Name","p2Name","plcMargin","plcTooltip","isTwo","renderLegendItem","plcXDomain","plcXTicks","plcXFormatter","combinedData","renderPerLevelComparison","layout","profile1","fetchUser","login","googleResponse","token","tokenId","expires","loginACs","logout","isLoadingLogin","isLoadingUser","isClown","setClown","onGoogleResponse","clientId","onSuccess","onFailure","cookiePolicy","preprocessData","fullRes","stepSum","n","track","mix","resultInfoOverrides","numb","hasRankScore","useTracked","resetIndicatorData","isDebugOn","prevData","setPrevData","currData","setCurrData","resetIndicator","useRef","reset","useCallback","useMemo","useResetTrackedObject","object","tracking","fetchingParams","ChartLabel","PlayerCard","trackedData","isLeft","topPlayersList","renderDeltaText","prevN","delta","rivals","pl","closestPlayers","takenWidth","emptyWidth","diffWidth","renderExpLine","elo","Result","leftProfile","rightProfile","mod","avMod","Chart","forwardRef","interpDiff","STATE_RESET_TIMEOUT","topPlayersListSelector","fetchTopPerSong","songName","leftLabel","rightLabel","song_name","join","processedData","appendNewResults","lastDate","start_date","appendedResults","currentResults","oldResult","old","mergedData","fetchUserPreferences","topPerSong","songTopData","setMessage","socketErrorMessage","setSocketErrorMessage","isSocketReady","setSocketReady","isAlive","setAlive","setLeftLabel","setRightLabel","leftPlayer","setLeftPlayer","rightPlayer","setRightPlayer","recognizedSongName","setRecognizedSongName","leftPreferences","setLeftPreferences","rightPreferences","setRightPreferences","resultsContainerRef","leftResultRef","rightResultRef","socketRef","timeoutResetTokenRef","minBy","p","lev","leftTracked","resetLeftTracked","rightTracked","resetRightTracked","restartTimeout","clearTimeout","setTimeout","WebSocket","onerror","onopen","onmessage","parse","newSongName","totalSize","clientWidth","h","clientHeight","scaleHH","offsetWidth","scaleHW","offsetHeight","scaleWH","scaleWW","transform","scaleW","scaleH","leftChart","rightChart","chartsToShow","leftPlayersHiddenStatus","rightPlayersHiddenStatus","fetchTracklist","fetchPreferences","userData","SocketTracker","SongsTop","combineReducers","mostPlayed","action","mostPlayedMonth","leastPlayed","ADD_POPUP","REMOVE_POPUP","ID_PREFIX","popups","rootReducer","parameters","merge","hasPrevList","playerOriginal","trackStats","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","getElementById"],"mappings":"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EzO,EAASG,QACvBG,IAAE2O,QAAQ,CAACjP,EAASG,OAAQsO,QAItC,kBAAC,GAAD,CACExD,KAAK,OACLF,OAAQ0D,EAASO,SAAShP,EAASI,MACnC4K,SAAU,SAAAD,GACRU,EAAS,CACPgD,SAAU1D,EAAM,uBACR0D,GADQ,CACEzO,EAASI,OACvBE,IAAE2O,QAAQ,CAACjP,EAASI,MAAOqO,YClL1C,MAAMS,GAAQ,CACnB,CACEC,UAAW,EACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,QAET,CA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","file":"static/js/main.ba4e40b6.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"getProcessedProfiles\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"83d4a872d99d900aa155.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","/* eslint-disable */\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\r\nNumber.isNaN =\r\n  Number.isNaN ||\r\n  function(value) {\r\n    return value !== value;\r\n  };\r\n\r\nif (typeof Math.sign === 'undefined') {\r\n  Math.sign = function(x) {\r\n    return x > 0 ? 1 : x < 0 ? -1 : x;\r\n  };\r\n}\r\n\r\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\r\nif (!Array.prototype.findIndex) {\r\n  Object.defineProperty(Array.prototype, 'findIndex', {\r\n    value: function(predicate) {\r\n      // 1. Let O be ? ToObject(this value).\r\n      if (this == null) {\r\n        throw new TypeError('\"this\" is null or not defined');\r\n      }\r\n\r\n      var o = Object(this);\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('predicate must be a function');\r\n      }\r\n\r\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n      var thisArg = arguments[1];\r\n\r\n      // 5. Let k be 0.\r\n      var k = 0;\r\n\r\n      // 6. Repeat, while k < len\r\n      while (k < len) {\r\n        // a. Let Pk be ! ToString(k).\r\n        // b. Let kValue be ? Get(O, Pk).\r\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n        // d. If testResult is true, return k.\r\n        var kValue = o[k];\r\n        if (predicate.call(thisArg, kValue, k, o)) {\r\n          return k;\r\n        }\r\n        // e. Increase k by 1.\r\n        k++;\r\n      }\r\n\r\n      // 7. Return -1.\r\n      return -1;\r\n    },\r\n    configurable: true,\r\n    writable: true,\r\n  });\r\n}\r\n","export const routes = {\r\n  leaderboard: {\r\n    path: `/leaderboard`,\r\n  },\r\n  songs: {\r\n    path: `/songs`,\r\n  },\r\n  ranking: {\r\n    path: `/ranking`,\r\n    faq: {\r\n      path: '/ranking/faq',\r\n    },\r\n  },\r\n  profile: {\r\n    path: `/profiles/:id`,\r\n    getPath: params => `/profiles/${params.id}`,\r\n    compare: {\r\n      path: `/profiles/:id/vs/:compareToId`,\r\n      getPath: params => `/profiles/${params.id}/vs/${params.compareToId}`,\r\n    },\r\n  },\r\n};\r\n","import _ from 'lodash/fp';\r\n\r\nexport const SORT = {\r\n  DEFAULT: 'default',\r\n  PROTAGONIST: 'protagonist',\r\n  RANK_ASC: 'rankAsc',\r\n  RANK_DESC: 'rankDesc',\r\n  PP_ASC: 'ppAsc',\r\n  PP_DESC: 'ppDesc',\r\n  NEW_SCORES_PLAYER: 'newScoresPlayer',\r\n  EASIEST_SONGS: 'easiestSongs',\r\n  HARDEST_SONGS: 'hardestSongs',\r\n};\r\n\r\nexport const CHART_MIN_MAX = [1, 28];\r\nexport const DURATION = {\r\n  STD: 'Standard',\r\n  SHORT: 'Short',\r\n  REMIX: 'Remix',\r\n  FULL: 'Full',\r\n};\r\nexport const DURATION_DEFAULT = _.values(DURATION);\r\n","import React from 'react';\r\n\r\nimport './loader.scss';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"loader\">\r\n      <svg\r\n        width=\"40\"\r\n        height=\"12\"\r\n        viewBox=\"0 0 120 30\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"#eee\"\r\n      >\r\n        <circle cx=\"15\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"60\" cy=\"15\" r=\"9\" fillOpacity=\"0.3\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"9\"\r\n            to=\"9\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"9;15;9\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"0.5\"\r\n            to=\"0.5\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\".5;1;.5\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"105\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","export const RESET = `USER/RESET`;\r\nexport const resetUser = () => ({ type: RESET });\r\n","import _ from 'lodash/fp';\r\nimport cookies from 'browser-cookies';\r\n\r\nimport { resetUser } from 'reducers/user/resetAction';\r\n\r\nexport const fetchJson = ({ url }) => request({ url, method: 'get' });\r\nexport const postJson = ({ url, body }) =>\r\n  request({\r\n    url,\r\n    method: 'post',\r\n    body: JSON.stringify(body),\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n    },\r\n  });\r\n\r\nconst defaultHeaders = {};\r\n\r\nexport const request = ({ url, method, body, headers }) => async (dispatch, getState) => {\r\n  try {\r\n    const session = cookies.get('session');\r\n    if (session) {\r\n      defaultHeaders['Session'] = session;\r\n    }\r\n    const response = await fetch(url, {\r\n      method,\r\n      body,\r\n      headers: { ...defaultHeaders, ...headers },\r\n      credentials: 'include',\r\n    });\r\n    if (response.status >= 200 && response.status < 300) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      const error = await response.json();\r\n      if (_.isObject(error) && _.isString(error.error)) {\r\n        throw new Error(error.error);\r\n      } else if (_.isString(error)) {\r\n        throw new Error(error);\r\n      } else {\r\n        throw new Error('HTTP Status ' + response.status);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    if (error.message === 'Invalid session') {\r\n      dispatch(resetUser());\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n","// export const HOST = 'http://localhost:5000';\r\nexport const HOST = 'https://vps720616.ovh.net:5000';\r\nexport const SOCKET_SERVER_IP = 'ws://127.0.0.1:6789';\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `MOST_PLAYED/LOADING`;\r\nconst SUCCESS = `MOST_PLAYED/SUCCESS`;\r\nconst ERROR = `MOST_PLAYED/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchMostPlayed = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-played` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `MOST_PLAYED_MONTH/LOADING`;\r\nconst SUCCESS = `MOST_PLAYED_MONTH/SUCCESS`;\r\nconst ERROR = `MOST_PLAYED_MONTH/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchMostPlayedMonth = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-played-month` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `LEAST_PLAYED/LOADING`;\r\nconst SUCCESS = `LEAST_PLAYED/SUCCESS`;\r\nconst ERROR = `LEAST_PLAYED/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchLeastPlayed = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-time-not-played` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport moment from 'moment';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\n\r\nconst timeStyle = {\r\n  flavour: 'long',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nexport const tooltipFormatter = result => {\r\n  if (!result.isExactDate) {\r\n    const resultType =\r\n      result.isMyBest === undefined && result.isMachineBest === undefined\r\n        ? 'с my best или machine best'\r\n        : result.isMyBest\r\n        ? 'с my best'\r\n        : result.isMachineBest\r\n        ? 'с machine best'\r\n        : 'хз откуда';\r\n    return (\r\n      <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n        <div>точная дата взятия неизвестна</div>\r\n        <div>скор был записан {resultType}</div>\r\n        <div>дата записи: {result.dateObject.toLocaleDateString()}</div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return result.dateObject.toLocaleDateString();\r\n  }\r\n};\r\n\r\nexport const getTimeAgo = date => {\r\n  const dayDiff = moment()\r\n    .startOf('day')\r\n    .diff(moment(date).startOf('day'), 'days');\r\n  const hour = moment(date).hour();\r\n  if (moment().hour() < 5) {\r\n    return dayDiff <= 1 ? 'сегодня' : timeAgo.format(date, timeStyle);\r\n  }\r\n  return dayDiff === 0\r\n    ? hour < 5\r\n      ? 'вчера ночью'\r\n      : 'сегодня'\r\n    : dayDiff === 1\r\n    ? 'вчера'\r\n    : timeAgo.format(date, timeStyle);\r\n};\r\n","import moment from 'moment';\r\n\r\nexport const parseDate = textDate => {\r\n  if (typeof textDate === 'string') {\r\n    return moment(textDate, 'YYYY-MM-DD HH:mm:ss').toDate();\r\n  } else {\r\n    return new Date(textDate);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaPlay } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\n// styles\r\nimport './songs-top.scss';\r\n\r\n// components\r\nimport Loader from 'components/Shared/Loader';\r\n\r\n// constants\r\n\r\n// reducers\r\nimport { fetchMostPlayed } from 'reducers/trackStats/mostPlayed';\r\nimport { fetchMostPlayedMonth } from 'reducers/trackStats/mostPlayedMonth';\r\nimport { fetchLeastPlayed } from 'reducers/trackStats/leastPlayed';\r\n\r\n// utils\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { parseDate } from 'utils/date';\r\n\r\n// code\r\nfunction TopList({ fetchList, title, renderRightSide }) {\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const getRightSide =\r\n    renderRightSide ||\r\n    (item => (\r\n      <div className=\"playcount\">\r\n        <FaPlay />\r\n        <span>{item.countplay}</span>\r\n      </div>\r\n    ));\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchList()\r\n      .then(data => {\r\n        data.success && setData(data.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [fetchList]);\r\n\r\n  return (\r\n    <div className=\"top-songs-list\">\r\n      <div className=\"top-songs-header\">\r\n        <span>{title}</span>\r\n      </div>\r\n      {isLoading && <Loader />}\r\n      {!isLoading &&\r\n        data.map((item, index) => {\r\n          return (\r\n            <div key={item.id} className=\"top-songs-item\">\r\n              <div className={classNames('place', `top-${index + 1}`, { best: index < 3 })}>\r\n                <span>{index + 1}.</span>\r\n              </div>\r\n              <div className=\"song-name\">{item.full_name}</div>\r\n              {getRightSide(item)}\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst leastPlayedRightSide = item => (\r\n  <div className=\"date\">\r\n    <span>{item.last_play ? getTimeAgo(parseDate(item.last_play)) : 'никогда'}</span>\r\n  </div>\r\n);\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    fetchMostPlayed,\r\n    fetchMostPlayedMonth,\r\n    fetchLeastPlayed,\r\n  }\r\n)(function SongsTop({ fetchMostPlayed, fetchMostPlayedMonth, fetchLeastPlayed }) {\r\n  return (\r\n    <div className=\"songs-top-page\">\r\n      <TopList fetchList={fetchMostPlayed} title=\"топ популярных треков\" />\r\n      <TopList fetchList={fetchMostPlayedMonth} title=\"топ популярных треков за месяц\" />\r\n      <TopList\r\n        fetchList={fetchLeastPlayed}\r\n        title=\"треки, которые долго не играли\"\r\n        renderRightSide={leastPlayedRightSide}\r\n      />\r\n      <div className=\"top-songs-list -placeholder\" />\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport toBe from 'prop-types';\r\nimport { Popper } from 'react-popper';\r\nimport classNames from 'classnames';\r\nimport listensToClickOutside from 'react-onclickoutside';\r\n\r\nimport './overlay.scss';\r\n\r\nconst POPPER_MODIFIERS = {\r\n  preventOverflow: {\r\n    enabled: true,\r\n    padding: 10,\r\n    boundariesElement: 'viewport',\r\n  },\r\n};\r\n\r\nconst PLACEMENT_ARROW_MAPPING = {\r\n  right: 'left',\r\n  left: 'right',\r\n  top: 'bottom',\r\n  bottom: 'top',\r\n};\r\n\r\nconst getArrowPlacement = placement => {\r\n  return placement && PLACEMENT_ARROW_MAPPING[placement.split('-')[0]];\r\n};\r\n\r\nclass Overlay extends React.PureComponent {\r\n  static propTypes = {\r\n    placement: toBe.string,\r\n    overlayItem: toBe.any,\r\n    hideWhenOutOfBounds: toBe.bool,\r\n  };\r\n\r\n  static defaultTypes = {\r\n    placement: 'bottom',\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isVisible: false,\r\n    };\r\n    this.containerItemRef = React.createRef();\r\n    this.renderPopper = this.renderPopper.bind(this);\r\n    this.toggleOverlayVisibility = this.toggleOverlayVisibility.bind(this);\r\n  }\r\n\r\n  hideOverlay() {\r\n    this.setState({\r\n      isVisible: false,\r\n    });\r\n  }\r\n\r\n  toggleOverlayVisibility() {\r\n    this.setState({\r\n      isVisible: !this.state.isVisible,\r\n    });\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    const preventHiding = event && event.target.closest('.inner-popper-overlay'); // prevent overlays from hiding when a modal is opened within overlay\r\n\r\n    if (!preventHiding) {\r\n      this.hideOverlay();\r\n    }\r\n  }\r\n\r\n  renderPopper({ ref, style, placement, arrowProps, scheduleUpdate, outOfBoundaries }) {\r\n    const { children, hideWhenOutOfBounds } = this.props;\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        data-placement={placement}\r\n        className={classNames(\r\n          'inner-popper-overlay',\r\n          `arrow-${getArrowPlacement(placement)}`,\r\n          this.props.overlayClassName,\r\n          { 'out-of-bounds': outOfBoundaries && hideWhenOutOfBounds }\r\n        )}\r\n      >\r\n        <div className=\"arrow-hider\">\r\n          <div className=\"arrow\" ref={arrowProps.ref} style={arrowProps.style} />\r\n        </div>\r\n        <div\r\n          className=\"inner-popper-content\"\r\n          // ref={ref => this.setupPopperContentRef(scheduleUpdate, ref)}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { placement, overlayItem } = this.props;\r\n    const { isVisible } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"overlay-item\"\r\n          ref={this.containerItemRef}\r\n          onClick={this.toggleOverlayVisibility}\r\n        >\r\n          {overlayItem}\r\n        </div>\r\n        {isVisible &&\r\n          ReactDOM.createPortal(\r\n            <Popper\r\n              container={document.body}\r\n              modifiers={POPPER_MODIFIERS}\r\n              placement={placement}\r\n              referenceElement={this.containerItemRef.current}\r\n            >\r\n              {this.renderPopper}\r\n            </Popper>,\r\n            document.body\r\n          )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default listensToClickOutside(Overlay);\r\n","import React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './toggle-button.scss';\r\n\r\nexport default class ToggleButton extends React.PureComponent {\r\n  static propTypes = {\r\n    text: toBe.string,\r\n    onToggle: toBe.func,\r\n    active: toBe.bool,\r\n  };\r\n\r\n  render() {\r\n    const { active, onToggle, text } = this.props;\r\n    return (\r\n      <div\r\n        className={classNames('toggle-button', { active: active })}\r\n        onClick={() => onToggle(!active)}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable react/no-deprecated */\r\n// imports from vendor deps\r\nimport React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\n\r\n// imports from styles\r\nexport default class Input extends React.Component {\r\n  static propTypes = {\r\n    value: toBe.any,\r\n    defaultValue: toBe.any,\r\n    onChange: toBe.func,\r\n    onBlur: toBe.func,\r\n    type: toBe.string,\r\n    className: toBe.string,\r\n    trimOnBlur: toBe.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    value: null,\r\n    type: 'text',\r\n    onChange: _.noop,\r\n    onBlur: _.noop,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: (!_.isNil(props.value) ? props.value : props.defaultValue) || '',\r\n    };\r\n    _.bindAll(['handleChange', 'handleBlur', 'handleKeyPress'], this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.value !== this.props.value) {\r\n      this.setState({ value: this.props.value });\r\n    }\r\n  }\r\n\r\n  handleChange(e) {\r\n    const newValue = e.target.value;\r\n    this.setState({ value: newValue }, () => this.props.onChange(newValue));\r\n  }\r\n\r\n  handleBlur(e) {\r\n    const { type } = this.props;\r\n    const { value } = this.state;\r\n    if (type === 'number') {\r\n      const numericValue = Number(value);\r\n      if (numericValue >= Number(e.target.min) && numericValue <= Number(e.target.max)) {\r\n        this.props.onBlur(numericValue, e);\r\n      } else {\r\n        this.setState({ value: this.props.value });\r\n        this.props.onBlur(this.props.value, e);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleKeyPress(e) {\r\n    if (e.key === 'Enter') {\r\n      this.handleBlur(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props;\r\n\r\n    // HACK: This component uses onInput instead of onChange\r\n    // because IE11 fails to call onChange events when you paste/cut using context menu (RMB)\r\n    // We're using onInput because it works fine, and because for text input\r\n    // there's no difference between how onChange and onInput work\r\n    return (\r\n      <input\r\n        {..._.omit(['defaultValue', 'onChange'], this.props)}\r\n        className={classNames(className, 'text-input')}\r\n        value={this.state.value}\r\n        onBlur={this.handleBlur}\r\n        onKeyPress={this.handleKeyPress}\r\n        onInput={this.handleChange}\r\n        onChange={_.noop} // Handled by onInput\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './toggle.scss';\r\n\r\n// imports from styles\r\nexport default class Toggle extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.id = _.uniqueId();\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.props.onChange(e.target.checked);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"toggle-checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle-checkbox-cb\"\r\n          id={this.id}\r\n          onChange={this.onChange}\r\n          checked={this.props.checked}\r\n        />\r\n        <label htmlFor={this.id} className=\"toggle\">\r\n          <span></span>\r\n        </label>\r\n        {this.props.children && (\r\n          <label htmlFor={this.id} className=\"text-label\">\r\n            {this.props.children}\r\n          </label>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\nimport './styles.scss';\r\n\r\nexport default class CollapsibleBar extends PureComponent {\r\n  static propTypes = {\r\n    className: toBe.string,\r\n    children: toBe.any,\r\n    title: toBe.any,\r\n    defaultOpen: toBe.bool,\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = { open: props.defaultOpen || false };\r\n  }\r\n\r\n  render() {\r\n    const { children, title, className } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classNames('collapsible-bar', className, { open })}>\r\n        <div className=\"header\" onClick={() => this.setState(state => ({ open: !state.open }))}>\r\n          <div className=\"collapse-button\">\r\n            <FaChevronRight />\r\n          </div>\r\n          <div className=\"title\">{title}</div>\r\n        </div>\r\n        {children && <div className=\"collapsible-children\">{children}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst Flag = ({ region }) => {\r\n  return (\r\n    <div\r\n      className=\"flag-img\"\r\n      style={{\r\n        backgroundImage: `url(https://osu.ppy.sh/images/flags/${region}.png)`,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Flag;\r\n","import React from 'react';\r\nimport { Range as ReactRange, getTrackBackground } from 'react-range';\r\n\r\nexport default function Range({ range, min, max, onChange }) {\r\n  return (\r\n    <ReactRange\r\n      values={range}\r\n      step={1}\r\n      min={min}\r\n      max={max}\r\n      onChange={onChange}\r\n      renderTrack={({ props, children }) => (\r\n        <div\r\n          onMouseDown={props.onMouseDown}\r\n          onTouchStart={props.onTouchStart}\r\n          style={{\r\n            ...props.style,\r\n            position: 'relative',\r\n            height: '10px',\r\n            display: 'flex',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <div\r\n            ref={props.ref}\r\n            style={{\r\n              height: '6px',\r\n              width: '100%',\r\n              borderRadius: '3px',\r\n              background: getTrackBackground({\r\n                values: range,\r\n                colors: ['#ccc', '#88d3ff', '#ccc'],\r\n                min,\r\n                max,\r\n              }),\r\n              alignSelf: 'center',\r\n            }}\r\n          >\r\n            {children}\r\n          </div>\r\n        </div>\r\n      )}\r\n      renderThumb={({ props, isDragged }) => (\r\n        <div\r\n          {...props}\r\n          style={{\r\n            ...props.style,\r\n            height: '12px',\r\n            width: '12px',\r\n            borderRadius: '6px',\r\n            backgroundColor: '#FFF',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            boxShadow: '0px 2px 3px #AAA',\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              height: '6px',\r\n              width: '6px',\r\n              borderRadius: '3px',\r\n              backgroundColor: isDragged ? '#88d3ff' : '#CCC',\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\nimport { FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Range from 'components/Shared/Range';\r\n\r\nimport { CHART_MIN_MAX, DURATION_DEFAULT, DURATION } from 'constants/leaderboard';\r\n\r\nexport default function ChartFilter({ filterValue, onChange: onChangeEx }) {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filterValue);\r\n  const type = _.getOr(null, 'type', filterValue);\r\n  const duration = _.getOr(DURATION_DEFAULT, 'duration', filterValue);\r\n\r\n  let buttonText = 'фильтр чартов';\r\n  if (filterValue) {\r\n    const t = type || '';\r\n    buttonText = range[0] === range[1] ? `${t}${range[0]}` : `${t}${range[0]} - ${t}${range[1]}`;\r\n    buttonText = 'чарты: ' + buttonText;\r\n    if (!_.isEqual(duration, DURATION_DEFAULT)) {\r\n      buttonText += ' ***';\r\n      // buttonText += ` (${_.values(DURATION)\r\n      //   .filter(dur => duration.includes(dur))\r\n      //   .map(s => s.slice(0, 2))\r\n      //   .join('-')})`;\r\n    }\r\n  }\r\n\r\n  const onChange = value => {\r\n    onChangeEx({\r\n      range,\r\n      type,\r\n      ...value,\r\n      duration: _.isEmpty(value.duration) ? duration : value.duration,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Overlay\r\n        overlayClassName=\"chart-range-overlay-outer\"\r\n        overlayItem={\r\n          <button className=\"filter-charts-button btn btn-sm btn-dark\">{buttonText}</button>\r\n        }\r\n      >\r\n        <div className=\"chart-range-overlay\">\r\n          <div className=\"buttons\">\r\n            <ToggleButton\r\n              text=\"Single\"\r\n              active={type === 'S'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  type: active ? 'S' : null,\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Double\"\r\n              active={type === 'D'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  type: active ? 'D' : null,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <Range\r\n            range={range}\r\n            min={CHART_MIN_MAX[0]}\r\n            max={CHART_MIN_MAX[1]}\r\n            onChange={r => onChange({ range: r })}\r\n          />\r\n          <div className=\"inputs\">\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  range: [Math.max(range[0] - 1, CHART_MIN_MAX[0]), range[1]],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={CHART_MIN_MAX[0]}\r\n              max={Math.min(CHART_MIN_MAX[1], range[1])}\r\n              value={range[0]}\r\n              onBlur={value => {\r\n                onChange({ range: [value, range[1]] });\r\n              }}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMin = Math.min(range[0] + 1, CHART_MIN_MAX[1]);\r\n                onChange({\r\n                  range: [newMin, range[1] < newMin ? newMin : range[1]],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMax = Math.max(range[1] - 1, CHART_MIN_MAX[0]);\r\n                onChange({\r\n                  range: [range[0] > newMax ? newMax : range[0], newMax],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={Math.max(CHART_MIN_MAX[0], range[0])}\r\n              max={CHART_MIN_MAX[1]}\r\n              value={range[1]}\r\n              onBlur={value => onChange({ range: [range[0], value] })}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  range: [range[0], Math.min(range[1] + 1, CHART_MIN_MAX[1])],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n          </div>\r\n          <div className=\"buttons-duration\">\r\n            <ToggleButton\r\n              text=\"Standard\"\r\n              active={duration.includes(DURATION.STD)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.STD]\r\n                    : _.without([DURATION.STD], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Short\"\r\n              active={duration.includes(DURATION.SHORT)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.SHORT]\r\n                    : _.without([DURATION.SHORT], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Remix\"\r\n              active={duration.includes(DURATION.REMIX)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.REMIX]\r\n                    : _.without([DURATION.REMIX], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Full\"\r\n              active={duration.includes(DURATION.FULL)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.FULL]\r\n                    : _.without([DURATION.FULL], duration),\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Overlay>\r\n    </div>\r\n  );\r\n}\r\n","export const ranks = [\r\n  {\r\n    threshold: 0,\r\n    iconName: '0.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 1000,\r\n    iconName: '1.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 2000,\r\n    iconName: '2.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 3000,\r\n    iconName: '3.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 4000,\r\n    iconName: '4.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 5000,\r\n    iconName: '5.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 6250,\r\n    iconName: '6.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 7500,\r\n    iconName: '7.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 8750,\r\n    iconName: '8.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 10000,\r\n    iconName: '9.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 12000,\r\n    iconName: '10.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 14000,\r\n    iconName: '11.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 16000,\r\n    iconName: '12.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 18000,\r\n    iconName: '13.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 22000,\r\n    iconName: '14.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 26000,\r\n    iconName: '15.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 30000,\r\n    iconName: '16.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 35000,\r\n    iconName: '17.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 40000,\r\n    iconName: '18.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 50000,\r\n    iconName: '19.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 60000,\r\n    iconName: '20.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 70000,\r\n    iconName: '21.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 80000,\r\n    iconName: '22.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 100000,\r\n    iconName: '23.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 120000,\r\n    iconName: '24.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 140000,\r\n    iconName: '25.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 160000,\r\n    iconName: '26.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 180000,\r\n    iconName: '27.png',\r\n    color: 'green',\r\n  },\r\n];\r\n","import React from 'react';\r\n\r\nexport const gradeValue = {\r\n  F: 0.1,\r\n  D: 0.2,\r\n  'D+': 0.3,\r\n  C: 0.3,\r\n  'C+': 0.5,\r\n  B: 0.5,\r\n  'B+': 0.8,\r\n  A: 0.8,\r\n  'A+': 1,\r\n  S: 1.1,\r\n  SS: 1.2,\r\n  SSS: 1.2,\r\n};\r\n\r\nexport const getExp = (result, chart) => {\r\n  if (!result.isBestGradeOnChart) {\r\n    return 0;\r\n  }\r\n  if (chart.chartType === 'COOP') {\r\n    return (chart.chartLevel * 1000 * (gradeValue[result.grade] || 0.8)) / 8;\r\n  }\r\n  const exp = (chart.chartLevel ** 2.31 * (gradeValue[result.grade] || 0.8)) / 9;\r\n  return exp;\r\n};\r\n\r\nexport const getRankImg = rank =>\r\n  rank && (\r\n    <img\r\n      className={rank.color}\r\n      src={`${process.env.PUBLIC_URL}/ranks/${rank.iconName}`}\r\n      alt={rank.threshold}\r\n    />\r\n  );\r\n\r\nexport { ranks } from './expRanks';\r\n","import _ from 'lodash/fp';\r\n\r\nimport {\r\n  GiLoveSong,\r\n  GiLifeBar,\r\n  GiSmokingFinger,\r\n  GiSnail,\r\n  GiRetroController,\r\n  GiRank1,\r\n  GiRank2,\r\n  GiRank3,\r\n  GiWoodenPegleg,\r\n  GiPodiumSecond,\r\n} from 'react-icons/gi';\r\n\r\nexport const achievements = {\r\n  '500 комбо': {\r\n    icon: GiRank1,\r\n    description: 'Заработать 500+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 500 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  '1000 комбо': {\r\n    icon: GiRank2,\r\n    description: 'Заработать 1000+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 1000 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  '2000 комбо': {\r\n    icon: GiRank3,\r\n    description: 'Заработать 2000+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 2000 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Мастер фингеринга': {\r\n    icon: GiSmokingFinger,\r\n    description: 'Сыграть все Fingers треки',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: ['Monkey Fingers', 'Kimchi Fingers', 'Monkey Fingers 2', 'Money Fingers'],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  '8-bit': {\r\n    icon: GiRetroController,\r\n    description: 'Сыграть Seize My Day, Tales of Pumpnia и Pumptris (8bit ver.)',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: ['Seize My Day', 'Tales of Pumpnia', 'Pumptris (8bit ver.)'],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  'Love is...': {\r\n    icon: GiLoveSong,\r\n    description: 'Сыграть все Love is a Danger Zone треки',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: [\r\n        'Love is a Danger Zone',\r\n        'Love is a Danger Zone [SHORT]',\r\n        'Love is a Danger Zone (Cranky Mix)',\r\n        'Love is a Danger Zone 2',\r\n        'Love is a Danger Zone 2 [SHORT]',\r\n        'Love is a Danger Zone 2 [FULL]',\r\n        'Love is a Danger Zone 2 (D&G Ver.)',\r\n        'Love is a Danger Zone (try to B.P.M.)',\r\n      ],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  Улитка: {\r\n    icon: GiSnail,\r\n    description:\r\n      'Мастер замедлений: сыграть старшие чарты Twist of Fate, Karyawisata, Awakening и Moonlight',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: [\r\n        { song: 'Twist of Fate (feat. Ruriling)', charts: ['D20', 'S19'] },\r\n        { song: 'Karyawisata', charts: ['S20', 'D16'] },\r\n        { song: 'Awakening', charts: ['S19', 'D20'] },\r\n        { song: 'Moonlight', charts: ['S19', 'D21'] },\r\n      ],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.some(\r\n        songToPlay => chart.song === songToPlay.song && songToPlay.charts.includes(chart.chartLabel)\r\n      )\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  'Коричневая S': {\r\n    icon: GiPodiumSecond,\r\n    description: 'Получить S, но 5+ бэдов',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.miss === 0 && result.bad >= 5 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Мы выживали как могли': {\r\n    icon: GiLifeBar,\r\n    description: 'Получить B или ниже, но удержать лайфбар',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress:\r\n          state.progress === 100 ? 100 : ['B+', 'C+', 'D+'].includes(result.grade) ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Падовый мисс': {\r\n    icon: GiWoodenPegleg,\r\n    description: 'Когда от SSS тебя удерживают только миссы из-за плохого моддинга падов',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress:\r\n          state.progress === 100\r\n            ? 100\r\n            : result.miss > 0 && result.bad === 0 && result.good === 0 && result.great === 0\r\n            ? 100\r\n            : 0,\r\n      };\r\n    },\r\n  },\r\n};\r\n\r\nexport const initialAchievementState = {\r\n  progress: 0,\r\n};\r\n","export const getScoreWithoutBonus = (score, grade) => {\r\n  if (grade === 'SSS') return score - 300000;\r\n  if (grade === 'SS') return score - 150000;\r\n  if (grade === 'S') return score - 100000;\r\n  return score;\r\n};\r\n","import _ from 'lodash/fp';\r\nimport regression from 'regression';\r\n\r\nimport { ranks as expRanks } from 'utils/expRanks';\r\n\r\nconst processBattles = ({ battles, profiles, debug, resultInfo: dictScoreInfo }) => {\r\n  let logText = '';\r\n  const dictChartElo = {};\r\n  const getDictChartEloId = (score, enemyScore) =>\r\n    `${score.playerId}vs${enemyScore.playerId}-${score.sharedChartId}-${score.isRank}`;\r\n  const dictRatingDiff = {};\r\n  const getDictRatingDiffId = (score) => `${score.playerId}-${score.sharedChartId}-${score.isRank}`;\r\n  // const dictScoreInfo = {};\r\n  battles.forEach(([score, enemyScore, song]) => {\r\n    // For each battle\r\n    const p1 = profiles[score.playerId];\r\n    const p2 = profiles[enemyScore.playerId];\r\n\r\n    const scoreMultiplier = score.isRank ? 1.2 : 1;\r\n    let maxScore = null;\r\n    if (song.maxScore) {\r\n      maxScore = song.maxScore * scoreMultiplier;\r\n      if (\r\n        Math.max(maxScore, score.score, enemyScore.score) !== maxScore &&\r\n        !score.isRank &&\r\n        (!score.isExactDate || !enemyScore.isExactDate)\r\n      ) {\r\n        maxScore *= 1.2;\r\n        // Rank from machine best wasn't recognized most likely.\r\n        // Increasing max score by 20% is fine\r\n      }\r\n      if (Math.max(maxScore, score.score, enemyScore.score) !== maxScore) {\r\n        // If calculated max score isn't max score anyway, use current scores as max + cherry on top\r\n        maxScore = Math.max(maxScore, score.score, enemyScore.score) + 10000;\r\n      }\r\n    }\r\n\r\n    // Data to be appended to every score outside of this thread\r\n    if (!dictScoreInfo[score.id]) dictScoreInfo[score.id] = {};\r\n    if (!dictScoreInfo[enemyScore.id]) dictScoreInfo[enemyScore.id] = {};\r\n    const scoreInfo = dictScoreInfo[score.id];\r\n    const enemyScoreInfo = dictScoreInfo[enemyScore.id];\r\n\r\n    // Rating at the start of battle for this score\r\n    if (!scoreInfo.startingRating) scoreInfo.startingRating = p1.rating;\r\n    if (!enemyScoreInfo.startingRating) enemyScoreInfo.startingRating = p2.rating;\r\n\r\n    // Counting the number of battles\r\n    p1.battleCount++;\r\n    p2.battleCount++;\r\n\r\n    // This is one match between two players\r\n    //// Elo formula\r\n    // const r1 = score.startingRating;\r\n    // const r2 = enemyScore.startingRating;\r\n    const r1 = p1.rating;\r\n    const r2 = p2.rating;\r\n    const R1 = 10 ** (r1 / 400);\r\n    const R2 = 10 ** (r2 / 400);\r\n    const E1 = R1 / (R1 + R2);\r\n    const E2 = R2 / (R1 + R2);\r\n    let A = score.score;\r\n    let B = enemyScore.score;\r\n    let S1, S2;\r\n    if (A === B) {\r\n      S1 = S2 = 0.5;\r\n    } else if (maxScore && A !== 0 && B !== 0) {\r\n      A = maxScore / A - 1;\r\n      B = maxScore / B - 1;\r\n      S1 = (B / (A + B) - 0.5) * 5 + 0.5;\r\n      S2 = (A / (A + B) - 0.5) * 5 + 0.5;\r\n    } else {\r\n      S1 = A > B ? 1 : B < A ? 0 : 0.5;\r\n      S2 = 1 - S1;\r\n    }\r\n    S1 = Math.max(0, Math.min(1, S1)); // Set strict boundaries to [0, 1]\r\n    S2 = Math.max(0, Math.min(1, S2));\r\n\r\n    const kRating1 = Math.max(0, Math.min(1, (r1 - 700) / 800));\r\n    const kRating2 = Math.max(0, Math.min(1, (r2 - 700) / 800));\r\n    const maxK1 = 20 + 20 * kRating1;\r\n    const maxK2 = 20 + 20 * kRating2;\r\n    const chartLevel = Number(song.interpolatedDifficulty || song.chartLevel);\r\n    const kLevel1 = Math.max(\r\n      1,\r\n      Math.min(maxK1, (chartLevel / 25) ** ((kRating1 - 0.5) * 5 + 2.5) * maxK1)\r\n    );\r\n    const kLevel2 = Math.max(\r\n      1,\r\n      Math.min(maxK2, (chartLevel / 25) ** ((kRating2 - 0.5) * 5 + 2.5) * maxK2)\r\n    );\r\n    const kLevel = Math.min(kLevel1, kLevel2);\r\n\r\n    // When YOU vs ENEMY both have SS/SSS, and both scores are very close to SSS, this battle will NOT affect ELO too much\r\n    let kMinimizer = 1;\r\n    const kDropCutoff = 0.98; // Score is 98% of max score or higher -- K will be lower\r\n    if (\r\n      song.maxScore &&\r\n      (score.grade.startsWith('SS') || (score.miss === 0 && score.bad === 0)) &&\r\n      (enemyScore.grade.startsWith('SS') || (enemyScore.miss === 0 && enemyScore.bad === 0)) &&\r\n      score.score / maxScore > kDropCutoff &&\r\n      enemyScore.score / maxScore > kDropCutoff\r\n    ) {\r\n      kMinimizer =\r\n        Math.max(\r\n          Math.min(\r\n            1,\r\n            Math.max(\r\n              100 - (100 * score.score) / maxScore,\r\n              100 - (100 * enemyScore.score) / maxScore\r\n            ) /\r\n              (100 - kDropCutoff * 100)\r\n          ),\r\n          0\r\n        ) ** 2;\r\n    }\r\n\r\n    const K1 = kLevel * kMinimizer;\r\n    const K2 = kLevel * kMinimizer;\r\n    let dr1 = K1 * (S1 - E1);\r\n    let dr2 = K2 * (S2 - E2);\r\n    // Do not decrease rating if you have SSS - RIP zero-sum algorithm\r\n    dr1 = dr1 < 0 && score.grade === 'SSS' ? 0 : dr1;\r\n    dr2 = dr2 < 0 && enemyScore.grade === 'SSS' ? 0 : dr2;\r\n    // Recording this value for display\r\n    const baseEloId1 = getDictChartEloId(score, enemyScore);\r\n    const baseEloId2 = getDictChartEloId(enemyScore, score);\r\n    const baseEloP1 = dictChartElo[baseEloId1] || 0;\r\n    const baseEloP2 = dictChartElo[baseEloId2] || 0;\r\n    dictChartElo[baseEloId1] = dr1;\r\n    dictChartElo[baseEloId2] = dr2;\r\n\r\n    // Change rating as a result of this battle\r\n    p1.rating = p1.rating + dr1 - baseEloP1;\r\n    p2.rating = p2.rating + dr2 - baseEloP2;\r\n\r\n    const ratingDiffId1 = getDictRatingDiffId(score);\r\n    const ratingDiffId2 = getDictRatingDiffId(enemyScore);\r\n    dictRatingDiff[ratingDiffId1] = (dictRatingDiff[ratingDiffId1] || 0) + dr1 - baseEloP1;\r\n    dictRatingDiff[ratingDiffId2] = (dictRatingDiff[ratingDiffId2] || 0) + dr2 - baseEloP2;\r\n\r\n    // Q\r\n    scoreInfo.ratingDiff = dictRatingDiff[ratingDiffId1];\r\n    scoreInfo.ratingDiffLast = dr1 - baseEloP1;\r\n\r\n    enemyScoreInfo.ratingDiff = dictRatingDiff[ratingDiffId2];\r\n    enemyScoreInfo.ratingDiffLast = dr2 - baseEloP2;\r\n\r\n    if (debug) {\r\n      // if (score.sharedChartId === 5292) {\r\n      // if (song.song === 'Club Night') {\r\n      // if (score.nickname === 'Liza' || enemyScore.nickname === 'Liza') {\r\n      // if (!song.maxScore) {\r\n      logText += `${song.chartLabel} - ${song.song} (${song.sharedChartId}) - ${\r\n        profiles[score.playerId].name\r\n      } / ${profiles[enemyScore.playerId].name}\r\n- ${score.score} / ${enemyScore.score} (${Math.floor(maxScore)} (${Math.floor(\r\n        song.maxScore * scoreMultiplier\r\n      )})) - R ${S1.toFixed(2)}/${S2.toFixed(2)} E ${E1.toFixed(2)} / ${E2.toFixed(2)}\r\n- Rating ${r1.toFixed(2)} / ${r2.toFixed(2)} - ${dr1.toFixed(2)} / ${dr2.toFixed(\r\n        2\r\n      )} - K ${K1.toFixed(2)} ${K2.toFixed(2)}${\r\n        kMinimizer === 1 ? '' : ` (coef ${kMinimizer.toFixed(2)})`\r\n      }\r\n- Base elo: ${baseEloP1.toFixed(2)} / ${baseEloP2.toFixed(2)}\r\n- Elo change: ${(dr1 - baseEloP1).toFixed(2)} / ${(dr2 - baseEloP2).toFixed(2)}\r\n- New base elo: ${dictChartElo[baseEloId1].toFixed(2)} / ${dictChartElo[baseEloId2].toFixed(2)}\r\n- RD: ${dictRatingDiff[ratingDiffId1].toFixed(2)} / ${dictRatingDiff[ratingDiffId2].toFixed(2)}\\n`;\r\n    }\r\n    // Rating floor\r\n    p1.rating = Math.max(100, p1.rating);\r\n    p2.rating = Math.max(100, p2.rating);\r\n\r\n    const playersSorted = _.flow(\r\n      _.keys,\r\n      _.map((id) => ({ id, rating: profiles[id].rating })),\r\n      _.orderBy(['rating'], ['desc'])\r\n    )(profiles);\r\n    const battleDate =\r\n      score.dateObject > enemyScore.dateObject ? score.dateObject : enemyScore.dateObject;\r\n    playersSorted.forEach((player, index) => {\r\n      const lastPlace = profiles[player.id].lastPlace;\r\n      if (lastPlace !== index + 1) {\r\n        profiles[player.id].rankingHistory.push({\r\n          place: index + 1,\r\n          date: battleDate.getTime(),\r\n        });\r\n        profiles[player.id].lastPlace = index + 1;\r\n      }\r\n    });\r\n\r\n    const p1LastRating = _.last(p1.ratingHistory);\r\n    const p2LastRating = _.last(p2.ratingHistory);\r\n    if (p1LastRating !== p1.rating) {\r\n      p1.ratingHistory.push({\r\n        rating: p1.rating,\r\n        date: battleDate.getTime(),\r\n      });\r\n    }\r\n    if (p2LastRating !== p2.rating) {\r\n      p2.ratingHistory.push({\r\n        rating: p2.rating,\r\n        date: battleDate.getTime(),\r\n      });\r\n    }\r\n  });\r\n\r\n  _.flow(\r\n    _.keys,\r\n    _.forEach((key) => {\r\n      profiles[key].id = _.toInteger(key);\r\n      profiles[key].accuracy =\r\n        profiles[key].countAcc > 0\r\n          ? Math.round((profiles[key].sumAccuracy / profiles[key].countAcc) * 100) / 100\r\n          : null;\r\n      profiles[key].ratingRaw = profiles[key].rating;\r\n      profiles[key].rating = Math.round(profiles[key].rating);\r\n      profiles[key].rankingHistory = [\r\n        ...profiles[key].rankingHistory,\r\n        { place: _.get('place', _.last(profiles[key].rankingHistory)), date: Date.now() },\r\n      ];\r\n    })\r\n  )(profiles);\r\n  return { logText };\r\n};\r\n\r\nconst postProcessProfiles = (profiles, tracklist) => {\r\n  const getBonusForLevel = (level) => (30 * (1 + 2 ** (level / 4))) / 11;\r\n  const getMinimumNumber = (totalCharts) =>\r\n    Math.round(\r\n      Math.min(totalCharts, 1 + totalCharts / 20 + Math.sqrt(Math.max(totalCharts - 1, 0)) * 0.7)\r\n    );\r\n\r\n  const newProfiles = _.mapValues((profile) => {\r\n    const neededGrades = ['A', 'A+', 'S', 'SS', 'SSS'];\r\n    profile.expRank = _.findLast((rank) => rank.threshold <= profile.exp, expRanks);\r\n    profile.expRankNext = _.find((rank) => rank.threshold > profile.exp, expRanks);\r\n    profile.progress = {\r\n      double: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n      single: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n    };\r\n    const gradeIncrementMap = {\r\n      SSS: ['SS', 'S', 'A+', 'A'],\r\n      SS: ['SS', 'S', 'A+', 'A'],\r\n      S: ['S', 'A+', 'A'],\r\n      'A+': ['A+', 'A'],\r\n      A: ['A'],\r\n    };\r\n    const incrementLevel = (l, g, chartType) => {\r\n      const prog =\r\n        chartType === 'S' || chartType === 'SP'\r\n          ? profile.progress.single\r\n          : chartType === 'D' || chartType === 'DP'\r\n          ? profile.progress.double\r\n          : null;\r\n      if (prog) {\r\n        prog[g][l] = prog[g][l] ? prog[g][l] + 1 : 1;\r\n      }\r\n    };\r\n    profile.accuracyByLevel = {};\r\n    _.keys(profile.resultsByLevel).forEach((level) => {\r\n      profile.accuracyByLevel[level] = { count: 0, sum: 0, average: null };\r\n      profile.resultsByLevel[level].forEach((res) => {\r\n        if (!res.result.isRank && res.result.accuracy) {\r\n          profile.accuracyByLevel[level].count++;\r\n          profile.accuracyByLevel[level].sum += res.result.accuracy;\r\n        }\r\n\r\n        const thisGrade = res.result.grade;\r\n        const thisPlayerId = res.result.playerId;\r\n        const otherResults = res.chart.results.filter((r) => r.playerId === thisPlayerId);\r\n        if (otherResults.length > 1) {\r\n          const sortedResults = otherResults.sort(\r\n            (a, b) => neededGrades.indexOf(b.grade) - neededGrades.indexOf(a.grade)\r\n          );\r\n          if (sortedResults[0].grade !== thisGrade) {\r\n            return; // Don't do anything when we have a different result with better grade\r\n          }\r\n        }\r\n        const gradeIncArray = gradeIncrementMap[thisGrade];\r\n        if (gradeIncArray) {\r\n          gradeIncArray.forEach((gradeInc) => {\r\n            incrementLevel(level, gradeInc, res.chart.chartType);\r\n          });\r\n        }\r\n      });\r\n      profile.accuracyByLevel[level].average =\r\n        profile.accuracyByLevel[level].count === 0\r\n          ? null\r\n          : profile.accuracyByLevel[level].sum / profile.accuracyByLevel[level].count;\r\n    });\r\n    const points = _.flow(\r\n      _.toPairs,\r\n      _.filter(([level, data]) => data.average && data.count > 10),\r\n      _.map(([level, data]) => [_.toNumber(level), data.average])\r\n    )(profile.accuracyByLevel);\r\n    profile.accuracyPoints = points;\r\n    ['single', 'double'].forEach((chartType) => {\r\n      profile.progress[`${chartType}-bonus`] = 0;\r\n      _.keys(profile.progress[chartType]).forEach((grade) => {\r\n        profile.progress[chartType][`${grade}-bonus`] = 0;\r\n        _.keys(profile.progress[chartType][grade]).forEach((level) => {\r\n          const number = profile.progress[chartType][grade][level];\r\n          const totalCharts = tracklist.data[`${chartType}sLevels`][level];\r\n          const minimumNumber = getMinimumNumber(totalCharts);\r\n          const bonusCoefficientNumber = Math.min(1, number / minimumNumber);\r\n          const rawBonus = getBonusForLevel(level);\r\n          const bonus = rawBonus * bonusCoefficientNumber;\r\n          profile.progress[chartType][grade][`${level}-bonus`] = bonus;\r\n          profile.progress[chartType][grade][`${level}-bonus-coef`] = bonusCoefficientNumber;\r\n          profile.progress[chartType][grade][`${level}-min-number`] = minimumNumber;\r\n          profile.progress[chartType][grade][`${level}-achieved-number`] = number;\r\n          if (bonus >= profile.progress[chartType][`${grade}-bonus`]) {\r\n            profile.progress[chartType][`${grade}-bonus`] = bonus;\r\n            profile.progress[chartType][`${grade}-bonus-level`] = level;\r\n            profile.progress[chartType][`${grade}-bonus-level-coef`] = bonusCoefficientNumber;\r\n            profile.progress[chartType][`${grade}-bonus-level-min-number`] = minimumNumber;\r\n            profile.progress[chartType][`${grade}-bonus-level-achieved-number`] = number;\r\n          }\r\n        });\r\n        profile.progress[`${chartType}-bonus`] += profile.progress[chartType][`${grade}-bonus`];\r\n      });\r\n    });\r\n    profile.progress.bonus = profile.progress['double-bonus'] + profile.progress['single-bonus'];\r\n    profile.achievementBonus = profile.progress.bonus;\r\n    profile.accuracy =\r\n      profile.countAcc > 0\r\n        ? Math.round((profile.sumAccuracy / profile.countAcc) * 100) / 100\r\n        : null;\r\n    return profile;\r\n  }, profiles);\r\n  return newProfiles;\r\n};\r\n\r\nconst processPP = ({ profiles, sharedCharts }) => {\r\n  const resultInfo = {};\r\n  // const now = new Date();\r\n  for (const chartId in sharedCharts) {\r\n    const chart = sharedCharts[chartId];\r\n    const chartResults = chart.results;\r\n    const chartLevel = Number(chart.interpolatedDifficulty || chart.chartLevel);\r\n    const maxPP = chartLevel ** 2.2 / 7.6; // 7;\r\n    if (chart.maxScore) {\r\n      const maxScore = chart.maxScore;\r\n      for (const result of chartResults) {\r\n        if (!result.isRank && maxScore) {\r\n          const K1 = Math.max(0, Math.min(1, result.scoreRaw / maxScore - 0.3) / 0.7);\r\n          // Optional: decrease PP values for older scores. Testing showing this doesn't change anything really\r\n          // const millisecOld = now - result.dateObject;\r\n          // const maxDays = 365;\r\n          // const maxTimeDecrease = 0;\r\n          // const K2 =\r\n          //   1 -\r\n          //   maxTimeDecrease * Math.min(1, Math.max(0, millisecOld / 1000 / 60 / 60 / 24 / maxDays));\r\n          // const K = K1 * K2;\r\n\r\n          const K = K1;\r\n\r\n          // Final PP value\r\n          const pp = K * maxPP;\r\n          // Record result data\r\n          resultInfo[result.id] = {\r\n            pp: {\r\n              pp,\r\n              k: K,\r\n              maxScore,\r\n              maxPP,\r\n              ppPotential: maxPP - pp,\r\n              ppRatio: pp / maxPP,\r\n              ppFixed: Number(pp.toFixed(1)),\r\n            },\r\n          };\r\n          const profile = profiles[result.playerId];\r\n          if (profile) {\r\n            if (!profile.pp) {\r\n              profile.pp = { scores: [], pp: 0 };\r\n            }\r\n            profile.pp.scores.push({\r\n              pp_: Number(pp.toFixed(1)),\r\n              s: chart.song,\r\n              l: chart.chartLabel,\r\n              pp,\r\n              result,\r\n              chart,\r\n              K,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // Calculate total pp\r\n  for (const playerId in profiles) {\r\n    const profile = profiles[playerId];\r\n    if (profile.pp) {\r\n      profile.pp.scores.sort((a, b) => b.pp - a.pp);\r\n      profile.pp.pp = 0;\r\n      profile.pp.scores.forEach((score, index) => {\r\n        profile.pp.pp += 0.95 ** index * score.pp;\r\n      });\r\n      profile.rating = profile.pp.pp;\r\n    } else {\r\n      profile.rating = 0;\r\n    }\r\n    // profile.id = _.toInteger(playerId);\r\n    // profile.accuracy =\r\n    //   profile.countAcc > 0\r\n    //     ? Math.round((profile.sumAccuracy / profile.countAcc) * 100) / 100\r\n    //     : null;\r\n    // profile.rating = Math.round(profile.ratingRaw);\r\n  }\r\n  return resultInfo;\r\n};\r\n\r\nconst interpolateDifficulties = (sharedCharts, processedProfiles) => {\r\n  let newSharedCharts = _.mapValues((chart) => {\r\n    const datas = chart.results\r\n      .map((r) => {\r\n        const profile = processedProfiles[r.playerId];\r\n        if (!profile || !r.accuracy || r.isRank || _.isEmpty(profile.accuracyPoints)) {\r\n          return null;\r\n        }\r\n        const accData = profile.accuracyByLevel[chart.chartLevel];\r\n        if (!profile.accuracyPointsInterpolated) {\r\n          let points = [...profile.accuracyPoints, [30, 0]];\r\n          for (let i = profile.accuracyPoints[0][0]; i > 0; i--) {\r\n            points = [[i, 100], ...points];\r\n          }\r\n          const result = regression('polynomial', points, 3);\r\n          // console.log(result);\r\n          const predict = (x) => {\r\n            return (\r\n              result.equation[0] +\r\n              result.equation[1] * x +\r\n              result.equation[2] * x * x +\r\n              result.equation[3] * x * x * x\r\n            );\r\n          };\r\n\r\n          // const f_1 = interpolate(profile.accuracyPoints);\r\n          const f = (x) => {\r\n            if (x <= profile.accuracyPoints[0][0]) {\r\n              return 100;\r\n            }\r\n            // const calculated = f_1(x);\r\n            const calculated = predict(x);\r\n            return Math.max(0, Math.min(calculated, 100));\r\n          };\r\n          const yx = [];\r\n          for (let i = 1; i <= 28; i += 0.05) {\r\n            yx.push([i, f(i)]);\r\n          }\r\n          // console.log(JSON.stringify(yx, null, 1));\r\n          profile.accuracyPointsInterpolated = yx;\r\n        }\r\n        const interpolatedPoint = _.find(\r\n          (pair) => pair[1] < r.accuracy,\r\n          profile.accuracyPointsInterpolated\r\n        );\r\n        return {\r\n          id: r.playerId,\r\n          accuracy: r.accuracy,\r\n          avgAccuracy: accData.average,\r\n          interpolatedDifficulty: interpolatedPoint && interpolatedPoint[0],\r\n          weight:\r\n            r.accuracy > 98\r\n              ? 1 - (r.accuracy - 98) / (100 - 98)\r\n              : r.accuracy < 80\r\n              ? Math.max(0, (r.accuracy - 70) / (80 - 70))\r\n              : 1,\r\n        };\r\n      })\r\n      .filter(_.identity);\r\n    const sums = datas.reduce(\r\n      (acc, item) => {\r\n        if (!item.interpolatedDifficulty) {\r\n          return acc;\r\n        }\r\n        return {\r\n          diffSum: acc.diffSum + item.interpolatedDifficulty * item.weight,\r\n          weightSum: acc.weightSum + item.weight,\r\n        };\r\n      },\r\n      { diffSum: 0, weightSum: 0 }\r\n    );\r\n    sums.diffSum += _.toNumber(chart.chartLevel);\r\n    sums.weightSum += 1;\r\n    const averageDifficulty = sums.diffSum / sums.weightSum;\r\n    // console.log(chart.song, chart.chartLabel, JSON.stringify(datas), averageDifficulty);\r\n\r\n    return {\r\n      ...chart,\r\n      interpolatedDifficulty: averageDifficulty,\r\n    };\r\n  }, sharedCharts);\r\n  return newSharedCharts;\r\n};\r\n\r\nexport const getProcessedProfiles = ({ profiles, sharedCharts, tracklist, battles, debug }) => {\r\n  // Calculate Progress achievements and bonus for starting Elo\r\n  profiles = postProcessProfiles(profiles, tracklist);\r\n\r\n  // Recalculate chart difficulty\r\n  sharedCharts = interpolateDifficulties(sharedCharts, profiles);\r\n\r\n  // Calculate PP\r\n  const resultInfo = processPP({\r\n    profiles,\r\n    sharedCharts,\r\n  });\r\n\r\n  // Calculate ELO\r\n  const { logText } = processBattles({\r\n    battles,\r\n    profiles,\r\n    resultInfo,\r\n    debug,\r\n  });\r\n\r\n  return { profiles, resultInfo, sharedCharts, logText };\r\n};\r\n","if (localStorage) {\r\n  window.debugOn = () => {\r\n    localStorage.setItem('debug', 1);\r\n  };\r\n  window.debugOff = () => {\r\n    localStorage.removeItem('debug');\r\n  };\r\n}\r\n\r\nexport const DEBUG = localStorage && localStorage.getItem('debug');\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\nimport queryString from 'query-string';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\nimport { getExp } from 'utils/exp';\r\nimport { achievements, initialAchievementState } from 'utils/achievements';\r\nimport { parseDate } from 'utils/date';\r\nimport { getScoreWithoutBonus } from 'utils/score';\r\n\r\nimport WorkerProfilesProcessing from 'workerize-loader!utils/workers/profilesPostProcess'; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport * as profilesProcessing from 'utils/workers/profilesPostProcess';\r\n\r\nimport { HOST } from 'constants/backend';\r\nimport { DEBUG } from 'constants/env';\r\n\r\nconst LOADING = `TOP/LOADING`;\r\nconst SUCCESS = `TOP/SUCCESS`;\r\nconst ERROR = `TOP/ERROR`;\r\nconst SET_FILTER = `TOP/SET_FILTER`;\r\nconst RESET_FILTER = `TOP/RESET_FILTER`;\r\nconst RANKING_CHANGE_SET = `TOP/RANKING_CHANGE_SET`;\r\nconst PROFILES_UPDATE = `TOP/PROFILES_UPDATE`;\r\n\r\nconst highscoresUrl = process.env.REACT_APP_SOCKET\r\n  ? 'results/highscores/trusted'\r\n  : 'results/highscores';\r\n\r\nexport const defaultFilter = { showRank: true, showRankAndNorank: true };\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  isLoadingRanking: false,\r\n  data: [],\r\n  filter: defaultFilter,\r\n  players: {},\r\n  profiles: {},\r\n  results: [],\r\n  resultInfo: {},\r\n  sharedCharts: {},\r\n};\r\n\r\nexport const gradeComparator = {\r\n  '?': 0,\r\n  F: 1,\r\n  D: 2,\r\n  'D+': 3,\r\n  C: 4,\r\n  'C+': 5,\r\n  B: 6,\r\n  'B+': 7,\r\n  A: 8,\r\n  'A+': 9,\r\n  S: 10,\r\n  SS: 11,\r\n  SSS: 12,\r\n};\r\n\r\nconst tryFixIncompleteResult = (result, maxTotalSteps) => {\r\n  if (!maxTotalSteps) {\r\n    return;\r\n  }\r\n  const infos = [result.perfect, result.great, result.good, result.bad, result.miss];\r\n  let fixableIndex = -1,\r\n    absentNumbersCount = 0,\r\n    localStepSum = 0;\r\n  for (let i = 0; i < 5; ++i) {\r\n    if (!_.isNumber(infos[i])) {\r\n      fixableIndex = i;\r\n      absentNumbersCount++;\r\n    } else {\r\n      localStepSum += infos[i];\r\n    }\r\n  }\r\n  if (absentNumbersCount === 1) {\r\n    result[['perfect', 'great', 'good', 'bad', 'miss'][fixableIndex]] =\r\n      maxTotalSteps - localStepSum;\r\n  }\r\n};\r\n\r\nconst guessGrade = (result) => {\r\n  if (result.misses === 0 && result.bads === 0 && result.goods === 0) {\r\n    if (result.greats === 0) {\r\n      return 'SSS';\r\n    } else {\r\n      return 'SS';\r\n    }\r\n  }\r\n  return result.grade;\r\n};\r\n\r\nconst mapResult = (res, players, chart) => {\r\n  if (typeof res.recognition_notes === 'undefined') {\r\n    // Short result, minimum info, only for ELO calculation\r\n    // Will be replaced with better result later\r\n    return {\r\n      id: res.id,\r\n      isUnknownPlayer: players[res.player].arcade_name === 'PUMPITUP',\r\n      isIntermediateResult: true,\r\n      sharedChartId: res.shared_chart,\r\n      playerId: res.player,\r\n      nickname: players[res.player].nickname,\r\n      nicknameArcade: players[res.player].arcade_name,\r\n      date: res.gained,\r\n      dateObject: parseDate(res.gained),\r\n      grade: res.grade,\r\n      isExactDate: !!res.exact_gain_date,\r\n      score: res.score,\r\n      scoreRaw: getScoreWithoutBonus(res.score, res.grade),\r\n      isRank: !!res.rank_mode,\r\n    };\r\n  }\r\n  // Full best result\r\n  let _r = {\r\n    isUnknownPlayer: players[res.player].arcade_name === 'PUMPITUP',\r\n    isIntermediateResult: false,\r\n    sharedChartId: res.shared_chart,\r\n    id: res.id,\r\n    playerId: res.player,\r\n    nickname: players[res.player].nickname,\r\n    nicknameArcade: players[res.player].arcade_name,\r\n    originalChartMix: res.original_mix,\r\n    originalChartLabel: res.original_label,\r\n    originalScore: res.original_score,\r\n    date: res.gained,\r\n    dateObject: parseDate(res.gained),\r\n    grade: res.grade !== '?' ? res.grade : guessGrade(res),\r\n    isExactDate: !!res.exact_gain_date,\r\n    score: res.score,\r\n    scoreRaw: getScoreWithoutBonus(res.score, res.grade),\r\n    scoreIncrease: res.score_increase,\r\n    calories: res.calories && res.calories / 1000,\r\n    perfect: res.perfects,\r\n    great: res.greats,\r\n    good: res.goods,\r\n    bad: res.bads,\r\n    miss: res.misses,\r\n    combo: res.max_combo,\r\n    mods: res.mods_list,\r\n    isRank: !!res.rank_mode,\r\n    isHJ: (res.mods_list || '').split(' ').includes('HJ'),\r\n    isMachineBest: res.recognition_notes === 'machine_best',\r\n    isMyBest: res.recognition_notes === 'personal_best',\r\n  };\r\n\r\n  tryFixIncompleteResult(_r, chart.maxTotalSteps);\r\n\r\n  const perfects = Math.sqrt(_r.perfect) * 10;\r\n  const acc = perfects\r\n    ? Math.floor(\r\n        ((perfects * 100 + _r.great * 60 + _r.good * 30 + _r.miss * -20) /\r\n          (perfects + _r.great + _r.good + _r.bad + _r.miss)) *\r\n          100\r\n      ) / 100\r\n    : null;\r\n  const accRaw = _r.perfect\r\n    ? Math.floor(\r\n        ((_r.perfect * 100 + _r.great * 60 + _r.good * 30 + _r.miss * -20) /\r\n          (_r.perfect + _r.great + _r.good + _r.bad + _r.miss)) *\r\n          100\r\n      ) / 100\r\n    : null;\r\n\r\n  _r.accuracy = acc < 0 ? 0 : accRaw === 100 ? 100 : acc && +acc.toFixed(2);\r\n  _r.accuracyRaw = accRaw;\r\n  return _r;\r\n};\r\n\r\n// const getMaxScore = score => {\r\n//   return ((score.score / score.accuracyRaw) * 100) / (score.isRank ? 1.2 : 1);\r\n// };\r\nconst getMaxRawScore = (score) => {\r\n  return ((score.scoreRaw / score.accuracy) * 100) / (score.isRank ? 1.2 : 1);\r\n};\r\n\r\nconst initializeProfile = (result, profiles, players) => {\r\n  const id = result.playerId;\r\n  const resultsByLevel = _.fromPairs(Array.from({ length: 28 }).map((x, i) => [i + 1, []]));\r\n  profiles[id] = {\r\n    name: result.nickname,\r\n    nameArcade: result.nicknameArcade,\r\n    resultsByGrade: {},\r\n    resultsByLevel,\r\n    lastResultDate: result.dateObject,\r\n    count: 0,\r\n    battleCount: 0,\r\n    countAcc: 0,\r\n    grades: { F: 0, D: 0, C: 0, B: 0, A: 0, S: 0, SS: 0, SSS: 0 },\r\n    sumAccuracy: 0,\r\n    rankingHistory: [],\r\n    ratingHistory: [],\r\n    lastPlace: null,\r\n    lastBattleDate: 0,\r\n    region: players[id].region,\r\n  };\r\n  profiles[id].achievements = _.flow(\r\n    _.keys,\r\n    _.map((achName) => [\r\n      achName,\r\n      { ...(achievements[achName].initialState || initialAchievementState) },\r\n    ]),\r\n    _.fromPairs\r\n  )(achievements);\r\n  profiles[id].exp = 0;\r\n};\r\n\r\nconst getProfileInfoFromResult = (result, chart, profiles) => {\r\n  const profile = profiles[result.playerId];\r\n\r\n  profile.count++;\r\n  if (result.accuracy) {\r\n    profile.countAcc++;\r\n    profile.sumAccuracy += result.accuracy;\r\n  }\r\n  profile.grades[result.grade.replace('+', '')]++;\r\n  if (chart.chartType !== 'COOP' && result.isBestGradeOnChart) {\r\n    profile.resultsByGrade[result.grade] = [\r\n      ...(profile.resultsByGrade[result.grade] || []),\r\n      { result, chart },\r\n    ];\r\n    profile.resultsByLevel[chart.chartLevel] = [\r\n      ...(profile.resultsByLevel[chart.chartLevel] || []),\r\n      { result, chart },\r\n    ];\r\n  }\r\n  if (result.isExactDate && profile.lastResultDate < result.dateObject) {\r\n    profile.lastResultDate = result.dateObject;\r\n  }\r\n  profile.achievements = _.mapValues.convert({ cap: false })((achState, achName) => {\r\n    return achievements[achName].resultFunction(result, chart, achState, profile);\r\n  }, profile.achievements);\r\n  profile.exp += getExp(result, chart);\r\n};\r\n\r\nconst processData = (data, tracklist) => {\r\n  const { players, results, shared_charts } = data;\r\n  //// Initialization\r\n  // Init for TOP\r\n  const mappedResults = [];\r\n  const getTopResultId = (result) => `${result.sharedChartId}-${result.playerId}-${result.isRank}`;\r\n  const getBestGradeResultId = (result) => `${result.sharedChartId}-${result.playerId}`;\r\n  const topResults = {}; // Temp object\r\n  const bestGradeResults = {}; // Temp object\r\n  const top = {}; // Main top scores pbject\r\n\r\n  // Battles for ELO calculation\r\n  const battles = [];\r\n\r\n  // Profiles for every player\r\n  let profiles = {};\r\n\r\n  // Loop 1\r\n  for (let resRaw of results) {\r\n    if (!players[resRaw.player]) {\r\n      // Player of this result was not found in list of players. Ignoring this result like it doesn't exist\r\n      continue;\r\n    }\r\n\r\n    const sharedChartId = resRaw.shared_chart;\r\n    // Initialize Song\r\n    if (!top[sharedChartId]) {\r\n      const sharedChart = shared_charts[sharedChartId];\r\n      const label = _.toUpper(sharedChart.chart_label);\r\n      const [chartType, chartLevel] = label.match(/(\\D+)|(\\d+)/g);\r\n      top[sharedChartId] = {\r\n        song: sharedChart.track_name,\r\n        chartLabel: label,\r\n        chartLevel,\r\n        chartType,\r\n        duration: sharedChart.duration,\r\n        sharedChartId: sharedChartId,\r\n        maxTotalSteps: sharedChart.max_total_steps,\r\n        results: [],\r\n        totalResultsCount: 0,\r\n      };\r\n    }\r\n\r\n    // Getting current chart and result (mapped)\r\n    const chartTop = top[sharedChartId];\r\n    const result = mapResult(resRaw, players, chartTop);\r\n    mappedResults.push(result);\r\n\r\n    // Inserting result into TOP\r\n    const topResultId = getTopResultId(result);\r\n    const currentTopResult = topResults[topResultId];\r\n    if (!currentTopResult || currentTopResult.score < result.score) {\r\n      if (currentTopResult) {\r\n        const oldScoreIndex = chartTop.results.indexOf(currentTopResult);\r\n        if (oldScoreIndex !== -1) {\r\n          chartTop.results.splice(oldScoreIndex, 1);\r\n        }\r\n      }\r\n      const newScoreIndex = _.sortedLastIndexBy((r) => -r.score, result, chartTop.results);\r\n      if (!result.isUnknownPlayer || newScoreIndex === 0) {\r\n        chartTop.results.splice(newScoreIndex, 0, result);\r\n        chartTop.latestScoreDate = result.date;\r\n        chartTop.totalResultsCount++;\r\n        topResults[topResultId] = result;\r\n      }\r\n      if (!result.isUnknownPlayer) {\r\n        chartTop.results.forEach((enemyResult) => {\r\n          if (\r\n            !enemyResult.isUnknownPlayer &&\r\n            enemyResult.isRank === result.isRank &&\r\n            enemyResult.playerId !== result.playerId &&\r\n            result.score &&\r\n            enemyResult.score\r\n          ) {\r\n            battles.push([result, enemyResult, chartTop]);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    // Getting best grade of player on this chart\r\n    if (!result.isIntermediateResult) {\r\n      const bestGradeResultId = getBestGradeResultId(result);\r\n      const currentBestGradeRes = bestGradeResults[bestGradeResultId];\r\n      if (\r\n        !currentBestGradeRes ||\r\n        gradeComparator[currentBestGradeRes.grade] <= gradeComparator[result.grade]\r\n      ) {\r\n        // Using <= here, so newer scores always win and rewrite old scores\r\n        currentBestGradeRes && (currentBestGradeRes.isBestGradeOnChart = false);\r\n        result.isBestGradeOnChart = true;\r\n        bestGradeResults[bestGradeResultId] = result;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Loop 2, when the TOP is already set up\r\n  for (let chartId in top) {\r\n    const chart = top[chartId];\r\n    chart.maxScore = null;\r\n    for (let result of chart.results) {\r\n      if (!result.isRank) {\r\n        if (result.accuracy) {\r\n          const maxScoreCandidate = getMaxRawScore(result, chart);\r\n          if (chart.maxScore < maxScoreCandidate) {\r\n            chart.maxScore = maxScoreCandidate;\r\n          }\r\n        } else if (chart.maxScore && chart.maxScore < result.score) {\r\n          chart.maxScore = result.score;\r\n        }\r\n      }\r\n      // Getting some info about players\r\n      if (!result.isUnknownPlayer && !result.isIntermediateResult) {\r\n        if (!profiles[result.playerId]) {\r\n          initializeProfile(result, profiles, players);\r\n        }\r\n        getProfileInfoFromResult(result, chart, profiles);\r\n      }\r\n    }\r\n  }\r\n\r\n  return { mappedResults, profiles, sharedCharts: top, battles };\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: initialState.data,\r\n        players: initialState.players,\r\n        profiles: initialState.profiles,\r\n        results: initialState.results,\r\n        sharedCharts: initialState.sharedCharts,\r\n        scoreInfo: {},\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isLoadingRanking: true,\r\n        data: action.data,\r\n        players: action.players,\r\n        profiles: action.profiles,\r\n        results: action.results,\r\n        sharedCharts: action.sharedCharts,\r\n        originalData: action.originalData,\r\n        scoreInfo: {},\r\n      };\r\n    case PROFILES_UPDATE:\r\n      return {\r\n        ...state,\r\n        isLoadingRanking: false,\r\n        profiles: action.profiles,\r\n        resultInfo: action.resultInfo,\r\n        sharedCharts: action.sharedCharts,\r\n      };\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    case RANKING_CHANGE_SET:\r\n      const hasPrevList = !_.isEmpty(action.listPrev);\r\n      return {\r\n        ...state,\r\n        profiles: _.mapValues((playerOriginal) => {\r\n          const player = {\r\n            ...playerOriginal,\r\n            prevRating: _.get(playerOriginal.id, action.rankingsPointsMap),\r\n          };\r\n          if (!hasPrevList) {\r\n            return player; // First time opening this thing and we didn't have any previous data\r\n          }\r\n          if (!_.includes(player.id, action.listPrev)) {\r\n            return { ...player, change: 'NEW' };\r\n          } else if (!_.includes(player.id, action.listNow)) {\r\n            // Should NEVER happen, idk if this is possible\r\n            return { ...player, change: '?' };\r\n          } else {\r\n            return {\r\n              ...player,\r\n              change: _.indexOf(player.id, action.listPrev) - _.indexOf(player.id, action.listNow),\r\n            };\r\n          }\r\n        }, state.profiles),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchResults = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        fetchJson({\r\n          url: `${HOST}/${highscoresUrl}`,\r\n        })\r\n      );\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n      // HACKS for test\r\n      // data.results = _.dropRight(500, data.results);\r\n      // console.log(1, data.results);\r\n      // data.results = _.filter((res) => res.gained < '2020-07-03 00:00:00', data.results);\r\n      // data.results = _.filter(res => res.gained < '2020-03-12 16:55:00', data.results);\r\n      // data.results = _.filter(res => res.gained < '2020-03-12 16:34:51', data.results);\r\n      // console.log(2, data.results);\r\n\r\n      dispatch(processResultsData(data));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const appendNewResults = (lastDate) => {\r\n  return async (dispatch, getState) => {\r\n    const { originalData, sharedCharts } = getState().results;\r\n    if (!lastDate) {\r\n      return dispatch(fetchResults());\r\n    }\r\n\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        fetchJson({\r\n          url: `${HOST}/${highscoresUrl}?${queryString.stringify({ start_date: lastDate })}`,\r\n        })\r\n      );\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n\r\n      const appendedResults = _.filter((result) => {\r\n        const currentResults = sharedCharts[result.shared_chart];\r\n        if (!currentResults) {\r\n          return true;\r\n        }\r\n        const oldResult = _.find(\r\n          (old) =>\r\n            old.id === result.id ||\r\n            (old.playerId === result.player && old.isRank === !!result.rank_mode),\r\n          currentResults.results\r\n        );\r\n        if (!oldResult) {\r\n          if (result.player === 1 && currentResults.results[0].score > result.score) {\r\n            return false;\r\n          }\r\n          return true;\r\n        }\r\n        if (oldResult.id === result.id || oldResult.score >= result.score) {\r\n          return false;\r\n        }\r\n        return true;\r\n      }, data.results);\r\n\r\n      console.log('Received results:', data, '; Will append:', appendedResults);\r\n\r\n      const mergedData = {\r\n        players: data.players,\r\n        results: [...originalData.results, ...appendedResults],\r\n        shared_charts: { ...originalData.shared_charts, ...data.shared_charts },\r\n      };\r\n      dispatch(processResultsData(mergedData));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nconst processResultsData = (data) => {\r\n  return async (dispatch, getState) => {\r\n    const { tracklist } = getState();\r\n    const { sharedCharts, mappedResults, profiles, battles } = processData(data, tracklist);\r\n\r\n    dispatch({\r\n      type: SUCCESS,\r\n      data: _.values(sharedCharts),\r\n      players: _.flow(\r\n        _.toPairs,\r\n        _.map(([id, player]) => ({ ...player, id: _.toInteger(id) }))\r\n      )(data.players),\r\n      results: mappedResults,\r\n      profiles,\r\n      sharedCharts,\r\n      originalData: data,\r\n    });\r\n\r\n    // Parallelized calculation of ELO and profile data\r\n    const input = { sharedCharts, profiles, tracklist, battles, debug: DEBUG };\r\n    let promise, worker;\r\n    if (window.Worker) {\r\n      worker = new WorkerProfilesProcessing();\r\n      promise = worker.getProcessedProfiles(input);\r\n    } else {\r\n      promise = new Promise((res) => res(profilesProcessing.getProcessedProfiles(input)));\r\n    }\r\n\r\n    const output = await promise;\r\n    DEBUG && console.log(output.logText);\r\n    DEBUG &&\r\n      console.log(\r\n        'Processed profiles:',\r\n        Object.values(output.profiles)\r\n          .filter((q) => q.pp)\r\n          .sort((a, b) => b.pp.pp - a.pp.pp)\r\n      );\r\n\r\n    dispatch({\r\n      type: PROFILES_UPDATE,\r\n      ...output,\r\n    });\r\n    dispatch(calculateRankingChanges(output.profiles));\r\n    if (worker) worker.terminate();\r\n  };\r\n};\r\n\r\nexport const setFilter = (filter) => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\n\r\nexport const resetFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n\r\nconst getListOfNames = _.map('id');\r\nconst getMapOfRatings = _.flow(\r\n  _.map((q) => [q.id, q.rating]),\r\n  _.fromPairs\r\n);\r\n\r\nexport const calculateRankingChanges = (profiles) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const ranking = _.orderBy('ratingRaw', 'desc', _.values(profiles));\r\n      const [lastChangedRanking, lastChangedRankingPoints, lastFetchedRanking] = await Promise.all([\r\n        localForage.getItem('lastChangedRanking_v3'),\r\n        localForage.getItem('lastChangedRankingPoints_v3'),\r\n        localForage.getItem('lastFetchedRanking_v3'),\r\n      ]);\r\n      const listNow = getListOfNames(ranking);\r\n      const listLastFetched = getListOfNames(lastFetchedRanking);\r\n      const listLastChanged = getListOfNames(lastChangedRanking);\r\n      const mapPointsNow = getMapOfRatings(ranking);\r\n      const mapPointsLastFetched = getMapOfRatings(lastFetchedRanking);\r\n      const mapPointsLastChanged = getMapOfRatings(lastChangedRankingPoints);\r\n\r\n      let rankingsPointsMap = mapPointsLastChanged;\r\n      // console.log(listNow, listLastFetched, listLastChanged);\r\n      // console.log(mapPointsNow, mapPointsLastFetched, mapPointsLastChanged);\r\n      if (!_.isEqual(mapPointsNow, mapPointsLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRankingPoints_v3', lastFetchedRanking);\r\n        rankingsPointsMap = mapPointsLastFetched;\r\n      }\r\n      let listPrev = listLastChanged;\r\n      if (!_.isEqual(listNow, listLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRanking_v3', lastFetchedRanking);\r\n        listPrev = listLastFetched;\r\n      }\r\n      dispatch({\r\n        type: RANKING_CHANGE_SET,\r\n        listNow,\r\n        listPrev,\r\n        rankingsPointsMap,\r\n      });\r\n      localForage.setItem('lastFetchedRanking_v3', ranking);\r\n    } catch (error) {\r\n      console.warn('Cannot get ranking from local storage', error);\r\n    }\r\n  };\r\n};\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\n\r\nimport { setFilter } from 'reducers/results';\r\n\r\nconst SELECT_PRESET = `PRESETS/SELECT_PRESET`;\r\nconst LOAD_PRESETS = `PRESETS/LOAD_PRESETS`;\r\nconst LOADING_START = `PRESETS/LOADING_START`;\r\nconst LOADING_END = `PRESETS/LOADING_END`;\r\n\r\nconst initialState = {\r\n  presets: [],\r\n  currentPreset: null,\r\n  isLoading: false,\r\n};\r\n\r\nconst itemToOption = item =>\r\n  item && {\r\n    ...item,\r\n    label: item.name,\r\n    value: item.name,\r\n  };\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_PRESETS:\r\n      const currentPreset = _.find({ name: _.get('name', state.currentPreset) }, action.presets);\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(currentPreset) || null,\r\n        presets: _.map(itemToOption, action.presets),\r\n      };\r\n    case SELECT_PRESET:\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(action.currentPreset),\r\n      };\r\n    case LOADING_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case LOADING_END:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst reloadPresets = presets => ({ type: LOAD_PRESETS, presets: presets || [] });\r\n\r\nconst startLoading = () => ({\r\n  type: LOADING_START,\r\n});\r\n\r\nconst endLoading = () => ({\r\n  type: LOADING_END,\r\n});\r\n\r\nexport const selectPreset = currentPreset => ({\r\n  type: SELECT_PRESET,\r\n  currentPreset,\r\n});\r\n\r\nexport const loadPresets = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    dispatch(reloadPresets(presets));\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const savePreset = name => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const { filter } = getState().top;\r\n    const newPreset = { name, filter };\r\n    if (!_.some({ name }, presets)) {\r\n      const newPresets = [...(presets || []), newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      dispatch(selectPreset(newPreset));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    } else if (window.confirm('Preset with this name already exists, replace it?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      const newPresets = [...withoutOldPreset, newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const openPreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const currentPreset = getState().presets.currentPreset;\r\n  const name = _.get('name', currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = name && _.find({ name }, presets);\r\n    if (preset) {\r\n      dispatch(selectPreset(currentPreset));\r\n      dispatch(setFilter(currentPreset.filter));\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const deletePreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const name = _.get('name', getState().presets.currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = _.find({ name }, presets);\r\n    if (preset && window.confirm('Are you sure you want to delete selected preset?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      dispatch(reloadPresets(withoutOldPreset));\r\n      localForage.setItem('filterPresets', withoutOldPreset);\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaLayerGroup, FaFolderOpen, FaSave, FaPlus, FaTrashAlt } from 'react-icons/fa';\r\nimport Select from 'react-select';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport Input from 'components/Shared/Input/Input';\r\n\r\nimport { loadPresets, savePreset, selectPreset, openPreset, deletePreset } from 'reducers/presets';\r\n\r\nconst overlayItem = (\r\n  <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n    <FaLayerGroup />\r\n    пресеты\r\n  </button>\r\n);\r\n\r\nconst noPresetsMessage = () => 'пусто';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ...state.presets,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  loadPresets,\r\n  savePreset,\r\n  openPreset,\r\n  deletePreset,\r\n  selectPreset,\r\n};\r\n\r\nclass PresetsControl extends React.Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    this.props.loadPresets();\r\n  }\r\n\r\n  onChangeSelection = selected => {\r\n    this.props.selectPreset(selected.name);\r\n  };\r\n\r\n  onRewritePreset = () => {\r\n    const { currentPreset } = this.props;\r\n    this.props.savePreset(currentPreset.name);\r\n  };\r\n\r\n  onSavePreset = () => {\r\n    const { name } = this.state;\r\n    this.props.savePreset(name);\r\n    this.setState({ isAddingNew: false });\r\n  };\r\n\r\n  render() {\r\n    const { presets, currentPreset, isLoading } = this.props;\r\n    const { name, isAddingNew } = this.state;\r\n    return (\r\n      <div>\r\n        <Overlay overlayItem={overlayItem}>\r\n          <div className=\"presets-control-overlay\">\r\n            <Select\r\n              className=\"select _margin-bottom\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"пресеты...\"\r\n              options={presets}\r\n              value={currentPreset}\r\n              onChange={this.props.selectPreset}\r\n              noOptionsMessage={noPresetsMessage}\r\n            />\r\n            {currentPreset && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.props.openPreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaFolderOpen /> открыть\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.onRewritePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaSave /> перезаписать\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon\"\r\n                  onClick={this.props.deletePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaTrashAlt /> удалить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {!isAddingNew && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left _self-align-end\"\r\n                  onClick={() => this.setState({ isAddingNew: true })}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaPlus /> добавить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {isAddingNew && (\r\n              <div className=\"adding-new _margin-bottom\">\r\n                <Input\r\n                  value={name}\r\n                  placeholder=\"имя пресета...\"\r\n                  className=\"form-control\"\r\n                  onChange={name => this.setState({ name })}\r\n                />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={this.onSavePreset}\r\n                  disabled={!name || isLoading}\r\n                >\r\n                  <FaSave /> сохранить\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={() => this.setState({ isAddingNew: false })}\r\n                  disabled={isLoading}\r\n                >\r\n                  отмена\r\n                </button>\r\n              </div>\r\n            )}\r\n            {/* <div>\r\n              <Toggle\r\n                checked={false}\r\n                onToggle={active => {\r\n                  localForage.setItem('showTabs', active);\r\n                }}\r\n              >\r\n                показывать табы с пресетами\r\n              </Toggle>\r\n            </div> */}\r\n          </div>\r\n        </Overlay>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PresetsControl);\r\n","export const colorsArray = [\r\n  '#4DB3FF',\r\n  '#80B300',\r\n  '#FF6655',\r\n  '#FF99E6',\r\n  '#33FFCC',\r\n  '#e633c8',\r\n  '#dbe812',\r\n  '#FF1A66',\r\n  '#991AFF',\r\n  '#E6B333',\r\n  '#1AB399',\r\n  '#4D8066',\r\n  '#CC9999',\r\n  '#00E680',\r\n  '#809980',\r\n  '#E6FF80',\r\n  '#1AFF33',\r\n  '#999933',\r\n  '#E6331A',\r\n  '#CCCC00',\r\n  '#66E64D',\r\n  '#4D80CC',\r\n  '#9900B3',\r\n  '#4DB380',\r\n  '#FF4D4D',\r\n];\r\n","import _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport matchSorter from 'match-sorter';\r\n\r\nimport { SORT, CHART_MIN_MAX, DURATION_DEFAULT } from 'constants/leaderboard';\r\n\r\nexport const playersSelector = createSelector(\r\n  (state) => state.results.players,\r\n  (state) => state.user.data.player.id,\r\n  (players, playerId) =>\r\n    _.flow(\r\n      _.toPairs,\r\n      _.map(([, { nickname, arcade_name, id, region }]) => ({\r\n        label: `${nickname} (${arcade_name})`,\r\n        value: nickname,\r\n        isCurrentPlayer: playerId === id,\r\n      })),\r\n      _.sortBy((it) => (it.isCurrentPlayer ? '!' : _.toLower(it.label)))\r\n    )(players)\r\n);\r\n\r\nconst filterCharts = (filter, rows) => {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filter);\r\n  const type = _.getOr(null, 'type', filter);\r\n  const duration = _.getOr(DURATION_DEFAULT, 'duration', filter);\r\n\r\n  return _.filter((row) => {\r\n    if (duration !== DURATION_DEFAULT && !duration.includes(row.duration)) {\r\n      return false;\r\n    }\r\n    return (\r\n      row.chartLevel >= range[0] &&\r\n      row.chartLevel <= range[1] &&\r\n      (!type || row.chartType.startsWith(type))\r\n    );\r\n  }, rows);\r\n};\r\n\r\nconst getFilteredData = (data, sharedCharts, filter, resultInfo = {}, preferences) => {\r\n  // const start = performance.now();\r\n  const playersHiddenStatus = preferences.playersHiddenStatus;\r\n  const names = _.map('value', filter.players);\r\n  const namesOr = _.map('value', filter.playersOr);\r\n  const namesNot = _.map('value', filter.playersNot);\r\n  const sortingType = _.get('value', filter.sortingType);\r\n  const protagonist = [\r\n    SORT.PROTAGONIST,\r\n    SORT.RANK_ASC,\r\n    SORT.RANK_DESC,\r\n    SORT.PP_ASC,\r\n    SORT.PP_DESC,\r\n    SORT.NEW_SCORES_PLAYER,\r\n  ].includes(sortingType)\r\n    ? _.get('value', filter.protagonist)\r\n    : null;\r\n  const excludeAntagonists = _.map('value', filter.excludeAntagonists);\r\n\r\n  const defaultSorting = [_.orderBy(['latestScoreDate'], ['desc'])];\r\n  const newScoresProtagonistSorting = !protagonist\r\n    ? defaultSorting\r\n    : [\r\n        _.orderBy(\r\n          [\r\n            (song) =>\r\n              _.max(\r\n                _.map(\r\n                  (res) => (res.nickname === protagonist ? res.dateObject.getTime() : 0),\r\n                  song.results\r\n                )\r\n              ),\r\n          ],\r\n          ['desc']\r\n        ),\r\n      ];\r\n  const protagonistSorting = [\r\n    _.filter((row) => _.map('nickname', row.results).includes(protagonist)),\r\n    _.map((row) => {\r\n      const protIndex = _.findIndex({ nickname: protagonist }, row.results);\r\n      const protScore = row.results[protIndex].score;\r\n      const enemies = _.flow([\r\n        _.take(protIndex),\r\n        _.uniqBy('nickname'),\r\n        _.remove((res) => excludeAntagonists.includes(res.nickname) || res.score === protScore),\r\n      ])(row.results);\r\n      const distance = Math.sqrt(\r\n        _.reduce((dist, enemy) => dist + (enemy.score / protScore - 0.99) ** 2, 0, enemies)\r\n      );\r\n      return {\r\n        ...row,\r\n        distanceFromProtagonist: distance,\r\n      };\r\n    }),\r\n    _.orderBy(['distanceFromProtagonist'], ['desc']),\r\n  ];\r\n  const getPpSorting = (field, direction = 'desc') => [\r\n    _.filter((row) => _.map('nickname', row.results).includes(protagonist)),\r\n    _.orderBy(\r\n      [\r\n        (row) => {\r\n          const result = _.find({ nickname: protagonist }, row.results);\r\n          const info = resultInfo[result.id] || {};\r\n          return _.getOr(direction === 'desc' ? -Infinity : Infinity, field, info);\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const getEloSorting = (direction) => [\r\n    _.filter((row) => _.map('nickname', row.results).includes(protagonist)),\r\n    _.orderBy(\r\n      [\r\n        (row) => {\r\n          const score = _.find({ nickname: protagonist }, row.results);\r\n          const info = resultInfo[score.id];\r\n          return _.getOr(direction === 'asc' ? Infinity : -Infinity, 'ratingDiff', info);\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const getDiffSorting = (direction = 'desc') => [\r\n    _.orderBy(\r\n      [\r\n        (row) => {\r\n          const chartInfo = sharedCharts[row.sharedChartId];\r\n          return _.getOr(_.toNumber(row.chartLevel), 'interpolatedDifficulty', chartInfo);\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const sortingFunctions =\r\n    {\r\n      [SORT.DEFAULT]: defaultSorting,\r\n      [SORT.NEW_SCORES_PLAYER]: newScoresProtagonistSorting,\r\n      [SORT.PROTAGONIST]: protagonistSorting,\r\n      [SORT.RANK_ASC]: getEloSorting('asc'),\r\n      [SORT.RANK_DESC]: getEloSorting('desc'),\r\n      [SORT.PP_ASC]: getPpSorting('pp.ppRatio', 'asc'),\r\n      [SORT.PP_DESC]: getPpSorting('pp.pp'),\r\n      [SORT.EASIEST_SONGS]: getDiffSorting('asc'),\r\n      [SORT.HARDEST_SONGS]: getDiffSorting('desc'),\r\n    }[sortingType] || defaultSorting;\r\n\r\n  const result = _.flow(\r\n    _.compact([\r\n      _.map((row) => {\r\n        let latestScoreDate = null;\r\n        const results = row.results.filter((res, index) => {\r\n          const isHiddenByPreferences =\r\n            playersHiddenStatus[res.playerId] && protagonist !== res.nickname;\r\n          const isVisible = !isHiddenByPreferences && (!res.isUnknownPlayer || index === 0);\r\n          if (isVisible && (!latestScoreDate || latestScoreDate < res.date)) {\r\n            latestScoreDate = res.date;\r\n          }\r\n          return isVisible;\r\n        }, row.results);\r\n        return {\r\n          ...row,\r\n          latestScoreDate,\r\n          results,\r\n        };\r\n      }),\r\n      filter.chartRange && ((items) => filterCharts(filter.chartRange, items)),\r\n      !filter.showRank &&\r\n        _.map((row) => ({ ...row, results: _.filter((res) => !res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        filter.showOnlyRank &&\r\n        _.map((row) => ({ ...row, results: _.filter((res) => res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        !filter.showOnlyRank &&\r\n        !filter.showRankAndNorank &&\r\n        _.map((row) => {\r\n          const occuredNames = [];\r\n          return {\r\n            ...row,\r\n            results: _.filter((res) => {\r\n              const alreadyOccured = occuredNames.includes(res.nickname);\r\n              occuredNames.push(res.nickname);\r\n              return !alreadyOccured;\r\n            }, row.results),\r\n          };\r\n        }),\r\n      (names.length || namesOr.length || namesNot.length) &&\r\n        _.filter((row) => {\r\n          const rowNames = _.map('nickname', row.results);\r\n          return (\r\n            (!names.length || _.every((name) => rowNames.includes(name), names)) &&\r\n            (!namesOr.length || _.some((name) => rowNames.includes(name), namesOr)) &&\r\n            (!namesNot.length || !_.some((name) => rowNames.includes(name), namesNot))\r\n          );\r\n        }),\r\n      _.filter((row) => _.size(row.results)),\r\n      ...sortingFunctions,\r\n      filter.song && ((items) => matchSorter(items, filter.song.trim(), { keys: ['song'] })),\r\n    ])\r\n  )(data);\r\n  // console.log('Elapsed:', performance.now() - start);\r\n  return result;\r\n};\r\n\r\nexport const filteredDataSelector = createSelector(\r\n  (state) => state.results.data,\r\n  (state) => state.results.sharedCharts,\r\n  (state) => state.results.filter,\r\n  (state) => state.results.resultInfo,\r\n  (state) => state.preferences.data,\r\n  getFilteredData\r\n);\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash/fp';\r\nimport Select from 'react-select';\r\nimport classNames from 'classnames';\r\nimport numeral from 'numeral';\r\nimport localForage from 'localforage';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport {\r\n  FaRedoAlt,\r\n  FaExclamationTriangle,\r\n  FaSearch,\r\n  FaYoutube,\r\n  FaAngleDoubleUp,\r\n  FaBackward,\r\n  FaForward,\r\n} from 'react-icons/fa';\r\nimport FlipMove from 'react-flip-move';\r\nimport queryString from 'query-string';\r\n\r\n// styles\r\nimport './leaderboard.scss';\r\n\r\n// components\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport CollapsibleBar from 'components/Shared/CollapsibleBar';\r\nimport Flag from 'components/Shared/Flag';\r\nimport ChartFilter from './ChartFilter';\r\nimport PresetsControl from './PresetsControl';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\nimport { SORT } from 'constants/leaderboard';\r\nimport { DEBUG } from 'constants/env';\r\n\r\n// reducers\r\nimport { fetchResults, setFilter, resetFilter, defaultFilter } from 'reducers/results';\r\nimport { selectPreset, openPreset } from 'reducers/presets';\r\n\r\n// utils\r\nimport { getExp } from 'utils/exp';\r\nimport { tooltipFormatter, getTimeAgo } from 'utils/leaderboards';\r\nimport { colorsArray } from 'utils/colors';\r\nimport { playersSelector, filteredDataSelector } from 'reducers/selectors';\r\n\r\n// code\r\nconst ANIMATION_DURATION = 250;\r\nconst sortingOptions = [\r\n  {\r\n    label: 'от новых скоров',\r\n    value: SORT.DEFAULT,\r\n  },\r\n  {\r\n    label: 'от новых скоров конкретного игрока',\r\n    value: SORT.NEW_SCORES_PLAYER,\r\n  },\r\n  // {\r\n  //   label: 'отставанию от остальных',\r\n  //   value: SORT.PROTAGONIST,\r\n  // },\r\n  {\r\n    label: 'от худших результатов (эло)',\r\n    value: SORT.RANK_ASC,\r\n  },\r\n  {\r\n    label: 'от лучших результатов (эло)',\r\n    value: SORT.RANK_DESC,\r\n  },\r\n  {\r\n    label: 'от худших результатов (pp)',\r\n    value: SORT.PP_ASC,\r\n  },\r\n  {\r\n    label: 'от лучших результатов (pp)',\r\n    value: SORT.PP_DESC,\r\n  },\r\n  {\r\n    label: 'от лёгких чартов',\r\n    value: SORT.EASIEST_SONGS,\r\n  },\r\n  {\r\n    label: 'от сложных чартов',\r\n    value: SORT.HARDEST_SONGS,\r\n  },\r\n];\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    playersHiddenStatus: state.preferences.data.playersHiddenStatus,\r\n    players: playersSelector(state),\r\n    profiles: state.results.profiles,\r\n    resultInfo: state.results.resultInfo,\r\n    results: state.results.results,\r\n    sharedCharts: state.results.sharedCharts,\r\n    filteredData: filteredDataSelector(state),\r\n    data: state.results.data,\r\n    filter: state.results.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading: state.results.isLoading || state.tracklist.isLoading,\r\n    presets: state.presets.presets,\r\n    currentPreset: state.presets.currentPreset,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setFilter,\r\n  resetFilter,\r\n  selectPreset,\r\n  openPreset,\r\n};\r\n\r\nclass Leaderboard extends Component {\r\n  static propTypes = {\r\n    match: toBe.object,\r\n    resultInfo: toBe.object,\r\n    data: toBe.array,\r\n    error: toBe.object,\r\n    playersHiddenStatus: toBe.object,\r\n    results: toBe.array,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  state = { showItemsCount: 20, chartOverrides: {} };\r\n\r\n  setFilter = _.curry((name, value) => {\r\n    const filter = { ...this.props.filter, [name]: value };\r\n    this.props.setFilter(filter);\r\n    localForage.setItem('filter', filter);\r\n  });\r\n\r\n  resetFilter = () => {\r\n    this.props.resetFilter();\r\n    this.setState({ chartOverrides: {} });\r\n    localForage.setItem('filter', defaultFilter);\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    this.setState({ chartOverrides: {} });\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onTypeSongName = _.debounce(300, (value) => {\r\n    this.setFilter('song', value);\r\n  });\r\n\r\n  onRedoLatestResult = _.throttle(ANIMATION_DURATION + 10, (chart) => {\r\n    const overrides = _.drop(1, this.state.chartOverrides[chart.sharedChartId]);\r\n    this.setState((state) => ({\r\n      chartOverrides: {\r\n        ...state.chartOverrides,\r\n        [chart.sharedChartId]: _.size(overrides) === 1 ? null : overrides,\r\n      },\r\n    }));\r\n  });\r\n\r\n  onUndoLatestResult = _.throttle(ANIMATION_DURATION + 10, (chart) => {\r\n    if (_.isEmpty(chart.results)) {\r\n      this.setState((state) => ({\r\n        chartOverrides: _.omit(chart.sharedChartId, state.chartOverrides),\r\n      }));\r\n    }\r\n    const undoedResult = _.maxBy('date', chart.results);\r\n    if (!undoedResult) return;\r\n\r\n    const { results } = this.props;\r\n    const undoedPlayerId = undoedResult.playerId;\r\n    const previousPlayerResult = _.findLast(\r\n      (res) =>\r\n        res.playerId === undoedPlayerId &&\r\n        res.sharedChartId === chart.sharedChartId &&\r\n        res.isRank === undoedResult.isRank &&\r\n        res.date < undoedResult.date,\r\n      results\r\n    );\r\n    const newResults = _.orderBy(\r\n      'score',\r\n      'desc',\r\n      _.compact(_.map((res) => (res === undoedResult ? previousPlayerResult : res), chart.results))\r\n    );\r\n    const latestScore = _.maxBy('date', newResults);\r\n    const overrideChart = {\r\n      ...chart,\r\n      latestScoreDate: latestScore && latestScore.date,\r\n      results: newResults,\r\n    };\r\n    if (_.isEmpty(newResults)) {\r\n      this.setState((state) => ({\r\n        chartOverrides: {\r\n          ...state.chartOverrides,\r\n          [chart.sharedChartId]: null,\r\n        },\r\n      }));\r\n    } else {\r\n      this.setState((state) => ({\r\n        chartOverrides: {\r\n          ...state.chartOverrides,\r\n          [chart.sharedChartId]: [\r\n            overrideChart,\r\n            ...(state.chartOverrides[chart.sharedChartId] || [chart]),\r\n          ],\r\n        },\r\n      }));\r\n    }\r\n  });\r\n\r\n  renderSimpleSearch() {\r\n    const { isLoading, filter } = this.props;\r\n    return (\r\n      <div className=\"simple-search\">\r\n        <div className=\"song-name _margin-right _margin-bottom\">\r\n          <Input\r\n            value={filter.song || ''}\r\n            placeholder=\"название песни...\"\r\n            className=\"form-control\"\r\n            onChange={this.onTypeSongName}\r\n          />\r\n        </div>\r\n        <div className=\"chart-range _margin-right _margin-bottom\">\r\n          <ChartFilter filterValue={filter.chartRange} onChange={this.setFilter('chartRange')} />\r\n        </div>\r\n        <div className=\"_flex-fill\" />\r\n        <div className=\"_flex-row _margin-bottom\">\r\n          <PresetsControl />\r\n          <button className=\"btn btn-sm btn-dark btn-icon _margin-right\" onClick={this.resetFilter}>\r\n            <FaRedoAlt /> сбросить фильтры\r\n          </button>\r\n          <button\r\n            disabled={isLoading}\r\n            className=\"btn btn-sm btn-dark btn-icon\"\r\n            onClick={this.onRefresh}\r\n          >\r\n            <FaSearch /> обновить\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFilters() {\r\n    const { players, filter } = this.props;\r\n    return (\r\n      <div className=\"filters\">\r\n        <div className=\"people-filters\">\r\n          <label className=\"label\">показывать чарты, которые сыграл:</label>\r\n          <div className=\"players-block\">\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">каждый из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'players', filter)}\r\n                onChange={this.setFilter('players')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и хоть один из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersOr', filter)}\r\n                onChange={this.setFilter('playersOr')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и никто из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersNot', filter)}\r\n                onChange={this.setFilter('playersNot')}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Toggle\r\n            checked={_.getOr(false, 'showRank', filter)}\r\n            onChange={this.setFilter('showRank')}\r\n          >\r\n            показывать скоры на ранке\r\n          </Toggle>\r\n        </div>\r\n        {_.get('showRank', filter) && (\r\n          <>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showOnlyRank', filter)}\r\n                onChange={(value) => {\r\n                  this.setFilter('showOnlyRank', value);\r\n                  if (_.get('showRankAndNorank', filter)) {\r\n                    this.setFilter('showRankAndNorank', false);\r\n                  }\r\n                }}\r\n              >\r\n                <strong>только</strong> на ранке\r\n              </Toggle>\r\n            </div>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showRankAndNorank', filter)}\r\n                onChange={(value) => {\r\n                  this.setFilter('showRankAndNorank', value);\r\n                  if (_.get('showOnlyRank', filter)) {\r\n                    this.setFilter('showOnlyRank', false);\r\n                  }\r\n                }}\r\n              >\r\n                показывать лучшие скоры с ранком и без\r\n              </Toggle>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSortings() {\r\n    const { players, filter } = this.props;\r\n    return (\r\n      <div className=\"sortings\">\r\n        <div>\r\n          <label className=\"label\">сортировка:</label>\r\n          <Select\r\n            placeholder=\"выберите сортировку\"\r\n            className=\"select\"\r\n            classNamePrefix=\"select\"\r\n            isClearable={false}\r\n            options={sortingOptions}\r\n            value={_.getOr(sortingOptions[0], 'sortingType', filter)}\r\n            onChange={this.setFilter('sortingType')}\r\n          />\r\n        </div>\r\n        {[\r\n          SORT.PROTAGONIST,\r\n          SORT.RANK_ASC,\r\n          SORT.RANK_DESC,\r\n          SORT.PP_ASC,\r\n          SORT.PP_DESC,\r\n          SORT.NEW_SCORES_PLAYER,\r\n        ].includes(_.get('sortingType.value', filter)) && (\r\n          <div>\r\n            <label className=\"label\">игрок:</label>\r\n            <Select\r\n              className={classNames('select players', {\r\n                'red-border': !_.get('protagonist', filter),\r\n              })}\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              value={_.getOr(null, 'protagonist', filter)}\r\n              onChange={this.setFilter('protagonist')}\r\n            />\r\n          </div>\r\n        )}\r\n        {[SORT.PROTAGONIST].includes(_.get('sortingType.value', filter)) && (\r\n          <div>\r\n            <label className=\"label\">не учитывать в сравнении:</label>\r\n            <Select\r\n              closeMenuOnSelect={false}\r\n              className=\"select players\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              isMulti\r\n              value={_.getOr([], 'excludeAntagonists', filter)}\r\n              onChange={this.setFilter('excludeAntagonists')}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isLoading,\r\n      profiles,\r\n      filteredData,\r\n      error,\r\n      filter,\r\n      resultInfo,\r\n      sharedCharts,\r\n      playersHiddenStatus,\r\n    } = this.props;\r\n    const { showItemsCount, chartOverrides } = this.state;\r\n    const canShowMore = filteredData.length > showItemsCount;\r\n    const visibleData = _.slice(0, showItemsCount, filteredData);\r\n\r\n    const sortingType = _.get('sortingType.value', filter);\r\n    const showProtagonistEloChange = [SORT.RANK_ASC, SORT.RANK_DESC].includes(sortingType);\r\n    const showProtagonistPpChange = [SORT.PP_ASC, SORT.PP_DESC].includes(sortingType);\r\n    const highlightProtagonist = [\r\n      SORT.PROTAGONIST,\r\n      SORT.RANK_ASC,\r\n      SORT.RANK_DESC,\r\n      SORT.PP_ASC,\r\n      SORT.PP_DESC,\r\n      SORT.NEW_SCORES_PLAYER,\r\n    ].includes(sortingType);\r\n    const protagonistName = _.get('protagonist.value', filter);\r\n    const uniqueSelectedNames = _.slice(\r\n      0,\r\n      colorsArray.length,\r\n      _.uniq(\r\n        _.compact([\r\n          highlightProtagonist && protagonistName,\r\n          ..._.map('value', filter.players),\r\n          ..._.map('value', filter.playersOr),\r\n        ])\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div className=\"leaderboard-page\">\r\n        <div className=\"content\">\r\n          <div className=\"search-block\">\r\n            {this.renderSimpleSearch()}\r\n            <CollapsibleBar title=\"фильтры\">{this.renderFilters()}</CollapsibleBar>\r\n            <CollapsibleBar title=\"сортировка\">{this.renderSortings()}</CollapsibleBar>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!!this.props.presets.length && (\r\n            <div className=\"presets-buttons\">\r\n              <span>пресеты:</span>\r\n              {this.props.presets.map((preset) => (\r\n                <ToggleButton\r\n                  key={preset.name}\r\n                  text={preset.name}\r\n                  className=\"btn btn-sm btn-dark _margin-right\"\r\n                  active={_.get('filter', preset) === this.props.filter}\r\n                  onToggle={() => {\r\n                    this.props.selectPreset(preset);\r\n                    this.props.openPreset();\r\n                  }}\r\n                ></ToggleButton>\r\n              ))}\r\n            </div>\r\n          )}\r\n          <div className=\"top-list\">\r\n            {_.isEmpty(filteredData) && !isLoading && (error ? error.message : 'ничего не найдено')}\r\n            {!isLoading &&\r\n              visibleData.map((chartOriginal, chartIndex) => {\r\n                const overrides = chartOverrides[chartOriginal.sharedChartId];\r\n                const chart = _.first(overrides) || chartOriginal;\r\n\r\n                if (DEBUG) console.log(chart);\r\n\r\n                let topPlace = 1;\r\n                const occuredNicknames = [];\r\n                const results = chart.results.map((res, index) => {\r\n                  const isPlayerHidden = playersHiddenStatus[res.playerId];\r\n                  const isSecondOccurenceInResults = occuredNicknames.includes(res.nickname);\r\n                  occuredNicknames.push(res.nickname);\r\n                  if (index === 0) {\r\n                    topPlace = 1;\r\n                  } else if (\r\n                    !isSecondOccurenceInResults &&\r\n                    res.score !== _.get([index - 1, 'score'], chart.results)\r\n                  ) {\r\n                    topPlace += 1;\r\n                  }\r\n                  return {\r\n                    ...res,\r\n                    topPlace,\r\n                    isSecondOccurenceInResults,\r\n                    isPlayerHidden,\r\n                  };\r\n                });\r\n                const interpolatedDifficulty =\r\n                  sharedCharts[chart.sharedChartId] &&\r\n                  sharedCharts[chart.sharedChartId].interpolatedDifficulty;\r\n                return (\r\n                  <div className=\"song-block\" key={chart.sharedChartId}>\r\n                    <div className=\"song-name\">\r\n                      <div\r\n                        className={classNames('chart-name', {\r\n                          single: chart.chartType === 'S',\r\n                          singlep: chart.chartType === 'SP',\r\n                          doublep: chart.chartType === 'DP',\r\n                          double: chart.chartType === 'D',\r\n                          coop: chart.chartType === 'COOP',\r\n                        })}\r\n                      >\r\n                        <span className=\"chart-letter\">{chart.chartType}</span>\r\n                        <span className=\"chart-number\">{chart.chartLevel}</span>\r\n                      </div>\r\n                      <div>\r\n                        {chart.song}{' '}\r\n                        <span className=\"_grey-text\">\r\n                          ({interpolatedDifficulty && interpolatedDifficulty.toFixed(2)})\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"youtube-link\">\r\n                        <a\r\n                          href={`https://youtube.com/results?${queryString.stringify({\r\n                            search_query: `${chart.song} ${chart.chartLabel}`.replace(\r\n                              /( -)|(- )/g,\r\n                              ' '\r\n                            ),\r\n                          })}`}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          <FaYoutube />\r\n                        </a>\r\n                      </div>\r\n                      <div className=\"_flex-fill\" />\r\n                      {(() => {\r\n                        const isActive = !_.isEmpty(overrides);\r\n                        const currentIndex = isActive\r\n                          ? 1 + chart.totalResultsCount - _.size(overrides)\r\n                          : chart.totalResultsCount;\r\n                        const canUndo = !(currentIndex === 1 && chart.totalResultsCount === 1);\r\n                        return (\r\n                          <div\r\n                            className={classNames('undo-result-button', {\r\n                              active: isActive,\r\n                            })}\r\n                          >\r\n                            <FaBackward\r\n                              className={classNames('backward-btn', { disabled: !canUndo })}\r\n                              onClick={() => canUndo && this.onUndoLatestResult(chart)}\r\n                            />\r\n                            <span className=\"number\">\r\n                              {currentIndex}/{chart.totalResultsCount}\r\n                            </span>\r\n                            <FaForward\r\n                              className={classNames('forward-btn', { disabled: !isActive })}\r\n                              onClick={() => isActive && this.onRedoLatestResult(chart)}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      })()}\r\n                    </div>\r\n                    <div className=\"charts\">\r\n                      {!_.isEmpty(results) && (\r\n                        <div className=\"chart\">\r\n                          <div className=\"results\">\r\n                            <table>\r\n                              {chartIndex === 0 && (\r\n                                <thead>\r\n                                  <tr>\r\n                                    <th className=\"place\"></th>\r\n                                    <th className=\"nickname\"></th>\r\n                                    <th className=\"judge\"></th>\r\n                                    <th className=\"score\">score</th>\r\n                                    <th className=\"grade\"></th>\r\n                                    <th className=\"number\">miss</th>\r\n                                    <th className=\"number\">bad</th>\r\n                                    <th className=\"number\">good</th>\r\n                                    <th className=\"number\">great</th>\r\n                                    <th className=\"number\">perfect</th>\r\n                                    <th className=\"combo\">combo</th>\r\n                                    <th className=\"accuracy\">accuracy</th>\r\n                                    <th className=\"date\"></th>\r\n                                  </tr>\r\n                                </thead>\r\n                              )}\r\n                              <FlipMove\r\n                                enterAnimation=\"fade\"\r\n                                leaveAnimation=\"fade\"\r\n                                typeName=\"tbody\"\r\n                                maintainContainerHeight\r\n                                duration={ANIMATION_DURATION}\r\n                              >\r\n                                {results.map((res, index) => {\r\n                                  const isProtagonist = res.nickname === protagonistName;\r\n                                  if (\r\n                                    (res.isPlayerHidden && !isProtagonist) ||\r\n                                    (res.isUnknownPlayer && index !== 0)\r\n                                  ) {\r\n                                    return null;\r\n                                  }\r\n                                  const nameIndex = uniqueSelectedNames.indexOf(res.nickname);\r\n                                  let placeDifference, newIndex;\r\n                                  if (res.scoreIncrease && res.date === chart.latestScoreDate) {\r\n                                    const prevScore = res.score - res.scoreIncrease;\r\n                                    newIndex = _.findLastIndex(\r\n                                      (res) => res.score > prevScore,\r\n                                      results\r\n                                    );\r\n                                    placeDifference = newIndex - index;\r\n                                  }\r\n                                  const inf = resultInfo[res.id] || {};\r\n\r\n                                  // Rating info for nickname column:\r\n                                  let ratingInfoBlock = null;\r\n                                  if (DEBUG) {\r\n                                    // In debug mode we show all info\r\n                                    ratingInfoBlock = (\r\n                                      <>\r\n                                        <span className=\"debug-elo-info\">\r\n                                          {' '}\r\n                                          {inf.startingRating && Math.round(inf.startingRating)}\r\n                                          {' / '}\r\n                                          {inf.ratingDiff > 0 ? '+' : ''}\r\n                                          {inf.ratingDiff && Math.round(inf.ratingDiff)}\r\n                                          {' / '}\r\n                                          {inf.pp && inf.pp.ppFixed}pp\r\n                                        </span>\r\n                                      </>\r\n                                    );\r\n                                  } else if (\r\n                                    res.nickname === protagonistName &&\r\n                                    (showProtagonistEloChange || showProtagonistPpChange)\r\n                                  ) {\r\n                                    // In non-debug mode we show relevant info for selected protagonist\r\n                                    ratingInfoBlock = (\r\n                                      <>\r\n                                        {' / '}\r\n                                        {showProtagonistEloChange && inf.ratingDiff && (\r\n                                          <span>\r\n                                            {`${inf.ratingDiff > 0 ? '+' : ''}${Math.round(\r\n                                              inf.ratingDiff\r\n                                            )}`}\r\n                                          </span>\r\n                                        )}\r\n                                        {showProtagonistPpChange && inf.pp && (\r\n                                          <span>{inf.pp.ppFixed}pp</span>\r\n                                        )}\r\n                                      </>\r\n                                    );\r\n                                  }\r\n\r\n                                  const flag = profiles[res.playerId] ? (\r\n                                    <Flag region={profiles[res.playerId].region} />\r\n                                  ) : null;\r\n\r\n                                  return (\r\n                                    <tr\r\n                                      key={res.isRank + '_' + res.nickname}\r\n                                      className={classNames({\r\n                                        empty: !res.isExactDate,\r\n                                        latest: res.date === chart.latestScoreDate,\r\n                                      })}\r\n                                    >\r\n                                      <td className=\"place\">\r\n                                        {res.isSecondOccurenceInResults ? '' : `#${res.topPlace}`}\r\n                                      </td>\r\n                                      <td\r\n                                        className=\"nickname\"\r\n                                        style={\r\n                                          nameIndex > -1\r\n                                            ? { fontWeight: 'bold', color: colorsArray[nameIndex] }\r\n                                            : {}\r\n                                        }\r\n                                      >\r\n                                        <div className=\"nickname-container\">\r\n                                          {flag}\r\n                                          <span className=\"nickname-text\">\r\n                                            {res.nickname}\r\n                                            {!!placeDifference && (\r\n                                              <span className=\"change-holder up\">\r\n                                                <span>{placeDifference}</span>\r\n                                                <FaAngleDoubleUp />\r\n                                              </span>\r\n                                            )}\r\n                                            {ratingInfoBlock}\r\n                                          </span>\r\n                                        </div>\r\n                                      </td>\r\n                                      <td\r\n                                        className={classNames('judge', {\r\n                                          vj: res.isRank,\r\n                                          hj: res.isHJ,\r\n                                        })}\r\n                                      >\r\n                                        {res.isRank && (\r\n                                          <div className=\"inner\">\r\n                                            {res.isExactDate ? (\r\n                                              'VJ'\r\n                                            ) : (\r\n                                              <Tooltip\r\n                                                content={\r\n                                                  <div>\r\n                                                    наличие ранка на этом результате было угадано,\r\n                                                    основываясь на скоре\r\n                                                  </div>\r\n                                                }\r\n                                                tooltipClassName=\"pumpking-tooltip\"\r\n                                              >\r\n                                                VJ?\r\n                                              </Tooltip>\r\n                                            )}\r\n                                          </div>\r\n                                        )}\r\n                                        {res.isHJ && <div className=\"inner\">HJ</div>}\r\n                                      </td>\r\n                                      <td className=\"score\">\r\n                                        <Overlay\r\n                                          overlayClassName=\"score-overlay-outer\"\r\n                                          overlayItem={\r\n                                            <span className=\"score-span\">\r\n                                              {/* {res.scoreIncrease > res.score * 0.8 && <FaPlus />} */}\r\n                                              {res.scoreIncrease > res.score * 0.8 && '*'}\r\n                                              {numeral(res.score).format('0,0')}\r\n                                            </span>\r\n                                          }\r\n                                          placement=\"top\"\r\n                                        >\r\n                                          <div className=\"score-overlay\">\r\n                                            {DEBUG && (\r\n                                              <>\r\n                                                <div>\r\n                                                  <span className=\"_grey\">result id: </span>\r\n                                                  {res.id}\r\n                                                </div>\r\n                                                <div>\r\n                                                  <span className=\"_grey\">player id: </span>\r\n                                                  {res.playerId}\r\n                                                </div>\r\n                                              </>\r\n                                            )}\r\n                                            <div>\r\n                                              <span className=\"_grey\">игрок: </span>\r\n                                              <NavLink\r\n                                                exact\r\n                                                to={routes.profile.getPath({ id: res.playerId })}\r\n                                              >\r\n                                                {res.nickname} ({res.nicknameArcade})\r\n                                              </NavLink>\r\n                                            </div>\r\n                                            {!!getExp(res, chart) && (\r\n                                              <div className=\"important\">\r\n                                                <span className=\"_grey\">опыт: </span>+\r\n                                                {numeral(getExp(res, chart)).format('0,0')}\r\n                                              </div>\r\n                                            )}\r\n                                            {_.isNumber(inf.startingRating) &&\r\n                                              _.isNumber(inf.ratingDiff) && (\r\n                                                <div className=\"important\">\r\n                                                  <span className=\"_grey\">\r\n                                                    эло: {inf.startingRating.toFixed(0)}{' '}\r\n                                                  </span>\r\n                                                  {inf.ratingDiff >= 0\r\n                                                    ? `+${inf.ratingDiff.toFixed(0)}`\r\n                                                    : inf.ratingDiff.toFixed(0)}\r\n                                                </div>\r\n                                              )}\r\n                                            {inf.pp && (\r\n                                              <div className=\"important\">\r\n                                                <span className=\"_grey\">pp: </span>\r\n                                                <span>{inf.pp.ppFixed}pp</span>\r\n                                              </div>\r\n                                            )}\r\n                                            {!res.isExactDate && (\r\n                                              <div className=\"warning\">\r\n                                                <FaExclamationTriangle />\r\n                                                рекорд взят с my best. часть данных недоступна\r\n                                              </div>\r\n                                            )}\r\n                                            {!!res.isExactDate && (\r\n                                              <>\r\n                                                {!!res.mods && (\r\n                                                  <div>\r\n                                                    <span className=\"_grey\">моды: </span>\r\n                                                    {res.mods}\r\n                                                  </div>\r\n                                                )}\r\n                                                {!!res.calories && (\r\n                                                  <div>\r\n                                                    <span className=\"_grey\">ккал: </span>\r\n                                                    {res.calories}\r\n                                                  </div>\r\n                                                )}\r\n                                                {!!res.scoreIncrease && (\r\n                                                  <div>\r\n                                                    <span className=\"_grey\">прирост: </span>+\r\n                                                    {numeral(res.scoreIncrease).format('0,0')}\r\n                                                  </div>\r\n                                                )}\r\n                                                {res.originalChartMix && (\r\n                                                  <div>\r\n                                                    <div className=\"warning\">\r\n                                                      <FaExclamationTriangle />\r\n                                                      было сыграно на {res.originalChartMix}\r\n                                                    </div>\r\n                                                    {res.originalChartLabel && (\r\n                                                      <div>\r\n                                                        <span className=\"_grey\">\r\n                                                          оригинальный чарт:{' '}\r\n                                                        </span>\r\n                                                        {res.originalChartLabel}\r\n                                                      </div>\r\n                                                    )}\r\n                                                    {res.originalScore && (\r\n                                                      <div>\r\n                                                        <span className=\"_grey\">\r\n                                                          оригинальный скор:{' '}\r\n                                                        </span>\r\n                                                        {res.originalScore}\r\n                                                      </div>\r\n                                                    )}\r\n                                                  </div>\r\n                                                )}\r\n                                                {res.scoreIncrease > res.score * 0.8 && '* сайтрид'}\r\n                                              </>\r\n                                            )}\r\n                                          </div>\r\n                                        </Overlay>\r\n                                      </td>\r\n                                      <td className=\"grade\">\r\n                                        <div className=\"img-holder\">\r\n                                          {res.grade && res.grade !== '?' && (\r\n                                            <img\r\n                                              src={`${process.env.PUBLIC_URL}/grades/${res.grade}.png`}\r\n                                              alt={res.grade}\r\n                                            />\r\n                                          )}\r\n                                          {res.grade === '?' && null}\r\n                                        </div>\r\n                                      </td>\r\n                                      <td className=\"number miss\">{res.miss}</td>\r\n                                      <td className=\"number bad\">{res.bad}</td>\r\n                                      <td className=\"number good\">{res.good}</td>\r\n                                      <td className=\"number great\">{res.great}</td>\r\n                                      <td className=\"number perfect\">{res.perfect}</td>\r\n                                      <td className=\"combo\">\r\n                                        {res.combo}\r\n                                        {res.combo ? 'x' : ''}\r\n                                      </td>\r\n                                      <td className=\"accuracy\">\r\n                                        {res.accuracy}\r\n                                        {res.accuracy ? '%' : ''}\r\n                                      </td>\r\n                                      <td\r\n                                        className={classNames('date', {\r\n                                          latest: res.date === chart.latestScoreDate,\r\n                                        })}\r\n                                      >\r\n                                        <Tooltip\r\n                                          content={tooltipFormatter(res)}\r\n                                          tooltipClassName=\"pumpking-tooltip\"\r\n                                        >\r\n                                          {getTimeAgo(res.dateObject)}\r\n                                          {res.isExactDate ? '' : '?'}\r\n                                        </Tooltip>\r\n                                      </td>\r\n                                    </tr>\r\n                                  );\r\n                                })}\r\n                              </FlipMove>\r\n                            </table>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            {!isLoading && canShowMore && (\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() =>\r\n                  this.setState((state) => ({ showItemsCount: state.showItemsCount + 10 }))\r\n                }\r\n              >\r\n                show more...\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Leaderboard);\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n// import numeral from 'numeral';\r\nimport classNames from 'classnames';\r\nimport { GiQueenCrown } from 'react-icons/gi';\r\nimport { FaAngleDoubleUp, FaAngleDoubleDown } from 'react-icons/fa';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\nimport Flag from 'components/Shared/Flag';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\n// import CheckBox from 'components/Shared/CheckBox';\r\n\r\nimport { getRankImg } from 'utils/exp';\r\n\r\nconst getGradeImg = (grade) => (\r\n  <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n);\r\n\r\nexport default function RankingList({ ranking, isLoading, preferences, updatePreferences }) {\r\n  return (\r\n    <div className=\"ranking-list\">\r\n      {_.isEmpty(ranking) && !isLoading && 'ничего не найдено'}\r\n      {isLoading && <Loader />}\r\n      {!isLoading && (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"place\"></th>\r\n              <th className=\"change\"></th>\r\n              <th className=\"exp-rank\">rank</th>\r\n              <th className=\"name\">name</th>\r\n              <th className=\"name2\">piu name</th>\r\n              <th className=\"rating\">elo</th>\r\n              <th className=\"rating-change-cell\"></th>\r\n              <th className=\"rating\">pp</th>\r\n              {/* <th className=\"total-score\">total score</th> */}\r\n              <th className=\"grades sss\">{getGradeImg('SSS')}</th>\r\n              <th className=\"grades ss\">{getGradeImg('SS')}</th>\r\n              <th className=\"grades s\">{getGradeImg('S')}</th>\r\n              <th className=\"grades a\">{getGradeImg('A+')}</th>\r\n              <th className=\"grades b\">{getGradeImg('B')}</th>\r\n              <th className=\"grades c\">{getGradeImg('C')}</th>\r\n              <th className=\"grades d\">{getGradeImg('D')}</th>\r\n              <th className=\"grades f\">{getGradeImg('F')}</th>\r\n              <th className=\"playcount\">scores</th>\r\n              {/* <th className=\"calories\">kcal</th> */}\r\n              <th className=\"accuracy\">accuracy</th>\r\n              <th className=\"hide-col\"> </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {ranking.map((player, playerIndex) => {\r\n              const isHidden = preferences.playersHiddenStatus[player.id];\r\n              return (\r\n                <tr\r\n                  className={classNames('player', { 'hidden-player': isHidden })}\r\n                  key={player.name}\r\n                >\r\n                  <td className=\"place\">\r\n                    {playerIndex === 0 ? <GiQueenCrown /> : `#${playerIndex + 1}`}\r\n                  </td>\r\n                  <td className=\"change\">\r\n                    {player.change > 0 && (\r\n                      <div className=\"change-holder up\">\r\n                        <span>{player.change}</span>\r\n                        <FaAngleDoubleUp />\r\n                      </div>\r\n                    )}\r\n                    {player.change < 0 && (\r\n                      <div className=\"change-holder down\">\r\n                        <span>{-player.change}</span>\r\n                        <FaAngleDoubleDown />\r\n                      </div>\r\n                    )}\r\n                    {!!player.change && _.isString(player.change) && (\r\n                      <div className=\"change-holder text\">\r\n                        <span>{player.change}</span>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"exp-rank\">{getRankImg(player.expRank)}</td>\r\n                  <td className=\"name\">\r\n                    <div className=\"name-container\">\r\n                      <Flag region={player.region} />\r\n                      <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                        {player.name}\r\n                      </NavLink>\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"name\">\r\n                    <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                      {player.nameArcade}\r\n                    </NavLink>\r\n                  </td>\r\n                  <td className=\"rating\">{player.rating}</td>\r\n                  <td className=\"rating-change-cell\">\r\n                    {!!player.prevRating && player.prevRating !== player.rating && (\r\n                      <span\r\n                        className={classNames('rating-change', {\r\n                          down: player.prevRating > player.rating,\r\n                          up: player.prevRating < player.rating,\r\n                        })}\r\n                      >\r\n                        {player.prevRating < player.rating ? '+' : ''}\r\n                        {player.rating - player.prevRating}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"rating secondary\">{Math.round(player.pp.pp)}</td>\r\n                  <td className=\"grades sss\">{player.grades.SSS}</td>\r\n                  <td className=\"grades ss\">{player.grades.SS}</td>\r\n                  <td className=\"grades s\">{player.grades.S}</td>\r\n                  <td className=\"grades a\">{player.grades.A}</td>\r\n                  <td className=\"grades b\">{player.grades.B}</td>\r\n                  <td className=\"grades c\">{player.grades.C}</td>\r\n                  <td className=\"grades d\">{player.grades.D}</td>\r\n                  <td className=\"grades f\">{player.grades.F}</td>\r\n                  <td className=\"playcount\">{player.count}</td>\r\n                  <td className=\"accuracy\">\r\n                    {player.accuracy ? `${player.accuracy.toFixed(2)}%` : ''}\r\n                  </td>\r\n                  <td className=\"hide-col\">\r\n                    <Toggle\r\n                      onChange={() => {\r\n                        updatePreferences(\r\n                          _.set(['playersHiddenStatus', player.id], !isHidden, preferences)\r\n                        );\r\n                      }}\r\n                      checked={!isHidden}\r\n                    />\r\n                    {/* <CheckBox\r\n                      onChange={() => {\r\n                        updatePreferences(\r\n                          _.set(['playersHiddenStatus', player.id], !isHidden, preferences)\r\n                        );\r\n                      }}\r\n                      isChecked={isHidden}\r\n                    /> */}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function RankingFaq() {\r\n  return (\r\n    <div className=\"faq\">\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Как считается рейтинг?</div>\r\n        <div className=\"answer\">\r\n          A: Используется <a href=\"https://en.wikipedia.org/wiki/Elo_rating_system\">рейтинг Эло</a>,\r\n          широко используемый в шахматах и других играх, слегка модицированный под условия игры на\r\n          пампе. Средний рейтинг - 1000. Коэффициент К зависит от уровня чарта (более сложные чарты\r\n          сильнее влияют на рейтинг). Количество очков влияет на заработанный рейтинг (маленький\r\n          отрыв от противника не даст так много очков как большой отрыв).\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Что такое рр и чем оно отличается от эло?</div>\r\n        <div className=\"answer\">\r\n          A: РР (performance points) - система очков, взятая из osu!. Эло - система рейтинга, взятая\r\n          из шахмат. Основные отличия:\r\n          <br />\r\n          С эло твои очки зависят от других игроков на этом чарте, с рр твои очки зависят только от\r\n          того, как ты сыграешь чарт.\r\n          <br />\r\n          С эло можно потерять очки или заставить другого игрока их потерять, с рр можно только\r\n          набирать больше очков.\r\n          <br />\r\n          С эло намного проще кого-то обогнать, с рр люди редко меняются местами в рейтинге.\r\n          <br />\r\n          Эло показывает кто кого обыгрывает в последнее время, а рр показывает, кто на каком\r\n          примерно уровне по скиллу.\r\n          <br />\r\n          Сейчас рейтинг сортируется по Эло. РР выступает в качестве дополнительной инфы для\r\n          интереса, плюс используется как стартовое значение Эло.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Система Эло используется для игр 1 на 1, как она используется на пампе, где на одном\r\n          чарте играет много игроков?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: Рекорды на одном чарте делятся на несколько игр 1 на 1. Если есть 3 игрока: A, B, C; то\r\n          считается, что было 3 отдельные игры: A vs B, A vs C, B vs C.\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Как считается сумма рр?</div>\r\n        <div className=\"answer\">\r\n          A: Сначала все скоры игрока сортируются по рр. Затем в общую сумму рр добавляется 100% от\r\n          лучшего скора, 95% от второго скора, 90% от третьего, 86% от 4-го и так далее. (Формула\r\n          коэффициента - 0.95^N). Таким образом, на общую сумму рр больше всего влияют самые лучшие\r\n          результаты человека за всё время, и чтобы поднять свой уровень рр, нужно получать новые\r\n          топовые результаты (и поднимать свой скилл).\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Учитываются ли рекорды на ранке в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: Да. Как минимум потому что у нас есть много рекордов, взятых с машин бестов, и мы не\r\n          знаем наверняка, на ранке они или нет. Если у игрока в топе есть два скора - на ранке и\r\n          без ранка, используется тот, где больше очков.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Почему меня нет в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: В таблицу попадают только те, у кого есть хотя бы 20 игр 1 на 1. Первые 20 игр\r\n          используются для определения изначального рейтинга.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Почему суммарное количество оценок S-A-B не совпадает с общим количеством скоров?\r\n        </div>\r\n        <div className=\"answer\">A: Не для каждого результата известна оценка.</div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Если у меня есть несколько рекордов на А, несколько на А+, как считается суммарное\r\n          количество грейдов в таблице?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: В каждой колонке учитываются обе буквы - и треснутые, и с удержанным лайфом. То есть и\r\n          А, и А+ идут в колонку А. Точно так же для B, C, D.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Убери аккураси из таблицы!</div>\r\n        <div className=\"answer\">A: Грем, это секция для вопросов.</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import _ from 'lodash/fp';\r\n\r\nimport { fetchJson, postJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `PREFERENCES/LOADING`;\r\nconst SUCCESS = `PREFERENCES/SUCCESS`;\r\nconst ERROR = `PREFERENCES/ERROR`;\r\n// const UPDATE_LOADING = `PREFERENCES/UPDATE/LOADING`;\r\n// const UPDATE_SUCCESS = `PREFERENCES/UPDATE/SUCCESS`;\r\n// const UPDATE_ERROR = `PREFERENCES/UPDATE/ERROR`;\r\nconst CHANGE = `PREFERENCES/CHANGE`;\r\n\r\nconst defaultPreferences = {\r\n  playersHiddenStatus: {},\r\n};\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: defaultPreferences,\r\n  error: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: defaultPreferences,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: _.merge(defaultPreferences, action.data),\r\n      };\r\n    case CHANGE:\r\n      return {\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchPreferences = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/profile/preferences` }));\r\n      dispatch({ type: SUCCESS, data: data.preferences });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchUserPreferences = (id) => {\r\n  return async (dispatch) => {\r\n    const data = await dispatch(fetchJson({ url: `${HOST}/player/${id}/preferences` }));\r\n    return data;\r\n  };\r\n};\r\n\r\nexport const updatePreferences = (preferences) => {\r\n  return async (dispatch) => {\r\n    // dispatch({ type: LOADING });\r\n    dispatch({ type: CHANGE, data: preferences });\r\n    try {\r\n      await dispatch(\r\n        postJson({\r\n          url: `${HOST}/profile/preferences`,\r\n          body: { preferences },\r\n        })\r\n      );\r\n      // dispatch({ type: SUCCESS, data: data.preferences });\r\n      // return data.preferences;\r\n    } catch (error) {\r\n      // dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle } from 'react-icons/fa';\r\nimport { Link, Route, withRouter } from 'react-router-dom';\r\nimport { createSelector } from 'reselect';\r\nimport _ from 'lodash/fp';\r\n\r\n// styles\r\nimport './ranking.scss';\r\n\r\n// components\r\nimport RankingList from './RankingList';\r\nimport RankingFaq from './RankingFaq';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\nimport { updatePreferences } from 'reducers/preferences';\r\n\r\n// utils\r\n\r\n// code\r\nconst rankingSelector = createSelector(\r\n  (state) => state.results.profiles,\r\n  // _.flow(_.values, _.orderBy(['pp.pp'], ['desc']))\r\n  _.flow(_.values, _.orderBy(['ratingRaw'], ['desc']))\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    preferences: state.preferences.data,\r\n    ranking: rankingSelector(state),\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading:\r\n      state.results.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  updatePreferences,\r\n};\r\n\r\nclass Ranking extends Component {\r\n  static propTypes = {\r\n    ranking: toBe.array,\r\n    error: toBe.object,\r\n    preferences: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n    updatePreferences: toBe.func.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    ranking: [],\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, ranking, error, preferences, updatePreferences } = this.props;\r\n\r\n    return (\r\n      <div className=\"ranking-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.path}\r\n              render={() => (\r\n                <>\r\n                  <Link to={routes.ranking.faq.path}>\r\n                    <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n                      <FaQuestionCircle /> faq\r\n                    </button>\r\n                  </Link>\r\n                  <button\r\n                    disabled={isLoading}\r\n                    className=\"btn btn-sm btn-dark btn-icon\"\r\n                    onClick={this.onRefresh}\r\n                  >\r\n                    <FaSearch /> обновить\r\n                  </button>\r\n                </>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.faq.path}\r\n              render={() => (\r\n                <Link to={routes.ranking.path}>\r\n                  <button className=\"btn btn-sm btn-dark btn-icon\">назад</button>\r\n                </Link>\r\n              )}\r\n            />\r\n          </div>\r\n          <Route\r\n            exact\r\n            path={routes.ranking.path}\r\n            render={() => (\r\n              <RankingList\r\n                ranking={ranking}\r\n                isLoading={isLoading}\r\n                preferences={preferences}\r\n                updatePreferences={updatePreferences}\r\n              />\r\n            )}\r\n          />\r\n          <Route exact path={routes.ranking.faq.path} component={RankingFaq} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Ranking));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\nimport { FaPlay } from 'react-icons/fa';\r\nimport { MdExpandMore } from 'react-icons/md';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { parseDate } from 'utils/date';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport './most-played.scss';\r\n\r\nexport default connect(\r\n  state => ({ charts: state.results.sharedCharts }),\r\n  { fetchJson }\r\n)(({ playerId, charts, fetchJson }) => {\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [limit, setLimit] = useState(10);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchJson({\r\n      url: `${HOST}/player/${playerId}/mostPlayed?limit=${limit}`,\r\n    })\r\n      .then(result => {\r\n        setLoading(false);\r\n        if (result.success) {\r\n          setData(result.data);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [playerId, limit, fetchJson]);\r\n\r\n  return (\r\n    <div className=\"most-played\">\r\n      {isLoading && <Loader />}\r\n      {data.map(item => {\r\n        const chart = charts[item.shared_chart];\r\n        return (\r\n          <div className=\"chart\" key={item.shared_chart}>\r\n            <div\r\n              className={classNames('chart-name', {\r\n                single: chart.chartType === 'S',\r\n                singlep: chart.chartType === 'SP',\r\n                doublep: chart.chartType === 'DP',\r\n                double: chart.chartType === 'D',\r\n                coop: chart.chartType === 'COOP',\r\n              })}\r\n            >\r\n              <span className=\"chart-letter\">{chart.chartType}</span>\r\n              <span className=\"chart-number\">{chart.chartLevel}</span>\r\n            </div>\r\n            <div className=\"song-name\">{chart.song}</div>\r\n            <div className=\"date\">\r\n              {item.latestDate ? getTimeAgo(parseDate(item.latestDate)) : null}\r\n            </div>\r\n            <div className=\"playcount\">\r\n              <FaPlay />\r\n              <span>{item.count}</span>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      {limit === _.size(data) && (\r\n        <button\r\n          className=\"show-more btn btn-sm btn-dark btn-icon\"\r\n          onClick={() => setLimit(limit + 10)}\r\n        >\r\n          <MdExpandMore /> больше\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\n\r\nimport { ranks, getRankImg } from 'utils/exp';\r\n\r\nexport default function ExpFaq() {\r\n  return (\r\n    <div className=\"faq-exp\">\r\n      <div className=\"faq-header\">\r\n        <strong>Опыт</strong> игрока основывается на количестве сыгранных песен и чартов.\r\n        <br />\r\n        Чем выше уровень чарта и чем лучше оценка на чарте, тем больше опыта он даёт.\r\n        <br />\r\n        Повторные попытки на тех же чартах не дают больше опыта. Чтобы поднимать свой уровень, играй\r\n        новые треки и чарты.\r\n      </div>\r\n      <div className=\"faq-header\">Список уровней и необходимый опыт для их получения:</div>\r\n      <div className=\"ranks-list\">\r\n        {ranks.map(rank => (\r\n          <div key={rank.threshold} className=\"rank\">\r\n            <div className=\"exp-rank\">{getRankImg(rank)}</div>\r\n            <div className=\"threshold\">{rank.threshold}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const SET_FILTER = `PROFILES/SET_FILTER`;\r\nconst RESET_FILTER = `PROFILES/RESET_FILTER`;\r\n\r\nexport const defaultFilter = {};\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  filter: defaultFilter,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setProfilesFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\n\r\nexport const resetProfilesFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n","import _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport moment from 'moment';\r\n\r\nconst cutRange = (array, range) => {\r\n  const startIndex = _.findIndex(item => item.date > range[0], array);\r\n  const endIndex = _.findLastIndex(item => item.date < range[1], array);\r\n  let firstElement =\r\n    startIndex > 0 ? array[startIndex - 1] : startIndex === 0 ? array[startIndex] : _.last(array);\r\n  let lastElement = endIndex > -1 ? array[endIndex] : _.first(array);\r\n  firstElement = { ...firstElement, date: range[0] };\r\n  lastElement = { ...lastElement, date: range[1] };\r\n  const middleElements =\r\n    startIndex > -1 && endIndex > -1 ? array.slice(startIndex, endIndex + 1) : [];\r\n\r\n  return [firstElement, ...middleElements, lastElement];\r\n};\r\n\r\nconst defaultGradesDistribution = {\r\n  SSS: 0,\r\n  SS: 0,\r\n  S: 0,\r\n  'A+': 0,\r\n  A: 0,\r\n  B: 0,\r\n  C: 0,\r\n  D: 0,\r\n  F: 0,\r\n};\r\nconst defaultGradesWithLevelsDistribution = _.flow(\r\n  _.flatMap(type => {\r\n    return _.flow(\r\n      _.toPairs,\r\n      _.map(([grade, value]) => [`${type}-${grade}`, value])\r\n    )(defaultGradesDistribution);\r\n  }),\r\n  _.fromPairs\r\n)(['S', 'D']);\r\n\r\nexport const profileSelectorCreator = idParamName =>\r\n  createSelector(\r\n    (state, props) => _.toInteger(props.match.params[idParamName]),\r\n    state => state.results.isLoading || state.results.isLoadingRanking,\r\n    state => state.results.profiles,\r\n    state => state.profiles.filter,\r\n    state => state.tracklist.data,\r\n    (id, isLoading, profiles, filter, tracklist) => {\r\n      const profile = profiles[id];\r\n      if (_.isEmpty(profile) || isLoading) {\r\n        return null;\r\n      }\r\n      const levelsDistribution = _.flow(\r\n        _.get('resultsByLevel'),\r\n        _.toPairs,\r\n        _.map(([x, y]) => ({\r\n          x: _.toInteger(x),\r\n          S:\r\n            (_.size(\r\n              _.filter(res => res.chart.chartType === 'S' || res.chart.chartType === 'SP', y)\r\n            ) /\r\n              tracklist.singlesLevels[x]) *\r\n            100,\r\n          D:\r\n            (-_.size(\r\n              _.filter(res => res.chart.chartType === 'D' || res.chart.chartType === 'DP', y)\r\n            ) /\r\n              tracklist.doublesLevels[x]) *\r\n            100,\r\n        }))\r\n      )(profile);\r\n      const gradesData = _.flow(\r\n        _.get('resultsByLevel'),\r\n        _.toPairs,\r\n        _.map(\r\n          _.update('[1].result.grade', grade =>\r\n            grade && grade.includes('+') && grade !== 'A+' ? grade.replace('+', '') : grade\r\n          )\r\n        )\r\n      )(profile);\r\n      const gradesDistribution = _.flow(\r\n        _.map(([x, y]) => ({\r\n          x: _.toInteger(x),\r\n          ...defaultGradesDistribution,\r\n          ..._.omit('?', _.mapValues(_.size, _.groupBy('result.grade', y))),\r\n        })),\r\n        _.map(item => {\r\n          const grades = _.pick(Object.keys(defaultGradesDistribution), item);\r\n          const sum = _.sum(_.values(grades));\r\n          return {\r\n            ...item,\r\n            gradesValues: grades,\r\n            ...(sum === 0 ? grades : _.mapValues(value => (100 * value) / sum, grades)),\r\n          };\r\n        })\r\n      )(gradesData);\r\n      const gradesAndLevelsDistribution = _.flow(\r\n        _.map(([x, y]) => {\r\n          const groupedResults = _.groupBy('result.grade', y);\r\n          const counts = _.omit(\r\n            '?',\r\n            _.mapValues(\r\n              _.countBy(res => {\r\n                return res.chart.chartType === 'S' || res.chart.chartType === 'SP'\r\n                  ? 'S'\r\n                  : res.chart.chartType === 'D' || res.chart.chartType === 'DP'\r\n                  ? 'D'\r\n                  : 'Other';\r\n              }),\r\n              groupedResults\r\n            )\r\n          );\r\n          const reduced = _.reduce(\r\n            (acc, [grade, levelsData]) => {\r\n              const accData = _.flow(\r\n                _.toPairs,\r\n                _.map(([type, count]) => [\r\n                  `${type}-${grade}`,\r\n                  type === 'S'\r\n                    ? (count / tracklist.singlesLevels[x]) * 100\r\n                    : (-count / tracklist.doublesLevels[x]) * 100,\r\n                ]),\r\n                _.fromPairs\r\n              )(levelsData);\r\n              return { ...acc, ...accData };\r\n            },\r\n            {},\r\n            _.toPairs(counts)\r\n          );\r\n\r\n          return {\r\n            x: _.toInteger(x),\r\n            ...defaultGradesWithLevelsDistribution,\r\n            ...reduced,\r\n          };\r\n        })\r\n      )(gradesData);\r\n\r\n      const lastTickRating = _.last(profile.ratingHistory).date;\r\n      const lastTickRanking = _.last(profile.rankingHistory).date;\r\n      const lastTick = lastTickRating > lastTickRanking ? lastTickRating : lastTickRanking; // End graph at either point\r\n      const firstTick = _.first(profile.ratingHistory).date; // Start graph from the first battle of this player\r\n      const lastDay = moment(lastTick).endOf('day');\r\n      const firstDay = moment(firstTick).startOf('day');\r\n      const minMaxRange = [firstDay / 1000 / 60 / 60 / 24, lastDay / 1000 / 60 / 60 / 24];\r\n\r\n      const filterRange = filter.dayRange || [\r\n        Math.max(minMaxRange[0], minMaxRange[1] - 30),\r\n        minMaxRange[1],\r\n      ];\r\n      const dayRangeMs = [\r\n        +moment(filterRange[0] * 1000 * 60 * 60 * 24).startOf('day'),\r\n        +moment(filterRange[1] * 1000 * 60 * 60 * 24).endOf('day'),\r\n      ];\r\n      const placesChanges = cutRange(profile.rankingHistory, dayRangeMs);\r\n      const ratingChanges = cutRange(profile.ratingHistory, dayRangeMs);\r\n\r\n      const rank = 1 + _.findIndex({ id }, _.orderBy(['ratingRaw'], ['desc'], _.values(profiles)));\r\n\r\n      return {\r\n        ...profile,\r\n        rank,\r\n        minMaxRange,\r\n        filterRange,\r\n        levelsDistribution,\r\n        gradesDistribution,\r\n        gradesAndLevelsDistribution,\r\n        placesChanges,\r\n        ratingChanges,\r\n      };\r\n    }\r\n  );\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle, FaTimes, FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport ReactModal from 'react-modal';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport Select from 'react-select';\r\nimport moment from 'moment';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as RechartsTooltip,\r\n  ReferenceLine,\r\n  CartesianGrid,\r\n  Line,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Label,\r\n} from 'recharts';\r\nimport _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\n\r\n// styles\r\nimport './profile.scss';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\nimport { DEBUG } from 'constants/env';\r\n\r\n// components\r\nimport Range from 'components/Shared/Range';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport MostPlayed from './MostPlayed';\r\nimport ExpFaq from './ExpFaq';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\nimport { setProfilesFilter, resetProfilesFilter } from 'reducers/profiles';\r\n\r\n// utils\r\nimport { profileSelectorCreator } from 'utils/profiles';\r\nimport { parseDate } from 'utils/date';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { achievements } from 'utils/achievements';\r\nimport { getRankImg } from 'utils/exp';\r\n\r\n// code\r\nconst MIN_GRAPH_HEIGHT = undefined;\r\n\r\nconst profileSelector = profileSelectorCreator('id');\r\n\r\nexport const otherPlayersSelector = createSelector(\r\n  state => state.results.players,\r\n  (state, props) => _.toNumber(props.match.params.id),\r\n  (players, id) =>\r\n    _.flow(\r\n      _.toPairs,\r\n      _.map(([ind, { nickname, arcade_name, id }]) => ({\r\n        label: `${nickname} (${arcade_name})`,\r\n        value: nickname,\r\n        id: _.toNumber(id),\r\n      })),\r\n      _.remove(it => it.id === id),\r\n      _.sortBy(it => _.toLower(it.label))\r\n    )(players)\r\n);\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    profile: profileSelector(state, props),\r\n    otherPlayers: otherPlayersSelector(state, props),\r\n    tracklist: state.tracklist.data,\r\n    filter: state.profiles.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading:\r\n      state.results.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setProfilesFilter,\r\n  resetProfilesFilter,\r\n};\r\n\r\nclass Profile extends Component {\r\n  static propTypes = {\r\n    profile: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    profile: {},\r\n  };\r\n\r\n  state = {\r\n    isLevelGraphCombined: true,\r\n    showFaq: false,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetProfilesFilter();\r\n  }\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onChangeDayRange = range => {\r\n    const { filter } = this.props;\r\n    this.props.setProfilesFilter({\r\n      ...filter,\r\n      dayRange: range,\r\n    });\r\n  };\r\n\r\n  onShowFaq = () => {\r\n    this.setState({ showFaq: true });\r\n  };\r\n\r\n  onHideFaq = () => {\r\n    this.setState({ showFaq: false });\r\n  };\r\n\r\n  renderRankingHistory() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={profile.ratingChanges} margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={value => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={['dataMin - 100', 'dataMax + 100']}\r\n            tickFormatter={Math.round}\r\n            width={40}\r\n          />\r\n          <ReferenceLine y={1000} stroke=\"white\" />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Rating: {Math.round(payload[0].value)}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderPlaceHistory() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={profile.placesChanges} margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={value => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={[1, dataMax => (dataMax < 3 ? dataMax + 2 : dataMax + 1)]}\r\n            interval={0}\r\n            reversed\r\n            width={40}\r\n          />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Place: #{payload[0].value}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGrades() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <BarChart\r\n          data={profile.gradesDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {_.filter(item => item.value > 0, payload).map(item => (\r\n                    <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                      {item.name}: {payload[0].payload.gradesValues[item.name]}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            domain={[0, 100]}\r\n            ticks={[0, 50, 100]}\r\n            tickFormatter={x => `${Math.round(x)}%`}\r\n            width={40}\r\n          />\r\n          <Legend />\r\n          <Bar dataKey=\"SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"F\" fill=\"#774949\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradesWithLevels() {\r\n    const { profile, tracklist } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={0.74}>\r\n        <BarChart\r\n          data={profile.gradesAndLevelsDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n          stackOffset=\"sign\"\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              const doubleItems = _.filter(\r\n                item => item.value !== 0 && item.dataKey.startsWith('D'),\r\n                payload\r\n              );\r\n              const singleItems = _.filter(\r\n                item => item.value !== 0 && item.dataKey.startsWith('S'),\r\n                payload\r\n              );\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {!!singleItems.length && (\r\n                    <>\r\n                      <div>Single:</div>\r\n                      {singleItems.map(item => (\r\n                        <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                          {item.name.slice(2)}: {Math.round(Math.abs(item.value))}% (\r\n                          {Math.round((tracklist.singlesLevels[item.payload.x] * item.value) / 100)}\r\n                          /{tracklist.singlesLevels[item.payload.x]})\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                  {!!doubleItems.length && (\r\n                    <>\r\n                      <div>Double:</div>\r\n                      {doubleItems.map(item => (\r\n                        <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                          {item.name.slice(2)}: {Math.round(Math.abs(item.value))}% (\r\n                          {Math.round(\r\n                            (tracklist.doublesLevels[item.payload.x] * -item.value) / 100\r\n                          )}\r\n                          /{tracklist.doublesLevels[item.payload.x]})\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            tickFormatter={x => `${Math.round(Math.abs(x))}%`}\r\n            width={40}\r\n            domain={[dataMin => Math.min(dataMin, -10), dataMax => Math.max(10, dataMax)]}\r\n          />\r\n          <Bar dataKey=\"S-SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Label value=\"Double\" offset={0} position=\"insideBottomLeft\" />\r\n          <Label value=\"Single\" offset={0} position=\"insideTopLeft\" />\r\n          <ReferenceLine y={0} stroke=\"#bbb\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderLevels() {\r\n    const { profile, tracklist } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <BarChart\r\n          data={profile.levelsDistribution}\r\n          stackOffset=\"sign\"\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              const totalD = tracklist.doublesLevels[payload[0].payload.x];\r\n              const totalS = tracklist.singlesLevels[payload[0].payload.x];\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {totalS > 0 && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n                      Single: {Math.abs(payload[1].value).toFixed(1)}% (\r\n                      {Math.round((payload[1].value * totalS) / 100)}/{totalS})\r\n                    </div>\r\n                  )}\r\n                  {totalD > 0 && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n                      Double: {Math.abs(payload[0].value).toFixed(1)}% (\r\n                      {Math.round((Math.abs(payload[0].value) * totalD) / 100)}/{totalD})\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            tickFormatter={x => Math.round(Math.abs(x)) + '%'}\r\n            width={40}\r\n            domain={[dataMin => Math.min(dataMin, -10), dataMax => Math.max(10, dataMax)]}\r\n          />\r\n          <RechartsTooltip />\r\n          <ReferenceLine y={0} stroke=\"#555\" />\r\n          <Legend />\r\n          <Bar dataKey=\"D\" fill=\"#169c16\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#af2928\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradeBlock(type, grade) {\r\n    const { profile } = this.props;\r\n    const obj = profile.progress[type];\r\n    const typeLetter = type === 'double' ? 'D' : 'S';\r\n    const progr = Math.floor((obj[`${grade}-bonus-level-coef`] || 0) * 100);\r\n    const minNumber = obj[`${grade}-bonus-level-min-number`];\r\n    const currentNumber = obj[`${grade}-bonus-level-achieved-number`];\r\n    const levelString = obj[`${grade}-bonus-level`]\r\n      ? `${typeLetter}${obj[`${grade}-bonus-level`]}`\r\n      : '?';\r\n    return (\r\n      <div className=\"grade-block\">\r\n        <div className=\"grade-letter\">\r\n          <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n        </div>\r\n        <div className=\"grade-level\">{levelString}</div>\r\n        <div className=\"grade-progress\">\r\n          {progr}% ({progr === 100 ? minNumber : currentNumber}/{minNumber})\r\n        </div>\r\n        <div\r\n          className={classNames('progress-background', {\r\n            complete: progr === 100,\r\n            zero: progr === 0,\r\n          })}\r\n          style={{\r\n            height: `${progr}%`,\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderAchievement(achName, achievement) {\r\n    const Icon = achievements[achName].icon;\r\n    const description = achievements[achName].description;\r\n    return (\r\n      <Tooltip\r\n        key={achName}\r\n        content={<div>{description}</div>}\r\n        tooltipClassName=\"pumpking-tooltip achievement-tooltip\"\r\n      >\r\n        <div className=\"ach-block\">\r\n          {Icon && (\r\n            <div className=\"ach-icon\">\r\n              <Icon />\r\n            </div>\r\n          )}\r\n          <div className=\"ach-name\">{achName}</div>\r\n          <div\r\n            className={classNames('progress-background', {\r\n              complete: achievement.progress === 100,\r\n              zero: achievement.progress === 0,\r\n            })}\r\n            style={{\r\n              height: `${Math.round(achievement.progress)}%`,\r\n            }}\r\n          />\r\n        </div>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  renderProfile() {\r\n    const { profile, otherPlayers, filter } = this.props;\r\n    const { isLevelGraphCombined } = this.state;\r\n    const expProgress = profile.expRankNext\r\n      ? (profile.exp - profile.expRank.threshold) /\r\n        (profile.expRankNext.threshold - profile.expRank.threshold)\r\n      : 100;\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"profile-header\">\r\n          <div className=\"profile-name text-with-header\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile.lastResultDate ? getTimeAgo(profile.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n          <div className=\"_flex-fill\"></div>\r\n          <div className=\"text-with-header -select\">\r\n            <div className=\"text-header\">сравнить с</div>\r\n            <div>\r\n              <Select\r\n                closeMenuOnSelect\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                options={otherPlayers}\r\n                onChange={value => {\r\n                  this.props.history.push(\r\n                    routes.profile.compare.getPath({ id: profile.id, compareToId: value.id })\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header _flex-row _align-center\">\r\n            <span>опыт</span>\r\n            <div className=\"_flex-fill\" />\r\n            <div onClick={this.onShowFaq} className=\"_clickable\">\r\n              <FaQuestionCircle onClick={this.onShowFaq} />\r\n            </div>\r\n            <ReactModal\r\n              ariaHideApp={false}\r\n              className=\"Modal faq-modal\"\r\n              overlayClassName=\"Overlay\"\r\n              isOpen={this.state.showFaq}\r\n              onRequestClose={this.onHideFaq}\r\n            >\r\n              <div className=\"close-btn\" onClick={this.onHideFaq}>\r\n                <FaTimes />\r\n              </div>{' '}\r\n              <ExpFaq />\r\n            </ReactModal>\r\n          </div>\r\n          <div className=\"exp-range\">\r\n            <div className=\"rank exp-rank\">\r\n              {getRankImg(profile.expRank)}\r\n              {profile.expRank && <div>{profile.expRank.threshold}</div>}\r\n            </div>\r\n            <div className=\"exp-line-with-label\">\r\n              <div className=\"exp-label\">\r\n                {profile.expRankNext ? (\r\n                  <>\r\n                    <span className=\"taken-num\">\r\n                      {Math.round(profile.exp - profile.expRank.threshold)}\r\n                    </span>\r\n                    {` / ${profile.expRankNext.threshold - profile.expRank.threshold}`}\r\n                  </>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"exp-line\">\r\n                <div className=\"taken\" style={{ width: Math.floor(100 * expProgress) + '%' }}></div>\r\n                <div\r\n                  className=\"rest\"\r\n                  style={{ width: 100 - Math.ceil(100 * expProgress) + '%' }}\r\n                ></div>\r\n              </div>\r\n              <div className=\"exp-label\">\r\n                total: <span className=\"taken-num\">{Math.round(profile.exp)}</span>\r\n              </div>\r\n            </div>\r\n            {profile.expRankNext && (\r\n              <div className=\"rank exp-rank\">\r\n                {getRankImg(profile.expRankNext)}\r\n                {profile.expRankNext && <div>{profile.expRankNext.threshold}</div>}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              {!isLevelGraphCombined ? (\r\n                <>\r\n                  <div className=\"profile-section-2\">\r\n                    <div className=\"profile-sm-section-header flex\">\r\n                      <span>уровни</span>\r\n                      <div className=\"toggle-holder\">\r\n                        <Toggle\r\n                          className=\"combine-toggle\"\r\n                          checked={isLevelGraphCombined}\r\n                          onChange={() =>\r\n                            this.setState(state => ({\r\n                              isLevelGraphCombined: !state.isLevelGraphCombined,\r\n                            }))\r\n                          }\r\n                        >\r\n                          объединить графики\r\n                        </Toggle>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"chart-container\">{this.renderLevels()}</div>\r\n                  </div>\r\n                  <div className=\"profile-section-2\">\r\n                    <div className=\"profile-sm-section-header\">\r\n                      <span>оценки</span>\r\n                    </div>\r\n                    <div className=\"chart-container\">{this.renderGrades()}</div>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div className=\"profile-section-2\">\r\n                  <div className=\"profile-sm-section-header flex\">\r\n                    <span>оценки</span>\r\n                    <div className=\"toggle-holder\">\r\n                      <Toggle\r\n                        className=\"combine-toggle\"\r\n                        checked={isLevelGraphCombined}\r\n                        onChange={() =>\r\n                          this.setState(state => ({\r\n                            isLevelGraphCombined: !state.isLevelGraphCombined,\r\n                          }))\r\n                        }\r\n                      >\r\n                        объединить графики\r\n                      </Toggle>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"chart-container single-double-labels\">\r\n                    {this.renderGradesWithLevels()}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>эло</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderRankingHistory()}</div>\r\n              </div>\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>место в топе</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderPlaceHistory()}</div>\r\n              </div>\r\n            </div>\r\n            {(() => {\r\n              const currentRange = filter.dayRange || profile.filterRange;\r\n              const dateL = moment(currentRange[0] * 1000 * 60 * 60 * 24).format('L');\r\n              const dateR = moment(currentRange[1] * 1000 * 60 * 60 * 24).format('L');\r\n              const l1 = Math.max(currentRange[0] - 1, profile.minMaxRange[0]);\r\n              const l2 = Math.min(currentRange[0] + 1, currentRange[1]);\r\n              const r1 = Math.max(currentRange[1] - 1, currentRange[0]);\r\n              const r2 = Math.min(currentRange[1] + 1, profile.minMaxRange[1]);\r\n              return (\r\n                <div className=\"range-container\">\r\n                  <Range\r\n                    range={currentRange}\r\n                    min={profile.minMaxRange[0]}\r\n                    max={profile.minMaxRange[1]}\r\n                    onChange={this.onChangeDayRange}\r\n                  />\r\n                  <div className=\"range-controls _flex-row\">\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l1, currentRange[1]])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateL}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l2, currentRange[1]])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                    <div className=\"_flex-fill\"></div>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r1])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateR}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r2])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })()}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section progress-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>достижения по уровням</span>\r\n          </div>\r\n          <div className=\"progress-blocks-single-double\">\r\n            <div className=\"progress-block\">\r\n              <div className=\"achievements-grades single\">\r\n                {this.renderGradeBlock('single', 'A')}\r\n                {this.renderGradeBlock('single', 'A+')}\r\n                {this.renderGradeBlock('single', 'S')}\r\n                {this.renderGradeBlock('single', 'SS')}\r\n              </div>\r\n            </div>\r\n            <div className=\"progress-block\">\r\n              <div className=\"achievements-grades double\">\r\n                {this.renderGradeBlock('double', 'A')}\r\n                {this.renderGradeBlock('double', 'A+')}\r\n                {this.renderGradeBlock('double', 'S')}\r\n                {this.renderGradeBlock('double', 'SS')}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"bonus-faq\">\r\n            * для получения ачивки нужно сыграть около 10% всех чартов данного левела на нужный\r\n            грейд\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>достижения</span>\r\n          </div>\r\n          <div className=\"achievements\">\r\n            {_.keys(profile.achievements).map(achName =>\r\n              this.renderAchievement(achName, profile.achievements[achName])\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>часто играемые чарты</span>\r\n          </div>\r\n          <MostPlayed playerId={profile.id} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, profile, error } = this.props;\r\n    DEBUG && console.log('profile:', profile);\r\n    return (\r\n      <div className=\"profile-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"btn btn-sm btn-dark btn-icon\"\r\n              onClick={this.onRefresh}\r\n            >\r\n              <FaSearch /> обновить\r\n            </button>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!isLoading && _.isEmpty(profile) && <div className=\"profile\">Profile not found</div>}\r\n          {!isLoading && !_.isEmpty(profile) && this.renderProfile()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Profile));\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport Select from 'react-select';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as RechartsTooltip,\r\n  ReferenceLine,\r\n  CartesianGrid,\r\n  Line,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\nimport _ from 'lodash/fp';\r\nimport memoize from 'lru-memoize';\r\n\r\n// styles\r\nimport './profile-compare.scss';\r\n\r\n// constants\r\nimport { DEBUG } from 'constants/env';\r\nimport { routes } from 'constants/routes';\r\n\r\n// components\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Range from 'components/Shared/Range';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\nimport { setProfilesFilter, resetProfilesFilter } from 'reducers/profiles';\r\n\r\n// utils\r\nimport { profileSelectorCreator } from 'utils/profiles';\r\nimport { parseDate } from 'utils/date';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { otherPlayersSelector } from 'components/Profile/Profile';\r\n\r\n// code\r\nconst BARS_MODES = {\r\n  SINGLE_TWO: 'SINGLE_TWO',\r\n  SINGLE_FIVE: 'SINGLE_FIVE',\r\n  DOUBLE_TWO: 'DOUBLE_TWO',\r\n  DOUBLE_FIVE: 'DOUBLE_FIVE',\r\n  BOTH_TWO: 'BOTH_TWO',\r\n  BOTH_FIVE: 'BOTH_FIVE',\r\n};\r\nconst getCompareBars = (mode) => {\r\n  switch (mode) {\r\n    case BARS_MODES.SINGLE_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"single.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"single.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.SINGLE_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"single.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar\r\n          key=\"2\"\r\n          dataKey=\"single.p2notPlayed\"\r\n          fill=\"#899db3\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"3\"\r\n          dataKey=\"single.notPlayed\"\r\n          fill=\"#70707060\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"4\"\r\n          dataKey=\"single.p1notPlayed\"\r\n          fill=\"#bfa988\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar key=\"5\" dataKey=\"single.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    case BARS_MODES.DOUBLE_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"double.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"double.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.DOUBLE_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"double.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar\r\n          key=\"2\"\r\n          dataKey=\"double.p2notPlayed\"\r\n          fill=\"#899db3\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"3\"\r\n          dataKey=\"double.notPlayed\"\r\n          fill=\"#70707060\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"4\"\r\n          dataKey=\"double.p1notPlayed\"\r\n          fill=\"#bfa988\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar key=\"5\" dataKey=\"double.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    case BARS_MODES.BOTH_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"all.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"all.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.BOTH_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"all.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"2\" dataKey=\"all.p2notPlayed\" fill=\"#899db3\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"3\" dataKey=\"all.notPlayed\" fill=\"#70707060\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"4\" dataKey=\"all.p1notPlayed\" fill=\"#bfa988\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"5\" dataKey=\"all.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst MIN_GRAPH_HEIGHT = undefined;\r\n\r\nconst profile1Selector = profileSelectorCreator('id');\r\nconst profile2Selector = profileSelectorCreator('compareToId');\r\n\r\nconst getCombinedData = memoize()((p1, p2, tracklist) => {\r\n  if (!p1 || !p2) {\r\n    return {};\r\n  }\r\n  let rc1 = p1.ratingChanges[0].rating;\r\n  let rc2 = p2.ratingChanges[0].rating;\r\n  const allRC = _.flow(\r\n    _.sortBy('date'),\r\n    _.map((item) => {\r\n      if (item.rating) {\r\n        rc1 = item.rating;\r\n      }\r\n      if (item.rating2) {\r\n        rc2 = item.rating2;\r\n      }\r\n      return {\r\n        rating1: rc1,\r\n        rating2: rc2,\r\n        date: item.date,\r\n      };\r\n    }),\r\n    _.sortedUniqBy('date')\r\n  )([\r\n    ...p1.ratingChanges,\r\n    ...p2.ratingChanges.map((it) => ({ date: it.date, rating2: it.rating })),\r\n  ]);\r\n\r\n  rc1 = p1.placesChanges[0].place;\r\n  rc2 = p2.placesChanges[0].place;\r\n  const allPC = _.flow(\r\n    _.sortBy('date'),\r\n    _.map((item) => {\r\n      if (item.place) {\r\n        rc1 = item.place;\r\n      }\r\n      if (item.place2) {\r\n        rc2 = item.place2;\r\n      }\r\n      return {\r\n        place1: rc1,\r\n        place2: rc2,\r\n        date: item.date,\r\n      };\r\n    })\r\n  )([...p1.placesChanges, ...p2.placesChanges.map((it) => ({ date: it.date, place2: it.place }))]);\r\n\r\n  const perLevelComparison = _.fromPairs(Array.from({ length: 28 }).map((x, i) => [i + 1, {}]));\r\n  _.keys(perLevelComparison).forEach((level) => {\r\n    const charts = _.flow(\r\n      _.map('chart'),\r\n      _.uniqBy('sharedChartId')\r\n    )([...p1.resultsByLevel[level], ...p2.resultsByLevel[level]]);\r\n    const data = {\r\n      x: level,\r\n      all: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        twoBars: {},\r\n      },\r\n      double: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        twoBars: {},\r\n      },\r\n      single: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        twoBars: {},\r\n      },\r\n    };\r\n    charts.forEach((chart) => {\r\n      const p1index = chart.results.findIndex((r) => r.playerId === p1.id);\r\n      const p2index = chart.results.findIndex((r) => r.playerId === p2.id);\r\n      const perType = chart.chartType.startsWith('D') ? data.double : data.single;\r\n      if (p1index < 0 && p2index < 0) {\r\n        console.log('wtf?');\r\n      } else if (p1index < 0) {\r\n        data.all.p1notPlayed++;\r\n        perType.p1notPlayed++;\r\n      } else if (p2index < 0) {\r\n        data.all.p2notPlayed++;\r\n        perType.p2notPlayed++;\r\n      } else if (p1index < p2index) {\r\n        data.all.p1win++;\r\n        perType.p1win++;\r\n      } else if (p2index < p1index) {\r\n        data.all.p2win++;\r\n        perType.p2win++;\r\n      }\r\n    });\r\n\r\n    const normalizeTwo = (dataObj) => {\r\n      const totalPlayed = dataObj.p1win + dataObj.p2win || 1; // in case of divide by 0\r\n      dataObj.twoBars.p1win = dataObj.p1win / totalPlayed;\r\n      dataObj.twoBars.p2win = dataObj.p2win / totalPlayed;\r\n    };\r\n    normalizeTwo(data.all);\r\n    normalizeTwo(data.single);\r\n    normalizeTwo(data.double);\r\n\r\n    const normalizeFive = (dataObj, total) => {\r\n      dataObj.p1win = dataObj.p1win / total;\r\n      dataObj.p1notPlayed = dataObj.p1notPlayed / total;\r\n      dataObj.p2win = dataObj.p2win / total;\r\n      dataObj.p2notPlayed = dataObj.p2notPlayed / total;\r\n      dataObj.notPlayed =\r\n        1 - dataObj.p1win - dataObj.p1notPlayed - dataObj.p2win - dataObj.p2notPlayed;\r\n    };\r\n    normalizeFive(data.all, tracklist.chartLevels[level]);\r\n    normalizeFive(data.double, tracklist.doublesLevels[level]);\r\n    normalizeFive(data.single, tracklist.singlesLevels[level]);\r\n\r\n    perLevelComparison[level] = data;\r\n  });\r\n\r\n  return {\r\n    ratingChanges: allRC,\r\n    placesChanges: allPC,\r\n    perLevelComparison: _.values(perLevelComparison),\r\n  };\r\n});\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const profile1 = profile1Selector(state, props);\r\n  const profile2 = profile2Selector(state, props);\r\n  return {\r\n    profile: profile1,\r\n    profile2,\r\n    otherPlayers: otherPlayersSelector(state, props),\r\n    combinedData: getCombinedData(profile1, profile2, state.tracklist.data),\r\n    tracklist: state.tracklist.data,\r\n    filter: state.profiles.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading:\r\n      state.results.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setProfilesFilter,\r\n  resetProfilesFilter,\r\n};\r\n\r\nclass ProfileCompare extends Component {\r\n  static propTypes = {\r\n    profile: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    profile: {},\r\n    profile2: {},\r\n    combinedData: {},\r\n  };\r\n\r\n  state = {\r\n    isLevelGraphCombined: true,\r\n    compareBarsMode: BARS_MODES.BOTH_TWO,\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onChangeDayRange = (range) => {\r\n    const { filter } = this.props;\r\n    this.props.setProfilesFilter({\r\n      ...filter,\r\n      dayRange: range,\r\n    });\r\n  };\r\n\r\n  rhMargin = { top: 5, bottom: 5, right: 5, left: 0 };\r\n  rhXDomain = ['dataMin', 'dataMax'];\r\n  rhYDomain = ['dataMin - 100', 'dataMax + 100'];\r\n  rhXTickFormatter = (value) => parseDate(value).toLocaleDateString();\r\n  rhTooltip = ({ active, payload, label }) => {\r\n    const { profile, profile2 } = this.props;\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n    if (!payload || !payload[0]) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"history-tooltip\">\r\n        <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n        {payload[1] && (\r\n          <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n            {p1Name}: {Math.round(payload[1].value)}\r\n          </div>\r\n        )}\r\n        {payload[0] && (\r\n          <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n            {p2Name}: {Math.round(payload[0].value)}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderRankingHistory() {\r\n    const { combinedData } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={combinedData.ratingChanges} margin={this.rhMargin}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={this.rhXDomain}\r\n            tickFormatter={this.rhXTickFormatter}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={this.rhYDomain}\r\n            tickFormatter={Math.round}\r\n            width={40}\r\n          />\r\n          <ReferenceLine y={1000} stroke=\"white\" />\r\n          <RechartsTooltip isAnimationActive={false} content={this.rhTooltip} />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating2\"\r\n            stroke=\"#ffd388\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating1\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderPlaceHistory() {\r\n    const { combinedData, profile, profile2 } = this.props;\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart\r\n          data={combinedData.placesChanges}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={(value) => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={[1, (dataMax) => (dataMax < 3 ? dataMax + 2 : dataMax + 1)]}\r\n            interval={0}\r\n            reversed\r\n            width={40}\r\n          />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload[1] && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n                      {p1Name}: #{payload[1].value}\r\n                    </div>\r\n                  )}\r\n                  {payload[0] && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n                      {p2Name}: #{payload[0].value}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place2\"\r\n            stroke=\"#ffd388\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place1\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  plcMargin = { top: 5, bottom: 5, right: 5, left: 0 };\r\n  plcTooltip = ({ active, payload, label }) => {\r\n    const { profile, profile2 } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n    const isTwo = [BARS_MODES.SINGLE_TWO, BARS_MODES.DOUBLE_TWO, BARS_MODES.BOTH_TWO].includes(\r\n      compareBarsMode\r\n    );\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n\r\n    if (!payload || !payload[0]) {\r\n      return null;\r\n    }\r\n    const renderLegendItem = (item, label) => (\r\n      <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n        {label}: {Math.round(_.get(item.dataKey, item.payload) * 100)}%\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"history-tooltip\">\r\n        <div>Level: {payload[0].payload.x}</div>\r\n        {renderLegendItem(payload[0], `${p1Name} wins`)}\r\n        {!isTwo && renderLegendItem(payload[1], `${p2Name} has no score`)}\r\n        {!isTwo && renderLegendItem(payload[2], `Both have no score`)}\r\n        {!isTwo && renderLegendItem(payload[3], `${p1Name} has no score`)}\r\n        {renderLegendItem(isTwo ? payload[1] : payload[4], `${p2Name} wins`)}\r\n      </div>\r\n    );\r\n  };\r\n  plcXDomain = [0, 1];\r\n  plcXTicks = [0, 0.5, 1];\r\n  plcXFormatter = (x) => `${Math.round(x * 100)}%`;\r\n\r\n  renderPerLevelComparison() {\r\n    const { combinedData } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" aspect={0.7}>\r\n        <BarChart\r\n          layout=\"vertical\"\r\n          data={[...combinedData.perLevelComparison]}\r\n          margin={this.plcMargin}\r\n        >\r\n          <RechartsTooltip isAnimationActive={false} content={this.plcTooltip} />\r\n          <YAxis reversed dataKey=\"x\" type=\"category\" width={23} />\r\n          <XAxis\r\n            type=\"number\"\r\n            domain={this.plcXDomain}\r\n            ticks={this.plcXTicks}\r\n            tickFormatter={this.plcXFormatter}\r\n          />\r\n          <ReferenceLine x={0.5} stroke=\"#666\" />\r\n          {getCompareBars(compareBarsMode)}\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderProfile() {\r\n    const { profile, profile2, filter, otherPlayers } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"profile-header\">\r\n          <div className=\"profile-name text-with-header blue\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile.lastResultDate ? getTimeAgo(profile.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n          <div className=\"_flex-fill\"></div>\r\n          <div className=\"text-with-header -select\">\r\n            <div className=\"text-header\">сравнить с</div>\r\n            <div>\r\n              <Select\r\n                closeMenuOnSelect\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                options={otherPlayers}\r\n                onChange={(value) => {\r\n                  this.props.history.push(\r\n                    routes.profile.compare.getPath({ id: profile.id, compareToId: value.id })\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-header right-align\">\r\n          <div className=\"profile-name text-with-header orange\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile2.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile2.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile2.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile2.lastResultDate ? getTimeAgo(profile2.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header flex\">\r\n                  <span>победы по уровням</span>\r\n                </div>\r\n                <div className=\"profile-sm-section-header flex\">\r\n                  {(() => {\r\n                    const isTwo = [\r\n                      BARS_MODES.SINGLE_TWO,\r\n                      BARS_MODES.DOUBLE_TWO,\r\n                      BARS_MODES.BOTH_TWO,\r\n                    ].includes(compareBarsMode);\r\n                    return (\r\n                      <div className=\"toggle-holder\">\r\n                        <Toggle\r\n                          className=\"combine-toggle\"\r\n                          checked={!isTwo}\r\n                          onChange={() =>\r\n                            this.setState((state) => ({\r\n                              compareBarsMode: {\r\n                                [BARS_MODES.SINGLE_TWO]: BARS_MODES.SINGLE_FIVE,\r\n                                [BARS_MODES.DOUBLE_TWO]: BARS_MODES.DOUBLE_FIVE,\r\n                                [BARS_MODES.BOTH_TWO]: BARS_MODES.BOTH_FIVE,\r\n                                [BARS_MODES.SINGLE_FIVE]: BARS_MODES.SINGLE_TWO,\r\n                                [BARS_MODES.DOUBLE_FIVE]: BARS_MODES.DOUBLE_TWO,\r\n                                [BARS_MODES.BOTH_FIVE]: BARS_MODES.BOTH_TWO,\r\n                              }[state.compareBarsMode],\r\n                            }))\r\n                          }\r\n                        >\r\n                          подробно\r\n                        </Toggle>\r\n                        <div className=\"tabs-holder\">\r\n                          <ToggleButton\r\n                            text=\"все\"\r\n                            active={[BARS_MODES.BOTH_TWO, BARS_MODES.BOTH_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={() => {\r\n                              this.setState((state) => ({\r\n                                compareBarsMode: isTwo ? BARS_MODES.BOTH_TWO : BARS_MODES.BOTH_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                          <ToggleButton\r\n                            text=\"синглы\"\r\n                            active={[BARS_MODES.SINGLE_TWO, BARS_MODES.SINGLE_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={(active) => {\r\n                              this.setState((state) => ({\r\n                                compareBarsMode: isTwo\r\n                                  ? BARS_MODES.SINGLE_TWO\r\n                                  : BARS_MODES.SINGLE_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                          <ToggleButton\r\n                            text=\"даблы\"\r\n                            active={[BARS_MODES.DOUBLE_TWO, BARS_MODES.DOUBLE_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={(active) => {\r\n                              this.setState((state) => ({\r\n                                compareBarsMode: isTwo\r\n                                  ? BARS_MODES.DOUBLE_TWO\r\n                                  : BARS_MODES.DOUBLE_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })()}\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderPerLevelComparison()}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>эло</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderRankingHistory()}</div>\r\n              </div>\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>место в топе</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderPlaceHistory()}</div>\r\n              </div>\r\n            </div>\r\n            {(() => {\r\n              const currentRange = filter.dayRange || profile.filterRange;\r\n              const dateL = moment(currentRange[0] * 1000 * 60 * 60 * 24).format('L');\r\n              const dateR = moment(currentRange[1] * 1000 * 60 * 60 * 24).format('L');\r\n              const l1 = Math.max(currentRange[0] - 1, profile.minMaxRange[0]);\r\n              const l2 = Math.min(currentRange[0] + 1, currentRange[1]);\r\n              const r1 = Math.max(currentRange[1] - 1, currentRange[0]);\r\n              const r2 = Math.min(currentRange[1] + 1, profile.minMaxRange[1]);\r\n              return (\r\n                <div className=\"range-container\">\r\n                  <Range\r\n                    range={currentRange}\r\n                    min={profile.minMaxRange[0]}\r\n                    max={profile.minMaxRange[1]}\r\n                    onChange={this.onChangeDayRange}\r\n                  />\r\n                  <div className=\"range-controls _flex-row\">\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l1, currentRange[1]])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateL}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l2, currentRange[1]])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                    <div className=\"_flex-fill\"></div>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r1])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateR}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r2])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, profile, error } = this.props;\r\n    DEBUG && console.log('profile:', profile);\r\n    return (\r\n      <div className=\"profile-compare-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"btn btn-sm btn-dark btn-icon\"\r\n              onClick={this.onRefresh}\r\n            >\r\n              <FaSearch /> обновить\r\n            </button>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!isLoading && _.isEmpty(profile) && <div className=\"profile\">Profile not found</div>}\r\n          {!isLoading && !_.isEmpty(profile) && this.renderProfile()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProfileCompare));\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\nimport { RESET } from './resetAction';\r\n\r\nconst LOADING = `USER/LOADING`;\r\nconst SUCCESS = `USER/SUCCESS`;\r\nconst ERROR = `USER/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        data: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: null,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    case RESET:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchUser = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/profile` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport { resetUser } from './resetAction';\r\n","import cookies from 'browser-cookies';\r\n\r\nimport { postJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport { fetchUser, resetUser } from 'reducers/user';\r\n\r\nconst LOADING = `LOGIN/LOADING`;\r\nconst SUCCESS = `LOGIN/SUCCESS`;\r\nconst ERROR = `LOGIN/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n  error: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        data: null,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: null,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const login = googleResponse => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        postJson({\r\n          url: `${HOST}/login/google`,\r\n          body: { token: googleResponse.tokenId },\r\n        })\r\n      );\r\n      cookies.set('session', data.session, { expires: 30 });\r\n      dispatch({ type: SUCCESS, data });\r\n      dispatch(fetchUser());\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    dispatch(resetUser());\r\n    try {\r\n      const data = await dispatch(\r\n        postJson({\r\n          url: `${HOST}/logout`,\r\n        })\r\n      );\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './top-bar.scss';\r\n\r\n// routes\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport * as loginACs from 'reducers/login';\r\n\r\n// redux\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoadingLogin: state.login.isLoading,\r\n    isLoadingUser: state.user.isLoading,\r\n    user: state.user.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login: loginACs.login,\r\n  logout: loginACs.logout,\r\n};\r\n\r\nfunction TopBar({ isLoadingLogin, isLoadingUser, user, login, logout }) {\r\n  return (\r\n    <header className=\"top-bar\">\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <NavLink exact to={routes.leaderboard.path}>\r\n              leaderboards\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact to={routes.ranking.path}>\r\n              ranking\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact to={routes.songs.path}>\r\n              songs\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div className=\"_flex-fill\" />\r\n      <div className=\"login-container\">\r\n        <NavLink\r\n          className=\"player-info\"\r\n          exact\r\n          to={routes.profile.getPath({ id: _.get('player.id', user) })}\r\n        >\r\n          {_.getOr('', 'player.nickname', user)}\r\n        </NavLink>\r\n        <button\r\n          className=\"btn btn-dark btn-icon btn-sm\"\r\n          onClick={logout}\r\n          disabled={isLoadingLogin || isLoadingUser}\r\n        >\r\n          <span> logout</span>\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { FaGoogle } from 'react-icons/fa';\r\nimport Emoji from 'react-emoji-render';\r\n\r\nimport './login-screen.scss';\r\n\r\n// reducers\r\nimport * as loginACs from 'reducers/login';\r\n\r\n// redux\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoading: state.login.isLoading,\r\n    error: state.login.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login: loginACs.login,\r\n};\r\n\r\nfunction LoginScreen({ isLoading, error, login }) {\r\n  const [isClown, setClown] = useState(false);\r\n  const onGoogleResponse = res => {\r\n    if (res.error) {\r\n      console.log('Google login response error:', res);\r\n    } else {\r\n      login(res);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <div className=\"site-name\">pumpking</div>\r\n      <div className=\"login-button\">\r\n        <GoogleLogin\r\n          clientId=\"197132042723-cmibep21qf6dald9l2l01rif7l5dtd4s.apps.googleusercontent.com\"\r\n          buttonText=\"Login\"\r\n          onSuccess={onGoogleResponse}\r\n          onFailure={onGoogleResponse}\r\n          cookiePolicy={'single_host_origin'}\r\n          render={({ onClick, disabled }) => (\r\n            <button\r\n              className=\"btn btn-dark btn-icon btn-sm\"\r\n              onClick={onClick}\r\n              disabled={disabled || isLoading}\r\n            >\r\n              <FaGoogle />\r\n              <span> login</span>\r\n            </button>\r\n          )}\r\n        />\r\n      </div>\r\n      {error && <div className=\"error\">{error.message}</div>}\r\n      <div className=\"footer\">\r\n        By logging in, you agree to our{' '}\r\n        {isClown ? (\r\n          <Emoji text=\"🤡\" className=\"clown\" />\r\n        ) : (\r\n          <span onClick={() => setClown(true)} className=\"link-style\">\r\n            Privacy Policy\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginScreen);\r\n","import { useState, useEffect, useMemo, useCallback, useRef } from 'react';\r\nimport _ from 'lodash/fp';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport moment from 'moment';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\nconst timeStyle = {\r\n  flavour: 'short',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nexport const getTimeAgo = (date) => {\r\n  const dayDiff = moment().startOf('day').diff(moment(date).startOf('day'), 'days');\r\n  return dayDiff === 0\r\n    ? 'сегодня'\r\n    : dayDiff === 1\r\n    ? 'вчера'\r\n    : timeAgo.format(date, timeStyle).replace('назад', '');\r\n};\r\n\r\nexport const preprocessData = (data) => ({\r\n  ...data,\r\n  results: _.flow(\r\n    _.get('results'),\r\n    _.toPairs,\r\n    _.map(([chartId, item]) => {\r\n      const fullRes = _.find(\r\n        (r) => _.every(_.isNumber, [r.perfects, r.greats, r.goods, r.bads, r.misses]),\r\n        item.results\r\n      );\r\n      const stepSum =\r\n        fullRes &&\r\n        [fullRes.perfects, fullRes.greats, fullRes.goods, fullRes.bads, fullRes.misses].reduce(\r\n          (sum, n) => sum + n,\r\n          0\r\n        );\r\n\r\n      const [chartType, chartLevel] = item.chart_label.match(/(\\D+)|(\\d+)/g);\r\n\r\n      return {\r\n        song: item.track,\r\n        sharedChartId: _.toNumber(chartId),\r\n        chartLabel: item.chart_label,\r\n        chartLevel,\r\n        chartType,\r\n        mix: item.mix,\r\n        duration: item.duration,\r\n        results: item.results.map((res, index) => {\r\n          let resultInfoOverrides = {};\r\n          if (stepSum) {\r\n            const infos = [res.perfects, res.greats, res.goods, res.bads, res.misses];\r\n            let fixableIndex = -1;\r\n            let localStepSum = 0;\r\n            const canFix =\r\n              infos.filter((numb, index) => {\r\n                if (!_.isNumber(numb)) {\r\n                  fixableIndex = index;\r\n                  return true;\r\n                }\r\n                localStepSum += numb;\r\n                return false;\r\n              }).length === 1;\r\n            if (canFix) {\r\n              resultInfoOverrides[['perfect', 'great', 'good', 'bad', 'miss'][fixableIndex]] =\r\n                stepSum - localStepSum;\r\n            }\r\n          }\r\n          return {\r\n            id: res.id,\r\n            playerId: res.player,\r\n            nickname: data.players[res.player].nickname,\r\n            nicknameArcade: data.players[res.player].arcade_name,\r\n            originalChartMix: res.originalChartMix,\r\n            originalChartLabel: res.originalChartLabel,\r\n            originalScore: res.originalScore,\r\n            date: res.gained,\r\n            dateObject: new Date(res.gained),\r\n            grade: res.grade,\r\n            isExactDate: !!res.exact_gain_date,\r\n            score: res.score,\r\n            scoreIncrease: res.score_increase,\r\n            calories: res.calories && res.calories / 1000,\r\n            perfect: res.perfects,\r\n            great: res.greats,\r\n            good: res.goods,\r\n            bad: res.bads,\r\n            miss: res.misses,\r\n            combo: res.max_combo,\r\n            mods: res.mods_list,\r\n            isRank: !!res.rank_mode,\r\n            isHJ: (res.mods_list || '').split(' ').includes('HJ'),\r\n            ...resultInfoOverrides,\r\n          };\r\n        }),\r\n      };\r\n    }),\r\n    _.map((song) => {\r\n      return {\r\n        ...song,\r\n        latestScoreDate: song.results.reduce(\r\n          (latest, current) => (current.date > latest ? current.date : latest),\r\n          song.results[0].date\r\n        ),\r\n        results: song.results.map((res) => {\r\n          const perfects = (Math.sqrt(res.perfect) * _.toInteger(song.chartLevel)) / 2;\r\n          const acc = perfects\r\n            ? Math.floor(\r\n                ((perfects * 100 + res.great * 60 + res.good * 30 + res.miss * -20) /\r\n                  (perfects + res.great + res.good + res.bad + res.miss)) *\r\n                  100\r\n              ) / 100\r\n            : null;\r\n          const accRaw = res.perfect\r\n            ? Math.floor(\r\n                ((res.perfect * 100 + res.great * 60 + res.good * 30 + res.miss * -20) /\r\n                  (res.perfect + res.great + res.good + res.bad + res.miss)) *\r\n                  100\r\n              ) / 100\r\n            : null;\r\n          return {\r\n            ...res,\r\n            accuracy: acc < 0 ? 0 : accRaw === 100 ? 100 : acc && +acc.toFixed(2),\r\n            accuracyRaw: accRaw,\r\n            hasRankScore: _.some({ playerId: res.playerId, isRank: true }, song.results),\r\n          };\r\n        }),\r\n      };\r\n    }),\r\n    _.orderBy(['latestScoreDate', 'song', 'chartLevel'], ['desc', 'asc', 'desc'])\r\n  )(data),\r\n});\r\n\r\nexport const useTracked = (data, resetIndicatorData, onChange = _.noop, isDebugOn) => {\r\n  const [prevData, setPrevData] = useState(data);\r\n  const [currData, setCurrData] = useState(data);\r\n  const resetIndicator = useRef(resetIndicatorData);\r\n\r\n  useEffect(() => {\r\n    // isDebugOn && console.log('tracking effect', resetIndicatorData, data, currData, prevData);\r\n    if (resetIndicator.current !== resetIndicatorData) {\r\n      // isDebugOn && console.log('resetting due to indicator chage', data);\r\n      resetIndicator.current = resetIndicatorData;\r\n      setPrevData(data);\r\n      setCurrData(data);\r\n    } else if (data && !_.isEqual(data, currData)) {\r\n      // isDebugOn && console.log('data has updated', data, currData);\r\n      setPrevData(currData);\r\n      setCurrData(data);\r\n      onChange(currData, data);\r\n    }\r\n  }, [data, onChange, currData, prevData, resetIndicatorData]);\r\n\r\n  const reset = useCallback(() => {\r\n    // isDebugOn && console.log('reset called from function');\r\n    setPrevData(data);\r\n    setCurrData(data);\r\n  }, [data]);\r\n\r\n  return useMemo(() => [currData, prevData, reset], [currData, prevData, reset]);\r\n};\r\n\r\nexport const useResetTrackedObject = (object) => {\r\n  return useCallback(() => {\r\n    const trackings = _.values(object);\r\n    trackings.forEach((tracking) => tracking[2]());\r\n  }, [object]);\r\n};\r\n","import { fetchJson } from 'utils/fetch';\r\nimport queryString from 'query-string';\r\nimport _ from 'lodash/fp';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport { preprocessData } from 'components/SocketTracker/helpers';\r\n\r\nconst LOADING = `TOP_PER_SONG/LOADING`;\r\nconst SUCCESS = `TOP_PER_SONG/SUCCESS`;\r\nconst ERROR = `TOP_PER_SONG/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n  error: null,\r\n  fetchingParams: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        fetchingParams: action.fetchingParams,\r\n        data: null,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return action.fetchingParams === state.fetchingParams\r\n        ? {\r\n            ...state,\r\n            isLoading: false,\r\n            error: action.error,\r\n            data: null,\r\n            fetchingParams: null,\r\n          }\r\n        : state;\r\n    case SUCCESS:\r\n      return action.fetchingParams === state.fetchingParams\r\n        ? {\r\n            ...state,\r\n            isLoading: false,\r\n            data: action.data,\r\n            fetchingParams: null,\r\n          }\r\n        : state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTopPerSong = (songName, leftLabel, rightLabel) => {\r\n  const fetchingParams = queryString.stringify({\r\n    song_name: songName,\r\n    charts: _.compact(_.uniq([leftLabel, rightLabel])).join(','),\r\n  });\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING, fetchingParams });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/topPerSong?${fetchingParams}` }));\r\n      const processedData = _.flow(preprocessData, _.get('results'))(data);\r\n      dispatch({ type: SUCCESS, data: processedData, fetchingParams });\r\n      return processedData;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error, fetchingParams });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\nimport classNames from 'classnames';\r\n\r\nimport { getRankImg } from 'utils/exp';\r\n// import { useTracked } from './helpers';\r\n\r\nexport const ChartLabel = ({ type, level }) => {\r\n  return (\r\n    <div\r\n      className={classNames('chart-name', {\r\n        single: type === 'S',\r\n        singlep: type === 'SP',\r\n        doublep: type === 'DP',\r\n        double: type === 'D',\r\n        coop: type === 'COOP',\r\n      })}\r\n    >\r\n      <span className=\"chart-letter\">{type}</span>\r\n      <span className=\"chart-number\">{level}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const PlayerCard = ({\r\n  player,\r\n  profile,\r\n  label,\r\n  trackedData,\r\n  isLeft = false,\r\n  preferences,\r\n  topPlayersList,\r\n}) => {\r\n  const playersHiddenStatus = _.getOr({}, 'playersHiddenStatus', preferences);\r\n\r\n  const renderDeltaText = (n, prevN) => {\r\n    if (!prevN || prevN === n) {\r\n      return null;\r\n    }\r\n    const delta = n - prevN;\r\n    return (\r\n      <span className={`change ${delta >= 0 ? 'pos' : 'neg'}`}>\r\n        {delta < 0 ? delta.toFixed(1) : `+${delta.toFixed(1)}`}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const renderExpLine = () => {\r\n    if (!profile.expRank || !profile.exp) {\r\n      return null;\r\n    }\r\n\r\n    let takenWidth = profile.expRankNext\r\n      ? (profile.exp - profile.expRank.threshold) /\r\n        (profile.expRankNext.threshold - profile.expRank.threshold)\r\n      : 1;\r\n    const emptyWidth = 1 - takenWidth;\r\n    let diffWidth = 0;\r\n\r\n    if (trackedData.exp[1]) {\r\n      takenWidth = profile.expRankNext\r\n        ? (trackedData.exp[1] - profile.expRank.threshold) /\r\n          (profile.expRankNext.threshold - profile.expRank.threshold)\r\n        : 1;\r\n      diffWidth = 1 - emptyWidth - takenWidth;\r\n    }\r\n    return (\r\n      <div className=\"exp-line\">\r\n        <div className=\"taken\" style={{ width: Math.floor(100 * takenWidth) + '%' }}></div>\r\n        <div className=\"diff\" style={{ width: Math.ceil(100 * diffWidth) + '%' }}></div>\r\n        <div className=\"rest\" style={{ width: Math.ceil(100 * emptyWidth) + '%' }}></div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const rivals = topPlayersList.filter((pl) => !playersHiddenStatus[pl.id]);\r\n  const playerIndex = _.findIndex({ id: profile.id }, rivals);\r\n  const closestPlayers =\r\n    playerIndex < 0\r\n      ? []\r\n      : rivals.slice(Math.max(0, playerIndex - 2), Math.min(playerIndex + 3, rivals.length));\r\n\r\n  // const trackedPlayerTopPlace = useTracked(\r\n  //   _.get('place', rivals[playerIndex]),\r\n  //   profile.name\r\n  //   // (prev, curr) => {\r\n  //   //   if (prev) {\r\n  //   //     console.log('Place update:', profile.name || player, curr, prev);\r\n  //   //   }\r\n  //   // }\r\n  // );\r\n\r\n  const [type, level] = label ? label.match(/(\\D+)|(\\d+)/g) : [];\r\n\r\n  return (\r\n    <div className={`player-container ${isLeft ? 'left' : 'right'}`}>\r\n      {player && (\r\n        <>\r\n          {/* <div className=\"title-header\">player {isLeft ? 1 : 2}:</div> */}\r\n          <div className=\"name-with-label\">\r\n            <div className=\"name\">{profile.name || player}</div>\r\n            <div className=\"chart-label\">\r\n              <ChartLabel type={type} level={level} />\r\n            </div>\r\n          </div>\r\n          {profile.exp && profile.expRank && (\r\n            <div className=\"exp exp-rank\">\r\n              {getRankImg(profile.expRank)}\r\n              {renderExpLine()}\r\n            </div>\r\n          )}\r\n          {trackedData.exp[0] && (\r\n            <div className=\"exp-text\">\r\n              <span className=\"_grey-text\">exp:</span>\r\n              <span>{Math.round(trackedData.exp[0])}</span>\r\n              {renderDeltaText(trackedData.exp[0], trackedData.exp[1])}\r\n            </div>\r\n          )}\r\n          {trackedData.elo[0] && (\r\n            <div className=\"rating\">\r\n              <span className=\"_grey-text\">elo:</span>\r\n              <span>{Math.round(trackedData.elo[0])}</span>\r\n              {renderDeltaText(trackedData.elo[0], trackedData.elo[1])}\r\n            </div>\r\n          )}\r\n          {trackedData.pp[0] && (\r\n            <div className=\"rating\">\r\n              <span className=\"_grey-text\">pp:</span>\r\n              <span>{Math.round(trackedData.pp[0])}</span>\r\n              {renderDeltaText(trackedData.pp[0], trackedData.pp[1])}\r\n            </div>\r\n          )}\r\n          <div className=\"closest-players\">\r\n            {_.map((pl) => {\r\n              return (\r\n                <div className={`closest-player ${profile.id === pl.id ? 'current-player' : ''}`}>\r\n                  <div className=\"place\">#{pl.place}</div>\r\n                  <div className=\"name\">{pl.name}</div>\r\n                  <div className=\"elo\">{pl.rating}</div>\r\n                </div>\r\n              );\r\n            }, closestPlayers)}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { FaAngleDoubleUp } from 'react-icons/fa';\r\nimport numeral from 'numeral';\r\n\r\nimport { getTimeAgo } from './helpers';\r\n\r\nexport const Result = ({ res, chart, leftProfile, rightProfile, placeDifference, flag }) => {\r\n  return (\r\n    <tr\r\n      key={res.score + res.nickname}\r\n      className={classNames({\r\n        empty: !res.isExactDate,\r\n        latest: res.date === chart.latestScoreDate,\r\n        left: res.nickname === leftProfile.name,\r\n        right: res.nickname === rightProfile.name,\r\n      })}\r\n    >\r\n      <td className=\"nickname\">\r\n        <div className=\"nickname-container\">\r\n          {flag}\r\n          <span className=\"nickname-text\">\r\n            {res.nickname}\r\n            {!!placeDifference && (\r\n              <span className=\"change-holder up\">\r\n                <span>{placeDifference}</span>\r\n                <FaAngleDoubleUp />\r\n              </span>\r\n            )}\r\n          </span>\r\n        </div>\r\n      </td>\r\n      {/* <td className=\"pp\">\r\n        {pp}\r\n        {pp && <span className=\"_grey\">pp</span>}\r\n      </td> */}\r\n      <td className=\"score\">\r\n        <span className=\"score-span\">\r\n          {res.scoreIncrease > res.score * 0.8 && '*'}\r\n          {numeral(res.score).format('0,0')}\r\n        </span>\r\n      </td>\r\n      <td className=\"grade\">\r\n        <div className=\"img-holder\">\r\n          {res.grade && res.grade !== '?' && (\r\n            <img src={`${process.env.PUBLIC_URL}/grades/${res.grade}.png`} alt={res.grade} />\r\n          )}\r\n          {res.grade === '?' && null}\r\n        </div>\r\n      </td>\r\n      <td\r\n        className={classNames('mods', {\r\n          vj: res.isRank,\r\n          hj: res.isHJ,\r\n        })}\r\n      >\r\n        <div className=\"mods-container\">\r\n          {res.mods &&\r\n            res.mods\r\n              .split(' ')\r\n              .filter((mod) => mod.includes('AV'))\r\n              .map((avMod) => (\r\n                <div className=\"av-mod\">\r\n                  <div className=\"av-text\">AV</div>\r\n                  <div className=\"av-number\">{avMod.replace('AV', '')}</div>\r\n                </div>\r\n              ))}\r\n          {res.isRank && <div className=\"inner\">{res.isExactDate ? 'R' : 'R?'}</div>}\r\n          {res.isHJ && <div className=\"inner\">HJ</div>}\r\n        </div>\r\n      </td>\r\n      <td className=\"number miss\">{res.miss}</td>\r\n      <td className=\"number bad\">{res.bad}</td>\r\n      <td className=\"number good\">{res.good}</td>\r\n      <td className=\"number great\">{res.great}</td>\r\n      <td className=\"number perfect\">{res.perfect}</td>\r\n      <td className=\"combo\">\r\n        {res.combo}\r\n        {res.combo ? 'x' : ''}\r\n      </td>\r\n      <td className=\"accuracy\">\r\n        {res.accuracy}\r\n        {res.accuracy ? '%' : ''}\r\n      </td>\r\n      <td\r\n        className={classNames('date', {\r\n          latest: res.date === chart.latestScoreDate,\r\n        })}\r\n      >\r\n        {getTimeAgo(res.dateObject)}\r\n        {res.isExactDate ? '' : '?'}\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n\r\nimport Flag from 'components/Shared/Flag';\r\nimport { Result } from './Result';\r\nimport { ChartLabel } from './PlayerCard';\r\n\r\nexport const Chart = React.forwardRef(\r\n  ({ chart, results, interpDiff, profiles, leftProfile, rightProfile }, ref) => {\r\n    return (\r\n      <div className=\"song-block\" key={chart.song + chart.chartLabel} ref={ref}>\r\n        <div className=\"song-name\">\r\n          <ChartLabel type={chart.chartType} level={chart.chartLevel} />\r\n          <div>\r\n            {interpDiff ? `(${interpDiff.toFixed(1)}) ` : ''}\r\n            {chart.song}\r\n          </div>\r\n        </div>\r\n        <div className=\"charts\">\r\n          <div className=\"chart\">\r\n            <div className=\"results\">\r\n              <table>\r\n                <tbody>\r\n                  {results.map((res, index) => {\r\n                    let placeDifference, newIndex;\r\n                    if (res.scoreIncrease && res.date === chart.latestScoreDate) {\r\n                      const prevScore = res.score - res.scoreIncrease;\r\n                      newIndex = _.findLastIndex((res) => res.score > prevScore, results);\r\n                      placeDifference = newIndex - index;\r\n                    }\r\n                    // const pp = _.getOr('', `[${res.id}].pp.ppFixed`, resultInfo);\r\n                    const flag = profiles[res.playerId] ? (\r\n                      <Flag region={profiles[res.playerId].region} />\r\n                    ) : null;\r\n                    return (\r\n                      <Result\r\n                        res={res}\r\n                        chart={chart}\r\n                        leftProfile={leftProfile}\r\n                        rightProfile={rightProfile}\r\n                        placeDifference={placeDifference}\r\n                        flag={flag}\r\n                      />\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React, { useEffect, useState, useRef, useCallback, useMemo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport lev from 'fast-levenshtein';\r\n\r\nimport './socket.scss';\r\n\r\nimport { SOCKET_SERVER_IP } from 'constants/backend';\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nimport { appendNewResults } from 'reducers/results';\r\nimport { fetchTopPerSong } from 'reducers/topPerSong';\r\nimport { fetchUserPreferences } from 'reducers/preferences';\r\n\r\nimport { useTracked, useResetTrackedObject } from './helpers';\r\n\r\nimport { PlayerCard } from './PlayerCard';\r\nimport { Chart } from './Chart';\r\n// import { ChartBlocks } from './ChartBlocks';\r\n\r\n// code\r\nconst STATE_RESET_TIMEOUT = 10 * 60 * 1000; // 5 minutes\r\n\r\nconst topPlayersListSelector = createSelector(\r\n  (state) => state.results.profiles,\r\n  _.flow(_.values, _.orderBy('ratingRaw', 'desc'), (items) =>\r\n    items.map((it, index) => ({ place: index + 1, ..._.pick(['id', 'name', 'rating'], it) }))\r\n  )\r\n);\r\n\r\n// redux\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.topPerSong.isLoading,\r\n    songTopData: state.topPerSong.data,\r\n    error: state.topPerSong.error,\r\n    profiles: state.results.profiles,\r\n    topPlayersList: topPlayersListSelector(state),\r\n    sharedCharts: state.results.sharedCharts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopPerSong,\r\n  appendNewResults,\r\n  fetchUserPreferences,\r\n};\r\n\r\nfunction TrackerApp({\r\n  isLoading,\r\n  fetchTopPerSong,\r\n  fetchUserPreferences,\r\n  appendNewResults,\r\n  songTopData,\r\n  error,\r\n  profiles,\r\n  topPlayersList,\r\n  // resultInfo = {},\r\n  sharedCharts = {},\r\n}) {\r\n  // Setup\r\n  const [message, setMessage] = useState('');\r\n  const [socketErrorMessage, setSocketErrorMessage] = useState('');\r\n  const [isSocketReady, setSocketReady] = useState(false);\r\n  const [isAlive, setAlive] = useState(false);\r\n  const [leftLabel, setLeftLabel] = useState(null);\r\n  const [rightLabel, setRightLabel] = useState(null);\r\n  const [leftPlayer, setLeftPlayer] = useState(null);\r\n  const [rightPlayer, setRightPlayer] = useState(null);\r\n  const [recognizedSongName, setRecognizedSongName] = useState('');\r\n  const [leftPreferences, setLeftPreferences] = useState(null);\r\n  const [rightPreferences, setRightPreferences] = useState(null);\r\n\r\n  const resultsContainerRef = useRef(null);\r\n  const leftResultRef = useRef(null);\r\n  const rightResultRef = useRef(null);\r\n\r\n  const socketRef = useRef(null);\r\n  const timeoutResetTokenRef = useRef(null);\r\n\r\n  // Get profile objects from player names\r\n  const leftProfile = useMemo(() => {\r\n    if (!leftPlayer || _.isEmpty(profiles)) return {};\r\n    return _.minBy((p) => lev.get(p.nameArcade, leftPlayer), _.values(profiles)) || {};\r\n  }, [leftPlayer, profiles]);\r\n  const rightProfile = useMemo(() => {\r\n    if (!rightPlayer || _.isEmpty(profiles)) return {};\r\n    return _.minBy((p) => lev.get(p.nameArcade, rightPlayer), _.values(profiles)) || {};\r\n  }, [rightPlayer, profiles]);\r\n\r\n  // Track changes in profiles\r\n  const leftTracked = {\r\n    pp: useTracked(_.get('pp.pp', leftProfile), leftProfile.name),\r\n    elo: useTracked(leftProfile.ratingRaw, leftProfile.name),\r\n    exp: useTracked(leftProfile.exp, leftProfile.name),\r\n    expRank: useTracked(leftProfile.expRank, leftProfile.name),\r\n    achievements: useTracked(leftProfile.achievements, leftProfile.name),\r\n  };\r\n  const resetLeftTracked = useResetTrackedObject(leftTracked);\r\n  const rightTracked = {\r\n    pp: useTracked(_.get('pp.pp', rightProfile), rightProfile.name),\r\n    elo: useTracked(rightProfile.ratingRaw, rightProfile.name),\r\n    exp: useTracked(rightProfile.exp, rightProfile.name),\r\n    expRank: useTracked(rightProfile.expRank, rightProfile.name),\r\n    achievements: useTracked(rightProfile.achievements, rightProfile.name),\r\n  };\r\n  const resetRightTracked = useResetTrackedObject(rightTracked);\r\n\r\n  // Fetch preferences when player id changes\r\n  useEffect(() => {\r\n    if (leftProfile.id) {\r\n      fetchUserPreferences(leftProfile.id).then((response) => {\r\n        setLeftPreferences(response.preferences);\r\n      });\r\n    }\r\n  }, [leftProfile.id, fetchUserPreferences]);\r\n  useEffect(() => {\r\n    if (rightProfile.id) {\r\n      fetchUserPreferences(rightProfile.id).then((response) => {\r\n        setRightPreferences(response.preferences);\r\n      });\r\n    }\r\n  }, [rightProfile.id, fetchUserPreferences]);\r\n\r\n  // Reset the page when sockets didn't receive any messages for a long time\r\n  const restartTimeout = useCallback(() => {\r\n    setAlive(true);\r\n    if (timeoutResetTokenRef.current) {\r\n      clearTimeout(timeoutResetTokenRef.current);\r\n    }\r\n    timeoutResetTokenRef.current = setTimeout(() => {\r\n      // TODO: reset page\r\n    }, STATE_RESET_TIMEOUT);\r\n  }, []);\r\n\r\n  // Start websockets\r\n  useEffect(() => {\r\n    socketRef.current = new WebSocket(SOCKET_SERVER_IP);\r\n    socketRef.current.onerror = () => {\r\n      setMessage(`Cannot connect to websocket server, please reload the page`);\r\n    };\r\n    socketRef.current.onopen = (e) => {\r\n      setSocketReady(true);\r\n    };\r\n  }, []);\r\n\r\n  // Set the onmessage callback\r\n  useEffect(() => {\r\n    socketRef.current.onmessage = (event) => {\r\n      restartTimeout();\r\n      try {\r\n        const data = event && event.data && JSON.parse(event.data);\r\n        console.log(data);\r\n\r\n        if (data.type === 'result_screen') {\r\n          console.log('Resetting tracking because received result screen');\r\n          resetLeftTracked();\r\n          resetRightTracked();\r\n          const songName = data.data.track_name;\r\n          const leftLabel = _.get('left.chart_label', data.data);\r\n          const rightLabel = _.get('right.chart_label', data.data);\r\n          const leftPlayer = _.get('left.result.player_name', data.data);\r\n          const rightPlayer = _.get('right.result.player_name', data.data);\r\n          setLeftPlayer(leftPlayer);\r\n          setRightPlayer(rightPlayer);\r\n          setLeftLabel(leftLabel);\r\n          setRightLabel(rightLabel);\r\n          setRecognizedSongName(songName);\r\n          appendNewResults(data.data.gained); // Fetch results that we don't have here yet (to calculate elo)\r\n          fetchTopPerSong(songName, leftLabel, rightLabel);\r\n        } else if (data.type === 'chart_selected') {\r\n          setSocketErrorMessage(data.data.error || '');\r\n          if (data.data.leftPlayer || data.data.rightPlayer) {\r\n            setLeftPlayer(data.data.leftPlayer);\r\n            setRightPlayer(data.data.rightPlayer);\r\n          }\r\n          if (data.data.leftLabel || data.data.rightLabel) {\r\n            setLeftLabel(data.data.leftLabel);\r\n            setRightLabel(data.data.rightLabel);\r\n            if (data.data.text) {\r\n              // If we have full info, try to fetch if needed\r\n              const newSongName = data.data.text;\r\n              setRecognizedSongName(newSongName);\r\n              console.log('song name', newSongName, recognizedSongName);\r\n              if (recognizedSongName !== newSongName) {\r\n                fetchTopPerSong(newSongName, data.data.leftLabel, data.data.rightLabel);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.log('on message error', e);\r\n        setMessage(`Error: ${e.message}`);\r\n      }\r\n    };\r\n  }, [\r\n    recognizedSongName,\r\n    fetchTopPerSong,\r\n    restartTimeout,\r\n    appendNewResults,\r\n    resetLeftTracked,\r\n    resetRightTracked,\r\n  ]);\r\n\r\n  // FOR DEBUG\r\n  // useEffect(() => {\r\n  //   if (!_.isEmpty(profiles) && !leftPlayer && !rightPlayer) {\r\n  //     socketRef.current.onmessage({\r\n  //       data:\r\n  //         '{\"type\": \"chart_selected\", \"data\": {\"text\": \"Iolite Sky\", \"leftLabel\": \"D17\", \"rightLabel\": \"S16\", \"leftPlayer\": \"GRUMD\", \"rightPlayer\": \"DINO\"}}',\r\n  //     });\r\n  //   }\r\n  // }, [profiles, leftPlayer, rightPlayer]);\r\n\r\n  // Resize the results blocks to fill the most space on the page\r\n  useEffect(() => {\r\n    // return;\r\n    if (resultsContainerRef.current && leftResultRef.current) {\r\n      if (rightResultRef.current) {\r\n        // Both refs\r\n        const left = leftResultRef.current;\r\n        const right = rightResultRef.current;\r\n        const totalSize = {\r\n          w: resultsContainerRef.current.clientWidth,\r\n          h: resultsContainerRef.current.clientHeight,\r\n        };\r\n        const scaleHH = totalSize.w / (left.offsetWidth + right.offsetWidth);\r\n        const scaleHW = totalSize.h / Math.max(left.offsetHeight, right.offsetHeight);\r\n        const scaleWH = totalSize.w / Math.max(left.offsetWidth, right.offsetWidth);\r\n        const scaleWW = totalSize.h / (left.offsetHeight + right.offsetHeight);\r\n        // console.log(scaleHH, scaleHW, scaleWH, scaleWW);\r\n        if (Math.min(scaleHH, scaleHW) > Math.min(scaleWH, scaleWW)) {\r\n          resultsContainerRef.current.style.flexDirection = 'row';\r\n          resultsContainerRef.current.style.alignItems = 'center';\r\n          if (scaleHH > scaleHW) {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleHW})`;\r\n          } else {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleHH})`;\r\n          }\r\n        } else {\r\n          resultsContainerRef.current.style.flexDirection = 'column';\r\n          resultsContainerRef.current.style.alignItems = 'center';\r\n          if (scaleWH > scaleWW) {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleWW})`;\r\n          } else {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleWH})`;\r\n          }\r\n        }\r\n      } else {\r\n        // One ref\r\n        const left = leftResultRef.current;\r\n        const totalSize = {\r\n          w: resultsContainerRef.current.clientWidth,\r\n          h: resultsContainerRef.current.clientHeight,\r\n        };\r\n        const scaleW = totalSize.w / left.offsetWidth;\r\n        const scaleH = totalSize.h / left.offsetHeight;\r\n        if (scaleW < scaleH) {\r\n          resultsContainerRef.current.style.transform = `scale(${0.98 * scaleW})`;\r\n        } else {\r\n          resultsContainerRef.current.style.transform = `scale(${0.98 * scaleH})`;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  const leftChart = _.find({ chartLabel: leftLabel }, songTopData);\r\n  const rightChart = _.find({ chartLabel: rightLabel }, songTopData);\r\n  const chartsToShow = _.uniq(_.compact([leftChart, rightChart]));\r\n\r\n  return (\r\n    <div className=\"tracker-container\">\r\n      <div className=\"sidebar\">\r\n        <PlayerCard\r\n          player={leftPlayer}\r\n          profile={leftProfile}\r\n          label={leftLabel}\r\n          trackedData={leftTracked}\r\n          preferences={leftPreferences}\r\n          topPlayersList={topPlayersList}\r\n          isLeft\r\n        />\r\n        <PlayerCard\r\n          player={rightPlayer}\r\n          profile={rightProfile}\r\n          label={rightLabel}\r\n          trackedData={rightTracked}\r\n          preferences={rightPreferences}\r\n          topPlayersList={topPlayersList}\r\n        />\r\n      </div>\r\n      <div className=\"results\" ref={resultsContainerRef}>\r\n        {(error || message) && (\r\n          <div className=\"error\">\r\n            {message}\r\n            <br />\r\n            {error && error.message}\r\n          </div>\r\n        )}\r\n        {isSocketReady &&\r\n          !leftPlayer &&\r\n          !rightPlayer &&\r\n          !socketErrorMessage &&\r\n          !isLoading &&\r\n          _.isEmpty(chartsToShow) &&\r\n          (isAlive ? (\r\n            <div className=\"msg\">Waiting for chart select...</div>\r\n          ) : (\r\n            <div className=\"offline msg\">Recognizer is offline</div>\r\n          ))}\r\n        {isSocketReady &&\r\n          (leftLabel || rightLabel) &&\r\n          !socketErrorMessage &&\r\n          !isLoading &&\r\n          _.isEmpty(chartsToShow) &&\r\n          'No results for this chart'}\r\n        {isLoading && <Loader />}\r\n        {!isLoading &&\r\n          chartsToShow.map((chart, chartIndex) => {\r\n            const leftPlayersHiddenStatus = _.getOr({}, 'playersHiddenStatus', leftPreferences);\r\n            const rightPlayersHiddenStatus = _.getOr({}, 'playersHiddenStatus', rightPreferences);\r\n\r\n            let topPlace = 1;\r\n            const occuredNicknames = [];\r\n            const results = chart.results\r\n              .filter((res) => {\r\n                const showThisResult =\r\n                  (chart.chartLabel === leftLabel && !leftPlayersHiddenStatus[res.playerId]) ||\r\n                  (chart.chartLabel === rightLabel && !rightPlayersHiddenStatus[res.playerId]);\r\n                return showThisResult;\r\n              })\r\n              .map((res, index) => {\r\n                const isSecondOccurenceInResults = occuredNicknames.includes(res.nickname);\r\n                occuredNicknames.push(res.nickname);\r\n                if (index === 0) {\r\n                  topPlace = 1;\r\n                } else if (\r\n                  !isSecondOccurenceInResults &&\r\n                  res.score !== _.get([index - 1, 'score'], chart.results)\r\n                ) {\r\n                  topPlace += 1;\r\n                }\r\n                return {\r\n                  ...res,\r\n                  topPlace,\r\n                  isSecondOccurenceInResults,\r\n                };\r\n              });\r\n\r\n            const interpDiff = _.get('interpolatedDifficulty', sharedCharts[chart.sharedChartId]);\r\n            return (\r\n              <Chart\r\n                ref={chartIndex === 0 ? leftResultRef : rightResultRef}\r\n                chart={chart}\r\n                results={results}\r\n                interpDiff={interpDiff}\r\n                profiles={profiles}\r\n                leftProfile={leftProfile}\r\n                rightProfile={rightProfile}\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TrackerApp);\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TRACKLIST/LOADING`;\r\nconst SUCCESS = `TRACKLIST/SUCCESS`;\r\nconst ERROR = `TRACKLIST/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTracklist = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/tracklist/stats/XX` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport localForage from 'localforage';\r\nimport _ from 'lodash/fp';\r\n\r\nimport 'react-responsive-ui/style.css';\r\nimport './App.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\nimport { CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nimport SongsTop from 'components/SongsTop/SongsTop';\r\nimport Leaderboard from 'components/Leaderboard/Leaderboard';\r\nimport Ranking from 'components/Ranking/Ranking';\r\nimport Profile from 'components/Profile/Profile';\r\nimport ProfileCompare from 'components/ProfileCompare/ProfileCompare';\r\nimport TopBar from 'components/Shared/TopBar/TopBar';\r\nimport Loader from 'components/Shared/Loader';\r\nimport LoginScreen from 'components/LoginScreen/LoginScreen';\r\nimport SocketTracker from 'components/SocketTracker/SocketTracker';\r\n\r\nimport { fetchResults, setFilter } from 'reducers/results';\r\nimport { fetchTracklist } from 'reducers/tracklist';\r\nimport { fetchUser } from 'reducers/user';\r\nimport { fetchPreferences } from 'reducers/preferences';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userData: state.user.data,\r\n    isLoading: state.user.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setFilter,\r\n  fetchResults,\r\n  fetchTracklist,\r\n  fetchUser,\r\n  fetchPreferences,\r\n};\r\n\r\nfunction App({\r\n  fetchUser,\r\n  fetchTracklist,\r\n  fetchResults,\r\n  fetchPreferences,\r\n  setFilter,\r\n  userData,\r\n  isLoading,\r\n}) {\r\n  useEffect(() => {\r\n    if (!process.env.REACT_APP_SOCKET) {\r\n      fetchUser();\r\n      localForage\r\n        .getItem('filter')\r\n        .then((filter) => {\r\n          if (filter) {\r\n            setFilter({\r\n              ...filter,\r\n              chartRange: filter.chartRange && {\r\n                ...filter.chartRange,\r\n                range: _.every(\r\n                  (r) => r >= CHART_MIN_MAX[0] && r <= CHART_MIN_MAX[1],\r\n                  filter.chartRange.range\r\n                )\r\n                  ? filter.chartRange.range\r\n                  : CHART_MIN_MAX,\r\n              },\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => console.error('Cannot get filter from local storage', error));\r\n    }\r\n  }, [fetchUser, fetchTracklist, fetchResults, setFilter]);\r\n\r\n  useEffect(() => {\r\n    if (!process.env.REACT_APP_SOCKET && userData && userData.player) {\r\n      Promise.all([fetchTracklist(), fetchPreferences()]).then(() => {\r\n        fetchResults();\r\n      });\r\n    }\r\n  }, [userData, fetchPreferences, fetchResults, fetchTracklist]);\r\n\r\n  useEffect(() => {\r\n    if (process.env.REACT_APP_SOCKET) {\r\n      fetchTracklist().then(() => {\r\n        fetchResults();\r\n      });\r\n    }\r\n  }, [fetchResults, fetchTracklist]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <Loader />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (process.env.REACT_APP_SOCKET) {\r\n    return <SocketTracker />;\r\n  }\r\n\r\n  if (!userData || !userData.player) {\r\n    return <LoginScreen />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TopBar />\r\n      <Route exact path=\"/\" render={() => <Redirect to={routes.leaderboard.path} />} />\r\n      <Route path={routes.leaderboard.path} component={Leaderboard} />\r\n      <Route path={routes.ranking.path} component={Ranking} />\r\n      <Route path={routes.profile.path}>\r\n        <Switch>\r\n          <Route path={routes.profile.path} exact component={Profile} />\r\n          <Route path={routes.profile.compare.path} exact component={ProfileCompare} />\r\n        </Switch>\r\n      </Route>\r\n      <Route path={routes.songs.path} component={SongsTop} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { combineReducers } from 'redux';\r\n\r\nimport mostPlayed from './mostPlayed';\r\nimport mostPlayedMonth from './mostPlayedMonth';\r\nimport leastPlayed from './leastPlayed';\r\n\r\nexport default combineReducers({\r\n  mostPlayed,\r\n  mostPlayedMonth,\r\n  leastPlayed,\r\n});\r\n","import _ from 'lodash/fp';\r\n\r\nconst ADD_POPUP = `POPUPS/ADD`;\r\nconst REMOVE_POPUP = `POPUPS/REMOVE`;\r\n\r\nconst ID_PREFIX = 'popup';\r\n\r\nconst initialState = {\r\n  popups: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_POPUP:\r\n      const id = _.uniqueId(ID_PREFIX);\r\n      return {\r\n        ...state,\r\n        popups: [...state.popups, { id, type: action.type, parameters: action.parameters }],\r\n      };\r\n    case REMOVE_POPUP:\r\n      return {\r\n        ...state,\r\n        popups: _.remove({ id: action.id }, state.popups),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addPopup = ({ type, parameters }) => {\r\n  return { type, parameters };\r\n};\r\n\r\nexport const removePopup = ({ id }) => {\r\n  return { id };\r\n};\r\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport _ from 'lodash/fp';\r\n\r\nimport tracklist from 'reducers/tracklist';\r\nimport trackStats from 'reducers/trackStats';\r\nimport popups from 'reducers/popups';\r\nimport profiles from 'reducers/profiles';\r\nimport preferences from 'reducers/preferences';\r\nimport presets from 'reducers/presets';\r\nimport results from 'reducers/results';\r\nimport user from 'reducers/user';\r\nimport login from 'reducers/login';\r\nimport topPerSong from 'reducers/topPerSong';\r\n\r\nconst rootReducer = combineReducers({\r\n  topPerSong,\r\n  login,\r\n  popups,\r\n  preferences,\r\n  presets,\r\n  profiles,\r\n  results,\r\n  trackStats,\r\n  tracklist,\r\n  user,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && process.env.NODE_ENV === 'development'\r\n    ? compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__({\r\n          stateSanitizer: (state) => ({\r\n            ...state,\r\n            results: {\r\n              ...state.results,\r\n              data: `big array, ${_.size(state.results.data)}`,\r\n              results: `big array, ${_.size(state.results.results)}`,\r\n              sharedCharts: 'big object',\r\n              profiles: _.mapValues(\r\n                (pl) => ({\r\n                  ...pl,\r\n                  resultsByGrade: '...',\r\n                  resultsByLevel: '...',\r\n                  rankingHistory: '...',\r\n                  ratingHistory: '...',\r\n                }),\r\n                state.results.profiles\r\n              ),\r\n            },\r\n          }),\r\n        })\r\n      )\r\n    : applyMiddleware(thunk)\r\n);\r\n","import 'promise-polyfill';\r\nimport 'whatwg-fetch';\r\nimport 'utils/polyfills';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.scss';\r\nimport App from 'components/App';\r\n\r\nimport { store } from 'reducers';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}