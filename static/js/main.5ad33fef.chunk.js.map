{"version":3,"sources":["components/Overlay/Overlay.js","components/ToggleButton/ToggleButton.js","utils/fetch.js","reducers/top.js","components/Rankings/Rankings.js","constants/backend.js","components/App.js","reducers/index.js","index.js"],"names":["POPPER_MODIFIERS","preventOverflow","enabled","padding","boundariesElement","PLACEMENT_ARROW_MAPPING","right","left","top","bottom","getArrowPlacement","placement","split","Overlay","state","isVisible","containerItemRef","React","createRef","renderPopper","bind","toggleOverlayVisibility","this","setState","event","target","closest","hideOverlay","ref","style","arrowProps","outOfBoundaries","scheduleUpdate","props","children","hideWhenOutOfBounds","data-placement","className","classNames","overlayItem","Fragment","onClick","ReactDOM","createPortal","container","document","body","modifiers","referenceElement","current","PureComponent","defaultTypes","listensToClickOutside","ToggleButton","active","onToggle","text","fetchJson","a","url","fetch","response","status","json","data","Error","console","error","Promise","reject","LOADING","SUCCESS","ERROR","initialState","isLoading","transformBackendData","_","flow","get","values","map","item","song","track","chartLabel","chart_label","chartLevel","slice","chartType","mix","results","res","nickname","date","gained","isExactDate","exact_gained_date","score","perfect","great","greats","good","goods","bad","bads","miss","misses","combo","max_combo","mods","mods_list","isRank","rank_mode","orderBy","chartMinMax","ChartFilter","column","filter","onChange","filterValue","value","range","getOr","type","buttonText","t","step","min","max","r","renderTrack","onMouseDown","onTouchStart","height","display","width","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","justifyContent","alignItems","boxShadow","filterCharts","rows","row","_original","playersSelector","createSelector","flatMap","uniq","sortBy","identity","name","label","mapDispatchToProps","fetchTopScores","dispatch","TopScores","players","log","minWidth","maxWidth","Header","filterable","filterMethod","matchSorter","keys","filterAll","accessor","Filter","names","rowNames","every","includes","closeMenuOnSelect","classNamePrefix","placeholder","isMulti","options","Cell","original","key","message","columns","getColumns","showPageSizeOptions","defaultPageSize","sortable","resizable","minRows","noDataText","Component","connect","App","exact","path","component","Rankings","rootReducer","combineReducers","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","thunk","stateSanitizer","JavascriptTimeAgo","locale","en","render","getElementById"],"mappings":"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","file":"static/js/main.5ad33fef.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport toBe from 'prop-types';\r\nimport { Popper } from 'react-popper';\r\nimport classNames from 'classnames';\r\nimport listensToClickOutside from 'react-onclickoutside';\r\n\r\nimport './overlay.scss';\r\n\r\nconst POPPER_MODIFIERS = {\r\n  preventOverflow: {\r\n    enabled: true,\r\n    padding: 10,\r\n    boundariesElement: 'viewport',\r\n  },\r\n};\r\n\r\nconst PLACEMENT_ARROW_MAPPING = {\r\n  right: 'left',\r\n  left: 'right',\r\n  top: 'bottom',\r\n  bottom: 'top',\r\n};\r\n\r\nconst getArrowPlacement = placement => {\r\n  return placement && PLACEMENT_ARROW_MAPPING[placement.split('-')[0]];\r\n};\r\n\r\nclass Overlay extends React.PureComponent {\r\n  static propTypes = {\r\n    placement: toBe.string,\r\n    overlayItem: toBe.any,\r\n    hideWhenOutOfBounds: toBe.bool,\r\n  };\r\n\r\n  static defaultTypes = {\r\n    placement: 'bottom',\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isVisible: false,\r\n    };\r\n    this.containerItemRef = React.createRef();\r\n    this.renderPopper = this.renderPopper.bind(this);\r\n    this.toggleOverlayVisibility = this.toggleOverlayVisibility.bind(this);\r\n  }\r\n\r\n  hideOverlay() {\r\n    this.setState({\r\n      isVisible: false,\r\n    });\r\n  }\r\n\r\n  toggleOverlayVisibility() {\r\n    this.setState({\r\n      isVisible: !this.state.isVisible,\r\n    });\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    const preventHiding = event && event.target.closest('.inner-popper-overlay'); // prevent overlays from hiding when a modal is opened within overlay\r\n\r\n    if (!preventHiding) {\r\n      this.hideOverlay();\r\n    }\r\n  }\r\n\r\n  renderPopper({ ref, style, placement, arrowProps, scheduleUpdate, outOfBoundaries }) {\r\n    const { children, hideWhenOutOfBounds } = this.props;\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        data-placement={placement}\r\n        className={classNames(\r\n          'inner-popper-overlay',\r\n          `arrow-${getArrowPlacement(placement)}`,\r\n          // this.props.overlayClassName,\r\n          { 'out-of-bounds': outOfBoundaries && hideWhenOutOfBounds }\r\n        )}\r\n      >\r\n        <div className=\"arrow-hider\">\r\n          <div className=\"arrow\" ref={arrowProps.ref} style={arrowProps.style} />\r\n        </div>\r\n        <div\r\n          className=\"inner-popper-content\"\r\n          // ref={ref => this.setupPopperContentRef(scheduleUpdate, ref)}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { placement, overlayItem } = this.props;\r\n    const { isVisible } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"overlay-item\"\r\n          ref={this.containerItemRef}\r\n          onClick={this.toggleOverlayVisibility}\r\n        >\r\n          {overlayItem}\r\n        </div>\r\n        {isVisible &&\r\n          ReactDOM.createPortal(\r\n            <Popper\r\n              container={document.body}\r\n              modifiers={POPPER_MODIFIERS}\r\n              placement={placement}\r\n              referenceElement={this.containerItemRef.current}\r\n            >\r\n              {this.renderPopper}\r\n            </Popper>,\r\n            document.body\r\n          )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default listensToClickOutside(Overlay);\r\n","import React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './toggle-button.scss';\r\n\r\nexport default class ToggleButton extends React.PureComponent {\r\n  static propTypes = {\r\n    text: toBe.string,\r\n    onToggle: toBe.func,\r\n    active: toBe.bool,\r\n  };\r\n\r\n  render() {\r\n    const { active, onToggle, text } = this.props;\r\n    return (\r\n      <div\r\n        className={classNames('toggle-button', { active: active })}\r\n        onClick={() => onToggle(!active)}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const fetchJson = async ({ url }) => {\r\n  try {\r\n    const response = await fetch(url);\r\n    if (response.status >= 200 && response.status < 300) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      throw Error('HTTP Status ' + response.status);\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n","import _ from 'lodash/fp';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TOP/LOADING`;\r\nconst SUCCESS = `TOP/SUCCESS`;\r\nconst ERROR = `TOP/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nconst transformBackendData = _.flow(\r\n  _.get('top'),\r\n  _.values,\r\n  _.map(item => ({\r\n    song: item.track,\r\n    chartLabel: item.chart_label,\r\n    chartLevel: item.chart_label.slice(1),\r\n    chartType: item.chart_label.slice(0, 1),\r\n    mix: item.mix,\r\n    results: _.map(\r\n      res => ({\r\n        nickname: res.nickname,\r\n        date: res.gained,\r\n        isExactDate: !!res.exact_gained_date,\r\n        score: res.score,\r\n        perfect: res.perfect,\r\n        great: res.greats,\r\n        good: res.goods,\r\n        bad: res.bads,\r\n        miss: res.misses,\r\n        combo: res.max_combo,\r\n        mods: res.mods_list,\r\n        isRank: !!res.rank_mode,\r\n      }),\r\n      item.results\r\n    ),\r\n  })),\r\n  _.orderBy(['song', 'chartLabel'], ['asc', 'asc']),\r\n  data => ({ data })\r\n);\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        ...transformBackendData(action.data),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTopScores = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await fetchJson({\r\n        url: `${HOST}/top`,\r\n      });\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport ReactTable from 'react-table';\r\nimport matchSorter from 'match-sorter';\r\nimport { Range, getTrackBackground } from 'react-range';\r\nimport _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport Select from 'react-select';\r\n\r\nimport Overlay from 'components/Overlay/Overlay';\r\nimport ToggleButton from 'components/ToggleButton/ToggleButton';\r\n\r\nimport 'react-table/react-table.css';\r\nimport './rankings.scss';\r\n\r\nimport { fetchTopScores } from 'reducers/top';\r\n\r\nconst chartMinMax = [1, 29];\r\n\r\nfunction ChartFilter({ column, filter, onChange }) {\r\n  const filterValue = filter && filter.value;\r\n  const range = _.getOr(chartMinMax, 'value.range', filter);\r\n  const type = _.getOr(null, 'value.type', filter);\r\n  let buttonText = 'Filter charts';\r\n  if (filterValue) {\r\n    const t = type || '';\r\n    buttonText = range[0] === range[1] ? `${t}${range[0]}` : `${t}${range[0]}-${t}${range[1]}`;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Overlay\r\n        overlayItem={\r\n          <button className=\"filter-charts-button btn btn-sm btn-primary\">{buttonText}</button>\r\n        }\r\n      >\r\n        <div className=\"chart-range-overlay\">\r\n          <div className=\"buttons\">\r\n            <ToggleButton\r\n              text=\"S\"\r\n              active={!type || type === 'S'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  range,\r\n                  type: !active ? 'D' : null,\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"D\"\r\n              active={!type || type === 'D'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  range,\r\n                  type: !active ? 'S' : null,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <Range\r\n            values={range}\r\n            step={1}\r\n            min={chartMinMax[0]}\r\n            max={chartMinMax[1]}\r\n            onChange={r => onChange({ type, range: r })}\r\n            renderTrack={({ props, children }) => (\r\n              <div\r\n                onMouseDown={props.onMouseDown}\r\n                onTouchStart={props.onTouchStart}\r\n                style={{\r\n                  ...props.style,\r\n                  height: '10px',\r\n                  display: 'flex',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <div\r\n                  ref={props.ref}\r\n                  style={{\r\n                    height: '6px',\r\n                    width: '100%',\r\n                    borderRadius: '3px',\r\n                    background: getTrackBackground({\r\n                      values: range,\r\n                      colors: ['#ccc', '#337ab7', '#ccc'],\r\n                      min: chartMinMax[0],\r\n                      max: chartMinMax[1],\r\n                    }),\r\n                    alignSelf: 'center',\r\n                  }}\r\n                >\r\n                  {children}\r\n                </div>\r\n              </div>\r\n            )}\r\n            renderThumb={({ props, isDragged }) => (\r\n              <div\r\n                {...props}\r\n                style={{\r\n                  ...props.style,\r\n                  height: '12px',\r\n                  width: '12px',\r\n                  borderRadius: '6px',\r\n                  backgroundColor: '#FFF',\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  boxShadow: '0px 2px 3px #AAA',\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    height: '6px',\r\n                    width: '6px',\r\n                    borderRadius: '3px',\r\n                    backgroundColor: isDragged ? '#337ab7' : '#CCC',\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n          />\r\n        </div>\r\n      </Overlay>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst filterCharts = (filter, rows) => {\r\n  const range = _.getOr(chartMinMax, 'value.range', filter);\r\n  const type = _.getOr(null, 'value.type', filter);\r\n\r\n  const filtered = _.flow(\r\n    _.filter(row => {\r\n      return (\r\n        row._original.chartLevel >= range[0] &&\r\n        row._original.chartLevel <= range[1] &&\r\n        (!type || type === row._original.chartType)\r\n      );\r\n    })\r\n  )(rows);\r\n  return filtered;\r\n};\r\n\r\nconst playersSelector = createSelector(\r\n  state => state.top.data,\r\n  _.flow(\r\n    _.flatMap(_.get('results')),\r\n    _.map('nickname'),\r\n    _.uniq,\r\n    _.sortBy(_.identity),\r\n    _.map(name => ({ label: name, value: name }))\r\n  )\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    players: playersSelector(state),\r\n    data: state.top.data,\r\n    error: state.top.error,\r\n    isLoading: state.top.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopScores,\r\n};\r\n\r\nclass TopScores extends Component {\r\n  static propTypes = {\r\n    match: toBe.object,\r\n    data: toBe.array,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { isLoading } = this.props;\r\n    if (!isLoading) {\r\n      this.props.fetchTopScores();\r\n    }\r\n  }\r\n\r\n  getColumns() {\r\n    const { players } = this.props;\r\n    console.log(players);\r\n    return [\r\n      {\r\n        minWidth: 120,\r\n        maxWidth: 250,\r\n        Header: 'song',\r\n        filterable: true,\r\n        filterMethod: (filter, rows) => {\r\n          return matchSorter(rows, filter.value, { keys: ['song'] });\r\n        },\r\n        filterAll: true,\r\n        accessor: 'song',\r\n      },\r\n      {\r\n        minWidth: 95,\r\n        maxWidth: 95,\r\n        filterable: true,\r\n        filterAll: true,\r\n        Filter: ChartFilter,\r\n        filterMethod: filterCharts,\r\n        accessor: 'chartLabel',\r\n      },\r\n      {\r\n        filterable: true,\r\n        filterMethod: (filter, rows) => {\r\n          const names = _.map('value', _.get('value', filter));\r\n          return _.filter(row => {\r\n            const rowNames = _.map('nickname', row.results);\r\n            return _.every(name => rowNames.includes(name), names);\r\n          }, rows);\r\n        },\r\n        filterAll: true,\r\n        Filter: ({ column, filter, onChange }) => {\r\n          return (\r\n            <Select\r\n              closeMenuOnSelect={false}\r\n              className=\"select players\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"select players\"\r\n              isMulti\r\n              options={players}\r\n              value={_.get('value', filter)}\r\n              onChange={onChange}\r\n            />\r\n          );\r\n        },\r\n        Cell: props => (\r\n          <div>\r\n            {props.original.results.map(res => (\r\n              <div key={res.nickname}>\r\n                {res.nickname} - {res.score}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ),\r\n        accessor: 'results',\r\n      },\r\n    ];\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, data, error, players } = this.props;\r\n    return (\r\n      <div className=\"rankings\">\r\n        <header></header>\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-list\">\r\n            <ReactTable\r\n              data={data}\r\n              columns={this.getColumns()}\r\n              showPageSizeOptions={false}\r\n              defaultPageSize={20}\r\n              sortable\r\n              resizable={false}\r\n              minRows={4}\r\n              noDataText={isLoading ? 'loading...' : 'no data found'}\r\n              players={players}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TopScores);\r\n","export const HOST = 'https://vps720616.ovh.net:5000';\r\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport './App.scss';\n\nimport Rankings from 'components/Rankings/Rankings';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Route exact path=\"/\" component={Rankings} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport top from 'reducers/top';\r\n\r\nconst rootReducer = combineReducers({\r\n  top,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__\r\n    ? compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__({\r\n          stateSanitizer: state => ({\r\n            ...state,\r\n          }),\r\n        })\r\n      )\r\n    : applyMiddleware(thunk)\r\n);\r\n","// import 'promise-polyfill';\n// import 'whatwg-fetch';\n// import 'utils/polyfills';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport JavascriptTimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\n\nimport './index.scss';\nimport App from 'components/App';\nimport { store } from 'reducers';\n\nJavascriptTimeAgo.locale(en);\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}