{"version":3,"sources":["webpack:///./src/utils/workers/profilesPostProcess.js?f05c","utils/polyfills.js","constants/routes.js","constants/leaderboard.js","components/Shared/Overlay/Overlay.js","components/Shared/ToggleButton/ToggleButton.js","components/Shared/Loader/index.js","components/Shared/Input/Input.js","components/Shared/Toggle/Toggle.js","components/Shared/CollapsibleBar/index.js","components/Shared/Range/index.js","components/Leaderboard/ChartFilter.js","reducers/user/resetAction.js","utils/fetch.js","utils/expRanks.js","utils/exp.js","utils/achievements.js","utils/date.js","utils/workers/profilesPostProcess.js","constants/backend.js","constants/env.js","reducers/results.js","reducers/presets.js","components/Leaderboard/PresetsControl.js","utils/leaderboards.js","utils/colors.js","reducers/selectors.js","components/Leaderboard/Leaderboard.js","components/Ranking/RankingList.js","components/Ranking/RankingFaq.js","components/Ranking/Ranking.js","components/Profile/MostPlayed.js","components/Profile/ExpFaq.js","reducers/profiles.js","components/Profile/Profile.js","reducers/user/index.js","reducers/login.js","components/Shared/TopBar/TopBar.js","components/LoginScreen/LoginScreen.js","reducers/tracklist.js","components/App.js","reducers/index.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","Number","isNaN","value","Math","sign","x","Array","prototype","findIndex","Object","defineProperty","predicate","this","TypeError","o","len","length","thisArg","arguments","k","kValue","call","configurable","writable","routes","leaderboard","path","ranking","faq","profile","getPath","params","id","SORT","DEFAULT","PROTAGONIST","RANK_ASC","RANK_DESC","NEW_SCORES_PLAYER","CHART_MIN_MAX","DURATION","STD","SHORT","REMIX","FULL","DURATION_DEFAULT","_","values","POPPER_MODIFIERS","preventOverflow","enabled","padding","boundariesElement","PLACEMENT_ARROW_MAPPING","right","left","top","bottom","getArrowPlacement","placement","split","Overlay","state","isVisible","containerItemRef","React","createRef","renderPopper","bind","toggleOverlayVisibility","setState","event","target","closest","hideOverlay","ref","style","arrowProps","outOfBoundaries","scheduleUpdate","props","children","hideWhenOutOfBounds","data-placement","className","classNames","overlayClassName","overlayItem","Fragment","onClick","ReactDOM","createPortal","container","document","body","modifiers","referenceElement","current","PureComponent","defaultTypes","listensToClickOutside","ToggleButton","active","onToggle","text","Loader","width","height","viewBox","xmlns","fill","cx","cy","r","attributeName","from","to","begin","dur","calcMode","repeatCount","fillOpacity","Input","isNil","defaultValue","bindAll","prevProps","e","newValue","onChange","type","numericValue","min","max","onBlur","key","handleBlur","omit","onKeyPress","handleKeyPress","onInput","handleChange","noop","Component","defaultProps","Toggle","checked","uniqueId","htmlFor","CollapsibleBar","open","defaultOpen","title","Range","range","step","renderTrack","onMouseDown","onTouchStart","position","display","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","justifyContent","alignItems","boxShadow","ChartFilter","filterValue","onChangeEx","getOr","duration","buttonText","t","isEqual","isEmpty","newMin","newMax","includes","without","RESET","resetUser","fetchJson","url","request","method","postJson","JSON","stringify","headers","defaultHeaders","async","dispatch","getState","session","cookies","get","response","fetch","credentials","status","json","error","isObject","isString","Error","message","Promise","reject","ranks","threshold","iconName","color","gradeValue","F","D","C","B","A","S","SS","SSS","getExp","result","chart","isBestGradeOnChart","chartType","chartLevel","grade","getRankImg","rank","src","process","alt","achievements","icon","GiRank1","description","resultFunction","progress","combo","GiRank2","GiRank3","GiSmokingFinger","initialState","playedSongs","songsToPlay","song","uniq","GiRetroController","GiLoveSong","Улитка","GiSnail","charts","some","songToPlay","chartLabel","GiPodiumSecond","miss","bad","GiLifeBar","GiWoodenPegleg","good","great","initialAchievementState","parseDate","textDate","moment","toDate","Date","postProcessProfiles","profiles","tracklist","mapValues","neededGrades","expRank","findLast","exp","expRanks","expRankNext","find","double","single","gradeIncrementMap","keys","resultsByLevel","forEach","level","res","thisGrade","thisPlayerId","playerId","otherResults","results","filter","sort","a","b","indexOf","gradeIncArray","gradeInc","l","g","prog","incrementLevel","number","minimumNumber","totalCharts","round","sqrt","getMinimumNumber","data","bonusCoefficientNumber","bonus","getBonusForLevel","rating","accuracy","countAcc","sumAccuracy","getProcessedProfiles","battles","debug","processedProfiles","logText","dictChartElo","getDictChartEloId","score","enemyScore","sharedChartId","isRank","dictRatingDiff","getDictRatingDiffId","dictScoreInfo","p1","p2","scoreMultiplier","maxScore","isExactDate","scoreInfo","enemyScoreInfo","startingRating","battleCount","r1","r2","R1","R2","E1","E2","S1","S2","kRating1","kRating2","maxK1","maxK2","kLevel1","kLevel2","kLevel","kMinimizer","startsWith","K1","K2","dr1","dr2","baseEloId1","baseEloId2","baseEloP1","baseEloP2","ratingDiffId1","ratingDiffId2","ratingDiff","ratingDiffLast","floor","toFixed","playersSorted","flow","map","orderBy","battleDate","dateObject","player","index","lastPlace","rankingHistory","push","place","date","getTime","p1LastRating","last","ratingHistory","p2LastRating","toInteger","ratingRaw","now","processBattles","HOST","localStorage","window","debugOn","setItem","debugOff","removeItem","DEBUG","getItem","LOADING","SUCCESS","ERROR","SET_FILTER","RESET_FILTER","RANKING_CHANGE_SET","PROFILES_UPDATE","defaultFilter","showRank","showRankAndNorank","isLoading","isLoadingRanking","players","sharedCharts","gradeComparator","guessGrade","misses","bads","goods","greats","mapResult","recognition_notes","isUnknownPlayer","arcade_name","isIntermediateResult","shared_chart","nickname","nicknameArcade","gained","exact_gain_date","rank_mode","_r","originalChartMix","original_mix","originalChartLabel","original_label","originalScore","original_score","scoreIncrease","score_increase","calories","perfect","perfects","max_combo","mods","mods_list","isHJ","isMachineBest","isMyBest","maxTotalSteps","infos","fixableIndex","absentNumbersCount","localStepSum","i","isNumber","tryFixIncompleteResult","acc","accRaw","accuracyRaw","getMaxScore","initializeProfile","fromPairs","nameArcade","resultsByGrade","lastResultDate","count","grades","lastBattleDate","achName","getProfileInfoFromResult","replace","convert","cap","achState","fetchResults","shared_charts","mappedResults","getTopResultId","getBestGradeResultId","topResults","bestGradeResults","resRaw","sharedChart","label","toUpper","chart_label","match","track_name","max_total_steps","totalResultsCount","chartTop","topResultId","currentTopResult","oldScoreIndex","splice","newScoreIndex","sortedLastIndexBy","latestScoreDate","enemyResult","bestGradeResultId","currentBestGradeRes","chartId","maxScoreWithAccuracy","maxScoreResult","processData","toPairs","input","promise","worker","WorkerProfilesProcessing","profilesProcessing","console","log","calculateRankingChanges","terminate","setFilter","getListOfNames","getMapOfRatings","q","all","localForage","lastChangedRanking","lastChangedRankingPoints","lastFetchedRanking","listNow","listLastFetched","listLastChanged","mapPointsNow","mapPointsLastFetched","rankingsPointsMap","listPrev","warn","SELECT_PRESET","LOAD_PRESETS","LOADING_START","LOADING_END","presets","currentPreset","itemToOption","item","reloadPresets","startLoading","endLoading","selectPreset","openPreset","then","noPresetsMessage","mapDispatchToProps","loadPresets","savePreset","newPreset","confirm","withoutOldPreset","remove","newPresets","deletePreset","PresetsControl","onChangeSelection","selected","onRewritePreset","onSavePreset","isAddingNew","classNamePrefix","placeholder","options","noOptionsMessage","disabled","connect","TimeAgo","addLocale","ru","timeAgo","timeStyle","flavour","gradation","convenient","units","tooltipFormatter","toLocaleDateString","resultType","undefined","flexDirection","getTimeAgo","dayDiff","startOf","diff","hour","format","colorsArray","playersSelector","createSelector","sortBy","it","toLower","filteredDataSelector","names","namesOr","playersOr","namesNot","playersNot","sortingType","protagonist","excludeAntagonists","defaultSorting","newScoresProtagonistSorting","protagonistSorting","row","protIndex","protScore","enemies","take","uniqBy","distanceFromProtagonist","reduce","dist","enemy","getScoreSorting","direction","Infinity","sortingFunctions","compact","chartRange","items","rows","filterCharts","showOnlyRank","occuredNames","alreadyOccured","rowNames","every","size","matchSorter","ANIMATION_DURATION","sortingOptions","resetFilter","Leaderboard","showItemsCount","chartOverrides","curry","onRefresh","onTypeSongName","debounce","onRedoLatestResult","throttle","overrides","drop","onUndoLatestResult","undoedResult","maxBy","undoedPlayerId","previousPlayerResult","newResults","latestScore","overrideChart","renderSimpleSearch","renderFilters","closeMenuOnSelect","isMulti","renderSortings","isClearable","render","filteredData","canShowMore","visibleData","slice","showProtagonistRatingChange","highlightProtagonist","protagonistName","uniqueSelectedNames","preset","chartOriginal","chartIndex","first","topPlace","occuredNicknames","isSecondOccurenceInResults","singlep","doublep","coop","href","rel","isActive","currentIndex","canUndo","enterAnimation","leaveAnimation","typeName","maintainContainerHeight","nameIndex","placeDifference","newIndex","prevScore","findLastIndex","inf","empty","latest","fontWeight","vj","hj","content","tooltipClassName","numeral","exact","getGradeImg","RankingList","playerIndex","change","prevRating","down","up","RankingFaq","rankingSelector","Ranking","component","withRouter","useState","setLoading","limit","setLimit","setData","useEffect","success","catch","latestDate","ExpFaq","MIN_GRAPH_HEIGHT","defaultGradesDistribution","defaultGradesWithLevelsDistribution","flatMap","cutRange","array","startIndex","endIndex","firstElement","lastElement","profileSelector","levelsDistribution","y","singlesLevels","doublesLevels","gradesData","update","gradesDistribution","groupBy","pick","sum","gradesValues","gradesAndLevelsDistribution","groupedResults","counts","countBy","reduced","levelsData","lastTickRating","lastTickRanking","lastTick","firstTick","lastDay","endOf","minMaxRange","filterRange","dayRange","dayRangeMs","placesChanges","ratingChanges","setProfilesFilter","resetProfilesFilter","Profile","isLevelGraphCombined","showFaq","onChangeDayRange","onShowFaq","onHideFaq","componentWillUnmount","renderRankingHistory","minHeight","aspect","margin","strokeDasharray","dataKey","domain","tickFormatter","allowDecimals","stroke","isAnimationActive","payload","strokeWidth","dot","renderPlaceHistory","dataMax","interval","reversed","renderGrades","ticks","stackId","renderGradesWithLevels","stackOffset","doubleItems","singleItems","abs","dataMin","offset","renderLevels","totalD","totalS","renderGradeBlock","obj","typeLetter","progr","minNumber","currentNumber","levelString","complete","zero","renderAchievement","achievement","Icon","renderProfile","expProgress","ariaHideApp","isOpen","onRequestClose","ceil","MostPlayed","fetchUser","login","googleResponse","token","tokenId","set","expires","loginACs","logout","isLoadingLogin","isLoadingUser","user","isClown","setClown","onGoogleResponse","clientId","onSuccess","onFailure","cookiePolicy","fetchTracklist","rootReducer","combineReducers","action","hasPrevList","playerOriginal","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","getElementById"],"mappings":"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","file":"static/js/main.6b72ebd9.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"getProcessedProfiles\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"42c3116836c444bda469.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","/* eslint-disable */\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\r\nNumber.isNaN =\r\n  Number.isNaN ||\r\n  function(value) {\r\n    return value !== value;\r\n  };\r\n\r\nif (typeof Math.sign === 'undefined') {\r\n  Math.sign = function(x) {\r\n    return x > 0 ? 1 : x < 0 ? -1 : x;\r\n  };\r\n}\r\n\r\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\r\nif (!Array.prototype.findIndex) {\r\n  Object.defineProperty(Array.prototype, 'findIndex', {\r\n    value: function(predicate) {\r\n      // 1. Let O be ? ToObject(this value).\r\n      if (this == null) {\r\n        throw new TypeError('\"this\" is null or not defined');\r\n      }\r\n\r\n      var o = Object(this);\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('predicate must be a function');\r\n      }\r\n\r\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n      var thisArg = arguments[1];\r\n\r\n      // 5. Let k be 0.\r\n      var k = 0;\r\n\r\n      // 6. Repeat, while k < len\r\n      while (k < len) {\r\n        // a. Let Pk be ! ToString(k).\r\n        // b. Let kValue be ? Get(O, Pk).\r\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n        // d. If testResult is true, return k.\r\n        var kValue = o[k];\r\n        if (predicate.call(thisArg, kValue, k, o)) {\r\n          return k;\r\n        }\r\n        // e. Increase k by 1.\r\n        k++;\r\n      }\r\n\r\n      // 7. Return -1.\r\n      return -1;\r\n    },\r\n    configurable: true,\r\n    writable: true,\r\n  });\r\n}\r\n","export const routes = {\r\n  leaderboard: {\r\n    path: `/leaderboard`,\r\n  },\r\n  ranking: {\r\n    path: `/ranking`,\r\n    faq: {\r\n      path: '/ranking/faq',\r\n    },\r\n  },\r\n  profile: {\r\n    path: `/profiles/:id`,\r\n    getPath: params => `/profiles/${params.id}`,\r\n  },\r\n};\r\n","import _ from 'lodash/fp';\r\n\r\nexport const SORT = {\r\n  DEFAULT: 'default',\r\n  PROTAGONIST: 'protagonist',\r\n  RANK_ASC: 'rankAsc',\r\n  RANK_DESC: 'rankDesc',\r\n  NEW_SCORES_PLAYER: 'newScoresPlayer',\r\n};\r\n\r\nexport const CHART_MIN_MAX = [1, 28];\r\nexport const DURATION = {\r\n  STD: 'Standard',\r\n  SHORT: 'Short',\r\n  REMIX: 'Remix',\r\n  FULL: 'Full',\r\n};\r\nexport const DURATION_DEFAULT = _.values(DURATION);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport toBe from 'prop-types';\r\nimport { Popper } from 'react-popper';\r\nimport classNames from 'classnames';\r\nimport listensToClickOutside from 'react-onclickoutside';\r\n\r\nimport './overlay.scss';\r\n\r\nconst POPPER_MODIFIERS = {\r\n  preventOverflow: {\r\n    enabled: true,\r\n    padding: 10,\r\n    boundariesElement: 'viewport',\r\n  },\r\n};\r\n\r\nconst PLACEMENT_ARROW_MAPPING = {\r\n  right: 'left',\r\n  left: 'right',\r\n  top: 'bottom',\r\n  bottom: 'top',\r\n};\r\n\r\nconst getArrowPlacement = placement => {\r\n  return placement && PLACEMENT_ARROW_MAPPING[placement.split('-')[0]];\r\n};\r\n\r\nclass Overlay extends React.PureComponent {\r\n  static propTypes = {\r\n    placement: toBe.string,\r\n    overlayItem: toBe.any,\r\n    hideWhenOutOfBounds: toBe.bool,\r\n  };\r\n\r\n  static defaultTypes = {\r\n    placement: 'bottom',\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isVisible: false,\r\n    };\r\n    this.containerItemRef = React.createRef();\r\n    this.renderPopper = this.renderPopper.bind(this);\r\n    this.toggleOverlayVisibility = this.toggleOverlayVisibility.bind(this);\r\n  }\r\n\r\n  hideOverlay() {\r\n    this.setState({\r\n      isVisible: false,\r\n    });\r\n  }\r\n\r\n  toggleOverlayVisibility() {\r\n    this.setState({\r\n      isVisible: !this.state.isVisible,\r\n    });\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    const preventHiding = event && event.target.closest('.inner-popper-overlay'); // prevent overlays from hiding when a modal is opened within overlay\r\n\r\n    if (!preventHiding) {\r\n      this.hideOverlay();\r\n    }\r\n  }\r\n\r\n  renderPopper({ ref, style, placement, arrowProps, scheduleUpdate, outOfBoundaries }) {\r\n    const { children, hideWhenOutOfBounds } = this.props;\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        data-placement={placement}\r\n        className={classNames(\r\n          'inner-popper-overlay',\r\n          `arrow-${getArrowPlacement(placement)}`,\r\n          this.props.overlayClassName,\r\n          { 'out-of-bounds': outOfBoundaries && hideWhenOutOfBounds }\r\n        )}\r\n      >\r\n        <div className=\"arrow-hider\">\r\n          <div className=\"arrow\" ref={arrowProps.ref} style={arrowProps.style} />\r\n        </div>\r\n        <div\r\n          className=\"inner-popper-content\"\r\n          // ref={ref => this.setupPopperContentRef(scheduleUpdate, ref)}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { placement, overlayItem } = this.props;\r\n    const { isVisible } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"overlay-item\"\r\n          ref={this.containerItemRef}\r\n          onClick={this.toggleOverlayVisibility}\r\n        >\r\n          {overlayItem}\r\n        </div>\r\n        {isVisible &&\r\n          ReactDOM.createPortal(\r\n            <Popper\r\n              container={document.body}\r\n              modifiers={POPPER_MODIFIERS}\r\n              placement={placement}\r\n              referenceElement={this.containerItemRef.current}\r\n            >\r\n              {this.renderPopper}\r\n            </Popper>,\r\n            document.body\r\n          )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default listensToClickOutside(Overlay);\r\n","import React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './toggle-button.scss';\r\n\r\nexport default class ToggleButton extends React.PureComponent {\r\n  static propTypes = {\r\n    text: toBe.string,\r\n    onToggle: toBe.func,\r\n    active: toBe.bool,\r\n  };\r\n\r\n  render() {\r\n    const { active, onToggle, text } = this.props;\r\n    return (\r\n      <div\r\n        className={classNames('toggle-button', { active: active })}\r\n        onClick={() => onToggle(!active)}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport './loader.scss';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"loader\">\r\n      <svg\r\n        width=\"40\"\r\n        height=\"12\"\r\n        viewBox=\"0 0 120 30\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"#eee\"\r\n      >\r\n        <circle cx=\"15\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"60\" cy=\"15\" r=\"9\" fillOpacity=\"0.3\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"9\"\r\n            to=\"9\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"9;15;9\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"0.5\"\r\n            to=\"0.5\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\".5;1;.5\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"105\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react/no-deprecated */\r\n// imports from vendor deps\r\nimport React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\n\r\n// imports from styles\r\nexport default class Input extends React.Component {\r\n  static propTypes = {\r\n    value: toBe.any,\r\n    defaultValue: toBe.any,\r\n    onChange: toBe.func,\r\n    onBlur: toBe.func,\r\n    type: toBe.string,\r\n    className: toBe.string,\r\n    trimOnBlur: toBe.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    value: null,\r\n    type: 'text',\r\n    onChange: _.noop,\r\n    onBlur: _.noop,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: (!_.isNil(props.value) ? props.value : props.defaultValue) || '',\r\n    };\r\n    _.bindAll(['handleChange', 'handleBlur', 'handleKeyPress'], this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.value !== this.props.value) {\r\n      this.setState({ value: this.props.value });\r\n    }\r\n  }\r\n\r\n  handleChange(e) {\r\n    const newValue = e.target.value;\r\n    this.setState({ value: newValue }, () => this.props.onChange(newValue));\r\n  }\r\n\r\n  handleBlur(e) {\r\n    const { type } = this.props;\r\n    const { value } = this.state;\r\n    if (type === 'number') {\r\n      const numericValue = Number(value);\r\n      if (numericValue >= Number(e.target.min) && numericValue <= Number(e.target.max)) {\r\n        this.props.onBlur(numericValue, e);\r\n      } else {\r\n        this.setState({ value: this.props.value });\r\n        this.props.onBlur(this.props.value, e);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleKeyPress(e) {\r\n    if (e.key === 'Enter') {\r\n      this.handleBlur(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props;\r\n\r\n    // HACK: This component uses onInput instead of onChange\r\n    // because IE11 fails to call onChange events when you paste/cut using context menu (RMB)\r\n    // We're using onInput because it works fine, and because for text input\r\n    // there's no difference between how onChange and onInput work\r\n    return (\r\n      <input\r\n        {..._.omit(['defaultValue', 'onChange'], this.props)}\r\n        className={classNames(className, 'text-input')}\r\n        value={this.state.value}\r\n        onBlur={this.handleBlur}\r\n        onKeyPress={this.handleKeyPress}\r\n        onInput={this.handleChange}\r\n        onChange={_.noop} // Handled by onInput\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './toggle.scss';\r\n\r\n// imports from styles\r\nexport default class Toggle extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.id = _.uniqueId();\r\n  }\r\n\r\n  onChange = e => {\r\n    this.props.onChange(e.target.checked);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"toggle-checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle-checkbox-cb\"\r\n          id={this.id}\r\n          onChange={this.onChange}\r\n          checked={this.props.checked}\r\n        />\r\n        <label htmlFor={this.id} className=\"toggle\">\r\n          <span></span>\r\n        </label>\r\n        <label htmlFor={this.id} className=\"text-label\">\r\n          {this.props.children}\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\nimport './styles.scss';\r\n\r\nexport default class CollapsibleBar extends PureComponent {\r\n  static propTypes = {\r\n    className: toBe.string,\r\n    children: toBe.any,\r\n    title: toBe.any,\r\n    defaultOpen: toBe.bool,\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = { open: props.defaultOpen || false };\r\n  }\r\n\r\n  render() {\r\n    const { children, title, className } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classNames('collapsible-bar', className, { open })}>\r\n        <div className=\"header\" onClick={() => this.setState(state => ({ open: !state.open }))}>\r\n          <div className=\"collapse-button\">\r\n            <FaChevronRight />\r\n          </div>\r\n          <div className=\"title\">{title}</div>\r\n        </div>\r\n        {children && <div className=\"collapsible-children\">{children}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Range as ReactRange, getTrackBackground } from 'react-range';\r\n\r\nexport default function Range({ range, min, max, onChange }) {\r\n  return (\r\n    <ReactRange\r\n      values={range}\r\n      step={1}\r\n      min={min}\r\n      max={max}\r\n      onChange={onChange}\r\n      renderTrack={({ props, children }) => (\r\n        <div\r\n          onMouseDown={props.onMouseDown}\r\n          onTouchStart={props.onTouchStart}\r\n          style={{\r\n            ...props.style,\r\n            position: 'relative',\r\n            height: '10px',\r\n            display: 'flex',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <div\r\n            ref={props.ref}\r\n            style={{\r\n              height: '6px',\r\n              width: '100%',\r\n              borderRadius: '3px',\r\n              background: getTrackBackground({\r\n                values: range,\r\n                colors: ['#ccc', '#88d3ff', '#ccc'],\r\n                min,\r\n                max,\r\n              }),\r\n              alignSelf: 'center',\r\n            }}\r\n          >\r\n            {children}\r\n          </div>\r\n        </div>\r\n      )}\r\n      renderThumb={({ props, isDragged }) => (\r\n        <div\r\n          {...props}\r\n          style={{\r\n            ...props.style,\r\n            height: '12px',\r\n            width: '12px',\r\n            borderRadius: '6px',\r\n            backgroundColor: '#FFF',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            boxShadow: '0px 2px 3px #AAA',\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              height: '6px',\r\n              width: '6px',\r\n              borderRadius: '3px',\r\n              backgroundColor: isDragged ? '#88d3ff' : '#CCC',\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\nimport { FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Range from 'components/Shared/Range';\r\n\r\nimport { CHART_MIN_MAX, DURATION_DEFAULT, DURATION } from 'constants/leaderboard';\r\n\r\nexport default function ChartFilter({ filterValue, onChange: onChangeEx }) {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filterValue);\r\n  const type = _.getOr(null, 'type', filterValue);\r\n  const duration = _.getOr(DURATION_DEFAULT, 'duration', filterValue);\r\n\r\n  let buttonText = 'фильтр чартов';\r\n  if (filterValue) {\r\n    const t = type || '';\r\n    buttonText = range[0] === range[1] ? `${t}${range[0]}` : `${t}${range[0]} - ${t}${range[1]}`;\r\n    buttonText = 'чарты: ' + buttonText;\r\n    if (!_.isEqual(duration, DURATION_DEFAULT)) {\r\n      buttonText += ' ***';\r\n      // buttonText += ` (${_.values(DURATION)\r\n      //   .filter(dur => duration.includes(dur))\r\n      //   .map(s => s.slice(0, 2))\r\n      //   .join('-')})`;\r\n    }\r\n  }\r\n\r\n  const onChange = value => {\r\n    onChangeEx({\r\n      range,\r\n      type,\r\n      ...value,\r\n      duration: _.isEmpty(value.duration) ? duration : value.duration,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Overlay\r\n        overlayClassName=\"chart-range-overlay-outer\"\r\n        overlayItem={\r\n          <button className=\"filter-charts-button btn btn-sm btn-dark\">{buttonText}</button>\r\n        }\r\n      >\r\n        <div className=\"chart-range-overlay\">\r\n          <div className=\"buttons\">\r\n            <ToggleButton\r\n              text=\"Single\"\r\n              active={type === 'S'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  type: active ? 'S' : null,\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Double\"\r\n              active={type === 'D'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  type: active ? 'D' : null,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <Range\r\n            range={range}\r\n            min={CHART_MIN_MAX[0]}\r\n            max={CHART_MIN_MAX[1]}\r\n            onChange={r => onChange({ range: r })}\r\n          />\r\n          <div className=\"inputs\">\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  range: [Math.max(range[0] - 1, CHART_MIN_MAX[0]), range[1]],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={CHART_MIN_MAX[0]}\r\n              max={Math.min(CHART_MIN_MAX[1], range[1])}\r\n              value={range[0]}\r\n              onBlur={value => {\r\n                onChange({ range: [value, range[1]] });\r\n              }}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMin = Math.min(range[0] + 1, CHART_MIN_MAX[1]);\r\n                onChange({\r\n                  range: [newMin, range[1] < newMin ? newMin : range[1]],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMax = Math.max(range[1] - 1, CHART_MIN_MAX[0]);\r\n                onChange({\r\n                  range: [range[0] > newMax ? newMax : range[0], newMax],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={Math.max(CHART_MIN_MAX[0], range[0])}\r\n              max={CHART_MIN_MAX[1]}\r\n              value={range[1]}\r\n              onBlur={value => onChange({ range: [range[0], value] })}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  range: [range[0], Math.min(range[1] + 1, CHART_MIN_MAX[1])],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n          </div>\r\n          <div className=\"buttons-duration\">\r\n            <ToggleButton\r\n              text=\"Standard\"\r\n              active={duration.includes(DURATION.STD)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.STD]\r\n                    : _.without([DURATION.STD], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Short\"\r\n              active={duration.includes(DURATION.SHORT)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.SHORT]\r\n                    : _.without([DURATION.SHORT], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Remix\"\r\n              active={duration.includes(DURATION.REMIX)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.REMIX]\r\n                    : _.without([DURATION.REMIX], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Full\"\r\n              active={duration.includes(DURATION.FULL)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.FULL]\r\n                    : _.without([DURATION.FULL], duration),\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Overlay>\r\n    </div>\r\n  );\r\n}\r\n","export const RESET = `USER/RESET`;\r\nexport const resetUser = () => ({ type: RESET });\r\n","import _ from 'lodash/fp';\r\nimport cookies from 'browser-cookies';\r\n\r\nimport { resetUser } from 'reducers/user/resetAction';\r\n\r\nexport const fetchJson = ({ url }) => request({ url, method: 'get' });\r\nexport const postJson = ({ url, body }) =>\r\n  request({\r\n    url,\r\n    method: 'post',\r\n    body: JSON.stringify(body),\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n    },\r\n  });\r\n\r\nconst defaultHeaders = {};\r\n\r\nexport const request = ({ url, method, body, headers }) => async (dispatch, getState) => {\r\n  try {\r\n    const session = cookies.get('session');\r\n    if (session) {\r\n      defaultHeaders['Session'] = session;\r\n    }\r\n    const response = await fetch(url, {\r\n      method,\r\n      body,\r\n      headers: { ...defaultHeaders, ...headers },\r\n      credentials: 'include',\r\n    });\r\n    if (response.status >= 200 && response.status < 300) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      const error = await response.json();\r\n      if (_.isObject(error) && _.isString(error.error)) {\r\n        throw new Error(error.error);\r\n      } else if (_.isString(error)) {\r\n        throw new Error(error);\r\n      } else {\r\n        throw new Error('HTTP Status ' + response.status);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    if (error.message === 'Invalid session') {\r\n      dispatch(resetUser());\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n","export const ranks = [\r\n  {\r\n    threshold: 0,\r\n    iconName: '0.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 1000,\r\n    iconName: '1.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 2000,\r\n    iconName: '2.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 3000,\r\n    iconName: '3.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 4000,\r\n    iconName: '4.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 5000,\r\n    iconName: '5.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 6250,\r\n    iconName: '6.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 7500,\r\n    iconName: '7.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 8750,\r\n    iconName: '8.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 10000,\r\n    iconName: '9.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 12000,\r\n    iconName: '10.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 14000,\r\n    iconName: '11.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 16000,\r\n    iconName: '12.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 18000,\r\n    iconName: '13.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 22000,\r\n    iconName: '14.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 26000,\r\n    iconName: '15.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 30000,\r\n    iconName: '16.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 35000,\r\n    iconName: '17.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 40000,\r\n    iconName: '18.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 50000,\r\n    iconName: '19.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 60000,\r\n    iconName: '20.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 70000,\r\n    iconName: '21.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 80000,\r\n    iconName: '22.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 100000,\r\n    iconName: '23.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 120000,\r\n    iconName: '24.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 140000,\r\n    iconName: '25.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 160000,\r\n    iconName: '26.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 180000,\r\n    iconName: '27.png',\r\n    color: 'green',\r\n  },\r\n];\r\n","import React from 'react';\r\n\r\nexport const gradeValue = {\r\n  F: 0.1,\r\n  D: 0.2,\r\n  'D+': 0.3,\r\n  C: 0.3,\r\n  'C+': 0.5,\r\n  B: 0.5,\r\n  'B+': 0.8,\r\n  A: 0.8,\r\n  'A+': 1,\r\n  S: 1.1,\r\n  SS: 1.2,\r\n  SSS: 1.2,\r\n};\r\n\r\nexport const getExp = (result, chart) => {\r\n  if (!result.isBestGradeOnChart) {\r\n    return 0;\r\n  }\r\n  if (chart.chartType === 'COOP') {\r\n    return (chart.chartLevel * 1000 * (gradeValue[result.grade] || 0.8)) / 8;\r\n  }\r\n  const exp = (chart.chartLevel ** 2.31 * (gradeValue[result.grade] || 0.8)) / 9;\r\n  return exp;\r\n};\r\n\r\nexport const getRankImg = rank => (\r\n  <img\r\n    className={rank.color}\r\n    src={`${process.env.PUBLIC_URL}/ranks/${rank.iconName}`}\r\n    alt={rank.threshold}\r\n  />\r\n);\r\n\r\nexport { ranks } from './expRanks';\r\n","import _ from 'lodash/fp';\r\n\r\nimport {\r\n  GiLoveSong,\r\n  GiLifeBar,\r\n  GiSmokingFinger,\r\n  GiSnail,\r\n  GiRetroController,\r\n  GiRank1,\r\n  GiRank2,\r\n  GiRank3,\r\n  GiWoodenPegleg,\r\n  GiPodiumSecond,\r\n} from 'react-icons/gi';\r\n\r\nexport const achievements = {\r\n  '500 комбо': {\r\n    icon: GiRank1,\r\n    description: 'Заработать 500+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 500 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  '1000 комбо': {\r\n    icon: GiRank2,\r\n    description: 'Заработать 1000+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 1000 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  '2000 комбо': {\r\n    icon: GiRank3,\r\n    description: 'Заработать 2000+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 2000 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Мастер фингеринга': {\r\n    icon: GiSmokingFinger,\r\n    description: 'Сыграть все Fingers треки',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: ['Monkey Fingers', 'Kimchi Fingers', 'Monkey Fingers 2', 'Money Fingers'],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  '8-bit': {\r\n    icon: GiRetroController,\r\n    description: 'Сыграть Seize My Day, Tales of Pumpnia и Pumptris (8bit ver.)',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: ['Seize My Day', 'Tales of Pumpnia', 'Pumptris (8bit ver.)'],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  'Love is...': {\r\n    icon: GiLoveSong,\r\n    description: 'Сыграть все Love is a Danger Zone треки',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: [\r\n        'Love is a Danger Zone',\r\n        'Love is a Danger Zone [SHORT]',\r\n        'Love is a Danger Zone (Cranky Mix)',\r\n        'Love is a Danger Zone 2',\r\n        'Love is a Danger Zone 2 [SHORT]',\r\n        'Love is a Danger Zone 2 [FULL]',\r\n        'Love is a Danger Zone 2 (D&G Ver.)',\r\n        'Love is a Danger Zone (try to B.P.M.)',\r\n      ],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  Улитка: {\r\n    icon: GiSnail,\r\n    description:\r\n      'Мастер замедлений: сыграть старшие чарты Twist of Fate, Karyawisata, Awakening и Moonlight',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: [\r\n        { song: 'Twist of Fate (feat. Ruriling)', charts: ['D20', 'S19'] },\r\n        { song: 'Karyawisata', charts: ['S20', 'D16'] },\r\n        { song: 'Awakening', charts: ['S19', 'D20'] },\r\n        { song: 'Moonlight', charts: ['S19', 'D21'] },\r\n      ],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.some(\r\n        songToPlay => chart.song === songToPlay.song && songToPlay.charts.includes(chart.chartLabel)\r\n      )\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  'Коричневая S': {\r\n    icon: GiPodiumSecond,\r\n    description: 'Получить S, но 5+ бэдов',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.miss === 0 && result.bad >= 5 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Мы выживали как могли': {\r\n    icon: GiLifeBar,\r\n    description: 'Получить B или ниже, но удержать лайфбар',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress:\r\n          state.progress === 100 ? 100 : ['B+', 'C+', 'D+'].includes(result.grade) ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Падовый мисс': {\r\n    icon: GiWoodenPegleg,\r\n    description: 'Когда от SSS тебя удерживают только миссы из-за плохого моддинга падов',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress:\r\n          state.progress === 100\r\n            ? 100\r\n            : result.miss > 0 && result.bad === 0 && result.good === 0 && result.great === 0\r\n            ? 100\r\n            : 0,\r\n      };\r\n    },\r\n  },\r\n};\r\n\r\nexport const initialAchievementState = {\r\n  progress: 0,\r\n};\r\n","import moment from 'moment';\r\n\r\nexport const parseDate = textDate => {\r\n  if (typeof textDate === 'string') {\r\n    return moment(textDate, 'YYYY-MM-DD HH:mm:ss').toDate();\r\n  } else {\r\n    return new Date(textDate);\r\n  }\r\n};\r\n","import _ from 'lodash/fp';\r\n\r\nimport { ranks as expRanks } from 'utils/expRanks';\r\n\r\nconst processBattles = ({ battles, profiles, debug }) => {\r\n  let logText = '';\r\n  const dictChartElo = {};\r\n  const getDictChartEloId = (score, enemyScore) =>\r\n    `${score.playerId}vs${enemyScore.playerId}-${score.sharedChartId}-${score.isRank}`;\r\n  const dictRatingDiff = {};\r\n  const getDictRatingDiffId = score => `${score.playerId}-${score.sharedChartId}-${score.isRank}`;\r\n  const dictScoreInfo = {};\r\n  battles.forEach(([score, enemyScore, song]) => {\r\n    // For each battle\r\n    const p1 = profiles[score.playerId];\r\n    const p2 = profiles[enemyScore.playerId];\r\n\r\n    const scoreMultiplier = score.isRank ? 1.2 : 1;\r\n    let maxScore = null;\r\n    if (song.maxScore) {\r\n      maxScore = song.maxScore * scoreMultiplier;\r\n      if (\r\n        Math.max(maxScore, score.score, enemyScore.score) !== maxScore &&\r\n        !score.isRank &&\r\n        (!score.isExactDate || !enemyScore.isExactDate)\r\n      ) {\r\n        maxScore *= 1.2;\r\n        // Rank from machine best wasn't recognized most likely.\r\n        // Increasing max score by 20% is fine\r\n      }\r\n      if (Math.max(maxScore, score.score, enemyScore.score) !== maxScore) {\r\n        // If calculated max score isn't max score anyway, use current scores as max + cherry on top\r\n        maxScore = Math.max(maxScore, score.score, enemyScore.score) + 10000;\r\n      }\r\n    }\r\n\r\n    // Data to be appended to every score outside of this thread\r\n    if (!dictScoreInfo[score.id]) dictScoreInfo[score.id] = {};\r\n    if (!dictScoreInfo[enemyScore.id]) dictScoreInfo[enemyScore.id] = {};\r\n    const scoreInfo = dictScoreInfo[score.id];\r\n    const enemyScoreInfo = dictScoreInfo[enemyScore.id];\r\n\r\n    // Rating at the start of battle for this score\r\n    if (!scoreInfo.startingRating) scoreInfo.startingRating = p1.rating;\r\n    if (!enemyScoreInfo.startingRating) enemyScoreInfo.startingRating = p2.rating;\r\n\r\n    // Counting the number of battles\r\n    p1.battleCount++;\r\n    p2.battleCount++;\r\n\r\n    // This is one match between two players\r\n    //// Elo formula\r\n    // const r1 = score.startingRating;\r\n    // const r2 = enemyScore.startingRating;\r\n    const r1 = p1.rating;\r\n    const r2 = p2.rating;\r\n    const R1 = 10 ** (r1 / 400);\r\n    const R2 = 10 ** (r2 / 400);\r\n    const E1 = R1 / (R1 + R2);\r\n    const E2 = R2 / (R1 + R2);\r\n    let A = score.score;\r\n    let B = enemyScore.score;\r\n    let S1, S2;\r\n    if (A === B) {\r\n      S1 = S2 = 0.5;\r\n    } else if (maxScore && A !== 0 && B !== 0) {\r\n      A = maxScore / A - 1;\r\n      B = maxScore / B - 1;\r\n      S1 = (B / (A + B) - 0.5) * 5 + 0.5;\r\n      S2 = (A / (A + B) - 0.5) * 5 + 0.5;\r\n    } else {\r\n      S1 = A > B ? 1 : B < A ? 0 : 0.5;\r\n      S2 = 1 - S1;\r\n    }\r\n    S1 = Math.max(0, Math.min(1, S1)); // Set strict boundaries to [0, 1]\r\n    S2 = Math.max(0, Math.min(1, S2));\r\n\r\n    const kRating1 = Math.max(0, Math.min(1, (r1 - 700) / 800));\r\n    const kRating2 = Math.max(0, Math.min(1, (r2 - 700) / 800));\r\n    const maxK1 = 30 + 20 * kRating1;\r\n    const maxK2 = 30 + 20 * kRating2;\r\n    const kLevel1 = Math.max(\r\n      1,\r\n      Math.min(maxK1, (song.chartLevel / 25) ** ((kRating1 - 0.5) * 5 + 2.5) * maxK1)\r\n    );\r\n    const kLevel2 = Math.max(\r\n      1,\r\n      Math.min(maxK2, (song.chartLevel / 25) ** ((kRating2 - 0.5) * 5 + 2.5) * maxK2)\r\n    );\r\n    const kLevel = Math.min(kLevel1, kLevel2);\r\n\r\n    // When YOU vs ENEMY both have SS/SSS, and both scores are very close to SSS, this battle will NOT affect ELO too much\r\n    let kMinimizer = 1;\r\n    const kDropCutoff = 0.98; // Score is 98% of max score or higher -- K will be lower\r\n    if (\r\n      song.maxScore &&\r\n      (score.grade.startsWith('SS') || (score.miss === 0 && score.bad === 0)) &&\r\n      (enemyScore.grade.startsWith('SS') || (enemyScore.miss === 0 && enemyScore.bad === 0)) &&\r\n      score.score / maxScore > kDropCutoff &&\r\n      enemyScore.score / maxScore > kDropCutoff\r\n    ) {\r\n      kMinimizer =\r\n        Math.max(\r\n          Math.min(\r\n            1,\r\n            Math.max(\r\n              100 - (100 * score.score) / maxScore,\r\n              100 - (100 * enemyScore.score) / maxScore\r\n            ) /\r\n              (100 - kDropCutoff * 100)\r\n          ),\r\n          0\r\n        ) ** 2;\r\n    }\r\n\r\n    const K1 = kLevel * kMinimizer;\r\n    const K2 = kLevel * kMinimizer;\r\n    let dr1 = K1 * (S1 - E1);\r\n    let dr2 = K2 * (S2 - E2);\r\n    // Do not decrease rating if you have SSS - RIP zero-sum algorithm\r\n    dr1 = dr1 < 0 && score.grade === 'SSS' ? 0 : dr1;\r\n    dr2 = dr2 < 0 && enemyScore.grade === 'SSS' ? 0 : dr2;\r\n    // Recording this value for display\r\n    const baseEloId1 = getDictChartEloId(score, enemyScore);\r\n    const baseEloId2 = getDictChartEloId(enemyScore, score);\r\n    const baseEloP1 = dictChartElo[baseEloId1] || 0;\r\n    const baseEloP2 = dictChartElo[baseEloId2] || 0;\r\n    dictChartElo[baseEloId1] = dr1;\r\n    dictChartElo[baseEloId2] = dr2;\r\n\r\n    // Change rating as a result of this battle\r\n    p1.rating = p1.rating + dr1 - baseEloP1;\r\n    p2.rating = p2.rating + dr2 - baseEloP2;\r\n\r\n    const ratingDiffId1 = getDictRatingDiffId(score);\r\n    const ratingDiffId2 = getDictRatingDiffId(enemyScore);\r\n    dictRatingDiff[ratingDiffId1] = (dictRatingDiff[ratingDiffId1] || 0) + dr1 - baseEloP1;\r\n    dictRatingDiff[ratingDiffId2] = (dictRatingDiff[ratingDiffId2] || 0) + dr2 - baseEloP2;\r\n\r\n    // Q\r\n    scoreInfo.ratingDiff = dictRatingDiff[ratingDiffId1];\r\n    scoreInfo.ratingDiffLast = dr1 - baseEloP1;\r\n\r\n    enemyScoreInfo.ratingDiff = dictRatingDiff[ratingDiffId2];\r\n    enemyScoreInfo.ratingDiffLast = dr2 - baseEloP2;\r\n\r\n    if (debug) {\r\n      // if (score.sharedChartId === 5292) {\r\n      // if (song.song === 'Club Night') {\r\n      // if (score.nickname === 'Liza' || enemyScore.nickname === 'Liza') {\r\n      // if (!song.maxScore) {\r\n      logText += `${song.chartLabel} - ${song.song} (${song.sharedChartId}) - ${\r\n        profiles[score.playerId].name\r\n      } / ${profiles[enemyScore.playerId].name}\r\n- ${score.score} / ${enemyScore.score} (${Math.floor(maxScore)} (${Math.floor(\r\n        song.maxScore * scoreMultiplier\r\n      )})) - R ${S1.toFixed(2)}/${S2.toFixed(2)} E ${E1.toFixed(2)} / ${E2.toFixed(2)}\r\n- Rating ${r1.toFixed(2)} / ${r2.toFixed(2)} - ${dr1.toFixed(2)} / ${dr2.toFixed(\r\n        2\r\n      )} - K ${K1.toFixed(2)} ${K2.toFixed(2)}${\r\n        kMinimizer === 1 ? '' : ` (coef ${kMinimizer.toFixed(2)})`\r\n      }\r\n- Base elo: ${baseEloP1.toFixed(2)} / ${baseEloP2.toFixed(2)}\r\n- Elo change: ${(dr1 - baseEloP1).toFixed(2)} / ${(dr2 - baseEloP2).toFixed(2)}\r\n- New base elo: ${dictChartElo[baseEloId1].toFixed(2)} / ${dictChartElo[baseEloId2].toFixed(2)}\r\n- RD: ${dictRatingDiff[ratingDiffId1].toFixed(2)} / ${dictRatingDiff[ratingDiffId2].toFixed(2)}\\n`;\r\n    }\r\n    // Rating floor\r\n    p1.rating = Math.max(100, p1.rating);\r\n    p2.rating = Math.max(100, p2.rating);\r\n\r\n    const playersSorted = _.flow(\r\n      _.keys,\r\n      _.map(id => ({ id, rating: profiles[id].rating })),\r\n      _.orderBy(['rating'], ['desc'])\r\n    )(profiles);\r\n    const battleDate =\r\n      score.dateObject > enemyScore.dateObject ? score.dateObject : enemyScore.dateObject;\r\n    playersSorted.forEach((player, index) => {\r\n      const lastPlace = profiles[player.id].lastPlace;\r\n      if (lastPlace !== index + 1) {\r\n        profiles[player.id].rankingHistory.push({\r\n          place: index + 1,\r\n          date: battleDate.getTime(),\r\n        });\r\n        profiles[player.id].lastPlace = index + 1;\r\n      }\r\n    });\r\n\r\n    const p1LastRating = _.last(p1.ratingHistory);\r\n    const p2LastRating = _.last(p2.ratingHistory);\r\n    if (p1LastRating !== p1.rating) {\r\n      p1.ratingHistory.push({\r\n        rating: p1.rating,\r\n        date: battleDate.getTime(),\r\n      });\r\n    }\r\n    if (p2LastRating !== p2.rating) {\r\n      p2.ratingHistory.push({\r\n        rating: p2.rating,\r\n        date: battleDate.getTime(),\r\n      });\r\n    }\r\n  });\r\n\r\n  _.flow(\r\n    _.keys,\r\n    _.forEach(key => {\r\n      profiles[key].id = _.toInteger(key);\r\n      profiles[key].accuracy =\r\n        profiles[key].countAcc > 0\r\n          ? Math.round((profiles[key].sumAccuracy / profiles[key].countAcc) * 100) / 100\r\n          : null;\r\n      profiles[key].ratingRaw = profiles[key].rating;\r\n      profiles[key].rating = Math.round(profiles[key].rating);\r\n      profiles[key].rankingHistory = [\r\n        ...profiles[key].rankingHistory,\r\n        { place: _.get('place', _.last(profiles[key].rankingHistory)), date: Date.now() },\r\n      ];\r\n    })\r\n  )(profiles);\r\n  return { logText, scoreInfo: dictScoreInfo };\r\n};\r\n\r\nconst postProcessProfiles = (profiles, tracklist) => {\r\n  const getBonusForLevel = level => (30 * (1 + 2 ** (level / 4))) / 11;\r\n  const getMinimumNumber = totalCharts =>\r\n    Math.round(\r\n      Math.min(totalCharts, 1 + totalCharts / 20 + Math.sqrt(Math.max(totalCharts - 1, 0)) * 0.7)\r\n    );\r\n\r\n  const newProfiles = _.mapValues(profile => {\r\n    const neededGrades = ['A', 'A+', 'S', 'SS', 'SSS'];\r\n    profile.expRank = _.findLast(rank => rank.threshold <= profile.exp, expRanks);\r\n    profile.expRankNext = _.find(rank => rank.threshold > profile.exp, expRanks);\r\n    profile.progress = {\r\n      double: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n      single: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n    };\r\n    const gradeIncrementMap = {\r\n      SSS: ['SS', 'S', 'A+', 'A'],\r\n      SS: ['SS', 'S', 'A+', 'A'],\r\n      S: ['S', 'A+', 'A'],\r\n      'A+': ['A+', 'A'],\r\n      A: ['A'],\r\n    };\r\n    const incrementLevel = (l, g, chartType) => {\r\n      const prog =\r\n        chartType === 'S' || chartType === 'SP'\r\n          ? profile.progress.single\r\n          : chartType === 'D' || chartType === 'DP'\r\n          ? profile.progress.double\r\n          : null;\r\n      if (prog) {\r\n        prog[g][l] = prog[g][l] ? prog[g][l] + 1 : 1;\r\n      }\r\n    };\r\n    _.keys(profile.resultsByLevel).forEach(level => {\r\n      profile.resultsByLevel[level].forEach(res => {\r\n        const thisGrade = res.result.grade;\r\n        const thisPlayerId = res.result.playerId;\r\n        const otherResults = res.chart.results.filter(r => r.playerId === thisPlayerId);\r\n        if (otherResults.length > 1) {\r\n          const sortedResults = otherResults.sort(\r\n            (a, b) => neededGrades.indexOf(b.grade) - neededGrades.indexOf(a.grade)\r\n          );\r\n          if (sortedResults[0].grade !== thisGrade) {\r\n            return; // Don't do anything when we have a different result with better grade\r\n          }\r\n        }\r\n        const gradeIncArray = gradeIncrementMap[thisGrade];\r\n        if (gradeIncArray) {\r\n          gradeIncArray.forEach(gradeInc => {\r\n            incrementLevel(level, gradeInc, res.chart.chartType);\r\n          });\r\n        }\r\n      });\r\n    });\r\n    ['single', 'double'].forEach(chartType => {\r\n      profile.progress[`${chartType}-bonus`] = 0;\r\n      _.keys(profile.progress[chartType]).forEach(grade => {\r\n        profile.progress[chartType][`${grade}-bonus`] = 0;\r\n        _.keys(profile.progress[chartType][grade]).forEach(level => {\r\n          const number = profile.progress[chartType][grade][level];\r\n          const totalCharts = tracklist.data[`${chartType}sLevels`][level];\r\n          const minimumNumber = getMinimumNumber(totalCharts);\r\n          const bonusCoefficientNumber = Math.min(1, number / minimumNumber);\r\n          const rawBonus = getBonusForLevel(level);\r\n          const bonus = rawBonus * bonusCoefficientNumber;\r\n          profile.progress[chartType][grade][`${level}-bonus`] = bonus;\r\n          profile.progress[chartType][grade][`${level}-bonus-coef`] = bonusCoefficientNumber;\r\n          profile.progress[chartType][grade][`${level}-min-number`] = minimumNumber;\r\n          profile.progress[chartType][grade][`${level}-achieved-number`] = number;\r\n          if (bonus >= profile.progress[chartType][`${grade}-bonus`]) {\r\n            profile.progress[chartType][`${grade}-bonus`] = bonus;\r\n            profile.progress[chartType][`${grade}-bonus-level`] = level;\r\n            profile.progress[chartType][`${grade}-bonus-level-coef`] = bonusCoefficientNumber;\r\n            profile.progress[chartType][`${grade}-bonus-level-min-number`] = minimumNumber;\r\n            profile.progress[chartType][`${grade}-bonus-level-achieved-number`] = number;\r\n          }\r\n        });\r\n        profile.progress[`${chartType}-bonus`] += profile.progress[chartType][`${grade}-bonus`];\r\n      });\r\n    });\r\n    profile.progress.bonus = profile.progress['double-bonus'] + profile.progress['single-bonus'];\r\n    profile.rating = 850 + profile.progress.bonus;\r\n    profile.accuracy =\r\n      profile.countAcc > 0\r\n        ? Math.round((profile.sumAccuracy / profile.countAcc) * 100) / 100\r\n        : null;\r\n    return profile;\r\n  }, profiles);\r\n  return newProfiles;\r\n};\r\n\r\nexport const getProcessedProfiles = ({ profiles, tracklist, battles, debug }) => {\r\n  // Calculate Progress achievements and bonus for starting Elo\r\n  const processedProfiles = postProcessProfiles(profiles, tracklist);\r\n  // Calculate ELO\r\n  const { logText, scoreInfo } = processBattles({ battles, profiles: processedProfiles, debug });\r\n  return { processedProfiles, logText, scoreInfo };\r\n};\r\n","// export const HOST = 'http://localhost:5000';\r\nexport const HOST = 'https://vps720616.ovh.net:5000';\r\n","if (localStorage) {\r\n  window.debugOn = () => {\r\n    localStorage.setItem('debug', 1);\r\n  };\r\n  window.debugOff = () => {\r\n    localStorage.removeItem('debug');\r\n  };\r\n}\r\n\r\nexport const DEBUG = localStorage && localStorage.getItem('debug');\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\nimport { getExp } from 'utils/exp';\r\nimport { achievements, initialAchievementState } from 'utils/achievements';\r\nimport { parseDate } from 'utils/date';\r\n\r\nimport WorkerProfilesProcessing from 'workerize-loader!utils/workers/profilesPostProcess'; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport * as profilesProcessing from 'utils/workers/profilesPostProcess';\r\n\r\nimport { HOST } from 'constants/backend';\r\nimport { DEBUG } from 'constants/env';\r\n\r\nconst LOADING = `TOP/LOADING`;\r\nconst SUCCESS = `TOP/SUCCESS`;\r\nconst ERROR = `TOP/ERROR`;\r\nconst SET_FILTER = `TOP/SET_FILTER`;\r\nconst RESET_FILTER = `TOP/RESET_FILTER`;\r\nconst RANKING_CHANGE_SET = `TOP/RANKING_CHANGE_SET`;\r\nconst PROFILES_UPDATE = `TOP/PROFILES_UPDATE`;\r\n\r\nexport const defaultFilter = { showRank: true, showRankAndNorank: true };\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  isLoadingRanking: false,\r\n  data: [],\r\n  filter: defaultFilter,\r\n  players: {},\r\n  profiles: {},\r\n  results: [],\r\n  scoreInfo: {},\r\n  sharedCharts: {},\r\n};\r\n\r\nexport const gradeComparator = {\r\n  '?': 0,\r\n  F: 1,\r\n  D: 2,\r\n  'D+': 3,\r\n  C: 4,\r\n  'C+': 5,\r\n  B: 6,\r\n  'B+': 7,\r\n  A: 8,\r\n  'A+': 9,\r\n  S: 10,\r\n  SS: 11,\r\n  SSS: 12,\r\n};\r\n\r\nconst tryFixIncompleteResult = (result, maxTotalSteps) => {\r\n  if (!maxTotalSteps) {\r\n    return;\r\n  }\r\n  const infos = [result.perfect, result.great, result.good, result.bad, result.miss];\r\n  let fixableIndex = -1,\r\n    absentNumbersCount = 0,\r\n    localStepSum = 0;\r\n  for (let i = 0; i < 5; ++i) {\r\n    if (!_.isNumber(infos[i])) {\r\n      fixableIndex = i;\r\n      absentNumbersCount++;\r\n    } else {\r\n      localStepSum += infos[i];\r\n    }\r\n  }\r\n  if (absentNumbersCount === 1) {\r\n    result[['perfect', 'great', 'good', 'bad', 'miss'][fixableIndex]] =\r\n      maxTotalSteps - localStepSum;\r\n  }\r\n};\r\n\r\nconst guessGrade = result => {\r\n  if (result.misses === 0 && result.bads === 0 && result.goods === 0) {\r\n    if (result.greats === 0) {\r\n      return 'SSS';\r\n    } else {\r\n      return 'SS';\r\n    }\r\n  }\r\n  return result.grade;\r\n};\r\n\r\nconst mapResult = (res, players, chart) => {\r\n  if (typeof res.recognition_notes === 'undefined') {\r\n    // Short result, minimum info, only for ELO calculation\r\n    // Will be replaced with better result later\r\n    return {\r\n      isUnknownPlayer: players[res.player].arcade_name === 'PUMPITUP',\r\n      isIntermediateResult: true,\r\n      sharedChartId: res.shared_chart,\r\n      playerId: res.player,\r\n      nickname: players[res.player].nickname,\r\n      nicknameArcade: players[res.player].arcade_name,\r\n      date: res.gained,\r\n      dateObject: parseDate(res.gained),\r\n      grade: res.grade,\r\n      isExactDate: !!res.exact_gain_date,\r\n      score: res.score,\r\n      isRank: !!res.rank_mode,\r\n    };\r\n  }\r\n  // Full best result\r\n  let _r = {\r\n    isUnknownPlayer: players[res.player].arcade_name === 'PUMPITUP',\r\n    isIntermediateResult: false,\r\n    sharedChartId: res.shared_chart,\r\n    id: res.id,\r\n    playerId: res.player,\r\n    nickname: players[res.player].nickname,\r\n    nicknameArcade: players[res.player].arcade_name,\r\n    originalChartMix: res.original_mix,\r\n    originalChartLabel: res.original_label,\r\n    originalScore: res.original_score,\r\n    date: res.gained,\r\n    dateObject: parseDate(res.gained),\r\n    grade: res.grade !== '?' ? res.grade : guessGrade(res),\r\n    isExactDate: !!res.exact_gain_date,\r\n    score: res.score,\r\n    scoreIncrease: res.score_increase,\r\n    calories: res.calories && res.calories / 1000,\r\n    perfect: res.perfects,\r\n    great: res.greats,\r\n    good: res.goods,\r\n    bad: res.bads,\r\n    miss: res.misses,\r\n    combo: res.max_combo,\r\n    mods: res.mods_list,\r\n    isRank: !!res.rank_mode,\r\n    isHJ: (res.mods_list || '').split(' ').includes('HJ'),\r\n    isMachineBest: res.recognition_notes === 'machine_best',\r\n    isMyBest: res.recognition_notes === 'personal_best',\r\n  };\r\n\r\n  tryFixIncompleteResult(_r, chart.maxTotalSteps);\r\n\r\n  const perfects = Math.sqrt(_r.perfect) * 10;\r\n  const acc = perfects\r\n    ? Math.floor(\r\n        ((perfects * 100 + _r.great * 60 + _r.good * 30 + _r.miss * -20) /\r\n          (perfects + _r.great + _r.good + _r.bad + _r.miss)) *\r\n          100\r\n      ) / 100\r\n    : null;\r\n  const accRaw = _r.perfect\r\n    ? Math.floor(\r\n        ((_r.perfect * 100 + _r.great * 60 + _r.good * 30 + _r.miss * -20) /\r\n          (_r.perfect + _r.great + _r.good + _r.bad + _r.miss)) *\r\n          100\r\n      ) / 100\r\n    : null;\r\n\r\n  _r.accuracy = acc < 0 ? 0 : accRaw === 100 ? 100 : acc && +acc.toFixed(2);\r\n  _r.accuracyRaw = accRaw;\r\n  return _r;\r\n};\r\n\r\nconst getMaxScore = score => {\r\n  return ((score.score / score.accuracyRaw) * 100) / (score.isRank ? 1.2 : 1);\r\n};\r\n\r\nconst initializeProfile = (result, profiles) => {\r\n  const id = result.playerId;\r\n  const resultsByLevel = _.fromPairs(Array.from({ length: 28 }).map((x, i) => [i + 1, []]));\r\n  profiles[id] = {\r\n    name: result.nickname,\r\n    nameArcade: result.nicknameArcade,\r\n    resultsByGrade: {},\r\n    resultsByLevel,\r\n    lastResultDate: result.dateObject,\r\n    count: 0,\r\n    battleCount: 0,\r\n    countAcc: 0,\r\n    grades: { F: 0, D: 0, C: 0, B: 0, A: 0, S: 0, SS: 0, SSS: 0 },\r\n    sumAccuracy: 0,\r\n    rankingHistory: [],\r\n    ratingHistory: [],\r\n    lastPlace: null,\r\n    lastBattleDate: 0,\r\n  };\r\n  profiles[id].achievements = _.flow(\r\n    _.keys,\r\n    _.map(achName => [\r\n      achName,\r\n      { ...(achievements[achName].initialState || initialAchievementState) },\r\n    ]),\r\n    _.fromPairs\r\n  )(achievements);\r\n  profiles[id].exp = 0;\r\n};\r\n\r\nconst getProfileInfoFromResult = (result, chart, profiles) => {\r\n  const profile = profiles[result.playerId];\r\n\r\n  profile.count++;\r\n  if (result.accuracy) {\r\n    profile.countAcc++;\r\n    profile.sumAccuracy += result.accuracy;\r\n  }\r\n  profile.grades[result.grade.replace('+', '')]++;\r\n\r\n  if (chart.chartType !== 'COOP' && result.isBestGradeOnChart) {\r\n    profile.resultsByGrade[result.grade] = [\r\n      ...(profile.resultsByGrade[result.grade] || []),\r\n      { result, chart },\r\n    ];\r\n    profile.resultsByLevel[chart.chartLevel] = [\r\n      ...(profile.resultsByLevel[chart.chartLevel] || []),\r\n      { result, chart },\r\n    ];\r\n  }\r\n  if (result.isExactDate && profile.lastResultDate < result.dateObject) {\r\n    profile.lastResultDate = result.dateObject;\r\n  }\r\n  profile.achievements = _.mapValues.convert({ cap: false })((achState, achName) => {\r\n    return achievements[achName].resultFunction(result, chart, achState, profile);\r\n  }, profile.achievements);\r\n  profile.exp += getExp(result, chart);\r\n};\r\n\r\nconst processData = (data, tracklist) => {\r\n  const { players, results, shared_charts } = data;\r\n  //// Initialization\r\n  // Init for TOP\r\n  const mappedResults = [];\r\n  const getTopResultId = result => `${result.sharedChartId}-${result.playerId}-${result.isRank}`;\r\n  const getBestGradeResultId = result => `${result.sharedChartId}-${result.playerId}`;\r\n  const topResults = {}; // Temp object\r\n  const bestGradeResults = {}; // Temp object\r\n  const top = {}; // Main top scores pbject\r\n\r\n  // Battles for ELO calculation\r\n  const battles = [];\r\n  // Profiles for every player\r\n  let profiles = {};\r\n\r\n  // Loop 1\r\n  for (let resRaw of results) {\r\n    const sharedChartId = resRaw.shared_chart;\r\n    // Initialize Song\r\n    if (!top[sharedChartId]) {\r\n      const sharedChart = shared_charts[sharedChartId];\r\n      const label = _.toUpper(sharedChart.chart_label);\r\n      const [chartType, chartLevel] = label.match(/(\\D+)|(\\d+)/g);\r\n      top[sharedChartId] = {\r\n        song: sharedChart.track_name,\r\n        chartLabel: label,\r\n        chartLevel,\r\n        chartType,\r\n        duration: sharedChart.duration,\r\n        sharedChartId: sharedChartId,\r\n        maxTotalSteps: sharedChart.max_total_steps,\r\n        results: [],\r\n        totalResultsCount: 0,\r\n      };\r\n    }\r\n\r\n    // Getting current chart and result (mapped)\r\n    const chartTop = top[sharedChartId];\r\n    const result = mapResult(resRaw, players, chartTop);\r\n    mappedResults.push(result);\r\n\r\n    // Inserting result into TOP\r\n    const topResultId = getTopResultId(result);\r\n    const currentTopResult = topResults[topResultId];\r\n    if (!currentTopResult || currentTopResult.score < result.score) {\r\n      let oldScoreIndex = -1;\r\n      if (currentTopResult) {\r\n        oldScoreIndex = chartTop.results.indexOf(currentTopResult);\r\n        chartTop.results.splice(oldScoreIndex, 1);\r\n      }\r\n      const newScoreIndex = _.sortedLastIndexBy(r => -r.score, result, chartTop.results);\r\n      if (!result.isUnknownPlayer || newScoreIndex === 0) {\r\n        chartTop.results.splice(newScoreIndex, 0, result);\r\n        chartTop.latestScoreDate = result.date;\r\n      }\r\n      chartTop.totalResultsCount++;\r\n      topResults[topResultId] = result;\r\n\r\n      if (!result.isUnknownPlayer) {\r\n        chartTop.results.forEach(enemyResult => {\r\n          if (\r\n            !enemyResult.isUnknownPlayer &&\r\n            enemyResult.isRank === result.isRank &&\r\n            enemyResult.playerId !== result.playerId &&\r\n            result.score &&\r\n            enemyResult.score\r\n          ) {\r\n            battles.push([result, enemyResult, chartTop]);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    // Getting best grade of player on this chart\r\n    if (!result.isIntermediateResult) {\r\n      const bestGradeResultId = getBestGradeResultId(result);\r\n      const currentBestGradeRes = bestGradeResults[bestGradeResultId];\r\n      if (\r\n        !currentBestGradeRes ||\r\n        gradeComparator[currentBestGradeRes.grade] <= gradeComparator[result.grade]\r\n      ) {\r\n        // Using <= here, so newer scores always win and rewrite old scores\r\n        currentBestGradeRes && (currentBestGradeRes.isBestGradeOnChart = false);\r\n        result.isBestGradeOnChart = true;\r\n        bestGradeResults[bestGradeResultId] = result;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Loop 2, when the TOP is already set up\r\n  for (let chartId in top) {\r\n    const chart = top[chartId];\r\n    chart.maxScoreWithAccuracy = 0;\r\n    for (let result of chart.results) {\r\n      if (result.accuracyRaw && chart.maxScoreWithAccuracy < result.score) {\r\n        chart.maxScoreResult = result;\r\n        chart.maxScoreWithAccuracy = result.score;\r\n      }\r\n      // Getting some info about players\r\n      if (!result.isUnknownPlayer && !result.isIntermediateResult) {\r\n        if (!profiles[result.playerId]) {\r\n          initializeProfile(result, profiles);\r\n        }\r\n        getProfileInfoFromResult(result, chart, profiles);\r\n      }\r\n    }\r\n    if (chart.maxScoreWithAccuracy) {\r\n      chart.maxScore = getMaxScore(chart.maxScoreResult, chart);\r\n    }\r\n  }\r\n\r\n  return { mappedResults, profiles, sharedCharts: top, battles };\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: initialState.data,\r\n        players: initialState.players,\r\n        profiles: initialState.profiles,\r\n        results: initialState.results,\r\n        sharedCharts: initialState.sharedCharts,\r\n        scoreInfo: {},\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isLoadingRanking: true,\r\n        data: action.data,\r\n        players: action.players,\r\n        profiles: action.profiles,\r\n        results: action.results,\r\n        sharedCharts: action.sharedCharts,\r\n        scoreInfo: {},\r\n      };\r\n    case PROFILES_UPDATE:\r\n      return {\r\n        ...state,\r\n        isLoadingRanking: false,\r\n        profiles: action.profiles,\r\n        scoreInfo: action.scoreInfo,\r\n      };\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    case RANKING_CHANGE_SET:\r\n      const hasPrevList = !_.isEmpty(action.listPrev);\r\n      return {\r\n        ...state,\r\n        profiles: _.mapValues(playerOriginal => {\r\n          const player = {\r\n            ...playerOriginal,\r\n            prevRating: _.get(playerOriginal.id, action.rankingsPointsMap),\r\n          };\r\n          if (!hasPrevList) {\r\n            return player; // First time opening this thing and we didn't have any previous data\r\n          }\r\n          if (!_.includes(player.id, action.listPrev)) {\r\n            return { ...player, change: 'NEW' };\r\n          } else if (!_.includes(player.id, action.listNow)) {\r\n            // Should NEVER happen, idk if this is possible\r\n            return { ...player, change: '?' };\r\n          } else {\r\n            return {\r\n              ...player,\r\n              change: _.indexOf(player.id, action.listPrev) - _.indexOf(player.id, action.listNow),\r\n            };\r\n          }\r\n        }, state.profiles),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchResults = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        fetchJson({\r\n          url: `${HOST}/results/highscores`,\r\n        })\r\n      );\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n      const { tracklist } = getState();\r\n      const { sharedCharts, mappedResults, profiles, battles } = processData(data, tracklist);\r\n\r\n      dispatch({\r\n        type: SUCCESS,\r\n        data: _.values(sharedCharts),\r\n        players: _.flow(\r\n          _.toPairs,\r\n          _.map(([id, player]) => ({ ...player, id: _.toInteger(id) }))\r\n        )(data.players),\r\n        results: mappedResults,\r\n        profiles,\r\n        sharedCharts,\r\n      });\r\n\r\n      // Parallelized calculation of ELO and profile data\r\n      const input = { profiles, tracklist, battles, debug: DEBUG };\r\n      let promise, worker;\r\n      if (window.Worker) {\r\n        worker = new WorkerProfilesProcessing();\r\n        promise = worker.getProcessedProfiles(input);\r\n      } else {\r\n        promise = new Promise(res => res(profilesProcessing.getProcessedProfiles(input)));\r\n      }\r\n\r\n      const { processedProfiles, logText, scoreInfo } = await promise;\r\n      DEBUG && console.log(logText);\r\n      dispatch({ type: PROFILES_UPDATE, profiles: processedProfiles, scoreInfo });\r\n      dispatch(calculateRankingChanges(processedProfiles));\r\n      if (worker) worker.terminate();\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\n\r\nexport const resetFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n\r\nconst getListOfNames = _.map('id');\r\nconst getMapOfRatings = _.flow(\r\n  _.map(q => [q.id, q.rating]),\r\n  _.fromPairs\r\n);\r\n\r\nexport const calculateRankingChanges = profiles => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const ranking = _.orderBy('ratingRaw', 'desc', _.values(profiles));\r\n      const [lastChangedRanking, lastChangedRankingPoints, lastFetchedRanking] = await Promise.all([\r\n        localForage.getItem('lastChangedRanking_v3'),\r\n        localForage.getItem('lastChangedRankingPoints_v3'),\r\n        localForage.getItem('lastFetchedRanking_v3'),\r\n      ]);\r\n      const listNow = getListOfNames(ranking);\r\n      const listLastFetched = getListOfNames(lastFetchedRanking);\r\n      const listLastChanged = getListOfNames(lastChangedRanking);\r\n      const mapPointsNow = getMapOfRatings(ranking);\r\n      const mapPointsLastFetched = getMapOfRatings(lastFetchedRanking);\r\n      const mapPointsLastChanged = getMapOfRatings(lastChangedRankingPoints);\r\n\r\n      let rankingsPointsMap = mapPointsLastChanged;\r\n      // console.log(listNow, listLastFetched, listLastChanged);\r\n      // console.log(mapPointsNow, mapPointsLastFetched, mapPointsLastChanged);\r\n      if (!_.isEqual(mapPointsNow, mapPointsLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRankingPoints_v3', lastFetchedRanking);\r\n        rankingsPointsMap = mapPointsLastFetched;\r\n      }\r\n      let listPrev = listLastChanged;\r\n      if (!_.isEqual(listNow, listLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRanking_v3', lastFetchedRanking);\r\n        listPrev = listLastFetched;\r\n      }\r\n      dispatch({\r\n        type: RANKING_CHANGE_SET,\r\n        listNow,\r\n        listPrev,\r\n        rankingsPointsMap,\r\n      });\r\n      localForage.setItem('lastFetchedRanking_v3', ranking);\r\n    } catch (error) {\r\n      console.warn('Cannot get ranking from local storage', error);\r\n    }\r\n  };\r\n};\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\n\r\nimport { setFilter } from 'reducers/results';\r\n\r\nconst SELECT_PRESET = `PRESETS/SELECT_PRESET`;\r\nconst LOAD_PRESETS = `PRESETS/LOAD_PRESETS`;\r\nconst LOADING_START = `PRESETS/LOADING_START`;\r\nconst LOADING_END = `PRESETS/LOADING_END`;\r\n\r\nconst initialState = {\r\n  presets: [],\r\n  currentPreset: null,\r\n  isLoading: false,\r\n};\r\n\r\nconst itemToOption = item =>\r\n  item && {\r\n    ...item,\r\n    label: item.name,\r\n    value: item.name,\r\n  };\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_PRESETS:\r\n      const currentPreset = _.find({ name: _.get('name', state.currentPreset) }, action.presets);\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(currentPreset) || null,\r\n        presets: _.map(itemToOption, action.presets),\r\n      };\r\n    case SELECT_PRESET:\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(action.currentPreset),\r\n      };\r\n    case LOADING_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case LOADING_END:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst reloadPresets = presets => ({ type: LOAD_PRESETS, presets: presets || [] });\r\n\r\nconst startLoading = () => ({\r\n  type: LOADING_START,\r\n});\r\n\r\nconst endLoading = () => ({\r\n  type: LOADING_END,\r\n});\r\n\r\nexport const selectPreset = currentPreset => ({\r\n  type: SELECT_PRESET,\r\n  currentPreset,\r\n});\r\n\r\nexport const loadPresets = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    dispatch(reloadPresets(presets));\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const savePreset = name => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const { filter } = getState().top;\r\n    const newPreset = { name, filter };\r\n    if (!_.some({ name }, presets)) {\r\n      const newPresets = [...(presets || []), newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      dispatch(selectPreset(newPreset));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    } else if (window.confirm('Preset with this name already exists, replace it?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      const newPresets = [...withoutOldPreset, newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const openPreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const currentPreset = getState().presets.currentPreset;\r\n  const name = _.get('name', currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = name && _.find({ name }, presets);\r\n    if (preset) {\r\n      dispatch(selectPreset(currentPreset));\r\n      dispatch(setFilter(currentPreset.filter));\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const deletePreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const name = _.get('name', getState().presets.currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = _.find({ name }, presets);\r\n    if (preset && window.confirm('Are you sure you want to delete selected preset?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      dispatch(reloadPresets(withoutOldPreset));\r\n      localForage.setItem('filterPresets', withoutOldPreset);\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaLayerGroup, FaFolderOpen, FaSave, FaPlus, FaTrashAlt } from 'react-icons/fa';\r\nimport Select from 'react-select';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport Input from 'components/Shared/Input/Input';\r\n\r\nimport { loadPresets, savePreset, selectPreset, openPreset, deletePreset } from 'reducers/presets';\r\n\r\nconst overlayItem = (\r\n  <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n    <FaLayerGroup />\r\n    пресеты\r\n  </button>\r\n);\r\n\r\nconst noPresetsMessage = () => 'пусто';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ...state.presets,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  loadPresets,\r\n  savePreset,\r\n  openPreset,\r\n  deletePreset,\r\n  selectPreset,\r\n};\r\n\r\nclass PresetsControl extends React.Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    this.props.loadPresets();\r\n  }\r\n\r\n  onChangeSelection = selected => {\r\n    this.props.selectPreset(selected.name);\r\n  };\r\n\r\n  onRewritePreset = () => {\r\n    const { currentPreset } = this.props;\r\n    this.props.savePreset(currentPreset.name);\r\n  };\r\n\r\n  onSavePreset = () => {\r\n    const { name } = this.state;\r\n    this.props.savePreset(name);\r\n    this.setState({ isAddingNew: false });\r\n  };\r\n\r\n  render() {\r\n    const { presets, currentPreset, isLoading } = this.props;\r\n    const { name, isAddingNew } = this.state;\r\n    return (\r\n      <div>\r\n        <Overlay overlayItem={overlayItem}>\r\n          <div className=\"presets-control-overlay\">\r\n            <Select\r\n              className=\"select _margin-bottom\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"пресеты...\"\r\n              options={presets}\r\n              value={currentPreset}\r\n              onChange={this.props.selectPreset}\r\n              noOptionsMessage={noPresetsMessage}\r\n            />\r\n            {currentPreset && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.props.openPreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaFolderOpen /> открыть\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.onRewritePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaSave /> перезаписать\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon\"\r\n                  onClick={this.props.deletePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaTrashAlt /> удалить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {!isAddingNew && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left _self-align-end\"\r\n                  onClick={() => this.setState({ isAddingNew: true })}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaPlus /> добавить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {isAddingNew && (\r\n              <div className=\"adding-new _margin-bottom\">\r\n                <Input\r\n                  value={name}\r\n                  placeholder=\"имя пресета...\"\r\n                  className=\"form-control\"\r\n                  onChange={name => this.setState({ name })}\r\n                />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={this.onSavePreset}\r\n                  disabled={!name || isLoading}\r\n                >\r\n                  <FaSave /> сохранить\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={() => this.setState({ isAddingNew: false })}\r\n                  disabled={isLoading}\r\n                >\r\n                  отмена\r\n                </button>\r\n              </div>\r\n            )}\r\n            {/* <div>\r\n              <Toggle\r\n                checked={false}\r\n                onToggle={active => {\r\n                  localForage.setItem('showTabs', active);\r\n                }}\r\n              >\r\n                показывать табы с пресетами\r\n              </Toggle>\r\n            </div> */}\r\n          </div>\r\n        </Overlay>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PresetsControl);\r\n","import React from 'react';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport moment from 'moment';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\n\r\nconst timeStyle = {\r\n  flavour: 'long',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nexport const tooltipFormatter = result => {\r\n  if (!result.isExactDate) {\r\n    const resultType =\r\n      result.isMyBest === undefined && result.isMachineBest === undefined\r\n        ? 'с my best или machine best'\r\n        : result.isMyBest\r\n        ? 'с my best'\r\n        : result.isMachineBest\r\n        ? 'с machine best'\r\n        : 'хз откуда';\r\n    return (\r\n      <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n        <div>точная дата взятия неизвестна</div>\r\n        <div>скор был записан {resultType}</div>\r\n        <div>дата записи: {result.dateObject.toLocaleDateString()}</div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return result.dateObject.toLocaleDateString();\r\n  }\r\n};\r\n\r\nexport const getTimeAgo = date => {\r\n  const dayDiff = moment()\r\n    .startOf('day')\r\n    .diff(moment(date).startOf('day'), 'days');\r\n  const hour = moment(date).hour();\r\n  return dayDiff === 0\r\n    ? hour < 5\r\n      ? 'вчера ночью'\r\n      : 'сегодня'\r\n    : dayDiff === 1\r\n    ? 'вчера'\r\n    : timeAgo.format(date, timeStyle);\r\n};\r\n","export const colorsArray = [\r\n  '#4DB3FF',\r\n  '#80B300',\r\n  '#FF6655',\r\n  '#FF99E6',\r\n  '#33FFCC',\r\n  '#e633c8',\r\n  '#dbe812',\r\n  '#FF1A66',\r\n  '#991AFF',\r\n  '#E6B333',\r\n  '#1AB399',\r\n  '#4D8066',\r\n  '#CC9999',\r\n  '#00E680',\r\n  '#809980',\r\n  '#E6FF80',\r\n  '#1AFF33',\r\n  '#999933',\r\n  '#E6331A',\r\n  '#CCCC00',\r\n  '#66E64D',\r\n  '#4D80CC',\r\n  '#9900B3',\r\n  '#4DB380',\r\n  '#FF4D4D',\r\n];\r\n","import _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport matchSorter from 'match-sorter';\r\n\r\nimport { SORT, CHART_MIN_MAX, DURATION_DEFAULT } from 'constants/leaderboard';\r\n\r\nexport const playersSelector = createSelector(\r\n  state => state.results.players,\r\n  _.flow(\r\n    _.toPairs,\r\n    _.map(([id, { nickname, arcade_name }]) => ({\r\n      label: `${nickname} (${arcade_name})`,\r\n      value: nickname,\r\n    })),\r\n    _.sortBy(it => _.toLower(it.label))\r\n  )\r\n);\r\n\r\nconst filterCharts = (filter, rows) => {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filter);\r\n  const type = _.getOr(null, 'type', filter);\r\n  const duration = _.getOr(DURATION_DEFAULT, 'duration', filter);\r\n\r\n  return _.filter(row => {\r\n    if (duration !== DURATION_DEFAULT && !duration.includes(row.duration)) {\r\n      return false;\r\n    }\r\n    return (\r\n      row.chartLevel >= range[0] &&\r\n      row.chartLevel <= range[1] &&\r\n      (!type || row.chartType.startsWith(type))\r\n    );\r\n  }, rows);\r\n};\r\n\r\nconst getFilteredData = (data, filter) => {\r\n  // const start = performance.now();\r\n  const names = _.map('value', filter.players);\r\n  const namesOr = _.map('value', filter.playersOr);\r\n  const namesNot = _.map('value', filter.playersNot);\r\n  const sortingType = _.get('value', filter.sortingType);\r\n  const protagonist = _.get('value', filter.protagonist);\r\n  const excludeAntagonists = _.map('value', filter.excludeAntagonists);\r\n\r\n  const defaultSorting = [_.orderBy(['latestScoreDate'], ['desc'])];\r\n  const newScoresProtagonistSorting = !protagonist\r\n    ? defaultSorting\r\n    : [\r\n        _.orderBy(\r\n          [\r\n            song =>\r\n              _.max(\r\n                _.map(\r\n                  res => (res.nickname === protagonist ? res.dateObject.getTime() : 0),\r\n                  song.results\r\n                )\r\n              ),\r\n          ],\r\n          ['desc']\r\n        ),\r\n      ];\r\n  const protagonistSorting = [\r\n    _.filter(row => _.map('nickname', row.results).includes(protagonist)),\r\n    _.map(row => {\r\n      const protIndex = _.findIndex({ nickname: protagonist }, row.results);\r\n      const protScore = row.results[protIndex].score;\r\n      const enemies = _.flow([\r\n        _.take(protIndex),\r\n        _.uniqBy('nickname'),\r\n        _.remove(res => excludeAntagonists.includes(res.nickname) || res.score === protScore),\r\n      ])(row.results);\r\n      const distance = Math.sqrt(\r\n        _.reduce((dist, enemy) => dist + (enemy.score / protScore - 0.99) ** 2, 0, enemies)\r\n      );\r\n      return {\r\n        ...row,\r\n        distanceFromProtagonist: distance,\r\n      };\r\n    }),\r\n    _.orderBy(['distanceFromProtagonist'], ['desc']),\r\n  ];\r\n  const getScoreSorting = direction => [\r\n    _.filter(row => _.map('nickname', row.results).includes(protagonist)),\r\n    _.orderBy(\r\n      [\r\n        row => {\r\n          return _.getOr(\r\n            direction === 'asc' ? Infinity : -Infinity,\r\n            'ratingDiff',\r\n            _.find({ nickname: protagonist }, row.results)\r\n          );\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const sortingFunctions =\r\n    {\r\n      [SORT.DEFAULT]: defaultSorting,\r\n      [SORT.NEW_SCORES_PLAYER]: newScoresProtagonistSorting,\r\n      [SORT.PROTAGONIST]: protagonistSorting,\r\n      [SORT.RANK_ASC]: getScoreSorting('asc'),\r\n      [SORT.RANK_DESC]: getScoreSorting('desc'),\r\n    }[sortingType] || defaultSorting;\r\n\r\n  const result = _.flow(\r\n    _.compact([\r\n      _.map(row => ({\r\n        ...row,\r\n        results: row.results.filter(\r\n          (res, index) => !res.isUnknownPlayer || index === 0,\r\n          row.results\r\n        ),\r\n      })),\r\n      filter.chartRange && (items => filterCharts(filter.chartRange, items)),\r\n      !filter.showRank &&\r\n        _.map(row => ({ ...row, results: _.filter(res => !res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        filter.showOnlyRank &&\r\n        _.map(row => ({ ...row, results: _.filter(res => res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        !filter.showOnlyRank &&\r\n        !filter.showRankAndNorank &&\r\n        _.map(row => {\r\n          const occuredNames = [];\r\n          return {\r\n            ...row,\r\n            results: _.filter(res => {\r\n              const alreadyOccured = occuredNames.includes(res.nickname);\r\n              occuredNames.push(res.nickname);\r\n              return !alreadyOccured;\r\n            }, row.results),\r\n          };\r\n        }),\r\n      (names.length || namesOr.length || namesNot.length) &&\r\n        _.filter(row => {\r\n          const rowNames = _.map('nickname', row.results);\r\n          return (\r\n            (!names.length || _.every(name => rowNames.includes(name), names)) &&\r\n            (!namesOr.length || _.some(name => rowNames.includes(name), namesOr)) &&\r\n            (!namesNot.length || !_.some(name => rowNames.includes(name), namesNot))\r\n          );\r\n        }),\r\n      _.filter(row => _.size(row.results)),\r\n      ...sortingFunctions,\r\n      filter.song && (items => matchSorter(items, filter.song, { keys: ['song'] })),\r\n    ])\r\n  )(data);\r\n  // console.log('Elapsed:', performance.now() - start);\r\n  return result;\r\n};\r\n\r\nexport const filteredDataSelector = createSelector(\r\n  state => state.results.data,\r\n  state => state.results.filter,\r\n  getFilteredData\r\n);\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash/fp';\r\nimport Select from 'react-select';\r\nimport classNames from 'classnames';\r\nimport numeral from 'numeral';\r\nimport localForage from 'localforage';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport {\r\n  FaRedoAlt,\r\n  FaExclamationTriangle,\r\n  FaSearch,\r\n  FaYoutube,\r\n  FaAngleDoubleUp,\r\n  FaBackward,\r\n  FaForward,\r\n} from 'react-icons/fa';\r\nimport FlipMove from 'react-flip-move';\r\n\r\n// styles\r\nimport './leaderboard.scss';\r\n\r\n// components\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport CollapsibleBar from 'components/Shared/CollapsibleBar';\r\nimport ChartFilter from './ChartFilter';\r\nimport PresetsControl from './PresetsControl';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\nimport { SORT } from 'constants/leaderboard';\r\nimport { DEBUG } from 'constants/env';\r\n\r\n// reducers\r\nimport { fetchResults, setFilter, resetFilter, defaultFilter } from 'reducers/results';\r\nimport { selectPreset, openPreset } from 'reducers/presets';\r\n\r\n// utils\r\nimport { getExp } from 'utils/exp';\r\nimport { tooltipFormatter, getTimeAgo } from 'utils/leaderboards';\r\nimport { colorsArray } from 'utils/colors';\r\nimport { playersSelector, filteredDataSelector } from 'reducers/selectors';\r\n\r\n// code\r\nconst ANIMATION_DURATION = 250;\r\nconst sortingOptions = [\r\n  {\r\n    label: 'от новых скоров',\r\n    value: SORT.DEFAULT,\r\n  },\r\n  {\r\n    label: 'от новых скоров конкретного игрока',\r\n    value: SORT.NEW_SCORES_PLAYER,\r\n  },\r\n  // {\r\n  //   label: 'отставанию от остальных',\r\n  //   value: SORT.PROTAGONIST,\r\n  // },\r\n  // ...(DEBUG\r\n  //   ? [\r\n  {\r\n    label: 'от худших результатов',\r\n    value: SORT.RANK_ASC,\r\n  },\r\n  {\r\n    label: 'от лучших результатов',\r\n    value: SORT.RANK_DESC,\r\n  },\r\n  //   ]\r\n  // : []),\r\n];\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    players: playersSelector(state),\r\n    scoreInfo: state.results.scoreInfo,\r\n    results: state.results.results,\r\n    filteredData: filteredDataSelector(state),\r\n    data: state.results.data,\r\n    filter: state.results.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading: state.results.isLoading || state.tracklist.isLoading,\r\n    presets: state.presets.presets,\r\n    currentPreset: state.presets.currentPreset,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setFilter,\r\n  resetFilter,\r\n  selectPreset,\r\n  openPreset,\r\n};\r\n\r\nclass Leaderboard extends Component {\r\n  static propTypes = {\r\n    match: toBe.object,\r\n    scoreInfo: toBe.object,\r\n    data: toBe.array,\r\n    error: toBe.object,\r\n    results: toBe.array,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  state = { showItemsCount: 20, chartOverrides: {} };\r\n\r\n  setFilter = _.curry((name, value) => {\r\n    const filter = { ...this.props.filter, [name]: value };\r\n    this.props.setFilter(filter);\r\n    localForage.setItem('filter', filter);\r\n  });\r\n\r\n  resetFilter = () => {\r\n    this.props.resetFilter();\r\n    this.setState({ chartOverrides: {} });\r\n    localForage.setItem('filter', defaultFilter);\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    this.setState({ chartOverrides: {} });\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onTypeSongName = _.debounce(300, value => {\r\n    this.setFilter('song', value);\r\n  });\r\n\r\n  onRedoLatestResult = _.throttle(ANIMATION_DURATION + 10, chart => {\r\n    const overrides = _.drop(1, this.state.chartOverrides[chart.sharedChartId]);\r\n    this.setState(state => ({\r\n      chartOverrides: {\r\n        ...state.chartOverrides,\r\n        [chart.sharedChartId]: _.size(overrides) === 1 ? null : overrides,\r\n      },\r\n    }));\r\n  });\r\n\r\n  onUndoLatestResult = _.throttle(ANIMATION_DURATION + 10, chart => {\r\n    if (_.isEmpty(chart.results)) {\r\n      this.setState(state => ({\r\n        chartOverrides: _.omit(chart.sharedChartId, state.chartOverrides),\r\n      }));\r\n    }\r\n    const undoedResult = _.maxBy('date', chart.results);\r\n    if (!undoedResult) return;\r\n\r\n    const { results } = this.props;\r\n    const undoedPlayerId = undoedResult.playerId;\r\n    const previousPlayerResult = _.findLast(\r\n      res =>\r\n        res.playerId === undoedPlayerId &&\r\n        res.sharedChartId === chart.sharedChartId &&\r\n        res.isRank === undoedResult.isRank &&\r\n        res.date < undoedResult.date,\r\n      results\r\n    );\r\n    const newResults = _.orderBy(\r\n      'score',\r\n      'desc',\r\n      _.compact(_.map(res => (res === undoedResult ? previousPlayerResult : res), chart.results))\r\n    );\r\n    const latestScore = _.maxBy('date', newResults);\r\n    const overrideChart = {\r\n      ...chart,\r\n      latestScoreDate: latestScore && latestScore.date,\r\n      results: newResults,\r\n    };\r\n    if (_.isEmpty(newResults)) {\r\n      this.setState(state => ({\r\n        chartOverrides: {\r\n          ...state.chartOverrides,\r\n          [chart.sharedChartId]: null,\r\n        },\r\n      }));\r\n    } else {\r\n      this.setState(state => ({\r\n        chartOverrides: {\r\n          ...state.chartOverrides,\r\n          [chart.sharedChartId]: [\r\n            overrideChart,\r\n            ...(state.chartOverrides[chart.sharedChartId] || [chart]),\r\n          ],\r\n        },\r\n      }));\r\n    }\r\n  });\r\n\r\n  renderSimpleSearch() {\r\n    const { isLoading, filter } = this.props;\r\n    return (\r\n      <div className=\"simple-search\">\r\n        <div className=\"song-name _margin-right _margin-bottom\">\r\n          <Input\r\n            value={filter.song || ''}\r\n            placeholder=\"название песни...\"\r\n            className=\"form-control\"\r\n            onChange={this.onTypeSongName}\r\n          />\r\n        </div>\r\n        <div className=\"chart-range _margin-right _margin-bottom\">\r\n          <ChartFilter filterValue={filter.chartRange} onChange={this.setFilter('chartRange')} />\r\n        </div>\r\n        <div className=\"_flex-fill\" />\r\n        <div className=\"_flex-row _margin-bottom\">\r\n          <PresetsControl />\r\n          <button className=\"btn btn-sm btn-dark btn-icon _margin-right\" onClick={this.resetFilter}>\r\n            <FaRedoAlt /> сбросить фильтры\r\n          </button>\r\n          <button\r\n            disabled={isLoading}\r\n            className=\"btn btn-sm btn-dark btn-icon\"\r\n            onClick={this.onRefresh}\r\n          >\r\n            <FaSearch /> обновить\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFilters() {\r\n    const { players, filter } = this.props;\r\n\r\n    return (\r\n      <div className=\"filters\">\r\n        <div className=\"people-filters\">\r\n          <label className=\"label\">показывать чарты, которые сыграл:</label>\r\n          <div className=\"players-block\">\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">каждый из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'players', filter)}\r\n                onChange={this.setFilter('players')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и хоть один из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersOr', filter)}\r\n                onChange={this.setFilter('playersOr')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и никто из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersNot', filter)}\r\n                onChange={this.setFilter('playersNot')}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Toggle\r\n            checked={_.getOr(false, 'showRank', filter)}\r\n            onChange={this.setFilter('showRank')}\r\n          >\r\n            показывать скоры на ранке\r\n          </Toggle>\r\n        </div>\r\n        {_.get('showRank', filter) && (\r\n          <>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showOnlyRank', filter)}\r\n                onChange={value => {\r\n                  this.setFilter('showOnlyRank', value);\r\n                  if (_.get('showRankAndNorank', filter)) {\r\n                    this.setFilter('showRankAndNorank', false);\r\n                  }\r\n                }}\r\n              >\r\n                <strong>только</strong> на ранке\r\n              </Toggle>\r\n            </div>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showRankAndNorank', filter)}\r\n                onChange={value => {\r\n                  this.setFilter('showRankAndNorank', value);\r\n                  if (_.get('showOnlyRank', filter)) {\r\n                    this.setFilter('showOnlyRank', false);\r\n                  }\r\n                }}\r\n              >\r\n                показывать лучшие скоры с ранком и без\r\n              </Toggle>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSortings() {\r\n    const { players, filter } = this.props;\r\n    return (\r\n      <div className=\"sortings\">\r\n        <div>\r\n          <label className=\"label\">сортировка:</label>\r\n          <Select\r\n            placeholder=\"выберите сортировку\"\r\n            className=\"select\"\r\n            classNamePrefix=\"select\"\r\n            isClearable={false}\r\n            options={sortingOptions}\r\n            value={_.getOr(sortingOptions[0], 'sortingType', filter)}\r\n            onChange={this.setFilter('sortingType')}\r\n          />\r\n        </div>\r\n        {[SORT.PROTAGONIST, SORT.RANK_ASC, SORT.RANK_DESC, SORT.NEW_SCORES_PLAYER].includes(\r\n          _.get('sortingType.value', filter)\r\n        ) && (\r\n          <div>\r\n            <label className=\"label\">игрок:</label>\r\n            <Select\r\n              className={classNames('select players', {\r\n                'red-border': !_.get('protagonist', filter),\r\n              })}\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              value={_.getOr(null, 'protagonist', filter)}\r\n              onChange={this.setFilter('protagonist')}\r\n            />\r\n          </div>\r\n        )}\r\n        {[SORT.PROTAGONIST].includes(_.get('sortingType.value', filter)) && (\r\n          <div>\r\n            <label className=\"label\">не учитывать в сравнении:</label>\r\n            <Select\r\n              closeMenuOnSelect={false}\r\n              className=\"select players\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              isMulti\r\n              value={_.getOr([], 'excludeAntagonists', filter)}\r\n              onChange={this.setFilter('excludeAntagonists')}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, filteredData, error, filter, scoreInfo } = this.props;\r\n    const { showItemsCount, chartOverrides } = this.state;\r\n    const canShowMore = filteredData.length > showItemsCount;\r\n    const visibleData = _.slice(0, showItemsCount, filteredData);\r\n\r\n    const showProtagonistRatingChange = [SORT.PROTAGONIST, SORT.RANK_ASC, SORT.RANK_DESC].includes(\r\n      _.get('sortingType.value', filter)\r\n    );\r\n    const highlightProtagonist = [\r\n      SORT.PROTAGONIST,\r\n      SORT.RANK_ASC,\r\n      SORT.RANK_DESC,\r\n      SORT.NEW_SCORES_PLAYER,\r\n    ].includes(_.get('sortingType.value', filter));\r\n    const protagonistName = _.get('protagonist.value', filter);\r\n    const uniqueSelectedNames = _.slice(\r\n      0,\r\n      colorsArray.length,\r\n      _.uniq(\r\n        _.compact([\r\n          highlightProtagonist && protagonistName,\r\n          ..._.map('value', filter.players),\r\n          ..._.map('value', filter.playersOr),\r\n        ])\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div className=\"leaderboard-page\">\r\n        <div className=\"content\">\r\n          <div className=\"search-block\">\r\n            {this.renderSimpleSearch()}\r\n            <CollapsibleBar title=\"фильтры\">{this.renderFilters()}</CollapsibleBar>\r\n            <CollapsibleBar title=\"сортировка\">{this.renderSortings()}</CollapsibleBar>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!!this.props.presets.length && (\r\n            <div className=\"presets-buttons\">\r\n              <span>пресеты:</span>\r\n              {this.props.presets.map(preset => (\r\n                <ToggleButton\r\n                  key={preset.name}\r\n                  text={preset.name}\r\n                  className=\"btn btn-sm btn-dark _margin-right\"\r\n                  active={_.get('filter', preset) === this.props.filter}\r\n                  onToggle={() => {\r\n                    this.props.selectPreset(preset);\r\n                    this.props.openPreset();\r\n                  }}\r\n                ></ToggleButton>\r\n              ))}\r\n            </div>\r\n          )}\r\n          <div className=\"top-list\">\r\n            {_.isEmpty(filteredData) && !isLoading && (error ? error.message : 'ничего не найдено')}\r\n            {!isLoading &&\r\n              visibleData.map((chartOriginal, chartIndex) => {\r\n                const overrides = chartOverrides[chartOriginal.sharedChartId];\r\n                const chart = _.first(overrides) || chartOriginal;\r\n                if (DEBUG) console.log(chart);\r\n                let topPlace = 1;\r\n                const occuredNicknames = [];\r\n                const results = chart.results.map((res, index) => {\r\n                  const isSecondOccurenceInResults = occuredNicknames.includes(res.nickname);\r\n                  occuredNicknames.push(res.nickname);\r\n                  if (index === 0) {\r\n                    topPlace = 1;\r\n                  } else if (\r\n                    !isSecondOccurenceInResults &&\r\n                    res.score !== _.get([index - 1, 'score'], chart.results)\r\n                  ) {\r\n                    topPlace += 1;\r\n                  }\r\n                  return {\r\n                    ...res,\r\n                    topPlace,\r\n                    isSecondOccurenceInResults,\r\n                  };\r\n                });\r\n                return (\r\n                  <div className=\"song-block\" key={chart.song + chart.chartLabel}>\r\n                    <div className=\"song-name\">\r\n                      <div\r\n                        className={classNames('chart-name', {\r\n                          single: chart.chartType === 'S',\r\n                          singlep: chart.chartType === 'SP',\r\n                          doublep: chart.chartType === 'DP',\r\n                          double: chart.chartType === 'D',\r\n                          coop: chart.chartType === 'COOP',\r\n                        })}\r\n                      >\r\n                        <span className=\"chart-letter\">{chart.chartType}</span>\r\n                        <span className=\"chart-number\">{chart.chartLevel}</span>\r\n                      </div>\r\n                      <div>{chart.song}</div>\r\n                      <div className=\"youtube-link\">\r\n                        <a\r\n                          href={`https://youtube.com/results?search_query=${chart.song\r\n                            .replace(/ /g, '+')\r\n                            .replace(/-/g, '')}+${chart.chartLabel}`}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          <FaYoutube />\r\n                        </a>\r\n                      </div>\r\n                      <div className=\"_flex-fill\" />\r\n                      {(() => {\r\n                        const isActive = !_.isEmpty(overrides);\r\n                        const currentIndex = isActive\r\n                          ? 1 + chart.totalResultsCount - _.size(overrides)\r\n                          : chart.totalResultsCount;\r\n                        const canUndo = !(currentIndex === 1 && chart.totalResultsCount === 1);\r\n                        return (\r\n                          <div\r\n                            className={classNames('undo-result-button', {\r\n                              active: isActive,\r\n                            })}\r\n                          >\r\n                            <FaBackward\r\n                              className={classNames('backward-btn', { disabled: !canUndo })}\r\n                              onClick={() => canUndo && this.onUndoLatestResult(chart)}\r\n                            />\r\n                            <span className=\"number\">\r\n                              {currentIndex}/{chart.totalResultsCount}\r\n                            </span>\r\n                            <FaForward\r\n                              className={classNames('forward-btn', { disabled: !isActive })}\r\n                              onClick={() => isActive && this.onRedoLatestResult(chart)}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      })()}\r\n                    </div>\r\n                    <div className=\"charts\">\r\n                      {!_.isEmpty(results) && (\r\n                        <div className=\"chart\">\r\n                          <div className=\"results\">\r\n                            <table>\r\n                              {chartIndex === 0 && (\r\n                                <thead>\r\n                                  <tr>\r\n                                    <th className=\"place\"></th>\r\n                                    <th className=\"nickname\"></th>\r\n                                    <th className=\"judge\"></th>\r\n                                    <th className=\"score\">score</th>\r\n                                    <th className=\"grade\"></th>\r\n                                    <th className=\"number\">miss</th>\r\n                                    <th className=\"number\">bad</th>\r\n                                    <th className=\"number\">good</th>\r\n                                    <th className=\"number\">great</th>\r\n                                    <th className=\"number\">perfect</th>\r\n                                    <th className=\"combo\">combo</th>\r\n                                    <th className=\"accuracy\">accuracy</th>\r\n                                    <th className=\"date\"></th>\r\n                                  </tr>\r\n                                </thead>\r\n                              )}\r\n                              <FlipMove\r\n                                enterAnimation=\"fade\"\r\n                                leaveAnimation=\"fade\"\r\n                                typeName=\"tbody\"\r\n                                maintainContainerHeight\r\n                                duration={ANIMATION_DURATION}\r\n                              >\r\n                                {results.map((res, index) => {\r\n                                  if (res.isUnknownPlayer && index !== 0) {\r\n                                    return null;\r\n                                  }\r\n                                  const nameIndex = uniqueSelectedNames.indexOf(res.nickname);\r\n                                  let placeDifference, newIndex;\r\n                                  if (res.scoreIncrease && res.date === chart.latestScoreDate) {\r\n                                    const prevScore = res.score - res.scoreIncrease;\r\n                                    newIndex = _.findLastIndex(\r\n                                      res => res.score > prevScore,\r\n                                      results\r\n                                    );\r\n                                    placeDifference = newIndex - index;\r\n                                  }\r\n                                  const inf = scoreInfo[res.id] || {};\r\n                                  return (\r\n                                    <tr\r\n                                      key={res.isRank + '_' + res.nickname}\r\n                                      className={classNames({\r\n                                        empty: !res.isExactDate,\r\n                                        latest: res.date === chart.latestScoreDate,\r\n                                      })}\r\n                                    >\r\n                                      <td className=\"place\">\r\n                                        {res.isSecondOccurenceInResults ? '' : `#${res.topPlace}`}\r\n                                      </td>\r\n                                      <td\r\n                                        className=\"nickname\"\r\n                                        style={\r\n                                          nameIndex > -1\r\n                                            ? { fontWeight: 'bold', color: colorsArray[nameIndex] }\r\n                                            : {}\r\n                                        }\r\n                                      >\r\n                                        {res.nickname}\r\n                                        {!!placeDifference && (\r\n                                          <span className=\"change-holder up\">\r\n                                            <span>{placeDifference}</span>\r\n                                            <FaAngleDoubleUp />\r\n                                          </span>\r\n                                        )}\r\n                                        {DEBUG && inf.startingRating && (\r\n                                          <span className=\"debug-elo-info\">\r\n                                            {' '}\r\n                                            {inf.startingRating && Math.round(inf.startingRating)}\r\n                                            {' / '}\r\n                                            {inf.ratingDiff && Math.round(inf.ratingDiff)}{' '}\r\n                                          </span>\r\n                                        )}\r\n                                        {!DEBUG &&\r\n                                          showProtagonistRatingChange &&\r\n                                          res.nickname === protagonistName &&\r\n                                          inf.ratingDiff && (\r\n                                            <span>\r\n                                              {` (${inf.ratingDiff > 0 ? '+' : ''}${Math.round(\r\n                                                inf.ratingDiff\r\n                                              )})`}\r\n                                            </span>\r\n                                          )}\r\n                                        {_.get('sortingType.value', filter) === SORT.PROTAGONIST &&\r\n                                          res.nickname === protagonistName &&\r\n                                          chart.distanceFromProtagonist > 0 && (\r\n                                            <span className=\"protagonist-diff\">\r\n                                              {' '}\r\n                                              -{(chart.distanceFromProtagonist * 100).toFixed(1)}%\r\n                                            </span>\r\n                                          )}\r\n                                      </td>\r\n                                      <td\r\n                                        className={classNames('judge', {\r\n                                          vj: res.isRank,\r\n                                          hj: res.isHJ,\r\n                                        })}\r\n                                      >\r\n                                        {res.isRank && (\r\n                                          <div className=\"inner\">\r\n                                            {res.isExactDate ? (\r\n                                              'VJ'\r\n                                            ) : (\r\n                                              <Tooltip\r\n                                                content={\r\n                                                  <div>\r\n                                                    наличие ранка на этом результате было угадано,\r\n                                                    основываясь на скоре\r\n                                                  </div>\r\n                                                }\r\n                                                tooltipClassName=\"pumpking-tooltip\"\r\n                                              >\r\n                                                VJ?\r\n                                              </Tooltip>\r\n                                            )}\r\n                                          </div>\r\n                                        )}\r\n                                        {res.isHJ && <div className=\"inner\">HJ</div>}\r\n                                      </td>\r\n                                      <td className=\"score\">\r\n                                        <Overlay\r\n                                          overlayClassName=\"score-overlay-outer\"\r\n                                          overlayItem={\r\n                                            <span className=\"score-span\">\r\n                                              {/* {res.scoreIncrease > res.score * 0.8 && <FaPlus />} */}\r\n                                              {res.scoreIncrease > res.score * 0.8 && '*'}\r\n                                              {numeral(res.score).format('0,0')}\r\n                                            </span>\r\n                                          }\r\n                                          placement=\"top\"\r\n                                        >\r\n                                          <div className=\"score-overlay\">\r\n                                            {DEBUG && (\r\n                                              <>\r\n                                                <div>\r\n                                                  <span className=\"_grey\">result id: </span>\r\n                                                  {res.id}\r\n                                                </div>\r\n                                                <div>\r\n                                                  <span className=\"_grey\">player id: </span>\r\n                                                  {res.playerId}\r\n                                                </div>\r\n                                              </>\r\n                                            )}\r\n                                            <div>\r\n                                              <span className=\"_grey\">игрок: </span>\r\n                                              <NavLink\r\n                                                exact\r\n                                                to={routes.profile.getPath({ id: res.playerId })}\r\n                                              >\r\n                                                {res.nickname} ({res.nicknameArcade})\r\n                                              </NavLink>\r\n                                            </div>\r\n                                            <div>\r\n                                              <span className=\"_grey\">опыт: </span>+\r\n                                              {numeral(getExp(res, chart)).format('0,0')}\r\n                                            </div>\r\n                                            {_.isNumber(inf.startingRating) &&\r\n                                              _.isNumber(inf.ratingDiff) && (\r\n                                                <div>\r\n                                                  <span className=\"_grey\">\r\n                                                    эло: {inf.startingRating.toFixed(0)}{' '}\r\n                                                  </span>\r\n                                                  {inf.ratingDiff >= 0\r\n                                                    ? `+${inf.ratingDiff.toFixed(0)}`\r\n                                                    : inf.ratingDiff.toFixed(0)}\r\n                                                </div>\r\n                                              )}\r\n                                            {!res.isExactDate && (\r\n                                              <div className=\"warning\">\r\n                                                <FaExclamationTriangle />\r\n                                                рекорд взят с my best. часть данных недоступна\r\n                                              </div>\r\n                                            )}\r\n                                            {!!res.isExactDate && (\r\n                                              <>\r\n                                                {!!res.mods && (\r\n                                                  <div>\r\n                                                    <span className=\"_grey\">моды: </span>\r\n                                                    {res.mods}\r\n                                                  </div>\r\n                                                )}\r\n                                                {!!res.calories && (\r\n                                                  <div>\r\n                                                    <span className=\"_grey\">ккал: </span>\r\n                                                    {res.calories}\r\n                                                  </div>\r\n                                                )}\r\n                                                {!!res.scoreIncrease && (\r\n                                                  <div>\r\n                                                    <span className=\"_grey\">прирост: </span>+\r\n                                                    {numeral(res.scoreIncrease).format('0,0')}\r\n                                                  </div>\r\n                                                )}\r\n                                                {res.originalChartMix && (\r\n                                                  <div>\r\n                                                    <div className=\"warning\">\r\n                                                      <FaExclamationTriangle />\r\n                                                      было сыграно на {res.originalChartMix}\r\n                                                    </div>\r\n                                                    {res.originalChartLabel && (\r\n                                                      <div>\r\n                                                        <span className=\"_grey\">\r\n                                                          оригинальный чарт:{' '}\r\n                                                        </span>\r\n                                                        {res.originalChartLabel}\r\n                                                      </div>\r\n                                                    )}\r\n                                                    {res.originalScore && (\r\n                                                      <div>\r\n                                                        <span className=\"_grey\">\r\n                                                          оригинальный скор:{' '}\r\n                                                        </span>\r\n                                                        {res.originalScore}\r\n                                                      </div>\r\n                                                    )}\r\n                                                  </div>\r\n                                                )}\r\n                                                {res.scoreIncrease > res.score * 0.8 && '* сайтрид'}\r\n                                              </>\r\n                                            )}\r\n                                          </div>\r\n                                        </Overlay>\r\n                                      </td>\r\n                                      <td className=\"grade\">\r\n                                        <div className=\"img-holder\">\r\n                                          {res.grade && res.grade !== '?' && (\r\n                                            <img\r\n                                              src={`${process.env.PUBLIC_URL}/grades/${res.grade}.png`}\r\n                                              alt={res.grade}\r\n                                            />\r\n                                          )}\r\n                                          {res.grade === '?' && null}\r\n                                        </div>\r\n                                      </td>\r\n                                      <td className=\"number miss\">{res.miss}</td>\r\n                                      <td className=\"number bad\">{res.bad}</td>\r\n                                      <td className=\"number good\">{res.good}</td>\r\n                                      <td className=\"number great\">{res.great}</td>\r\n                                      <td className=\"number perfect\">{res.perfect}</td>\r\n                                      <td className=\"combo\">\r\n                                        {res.combo}\r\n                                        {res.combo ? 'x' : ''}\r\n                                      </td>\r\n                                      <td className=\"accuracy\">\r\n                                        {res.accuracy}\r\n                                        {res.accuracy ? '%' : ''}\r\n                                      </td>\r\n                                      <td\r\n                                        className={classNames('date', {\r\n                                          latest: res.date === chart.latestScoreDate,\r\n                                        })}\r\n                                      >\r\n                                        <Tooltip\r\n                                          content={tooltipFormatter(res)}\r\n                                          tooltipClassName=\"pumpking-tooltip\"\r\n                                        >\r\n                                          {getTimeAgo(res.dateObject)}\r\n                                          {res.isExactDate ? '' : '?'}\r\n                                        </Tooltip>\r\n                                      </td>\r\n                                    </tr>\r\n                                  );\r\n                                })}\r\n                              </FlipMove>\r\n                            </table>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            {!isLoading && canShowMore && (\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() =>\r\n                  this.setState(state => ({ showItemsCount: state.showItemsCount + 10 }))\r\n                }\r\n              >\r\n                show more...\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Leaderboard);\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n// import numeral from 'numeral';\r\nimport classNames from 'classnames';\r\nimport { GiQueenCrown } from 'react-icons/gi';\r\nimport { FaAngleDoubleUp, FaAngleDoubleDown } from 'react-icons/fa';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nimport { getRankImg } from 'utils/exp';\r\n\r\nconst getGradeImg = grade => (\r\n  <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n);\r\n\r\nexport default function RankingList({ ranking, isLoading }) {\r\n  return (\r\n    <div className=\"ranking-list\">\r\n      {_.isEmpty(ranking) && !isLoading && 'ничего не найдено'}\r\n      {isLoading && <Loader />}\r\n      {!isLoading && (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"place\"></th>\r\n              <th className=\"change\"></th>\r\n              <th className=\"exp-rank\">rank</th>\r\n              <th className=\"name\">name</th>\r\n              <th className=\"name2\">piu name</th>\r\n              <th className=\"rating\">elo</th>\r\n              <th className=\"rating-change-cell\"></th>\r\n              {/* <th className=\"total-score\">total score</th> */}\r\n              <th className=\"grades sss\">{getGradeImg('SSS')}</th>\r\n              <th className=\"grades ss\">{getGradeImg('SS')}</th>\r\n              <th className=\"grades s\">{getGradeImg('S')}</th>\r\n              <th className=\"grades a\">{getGradeImg('A+')}</th>\r\n              <th className=\"grades b\">{getGradeImg('B')}</th>\r\n              <th className=\"grades c\">{getGradeImg('C')}</th>\r\n              <th className=\"grades d\">{getGradeImg('D')}</th>\r\n              <th className=\"grades f\">{getGradeImg('F')}</th>\r\n              <th className=\"playcount\">scores</th>\r\n              {/* <th className=\"calories\">kcal</th> */}\r\n              <th className=\"accuracy\">accuracy</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {ranking.map((player, playerIndex) => {\r\n              return (\r\n                <tr className=\"player\" key={player.name}>\r\n                  <td className=\"place\">\r\n                    {playerIndex === 0 ? <GiQueenCrown /> : `#${playerIndex + 1}`}\r\n                  </td>\r\n                  <td className=\"change\">\r\n                    {player.change > 0 && (\r\n                      <div className=\"change-holder up\">\r\n                        <span>{player.change}</span>\r\n                        <FaAngleDoubleUp />\r\n                      </div>\r\n                    )}\r\n                    {player.change < 0 && (\r\n                      <div className=\"change-holder down\">\r\n                        <span>{-player.change}</span>\r\n                        <FaAngleDoubleDown />\r\n                      </div>\r\n                    )}\r\n                    {!!player.change && _.isString(player.change) && (\r\n                      <div className=\"change-holder text\">\r\n                        <span>{player.change}</span>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"exp-rank\">{getRankImg(player.expRank)}</td>\r\n                  <td className=\"name\">\r\n                    <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                      {player.name}\r\n                    </NavLink>\r\n                  </td>\r\n                  <td className=\"name\">\r\n                    <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                      {player.nameArcade}\r\n                    </NavLink>\r\n                  </td>\r\n                  <td className=\"rating\">{player.rating}</td>\r\n                  <td className=\"rating-change-cell\">\r\n                    {!!player.prevRating && player.prevRating !== player.rating && (\r\n                      <span\r\n                        className={classNames('rating-change', {\r\n                          down: player.prevRating > player.rating,\r\n                          up: player.prevRating < player.rating,\r\n                        })}\r\n                      >\r\n                        {player.prevRating < player.rating ? '+' : ''}\r\n                        {player.rating - player.prevRating}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"grades sss\">{player.grades.SSS}</td>\r\n                  <td className=\"grades ss\">{player.grades.SS}</td>\r\n                  <td className=\"grades s\">{player.grades.S}</td>\r\n                  <td className=\"grades a\">{player.grades.A}</td>\r\n                  <td className=\"grades b\">{player.grades.B}</td>\r\n                  <td className=\"grades c\">{player.grades.C}</td>\r\n                  <td className=\"grades d\">{player.grades.D}</td>\r\n                  <td className=\"grades f\">{player.grades.F}</td>\r\n                  <td className=\"playcount\">{player.count}</td>\r\n                  <td className=\"accuracy\">\r\n                    {player.accuracy ? `${player.accuracy.toFixed(2)}%` : ''}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function RankingFaq() {\r\n  return (\r\n    <div className=\"faq\">\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Как считается рейтинг?</div>\r\n        <div className=\"answer\">\r\n          A: Используется <a href=\"https://en.wikipedia.org/wiki/Elo_rating_system\">рейтинг Эло</a>,\r\n          широко используемый в шахматах и других играх, слегка модицированный под условия игры на\r\n          пампе. Средний рейтинг - 1000. Коэффициент К зависит от уровня чарта (более сложные чарты\r\n          сильнее влияют на рейтинг). Количество очков влияет на заработанный рейтинг (маленький\r\n          отрыв от противника не даст так много очков как большой отрыв).\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Система Эло используется для игр 1 на 1, как она используется на пампе, где на одном\r\n          чарте играет много игроков?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: Рекорды на одном чарте делятся на несколько игр 1 на 1. Если есть 3 игрока: A, B, C; то\r\n          считается, что было 3 отдельные игры: A vs B, A vs C, B vs C.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Учитываются ли рекорды на ранке в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: Да. Как минимум потому что у нас есть много рекордов, взятых с машин бестов, и мы не\r\n          знаем наверняка, на ранке они или нет. Если у игрока в топе есть два скора - на ранке и\r\n          без ранка, используется тот, где больше очков.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Почему меня нет в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: В таблицу попадают только те, у кого есть хотя бы 20 игр 1 на 1. Первые 20 игр\r\n          используются для определения изначального рейтинга.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Почему суммарное количество оценок S-A-B не совпадает с общим количеством скоров?\r\n        </div>\r\n        <div className=\"answer\">A: Не для каждого результата известна оценка.</div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Если у меня есть несколько рекордов на А, несколько на А+, как считается суммарное\r\n          количество грейдов в таблице?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: В каждой колонке учитываются обе буквы - и треснутые, и с удержанным лайфом. То есть и\r\n          А, и А+ идут в колонку А. Точно так же для B, C, D.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Убери аккураси из таблицы!</div>\r\n        <div className=\"answer\">A: Грем, это секция для вопросов.</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle } from 'react-icons/fa';\r\nimport { Link, Route, withRouter } from 'react-router-dom';\r\nimport { createSelector } from 'reselect';\r\nimport _ from 'lodash/fp';\r\n\r\n// styles\r\nimport './ranking.scss';\r\n\r\n// components\r\nimport RankingList from './RankingList';\r\nimport RankingFaq from './RankingFaq';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\n\r\n// utils\r\n\r\n// code\r\nconst rankingSelector = createSelector(\r\n  state => state.results.profiles,\r\n  _.flow(\r\n    _.values,\r\n    _.orderBy(['ratingRaw'], ['desc'])\r\n  )\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ranking: rankingSelector(state),\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading:\r\n      state.results.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n};\r\n\r\nclass Ranking extends Component {\r\n  static propTypes = {\r\n    ranking: toBe.array,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    ranking: [],\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, ranking, error } = this.props;\r\n\r\n    return (\r\n      <div className=\"ranking-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.path}\r\n              render={() => (\r\n                <>\r\n                  <Link to={routes.ranking.faq.path}>\r\n                    <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n                      <FaQuestionCircle /> faq\r\n                    </button>\r\n                  </Link>\r\n                  <button\r\n                    disabled={isLoading}\r\n                    className=\"btn btn-sm btn-dark btn-icon\"\r\n                    onClick={this.onRefresh}\r\n                  >\r\n                    <FaSearch /> обновить\r\n                  </button>\r\n                </>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.faq.path}\r\n              render={() => (\r\n                <Link to={routes.ranking.path}>\r\n                  <button className=\"btn btn-sm btn-dark btn-icon\">назад</button>\r\n                </Link>\r\n              )}\r\n            />\r\n          </div>\r\n          <Route\r\n            exact\r\n            path={routes.ranking.path}\r\n            render={() => <RankingList ranking={ranking} isLoading={isLoading} />}\r\n          />\r\n          <Route exact path={routes.ranking.faq.path} component={RankingFaq} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Ranking));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\nimport { FaPlay } from 'react-icons/fa';\r\nimport { MdExpandMore } from 'react-icons/md';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { parseDate } from 'utils/date';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport './most-played.scss';\r\n\r\nexport default connect(\r\n  state => ({ charts: state.results.sharedCharts }),\r\n  { fetchJson }\r\n)(({ playerId, charts, fetchJson }) => {\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [limit, setLimit] = useState(10);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchJson({\r\n      url: `${HOST}/player/${playerId}/mostPlayed?limit=${limit}`,\r\n    })\r\n      .then(result => {\r\n        setLoading(false);\r\n        if (result.success) {\r\n          setData(result.data);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [playerId, limit, fetchJson]);\r\n\r\n  return (\r\n    <div className=\"most-played\">\r\n      {isLoading && <Loader />}\r\n      {data.map(item => {\r\n        const chart = charts[item.shared_chart];\r\n        return (\r\n          <div className=\"chart\" key={item.shared_chart}>\r\n            <div\r\n              className={classNames('chart-name', {\r\n                single: chart.chartType === 'S',\r\n                singlep: chart.chartType === 'SP',\r\n                doublep: chart.chartType === 'DP',\r\n                double: chart.chartType === 'D',\r\n                coop: chart.chartType === 'COOP',\r\n              })}\r\n            >\r\n              <span className=\"chart-letter\">{chart.chartType}</span>\r\n              <span className=\"chart-number\">{chart.chartLevel}</span>\r\n            </div>\r\n            <div className=\"song-name\">{chart.song}</div>\r\n            <div className=\"date\">\r\n              {item.latestDate ? getTimeAgo(parseDate(item.latestDate)) : null}\r\n            </div>\r\n            <div className=\"playcount\">\r\n              <FaPlay />\r\n              <span>{item.count}</span>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      {limit === _.size(data) && (\r\n        <button\r\n          className=\"show-more btn btn-sm btn-dark btn-icon\"\r\n          onClick={() => setLimit(limit + 10)}\r\n        >\r\n          <MdExpandMore /> больше\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\n\r\nimport { ranks, getRankImg } from 'utils/exp';\r\n\r\nexport default function ExpFaq() {\r\n  return (\r\n    <div className=\"faq-exp\">\r\n      <div className=\"faq-header\">\r\n        <strong>Опыт</strong> игрока основывается на количестве сыгранных песен и чартов.\r\n        <br />\r\n        Чем выше уровень чарта и чем лучше оценка на чарте, тем больше опыта он даёт.\r\n        <br />\r\n        Повторные попытки на тех же чартах не дают больше опыта. Чтобы поднимать свой уровень, играй\r\n        новые треки и чарты.\r\n      </div>\r\n      <div className=\"faq-header\">Список уровней и необходимый опыт для их получения:</div>\r\n      <div className=\"ranks-list\">\r\n        {ranks.map(rank => (\r\n          <div key={rank.threshold} className=\"rank\">\r\n            <div className=\"exp-rank\">{getRankImg(rank)}</div>\r\n            <div className=\"threshold\">{rank.threshold}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const SET_FILTER = `PROFILES/SET_FILTER`;\r\nconst RESET_FILTER = `PROFILES/RESET_FILTER`;\r\n\r\nexport const defaultFilter = {};\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  filter: defaultFilter,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setProfilesFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\n\r\nexport const resetProfilesFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle, FaTimes } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport ReactModal from 'react-modal';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as RechartsTooltip,\r\n  ReferenceLine,\r\n  CartesianGrid,\r\n  Line,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Label,\r\n} from 'recharts';\r\nimport { createSelector } from 'reselect';\r\nimport _ from 'lodash/fp';\r\nimport moment from 'moment';\r\n\r\n// styles\r\nimport './profile.scss';\r\n\r\n// constants\r\n\r\n// components\r\nimport Range from 'components/Shared/Range';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport MostPlayed from './MostPlayed';\r\nimport ExpFaq from './ExpFaq';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\nimport { setProfilesFilter, resetProfilesFilter } from 'reducers/profiles';\r\n\r\n// utils\r\nimport { parseDate } from 'utils/date';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { achievements } from 'utils/achievements';\r\nimport { getRankImg } from 'utils/exp';\r\n\r\n// code\r\nconst MIN_GRAPH_HEIGHT = undefined;\r\nconst defaultGradesDistribution = {\r\n  SSS: 0,\r\n  SS: 0,\r\n  S: 0,\r\n  'A+': 0,\r\n  A: 0,\r\n  B: 0,\r\n  C: 0,\r\n  D: 0,\r\n  F: 0,\r\n};\r\nconst defaultGradesWithLevelsDistribution = _.flow(\r\n  _.flatMap(type => {\r\n    return _.flow(\r\n      _.toPairs,\r\n      _.map(([grade, value]) => [`${type}-${grade}`, value])\r\n    )(defaultGradesDistribution);\r\n  }),\r\n  _.fromPairs\r\n)(['S', 'D']);\r\n\r\nconst cutRange = (array, range) => {\r\n  const startIndex = _.findIndex(item => item.date > range[0], array);\r\n  const endIndex = _.findLastIndex(item => item.date < range[1], array);\r\n  let firstElement =\r\n    startIndex > 0 ? array[startIndex - 1] : startIndex === 0 ? array[startIndex] : _.last(array);\r\n  let lastElement = endIndex > -1 ? array[endIndex] : _.first(array);\r\n  firstElement = { ...firstElement, date: range[0] };\r\n  lastElement = { ...lastElement, date: range[1] };\r\n  const middleElements =\r\n    startIndex > -1 && endIndex > -1 ? array.slice(startIndex, endIndex + 1) : [];\r\n\r\n  return [firstElement, ...middleElements, lastElement];\r\n};\r\nconst profileSelector = createSelector(\r\n  (state, props) => _.toInteger(props.match.params.id),\r\n  state => state.results.isLoading || state.results.isLoadingRanking,\r\n  state => state.results.profiles,\r\n  state => state.profiles.filter,\r\n  state => state.tracklist.data,\r\n  (id, isLoading, profiles, filter, tracklist) => {\r\n    const profile = profiles[id];\r\n    if (_.isEmpty(profile) || isLoading) {\r\n      return null;\r\n    }\r\n    const levelsDistribution = _.flow(\r\n      _.get('resultsByLevel'),\r\n      _.toPairs,\r\n      _.map(([x, y]) => ({\r\n        x: _.toInteger(x),\r\n        S:\r\n          (_.size(_.filter(res => res.chart.chartType === 'S' || res.chart.chartType === 'SP', y)) /\r\n            tracklist.singlesLevels[x]) *\r\n          100,\r\n        D:\r\n          (-_.size(\r\n            _.filter(res => res.chart.chartType === 'D' || res.chart.chartType === 'DP', y)\r\n          ) /\r\n            tracklist.doublesLevels[x]) *\r\n          100,\r\n      }))\r\n    )(profile);\r\n    const gradesData = _.flow(\r\n      _.get('resultsByLevel'),\r\n      _.toPairs,\r\n      _.map(\r\n        _.update('[1].result.grade', grade =>\r\n          grade && grade.includes('+') && grade !== 'A+' ? grade.replace('+', '') : grade\r\n        )\r\n      )\r\n    )(profile);\r\n    const gradesDistribution = _.flow(\r\n      _.map(([x, y]) => ({\r\n        x: _.toInteger(x),\r\n        ...defaultGradesDistribution,\r\n        ..._.omit('?', _.mapValues(_.size, _.groupBy('result.grade', y))),\r\n      })),\r\n      _.map(item => {\r\n        const grades = _.pick(Object.keys(defaultGradesDistribution), item);\r\n        const sum = _.sum(_.values(grades));\r\n        return {\r\n          ...item,\r\n          gradesValues: grades,\r\n          ...(sum === 0 ? grades : _.mapValues(value => (100 * value) / sum, grades)),\r\n        };\r\n      })\r\n    )(gradesData);\r\n    const gradesAndLevelsDistribution = _.flow(\r\n      _.map(([x, y]) => {\r\n        const groupedResults = _.groupBy('result.grade', y);\r\n        const counts = _.omit(\r\n          '?',\r\n          _.mapValues(\r\n            _.countBy(res => {\r\n              return res.chart.chartType === 'S' || res.chart.chartType === 'SP'\r\n                ? 'S'\r\n                : res.chart.chartType === 'D' || res.chart.chartType === 'DP'\r\n                ? 'D'\r\n                : 'Other';\r\n            }),\r\n            groupedResults\r\n          )\r\n        );\r\n        const reduced = _.reduce(\r\n          (acc, [grade, levelsData]) => {\r\n            const accData = _.flow(\r\n              _.toPairs,\r\n              _.map(([type, count]) => [\r\n                `${type}-${grade}`,\r\n                type === 'S'\r\n                  ? (count / tracklist.singlesLevels[x]) * 100\r\n                  : (-count / tracklist.doublesLevels[x]) * 100,\r\n              ]),\r\n              _.fromPairs\r\n            )(levelsData);\r\n            return { ...acc, ...accData };\r\n          },\r\n          {},\r\n          _.toPairs(counts)\r\n        );\r\n\r\n        return {\r\n          x: _.toInteger(x),\r\n          ...defaultGradesWithLevelsDistribution,\r\n          ...reduced,\r\n        };\r\n      })\r\n    )(gradesData);\r\n    const lastTickRating = _.last(profile.ratingHistory).date;\r\n    const lastTickRanking = _.last(profile.rankingHistory).date;\r\n    const lastTick = lastTickRating > lastTickRanking ? lastTickRating : lastTickRanking; // End graph at either point\r\n    const firstTick = _.first(profile.ratingHistory).date; // Start graph from the first battle of this player\r\n    const lastDay = moment(lastTick).endOf('day');\r\n    const firstDay = moment(firstTick).startOf('day');\r\n    const minMaxRange = [firstDay / 1000 / 60 / 60 / 24, lastDay / 1000 / 60 / 60 / 24];\r\n\r\n    const filterRange = filter.dayRange || [\r\n      Math.max(minMaxRange[0], minMaxRange[1] - 30),\r\n      minMaxRange[1],\r\n    ];\r\n    const dayRangeMs = [\r\n      +moment(filterRange[0] * 1000 * 60 * 60 * 24).startOf('day'),\r\n      +moment(filterRange[1] * 1000 * 60 * 60 * 24).endOf('day'),\r\n    ];\r\n    const placesChanges = cutRange(profile.rankingHistory, dayRangeMs);\r\n    const ratingChanges = cutRange(profile.ratingHistory, dayRangeMs);\r\n    const rank = 1 + _.findIndex({ id }, _.orderBy(['ratingRaw'], ['desc'], _.values(profiles)));\r\n    return {\r\n      ...profile,\r\n      rank,\r\n      minMaxRange,\r\n      filterRange,\r\n      levelsDistribution,\r\n      gradesDistribution,\r\n      gradesAndLevelsDistribution,\r\n      placesChanges,\r\n      ratingChanges,\r\n    };\r\n  }\r\n);\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    profile: profileSelector(state, props),\r\n    tracklist: state.tracklist.data,\r\n    filter: state.profiles.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading:\r\n      state.results.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setProfilesFilter,\r\n  resetProfilesFilter,\r\n};\r\n\r\nclass Profile extends Component {\r\n  static propTypes = {\r\n    profile: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    profile: {},\r\n  };\r\n\r\n  state = {\r\n    isLevelGraphCombined: true,\r\n    showFaq: false,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetProfilesFilter();\r\n  }\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onChangeDayRange = range => {\r\n    const { filter } = this.props;\r\n    this.props.setProfilesFilter({\r\n      ...filter,\r\n      dayRange: range,\r\n    });\r\n  };\r\n\r\n  onShowFaq = () => {\r\n    this.setState({ showFaq: true });\r\n  };\r\n\r\n  onHideFaq = () => {\r\n    this.setState({ showFaq: false });\r\n  };\r\n\r\n  renderRankingHistory() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={profile.ratingChanges} margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={value => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={['dataMin - 100', 'dataMax + 100']}\r\n            tickFormatter={Math.round}\r\n            width={40}\r\n          />\r\n          <ReferenceLine y={1000} stroke=\"white\" />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Rating: {Math.round(payload[0].value)}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderPlaceHistory() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={profile.placesChanges} margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={value => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={[1, dataMax => (dataMax < 3 ? dataMax + 2 : dataMax + 1)]}\r\n            interval={0}\r\n            reversed\r\n            width={40}\r\n          />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Place: #{payload[0].value}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGrades() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <BarChart\r\n          data={profile.gradesDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {_.filter(item => item.value > 0, payload).map(item => (\r\n                    <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                      {item.name}: {payload[0].payload.gradesValues[item.name]}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            domain={[0, 100]}\r\n            ticks={[0, 50, 100]}\r\n            tickFormatter={x => `${Math.round(x)}%`}\r\n            width={40}\r\n          />\r\n          <Legend />\r\n          <Bar dataKey=\"SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"F\" fill=\"#774949\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradesWithLevels() {\r\n    const { profile, tracklist } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={0.74}>\r\n        <BarChart\r\n          data={profile.gradesAndLevelsDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n          stackOffset=\"sign\"\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              const doubleItems = _.filter(\r\n                item => item.value !== 0 && item.dataKey.startsWith('D'),\r\n                payload\r\n              );\r\n              const singleItems = _.filter(\r\n                item => item.value !== 0 && item.dataKey.startsWith('S'),\r\n                payload\r\n              );\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {!!singleItems.length && (\r\n                    <>\r\n                      <div>Single:</div>\r\n                      {singleItems.map(item => (\r\n                        <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                          {item.name.slice(2)}: {Math.round(Math.abs(item.value))}% (\r\n                          {Math.round((tracklist.singlesLevels[item.payload.x] * item.value) / 100)}\r\n                          /{tracklist.singlesLevels[item.payload.x]})\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                  {!!doubleItems.length && (\r\n                    <>\r\n                      <div>Double:</div>\r\n                      {doubleItems.map(item => (\r\n                        <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                          {item.name.slice(2)}: {Math.round(Math.abs(item.value))}% (\r\n                          {Math.round(\r\n                            (tracklist.doublesLevels[item.payload.x] * -item.value) / 100\r\n                          )}\r\n                          /{tracklist.doublesLevels[item.payload.x]})\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            tickFormatter={x => `${Math.round(Math.abs(x))}%`}\r\n            width={40}\r\n            domain={[dataMin => Math.min(dataMin, -10), dataMax => Math.max(10, dataMax)]}\r\n          />\r\n          <Bar dataKey=\"S-SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Label value=\"Double\" offset={0} position=\"insideBottomLeft\" />\r\n          <Label value=\"Single\" offset={0} position=\"insideTopLeft\" />\r\n          <ReferenceLine y={0} stroke=\"#bbb\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderLevels() {\r\n    const { profile, tracklist } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <BarChart\r\n          data={profile.levelsDistribution}\r\n          stackOffset=\"sign\"\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              const totalD = tracklist.doublesLevels[payload[0].payload.x];\r\n              const totalS = tracklist.singlesLevels[payload[0].payload.x];\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {totalS > 0 && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n                      Single: {Math.abs(payload[1].value).toFixed(1)}% (\r\n                      {Math.round((payload[1].value * totalS) / 100)}/{totalS})\r\n                    </div>\r\n                  )}\r\n                  {totalD > 0 && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n                      Double: {Math.abs(payload[0].value).toFixed(1)}% (\r\n                      {Math.round((Math.abs(payload[0].value) * totalD) / 100)}/{totalD})\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            tickFormatter={x => Math.round(Math.abs(x)) + '%'}\r\n            width={40}\r\n            domain={[dataMin => Math.min(dataMin, -10), dataMax => Math.max(10, dataMax)]}\r\n          />\r\n          <RechartsTooltip />\r\n          <ReferenceLine y={0} stroke=\"#555\" />\r\n          <Legend />\r\n          <Bar dataKey=\"D\" fill=\"#169c16\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#af2928\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradeBlock(type, grade) {\r\n    const { profile } = this.props;\r\n    const obj = profile.progress[type];\r\n    const typeLetter = type === 'double' ? 'D' : 'S';\r\n    const progr = Math.floor((obj[`${grade}-bonus-level-coef`] || 0) * 100);\r\n    const minNumber = obj[`${grade}-bonus-level-min-number`];\r\n    const currentNumber = obj[`${grade}-bonus-level-achieved-number`];\r\n    const levelString = obj[`${grade}-bonus-level`]\r\n      ? `${typeLetter}${obj[`${grade}-bonus-level`]}`\r\n      : '?';\r\n    return (\r\n      <div className=\"grade-block\">\r\n        <div className=\"grade-letter\">\r\n          <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n        </div>\r\n        <div className=\"grade-level\">{levelString}</div>\r\n        <div className=\"grade-progress\">\r\n          {progr}% ({progr === 100 ? minNumber : currentNumber}/{minNumber})\r\n        </div>\r\n        <div className=\"grade-progress\">бонус: +{Math.floor(obj[`${grade}-bonus`])}</div>\r\n        <div\r\n          className={classNames('progress-background', {\r\n            complete: progr === 100,\r\n            zero: progr === 0,\r\n          })}\r\n          style={{\r\n            height: `${progr}%`,\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderAchievement(achName, achievement) {\r\n    const Icon = achievements[achName].icon;\r\n    const description = achievements[achName].description;\r\n    return (\r\n      <Tooltip\r\n        key={achName}\r\n        content={<div>{description}</div>}\r\n        tooltipClassName=\"pumpking-tooltip achievement-tooltip\"\r\n      >\r\n        <div className=\"ach-block\">\r\n          {Icon && (\r\n            <div className=\"ach-icon\">\r\n              <Icon />\r\n            </div>\r\n          )}\r\n          <div className=\"ach-name\">{achName}</div>\r\n          <div\r\n            className={classNames('progress-background', {\r\n              complete: achievement.progress === 100,\r\n              zero: achievement.progress === 0,\r\n            })}\r\n            style={{\r\n              height: `${Math.round(achievement.progress)}%`,\r\n            }}\r\n          />\r\n        </div>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  renderProfile() {\r\n    const { profile, filter } = this.props;\r\n    const { isLevelGraphCombined } = this.state;\r\n    const expProgress = profile.expRankNext\r\n      ? (profile.exp - profile.expRank.threshold) /\r\n        (profile.expRankNext.threshold - profile.expRank.threshold)\r\n      : 100;\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"profile-header\">\r\n          <div className=\"profile-name text-with-header\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile.lastResultDate ? getTimeAgo(profile.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header _flex-row _align-center\">\r\n            <span>опыт</span>\r\n            <div className=\"_flex-fill\" />\r\n            <div onClick={this.onShowFaq} className=\"_clickable\">\r\n              <FaQuestionCircle onClick={this.onShowFaq} />\r\n            </div>\r\n            <ReactModal\r\n              ariaHideApp={false}\r\n              className=\"Modal faq-modal\"\r\n              overlayClassName=\"Overlay\"\r\n              isOpen={this.state.showFaq}\r\n              onRequestClose={this.onHideFaq}\r\n            >\r\n              <div className=\"close-btn\" onClick={this.onHideFaq}>\r\n                <FaTimes />\r\n              </div>{' '}\r\n              <ExpFaq />\r\n            </ReactModal>\r\n          </div>\r\n          <div className=\"exp-range\">\r\n            <div className=\"rank exp-rank\">\r\n              {getRankImg(profile.expRank)}\r\n              {profile.expRank && <div>{profile.expRank.threshold}</div>}\r\n            </div>\r\n            <div className=\"exp-line-with-label\">\r\n              <div className=\"exp-label\">\r\n                {profile.expRankNext ? (\r\n                  <>\r\n                    <span className=\"taken-num\">\r\n                      {Math.round(profile.exp - profile.expRank.threshold)}\r\n                    </span>\r\n                    {` / ${profile.expRankNext.threshold - profile.expRank.threshold}`}\r\n                  </>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"exp-line\">\r\n                <div className=\"taken\" style={{ width: Math.floor(100 * expProgress) + '%' }}></div>\r\n                <div\r\n                  className=\"rest\"\r\n                  style={{ width: 100 - Math.ceil(100 * expProgress) + '%' }}\r\n                ></div>\r\n              </div>\r\n              <div className=\"exp-label\">\r\n                total: <span className=\"taken-num\">{Math.round(profile.exp)}</span>\r\n              </div>\r\n            </div>\r\n            {profile.expRankNext && (\r\n              <div className=\"rank exp-rank\">\r\n                {getRankImg(profile.expRankNext)}\r\n                {profile.expRankNext && <div>{profile.expRankNext.threshold}</div>}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              {!isLevelGraphCombined ? (\r\n                <>\r\n                  <div className=\"profile-section-2\">\r\n                    <div className=\"profile-sm-section-header flex\">\r\n                      <span>уровни</span>\r\n                      <div className=\"toggle-holder\">\r\n                        <Toggle\r\n                          className=\"combine-toggle\"\r\n                          checked={isLevelGraphCombined}\r\n                          onChange={() =>\r\n                            this.setState(state => ({\r\n                              isLevelGraphCombined: !state.isLevelGraphCombined,\r\n                            }))\r\n                          }\r\n                        >\r\n                          объединить графики\r\n                        </Toggle>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"chart-container\">{this.renderLevels()}</div>\r\n                  </div>\r\n                  <div className=\"profile-section-2\">\r\n                    <div className=\"profile-sm-section-header\">\r\n                      <span>оценки</span>\r\n                    </div>\r\n                    <div className=\"chart-container\">{this.renderGrades()}</div>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div className=\"profile-section-2\">\r\n                  <div className=\"profile-sm-section-header flex\">\r\n                    <span>оценки</span>\r\n                    <div className=\"toggle-holder\">\r\n                      <Toggle\r\n                        className=\"combine-toggle\"\r\n                        checked={isLevelGraphCombined}\r\n                        onChange={() =>\r\n                          this.setState(state => ({\r\n                            isLevelGraphCombined: !state.isLevelGraphCombined,\r\n                          }))\r\n                        }\r\n                      >\r\n                        объединить графики\r\n                      </Toggle>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"chart-container single-double-labels\">\r\n                    {this.renderGradesWithLevels()}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>эло</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderRankingHistory()}</div>\r\n              </div>\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>место в топе</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderPlaceHistory()}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"range-container\">\r\n              <Range\r\n                range={filter.dayRange || profile.filterRange}\r\n                min={profile.minMaxRange[0]}\r\n                max={profile.minMaxRange[1]}\r\n                onChange={this.onChangeDayRange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section progress-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>достижения по уровням</span>\r\n          </div>\r\n          <div className=\"progress-blocks-single-double\">\r\n            <div className=\"progress-block\">\r\n              <div className=\"achievements-grades single\">\r\n                {this.renderGradeBlock('single', 'A')}\r\n                {this.renderGradeBlock('single', 'A+')}\r\n                {this.renderGradeBlock('single', 'S')}\r\n                {this.renderGradeBlock('single', 'SS')}\r\n              </div>\r\n            </div>\r\n            <div className=\"progress-block\">\r\n              <div className=\"achievements-grades double\">\r\n                {this.renderGradeBlock('double', 'A')}\r\n                {this.renderGradeBlock('double', 'A+')}\r\n                {this.renderGradeBlock('double', 'S')}\r\n                {this.renderGradeBlock('double', 'SS')}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"bonus-faq\">\r\n            * суммарный бонус (+{Math.round(profile.progress.bonus)}) добавляется к стартовому Эло\r\n            <br />* для получения ачивки нужно сыграть около 10% всех чартов данного левела на\r\n            нужный грейд\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>достижения</span>\r\n          </div>\r\n          <div className=\"achievements\">\r\n            {_.keys(profile.achievements).map(achName =>\r\n              this.renderAchievement(achName, profile.achievements[achName])\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>часто играемые чарты</span>\r\n          </div>\r\n          <MostPlayed playerId={profile.id} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, profile, error } = this.props;\r\n    return (\r\n      <div className=\"profile-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"btn btn-sm btn-dark btn-icon\"\r\n              onClick={this.onRefresh}\r\n            >\r\n              <FaSearch /> обновить\r\n            </button>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!isLoading && _.isEmpty(profile) && <div className=\"profile\">Profile not found</div>}\r\n          {!isLoading && !_.isEmpty(profile) && this.renderProfile()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Profile));\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\nimport { RESET } from './resetAction';\r\n\r\nconst LOADING = `USER/LOADING`;\r\nconst SUCCESS = `USER/SUCCESS`;\r\nconst ERROR = `USER/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        data: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: null,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    case RESET:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchUser = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/profile` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport { resetUser } from './resetAction';\r\n","import cookies from 'browser-cookies';\r\n\r\nimport { postJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport { fetchUser, resetUser } from 'reducers/user';\r\n\r\nconst LOADING = `LOGIN/LOADING`;\r\nconst SUCCESS = `LOGIN/SUCCESS`;\r\nconst ERROR = `LOGIN/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n  error: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        data: null,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: null,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const login = googleResponse => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        postJson({\r\n          url: `${HOST}/login/google`,\r\n          body: { token: googleResponse.tokenId },\r\n        })\r\n      );\r\n      cookies.set('session', data.session, { expires: 30 });\r\n      dispatch({ type: SUCCESS, data });\r\n      dispatch(fetchUser());\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    dispatch(resetUser());\r\n    try {\r\n      const data = await dispatch(\r\n        postJson({\r\n          url: `${HOST}/logout`,\r\n        })\r\n      );\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './top-bar.scss';\r\n\r\n// routes\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport * as loginACs from 'reducers/login';\r\n\r\n// redux\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoadingLogin: state.login.isLoading,\r\n    isLoadingUser: state.user.isLoading,\r\n    user: state.user.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login: loginACs.login,\r\n  logout: loginACs.logout,\r\n};\r\n\r\nfunction TopBar({ isLoadingLogin, isLoadingUser, user, login, logout }) {\r\n  return (\r\n    <header className=\"top-bar\">\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <NavLink exact to={routes.leaderboard.path}>\r\n              leaderboard\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact to={routes.ranking.path}>\r\n              ranking\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div className=\"_flex-fill\" />\r\n      <div className=\"login-container\">\r\n        <div className=\"player-info\">{_.getOr('', 'player.nickname', user)}</div>\r\n        <button\r\n          className=\"btn btn-dark btn-icon btn-sm\"\r\n          onClick={logout}\r\n          disabled={isLoadingLogin || isLoadingUser}\r\n        >\r\n          <span> logout</span>\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TopBar);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { FaGoogle } from 'react-icons/fa';\r\nimport Emoji from 'react-emoji-render';\r\n\r\nimport './login-screen.scss';\r\n\r\n// reducers\r\nimport * as loginACs from 'reducers/login';\r\n\r\n// redux\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoading: state.login.isLoading,\r\n    error: state.login.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login: loginACs.login,\r\n};\r\n\r\nfunction LoginScreen({ isLoading, error, login }) {\r\n  const [isClown, setClown] = useState(false);\r\n  const onGoogleResponse = res => {\r\n    if (res.error) {\r\n      console.log('Google login response error:', res);\r\n    } else {\r\n      login(res);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <div className=\"site-name\">pumpking</div>\r\n      <div className=\"login-button\">\r\n        <GoogleLogin\r\n          clientId=\"197132042723-cmibep21qf6dald9l2l01rif7l5dtd4s.apps.googleusercontent.com\"\r\n          buttonText=\"Login\"\r\n          onSuccess={onGoogleResponse}\r\n          onFailure={onGoogleResponse}\r\n          cookiePolicy={'single_host_origin'}\r\n          render={({ onClick, disabled }) => (\r\n            <button\r\n              className=\"btn btn-dark btn-icon btn-sm\"\r\n              onClick={onClick}\r\n              disabled={disabled || isLoading}\r\n            >\r\n              <FaGoogle />\r\n              <span> login</span>\r\n            </button>\r\n          )}\r\n        />\r\n      </div>\r\n      {error && <div className=\"error\">{error.message}</div>}\r\n      <div className=\"footer\">\r\n        By logging in, you agree to our{' '}\r\n        {isClown ? (\r\n          <Emoji text=\"🤡\" className=\"clown\" />\r\n        ) : (\r\n          <span onClick={() => setClown(true)} className=\"link-style\">\r\n            Privacy Policy\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginScreen);\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TRACKLIST/LOADING`;\r\nconst SUCCESS = `TRACKLIST/SUCCESS`;\r\nconst ERROR = `TRACKLIST/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTracklist = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/tracklist/stats/XX` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport localForage from 'localforage';\r\nimport _ from 'lodash/fp';\r\n\r\nimport 'react-responsive-ui/style.css';\r\nimport './App.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\nimport { CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nimport Leaderboard from 'components/Leaderboard/Leaderboard';\r\nimport Ranking from 'components/Ranking/Ranking';\r\nimport Profile from 'components/Profile/Profile';\r\nimport TopBar from 'components/Shared/TopBar/TopBar';\r\nimport Loader from 'components/Shared/Loader';\r\nimport LoginScreen from 'components/LoginScreen/LoginScreen';\r\n\r\nimport { fetchResults, setFilter } from 'reducers/results';\r\nimport { fetchTracklist } from 'reducers/tracklist';\r\nimport { fetchUser } from 'reducers/user';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data: state.user.data,\r\n    isLoading: state.user.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setFilter,\r\n  fetchResults,\r\n  fetchTracklist,\r\n  fetchUser,\r\n};\r\n\r\nfunction App(props) {\r\n  const { fetchUser, fetchTracklist, fetchResults, setFilter, data, isLoading } = props;\r\n\r\n  useEffect(() => {\r\n    localForage\r\n      .getItem('filter')\r\n      .then(filter => {\r\n        if (filter) {\r\n          setFilter({\r\n            ...filter,\r\n            chartRange: filter.chartRange && {\r\n              ...filter.chartRange,\r\n              range: _.every(\r\n                r => r >= CHART_MIN_MAX[0] && r <= CHART_MIN_MAX[1],\r\n                filter.chartRange.range\r\n              )\r\n                ? filter.chartRange.range\r\n                : CHART_MIN_MAX,\r\n            },\r\n          });\r\n        }\r\n      })\r\n      .catch(error => console.error('Cannot get filter from local storage', error));\r\n    fetchUser();\r\n  }, [fetchUser, fetchTracklist, fetchResults, setFilter]);\r\n\r\n  useEffect(() => {\r\n    if (data && data.player) {\r\n      fetchTracklist().then(() => {\r\n        fetchResults();\r\n      });\r\n    }\r\n  }, [data, fetchResults, fetchTracklist]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <Loader />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!data || !data.player) {\r\n    return <LoginScreen />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TopBar />\r\n      <Route exact path=\"/\" render={() => <Redirect to={routes.leaderboard.path} />} />\r\n      <Route path={routes.leaderboard.path} component={Leaderboard} />\r\n      <Route path={routes.ranking.path} component={Ranking} />\r\n      <Route path={routes.profile.path} component={Profile} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport _ from 'lodash/fp';\r\n\r\nimport tracklist from 'reducers/tracklist';\r\nimport profiles from 'reducers/profiles';\r\nimport presets from 'reducers/presets';\r\nimport results from 'reducers/results';\r\nimport user from 'reducers/user';\r\nimport login from 'reducers/login';\r\n\r\nconst rootReducer = combineReducers({\r\n  login,\r\n  presets,\r\n  profiles,\r\n  tracklist,\r\n  results,\r\n  user,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && process.env.NODE_ENV === 'development'\r\n    ? compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__({\r\n          stateSanitizer: state => ({\r\n            ...state,\r\n            results: {\r\n              ...state.results,\r\n              data: `big array, ${_.size(state.results.data)}`,\r\n              results: `big array, ${_.size(state.results.results)}`,\r\n              sharedCharts: 'big object',\r\n              profiles: _.mapValues(\r\n                pl => ({\r\n                  ...pl,\r\n                  resultsByGrade: '...',\r\n                  resultsByLevel: '...',\r\n                  rankingHistory: '...',\r\n                  ratingHistory: '...',\r\n                }),\r\n                state.results.profiles\r\n              ),\r\n            },\r\n          }),\r\n        })\r\n      )\r\n    : applyMiddleware(thunk)\r\n);\r\n","import 'promise-polyfill';\r\nimport 'whatwg-fetch';\r\nimport 'utils/polyfills';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.scss';\r\nimport App from 'components/App';\r\n\r\nimport { store } from 'reducers';\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}