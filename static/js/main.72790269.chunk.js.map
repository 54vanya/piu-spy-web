{"version":3,"sources":["components/Overlay/Overlay.js","components/ToggleButton/ToggleButton.js","utils/fetch.js","reducers/top.js","components/Rankings/Rankings.js","constants/backend.js","components/App.js","reducers/index.js","index.js"],"names":["POPPER_MODIFIERS","preventOverflow","enabled","padding","boundariesElement","PLACEMENT_ARROW_MAPPING","right","left","top","bottom","getArrowPlacement","placement","split","Overlay","state","isVisible","containerItemRef","React","createRef","renderPopper","bind","toggleOverlayVisibility","this","setState","event","target","closest","hideOverlay","ref","style","arrowProps","outOfBoundaries","scheduleUpdate","props","children","hideWhenOutOfBounds","data-placement","className","classNames","overlayItem","Fragment","onClick","ReactDOM","createPortal","container","document","body","modifiers","referenceElement","current","PureComponent","defaultTypes","listensToClickOutside","ToggleButton","active","onToggle","text","fetchJson","a","url","fetch","response","status","json","data","Error","console","error","Promise","reject","LOADING","SUCCESS","ERROR","initialState","isLoading","transformBackendData","_","flow","get","values","map","item","song","track","chartLabel","chart_label","chartLevel","slice","chartType","mix","results","res","nickname","date","gained","isExactDate","exact_gained_date","score","perfect","perfects","great","greats","good","goods","bad","bads","miss","misses","combo","max_combo","mods","mods_list","isRank","rank_mode","accuracy","toFixed","orderBy","chartMinMax","getFilteredData","filter","names","players","compact","items","matchSorter","keys","length","row","rowNames","every","name","includes","chartRange","rows","range","getOr","type","filterCharts","ChartFilter","filterValue","onChange","buttonText","t","step","min","max","r","renderTrack","onMouseDown","onTouchStart","height","display","width","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","justifyContent","alignItems","boxShadow","playersSelector","createSelector","flatMap","uniq","sortBy","toLower","label","value","mapDispatchToProps","fetchTopScores","dispatch","TopScores","showItemsCount","minWidth","maxWidth","Header","accessor","filterMethod","Cell","original","key","filteredData","bySong","groupBy","allSongs","canShowMore","songs","message","placeholder","e","closeMenuOnSelect","classNamePrefix","isMulti","options","chart","single","index","numeral","format","vj","Component","connect","App","exact","path","component","Rankings","rootReducer","combineReducers","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","thunk","stateSanitizer","JavascriptTimeAgo","locale","en","render","getElementById"],"mappings":"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","file":"static/js/main.72790269.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport toBe from 'prop-types';\r\nimport { Popper } from 'react-popper';\r\nimport classNames from 'classnames';\r\nimport listensToClickOutside from 'react-onclickoutside';\r\n\r\nimport './overlay.scss';\r\n\r\nconst POPPER_MODIFIERS = {\r\n  preventOverflow: {\r\n    enabled: true,\r\n    padding: 10,\r\n    boundariesElement: 'viewport',\r\n  },\r\n};\r\n\r\nconst PLACEMENT_ARROW_MAPPING = {\r\n  right: 'left',\r\n  left: 'right',\r\n  top: 'bottom',\r\n  bottom: 'top',\r\n};\r\n\r\nconst getArrowPlacement = placement => {\r\n  return placement && PLACEMENT_ARROW_MAPPING[placement.split('-')[0]];\r\n};\r\n\r\nclass Overlay extends React.PureComponent {\r\n  static propTypes = {\r\n    placement: toBe.string,\r\n    overlayItem: toBe.any,\r\n    hideWhenOutOfBounds: toBe.bool,\r\n  };\r\n\r\n  static defaultTypes = {\r\n    placement: 'bottom',\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isVisible: false,\r\n    };\r\n    this.containerItemRef = React.createRef();\r\n    this.renderPopper = this.renderPopper.bind(this);\r\n    this.toggleOverlayVisibility = this.toggleOverlayVisibility.bind(this);\r\n  }\r\n\r\n  hideOverlay() {\r\n    this.setState({\r\n      isVisible: false,\r\n    });\r\n  }\r\n\r\n  toggleOverlayVisibility() {\r\n    this.setState({\r\n      isVisible: !this.state.isVisible,\r\n    });\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    const preventHiding = event && event.target.closest('.inner-popper-overlay'); // prevent overlays from hiding when a modal is opened within overlay\r\n\r\n    if (!preventHiding) {\r\n      this.hideOverlay();\r\n    }\r\n  }\r\n\r\n  renderPopper({ ref, style, placement, arrowProps, scheduleUpdate, outOfBoundaries }) {\r\n    const { children, hideWhenOutOfBounds } = this.props;\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        data-placement={placement}\r\n        className={classNames(\r\n          'inner-popper-overlay',\r\n          `arrow-${getArrowPlacement(placement)}`,\r\n          // this.props.overlayClassName,\r\n          { 'out-of-bounds': outOfBoundaries && hideWhenOutOfBounds }\r\n        )}\r\n      >\r\n        <div className=\"arrow-hider\">\r\n          <div className=\"arrow\" ref={arrowProps.ref} style={arrowProps.style} />\r\n        </div>\r\n        <div\r\n          className=\"inner-popper-content\"\r\n          // ref={ref => this.setupPopperContentRef(scheduleUpdate, ref)}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { placement, overlayItem } = this.props;\r\n    const { isVisible } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"overlay-item\"\r\n          ref={this.containerItemRef}\r\n          onClick={this.toggleOverlayVisibility}\r\n        >\r\n          {overlayItem}\r\n        </div>\r\n        {isVisible &&\r\n          ReactDOM.createPortal(\r\n            <Popper\r\n              container={document.body}\r\n              modifiers={POPPER_MODIFIERS}\r\n              placement={placement}\r\n              referenceElement={this.containerItemRef.current}\r\n            >\r\n              {this.renderPopper}\r\n            </Popper>,\r\n            document.body\r\n          )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default listensToClickOutside(Overlay);\r\n","import React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './toggle-button.scss';\r\n\r\nexport default class ToggleButton extends React.PureComponent {\r\n  static propTypes = {\r\n    text: toBe.string,\r\n    onToggle: toBe.func,\r\n    active: toBe.bool,\r\n  };\r\n\r\n  render() {\r\n    const { active, onToggle, text } = this.props;\r\n    return (\r\n      <div\r\n        className={classNames('toggle-button', { active: active })}\r\n        onClick={() => onToggle(!active)}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const fetchJson = async ({ url }) => {\r\n  try {\r\n    const response = await fetch(url);\r\n    if (response.status >= 200 && response.status < 300) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      throw Error('HTTP Status ' + response.status);\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n","import _ from 'lodash/fp';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TOP/LOADING`;\r\nconst SUCCESS = `TOP/SUCCESS`;\r\nconst ERROR = `TOP/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nconst transformBackendData = _.flow(\r\n  _.get('top'),\r\n  _.values,\r\n  _.map(item => ({\r\n    song: item.track,\r\n    chartLabel: item.chart_label,\r\n    chartLevel: item.chart_label.slice(1),\r\n    chartType: item.chart_label.slice(0, 1),\r\n    mix: item.mix,\r\n    results: _.map(\r\n      res => ({\r\n        nickname: res.nickname,\r\n        date: res.gained,\r\n        isExactDate: !!res.exact_gained_date,\r\n        score: res.score,\r\n        perfect: res.perfects,\r\n        great: res.greats,\r\n        good: res.goods,\r\n        bad: res.bads,\r\n        miss: res.misses,\r\n        combo: res.max_combo,\r\n        mods: res.mods_list,\r\n        isRank: !!res.rank_mode,\r\n        accuracy: res.max_combo\r\n          ? (\r\n              (res.perfects * 300 + res.greats * 150 + res.goods * 50 + res.bads * 15) /\r\n              (res.perfects + res.greats + res.goods + res.bads + res.misses) /\r\n              3\r\n            ).toFixed(1)\r\n          : null,\r\n      }),\r\n      item.results\r\n    ),\r\n  })),\r\n  _.orderBy(['song', 'chartLevel'], ['asc', 'desc']),\r\n  data => ({ data })\r\n);\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        ...transformBackendData(action.data),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTopScores = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await fetchJson({\r\n        url: `${HOST}/top`,\r\n      });\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport matchSorter from 'match-sorter';\r\nimport { Range, getTrackBackground } from 'react-range';\r\nimport _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport Select from 'react-select';\r\nimport classNames from 'classnames';\r\nimport numeral from 'numeral';\r\n\r\nimport Overlay from 'components/Overlay/Overlay';\r\nimport ToggleButton from 'components/ToggleButton/ToggleButton';\r\n\r\nimport 'react-table/react-table.css';\r\nimport './rankings.scss';\r\n\r\nimport { fetchTopScores } from 'reducers/top';\r\n\r\nconst chartMinMax = [1, 29];\r\n\r\nconst filterCharts = (filter, rows) => {\r\n  const range = _.getOr(chartMinMax, 'range', filter);\r\n  const type = _.getOr(null, 'type', filter);\r\n\r\n  const filtered = _.flow(\r\n    _.filter(row => {\r\n      return (\r\n        row.chartLevel >= range[0] &&\r\n        row.chartLevel <= range[1] &&\r\n        (!type || type === row.chartType)\r\n      );\r\n    })\r\n  )(rows);\r\n  return filtered;\r\n};\r\n\r\nconst getFilteredData = (data, filter) => {\r\n  const names = _.map('value', filter.players);\r\n  return _.flow(\r\n    _.compact([\r\n      filter.song && (items => matchSorter(items, filter.song, { keys: ['song'] })),\r\n      names.length &&\r\n        _.filter(row => {\r\n          const rowNames = _.map('nickname', row.results);\r\n          return _.every(name => rowNames.includes(name), names);\r\n        }),\r\n      filter.chartRange && (items => filterCharts(filter.chartRange, items)),\r\n    ])\r\n  )(data);\r\n};\r\n\r\nfunction ChartFilter({ filterValue, onChange }) {\r\n  const range = _.getOr(chartMinMax, 'range', filterValue);\r\n  const type = _.getOr(null, 'type', filterValue);\r\n  let buttonText = 'charts filter...';\r\n  if (filterValue) {\r\n    const t = type || '';\r\n    buttonText = range[0] === range[1] ? `${t}${range[0]}` : `${t}${range[0]}-${t}${range[1]}`;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Overlay\r\n        overlayItem={\r\n          <button className=\"filter-charts-button btn btn-sm btn-primary\">{buttonText}</button>\r\n        }\r\n      >\r\n        <div className=\"chart-range-overlay\">\r\n          <div className=\"buttons\">\r\n            <ToggleButton\r\n              text=\"S\"\r\n              active={!type || type === 'S'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  range,\r\n                  type: !active ? 'D' : null,\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"D\"\r\n              active={!type || type === 'D'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  range,\r\n                  type: !active ? 'S' : null,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <Range\r\n            values={range}\r\n            step={1}\r\n            min={chartMinMax[0]}\r\n            max={chartMinMax[1]}\r\n            onChange={r => onChange({ type, range: r })}\r\n            renderTrack={({ props, children }) => (\r\n              <div\r\n                onMouseDown={props.onMouseDown}\r\n                onTouchStart={props.onTouchStart}\r\n                style={{\r\n                  ...props.style,\r\n                  height: '10px',\r\n                  display: 'flex',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <div\r\n                  ref={props.ref}\r\n                  style={{\r\n                    height: '6px',\r\n                    width: '100%',\r\n                    borderRadius: '3px',\r\n                    background: getTrackBackground({\r\n                      values: range,\r\n                      colors: ['#ccc', '#337ab7', '#ccc'],\r\n                      min: chartMinMax[0],\r\n                      max: chartMinMax[1],\r\n                    }),\r\n                    alignSelf: 'center',\r\n                  }}\r\n                >\r\n                  {children}\r\n                </div>\r\n              </div>\r\n            )}\r\n            renderThumb={({ props, isDragged }) => (\r\n              <div\r\n                {...props}\r\n                style={{\r\n                  ...props.style,\r\n                  height: '12px',\r\n                  width: '12px',\r\n                  borderRadius: '6px',\r\n                  backgroundColor: '#FFF',\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  boxShadow: '0px 2px 3px #AAA',\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    height: '6px',\r\n                    width: '6px',\r\n                    borderRadius: '3px',\r\n                    backgroundColor: isDragged ? '#337ab7' : '#CCC',\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n          />\r\n        </div>\r\n      </Overlay>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst playersSelector = createSelector(\r\n  state => state.top.data,\r\n  _.flow(\r\n    _.flatMap(_.get('results')),\r\n    _.map('nickname'),\r\n    _.uniq,\r\n    _.sortBy(_.toLower),\r\n    _.map(name => ({ label: name, value: name }))\r\n  )\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    players: playersSelector(state),\r\n    data: state.top.data,\r\n    error: state.top.error,\r\n    isLoading: state.top.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopScores,\r\n};\r\n\r\nclass TopScores extends Component {\r\n  static propTypes = {\r\n    match: toBe.object,\r\n    data: toBe.array,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  state = { filter: {}, showItemsCount: 10 };\r\n\r\n  componentDidMount() {\r\n    const { isLoading } = this.props;\r\n    if (!isLoading) {\r\n      this.props.fetchTopScores();\r\n    }\r\n  }\r\n\r\n  getColumns() {\r\n    return [\r\n      {\r\n        minWidth: 120,\r\n        maxWidth: 250,\r\n        Header: 'song',\r\n        accessor: 'song',\r\n      },\r\n      {\r\n        minWidth: 95,\r\n        maxWidth: 95,\r\n        accessor: 'chartLabel',\r\n      },\r\n      {\r\n        filterMethod: (filter, rows) => {\r\n          const names = _.map('value', _.get('value', filter));\r\n          return _.filter(row => {\r\n            const rowNames = _.map('nickname', row.results);\r\n            return _.every(name => rowNames.includes(name), names);\r\n          }, rows);\r\n        },\r\n        Cell: props => (\r\n          <div>\r\n            {props.original.results.map(res => (\r\n              <div key={res.nickname}>\r\n                {res.nickname} - {res.score}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ),\r\n        accessor: 'results',\r\n      },\r\n    ];\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, data, error, players } = this.props;\r\n    const { showItemsCount, filter } = this.state;\r\n    const filteredData = getFilteredData(data, filter);\r\n    const bySong = _.groupBy('song', filteredData);\r\n    const allSongs = _.keys(bySong);\r\n    const canShowMore = allSongs.length > showItemsCount;\r\n    const songs = _.slice(0, showItemsCount, allSongs);\r\n    return (\r\n      <div className=\"rankings\">\r\n        <header></header>\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"filters\">\r\n            <div className=\"song-name\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"song name...\"\r\n                className=\"form-control\"\r\n                onChange={e => {\r\n                  const song = e.target.value;\r\n                  this.setState(state => ({ filter: { ...state.filter, song } }));\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"chart-range\">\r\n              <ChartFilter\r\n                filterValue={this.state.filter.chartRange}\r\n                onChange={chartRange =>\r\n                  this.setState(state => ({ filter: { ...state.filter, chartRange } }))\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"players\">\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"select players...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'players', this.state.filter)}\r\n                onChange={players =>\r\n                  this.setState(state => ({ filter: { ...state.filter, players } }))\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n          {isLoading && 'Loading...'}\r\n          <div className=\"top-list\">\r\n            {songs.map(song => (\r\n              <div className=\"song-block\" key={song}>\r\n                <div className=\"song-name\">{song}</div>\r\n                <div className=\"charts\">\r\n                  {_.orderBy(['chartLevel'], ['desc'], bySong[song]).map(chart => (\r\n                    <div className=\"chart\" key={chart.chartLabel}>\r\n                      <div\r\n                        className={classNames('chart-name', { single: chart.chartType === 'S' })}\r\n                      >\r\n                        {chart.chartType}\r\n                        <span className=\"chart-separator\" />\r\n                        {chart.chartLevel}\r\n                      </div>\r\n                      <div className=\"results\">\r\n                        <table>\r\n                          <tbody>\r\n                            {chart.results.map((res, index) => (\r\n                              <tr key={res.score + res.nickname}>\r\n                                <td className=\"place\">#{index + 1}</td>\r\n                                <td className=\"nickname\">{res.nickname}</td>\r\n                                <td className=\"score\">{numeral(res.score).format('0,0')}</td>\r\n                                <td className=\"accuracy\">\r\n                                  {res.accuracy}\r\n                                  {res.accuracy ? '%' : ''}\r\n                                </td>\r\n                                <td className=\"number miss\">{res.miss}</td>\r\n                                <td className=\"number bad\">{res.bad}</td>\r\n                                <td className=\"number good\">{res.good}</td>\r\n                                <td className=\"number great\">{res.great}</td>\r\n                                <td className=\"number perfect\">{res.perfect}</td>\r\n                                <td className=\"combo\">\r\n                                  {res.combo}\r\n                                  {res.combo ? 'x' : ''}\r\n                                </td>\r\n                                <td className={classNames('rank', { vj: res.isRank })}>\r\n                                  {res.isRank && 'VJ'}\r\n                                </td>\r\n                                <td className=\"date\">{res.date}</td>\r\n                              </tr>\r\n                            ))}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {!isLoading && canShowMore && (\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() =>\r\n                  this.setState(state => ({ showItemsCount: state.showItemsCount + 10 }))\r\n                }\r\n              >\r\n                show more...\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TopScores);\r\n","export const HOST = 'https://vps720616.ovh.net:5000';\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport './App.scss';\r\n\r\nimport Rankings from 'components/Rankings/Rankings';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Route exact path=\"/\" component={Rankings} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport top from 'reducers/top';\r\n\r\nconst rootReducer = combineReducers({\r\n  top,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__\r\n    ? compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__({\r\n          stateSanitizer: state => ({\r\n            ...state,\r\n          }),\r\n        })\r\n      )\r\n    : applyMiddleware(thunk)\r\n);\r\n","// import 'promise-polyfill';\r\n// import 'whatwg-fetch';\r\n// import 'utils/polyfills';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport JavascriptTimeAgo from 'javascript-time-ago';\r\nimport en from 'javascript-time-ago/locale/en';\r\n\r\nimport './index.scss';\r\nimport App from 'components/App';\r\nimport { store } from 'reducers';\r\n\r\nJavascriptTimeAgo.locale(en);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}