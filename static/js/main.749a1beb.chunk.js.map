{"version":3,"sources":["utils/polyfills.js","constants/routes.js","components/Shared/Overlay/Overlay.js","components/Shared/ToggleButton/ToggleButton.js","components/Shared/Loader/index.js","components/Shared/Input/Input.js","components/Shared/Toggle/Toggle.js","components/Shared/CollapsibleBar/index.js","components/Shared/Range/index.js","constants/leaderboard.js","components/Leaderboard/ChartFilter.js","utils/fetch.js","constants/env.js","reducers/ranking.js","reducers/profiles.js","reducers/top.js","constants/backend.js","reducers/presets.js","components/Leaderboard/PresetsControl.js","utils/leaderboards.js","utils/colors.js","reducers/selectors.js","components/Leaderboard/Leaderboard.js","components/Ranking/RankingList.js","components/Ranking/RankingFaq.js","components/Ranking/Ranking.js","components/Profile/Profile.js","components/Shared/TopBar/TopBar.js","components/App.js","reducers/index.js","index.js"],"names":["Number","isNaN","value","Math","sign","x","Array","prototype","findIndex","Object","defineProperty","predicate","this","TypeError","o","len","length","thisArg","arguments","k","kValue","call","configurable","writable","routes","leaderboard","path","ranking","faq","profile","getPath","params","id","POPPER_MODIFIERS","preventOverflow","enabled","padding","boundariesElement","PLACEMENT_ARROW_MAPPING","right","left","top","bottom","getArrowPlacement","placement","split","Overlay","state","isVisible","containerItemRef","React","createRef","renderPopper","bind","toggleOverlayVisibility","setState","event","target","closest","hideOverlay","ref","style","arrowProps","outOfBoundaries","scheduleUpdate","props","children","hideWhenOutOfBounds","data-placement","className","classNames","overlayClassName","overlayItem","Fragment","onClick","ReactDOM","createPortal","container","document","body","modifiers","referenceElement","current","PureComponent","defaultTypes","listensToClickOutside","ToggleButton","active","onToggle","text","Loader","width","height","viewBox","xmlns","fill","cx","cy","r","attributeName","from","to","begin","dur","values","calcMode","repeatCount","fillOpacity","Input","_","isNil","defaultValue","bindAll","prevProps","e","newValue","onChange","type","numericValue","min","max","onBlur","omit","handleBlur","onInput","handleChange","Component","defaultProps","noop","Toggle","checked","uniqueId","htmlFor","CollapsibleBar","open","defaultOpen","title","Range","range","step","renderTrack","onMouseDown","onTouchStart","position","display","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","justifyContent","alignItems","boxShadow","SORT","DEFAULT","PROTAGONIST","RANK_ASC","RANK_DESC","CHART_MIN_MAX","ChartFilter","filterValue","getOr","buttonText","t","newMin","newMax","fetchJson","a","url","fetch","response","status","json","data","Error","console","error","Promise","reject","localStorage","window","debugOn","setItem","debugOff","removeItem","DEBUG","getItem","SET_RANKINGS","RANKING_CHANGE_SET","getRankings","players","defaultInfo","count","battleCount","countAcc","rating","grades","F","D","C","B","A","S","SS","SSS","totalScore","sumAccuracy","history","ratingHistory","lastPlace","lastBattleDate","playerInfo","battles","forEach","song","validResults","orderBy","results","score","nickname","includes","push","playerId","cloneDeep","p1","accuracy","chartType","grade","replace","isInteger","perfect","great","good","bad","miss","isFullScore","maxScore","maxCombo","chartLevel","getMaxScore","scoreIndex","slice","enemyScore","isRank","flow","sortBy","s1","s2","dateObject","getTime","p2","scoreMultiplier","isExactDate","map","startingRating","S1","S2","r1","r2","R1","R2","E1","E2","kRatingDiff","abs","kRating1","kRating2","maxK1","maxK2","K1","K2","dr1","dr2","ratingDiff","ratingDiffLast","log","chartLabel","toFixed","idsSorted","keys","toInteger","p1Place","indexOf","p2Place","battleDate","place","date","p1LastHistory","last","p2LastHistory","key","name","nameArcade","arcade_name","round","ratingRaw","remove","i","setRankingsAction","getListOfNames","getMapOfRatings","q","fromPairs","setRankings","dispatch","getState","all","localForage","lastChangedRanking","lastChangedRankingPoints","lastFetchedRanking","listNow","listLastFetched","listLastChanged","mapPointsNow","mapPointsLastFetched","mapPointsLastChanged","rankingsPointsMap","isEqual","listPrev","warn","SET_PROFILES","SET_FILTER","RESET_FILTER","defaultFilter","initialState","isLoading","filter","getProfiles","profiles","addResultData","chart","result","resultsByLevel","find","get","rankingHistory","Date","now","resultsByGrade","initializeProfile","setProfiles","LOADING","SUCCESS","ERROR","showRank","showRankAndNorank","preprocessData","item","track","chart_label","mix","res","index","perfects","sqrt","acc","floor","greats","goods","misses","bads","player","nicknameArcade","originalChartMix","originalChartLabel","originalScore","gained","exact_gain_date","combo","max_combo","mods","mods_list","rank_mode","isHJ","latestScoreDate","reduce","latest","hasRankScore","some","fetchTopScores","processedData","rankings","toPairs","setFilter","SELECT_PRESET","LOAD_PRESETS","LOADING_START","LOADING_END","presets","currentPreset","itemToOption","label","reloadPresets","startLoading","endLoading","selectPreset","openPreset","then","noPresetsMessage","mapDispatchToProps","loadPresets","savePreset","newPreset","confirm","withoutOldPreset","newPresets","deletePreset","PresetsControl","onChangeSelection","selected","onRewritePreset","onSavePreset","isAddingNew","classNamePrefix","placeholder","options","noOptionsMessage","disabled","connect","TimeAgo","addLocale","ru","timeAgo","timeStyle","flavour","gradation","convenient","units","tooltipFormatterForBests","flexDirection","toLocaleDateString","nowDate","getTimeAgo","strTimeAgo","format","dayDiff","moment","startOf","diff","colorsArray","playersSelector","createSelector","it","toLower","filteredDataSelector","names","namesOr","playersOr","namesNot","playersNot","sortingType","protagonist","excludeAntagonists","defaultSorting","protagonistSorting","row","protIndex","protScore","enemies","take","uniqBy","distanceFromProtagonist","dist","enemy","getScoreSorting","direction","Infinity","sortingFunctions","compact","chartRange","items","rows","filterCharts","showOnlyRank","occuredNames","alreadyOccured","rowNames","every","size","matchSorter","topPlace","occuredNicknames","isSecondOccurenceInResults","sortingOptions","resetFilter","Leaderboard","showItemsCount","curry","onRefresh","closeMenuOnSelect","isMulti","clearable","filteredData","canShowMore","visibleData","hasProtagonist","protagonistName","uniqueSelectedNames","uniq","message","renderSimpleSearch","renderFilters","renderSortings","preset","isEmpty","chartIndex","single","href","rel","nameIndex","empty","fontWeight","color","content","tooltipClassName","vj","hj","numeral","exact","src","process","alt","getGradeImg","RankingList","playerIndex","change","isString","prevRating","down","up","RankingFaq","Ranking","render","component","withRouter","defaultGradesDistribution","profileSelector","match","levelsDistribution","y","gradesDistribution","update","mapValues","groupBy","pick","sum","gradesValues","lastTick","firstTick","first","minMaxRange","placesChanges","ratingChanges","dayRange","dayRangeMs","unshift","rankingIndex","rank","setProfilesFilter","resetProfilesFilter","Profile","onChangeDayRange","stackOffset","margin","isAnimationActive","payload","dataKey","tickFormatter","stroke","stackId","reverse","domain","hide","strokeDasharray","allowDecimals","dataMax","interval","reversed","strokeWidth","dot","TopBar","App","rootReducer","combineReducers","action","hasPrevList","playerOriginal","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","thunk","stateSanitizer","catch","getElementById"],"mappings":"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","file":"static/js/main.749a1beb.chunk.js","sourcesContent":["/* eslint-disable */\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\r\nNumber.isNaN =\r\n  Number.isNaN ||\r\n  function(value) {\r\n    return value !== value;\r\n  };\r\n\r\nif (typeof Math.sign === 'undefined') {\r\n  Math.sign = function(x) {\r\n    return x > 0 ? 1 : x < 0 ? -1 : x;\r\n  };\r\n}\r\n\r\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\r\nif (!Array.prototype.findIndex) {\r\n  Object.defineProperty(Array.prototype, 'findIndex', {\r\n    value: function(predicate) {\r\n      // 1. Let O be ? ToObject(this value).\r\n      if (this == null) {\r\n        throw new TypeError('\"this\" is null or not defined');\r\n      }\r\n\r\n      var o = Object(this);\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('predicate must be a function');\r\n      }\r\n\r\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n      var thisArg = arguments[1];\r\n\r\n      // 5. Let k be 0.\r\n      var k = 0;\r\n\r\n      // 6. Repeat, while k < len\r\n      while (k < len) {\r\n        // a. Let Pk be ! ToString(k).\r\n        // b. Let kValue be ? Get(O, Pk).\r\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n        // d. If testResult is true, return k.\r\n        var kValue = o[k];\r\n        if (predicate.call(thisArg, kValue, k, o)) {\r\n          return k;\r\n        }\r\n        // e. Increase k by 1.\r\n        k++;\r\n      }\r\n\r\n      // 7. Return -1.\r\n      return -1;\r\n    },\r\n    configurable: true,\r\n    writable: true,\r\n  });\r\n}\r\n","export const routes = {\r\n  leaderboard: {\r\n    path: `/leaderboard`,\r\n  },\r\n  ranking: {\r\n    path: `/ranking`,\r\n    faq: {\r\n      path: '/ranking/faq',\r\n    },\r\n  },\r\n  profile: {\r\n    path: `/profiles/:id`,\r\n    getPath: params => `/profiles/${params.id}`,\r\n  },\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport toBe from 'prop-types';\r\nimport { Popper } from 'react-popper';\r\nimport classNames from 'classnames';\r\nimport listensToClickOutside from 'react-onclickoutside';\r\n\r\nimport './overlay.scss';\r\n\r\nconst POPPER_MODIFIERS = {\r\n  preventOverflow: {\r\n    enabled: true,\r\n    padding: 10,\r\n    boundariesElement: 'viewport',\r\n  },\r\n};\r\n\r\nconst PLACEMENT_ARROW_MAPPING = {\r\n  right: 'left',\r\n  left: 'right',\r\n  top: 'bottom',\r\n  bottom: 'top',\r\n};\r\n\r\nconst getArrowPlacement = placement => {\r\n  return placement && PLACEMENT_ARROW_MAPPING[placement.split('-')[0]];\r\n};\r\n\r\nclass Overlay extends React.PureComponent {\r\n  static propTypes = {\r\n    placement: toBe.string,\r\n    overlayItem: toBe.any,\r\n    hideWhenOutOfBounds: toBe.bool,\r\n  };\r\n\r\n  static defaultTypes = {\r\n    placement: 'bottom',\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isVisible: false,\r\n    };\r\n    this.containerItemRef = React.createRef();\r\n    this.renderPopper = this.renderPopper.bind(this);\r\n    this.toggleOverlayVisibility = this.toggleOverlayVisibility.bind(this);\r\n  }\r\n\r\n  hideOverlay() {\r\n    this.setState({\r\n      isVisible: false,\r\n    });\r\n  }\r\n\r\n  toggleOverlayVisibility() {\r\n    this.setState({\r\n      isVisible: !this.state.isVisible,\r\n    });\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    const preventHiding = event && event.target.closest('.inner-popper-overlay'); // prevent overlays from hiding when a modal is opened within overlay\r\n\r\n    if (!preventHiding) {\r\n      this.hideOverlay();\r\n    }\r\n  }\r\n\r\n  renderPopper({ ref, style, placement, arrowProps, scheduleUpdate, outOfBoundaries }) {\r\n    const { children, hideWhenOutOfBounds } = this.props;\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        data-placement={placement}\r\n        className={classNames(\r\n          'inner-popper-overlay',\r\n          `arrow-${getArrowPlacement(placement)}`,\r\n          this.props.overlayClassName,\r\n          { 'out-of-bounds': outOfBoundaries && hideWhenOutOfBounds }\r\n        )}\r\n      >\r\n        <div className=\"arrow-hider\">\r\n          <div className=\"arrow\" ref={arrowProps.ref} style={arrowProps.style} />\r\n        </div>\r\n        <div\r\n          className=\"inner-popper-content\"\r\n          // ref={ref => this.setupPopperContentRef(scheduleUpdate, ref)}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { placement, overlayItem } = this.props;\r\n    const { isVisible } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"overlay-item\"\r\n          ref={this.containerItemRef}\r\n          onClick={this.toggleOverlayVisibility}\r\n        >\r\n          {overlayItem}\r\n        </div>\r\n        {isVisible &&\r\n          ReactDOM.createPortal(\r\n            <Popper\r\n              container={document.body}\r\n              modifiers={POPPER_MODIFIERS}\r\n              placement={placement}\r\n              referenceElement={this.containerItemRef.current}\r\n            >\r\n              {this.renderPopper}\r\n            </Popper>,\r\n            document.body\r\n          )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default listensToClickOutside(Overlay);\r\n","import React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './toggle-button.scss';\r\n\r\nexport default class ToggleButton extends React.PureComponent {\r\n  static propTypes = {\r\n    text: toBe.string,\r\n    onToggle: toBe.func,\r\n    active: toBe.bool,\r\n  };\r\n\r\n  render() {\r\n    const { active, onToggle, text } = this.props;\r\n    return (\r\n      <div\r\n        className={classNames('toggle-button', { active: active })}\r\n        onClick={() => onToggle(!active)}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport './loader.scss';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"loader\">\r\n      <svg\r\n        width=\"40\"\r\n        height=\"12\"\r\n        viewBox=\"0 0 120 30\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"#eee\"\r\n      >\r\n        <circle cx=\"15\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"60\" cy=\"15\" r=\"9\" fillOpacity=\"0.3\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"9\"\r\n            to=\"9\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"9;15;9\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"0.5\"\r\n            to=\"0.5\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\".5;1;.5\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"105\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react/no-deprecated */\r\n// imports from vendor deps\r\nimport React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\n\r\n// imports from styles\r\nexport default class Input extends React.Component {\r\n  static propTypes = {\r\n    value: toBe.any,\r\n    defaultValue: toBe.any,\r\n    onChange: toBe.func,\r\n    onBlur: toBe.func,\r\n    type: toBe.string,\r\n    className: toBe.string,\r\n    trimOnBlur: toBe.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    value: null,\r\n    type: 'text',\r\n    onChange: _.noop,\r\n    onBlur: _.noop,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: (!_.isNil(props.value) ? props.value : props.defaultValue) || '',\r\n    };\r\n    _.bindAll(['handleChange', 'handleBlur'], this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.value !== this.props.value) {\r\n      this.setState({ value: this.props.value });\r\n    }\r\n  }\r\n\r\n  handleChange(e) {\r\n    const newValue = e.target.value;\r\n    this.setState({ value: newValue }, () => this.props.onChange(newValue));\r\n  }\r\n\r\n  handleBlur(e) {\r\n    const { type } = this.props;\r\n    const { value } = this.state;\r\n    if (type === 'number') {\r\n      const numericValue = Number(value);\r\n      if (numericValue >= Number(e.target.min) && numericValue <= Number(e.target.max)) {\r\n        this.props.onBlur(numericValue, e);\r\n      } else {\r\n        this.setState({ value: this.props.value });\r\n        this.props.onBlur(this.props.value, e);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props;\r\n\r\n    // HACK: This component uses onInput instead of onChange\r\n    // because IE11 fails to call onChange events when you paste/cut using context menu (RMB)\r\n    // We're using onInput because it works fine, and because for text input\r\n    // there's no difference between how onChange and onInput work\r\n    return (\r\n      <input\r\n        {..._.omit(['defaultValue', 'onChange'], this.props)}\r\n        className={classNames(className, 'text-input')}\r\n        value={this.state.value}\r\n        onBlur={this.handleBlur}\r\n        onInput={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './toggle.scss';\r\n\r\n// imports from styles\r\nexport default class Toggle extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.id = _.uniqueId();\r\n  }\r\n\r\n  onChange = e => {\r\n    this.props.onChange(e.target.checked);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"toggle-checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle-checkbox-cb\"\r\n          id={this.id}\r\n          onChange={this.onChange}\r\n          checked={this.props.checked}\r\n        />\r\n        <label htmlFor={this.id} className=\"toggle\">\r\n          <span></span>\r\n        </label>\r\n        <label htmlFor={this.id} className=\"text-label\">\r\n          {this.props.children}\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\nimport './styles.scss';\r\n\r\nexport default class CollapsibleBar extends PureComponent {\r\n  static propTypes = {\r\n    className: toBe.string,\r\n    children: toBe.any,\r\n    title: toBe.any,\r\n    defaultOpen: toBe.bool,\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = { open: props.defaultOpen || false };\r\n  }\r\n\r\n  render() {\r\n    const { children, title, className } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classNames('collapsible-bar', className, { open })}>\r\n        <div className=\"header\" onClick={() => this.setState(state => ({ open: !state.open }))}>\r\n          <div className=\"collapse-button\">\r\n            <FaChevronRight />\r\n          </div>\r\n          <div className=\"title\">{title}</div>\r\n        </div>\r\n        {children && <div className=\"collapsible-children\">{children}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Range as ReactRange, getTrackBackground } from 'react-range';\r\n\r\nexport default function Range({ range, min, max, onChange }) {\r\n  return (\r\n    <ReactRange\r\n      values={range}\r\n      step={1}\r\n      min={min}\r\n      max={max}\r\n      onChange={onChange}\r\n      renderTrack={({ props, children }) => (\r\n        <div\r\n          onMouseDown={props.onMouseDown}\r\n          onTouchStart={props.onTouchStart}\r\n          style={{\r\n            ...props.style,\r\n            position: 'relative',\r\n            height: '10px',\r\n            display: 'flex',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <div\r\n            ref={props.ref}\r\n            style={{\r\n              height: '6px',\r\n              width: '100%',\r\n              borderRadius: '3px',\r\n              background: getTrackBackground({\r\n                values: range,\r\n                colors: ['#ccc', '#337ab7', '#ccc'],\r\n                min,\r\n                max,\r\n              }),\r\n              alignSelf: 'center',\r\n            }}\r\n          >\r\n            {children}\r\n          </div>\r\n        </div>\r\n      )}\r\n      renderThumb={({ props, isDragged }) => (\r\n        <div\r\n          {...props}\r\n          style={{\r\n            ...props.style,\r\n            height: '12px',\r\n            width: '12px',\r\n            borderRadius: '6px',\r\n            backgroundColor: '#FFF',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            boxShadow: '0px 2px 3px #AAA',\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              height: '6px',\r\n              width: '6px',\r\n              borderRadius: '3px',\r\n              backgroundColor: isDragged ? '#337ab7' : '#CCC',\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","export const SORT = {\r\n  DEFAULT: 'default',\r\n  PROTAGONIST: 'protagonist',\r\n  RANK_ASC: 'rankAsc',\r\n  RANK_DESC: 'rankDesc',\r\n};\r\n\r\nexport const CHART_MIN_MAX = [1, 28];\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\nimport { FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Range from 'components/Shared/Range';\r\n\r\nimport { CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nexport default function ChartFilter({ filterValue, onChange }) {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filterValue);\r\n  const type = _.getOr(null, 'type', filterValue);\r\n  let buttonText = 'фильтр чартов';\r\n  if (filterValue) {\r\n    const t = type || '';\r\n    buttonText = range[0] === range[1] ? `${t}${range[0]}` : `${t}${range[0]} - ${t}${range[1]}`;\r\n    buttonText = 'чарты: ' + buttonText;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Overlay\r\n        overlayClassName=\"chart-range-overlay-outer\"\r\n        overlayItem={\r\n          <button className=\"filter-charts-button btn btn-sm btn-dark\">{buttonText}</button>\r\n        }\r\n      >\r\n        <div className=\"chart-range-overlay\">\r\n          <div className=\"buttons\">\r\n            <ToggleButton\r\n              text=\"S\"\r\n              active={!type || type === 'S'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  range,\r\n                  type: !active ? 'D' : null,\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"D\"\r\n              active={!type || type === 'D'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  range,\r\n                  type: !active ? 'S' : null,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <Range\r\n            range={range}\r\n            min={CHART_MIN_MAX[0]}\r\n            max={CHART_MIN_MAX[1]}\r\n            onChange={r => onChange({ type, range: r })}\r\n          />\r\n          <div className=\"inputs\">\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  type,\r\n                  range: [Math.max(range[0] - 1, CHART_MIN_MAX[0]), range[1]],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={CHART_MIN_MAX[0]}\r\n              max={Math.min(CHART_MIN_MAX[1], range[1])}\r\n              value={range[0]}\r\n              onBlur={value => {\r\n                onChange({ type, range: [value, range[1]] });\r\n              }}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMin = Math.min(range[0] + 1, CHART_MIN_MAX[1]);\r\n                onChange({\r\n                  type,\r\n                  range: [newMin, range[1] < newMin ? newMin : range[1]],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMax = Math.max(range[1] - 1, CHART_MIN_MAX[0]);\r\n                onChange({\r\n                  type,\r\n                  range: [range[0] > newMax ? newMax : range[0], newMax],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={Math.max(CHART_MIN_MAX[0], range[0])}\r\n              max={CHART_MIN_MAX[1]}\r\n              value={range[1]}\r\n              onBlur={value => onChange({ type, range: [range[0], value] })}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  type,\r\n                  range: [range[0], Math.min(range[1] + 1, CHART_MIN_MAX[1])],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Overlay>\r\n    </div>\r\n  );\r\n}\r\n","export const fetchJson = async ({ url }) => {\r\n  try {\r\n    const response = await fetch(url);\r\n    if (response.status >= 200 && response.status < 300) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      throw Error('HTTP Status ' + response.status);\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n","if (localStorage) {\r\n  window.debugOn = () => {\r\n    localStorage.setItem('debug', 1);\r\n  };\r\n  window.debugOff = () => {\r\n    localStorage.removeItem('debug');\r\n  };\r\n}\r\n\r\nexport const DEBUG = localStorage && localStorage.getItem('debug');\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\n\r\nimport { DEBUG } from 'constants/env';\r\n\r\nconst SET_RANKINGS = `RANKINGS/SET_RANKINGS`;\r\nconst RANKING_CHANGE_SET = `RANKINGS/RANKING_CHANGE_SET`;\r\n\r\nconst isFullScore = score => {\r\n  return (\r\n    _.isInteger(score.perfect) &&\r\n    _.isInteger(score.great) &&\r\n    _.isInteger(score.good) &&\r\n    _.isInteger(score.bad) &&\r\n    _.isInteger(score.miss) &&\r\n    _.isInteger(score.score)\r\n  );\r\n};\r\n\r\nconst getMaxScore = (score, song) => {\r\n  const maxCombo = score.perfect + score.great + score.good + score.bad + score.miss;\r\n  let maxScore = maxCombo * 1000 + (maxCombo - 50) * 1000; // all perfects + 51 combo bonus\r\n  if (song.chartLevel > 10) {\r\n    maxScore *= song.chartLevel / 10; // Level multiplier\r\n  }\r\n  if (song.chartType === 'D') {\r\n    maxScore *= 1.2; // Double multiplier\r\n  }\r\n  maxScore += 300000; // SSS bonus\r\n  return maxScore;\r\n};\r\n\r\nexport default function reducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case SET_RANKINGS:\r\n      return {\r\n        ...state,\r\n        data: action.ranking,\r\n      };\r\n    case RANKING_CHANGE_SET:\r\n      const hasPrevList = !_.isEmpty(action.listPrev);\r\n      return {\r\n        ...state,\r\n        data: _.map(playerOriginal => {\r\n          const player = {\r\n            ...playerOriginal,\r\n            prevRating: _.get(playerOriginal.name, action.rankingsPointsMap),\r\n          };\r\n          if (!hasPrevList) {\r\n            return player; // First time opening this thing and we didn't have any previous data\r\n          }\r\n          if (!_.includes(player.name, action.listPrev)) {\r\n            return { ...player, change: 'NEW' };\r\n          } else if (!_.includes(player.name, action.listNow)) {\r\n            // Should NEVER happen, idk if this is possible\r\n            return { ...player, change: '?' };\r\n          } else {\r\n            return {\r\n              ...player,\r\n              change:\r\n                _.indexOf(player.name, action.listPrev) - _.indexOf(player.name, action.listNow),\r\n            };\r\n          }\r\n        }, state.data),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getRankings = (data, { players }) => {\r\n  const defaultInfo = {\r\n    count: 0,\r\n    battleCount: 0,\r\n    countAcc: 0,\r\n    rating: 1000,\r\n    grades: { F: 0, D: 0, C: 0, B: 0, A: 0, S: 0, SS: 0, SSS: 0 },\r\n    totalScore: { S: 0, D: 0 },\r\n    sumAccuracy: 0,\r\n    history: [],\r\n    ratingHistory: [],\r\n    lastPlace: null,\r\n    lastBattleDate: 0,\r\n  };\r\n  const playerInfo = {};\r\n  const battles = [];\r\n  data.forEach(song => {\r\n    const validResults = [];\r\n    _.orderBy(['score'], ['desc'], song.results).forEach(score => {\r\n      if (!score.nickname.includes('???')) {\r\n        validResults.push(score);\r\n\r\n        if (!playerInfo[score.playerId]) {\r\n          playerInfo[score.playerId] = _.cloneDeep(defaultInfo);\r\n        }\r\n        const p1 = playerInfo[score.playerId];\r\n        p1.count++;\r\n        if (score.accuracy) {\r\n          p1.countAcc++;\r\n          p1.sumAccuracy += score.accuracy;\r\n        }\r\n        p1.totalScore[song.chartType] += score.score;\r\n        p1.grades[score.grade.replace('+', '')]++;\r\n      }\r\n      if (isFullScore(score)) {\r\n        song.maxScore = getMaxScore(score, song);\r\n      }\r\n    });\r\n\r\n    validResults.forEach((score, scoreIndex) => {\r\n      const enemyScores = validResults.length > 1 ? validResults.slice(scoreIndex + 1) : [];\r\n\r\n      enemyScores.forEach(enemyScore => {\r\n        if (score.isRank === enemyScore.isRank && score.playerId !== enemyScore.playerId) {\r\n          battles.push([score, enemyScore, song]);\r\n        }\r\n      });\r\n    });\r\n  });\r\n  _.flow([\r\n    // Apply battles chronologically instead of randomly\r\n    _.sortBy(([s1, s2]) => Math.max(s1.dateObject.getTime(), s2.dateObject.getTime())),\r\n    _.forEach(([score, enemyScore, song]) => {\r\n      // For each battle\r\n      if (!playerInfo[enemyScore.playerId]) {\r\n        playerInfo[enemyScore.playerId] = _.cloneDeep(defaultInfo);\r\n      }\r\n      const p1 = playerInfo[score.playerId];\r\n      const p2 = playerInfo[enemyScore.playerId];\r\n\r\n      const scoreMultiplier = score.isRank ? 1.2 : 1;\r\n      let maxScore = null;\r\n      if (song.maxScore) {\r\n        maxScore = song.maxScore * scoreMultiplier;\r\n        if (\r\n          Math.max(maxScore, score.score, enemyScore.score) !== maxScore &&\r\n          !score.isRank &&\r\n          (!score.isExactDate || !enemyScore.isExactDate)\r\n        ) {\r\n          maxScore *= 1.2;\r\n          // Rank from machine best wasn't recognized most likely.\r\n          // Increasing max score by 20% is fine\r\n        }\r\n        if (Math.max(maxScore, score.score, enemyScore.score) !== maxScore) {\r\n          // If calculated max score isn't max score anyway, use current scores as max + cherry on top\r\n          maxScore = Math.max(..._.map('score', song.results));\r\n        }\r\n      }\r\n      // console.log(song.maxScore * scoreMultiplier, score.score, enemyScore.score);\r\n      // Rating at the start of battle for this score\r\n      score.startingRating = p1.rating;\r\n      enemyScore.startingRating = p2.rating;\r\n      // Counting the number of battles\r\n      p1.battleCount++;\r\n      p2.battleCount++;\r\n\r\n      // This is one match between two players\r\n      //// Elo formula\r\n      const r1 = p1.rating;\r\n      const r2 = p2.rating;\r\n      const R1 = 10 ** (r1 / 400);\r\n      const R2 = 10 ** (r2 / 400);\r\n      const E1 = R1 / (R1 + R2);\r\n      const E2 = R2 / (R1 + R2);\r\n      // S1/S2 is the factor of winning\r\n      // S1 = 1  S2 = 0  -- player 1 wins\r\n      // S1 = 0.5  S2 = 0.5  -- draw\r\n      // I'm using difference in score to get this value, it ranges from 0 from 1\r\n      // Current formula assigns 100% win if you have at least ~15% more score than the other player\r\n      // 3.000 vs 3.500 score -- 0 / 1 win percentage -- clear win for player 2\r\n      // 3.000 vs 3.300 score -- 0.17 / 0.83 win percentage -- ranking is not affected as strongly as 0 / 1\r\n      // 3.000 vs 3.100 score -- 0.38 / 0.62 win percentage -- almost draw\r\n      let A = score.score;\r\n      let B = enemyScore.score;\r\n      let S1, S2;\r\n      if (A === B) {\r\n        S1 = S2 = 0.5;\r\n      } else if (maxScore && A !== 0 && B !== 0) {\r\n        A = maxScore / A - 1;\r\n        B = maxScore / B - 1;\r\n        S1 = (B / (A + B) - 0.5) * 5 + 0.5;\r\n        S2 = (A / (A + B) - 0.5) * 5 + 0.5;\r\n      } else {\r\n        // console.log('////////// NO MAX SCORE /////////////');\r\n        S1 = A > B ? 1 : B < A ? 0 : 0.5;\r\n        S2 = 1 - S1;\r\n      }\r\n      S1 = Math.max(0, Math.min(1, S1)); // Set strict boundaries to [0, 1]\r\n      S2 = Math.max(0, Math.min(1, S2));\r\n      // S1old = Math.max(0, Math.min(1, S1old)); // Set strict boundaries to [0, 1]\r\n      // S2old = Math.max(0, Math.min(1, S2old));\r\n      // K is the coeficient that decides how strongly this match affects rating\r\n      // Higher level -- affects more\r\n      // More playcount -- affects less (just to make first matches place people faster)\r\n      // const k1pow = Math.min(1, playerInfo[score.playerId].battleCount / 100) * 0.3; // battlecount 0 -> 150 => results in 0 -> 0.5 value here\r\n      // const k2pow = Math.min(1, playerInfo[enemyScore.playerId].battleCount / 100) * 0.3; // battlecount 0 -> 150 => results in 0 -> 0.5 value here\r\n\r\n      let kRatingDiff = Math.abs(E1 - E2) + 0.6;\r\n      // prettier-ignore\r\n      if ((S1 - E1 > 0) === (E1 < 0.5) && Math.abs(E1 - E2) > 0.1) {\r\n        const difference = Math.abs(E1 - E2) / 3;\r\n        kRatingDiff *= 1 - difference; // When someone with lower rank wins against someone with higher rank\r\n      }\r\n      const kRating1 = Math.max(0, Math.min(1, (r1 - 700) / 800));\r\n      const kRating2 = Math.max(0, Math.min(1, (r2 - 700) / 800));\r\n      const maxK1 = 60 + 20 * kRating1;\r\n      const maxK2 = 60 + 20 * kRating2;\r\n      const kLevel1 = Math.max(\r\n        1,\r\n        Math.min(maxK1, (song.chartLevel / 25) ** ((kRating1 - 0.5) * 5 + 2.5) * maxK1)\r\n      );\r\n      const kLevel2 = Math.max(\r\n        1,\r\n        Math.min(maxK2, (song.chartLevel / 25) ** ((kRating2 - 0.5) * 5 + 2.5) * maxK2)\r\n      );\r\n\r\n      const K1 = kLevel1 / kRatingDiff;\r\n      const K2 = kLevel2 / kRatingDiff;\r\n      // const K1 = (kLevel + (1 - kRating1) * (maxK - kLevel)) / kRatingDiff;\r\n      // const K2 = (kLevel + (1 - kRating2) * (maxK - kLevel)) / kRatingDiff;\r\n      // const K1D = (Math.max(r1 - 600, 0) / 1500 + 1) ** 3 / 2;\r\n      // const K2D = (Math.max(r2 - 600, 0) / 1500 + 1) ** 3 / 2;\r\n      // const K1 = Math.min(20, Math.max(4, song.chartLevel - 4)) ** (2 - k1pow) / K1D / RD;\r\n      // const K2 = Math.min(20, Math.max(4, song.chartLevel - 4)) ** (2 - k2pow) / K2D / RD;\r\n      let dr1 = K1 * (S1 - E1);\r\n      let dr2 = K2 * (S2 - E2);\r\n      // Do not decrease rating if you have SSS - RIP zero-sum algorithm\r\n      dr1 = dr1 < 0 && score.grade === 'SSS' ? 0 : dr1;\r\n      dr2 = dr2 < 0 && enemyScore.grade === 'SSS' ? 0 : dr2;\r\n      // Recording this value for display\r\n      score.ratingDiff = (score.ratingDiff || 0) + dr1;\r\n      enemyScore.ratingDiff = (enemyScore.ratingDiff || 0) + dr2;\r\n      score.ratingDiffLast = dr1;\r\n      enemyScore.ratingDiffLast = dr2;\r\n\r\n      if (DEBUG) {\r\n        // if (song.song === 'Club Night') {\r\n        // if (score.nickname === 'Liza' || enemyScore.nickname === 'Liza') {\r\n        // if (!song.maxScore) {\r\n        console.log(\r\n          `${song.chartLabel} - ${score.nickname} / ${enemyScore.nickname} - ${song.song}`\r\n        );\r\n        console.log(\r\n          `- ${score.score} / ${enemyScore.score} (${maxScore}) - R ${S1.toFixed(2)}/${S2.toFixed(\r\n            2\r\n          )} E ${E1.toFixed(2)} / ${E2.toFixed(2)}`\r\n        );\r\n        // console.log(`- old R ${S1old.toFixed(2)}/${S2old.toFixed(2)}`);\r\n        console.log(\r\n          `- Rating ${r1.toFixed(2)} / ${r2.toFixed(2)} - ${dr1.toFixed(2)} / ${dr2.toFixed(\r\n            2\r\n          )} - K ${K1.toFixed(2)} ${K2.toFixed(2)} RD ${kRatingDiff.toFixed(1)}`\r\n        );\r\n        // }\r\n      }\r\n\r\n      // Change rating as a result of this battle\r\n      p1.rating = r1 + dr1;\r\n      p2.rating = r2 + dr2;\r\n      // Rating floor\r\n      p1.rating = Math.max(100, p1.rating);\r\n      p2.rating = Math.max(100, p2.rating);\r\n      // console.log(playerInfo);\r\n      const idsSorted = _.flow(\r\n        _.keys,\r\n        _.map(id => ({ id, rating: playerInfo[id].rating })),\r\n        _.orderBy(['rating'], ['desc']),\r\n        _.map(x => _.toInteger(x.id))\r\n      )(playerInfo);\r\n      const p1Place = idsSorted.indexOf(score.playerId) + 1;\r\n      const p2Place = idsSorted.indexOf(enemyScore.playerId) + 1;\r\n      const battleDate =\r\n        score.dateObject > enemyScore.dateObject ? score.dateObject : enemyScore.dateObject;\r\n      if (\r\n        (p1.lastPlace !== p1Place && p1.battleCount > 20) ||\r\n        (p1.battleCount === 21 && !p1.history.length)\r\n      ) {\r\n        // Place in rankings changed!\r\n        p1.history.push({\r\n          place: p1Place,\r\n          date: battleDate.getTime(),\r\n        });\r\n      }\r\n      if (\r\n        (p2.lastPlace !== p2Place && p2.battleCount > 20) ||\r\n        (p2.battleCount === 21 && !p2.history.length)\r\n      ) {\r\n        p2.history.push({\r\n          place: p2Place,\r\n          date: battleDate.getTime(),\r\n        });\r\n      }\r\n      p1.lastPlace = p1Place;\r\n      p2.lastPlace = p2Place;\r\n\r\n      const p1LastHistory = _.last(p1.ratingHistory);\r\n      // Recording at least every hour of data here\r\n      if (!p1LastHistory || p1LastHistory.date < battleDate.getTime() - 3600000) {\r\n        p1.ratingHistory.push({\r\n          rating: p1.rating,\r\n          date: battleDate.getTime(),\r\n        });\r\n      }\r\n      const p2LastHistory = _.last(p2.ratingHistory);\r\n      // Recording at least every hour of data here\r\n      if (!p2LastHistory || p2LastHistory.date < battleDate.getTime() - 3600000) {\r\n        p2.ratingHistory.push({\r\n          rating: p2.rating,\r\n          date: battleDate.getTime(),\r\n        });\r\n      }\r\n    }),\r\n  ])(battles);\r\n\r\n  const ranking = _.flow(\r\n    _.keys,\r\n    _.map(key => ({\r\n      ..._.omit(['countAcc', 'sumAccuracy'], playerInfo[key]),\r\n      id: _.toInteger(key),\r\n      name: players[key].nickname,\r\n      nameArcade: players[key].arcade_name,\r\n      accuracy:\r\n        playerInfo[key].countAcc > 0\r\n          ? Math.round((playerInfo[key].sumAccuracy / playerInfo[key].countAcc) * 100) / 100\r\n          : null,\r\n      rating: Math.round(playerInfo[key].rating),\r\n      ratingRaw: playerInfo[key].rating,\r\n    })),\r\n    _.remove(i => i.battleCount < 20),\r\n    _.orderBy(['ratingRaw'], ['desc'])\r\n  )(playerInfo);\r\n  return ranking;\r\n};\r\n\r\nexport const setRankingsAction = ranking => ({\r\n  type: SET_RANKINGS,\r\n  ranking,\r\n});\r\n\r\nconst getListOfNames = _.map('name');\r\nconst getMapOfRatings = _.flow(\r\n  _.map(q => [q.name, q.rating]),\r\n  _.fromPairs\r\n);\r\nexport const setRankings = ranking => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(setRankingsAction(ranking));\r\n    try {\r\n      const [lastChangedRanking, lastChangedRankingPoints, lastFetchedRanking] = await Promise.all([\r\n        localForage.getItem('lastChangedRanking_v2'),\r\n        localForage.getItem('lastChangedRankingPoints_v2'),\r\n        localForage.getItem('lastFetchedRanking_v2'),\r\n      ]);\r\n      // console.log(ranking);\r\n      const listNow = getListOfNames(ranking);\r\n      const listLastFetched = getListOfNames(lastFetchedRanking);\r\n      const listLastChanged = getListOfNames(lastChangedRanking);\r\n      const mapPointsNow = getMapOfRatings(ranking);\r\n      const mapPointsLastFetched = getMapOfRatings(lastFetchedRanking);\r\n      const mapPointsLastChanged = getMapOfRatings(lastChangedRankingPoints);\r\n      let rankingsPointsMap = mapPointsLastChanged;\r\n      // console.log(mapPointsNow, mapPointsLastFetched, mapPointsLastChanged);\r\n      if (!_.isEqual(mapPointsNow, mapPointsLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRankingPoints_v2', lastFetchedRanking);\r\n        rankingsPointsMap = mapPointsLastFetched;\r\n      }\r\n      let listPrev = listLastChanged;\r\n      if (!_.isEqual(listNow, listLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRanking_v2', lastFetchedRanking);\r\n        listPrev = listLastFetched;\r\n      }\r\n      dispatch({\r\n        type: RANKING_CHANGE_SET,\r\n        listNow,\r\n        listPrev,\r\n        rankingsPointsMap,\r\n      });\r\n      localForage.setItem('lastFetchedRanking_v2', ranking);\r\n      // console.log(listNow, listLastFetched, listLastChanged);\r\n    } catch (error) {\r\n      console.warn('Cannot get ranking from local storage', error);\r\n    }\r\n  };\r\n};\r\n","import _ from 'lodash/fp';\r\n// import localForage from 'localforage';\r\n//\r\n// import { DEBUG } from 'constants/env';\r\n\r\nconst SET_PROFILES = `PROFILES/SET_PROFILES`;\r\nconst SET_FILTER = `PROFILES/SET_FILTER`;\r\nconst RESET_FILTER = `PROFILES/RESET_FILTER`;\r\n\r\nexport const defaultFilter = {};\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n  filter: defaultFilter,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_PROFILES:\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n      };\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getProfiles = (data, ranking) => {\r\n  const profiles = {};\r\n  const initializeProfile = id => {\r\n    const resultsByLevel = _.fromPairs(Array.from({ length: 28 }).map((x, i) => [i + 1, []]));\r\n    const ratingHistory =\r\n      _.flow(\r\n        _.find({ id }),\r\n        _.get('ratingHistory')\r\n      )(ranking) || [];\r\n    const rankingHistory =\r\n      _.flow(\r\n        _.find({ id }),\r\n        _.get('history'),\r\n        history =>\r\n          history && [...history, { place: _.get('place', _.last(history)), date: Date.now() }]\r\n      )(ranking) || [];\r\n    profiles[id] = { resultsByGrade: {}, resultsByLevel, rankingHistory, ratingHistory };\r\n  };\r\n  const addResultData = (chart, result) => {\r\n    if (!profiles[result.playerId]) {\r\n      initializeProfile(result.playerId);\r\n    }\r\n    const profile = profiles[result.playerId];\r\n    profile.resultsByGrade[result.grade] = [\r\n      ...(profile.resultsByGrade[result.grade] || []),\r\n      { result, chart },\r\n    ];\r\n    profile.resultsByLevel[chart.chartLevel] = [\r\n      ...(profile.resultsByLevel[chart.chartLevel] || []),\r\n      { result, chart },\r\n    ];\r\n  };\r\n  data.forEach(chart => {\r\n    chart.results.forEach(result => {\r\n      addResultData(chart, result);\r\n    });\r\n  });\r\n  return profiles;\r\n};\r\n\r\nexport const setProfiles = data => ({\r\n  type: SET_PROFILES,\r\n  data,\r\n});\r\n\r\nexport const setProfilesFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\n\r\nexport const resetProfilesFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n\r\nexport const calculateProfileData = profileId => (dispatch, getState) => {};\r\n","import _ from 'lodash/fp';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\n\r\nimport { getRankings, setRankings } from './ranking';\r\nimport { getProfiles, setProfiles } from './profiles';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TOP/LOADING`;\r\nconst SUCCESS = `TOP/SUCCESS`;\r\nconst ERROR = `TOP/ERROR`;\r\nconst SET_FILTER = `TOP/SET_FILTER`;\r\nconst RESET_FILTER = `TOP/RESET_FILTER`;\r\n\r\nexport const defaultFilter = { showRank: true, showRankAndNorank: true };\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n  filter: defaultFilter,\r\n};\r\n\r\nconst preprocessData = data =>\r\n  _.flow(\r\n    _.get('top'),\r\n    _.values,\r\n    _.map(item => ({\r\n      song: item.track,\r\n      chartLabel: item.chart_label,\r\n      chartLevel: item.chart_label.slice(1),\r\n      chartType: item.chart_label.slice(0, 1),\r\n      mix: item.mix,\r\n      results: item.results.map((res, index) => {\r\n        const perfects = (Math.sqrt(res.perfects) * _.toInteger(item.chart_label.slice(1))) / 2;\r\n        const acc = perfects\r\n          ? Math.floor(\r\n              ((perfects * 100 + res.greats * 60 + res.goods * 30 + res.misses * -20) /\r\n                (perfects + res.greats + res.goods + res.bads + res.misses)) *\r\n                100\r\n            ) / 100\r\n          : null;\r\n        return {\r\n          playerId: res.player,\r\n          nickname: data.players[res.player].nickname,\r\n          nicknameArcade: data.players[res.player].arcade_name,\r\n          originalChartMix: res.originalChartMix,\r\n          originalChartLabel: res.originalChartLabel,\r\n          originalScore: res.originalScore,\r\n          date: res.gained,\r\n          dateObject: new Date(res.gained),\r\n          grade: res.grade,\r\n          isExactDate: !!res.exact_gain_date,\r\n          score: res.score,\r\n          perfect: res.perfects,\r\n          great: res.greats,\r\n          good: res.goods,\r\n          bad: res.bads,\r\n          miss: res.misses,\r\n          combo: res.max_combo,\r\n          mods: res.mods_list,\r\n          isRank: !!res.rank_mode,\r\n          isHJ: (res.mods_list || '').split(' ').includes('HJ'),\r\n          accuracy: acc < 0 ? 0 : acc === 100 ? acc : acc && acc.toFixed(2),\r\n        };\r\n      }),\r\n    })),\r\n    _.map(song => {\r\n      return {\r\n        ...song,\r\n        latestScoreDate: song.results.reduce(\r\n          (latest, current) => (current.date > latest ? current.date : latest),\r\n          song.results[0].date\r\n        ),\r\n        results: song.results.map(res => ({\r\n          ...res,\r\n          hasRankScore: _.some({ playerId: res.playerId, isRank: true }, song.results),\r\n        })),\r\n      };\r\n    }),\r\n    _.orderBy(['latestScoreDate', 'song', 'chartLevel'], ['desc', 'asc', 'desc'])\r\n  )(data);\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n        players: action.players,\r\n      };\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTopScores = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await fetchJson({\r\n        url: `${HOST}/top/v2`,\r\n      });\r\n      // const data = jsonData;\r\n      const processedData = preprocessData(data);\r\n      const rankings = getRankings(processedData, data);\r\n      dispatch({\r\n        type: SUCCESS,\r\n        data: processedData,\r\n        players: _.flow(\r\n          _.toPairs,\r\n          _.map(([id, player]) => ({ ...player, id: _.toInteger(id) }))\r\n        )(data.players),\r\n      });\r\n      dispatch(setRankings(rankings));\r\n      const profiles = getProfiles(processedData, rankings);\r\n      dispatch(setProfiles(profiles));\r\n      return processedData;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\nexport const resetFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n","export const HOST = 'https://vps720616.ovh.net:5000';\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\n\r\nimport { setFilter } from 'reducers/top';\r\n\r\nconst SELECT_PRESET = `PRESETS/SELECT_PRESET`;\r\nconst LOAD_PRESETS = `PRESETS/LOAD_PRESETS`;\r\nconst LOADING_START = `PRESETS/LOADING_START`;\r\nconst LOADING_END = `PRESETS/LOADING_END`;\r\n\r\nconst initialState = {\r\n  presets: [],\r\n  currentPreset: null,\r\n  isLoading: false,\r\n};\r\n\r\nconst itemToOption = item =>\r\n  item && {\r\n    ...item,\r\n    label: item.name,\r\n    value: item.name,\r\n  };\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_PRESETS:\r\n      const currentPreset = _.find({ name: _.get('name', state.currentPreset) }, action.presets);\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(currentPreset) || null,\r\n        presets: _.map(itemToOption, action.presets),\r\n      };\r\n    case SELECT_PRESET:\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(action.currentPreset),\r\n      };\r\n    case LOADING_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case LOADING_END:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst reloadPresets = presets => ({ type: LOAD_PRESETS, presets: presets || [] });\r\n\r\nconst startLoading = () => ({\r\n  type: LOADING_START,\r\n});\r\n\r\nconst endLoading = () => ({\r\n  type: LOADING_END,\r\n});\r\n\r\nexport const selectPreset = currentPreset => ({\r\n  type: SELECT_PRESET,\r\n  currentPreset,\r\n});\r\n\r\nexport const loadPresets = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    dispatch(reloadPresets(presets));\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const savePreset = name => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const { filter } = getState().top;\r\n    const newPreset = { name, filter };\r\n    if (!_.some({ name }, presets)) {\r\n      const newPresets = [...(presets || []), newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      dispatch(selectPreset(newPreset));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    } else if (window.confirm('Preset with this name already exists, replace it?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      const newPresets = [...withoutOldPreset, newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const openPreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const currentPreset = getState().presets.currentPreset;\r\n  const name = _.get('name', currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = name && _.find({ name }, presets);\r\n    if (preset) {\r\n      dispatch(selectPreset(currentPreset));\r\n      dispatch(setFilter(currentPreset.filter));\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const deletePreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const name = _.get('name', getState().presets.currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = _.find({ name }, presets);\r\n    if (preset && window.confirm('Are you sure you want to delete selected preset?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      dispatch(reloadPresets(withoutOldPreset));\r\n      localForage.setItem('filterPresets', withoutOldPreset);\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaLayerGroup, FaFolderOpen, FaSave, FaPlus, FaTrashAlt } from 'react-icons/fa';\r\nimport Select from 'react-select';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport Input from 'components/Shared/Input/Input';\r\n\r\nimport { loadPresets, savePreset, selectPreset, openPreset, deletePreset } from 'reducers/presets';\r\n\r\nconst overlayItem = (\r\n  <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n    <FaLayerGroup />\r\n    пресеты\r\n  </button>\r\n);\r\n\r\nconst noPresetsMessage = () => 'пусто';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ...state.presets,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  loadPresets,\r\n  savePreset,\r\n  openPreset,\r\n  deletePreset,\r\n  selectPreset,\r\n};\r\n\r\nclass PresetsControl extends React.Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    this.props.loadPresets();\r\n  }\r\n\r\n  onChangeSelection = selected => {\r\n    this.props.selectPreset(selected.name);\r\n  };\r\n\r\n  onRewritePreset = () => {\r\n    const { currentPreset } = this.props;\r\n    this.props.savePreset(currentPreset.name);\r\n  };\r\n\r\n  onSavePreset = () => {\r\n    const { name } = this.state;\r\n    this.props.savePreset(name);\r\n    this.setState({ isAddingNew: false });\r\n  };\r\n\r\n  render() {\r\n    const { presets, currentPreset, isLoading } = this.props;\r\n    const { name, isAddingNew } = this.state;\r\n    return (\r\n      <div>\r\n        <Overlay overlayItem={overlayItem}>\r\n          <div className=\"presets-control-overlay\">\r\n            <Select\r\n              className=\"select _margin-bottom\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"пресеты...\"\r\n              options={presets}\r\n              value={currentPreset}\r\n              onChange={this.props.selectPreset}\r\n              noOptionsMessage={noPresetsMessage}\r\n            />\r\n            {currentPreset && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.props.openPreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaFolderOpen /> открыть\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.onRewritePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaSave /> перезаписать\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon\"\r\n                  onClick={this.props.deletePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaTrashAlt /> удалить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {!isAddingNew && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left _self-align-end\"\r\n                  onClick={() => this.setState({ isAddingNew: true })}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaPlus /> добавить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {isAddingNew && (\r\n              <div className=\"adding-new _margin-bottom\">\r\n                <Input\r\n                  value={name}\r\n                  placeholder=\"имя пресета...\"\r\n                  className=\"form-control\"\r\n                  onChange={name => this.setState({ name })}\r\n                />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={this.onSavePreset}\r\n                  disabled={!name || isLoading}\r\n                >\r\n                  <FaSave /> сохранить\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={() => this.setState({ isAddingNew: false })}\r\n                  disabled={isLoading}\r\n                >\r\n                  отмена\r\n                </button>\r\n              </div>\r\n            )}\r\n            {/* <div>\r\n              <Toggle\r\n                checked={false}\r\n                onToggle={active => {\r\n                  localForage.setItem('showTabs', active);\r\n                }}\r\n              >\r\n                показывать табы с пресетами\r\n              </Toggle>\r\n            </div> */}\r\n          </div>\r\n        </Overlay>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PresetsControl);\r\n","import React from 'react';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport moment from 'moment';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\n\r\nconst timeStyle = {\r\n  flavour: 'long',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nexport const tooltipFormatter = date => date.toLocaleDateString();\r\nexport const tooltipFormatterForBests = date => (\r\n  <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n    <div>точная дата взятия неизвестна</div>\r\n    <div>скор был записан с my best или machine best</div>\r\n    <div>дата записи: {date.toLocaleDateString()}</div>\r\n  </div>\r\n);\r\n\r\nconst nowDate = new Date();\r\nexport const getTimeAgo = date => {\r\n  const strTimeAgo = timeAgo.format(date, timeStyle);\r\n  if (!strTimeAgo) {\r\n    const dayDiff = moment(nowDate)\r\n      .startOf('day')\r\n      .diff(moment(date).startOf('day'), 'days');\r\n    return dayDiff === 0 ? 'сегодня' : dayDiff === 1 ? 'вчера' : '';\r\n  } else {\r\n    return strTimeAgo;\r\n  }\r\n};\r\n","export const colorsArray = [\r\n  '#4DB3FF',\r\n  '#80B300',\r\n  '#FF6655',\r\n  '#FF99E6',\r\n  '#33FFCC',\r\n  '#e633c8',\r\n  '#dbe812',\r\n  '#FF1A66',\r\n  '#991AFF',\r\n  '#E6B333',\r\n  '#1AB399',\r\n  '#4D8066',\r\n  '#CC9999',\r\n  '#00E680',\r\n  '#809980',\r\n  '#E6FF80',\r\n  '#1AFF33',\r\n  '#999933',\r\n  '#E6331A',\r\n  '#CCCC00',\r\n  '#66E64D',\r\n  '#4D80CC',\r\n  '#9900B3',\r\n  '#4DB380',\r\n  '#FF4D4D',\r\n];\r\n","import _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport matchSorter from 'match-sorter';\r\n\r\nimport { SORT, CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nexport const playersSelector = createSelector(\r\n  state => state.top.players,\r\n  _.flow(\r\n    _.toPairs,\r\n    _.map(([id, { nickname, arcade_name }]) => ({\r\n      label: `${nickname} (${arcade_name})`,\r\n      value: nickname,\r\n    })),\r\n    _.sortBy(it => _.toLower(it.label))\r\n  )\r\n);\r\n\r\nconst filterCharts = (filter, rows) => {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filter);\r\n  const type = _.getOr(null, 'type', filter);\r\n\r\n  const filtered = _.flow(\r\n    _.filter(row => {\r\n      return (\r\n        row.chartLevel >= range[0] &&\r\n        row.chartLevel <= range[1] &&\r\n        (!type || type === row.chartType)\r\n      );\r\n    })\r\n  )(rows);\r\n  return filtered;\r\n};\r\n\r\nconst getFilteredData = (data, filter) => {\r\n  // const start = performance.now();\r\n  const names = _.map('value', filter.players);\r\n  const namesOr = _.map('value', filter.playersOr);\r\n  const namesNot = _.map('value', filter.playersNot);\r\n  const sortingType = _.get('value', filter.sortingType);\r\n  const protagonist = _.get('value', filter.protagonist);\r\n  const excludeAntagonists = _.map('value', filter.excludeAntagonists);\r\n\r\n  const defaultSorting = [_.orderBy(['latestScoreDate'], ['desc'])];\r\n  const protagonistSorting = [\r\n    _.filter(row => _.map('nickname', row.results).includes(protagonist)),\r\n    _.map(row => {\r\n      const protIndex = _.findIndex({ nickname: protagonist }, row.results);\r\n      const protScore = row.results[protIndex].score;\r\n      const enemies = _.flow([\r\n        _.take(protIndex),\r\n        _.uniqBy('nickname'),\r\n        _.remove(res => excludeAntagonists.includes(res.nickname) || res.score === protScore),\r\n      ])(row.results);\r\n      const distance = Math.sqrt(\r\n        _.reduce((dist, enemy) => dist + (enemy.score / protScore - 0.99) ** 2, 0, enemies)\r\n      );\r\n      return {\r\n        ...row,\r\n        distanceFromProtagonist: distance,\r\n      };\r\n    }),\r\n    _.orderBy(['distanceFromProtagonist'], ['desc']),\r\n  ];\r\n  const getScoreSorting = direction => [\r\n    _.filter(row => _.map('nickname', row.results).includes(protagonist)),\r\n    _.orderBy(\r\n      [\r\n        row => {\r\n          return _.getOr(\r\n            direction === 'asc' ? Infinity : -Infinity,\r\n            'ratingDiff',\r\n            _.find({ nickname: protagonist }, row.results)\r\n          );\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const sortingFunctions =\r\n    {\r\n      [SORT.DEFAULT]: defaultSorting,\r\n      [SORT.PROTAGONIST]: protagonistSorting,\r\n      [SORT.RANK_ASC]: getScoreSorting('asc'),\r\n      [SORT.RANK_DESC]: getScoreSorting('desc'),\r\n    }[sortingType] || defaultSorting;\r\n\r\n  const result = _.flow(\r\n    _.compact([\r\n      filter.chartRange && (items => filterCharts(filter.chartRange, items)),\r\n      !filter.showRank &&\r\n        _.map(row => ({ ...row, results: _.filter(res => !res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        filter.showOnlyRank &&\r\n        _.map(row => ({ ...row, results: _.filter(res => res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        !filter.showOnlyRank &&\r\n        !filter.showRankAndNorank &&\r\n        _.map(row => {\r\n          const occuredNames = [];\r\n          return {\r\n            ...row,\r\n            results: _.filter(res => {\r\n              const alreadyOccured = occuredNames.includes(res.nickname);\r\n              occuredNames.push(res.nickname);\r\n              return !alreadyOccured;\r\n            }, row.results),\r\n          };\r\n        }),\r\n      (names.length || namesOr.length || namesNot.length) &&\r\n        _.filter(row => {\r\n          const rowNames = _.map('nickname', row.results);\r\n          return (\r\n            (!names.length || _.every(name => rowNames.includes(name), names)) &&\r\n            (!namesOr.length || _.some(name => rowNames.includes(name), namesOr)) &&\r\n            (!namesNot.length || !_.some(name => rowNames.includes(name), namesNot))\r\n          );\r\n        }),\r\n      _.filter(row => _.size(row.results)),\r\n      ...sortingFunctions,\r\n      filter.song && (items => matchSorter(items, filter.song, { keys: ['song'] })),\r\n      _.map(song => {\r\n        let topPlace = 1;\r\n        const occuredNicknames = [];\r\n        return {\r\n          ...song,\r\n          results: song.results.map((res, index) => {\r\n            const isSecondOccurenceInResults = occuredNicknames.includes(res.nickname);\r\n            occuredNicknames.push(res.nickname);\r\n            if (index === 0) {\r\n              topPlace = 1;\r\n            } else if (\r\n              !isSecondOccurenceInResults &&\r\n              res.score !== _.get([index - 1, 'score'], song.results)\r\n            ) {\r\n              topPlace += 1;\r\n            }\r\n            return {\r\n              ...res,\r\n              topPlace,\r\n              isSecondOccurenceInResults,\r\n            };\r\n          }),\r\n        };\r\n      }),\r\n    ])\r\n  )(data);\r\n  // console.log('Elapsed:', performance.now() - start);\r\n  return result;\r\n};\r\n\r\nexport const filteredDataSelector = createSelector(\r\n  state => state.top.data,\r\n  state => state.top.filter,\r\n  getFilteredData\r\n);\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash/fp';\r\nimport Select from 'react-select';\r\nimport classNames from 'classnames';\r\nimport numeral from 'numeral';\r\nimport localForage from 'localforage';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport { FaRedoAlt, FaExclamationTriangle, FaSearch, FaYoutube } from 'react-icons/fa';\r\n\r\n// styles\r\nimport 'react-responsive-ui/style.css';\r\nimport './leaderboard.scss';\r\n\r\n// components\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport CollapsibleBar from 'components/Shared/CollapsibleBar';\r\nimport ChartFilter from './ChartFilter';\r\nimport PresetsControl from './PresetsControl';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\nimport { SORT } from 'constants/leaderboard';\r\nimport { DEBUG } from 'constants/env';\r\n\r\n// reducers\r\nimport { fetchTopScores, setFilter, resetFilter, defaultFilter } from 'reducers/top';\r\nimport { selectPreset, openPreset } from 'reducers/presets';\r\n\r\n// utils\r\nimport { tooltipFormatter, tooltipFormatterForBests, getTimeAgo } from 'utils/leaderboards';\r\nimport { colorsArray } from 'utils/colors';\r\nimport { playersSelector, filteredDataSelector } from 'reducers/selectors';\r\n\r\n// code\r\nconst sortingOptions = [\r\n  {\r\n    label: 'новизне скоров',\r\n    value: SORT.DEFAULT,\r\n  },\r\n  // {\r\n  //   label: 'отставанию от остальных',\r\n  //   value: SORT.PROTAGONIST,\r\n  // },\r\n  // ...(DEBUG\r\n  //   ? [\r\n  {\r\n    label: 'от худших результатов',\r\n    value: SORT.RANK_ASC,\r\n  },\r\n  {\r\n    label: 'от лучших результатов',\r\n    value: SORT.RANK_DESC,\r\n  },\r\n  //   ]\r\n  // : []),\r\n];\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    players: playersSelector(state),\r\n    filteredData: filteredDataSelector(state),\r\n    data: state.top.data,\r\n    filter: state.top.filter,\r\n    error: state.top.error,\r\n    isLoading: state.top.isLoading,\r\n    presets: state.presets.presets,\r\n    currentPreset: state.presets.currentPreset,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopScores,\r\n  setFilter,\r\n  resetFilter,\r\n  selectPreset,\r\n  openPreset,\r\n};\r\n\r\nclass Leaderboard extends Component {\r\n  static propTypes = {\r\n    match: toBe.object,\r\n    data: toBe.array,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  state = { showItemsCount: 20 };\r\n\r\n  setFilter = _.curry((name, value) => {\r\n    const filter = { ...this.props.filter, [name]: value };\r\n    this.props.setFilter(filter);\r\n    localForage.setItem('filter', filter);\r\n  });\r\n\r\n  resetFilter = () => {\r\n    this.props.resetFilter();\r\n    localForage.setItem('filter', defaultFilter);\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchTopScores();\r\n  };\r\n\r\n  renderSimpleSearch() {\r\n    const { isLoading, filter } = this.props;\r\n    return (\r\n      <div className=\"simple-search\">\r\n        <div className=\"song-name _margin-right _margin-bottom\">\r\n          <Input\r\n            value={filter.song || ''}\r\n            placeholder=\"название песни...\"\r\n            className=\"form-control\"\r\n            onChange={this.setFilter('song')}\r\n          />\r\n        </div>\r\n        <div className=\"chart-range _margin-right _margin-bottom\">\r\n          <ChartFilter filterValue={filter.chartRange} onChange={this.setFilter('chartRange')} />\r\n        </div>\r\n        <div className=\"_flex-fill\" />\r\n        <div className=\"_flex-row _margin-bottom\">\r\n          <PresetsControl />\r\n          <button className=\"btn btn-sm btn-dark btn-icon _margin-right\" onClick={this.resetFilter}>\r\n            <FaRedoAlt /> сбросить фильтры\r\n          </button>\r\n          <button\r\n            disabled={isLoading}\r\n            className=\"btn btn-sm btn-dark btn-icon\"\r\n            onClick={this.onRefresh}\r\n          >\r\n            <FaSearch /> обновить\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFilters() {\r\n    const { players, filter } = this.props;\r\n\r\n    return (\r\n      <div className=\"filters\">\r\n        <div className=\"people-filters\">\r\n          <label className=\"label\">показывать чарты, которые сыграл:</label>\r\n          <div className=\"players-block\">\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">каждый из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'players', filter)}\r\n                onChange={this.setFilter('players')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и хоть один из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersOr', filter)}\r\n                onChange={this.setFilter('playersOr')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и никто из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersNot', filter)}\r\n                onChange={this.setFilter('playersNot')}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Toggle\r\n            checked={_.getOr(false, 'showRank', filter)}\r\n            onChange={this.setFilter('showRank')}\r\n          >\r\n            показывать скоры на ранке\r\n          </Toggle>\r\n        </div>\r\n        {_.get('showRank', filter) && (\r\n          <>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showOnlyRank', filter)}\r\n                onChange={value => {\r\n                  this.setFilter('showOnlyRank', value);\r\n                  if (_.get('showRankAndNorank', filter)) {\r\n                    this.setFilter('showRankAndNorank', false);\r\n                  }\r\n                }}\r\n              >\r\n                <strong>только</strong> на ранке\r\n              </Toggle>\r\n            </div>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showRankAndNorank', filter)}\r\n                onChange={value => {\r\n                  this.setFilter('showRankAndNorank', value);\r\n                  if (_.get('showOnlyRank', filter)) {\r\n                    this.setFilter('showOnlyRank', false);\r\n                  }\r\n                }}\r\n              >\r\n                показывать лучшие скоры с ранком и без\r\n              </Toggle>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSortings() {\r\n    const { players, filter } = this.props;\r\n    return (\r\n      <div className=\"sortings\">\r\n        <div>\r\n          <label className=\"label\">сортировать по</label>\r\n          <Select\r\n            placeholder=\"выберите сортировку\"\r\n            className=\"select\"\r\n            classNamePrefix=\"select\"\r\n            clearable={false}\r\n            options={sortingOptions}\r\n            value={_.getOr(sortingOptions[0], 'sortingType', filter)}\r\n            onChange={this.setFilter('sortingType')}\r\n          />\r\n        </div>\r\n        {[SORT.PROTAGONIST, SORT.RANK_ASC, SORT.RANK_DESC].includes(\r\n          _.get('sortingType.value', filter)\r\n        ) && (\r\n          <div>\r\n            <label className=\"label\">протагонист (чьи результаты):</label>\r\n            <Select\r\n              className={classNames('select players', {\r\n                'red-border': !_.get('protagonist', filter),\r\n              })}\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              value={_.getOr(null, 'protagonist', filter)}\r\n              onChange={this.setFilter('protagonist')}\r\n            />\r\n          </div>\r\n        )}\r\n        {[SORT.PROTAGONIST].includes(_.get('sortingType.value', filter)) && (\r\n          <div>\r\n            <label className=\"label\">не учитывать в сравнении:</label>\r\n            <Select\r\n              closeMenuOnSelect={false}\r\n              className=\"select players\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              isMulti\r\n              value={_.getOr([], 'excludeAntagonists', filter)}\r\n              onChange={this.setFilter('excludeAntagonists')}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, filteredData, error, filter } = this.props;\r\n    const { showItemsCount } = this.state;\r\n    const canShowMore = filteredData.length > showItemsCount;\r\n    const visibleData = _.slice(0, showItemsCount, filteredData);\r\n\r\n    const hasProtagonist = [SORT.PROTAGONIST, SORT.RANK_ASC, SORT.RANK_DESC].includes(\r\n      _.get('sortingType.value', filter)\r\n    );\r\n    const protagonistName = _.get('protagonist.value', filter);\r\n    const uniqueSelectedNames = _.slice(\r\n      0,\r\n      colorsArray.length,\r\n      _.uniq(\r\n        _.compact([\r\n          hasProtagonist && protagonistName,\r\n          ..._.map('value', filter.players),\r\n          ..._.map('value', filter.playersOr),\r\n        ])\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div className=\"leaderboard-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"search-block\">\r\n            {this.renderSimpleSearch()}\r\n            <CollapsibleBar title=\"фильтры\">{this.renderFilters()}</CollapsibleBar>\r\n            <CollapsibleBar title=\"сортировка\">{this.renderSortings()}</CollapsibleBar>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!!this.props.presets.length && (\r\n            <div className=\"presets-buttons\">\r\n              <span>пресеты:</span>\r\n              {this.props.presets.map(preset => (\r\n                <ToggleButton\r\n                  text={preset.name}\r\n                  className=\"btn btn-sm btn-dark _margin-right\"\r\n                  active={_.get('filter', preset) === this.props.filter}\r\n                  onToggle={() => {\r\n                    this.props.selectPreset(preset);\r\n                    this.props.openPreset();\r\n                  }}\r\n                ></ToggleButton>\r\n              ))}\r\n            </div>\r\n          )}\r\n          <div className=\"top-list\">\r\n            {_.isEmpty(filteredData) && !isLoading && 'ничего не найдено'}\r\n            {!isLoading &&\r\n              visibleData.map((chart, chartIndex) => {\r\n                return (\r\n                  <div className=\"song-block\" key={chart.song + chart.chartLabel}>\r\n                    <div className=\"song-name\">\r\n                      <div\r\n                        className={classNames('chart-name', {\r\n                          single: chart.chartType === 'S',\r\n                        })}\r\n                      >\r\n                        <span className=\"chart-letter\">{chart.chartType}</span>\r\n                        <span className=\"chart-number\">{chart.chartLevel}</span>\r\n                      </div>\r\n                      <div>{chart.song}</div>\r\n                      <div className=\"youtube-link\">\r\n                        <a\r\n                          href={`https://youtube.com/results?search_query=${chart.song.replace(\r\n                            / /g,\r\n                            '+'\r\n                          )}+${chart.chartLabel}`}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          <FaYoutube />\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"charts\">\r\n                      <div className=\"chart\">\r\n                        <div className=\"results\">\r\n                          <table>\r\n                            {chartIndex === 0 && (\r\n                              <thead>\r\n                                <tr>\r\n                                  <th className=\"place\"></th>\r\n                                  <th className=\"nickname\"></th>\r\n                                  <th className=\"rank\"></th>\r\n                                  <th className=\"score\">score</th>\r\n                                  <th className=\"grade\"></th>\r\n                                  <th className=\"number\">miss</th>\r\n                                  <th className=\"number\">bad</th>\r\n                                  <th className=\"number\">good</th>\r\n                                  <th className=\"number\">great</th>\r\n                                  <th className=\"number\">perfect</th>\r\n                                  <th className=\"combo\">combo</th>\r\n                                  <th className=\"accuracy\">accuracy</th>\r\n                                  <th className=\"date\"></th>\r\n                                </tr>\r\n                              </thead>\r\n                            )}\r\n                            <tbody>\r\n                              {chart.results.map(res => {\r\n                                const nameIndex = uniqueSelectedNames.indexOf(res.nickname);\r\n                                return (\r\n                                  <tr\r\n                                    key={res.score + res.nickname}\r\n                                    className={classNames({\r\n                                      empty: !res.isExactDate,\r\n                                      latest: res.date === chart.latestScoreDate,\r\n                                    })}\r\n                                  >\r\n                                    <td className=\"place\">\r\n                                      {res.isSecondOccurenceInResults ? '' : `#${res.topPlace}`}\r\n                                    </td>\r\n                                    <td\r\n                                      className=\"nickname\"\r\n                                      style={\r\n                                        nameIndex > -1\r\n                                          ? { fontWeight: 'bold', color: colorsArray[nameIndex] }\r\n                                          : {}\r\n                                      }\r\n                                    >\r\n                                      <Tooltip\r\n                                        content={<div>{res.nicknameArcade}</div>}\r\n                                        tooltipClassName=\"timeago-tooltip\"\r\n                                      >\r\n                                        {res.nickname}\r\n                                      </Tooltip>\r\n\r\n                                      {DEBUG && (\r\n                                        <span>\r\n                                          {' '}\r\n                                          {res.startingRating &&\r\n                                            Math.round(res.startingRating)}{' '}\r\n                                          {res.ratingDiff && Math.round(res.ratingDiff)}{' '}\r\n                                          {res.ratingDiffLast && Math.round(res.ratingDiffLast)}\r\n                                        </span>\r\n                                      )}\r\n                                      {!DEBUG &&\r\n                                        hasProtagonist &&\r\n                                        res.nickname === protagonistName &&\r\n                                        res.ratingDiff && (\r\n                                          <span>\r\n                                            {` (${res.ratingDiff > 0 ? '+' : ''}${Math.round(\r\n                                              res.ratingDiff\r\n                                            )})`}\r\n                                          </span>\r\n                                        )}\r\n                                      {_.get('sortingType.value', filter) === SORT.PROTAGONIST &&\r\n                                        res.nickname === protagonistName &&\r\n                                        chart.distanceFromProtagonist > 0 && (\r\n                                          <span className=\"protagonist-diff\">\r\n                                            {' '}\r\n                                            -{(chart.distanceFromProtagonist * 100).toFixed(1)}%\r\n                                          </span>\r\n                                        )}\r\n                                    </td>\r\n                                    <td\r\n                                      className={classNames('judge', {\r\n                                        vj: res.isRank,\r\n                                        hj: res.isHJ,\r\n                                      })}\r\n                                    >\r\n                                      {res.isRank && (\r\n                                        <div className=\"inner\">\r\n                                          {res.isExactDate ? (\r\n                                            'VJ'\r\n                                          ) : (\r\n                                            <Tooltip\r\n                                              content={\r\n                                                <div>\r\n                                                  наличие ранка на этом результате было угадано,\r\n                                                  основываясь на скоре\r\n                                                </div>\r\n                                              }\r\n                                              tooltipClassName=\"timeago-tooltip\"\r\n                                            >\r\n                                              VJ?\r\n                                            </Tooltip>\r\n                                          )}\r\n                                        </div>\r\n                                      )}\r\n                                      {res.isHJ && <div className=\"inner\">HJ</div>}\r\n                                    </td>\r\n                                    <td className=\"score\">\r\n                                      <Overlay\r\n                                        overlayClassName=\"score-overlay-outer\"\r\n                                        overlayItem={\r\n                                          <span>{numeral(res.score).format('0,0')}</span>\r\n                                        }\r\n                                        placement=\"top\"\r\n                                      >\r\n                                        <div className=\"score-overlay\">\r\n                                          <div>\r\n                                            <span className=\"_grey\">игрок: </span>\r\n                                            <NavLink\r\n                                              exact\r\n                                              to={routes.profile.getPath({ name: res.nickname })}\r\n                                            >\r\n                                              {res.nickname} ({res.nicknameArcade})\r\n                                            </NavLink>\r\n                                          </div>\r\n                                          {!res.isExactDate && (\r\n                                            <div className=\"warning\">\r\n                                              <FaExclamationTriangle />\r\n                                              рекорд взят с my best. часть данных недоступна\r\n                                            </div>\r\n                                          )}\r\n                                          {res.isExactDate && (\r\n                                            <>\r\n                                              <div>\r\n                                                <span className=\"_grey\">моды: </span>\r\n                                                {res.mods || '—'}\r\n                                              </div>\r\n                                              {res.originalChartMix && (\r\n                                                <div>\r\n                                                  <div className=\"warning\">\r\n                                                    <FaExclamationTriangle />\r\n                                                    было сыграно на {res.originalChartMix}\r\n                                                  </div>\r\n                                                  {res.originalChartLabel && (\r\n                                                    <div>\r\n                                                      <span className=\"_grey\">\r\n                                                        оригинальный чарт:{' '}\r\n                                                      </span>\r\n                                                      {res.originalChartLabel}\r\n                                                    </div>\r\n                                                  )}\r\n                                                  {res.originalScore && (\r\n                                                    <div>\r\n                                                      <span className=\"_grey\">\r\n                                                        оригинальный скор:{' '}\r\n                                                      </span>\r\n                                                      {res.originalScore}\r\n                                                    </div>\r\n                                                  )}\r\n                                                </div>\r\n                                              )}\r\n                                            </>\r\n                                          )}\r\n                                        </div>\r\n                                      </Overlay>\r\n                                    </td>\r\n                                    <td className=\"grade\">\r\n                                      <div className=\"img-holder\">\r\n                                        {res.grade && res.grade !== '?' && (\r\n                                          <img\r\n                                            src={`${process.env.PUBLIC_URL}/grades/${res.grade}.png`}\r\n                                            alt={res.grade}\r\n                                          />\r\n                                        )}\r\n                                        {res.grade === '?' && null}\r\n                                      </div>\r\n                                    </td>\r\n                                    <td className=\"number miss\">{res.miss}</td>\r\n                                    <td className=\"number bad\">{res.bad}</td>\r\n                                    <td className=\"number good\">{res.good}</td>\r\n                                    <td className=\"number great\">{res.great}</td>\r\n                                    <td className=\"number perfect\">{res.perfect}</td>\r\n                                    <td className=\"combo\">\r\n                                      {res.combo}\r\n                                      {res.combo ? 'x' : ''}\r\n                                    </td>\r\n                                    <td className=\"accuracy\">\r\n                                      {res.accuracy}\r\n                                      {res.accuracy ? '%' : ''}\r\n                                    </td>\r\n                                    <td\r\n                                      className={classNames('date', {\r\n                                        latest: res.date === chart.latestScoreDate,\r\n                                      })}\r\n                                    >\r\n                                      <Tooltip\r\n                                        content={\r\n                                          res.isExactDate\r\n                                            ? tooltipFormatter(res.dateObject)\r\n                                            : tooltipFormatterForBests(res.dateObject)\r\n                                        }\r\n                                        tooltipClassName=\"timeago-tooltip\"\r\n                                      >\r\n                                        {getTimeAgo(res.dateObject)}\r\n                                        {res.isExactDate ? '' : '?'}\r\n                                      </Tooltip>\r\n                                    </td>\r\n                                  </tr>\r\n                                );\r\n                              })}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            {!isLoading && canShowMore && (\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() =>\r\n                  this.setState(state => ({ showItemsCount: state.showItemsCount + 10 }))\r\n                }\r\n              >\r\n                show more...\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Leaderboard);\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\nimport numeral from 'numeral';\r\nimport classNames from 'classnames';\r\nimport { GiQueenCrown } from 'react-icons/gi';\r\nimport { FaAngleDoubleUp, FaAngleDoubleDown } from 'react-icons/fa';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nconst getGradeImg = grade => (\r\n  <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n);\r\n\r\nexport default function RankingList({ ranking, isLoading }) {\r\n  return (\r\n    <div className=\"ranking-list\">\r\n      {_.isEmpty(ranking) && !isLoading && 'ничего не найдено'}\r\n      {isLoading && <Loader />}\r\n      {!isLoading && (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"place\"></th>\r\n              <th className=\"change\"></th>\r\n              <th className=\"name\">name</th>\r\n              <th className=\"name2\">piu name</th>\r\n              <th className=\"rating\">elo</th>\r\n              <th className=\"total-score\">total score</th>\r\n              <th className=\"grades sss\">{getGradeImg('SSS')}</th>\r\n              <th className=\"grades ss\">{getGradeImg('SS')}</th>\r\n              <th className=\"grades s\">{getGradeImg('S')}</th>\r\n              <th className=\"grades a\">{getGradeImg('A+')}</th>\r\n              <th className=\"grades b\">{getGradeImg('B')}</th>\r\n              <th className=\"grades c\">{getGradeImg('C')}</th>\r\n              <th className=\"grades d\">{getGradeImg('D')}</th>\r\n              <th className=\"grades f\">{getGradeImg('F')}</th>\r\n              <th className=\"playcount\">scores</th>\r\n              <th className=\"accuracy\">accuracy</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {ranking.map((player, playerIndex) => {\r\n              return (\r\n                <tr className=\"player\" key={player.name}>\r\n                  <td className=\"place\">\r\n                    {playerIndex === 0 ? <GiQueenCrown /> : `#${playerIndex + 1}`}\r\n                  </td>\r\n                  <td className=\"change\">\r\n                    {player.change > 0 && (\r\n                      <div className=\"change-holder up\">\r\n                        <span>{player.change}</span>\r\n                        <FaAngleDoubleUp />\r\n                      </div>\r\n                    )}\r\n                    {player.change < 0 && (\r\n                      <div className=\"change-holder down\">\r\n                        <span>{-player.change}</span>\r\n                        <FaAngleDoubleDown />\r\n                      </div>\r\n                    )}\r\n                    {!!player.change && _.isString(player.change) && (\r\n                      <div className=\"change-holder text\">\r\n                        <span>{player.change}</span>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"name\">\r\n                    <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                      {player.name}\r\n                    </NavLink>\r\n                  </td>\r\n                  <td className=\"name\">\r\n                    <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                      {player.nameArcade}\r\n                    </NavLink>\r\n                  </td>\r\n                  <td className=\"rating\">\r\n                    {player.rating}{' '}\r\n                    {!!player.prevRating && player.prevRating !== player.rating && (\r\n                      <span\r\n                        className={classNames('rating-change', {\r\n                          down: player.prevRating > player.rating,\r\n                          up: player.prevRating < player.rating,\r\n                        })}\r\n                      >\r\n                        {player.prevRating < player.rating ? '+' : ''}\r\n                        {player.rating - player.prevRating}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"total-score\">\r\n                    <div>S: {numeral(player.totalScore.S).format('0,0')}</div>\r\n                    <div>D: {numeral(player.totalScore.D).format('0,0')}</div>\r\n                  </td>\r\n                  <td className=\"grades sss\">{player.grades.SSS}</td>\r\n                  <td className=\"grades ss\">{player.grades.SS}</td>\r\n                  <td className=\"grades s\">{player.grades.S}</td>\r\n                  <td className=\"grades a\">{player.grades.A}</td>\r\n                  <td className=\"grades b\">{player.grades.B}</td>\r\n                  <td className=\"grades c\">{player.grades.C}</td>\r\n                  <td className=\"grades d\">{player.grades.D}</td>\r\n                  <td className=\"grades f\">{player.grades.F}</td>\r\n                  <td className=\"playcount\">{player.count}</td>\r\n                  <td className=\"accuracy\">{player.accuracy ? `${player.accuracy}%` : ''}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function RankingFaq() {\r\n  return (\r\n    <div className=\"faq\">\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Как считается рейтинг?</div>\r\n        <div className=\"answer\">\r\n          A: Используется <a href=\"https://en.wikipedia.org/wiki/Elo_rating_system\">рейтинг Эло</a>,\r\n          широко используемый в шахматах и других играх, слегка модицированный под условия игры на\r\n          пампе. Средний рейтинг - 1000. Коэффициент К зависит от уровня чарта (более сложные чарты\r\n          сильнее влияют на рейтинг). Количество очков влияет на заработанный рейтинг (маленький\r\n          отрыв от противника не даст так много очков как большой отрыв).\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Система Эло используется для игр 1 на 1, как она используется на пампе, где на одном\r\n          чарте играет много игроков?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: Рекорды на одном чарте делятся на несколько игр 1 на 1. Если есть 3 игрока: A, B, C; то\r\n          считается, что было 3 отдельные игры: A vs B, A vs C, B vs C.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Учитываются ли рекорды на ранке в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: Да. Как минимум потому что у нас есть много рекордов, взятых с машин бестов, и мы не\r\n          знаем наверняка, на ранке они или нет. Если у игрока в топе есть два скора - на ранке и\r\n          без ранка, используется тот, где больше очков.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Почему меня нет в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: В таблицу попадают только те, у кого есть хотя бы 20 игр 1 на 1. Первые 20 игр\r\n          используются для определения изначального рейтинга.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Почему суммарное количество оценок S-A-B не совпадает с общим количеством скоров?\r\n        </div>\r\n        <div className=\"answer\">A: Не для каждого результата известна оценка.</div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Если у меня есть несколько рекордов на А, несколько на А+, как считается суммарное\r\n          количество грейдов в таблице?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: В каждой колонке учитываются обе буквы - и треснутые, и с удержанным лайфом. То есть и\r\n          А, и А+ идут в колонку А. Точно так же для B, C, D.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Убери аккураси из таблицы!</div>\r\n        <div className=\"answer\">A: Грем, это секция для вопросов.</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle } from 'react-icons/fa';\r\nimport { Link, Route, withRouter } from 'react-router-dom';\r\n\r\n// styles\r\nimport 'react-responsive-ui/style.css';\r\nimport './ranking.scss';\r\n\r\n// components\r\nimport RankingList from './RankingList';\r\nimport RankingFaq from './RankingFaq';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport { fetchTopScores } from 'reducers/top';\r\n\r\n// utils\r\n\r\n// code\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ranking: state.ranking.data,\r\n    error: state.top.error,\r\n    isLoading: state.top.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopScores,\r\n};\r\n\r\nclass Ranking extends Component {\r\n  static propTypes = {\r\n    ranking: toBe.array,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    ranking: [],\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchTopScores();\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, ranking, error } = this.props;\r\n\r\n    return (\r\n      <div className=\"ranking-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.path}\r\n              render={() => (\r\n                <>\r\n                  <Link to={routes.ranking.faq.path}>\r\n                    <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n                      <FaQuestionCircle /> faq\r\n                    </button>\r\n                  </Link>\r\n                  <button\r\n                    disabled={isLoading}\r\n                    className=\"btn btn-sm btn-dark btn-icon\"\r\n                    onClick={this.onRefresh}\r\n                  >\r\n                    <FaSearch /> обновить\r\n                  </button>\r\n                </>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.faq.path}\r\n              render={() => (\r\n                <Link to={routes.ranking.path}>\r\n                  <button className=\"btn btn-sm btn-dark btn-icon\">назад</button>\r\n                </Link>\r\n              )}\r\n            />\r\n          </div>\r\n          <Route\r\n            exact\r\n            path={routes.ranking.path}\r\n            render={() => <RankingList ranking={ranking} isLoading={isLoading} />}\r\n          />\r\n          <Route exact path={routes.ranking.faq.path} component={RankingFaq} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Ranking));\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ReferenceLine,\r\n  CartesianGrid,\r\n  Line,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\nimport { createSelector } from 'reselect';\r\nimport _ from 'lodash/fp';\r\n\r\n// styles\r\nimport 'react-responsive-ui/style.css';\r\nimport './profile.scss';\r\n\r\n// constants\r\n\r\n// components\r\nimport Range from 'components/Shared/Range';\r\n\r\n// reducers\r\nimport { fetchTopScores } from 'reducers/top';\r\nimport { setProfilesFilter, resetProfilesFilter } from 'reducers/profiles';\r\n\r\n// utils\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\n\r\n// code\r\nconst defaultGradesDistribution = {\r\n  SSS: 0,\r\n  SS: 0,\r\n  S: 0,\r\n  'A+': 0,\r\n  A: 0,\r\n  B: 0,\r\n  C: 0,\r\n  D: 0,\r\n  F: 0,\r\n};\r\nconst profileSelector = createSelector(\r\n  (state, props) => _.toInteger(props.match.params.id),\r\n  state => state.profiles.data,\r\n  state => state.profiles.filter,\r\n  state => state.top.players,\r\n  state => state.ranking.data,\r\n  (id, data, filter, players, ranking) => {\r\n    const profile = data[id];\r\n    if (_.isEmpty(profile)) {\r\n      return null;\r\n    }\r\n    const levelsDistribution = _.flow(\r\n      _.get('resultsByLevel'),\r\n      _.toPairs,\r\n      _.map(([x, y]) => ({\r\n        x: _.toInteger(x),\r\n        S: _.size(_.filter(res => res.chart.chartType === 'S', y)),\r\n        D: -_.size(_.filter(res => res.chart.chartType === 'D', y)),\r\n      }))\r\n    )(profile);\r\n    const gradesDistribution = _.flow(\r\n      _.get('resultsByLevel'),\r\n      _.toPairs,\r\n      _.map(\r\n        _.update('[1].result.grade', grade =>\r\n          grade && grade.includes('+') && grade !== 'A+' ? grade.replace('+', '') : grade\r\n        )\r\n      ),\r\n      _.map(([x, y]) => ({\r\n        x: _.toInteger(x),\r\n        ...defaultGradesDistribution,\r\n        ..._.omit('?', _.mapValues(_.size, _.groupBy('result.grade', y))),\r\n      })),\r\n      _.map(item => {\r\n        const grades = _.pick(Object.keys(defaultGradesDistribution), item);\r\n        const sum = _.sum(_.values(grades));\r\n        return {\r\n          ...item,\r\n          gradesValues: grades,\r\n          ...(sum === 0 ? grades : _.mapValues(value => (100 * value) / sum, grades)),\r\n        };\r\n      })\r\n    )(profile);\r\n\r\n    const lastTick = _.last(profile.rankingHistory).date;\r\n    const firstTick = _.first(profile.rankingHistory).date;\r\n    const minMaxRange = [firstTick / 1000 / 60 / 60 / 24, lastTick / 1000 / 60 / 60 / 24];\r\n    let placesChanges = [];\r\n    let ratingChanges = [];\r\n    if (filter.dayRange) {\r\n      const dayRangeMs = [\r\n        filter.dayRange[0] * 1000 * 60 * 60 * 24,\r\n        filter.dayRange[1] * 1000 * 60 * 60 * 24,\r\n      ];\r\n      placesChanges = profile.rankingHistory.filter(\r\n        item => item.date >= dayRangeMs[0] && item.date <= dayRangeMs[1]\r\n      );\r\n      ratingChanges = profile.ratingHistory.filter(\r\n        item => item.date >= dayRangeMs[0] && item.date <= dayRangeMs[1]\r\n      );\r\n      if (filter.dayRange[0] > minMaxRange[0]) {\r\n        placesChanges.unshift({ ..._.first(placesChanges), date: dayRangeMs[0] });\r\n        ratingChanges.unshift({ ..._.first(ratingChanges), date: dayRangeMs[0] });\r\n      }\r\n      if (filter.dayRange[1] < minMaxRange[1]) {\r\n        placesChanges.push({ ..._.last(placesChanges), date: dayRangeMs[1] });\r\n        ratingChanges.push({ ..._.last(ratingChanges), date: dayRangeMs[1] });\r\n      }\r\n    } else {\r\n      placesChanges = profile.rankingHistory;\r\n      ratingChanges = profile.ratingHistory.filter(\r\n        item => item.date >= firstTick && item.date <= lastTick\r\n      );\r\n    }\r\n    const rankingIndex = _.findIndex({ id }, ranking);\r\n    return {\r\n      ...profile,\r\n      minMaxRange,\r\n      levelsDistribution,\r\n      gradesDistribution,\r\n      placesChanges,\r\n      ratingChanges,\r\n      player: {\r\n        ..._.find({ id }, players),\r\n        rank: rankingIndex + 1,\r\n        ranking: ranking[rankingIndex],\r\n      },\r\n    };\r\n  }\r\n);\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    profile: profileSelector(state, props),\r\n    filter: state.profiles.filter,\r\n    error: state.top.error,\r\n    isLoading: state.top.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopScores,\r\n  setProfilesFilter,\r\n  resetProfilesFilter,\r\n};\r\n\r\nclass Profile extends Component {\r\n  static propTypes = {\r\n    profile: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    profile: {},\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetProfilesFilter();\r\n  }\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchTopScores();\r\n  };\r\n\r\n  onChangeDayRange = range => {\r\n    const { filter } = this.props;\r\n    this.props.setProfilesFilter({\r\n      ...filter,\r\n      dayRange: range,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, profile, error, filter } = this.props;\r\n\r\n    if (_.isEmpty(profile)) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"profile-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <div className=\"beta\">страница в бета-версии</div>\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"btn btn-sm btn-dark btn-icon\"\r\n              onClick={this.onRefresh}\r\n            >\r\n              <FaSearch /> обновить\r\n            </button>\r\n          </div>\r\n          <div className=\"profile\">\r\n            <div className=\"profile-header\">\r\n              <div className=\"profile-name text-with-header\">\r\n                <div className=\"text-header\">игрок</div>\r\n                <div>{profile.player.nickname}</div>\r\n              </div>\r\n              <div className=\"text-with-header\">\r\n                <div className=\"text-header\">ранк</div>\r\n                <div>#{profile.player.rank}</div>\r\n              </div>\r\n              <div className=\"text-with-header\">\r\n                <div className=\"text-header\">эло</div>\r\n                <div>{profile.player.ranking.rating}</div>\r\n              </div>\r\n              <div className=\"text-with-header\">\r\n                <div className=\"text-header\">последняя игра</div>\r\n                <div>{getTimeAgo(profile.player.ranking.lastBattleDate)}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"profile-header\">чарты</div>\r\n            <div className=\"levels-chart\">\r\n              <ResponsiveContainer>\r\n                <BarChart\r\n                  height={300}\r\n                  width={900}\r\n                  data={profile.levelsDistribution}\r\n                  stackOffset=\"sign\"\r\n                  margin={{ top: 5, bottom: 5, right: 15, left: 5 }}\r\n                >\r\n                  <Tooltip\r\n                    isAnimationActive={false}\r\n                    content={({ active, payload, label }) => {\r\n                      if (!payload || !payload[0]) {\r\n                        return null;\r\n                      }\r\n                      return (\r\n                        <div className=\"history-tooltip\">\r\n                          <div>Level: {payload[0].payload.x}</div>\r\n                          <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n                            Single: {Math.abs(payload[1].value)}\r\n                          </div>\r\n                          <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n                            Double: {Math.abs(payload[0].value)}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    }}\r\n                  />\r\n                  <XAxis dataKey=\"x\" />\r\n                  <YAxis tickFormatter={Math.abs} />\r\n                  <Tooltip />\r\n                  <ReferenceLine y={0} stroke=\"#555\" />\r\n                  <Legend />\r\n                  <Bar dataKey=\"D\" fill=\"#169c16\" stackId=\"stack\" />\r\n                  <Bar dataKey=\"S\" fill=\"#af2928\" stackId=\"stack\" />\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n            <div className=\"profile-header\">оценки</div>\r\n            <div className=\"levels-chart\">\r\n              <ResponsiveContainer>\r\n                <BarChart\r\n                  height={300}\r\n                  width={900}\r\n                  data={profile.gradesDistribution}\r\n                  margin={{ top: 5, bottom: 5, right: 15, left: 65 }}\r\n                >\r\n                  <Tooltip\r\n                    isAnimationActive={false}\r\n                    content={({ active, payload, label }) => {\r\n                      if (!payload || !payload[0]) {\r\n                        return null;\r\n                      }\r\n                      return (\r\n                        <div className=\"history-tooltip\">\r\n                          <div>Level: {payload[0].payload.x}</div>\r\n                          {_.reverse(_.filter(item => item.value > 0, payload)).map(item => (\r\n                            <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                              {item.name}: {payload[0].payload.gradesValues[item.name]}\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      );\r\n                    }}\r\n                  />\r\n                  <XAxis dataKey=\"x\" />\r\n                  <YAxis domain={[0, 100]} hide />\r\n                  <Legend />\r\n                  <Bar dataKey=\"F\" fill=\"#774949\" stackId=\"stack\" />\r\n                  <Bar dataKey=\"D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n                  <Bar dataKey=\"C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n                  <Bar dataKey=\"B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n                  <Bar dataKey=\"A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n                  <Bar dataKey=\"A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n                  <Bar dataKey=\"S\" fill=\"#b19500\" stackId=\"stack\" />\r\n                  <Bar dataKey=\"SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n                  <Bar dataKey=\"SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n            <div className=\"history-chart\">\r\n              <ResponsiveContainer>\r\n                <LineChart\r\n                  height={300}\r\n                  width={800}\r\n                  data={profile.placesChanges}\r\n                  margin={{ top: 5, bottom: 5, right: 15, left: 5 }}\r\n                >\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis\r\n                    dataKey=\"date\"\r\n                    type=\"number\"\r\n                    domain={['dataMin', 'dataMax']}\r\n                    tickFormatter={value => new Date(value).toLocaleDateString()}\r\n                  />\r\n                  <YAxis\r\n                    allowDecimals={false}\r\n                    domain={[1, dataMax => (dataMax < 3 ? dataMax + 2 : dataMax + 1)]}\r\n                    interval={0}\r\n                    reversed\r\n                  />\r\n                  <Tooltip\r\n                    isAnimationActive={false}\r\n                    content={({ active, payload, label }) => {\r\n                      if (!payload || !payload[0]) {\r\n                        return null;\r\n                      }\r\n                      return (\r\n                        <div className=\"history-tooltip\">\r\n                          <div>{new Date(payload[0].payload.date).toLocaleDateString()}</div>\r\n                          {payload && payload[0] && <div>Place: #{payload[0].value}</div>}\r\n                        </div>\r\n                      );\r\n                    }}\r\n                  />\r\n                  <Line\r\n                    isAnimationActive={false}\r\n                    type=\"stepAfter\"\r\n                    dataKey=\"place\"\r\n                    stroke=\"#8884d8\"\r\n                    strokeWidth={3}\r\n                    dot={false}\r\n                  />\r\n                </LineChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n            <div className=\"history-chart\">\r\n              <ResponsiveContainer>\r\n                <LineChart\r\n                  height={300}\r\n                  width={800}\r\n                  data={profile.ratingChanges}\r\n                  margin={{ top: 5, bottom: 5, right: 15, left: 5 }}\r\n                >\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis\r\n                    dataKey=\"date\"\r\n                    type=\"number\"\r\n                    domain={['dataMin', 'dataMax']}\r\n                    tickFormatter={value => new Date(value).toLocaleDateString()}\r\n                  />\r\n                  <YAxis\r\n                    allowDecimals={false}\r\n                    domain={['dataMin - 100', 'dataMax + 100']}\r\n                    tickFormatter={Math.round}\r\n                  />\r\n                  <ReferenceLine y={1000} stroke=\"white\" />\r\n                  <Tooltip\r\n                    isAnimationActive={false}\r\n                    content={({ active, payload, label }) => {\r\n                      if (!payload || !payload[0]) {\r\n                        return null;\r\n                      }\r\n                      return (\r\n                        <div className=\"history-tooltip\">\r\n                          <div>{new Date(payload[0].payload.date).toLocaleDateString()}</div>\r\n                          {payload && payload[0] && (\r\n                            <div>Rating: {Math.round(payload[0].value)}</div>\r\n                          )}\r\n                        </div>\r\n                      );\r\n                    }}\r\n                  />\r\n                  <Line\r\n                    type=\"monotone\"\r\n                    isAnimationActive={false}\r\n                    dataKey=\"rating\"\r\n                    stroke=\"#8884d8\"\r\n                    strokeWidth={3}\r\n                    dot={false}\r\n                  />\r\n                </LineChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n            <Range\r\n              range={filter.dayRange || profile.minMaxRange}\r\n              min={profile.minMaxRange[0]}\r\n              max={profile.minMaxRange[1]}\r\n              onChange={this.onChangeDayRange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Profile));\r\n","import React, { Component } from 'react';\r\n// import toBe from 'prop-types';\r\n// import classNames from 'classnames';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './top-bar.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nclass TopBar extends Component {\r\n  static propTypes = {};\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"top-bar\">\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <NavLink exact to={routes.leaderboard.path}>\r\n                leaderboard\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink exact to={routes.ranking.path}>\r\n                ranking\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopBar;\r\n","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport './App.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport Leaderboard from 'components/Leaderboard/Leaderboard';\r\nimport Ranking from 'components/Ranking/Ranking';\r\nimport Profile from 'components/Profile/Profile';\r\nimport TopBar from 'components/Shared/TopBar/TopBar';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <TopBar />\r\n        <Route exact path=\"/\" render={() => <Redirect to={routes.leaderboard.path} />} />\r\n        <Route path={routes.leaderboard.path} component={Leaderboard} />\r\n        <Route path={routes.ranking.path} component={Ranking} />\r\n        <Route path={routes.profile.path} component={Profile} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport top from 'reducers/top';\r\nimport ranking from 'reducers/ranking';\r\nimport profiles from 'reducers/profiles';\r\nimport presets from 'reducers/presets';\r\n\r\nconst rootReducer = combineReducers({\r\n  presets,\r\n  profiles,\r\n  ranking,\r\n  top,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__\r\n    ? compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__({\r\n          stateSanitizer: state => ({\r\n            ...state,\r\n          }),\r\n        })\r\n      )\r\n    : applyMiddleware(thunk)\r\n);\r\n","import 'promise-polyfill';\r\nimport 'whatwg-fetch';\r\nimport 'utils/polyfills';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport localForage from 'localforage';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './index.scss';\r\nimport App from 'components/App';\r\n\r\nimport { CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nimport { store } from 'reducers';\r\nimport { fetchTopScores, setFilter } from 'reducers/top';\r\n\r\nlocalForage\r\n  .getItem('filter')\r\n  .then(filter => {\r\n    if (filter) {\r\n      store.dispatch(\r\n        setFilter({\r\n          ...filter,\r\n          chartRange: filter.chartRange && {\r\n            ...filter.chartRange,\r\n            range: _.every(\r\n              r => r >= CHART_MIN_MAX[0] && r <= CHART_MIN_MAX[1],\r\n              filter.chartRange.range\r\n            )\r\n              ? filter.chartRange.range\r\n              : CHART_MIN_MAX,\r\n          },\r\n        })\r\n      );\r\n    }\r\n  })\r\n  .catch(error => console.error('Cannot get filter from local storage', error));\r\n\r\nstore.dispatch(fetchTopScores());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}