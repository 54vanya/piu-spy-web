{"version":3,"sources":["components/Shared/Overlay/Overlay.js","components/Shared/ToggleButton/ToggleButton.js","components/Shared/Input/Input.js","components/Shared/Toggle/Toggle.js","components/Shared/CollapsibleBar/index.js","utils/fetch.js","reducers/top.js","utils/colors.js","components/Rankings/Rankings.js","constants/backend.js","components/App.js","reducers/index.js","index.js"],"names":["POPPER_MODIFIERS","preventOverflow","enabled","padding","boundariesElement","PLACEMENT_ARROW_MAPPING","right","left","top","bottom","getArrowPlacement","placement","split","Overlay","state","isVisible","containerItemRef","React","createRef","renderPopper","bind","toggleOverlayVisibility","this","setState","event","target","closest","hideOverlay","ref","style","arrowProps","outOfBoundaries","scheduleUpdate","props","children","hideWhenOutOfBounds","data-placement","className","classNames","overlayClassName","overlayItem","Fragment","onClick","ReactDOM","createPortal","container","document","body","modifiers","referenceElement","current","PureComponent","defaultTypes","listensToClickOutside","ToggleButton","active","onToggle","text","Input","value","_","isNil","defaultValue","bindAll","prevProps","e","newValue","onChange","type","numericValue","Number","min","max","onBlur","omit","handleBlur","onInput","handleChange","Component","defaultProps","noop","Toggle","checked","id","uniqueId","htmlFor","CollapsibleBar","open","defaultOpen","title","fetchJson","a","url","fetch","response","status","json","data","Error","console","error","Promise","reject","LOADING","SUCCESS","ERROR","initialState","isLoading","transformBackendData","flow","get","values","map","item","song","track","chartLabel","chart_label","chartLevel","slice","chartType","mix","results","res","acc","Math","floor","perfects","greats","goods","misses","bads","nickname","date","gained","dateObject","Date","grade","isExactDate","exact_gain_date","score","perfect","great","good","bad","miss","combo","max_combo","mods","mods_list","isRank","rank_mode","accuracy","latestScoreDate","reduce","latest","colorsArray","TimeAgo","addLocale","ru","timeAgo","timeStyle","flavour","gradation","convenient","units","tooltipFormatterForBests","display","alignItems","flexDirection","toLocaleDateString","nowDate","SORT","sortingOptions","label","chartMinMax","getFilteredData","filter","names","players","namesOr","playersOr","namesNot","playersNot","sortingType","protagonist","excludeAntagonists","defaultSorting","orderBy","sortingFunctions","row","includes","protIndex","findIndex","protScore","enemies","take","uniqBy","remove","distanceFromProtagonist","sqrt","dist","enemy","compact","chartRange","items","rows","range","getOr","filterCharts","showRank","size","showOnlyRank","length","rowNames","every","name","some","matchSorter","keys","ChartFilter","filterValue","buttonText","t","step","r","renderTrack","onMouseDown","onTouchStart","height","width","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","justifyContent","boxShadow","playersSelector","createSelector","flatMap","uniq","sortBy","toLower","mapDispatchToProps","fetchTopScores","dispatch","TopScores","showItemsCount","setFilter","curry","localForage","setItem","onRefresh","getItem","then","catch","warn","placeholder","disabled","closeMenuOnSelect","classNamePrefix","isMulti","options","clearable","filteredData","canShowMore","visibleData","uniqueSelectedNames","message","renderSimpleSearch","renderFilters","renderSortings","isEmpty","chart","chartIndex","key","single","index","nameIndex","indexOf","empty","fontWeight","color","toFixed","numeral","format","src","process","alt","vj","content","tooltipClassName","strTimeAgo","dayDiff","moment","startOf","diff","getTimeAgo","connect","App","exact","path","component","Rankings","rootReducer","combineReducers","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","thunk","stateSanitizer","render","getElementById"],"mappings":"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","file":"static/js/main.52b7a739.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport toBe from 'prop-types';\r\nimport { Popper } from 'react-popper';\r\nimport classNames from 'classnames';\r\nimport listensToClickOutside from 'react-onclickoutside';\r\n\r\nimport './overlay.scss';\r\n\r\nconst POPPER_MODIFIERS = {\r\n  preventOverflow: {\r\n    enabled: true,\r\n    padding: 10,\r\n    boundariesElement: 'viewport',\r\n  },\r\n};\r\n\r\nconst PLACEMENT_ARROW_MAPPING = {\r\n  right: 'left',\r\n  left: 'right',\r\n  top: 'bottom',\r\n  bottom: 'top',\r\n};\r\n\r\nconst getArrowPlacement = placement => {\r\n  return placement && PLACEMENT_ARROW_MAPPING[placement.split('-')[0]];\r\n};\r\n\r\nclass Overlay extends React.PureComponent {\r\n  static propTypes = {\r\n    placement: toBe.string,\r\n    overlayItem: toBe.any,\r\n    hideWhenOutOfBounds: toBe.bool,\r\n  };\r\n\r\n  static defaultTypes = {\r\n    placement: 'bottom',\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isVisible: false,\r\n    };\r\n    this.containerItemRef = React.createRef();\r\n    this.renderPopper = this.renderPopper.bind(this);\r\n    this.toggleOverlayVisibility = this.toggleOverlayVisibility.bind(this);\r\n  }\r\n\r\n  hideOverlay() {\r\n    this.setState({\r\n      isVisible: false,\r\n    });\r\n  }\r\n\r\n  toggleOverlayVisibility() {\r\n    this.setState({\r\n      isVisible: !this.state.isVisible,\r\n    });\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    const preventHiding = event && event.target.closest('.inner-popper-overlay'); // prevent overlays from hiding when a modal is opened within overlay\r\n\r\n    if (!preventHiding) {\r\n      this.hideOverlay();\r\n    }\r\n  }\r\n\r\n  renderPopper({ ref, style, placement, arrowProps, scheduleUpdate, outOfBoundaries }) {\r\n    const { children, hideWhenOutOfBounds } = this.props;\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        data-placement={placement}\r\n        className={classNames(\r\n          'inner-popper-overlay',\r\n          `arrow-${getArrowPlacement(placement)}`,\r\n          this.props.overlayClassName,\r\n          { 'out-of-bounds': outOfBoundaries && hideWhenOutOfBounds }\r\n        )}\r\n      >\r\n        <div className=\"arrow-hider\">\r\n          <div className=\"arrow\" ref={arrowProps.ref} style={arrowProps.style} />\r\n        </div>\r\n        <div\r\n          className=\"inner-popper-content\"\r\n          // ref={ref => this.setupPopperContentRef(scheduleUpdate, ref)}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { placement, overlayItem } = this.props;\r\n    const { isVisible } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"overlay-item\"\r\n          ref={this.containerItemRef}\r\n          onClick={this.toggleOverlayVisibility}\r\n        >\r\n          {overlayItem}\r\n        </div>\r\n        {isVisible &&\r\n          ReactDOM.createPortal(\r\n            <Popper\r\n              container={document.body}\r\n              modifiers={POPPER_MODIFIERS}\r\n              placement={placement}\r\n              referenceElement={this.containerItemRef.current}\r\n            >\r\n              {this.renderPopper}\r\n            </Popper>,\r\n            document.body\r\n          )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default listensToClickOutside(Overlay);\r\n","import React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './toggle-button.scss';\r\n\r\nexport default class ToggleButton extends React.PureComponent {\r\n  static propTypes = {\r\n    text: toBe.string,\r\n    onToggle: toBe.func,\r\n    active: toBe.bool,\r\n  };\r\n\r\n  render() {\r\n    const { active, onToggle, text } = this.props;\r\n    return (\r\n      <div\r\n        className={classNames('toggle-button', { active: active })}\r\n        onClick={() => onToggle(!active)}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable react/no-deprecated */\r\n// imports from vendor deps\r\nimport React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\n\r\n// imports from styles\r\nexport default class Input extends React.Component {\r\n  static propTypes = {\r\n    value: toBe.any,\r\n    defaultValue: toBe.any,\r\n    onChange: toBe.func,\r\n    onBlur: toBe.func,\r\n    type: toBe.string,\r\n    className: toBe.string,\r\n    trimOnBlur: toBe.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    value: null,\r\n    type: 'text',\r\n    onChange: _.noop,\r\n    onBlur: _.noop,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: (!_.isNil(props.value) ? props.value : props.defaultValue) || '',\r\n    };\r\n    _.bindAll(['handleChange', 'handleBlur'], this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.value !== this.props.value) {\r\n      this.setState({ value: this.props.value });\r\n    }\r\n  }\r\n\r\n  handleChange(e) {\r\n    const newValue = e.target.value;\r\n    this.setState({ value: newValue }, () => this.props.onChange(newValue));\r\n  }\r\n\r\n  handleBlur(e) {\r\n    const { type } = this.props;\r\n    const { value } = this.state;\r\n    if (type === 'number') {\r\n      const numericValue = Number(value);\r\n      if (numericValue >= Number(e.target.min) && numericValue <= Number(e.target.max)) {\r\n        this.props.onBlur(numericValue, e);\r\n      } else {\r\n        this.setState({ value: this.props.value });\r\n        this.props.onBlur(this.props.value, e);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props;\r\n\r\n    // HACK: This component uses onInput instead of onChange\r\n    // because IE11 fails to call onChange events when you paste/cut using context menu (RMB)\r\n    // We're using onInput because it works fine, and because for text input\r\n    // there's no difference between how onChange and onInput work\r\n    return (\r\n      <input\r\n        {..._.omit(['defaultValue', 'onChange'], this.props)}\r\n        className={classNames(className, 'text-input')}\r\n        value={this.state.value}\r\n        onBlur={this.handleBlur}\r\n        onInput={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './toggle.scss';\r\n\r\n// imports from styles\r\nexport default class Toggle extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.id = _.uniqueId();\r\n  }\r\n\r\n  onChange = e => {\r\n    this.props.onChange(e.target.checked);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"toggle-checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle-checkbox-cb\"\r\n          id={this.id}\r\n          onChange={this.onChange}\r\n          checked={this.props.checked}\r\n        />\r\n        <label htmlFor={this.id} className=\"toggle\">\r\n          <span></span>\r\n        </label>\r\n        <label htmlFor={this.id} className=\"text-label\">\r\n          {this.props.children}\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\nimport './styles.scss';\r\n\r\nexport default class CollapsibleBar extends PureComponent {\r\n  static propTypes = {\r\n    className: toBe.string,\r\n    children: toBe.any,\r\n    title: toBe.any,\r\n    defaultOpen: toBe.bool,\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = { open: props.defaultOpen || false };\r\n  }\r\n\r\n  render() {\r\n    const { children, title, className } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classNames('collapsible-bar', className, { open })}>\r\n        <div className=\"header\" onClick={() => this.setState(state => ({ open: !state.open }))}>\r\n          <div className=\"collapse-button\">\r\n            <FaChevronRight />\r\n          </div>\r\n          <div className=\"title\">{title}</div>\r\n        </div>\r\n        {children && <div className=\"collapsible-children\">{children}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const fetchJson = async ({ url }) => {\r\n  try {\r\n    const response = await fetch(url);\r\n    if (response.status >= 200 && response.status < 300) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      throw Error('HTTP Status ' + response.status);\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n","import _ from 'lodash/fp';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TOP/LOADING`;\r\nconst SUCCESS = `TOP/SUCCESS`;\r\nconst ERROR = `TOP/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nconst transformBackendData = _.flow(\r\n  _.get('top'),\r\n  _.values,\r\n  _.map(item => ({\r\n    song: item.track,\r\n    chartLabel: item.chart_label,\r\n    chartLevel: item.chart_label.slice(1),\r\n    chartType: item.chart_label.slice(0, 1),\r\n    mix: item.mix,\r\n    results: _.map(res => {\r\n      const acc =\r\n        Math.floor(\r\n          ((res.perfects * 100 + res.greats * 60 + res.goods * 30 + res.misses * -20) /\r\n            (res.perfects + res.greats + res.goods + res.bads + res.misses)) *\r\n            100\r\n        ) / 100;\r\n      return {\r\n        nickname: res.nickname,\r\n        date: res.gained,\r\n        dateObject: new Date(res.gained),\r\n        grade: res.grade,\r\n        isExactDate: !!res.exact_gain_date,\r\n        score: res.score,\r\n        perfect: res.perfects,\r\n        great: res.greats,\r\n        good: res.goods,\r\n        bad: res.bads,\r\n        miss: res.misses,\r\n        combo: res.max_combo,\r\n        mods: res.mods_list,\r\n        isRank: !!res.rank_mode,\r\n        accuracy: !res.max_combo ? null : acc > 0 ? acc : 0,\r\n      };\r\n    }, item.results),\r\n  })),\r\n  _.map(song => ({\r\n    ...song,\r\n    latestScoreDate: song.results.reduce(\r\n      (latest, current) => (current.date > latest ? current.date : latest),\r\n      song.results[0].date\r\n    ),\r\n  })),\r\n  // _.orderBy(['latestScoreDate', 'song', 'chartLevel'], ['desc', 'asc', 'desc']),\r\n  data => ({ data })\r\n);\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        ...transformBackendData(action.data),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTopScores = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await fetchJson({\r\n        url: `${HOST}/top`,\r\n      });\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n","export const colorsArray = [\r\n  '#FF6633',\r\n  '#66991A',\r\n  '#6666FF',\r\n  '#E6B333',\r\n  '#CC80CC',\r\n  '#E64D66',\r\n  '#4DB3FF',\r\n  '#99E6E6',\r\n  '#99FF99',\r\n  '#FFFF99',\r\n  '#FFB399',\r\n  '#809900',\r\n  '#00B3E6',\r\n  '#3366E6',\r\n  '#999966',\r\n  '#B34D4D',\r\n  '#80B300',\r\n  '#E6B3B3',\r\n  '#6680B3',\r\n  '#66664D',\r\n  '#FF99E6',\r\n  '#CCFF1A',\r\n  '#FF1A66',\r\n  '#33FFCC',\r\n  '#4D8000',\r\n  '#B33300',\r\n  '#991AFF',\r\n  '#E666FF',\r\n  '#1AB399',\r\n  '#E666B3',\r\n  '#33991A',\r\n  '#4D8066',\r\n  '#CC9999',\r\n  '#B3B31A',\r\n  '#00E680',\r\n  '#E6331A',\r\n  '#809980',\r\n  '#E6FF80',\r\n  '#1AFF33',\r\n  '#999933',\r\n  '#FF3380',\r\n  '#CCCC00',\r\n  '#66E64D',\r\n  '#4D80CC',\r\n  '#9900B3',\r\n  '#4DB380',\r\n  '#FF4D4D',\r\n];\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport matchSorter from 'match-sorter';\r\nimport { Range, getTrackBackground } from 'react-range';\r\nimport _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport Select from 'react-select';\r\nimport classNames from 'classnames';\r\nimport numeral from 'numeral';\r\nimport localForage from 'localforage';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport moment from 'moment';\r\nimport { FaSyncAlt, FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport CollapsibleBar from 'components/Shared/CollapsibleBar';\r\n\r\nimport 'react-responsive-ui/style.css';\r\nimport './rankings.scss';\r\n\r\nimport { fetchTopScores } from 'reducers/top';\r\n\r\nimport { colorsArray } from 'utils/colors';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\n\r\nconst timeStyle = {\r\n  flavour: 'long',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nconst tooltipFormatter = date => date.toLocaleDateString();\r\nconst tooltipFormatterForBests = date => (\r\n  <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n    <div>точная дата взятия неизвестна</div>\r\n    <div>скор был записан с my best или machine best</div>\r\n    <div>дата записи: {date.toLocaleDateString()}</div>\r\n  </div>\r\n);\r\n\r\nconst nowDate = new Date();\r\nconst getTimeAgo = date => {\r\n  const strTimeAgo = timeAgo.format(date, timeStyle);\r\n  if (!strTimeAgo) {\r\n    const dayDiff = moment(nowDate)\r\n      .startOf('day')\r\n      .diff(moment(date).startOf('day'), 'days');\r\n    return dayDiff === 0 ? 'сегодня' : dayDiff === 1 ? 'вчера' : '';\r\n  } else {\r\n    return strTimeAgo;\r\n  }\r\n};\r\n\r\nconst SORT = {\r\n  DEFAULT: 'default',\r\n  PROTAGONIST: 'protagonist',\r\n};\r\nconst sortingOptions = [\r\n  {\r\n    label: 'новизне скоров',\r\n    value: SORT.DEFAULT,\r\n  },\r\n  {\r\n    label: 'отставанию от остальных',\r\n    value: SORT.PROTAGONIST,\r\n  },\r\n];\r\n\r\nconst chartMinMax = [1, 29];\r\nconst filterCharts = (filter, rows) => {\r\n  const range = _.getOr(chartMinMax, 'range', filter);\r\n  const type = _.getOr(null, 'type', filter);\r\n\r\n  const filtered = _.flow(\r\n    _.filter(row => {\r\n      return (\r\n        row.chartLevel >= range[0] &&\r\n        row.chartLevel <= range[1] &&\r\n        (!type || type === row.chartType)\r\n      );\r\n    })\r\n  )(rows);\r\n  return filtered;\r\n};\r\n\r\nconst getFilteredData = (data, filter) => {\r\n  const names = _.map('value', filter.players);\r\n  const namesOr = _.map('value', filter.playersOr);\r\n  const namesNot = _.map('value', filter.playersNot);\r\n  const sortingType = _.get('value', filter.sortingType);\r\n  const protagonist = _.get('value', filter.protagonist);\r\n  const excludeAntagonists = _.map('value', filter.excludeAntagonists);\r\n\r\n  const defaultSorting = [_.orderBy(['latestScoreDate'], ['desc'])];\r\n  const sortingFunctions =\r\n    {\r\n      [SORT.DEFAULT]: defaultSorting,\r\n      [SORT.PROTAGONIST]: [\r\n        _.filter(row => _.map('nickname', row.results).includes(protagonist)),\r\n        _.map(row => {\r\n          const protIndex = _.findIndex({ nickname: protagonist }, row.results);\r\n          const protScore = row.results[protIndex].score;\r\n          const enemies = _.flow([\r\n            _.take(protIndex),\r\n            _.uniqBy('nickname'),\r\n            _.remove(res => excludeAntagonists.includes(res.nickname)),\r\n          ])(row.results);\r\n          const distance = Math.sqrt(\r\n            _.reduce((dist, enemy) => dist + (enemy.score / protScore - 0.99) ** 2, 0, enemies)\r\n          );\r\n          return {\r\n            ...row,\r\n            distanceFromProtagonist: distance,\r\n          };\r\n        }),\r\n        _.orderBy(['distanceFromProtagonist'], ['desc']),\r\n      ],\r\n    }[sortingType] || defaultSorting;\r\n\r\n  return _.flow(\r\n    _.compact([\r\n      filter.chartRange && (items => filterCharts(filter.chartRange, items)),\r\n      !filter.showRank &&\r\n        _.flow(\r\n          _.map(row => ({ ...row, results: _.filter(res => !res.isRank, row.results) })),\r\n          _.filter(row => _.size(row.results))\r\n        ),\r\n      filter.showRank &&\r\n        filter.showOnlyRank &&\r\n        _.flow(\r\n          _.map(row => ({ ...row, results: _.filter(res => res.isRank, row.results) })),\r\n          _.filter(row => _.size(row.results))\r\n        ),\r\n      (names.length || namesOr.length || namesNot.length) &&\r\n        _.filter(row => {\r\n          const rowNames = _.map('nickname', row.results);\r\n          return (\r\n            (!names.length || _.every(name => rowNames.includes(name), names)) &&\r\n            (!namesOr.length || _.some(name => rowNames.includes(name), namesOr)) &&\r\n            (!namesNot.length || !_.some(name => rowNames.includes(name), namesNot))\r\n          );\r\n        }),\r\n      ...sortingFunctions,\r\n      filter.song && (items => matchSorter(items, filter.song, { keys: ['song'] })),\r\n    ])\r\n  )(data);\r\n};\r\n\r\nfunction ChartFilter({ filterValue, onChange }) {\r\n  const range = _.getOr(chartMinMax, 'range', filterValue);\r\n  const type = _.getOr(null, 'type', filterValue);\r\n  let buttonText = 'фильтр чартов';\r\n  if (filterValue) {\r\n    const t = type || '';\r\n    buttonText = range[0] === range[1] ? `${t}${range[0]}` : `${t}${range[0]} - ${t}${range[1]}`;\r\n    buttonText = 'чарты: ' + buttonText;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Overlay\r\n        overlayClassName=\"chart-range-overlay-outer\"\r\n        overlayItem={\r\n          <button className=\"filter-charts-button btn btn-sm btn-dark\">{buttonText}</button>\r\n        }\r\n      >\r\n        <div className=\"chart-range-overlay\">\r\n          <div className=\"buttons\">\r\n            <ToggleButton\r\n              text=\"S\"\r\n              active={!type || type === 'S'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  range,\r\n                  type: !active ? 'D' : null,\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"D\"\r\n              active={!type || type === 'D'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  range,\r\n                  type: !active ? 'S' : null,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <Range\r\n            values={range}\r\n            step={1}\r\n            min={chartMinMax[0]}\r\n            max={chartMinMax[1]}\r\n            onChange={r => onChange({ type, range: r })}\r\n            renderTrack={({ props, children }) => (\r\n              <div\r\n                onMouseDown={props.onMouseDown}\r\n                onTouchStart={props.onTouchStart}\r\n                style={{\r\n                  ...props.style,\r\n                  height: '10px',\r\n                  display: 'flex',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <div\r\n                  ref={props.ref}\r\n                  style={{\r\n                    height: '6px',\r\n                    width: '100%',\r\n                    borderRadius: '3px',\r\n                    background: getTrackBackground({\r\n                      values: range,\r\n                      colors: ['#ccc', '#337ab7', '#ccc'],\r\n                      min: chartMinMax[0],\r\n                      max: chartMinMax[1],\r\n                    }),\r\n                    alignSelf: 'center',\r\n                  }}\r\n                >\r\n                  {children}\r\n                </div>\r\n              </div>\r\n            )}\r\n            renderThumb={({ props, isDragged }) => (\r\n              <div\r\n                {...props}\r\n                style={{\r\n                  ...props.style,\r\n                  height: '12px',\r\n                  width: '12px',\r\n                  borderRadius: '6px',\r\n                  backgroundColor: '#FFF',\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  boxShadow: '0px 2px 3px #AAA',\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    height: '6px',\r\n                    width: '6px',\r\n                    borderRadius: '3px',\r\n                    backgroundColor: isDragged ? '#337ab7' : '#CCC',\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n          />\r\n          <div className=\"inputs\">\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  type,\r\n                  range: [Math.max(range[0] - 1, chartMinMax[0]), range[1]],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={chartMinMax[0]}\r\n              max={Math.min(chartMinMax[1], range[1])}\r\n              value={range[0]}\r\n              onBlur={value => {\r\n                onChange({ type, range: [value, range[1]] });\r\n              }}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  type,\r\n                  range: [Math.min(range[0] + 1, chartMinMax[1]), range[1]],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  type,\r\n                  range: [range[0], Math.max(range[1] - 1, chartMinMax[0])],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={Math.max(chartMinMax[0], range[0])}\r\n              max={chartMinMax[1]}\r\n              value={range[1]}\r\n              onBlur={value => onChange({ type, range: [range[0], value] })}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  type,\r\n                  range: [range[0], Math.min(range[1] + 1, chartMinMax[1])],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Overlay>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst playersSelector = createSelector(\r\n  state => state.top.data,\r\n  _.flow(\r\n    _.flatMap(_.get('results')),\r\n    _.map('nickname'),\r\n    _.uniq,\r\n    _.sortBy(_.toLower),\r\n    _.map(name => ({ label: name, value: name }))\r\n  )\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    players: playersSelector(state),\r\n    data: state.top.data,\r\n    error: state.top.error,\r\n    isLoading: state.top.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopScores,\r\n};\r\n\r\nclass TopScores extends Component {\r\n  static propTypes = {\r\n    match: toBe.object,\r\n    data: toBe.array,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  state = { filter: { showRank: true }, showItemsCount: 20 };\r\n\r\n  componentDidMount() {\r\n    const { isLoading } = this.props;\r\n    if (!isLoading) {\r\n      this.props.fetchTopScores();\r\n    }\r\n    localForage\r\n      .getItem('filter')\r\n      .then(filter => filter && this.setState({ filter }))\r\n      .catch(error => console.warn('Cannot get filter from local storage', error));\r\n  }\r\n\r\n  setFilter = _.curry((name, value) => {\r\n    this.setState(\r\n      state => ({ filter: { ...state.filter, [name]: value } }),\r\n      () => {\r\n        localForage.setItem('filter', this.state.filter);\r\n      }\r\n    );\r\n  });\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    if (!isLoading) {\r\n      this.props.fetchTopScores();\r\n    }\r\n  };\r\n\r\n  renderSimpleSearch() {\r\n    const { isLoading } = this.props;\r\n    return (\r\n      <div className=\"simple-search\">\r\n        <div className=\"song-name _margin-right\">\r\n          <Input\r\n            value={this.state.filter.song}\r\n            placeholder=\"название песни...\"\r\n            className=\"form-control\"\r\n            onChange={this.setFilter('song')}\r\n          />\r\n        </div>\r\n        <div className=\"chart-range _margin-right\">\r\n          <ChartFilter\r\n            filterValue={this.state.filter.chartRange}\r\n            onChange={this.setFilter('chartRange')}\r\n          />\r\n        </div>\r\n        <div className=\"_flex-fill\" />\r\n        <div>\r\n          <button\r\n            disabled={isLoading}\r\n            className=\"btn btn-sm btn-dark btn-icon\"\r\n            onClick={this.onRefresh}\r\n          >\r\n            <FaSyncAlt /> обновить\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFilters() {\r\n    const { players } = this.props;\r\n    const { filter } = this.state;\r\n\r\n    return (\r\n      <div className=\"filters\">\r\n        <div className=\"people-filters\">\r\n          <label className=\"label\">показывать чарты, которые сыграл:</label>\r\n          <div className=\"players-block\">\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">каждый из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'players', filter)}\r\n                onChange={this.setFilter('players')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и хоть один из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersOr', filter)}\r\n                onChange={this.setFilter('playersOr')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и никто из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersNot', filter)}\r\n                onChange={this.setFilter('playersNot')}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Toggle\r\n            checked={_.getOr(false, 'showRank', filter)}\r\n            onChange={this.setFilter('showRank')}\r\n          >\r\n            показывать скоры на ранке\r\n          </Toggle>\r\n        </div>\r\n        {_.get('showRank', filter) && (\r\n          <div>\r\n            <Toggle\r\n              checked={_.getOr(false, 'showOnlyRank', filter)}\r\n              onChange={this.setFilter('showOnlyRank')}\r\n            >\r\n              <strong>только</strong> на ранке\r\n            </Toggle>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSortings() {\r\n    const { filter } = this.state;\r\n    const { players } = this.props;\r\n    return (\r\n      <div className=\"sortings\">\r\n        <div>\r\n          <label className=\"label\">сортировать по</label>\r\n          <Select\r\n            placeholder=\"выберите сортировку\"\r\n            className=\"select\"\r\n            classNamePrefix=\"select\"\r\n            clearable={false}\r\n            options={sortingOptions}\r\n            value={_.getOr(sortingOptions[0], 'sortingType', filter)}\r\n            onChange={this.setFilter('sortingType')}\r\n          />\r\n        </div>\r\n        {_.get('sortingType.value', filter) === SORT.PROTAGONIST && (\r\n          <>\r\n            <div>\r\n              <label className=\"label\">протагонист (кого сравнивать с остальными):</label>\r\n              <Select\r\n                className={classNames('select players', {\r\n                  'red-border': !_.get('protagonist', filter),\r\n                })}\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                options={players}\r\n                value={_.getOr(null, 'protagonist', filter)}\r\n                onChange={this.setFilter('protagonist')}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"label\">не учитывать в сравнении:</label>\r\n              <Select\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                options={players}\r\n                isMulti\r\n                value={_.getOr([], 'excludeAntagonists', filter)}\r\n                onChange={this.setFilter('excludeAntagonists')}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, data, error } = this.props;\r\n    const { showItemsCount, filter } = this.state;\r\n\r\n    const filteredData = getFilteredData(data, filter);\r\n\r\n    const canShowMore = filteredData.length > showItemsCount;\r\n    const visibleData = _.slice(0, showItemsCount, filteredData);\r\n\r\n    const uniqueSelectedNames = _.slice(\r\n      0,\r\n      colorsArray.length,\r\n      _.uniq(\r\n        _.compact([\r\n          _.get('sortingType.value', filter) === SORT.PROTAGONIST &&\r\n            _.get('protagonist.value', filter),\r\n          ..._.map('value', filter.players),\r\n          ..._.map('value', filter.playersOr),\r\n        ])\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div className=\"rankings\">\r\n        <header>leaderboard</header>\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"search-block\">\r\n            {this.renderSimpleSearch()}\r\n            <CollapsibleBar title=\"фильтры\">{this.renderFilters()}</CollapsibleBar>\r\n            <CollapsibleBar title=\"сортировка\">{this.renderSortings()}</CollapsibleBar>\r\n          </div>\r\n          {isLoading && 'Loading...'}\r\n          <div className=\"top-list\">\r\n            {_.isEmpty(filteredData) && !isLoading && 'ничего не найдено'}\r\n            {visibleData.map((chart, chartIndex) => {\r\n              return (\r\n                <div className=\"song-block\" key={chart.song + chart.chartLabel}>\r\n                  <div className=\"song-name\">\r\n                    <div\r\n                      className={classNames('chart-name', {\r\n                        single: chart.chartType === 'S',\r\n                      })}\r\n                    >\r\n                      {chart.chartType}\r\n                      <span className=\"chart-separator\" />\r\n                      {chart.chartLevel}\r\n                    </div>\r\n                    <div>{chart.song}</div>\r\n                  </div>\r\n                  <div className=\"charts\">\r\n                    <div className=\"chart\">\r\n                      <div className=\"results\">\r\n                        <table>\r\n                          {chartIndex === 0 && (\r\n                            <thead>\r\n                              <tr>\r\n                                <th className=\"place\"></th>\r\n                                <th className=\"nickname\"></th>\r\n                                <th className=\"score\">score</th>\r\n                                <th className=\"grade\"></th>\r\n                                <th className=\"number\">miss</th>\r\n                                <th className=\"number\">bad</th>\r\n                                <th className=\"number\">good</th>\r\n                                <th className=\"number\">great</th>\r\n                                <th className=\"number\">perfect</th>\r\n                                <th className=\"combo\">combo</th>\r\n                                <th className=\"rank\"></th>\r\n                                <th className=\"accuracy\">accuracy</th>\r\n                                <th className=\"date\"></th>\r\n                              </tr>\r\n                            </thead>\r\n                          )}\r\n                          <tbody>\r\n                            {chart.results.map((res, index) => {\r\n                              const nameIndex = uniqueSelectedNames.indexOf(res.nickname);\r\n                              return (\r\n                                <tr\r\n                                  key={res.score + res.nickname}\r\n                                  className={classNames({ empty: !res.isExactDate })}\r\n                                >\r\n                                  <td className=\"place\">#{index + 1}</td>\r\n                                  <td\r\n                                    className=\"nickname\"\r\n                                    style={\r\n                                      nameIndex > -1\r\n                                        ? { fontWeight: 'bold', color: colorsArray[nameIndex] }\r\n                                        : {}\r\n                                    }\r\n                                  >\r\n                                    {res.nickname}\r\n                                    {_.get('sortingType.value', filter) === SORT.PROTAGONIST &&\r\n                                      res.nickname === _.get('protagonist.value', filter) &&\r\n                                      chart.distanceFromProtagonist > 0 && (\r\n                                        <span className=\"protagonist-diff\">\r\n                                          {' '}\r\n                                          -{(chart.distanceFromProtagonist * 100).toFixed(1)}%\r\n                                        </span>\r\n                                      )}\r\n                                  </td>\r\n                                  <td className=\"score\">{numeral(res.score).format('0,0')}</td>\r\n                                  <td className=\"grade\">\r\n                                    <div className=\"img-holder\">\r\n                                      {res.grade && res.grade !== '?' && (\r\n                                        <img\r\n                                          src={`${process.env.PUBLIC_URL}/grades/${res.grade}.png`}\r\n                                          alt={res.grade}\r\n                                        />\r\n                                      )}\r\n                                      {res.grade === '?' && null}\r\n                                    </div>\r\n                                  </td>\r\n                                  <td className=\"number miss\">{res.miss}</td>\r\n                                  <td className=\"number bad\">{res.bad}</td>\r\n                                  <td className=\"number good\">{res.good}</td>\r\n                                  <td className=\"number great\">{res.great}</td>\r\n                                  <td className=\"number perfect\">{res.perfect}</td>\r\n                                  <td className=\"combo\">\r\n                                    {res.combo}\r\n                                    {res.combo ? 'x' : ''}\r\n                                  </td>\r\n                                  <td className={classNames('rank', { vj: res.isRank })}>\r\n                                    {res.isRank &&\r\n                                      (res.isExactDate ? (\r\n                                        'VJ'\r\n                                      ) : (\r\n                                        <Tooltip\r\n                                          content={\r\n                                            <>\r\n                                              <div>\r\n                                                наличие ранка на этом результате было угадано,\r\n                                                основываясь на скоре\r\n                                              </div>\r\n                                            </>\r\n                                          }\r\n                                          tooltipClassName=\"timeago-tooltip\"\r\n                                        >\r\n                                          VJ?\r\n                                        </Tooltip>\r\n                                      ))}\r\n                                  </td>\r\n                                  <td className=\"accuracy\">\r\n                                    {res.accuracy}\r\n                                    {res.accuracy ? '%' : ''}\r\n                                  </td>\r\n                                  <td\r\n                                    className={classNames('date', {\r\n                                      latest: res.date === chart.latestScoreDate,\r\n                                    })}\r\n                                  >\r\n                                    <Tooltip\r\n                                      content={\r\n                                        res.isExactDate\r\n                                          ? tooltipFormatter(res.dateObject)\r\n                                          : tooltipFormatterForBests(res.dateObject)\r\n                                      }\r\n                                      tooltipClassName=\"timeago-tooltip\"\r\n                                    >\r\n                                      {getTimeAgo(res.dateObject)}\r\n                                      {res.isExactDate ? '' : '?'}\r\n                                    </Tooltip>\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n            {!isLoading && canShowMore && (\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() =>\r\n                  this.setState(state => ({ showItemsCount: state.showItemsCount + 10 }))\r\n                }\r\n              >\r\n                show more...\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TopScores);\r\n","export const HOST = 'https://vps720616.ovh.net:5000';\r\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport './App.scss';\n\nimport Rankings from 'components/Rankings/Rankings';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Route exact path=\"/\" component={Rankings} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport top from 'reducers/top';\r\n\r\nconst rootReducer = combineReducers({\r\n  top,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__\r\n    ? compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__({\r\n          stateSanitizer: state => ({\r\n            ...state,\r\n          }),\r\n        })\r\n      )\r\n    : applyMiddleware(thunk)\r\n);\r\n","// import 'promise-polyfill';\n// import 'whatwg-fetch';\n// import 'utils/polyfills';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.scss';\nimport App from 'components/App';\nimport { store } from 'reducers';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}