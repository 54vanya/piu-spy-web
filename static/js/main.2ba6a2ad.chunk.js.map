{"version":3,"sources":["webpack:///./src/utils/workers/profilesPostProcess.js?f05c","utils/polyfills.js","constants/routes.js","constants/leaderboard.js","components/Shared/Loader/index.js","reducers/user/resetAction.js","utils/fetch.js","constants/backend.js","reducers/trackStats/mostPlayed.js","reducers/trackStats/mostPlayedMonth.js","reducers/trackStats/leastPlayed.js","utils/leaderboards.js","utils/date.js","components/SongsTop/SongsTop.js","components/Shared/Overlay/Overlay.js","components/Shared/ToggleButton/ToggleButton.js","components/Shared/Input/Input.js","components/Shared/Toggle/Toggle.js","components/Shared/CollapsibleBar/index.js","components/Shared/Range/index.js","components/Leaderboard/ChartFilter.js","utils/expRanks.js","utils/exp.js","utils/achievements.js","utils/score.js","utils/workers/profilesPostProcess.js","constants/env.js","reducers/results.js","reducers/presets.js","components/Leaderboard/PresetsControl.js","utils/colors.js","reducers/selectors.js","components/Leaderboard/Leaderboard.js","components/Ranking/RankingList.js","components/Ranking/RankingFaq.js","components/Ranking/Ranking.js","components/Profile/MostPlayed.js","components/Profile/ExpFaq.js","reducers/profiles.js","utils/profiles.js","components/Profile/Profile.js","components/ProfileCompare/ProfileCompare.js","reducers/user/index.js","reducers/login.js","components/Shared/TopBar/TopBar.js","components/LoginScreen/LoginScreen.js","components/SocketTracker/helpers.js","reducers/topPerSong.js","reducers/tracklist.js","components/SocketTracker/SocketTracker.js","components/App.js","reducers/trackStats/index.js","reducers/index.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","Number","isNaN","value","Math","sign","x","Array","prototype","findIndex","Object","defineProperty","predicate","this","TypeError","o","len","length","thisArg","arguments","k","kValue","call","configurable","writable","routes","leaderboard","path","songs","ranking","faq","profile","getPath","params","id","compare","compareToId","SORT","DEFAULT","PROTAGONIST","RANK_ASC","RANK_DESC","PP_ASC","PP_DESC","NEW_SCORES_PLAYER","EASIEST_SONGS","HARDEST_SONGS","CHART_MIN_MAX","DURATION","STD","SHORT","REMIX","FULL","DURATION_DEFAULT","_","values","Loader","className","width","height","viewBox","xmlns","fill","cx","cy","r","attributeName","from","to","begin","dur","calcMode","repeatCount","fillOpacity","RESET","resetUser","type","fetchJson","url","request","method","postJson","body","JSON","stringify","headers","defaultHeaders","async","dispatch","getState","session","cookies","get","response","fetch","credentials","status","json","error","isObject","isString","Error","message","Promise","reject","HOST","SOCKET_SERVER_IP","LOADING","SUCCESS","ERROR","initialState","isLoading","data","TimeAgo","addLocale","ru","timeAgo","timeStyle","flavour","gradation","convenient","units","tooltipFormatter","result","isExactDate","dateObject","toLocaleDateString","resultType","undefined","isMyBest","isMachineBest","style","display","alignItems","flexDirection","getTimeAgo","date","dayDiff","moment","startOf","diff","hour","format","parseDate","textDate","toDate","Date","TopList","fetchList","title","renderRightSide","useState","setData","setLoading","getRightSide","item","countplay","useEffect","then","success","catch","map","index","key","classNames","best","full_name","leastPlayedRightSide","last_play","connect","fetchMostPlayed","fetchMostPlayedMonth","fetchLeastPlayed","POPPER_MODIFIERS","preventOverflow","enabled","padding","boundariesElement","PLACEMENT_ARROW_MAPPING","right","left","top","bottom","getArrowPlacement","placement","split","Overlay","state","isVisible","containerItemRef","React","createRef","renderPopper","bind","toggleOverlayVisibility","setState","event","target","closest","hideOverlay","ref","arrowProps","outOfBoundaries","scheduleUpdate","props","children","hideWhenOutOfBounds","data-placement","overlayClassName","overlayItem","Fragment","onClick","ReactDOM","createPortal","container","document","modifiers","referenceElement","current","PureComponent","defaultTypes","listensToClickOutside","ToggleButton","active","onToggle","text","Input","isNil","defaultValue","bindAll","prevProps","e","newValue","onChange","numericValue","min","max","onBlur","handleBlur","omit","onKeyPress","handleKeyPress","onInput","handleChange","noop","Component","defaultProps","Toggle","checked","uniqueId","htmlFor","CollapsibleBar","open","defaultOpen","Range","range","step","renderTrack","onMouseDown","onTouchStart","position","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","justifyContent","boxShadow","ChartFilter","filterValue","onChangeEx","getOr","duration","buttonText","t","isEqual","isEmpty","newMin","newMax","includes","without","ranks","threshold","iconName","color","gradeValue","F","D","C","B","A","S","SS","SSS","getExp","chart","isBestGradeOnChart","chartType","chartLevel","grade","getRankImg","rank","src","process","alt","achievements","icon","GiRank1","description","resultFunction","progress","combo","GiRank2","GiRank3","GiSmokingFinger","playedSongs","songsToPlay","song","uniq","GiRetroController","GiLoveSong","Улитка","GiSnail","charts","some","songToPlay","chartLabel","GiPodiumSecond","miss","bad","GiLifeBar","GiWoodenPegleg","good","great","initialAchievementState","getScoreWithoutBonus","score","postProcessProfiles","profiles","tracklist","mapValues","neededGrades","expRank","findLast","exp","expRanks","expRankNext","find","double","single","gradeIncrementMap","accuracyByLevel","keys","resultsByLevel","forEach","level","count","sum","average","res","isRank","accuracy","thisGrade","thisPlayerId","playerId","otherResults","results","filter","sort","a","b","indexOf","gradeIncArray","gradeInc","l","g","prog","incrementLevel","points","flow","toPairs","toNumber","accuracyPoints","number","minimumNumber","totalCharts","round","sqrt","getMinimumNumber","bonusCoefficientNumber","bonus","getBonusForLevel","achievementBonus","countAcc","sumAccuracy","interpolateDifficulties","sharedCharts","processedProfiles","sums","accData","accuracyPointsInterpolated","i","regression","predict","equation","f","calculated","yx","push","interpolatedPoint","pair","avgAccuracy","interpolatedDifficulty","weight","identity","reduce","acc","diffSum","weightSum","averageDifficulty","getProcessedProfiles","battles","debug","resultInfo","chartId","chartResults","maxPP","maxScore","K","scoreRaw","pp","ppPotential","ppRatio","ppFixed","toFixed","scores","pp_","s","rating","processPP","dictScoreInfo","logText","dictChartElo","getDictChartEloId","enemyScore","sharedChartId","dictRatingDiff","getDictRatingDiffId","p1","p2","scoreMultiplier","scoreInfo","enemyScoreInfo","startingRating","battleCount","r1","r2","R1","R2","E1","E2","S1","S2","kRating1","kRating2","maxK1","maxK2","kLevel1","kLevel2","kLevel","kMinimizer","startsWith","K1","K2","dr1","dr2","baseEloId1","baseEloId2","baseEloP1","baseEloP2","ratingDiffId1","ratingDiffId2","ratingDiff","ratingDiffLast","floor","playersSorted","orderBy","battleDate","player","lastPlace","rankingHistory","place","getTime","p1LastRating","last","ratingHistory","p2LastRating","toInteger","ratingRaw","now","processBattles","localStorage","window","debugOn","setItem","debugOff","removeItem","DEBUG","getItem","SET_FILTER","RESET_FILTER","RANKING_CHANGE_SET","PROFILES_UPDATE","defaultFilter","showRank","showRankAndNorank","isLoadingRanking","players","gradeComparator","guessGrade","misses","bads","goods","greats","mapResult","recognition_notes","isUnknownPlayer","arcade_name","isIntermediateResult","shared_chart","nickname","nicknameArcade","gained","exact_gain_date","rank_mode","_r","originalChartMix","original_mix","originalChartLabel","original_label","originalScore","original_score","scoreIncrease","score_increase","calories","perfect","perfects","max_combo","mods","mods_list","isHJ","maxTotalSteps","infos","fixableIndex","absentNumbersCount","localStepSum","isNumber","tryFixIncompleteResult","accRaw","accuracyRaw","getMaxRawScore","initializeProfile","fromPairs","nameArcade","resultsByGrade","lastResultDate","grades","lastBattleDate","achName","getProfileInfoFromResult","replace","convert","cap","achState","fetchResults","processResultsData","console","log","shared_charts","mappedResults","getTopResultId","getBestGradeResultId","topResults","bestGradeResults","resRaw","sharedChart","label","toUpper","chart_label","match","track_name","max_total_steps","totalResultsCount","chartTop","topResultId","currentTopResult","oldScoreIndex","splice","newScoreIndex","sortedLastIndexBy","latestScoreDate","enemyResult","bestGradeResultId","currentBestGradeRes","maxScoreCandidate","processData","originalData","input","promise","worker","WorkerProfilesProcessing","profilesProcessing","output","q","calculateRankingChanges","terminate","setFilter","getListOfNames","getMapOfRatings","all","localForage","lastChangedRanking","lastChangedRankingPoints","lastFetchedRanking","listNow","listLastFetched","listLastChanged","mapPointsNow","mapPointsLastFetched","rankingsPointsMap","listPrev","warn","SELECT_PRESET","LOAD_PRESETS","LOADING_START","LOADING_END","presets","currentPreset","itemToOption","reloadPresets","startLoading","endLoading","selectPreset","openPreset","noPresetsMessage","mapDispatchToProps","loadPresets","savePreset","newPreset","confirm","withoutOldPreset","remove","newPresets","deletePreset","PresetsControl","onChangeSelection","selected","onRewritePreset","onSavePreset","isAddingNew","classNamePrefix","placeholder","options","noOptionsMessage","disabled","colorsArray","playersSelector","createSelector","user","isCurrentPlayer","sortBy","it","toLower","filteredDataSelector","names","namesOr","playersOr","namesNot","playersNot","sortingType","protagonist","excludeAntagonists","defaultSorting","newScoresProtagonistSorting","protagonistSorting","row","protIndex","protScore","enemies","take","uniqBy","distanceFromProtagonist","dist","enemy","getPpSorting","field","direction","info","Infinity","getEloSorting","getDiffSorting","chartInfo","sortingFunctions","compact","chartRange","items","rows","filterCharts","showOnlyRank","occuredNames","alreadyOccured","rowNames","every","size","matchSorter","trim","ANIMATION_DURATION","sortingOptions","resetFilter","Leaderboard","showItemsCount","chartOverrides","curry","onRefresh","onTypeSongName","debounce","onRedoLatestResult","throttle","overrides","drop","onUndoLatestResult","undoedResult","maxBy","undoedPlayerId","previousPlayerResult","newResults","latestScore","overrideChart","renderSimpleSearch","renderFilters","closeMenuOnSelect","isMulti","renderSortings","isClearable","render","filteredData","canShowMore","visibleData","slice","showProtagonistEloChange","showProtagonistPpChange","highlightProtagonist","protagonistName","uniqueSelectedNames","preset","chartOriginal","chartIndex","first","topPlace","occuredNicknames","isSecondOccurenceInResults","singlep","doublep","coop","href","queryString","search_query","rel","isActive","currentIndex","canUndo","enterAnimation","leaveAnimation","typeName","maintainContainerHeight","nameIndex","placeDifference","newIndex","prevScore","findLastIndex","inf","ratingInfoBlock","empty","latest","fontWeight","vj","hj","content","tooltipClassName","numeral","exact","getGradeImg","RankingList","playerIndex","change","prevRating","down","up","RankingFaq","rankingSelector","Ranking","component","withRouter","limit","setLimit","latestDate","ExpFaq","setProfilesFilter","resetProfilesFilter","cutRange","array","startIndex","endIndex","firstElement","lastElement","defaultGradesDistribution","defaultGradesWithLevelsDistribution","flatMap","profileSelectorCreator","idParamName","levelsDistribution","y","singlesLevels","doublesLevels","gradesData","update","gradesDistribution","groupBy","pick","gradesValues","gradesAndLevelsDistribution","groupedResults","counts","countBy","reduced","levelsData","lastTickRating","lastTickRanking","lastTick","firstTick","lastDay","endOf","minMaxRange","filterRange","dayRange","dayRangeMs","placesChanges","ratingChanges","MIN_GRAPH_HEIGHT","profileSelector","otherPlayersSelector","ind","Profile","isLevelGraphCombined","showFaq","onChangeDayRange","onShowFaq","onHideFaq","componentWillUnmount","renderRankingHistory","minHeight","aspect","margin","strokeDasharray","dataKey","domain","tickFormatter","allowDecimals","stroke","isAnimationActive","payload","strokeWidth","dot","renderPlaceHistory","dataMax","interval","reversed","renderGrades","ticks","stackId","renderGradesWithLevels","stackOffset","doubleItems","singleItems","abs","dataMin","offset","renderLevels","totalD","totalS","renderGradeBlock","obj","typeLetter","progr","minNumber","currentNumber","levelString","complete","zero","renderAchievement","achievement","Icon","renderProfile","otherPlayers","expProgress","history","ariaHideApp","isOpen","onRequestClose","ceil","currentRange","dateL","dateR","l1","l2","MostPlayed","BARS_MODES","SINGLE_TWO","SINGLE_FIVE","DOUBLE_TWO","DOUBLE_FIVE","BOTH_TWO","BOTH_FIVE","getCompareBars","mode","profile1Selector","profile2Selector","getCombinedData","memoize","rc1","rc2","allRC","rating2","rating1","sortedUniqBy","allPC","place2","place1","perLevelComparison","p1win","p1notPlayed","p2win","p2notPlayed","notPlayed","twoBars","p1index","p2index","perType","normalizeTwo","dataObj","totalPlayed","normalizeFive","total","chartLevels","ProfileCompare","compareBarsMode","rhMargin","rhXDomain","rhYDomain","rhXTickFormatter","rhTooltip","profile2","p1Name","p2Name","plcMargin","plcTooltip","isTwo","renderLegendItem","plcXDomain","plcXTicks","plcXFormatter","combinedData","renderPerLevelComparison","layout","profile1","fetchUser","login","googleResponse","token","tokenId","set","expires","loginACs","logout","isLoadingLogin","isLoadingUser","isClown","setClown","onGoogleResponse","clientId","onSuccess","onFailure","cookiePolicy","preprocessData","fullRes","stepSum","n","track","mix","resultInfoOverrides","numb","hasRankScore","fetchingParams","fetchTracklist","STATE_RESET_TIMEOUT","fetchTopPerSong","songName","leftLabel","rightLabel","song_name","join","processedData","appendNewResults","lastDate","start_date","appendedResults","currentResults","oldResult","old","mergedData","renderChartLabel","topPerSong","songTopData","setMessage","socketErrorMessage","setSocketErrorMessage","isSocketReady","setSocketReady","isAlive","setAlive","setLeftLabel","setRightLabel","leftPlayer","setLeftPlayer","rightPlayer","setRightPlayer","recognizedSongName","setRecognizedSongName","socketRef","useRef","timeoutResetTokenRef","leftChart","rightChart","chartsToShow","topPlayersList","leftProfile","rightProfile","minBy","p","lev","leftData","setLeftData","rightData","setRightData","restartTimeout","useCallback","clearTimeout","setTimeout","prevRatingRaw","prevExp","WebSocket","onerror","onopen","onmessage","parse","newSongName","resultsContainerRef","leftResultRef","rightResultRef","totalSize","clientWidth","h","clientHeight","scaleHH","offsetWidth","scaleHW","offsetHeight","scaleWH","scaleWW","transform","scaleW","scaleH","renderPlayer","isLeft","renderDeltaText","prevN","delta","closestPlayers","takenWidth","emptyWidth","diffWidth","renderExpLine","pl","interpDiff","REACT_APP_SOCKET","SocketTracker","SongsTop","combineReducers","mostPlayed","action","mostPlayedMonth","leastPlayed","rootReducer","hasPrevList","playerOriginal","trackStats","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","getElementById"],"mappings":"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SAAS1O,EAASI,MACnC4K,SAAU,SAAAD,GACRU,EAAS,CACP0C,SAAUpD,EAAM,uBACRoD,GADQ,CACEnO,EAASI,OACvBE,IAAEqO,QAAQ,CAAC3O,EAASI,MAAO+N,YClL1C,MAAMS,GAAQ,CACnB,CACEC,UAAW,EACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UCzIEC,GAAa,CACxBC,EAAG,GACHC,EAAG,GACH,KAAM,GACNC,EAAG,GACH,KAAM,GACNC,EAAG,GACH,KAAM,GACNC,EAAG,GACH,KAAM,EACNC,EAAG,IACHC,GAAI,IACJC,IAAK,KAGMC,GAAS,CAAC9K,EAAQ+K,KAC7B,IAAK/K,EAAOgL,mBACV,OAAO,EAET,GAAwB,SAApBD,EAAME,UACR,OAA2B,IAAnBF,EAAMG,YAAqBb,GAAWrK,EAAOmL,QAAU,IAAQ,EAGzE,OADaJ,EAAMG,YAAc,MAAQb,GAAWrK,EAAOmL,QAAU,IAAQ,GAIlEC,GAAaC,GACxBA,GACE,yBACEvP,UAAWuP,EAAKjB,MAChBkB,IAAG,UAAKC,IAAL,kBAAqCF,EAAKlB,UAC7CqB,IAAKH,EAAKnB,Y,aClBHuB,GAAe,CAC1B,qCAAa,CACXC,KAAMC,KACNC,YAAa,8KACbC,eAAgB,SAAC7L,EAAQ+K,EAAO/G,GAC9B,MAAO,CACL8H,SAA6B,MAAnB9H,EAAM8H,SAAmB,IAAM9L,EAAO+L,OAAS,IAAM,IAAM,KAI3E,sCAAc,CACZL,KAAMM,KACNJ,YAAa,+KACbC,eAAgB,SAAC7L,EAAQ+K,EAAO/G,GAC9B,MAAO,CACL8H,SAA6B,MAAnB9H,EAAM8H,SAAmB,IAAM9L,EAAO+L,OAAS,IAAO,IAAM,KAI5E,sCAAc,CACZL,KAAMO,KACNL,YAAa,+KACbC,eAAgB,SAAC7L,EAAQ+K,EAAO/G,GAC9B,MAAO,CACL8H,SAA6B,MAAnB9H,EAAM8H,SAAmB,IAAM9L,EAAO+L,OAAS,IAAO,IAAM,KAI5E,oGAAqB,CACnBL,KAAMQ,KACNN,YAAa,uGACbzM,aAAc,CACZ2M,SAAU,EACVK,YAAa,GACbC,YAAa,CAAC,iBAAkB,iBAAkB,mBAAoB,kBAExEP,eAAgB,SAAC7L,EAAQ+K,EAAO/G,GAC9B,IAAMmI,EAAcnI,EAAMoI,YAAYrC,SAASgB,EAAMsB,MACjD1Q,IAAE2Q,KAAF,uBAAWtI,EAAMmI,aAAjB,CAA8BpB,EAAMsB,QACpCrI,EAAMmI,YACV,MAAO,CACLA,cACAC,YAAapI,EAAMoI,YACnBN,SAAW,IAAMK,EAAY7S,OAAU0K,EAAMoI,YAAY9S,UAI/D,QAAS,CACPoS,KAAMa,KACNX,YAAa,wGACbzM,aAAc,CACZ2M,SAAU,EACVK,YAAa,GACbC,YAAa,CAAC,eAAgB,mBAAoB,yBAEpDP,eAAgB,SAAC7L,EAAQ+K,EAAO/G,GAC9B,IAAMmI,EAAcnI,EAAMoI,YAAYrC,SAASgB,EAAMsB,MACjD1Q,IAAE2Q,KAAF,uBAAWtI,EAAMmI,aAAjB,CAA8BpB,EAAMsB,QACpCrI,EAAMmI,YACV,MAAO,CACLA,cACAC,YAAapI,EAAMoI,YACnBN,SAAW,IAAMK,EAAY7S,OAAU0K,EAAMoI,YAAY9S,UAI/D,aAAc,CACZoS,KAAMc,KACNZ,YAAa,qHACbzM,aAAc,CACZ2M,SAAU,EACVK,YAAa,GACbC,YAAa,CACX,wBACA,gCACA,qCACA,0BACA,kCACA,iCACA,qCACA,0CAGJP,eAAgB,SAAC7L,EAAQ+K,EAAO/G,GAC9B,IAAMmI,EAAcnI,EAAMoI,YAAYrC,SAASgB,EAAMsB,MACjD1Q,IAAE2Q,KAAF,uBAAWtI,EAAMmI,aAAjB,CAA8BpB,EAAMsB,QACpCrI,EAAMmI,YACV,MAAO,CACLA,cACAC,YAAapI,EAAMoI,YACnBN,SAAW,IAAMK,EAAY7S,OAAU0K,EAAMoI,YAAY9S,UAI/DmT,uCAAQ,CACNf,KAAMgB,KACNd,YACE,iRACFzM,aAAc,CACZ2M,SAAU,EACVK,YAAa,GACbC,YAAa,CACX,CAAEC,KAAM,iCAAkCM,OAAQ,CAAC,MAAO,QAC1D,CAAEN,KAAM,cAAeM,OAAQ,CAAC,MAAO,QACvC,CAAEN,KAAM,YAAaM,OAAQ,CAAC,MAAO,QACrC,CAAEN,KAAM,YAAaM,OAAQ,CAAC,MAAO,UAGzCd,eAAgB,SAAC7L,EAAQ+K,EAAO/G,GAC9B,IAAMmI,EAAcnI,EAAMoI,YAAYQ,MACpC,SAAAC,GAAU,OAAI9B,EAAMsB,OAASQ,EAAWR,MAAQQ,EAAWF,OAAO5C,SAASgB,EAAM+B,eAE/EnR,IAAE2Q,KAAF,uBAAWtI,EAAMmI,aAAjB,CAA8BpB,EAAMsB,QACpCrI,EAAMmI,YACV,MAAO,CACLA,cACAC,YAAapI,EAAMoI,YACnBN,SAAW,IAAMK,EAAY7S,OAAU0K,EAAMoI,YAAY9S,UAI/D,iEAAgB,CACdoS,KAAMqB,KACNnB,YAAa,qGACbC,eAAgB,SAAC7L,EAAQ+K,EAAO/G,GAC9B,MAAO,CACL8H,SAA6B,MAAnB9H,EAAM8H,SAAmB,IAAsB,IAAhB9L,EAAOgN,MAAchN,EAAOiN,KAAO,EAAI,IAAM,KAI5F,kHAAyB,CACvBvB,KAAMwB,KACNtB,YAAa,2MACbC,eAAgB,SAAC7L,EAAQ+K,EAAO/G,GAC9B,MAAO,CACL8H,SACqB,MAAnB9H,EAAM8H,SAAmB,IAAM,CAAC,KAAM,KAAM,MAAM/B,SAAS/J,EAAOmL,OAAS,IAAM,KAIzF,sEAAgB,CACdO,KAAMyB,KACNvB,YAAa,iWACbC,eAAgB,SAAC7L,EAAQ+K,EAAO/G,GAC9B,MAAO,CACL8H,SACqB,MAAnB9H,EAAM8H,SACF,IACA9L,EAAOgN,KAAO,GAAoB,IAAfhN,EAAOiN,KAA6B,IAAhBjN,EAAOoN,MAA+B,IAAjBpN,EAAOqN,MACnE,IACA,MAMDC,GAA0B,CACrCxB,SAAU,GC5KL,MAAMyB,GAAuB,CAACC,EAAOrC,IAC5B,QAAVA,EAAwBqC,EAAQ,IACtB,OAAVrC,EAAuBqC,EAAQ,KACrB,MAAVrC,EAAsBqC,EAAQ,IAC3BA,E,6QCCT,MA6NMC,GAAsB,CAACC,EAAUC,KAmHrC,OA5GoBhS,IAAEiS,UAAWxT,IAC/B,MAAMyT,EAAe,CAAC,IAAK,KAAM,IAAK,KAAM,OAC5CzT,EAAQ0T,QAAUnS,IAAEoS,SAAU1C,GAASA,EAAKnB,WAAa9P,EAAQ4T,IAAKC,IACtE7T,EAAQ8T,YAAcvS,IAAEwS,KAAM9C,GAASA,EAAKnB,UAAY9P,EAAQ4T,IAAKC,IACrE7T,EAAQ0R,SAAW,CACjBsC,OAAQ,CACNxD,GAAI,GACJD,EAAG,GACH,KAAM,GACND,EAAG,IAEL2D,OAAQ,CACNzD,GAAI,GACJD,EAAG,GACH,KAAM,GACND,EAAG,KAGP,MAAM4D,EAAoB,CACxBzD,IAAK,CAAC,KAAM,IAAK,KAAM,KACvBD,GAAI,CAAC,KAAM,IAAK,KAAM,KACtBD,EAAG,CAAC,IAAK,KAAM,KACf,KAAM,CAAC,KAAM,KACbD,EAAG,CAAC,MAaNtQ,EAAQmU,gBAAkB,GAC1B5S,IAAE6S,KAAKpU,EAAQqU,gBAAgBC,QAASC,IACtCvU,EAAQmU,gBAAgBI,GAAS,CAAEC,MAAO,EAAGC,IAAK,EAAGC,QAAS,MAC9D1U,EAAQqU,eAAeE,GAAOD,QAASK,KAChCA,EAAI/O,OAAOgP,QAAUD,EAAI/O,OAAOiP,WACnC7U,EAAQmU,gBAAgBI,GAAOC,QAC/BxU,EAAQmU,gBAAgBI,GAAOE,KAAOE,EAAI/O,OAAOiP,UAGnD,MAAMC,EAAYH,EAAI/O,OAAOmL,MACvBgE,EAAeJ,EAAI/O,OAAOoP,SAC1BC,EAAeN,EAAIhE,MAAMuE,QAAQC,OAAQjT,GAAMA,EAAE8S,WAAaD,GACpE,GAAIE,EAAa/V,OAAS,EAAG,CAI3B,GAHsB+V,EAAaG,KACjC,CAACC,EAAGC,IAAM7B,EAAa8B,QAAQD,EAAEvE,OAAS0C,EAAa8B,QAAQF,EAAEtE,QAEjD,GAAGA,QAAU+D,EAC7B,OAGJ,MAAMU,EAAgBtB,EAAkBY,GACpCU,GACFA,EAAclB,QAASmB,IAjCN,EAACC,EAAGC,EAAG9E,KAC5B,MAAM+E,EACU,MAAd/E,GAAmC,OAAdA,EACjB7Q,EAAQ0R,SAASuC,OACH,MAAdpD,GAAmC,OAAdA,EACrB7Q,EAAQ0R,SAASsC,OACjB,KACF4B,IACFA,EAAKD,GAAGD,GAAKE,EAAKD,GAAGD,GAAKE,EAAKD,GAAGD,GAAK,EAAI,IA0BvCG,CAAetB,EAAOkB,EAAUd,EAAIhE,MAAME,eAIhD7Q,EAAQmU,gBAAgBI,GAAOG,QACY,IAAzC1U,EAAQmU,gBAAgBI,GAAOC,MAC3B,KACAxU,EAAQmU,gBAAgBI,GAAOE,IAAMzU,EAAQmU,gBAAgBI,GAAOC,QAE5E,MAAMsB,EAASvU,IAAEwU,KACfxU,IAAEyU,QACFzU,IAAE4T,OAAO,EAAEZ,EAAOtP,KAAUA,EAAKyP,SAAWzP,EAAKuP,MAAQ,IACzDjT,IAAE2G,IAAI,EAAEqM,EAAOtP,KAAU,CAAC1D,IAAE0U,SAAS1B,GAAQtP,EAAKyP,UAHrCnT,CAIbvB,EAAQmU,iBAkCV,OAjCAnU,EAAQkW,eAAiBJ,EACzB,CAAC,SAAU,UAAUxB,QAASzD,IAC5B7Q,EAAQ0R,SAAR,UAAoBb,EAApB,WAAyC,EACzCtP,IAAE6S,KAAKpU,EAAQ0R,SAASb,IAAYyD,QAASvD,IAC3C/Q,EAAQ0R,SAASb,GAAjB,UAA+BE,EAA/B,WAAgD,EAChDxP,IAAE6S,KAAKpU,EAAQ0R,SAASb,GAAWE,IAAQuD,QAASC,IAClD,MAAM4B,EAASnW,EAAQ0R,SAASb,GAAWE,GAAOwD,GAE5C6B,EAtFYC,IACxBhY,KAAKiY,MACHjY,KAAKuO,IAAIyJ,EAAa,EAAIA,EAAc,GAA+C,GAA1ChY,KAAKkY,KAAKlY,KAAKwO,IAAIwJ,EAAc,EAAG,MAoFvDG,CADFjD,EAAUtO,KAAV,UAAkB4L,EAAlB,YAAsC0D,IAEpDkC,EAAyBpY,KAAKuO,IAAI,EAAGuJ,EAASC,GAE9CM,EA1FYnC,IAAW,IAAM,EAAI,IAAMA,EAAQ,IAAO,GAyF3CoC,CAAiBpC,GACTkC,EACzBzW,EAAQ0R,SAASb,GAAWE,GAA5B,UAAsCwD,EAAtC,WAAuDmC,EACvD1W,EAAQ0R,SAASb,GAAWE,GAA5B,UAAsCwD,EAAtC,gBAA4DkC,EAC5DzW,EAAQ0R,SAASb,GAAWE,GAA5B,UAAsCwD,EAAtC,gBAA4D6B,EAC5DpW,EAAQ0R,SAASb,GAAWE,GAA5B,UAAsCwD,EAAtC,qBAAiE4B,EAC7DO,GAAS1W,EAAQ0R,SAASb,GAAjB,UAA+BE,EAA/B,aACX/Q,EAAQ0R,SAASb,GAAjB,UAA+BE,EAA/B,WAAgD2F,EAChD1W,EAAQ0R,SAASb,GAAjB,UAA+BE,EAA/B,iBAAsDwD,EACtDvU,EAAQ0R,SAASb,GAAjB,UAA+BE,EAA/B,sBAA2D0F,EAC3DzW,EAAQ0R,SAASb,GAAjB,UAA+BE,EAA/B,4BAAiEqF,EACjEpW,EAAQ0R,SAASb,GAAjB,UAA+BE,EAA/B,iCAAsEoF,KAG1EnW,EAAQ0R,SAAR,UAAoBb,EAApB,YAA0C7Q,EAAQ0R,SAASb,GAAjB,UAA+BE,EAA/B,eAG9C/Q,EAAQ0R,SAASgF,MAAQ1W,EAAQ0R,SAAS,gBAAkB1R,EAAQ0R,SAAS,gBAC7E1R,EAAQ4W,iBAAmB5W,EAAQ0R,SAASgF,MAC5C1W,EAAQ6U,SACN7U,EAAQ6W,SAAW,EACfxY,KAAKiY,MAAOtW,EAAQ8W,YAAc9W,EAAQ6W,SAAY,KAAO,IAC7D,KACC7W,GACNsT,IAoFCyD,GAA0B,CAACC,EAAcC,KAiF7C,OAhFsB1V,IAAEiS,UAAW7C,IACjC,MAyDMuG,EAzDQvG,EAAMuE,QACjBhN,IAAKhG,IACJ,MAAMlC,EAAUiX,EAAkB/U,EAAE8S,UACpC,IAAKhV,IAAYkC,EAAE2S,UAAY3S,EAAE0S,QAAUrT,IAAEiO,QAAQxP,EAAQkW,gBAC3D,OAAO,KAET,MAAMiB,EAAUnX,EAAQmU,gBAAgBxD,EAAMG,YAC9C,IAAK9Q,EAAQoX,2BAA4B,CACvC,IAAItB,EAAS,IAAI9V,EAAQkW,eAAgB,CAAC,GAAI,IAC9C,IAAK,IAAImB,EAAIrX,EAAQkW,eAAe,GAAG,GAAImB,EAAI,EAAGA,IAChDvB,EAAS,CAAC,CAACuB,EAAG,QAASvB,GAEzB,MAAMlQ,EAAS0R,KAAW,aAAcxB,EAAQ,GAE1CyB,EAAWhZ,GAEbqH,EAAO4R,SAAS,GAChB5R,EAAO4R,SAAS,GAAKjZ,EACrBqH,EAAO4R,SAAS,GAAKjZ,EAAIA,EACzBqH,EAAO4R,SAAS,GAAKjZ,EAAIA,EAAIA,EAK3BkZ,EAAKlZ,IACT,GAAIA,GAAKyB,EAAQkW,eAAe,GAAG,GACjC,OAAO,IAGT,MAAMwB,EAAaH,EAAQhZ,GAC3B,OAAOF,KAAKwO,IAAI,EAAGxO,KAAKuO,IAAI8K,EAAY,OAEpCC,EAAK,GACX,IAAK,IAAIN,EAAI,EAAGA,GAAK,GAAIA,GAAK,IAC5BM,EAAGC,KAAK,CAACP,EAAGI,EAAEJ,KAGhBrX,EAAQoX,2BAA6BO,EAEvC,MAAME,EAAoBtW,IAAEwS,KACzB+D,GAASA,EAAK,GAAK5V,EAAE2S,SACtB7U,EAAQoX,4BAEV,MAAO,CACLjX,GAAI+B,EAAE8S,SACNH,SAAU3S,EAAE2S,SACZkD,YAAaZ,EAAQzC,QACrBsD,uBAAwBH,GAAqBA,EAAkB,GAC/DI,OACE/V,EAAE2S,SAAW,GACT,GAAK3S,EAAE2S,SAAW,IAAd,EACJ3S,EAAE2S,SAAW,GACbxW,KAAKwO,IAAI,GAAI3K,EAAE2S,SAAW,IAAd,IACZ,KAGTM,OAAO5T,IAAE2W,UACOC,OACjB,CAACC,EAAKxQ,IACCA,EAAKoQ,uBAGH,CACLK,QAASD,EAAIC,QAAUzQ,EAAKoQ,uBAAyBpQ,EAAKqQ,OAC1DK,UAAWF,EAAIE,UAAY1Q,EAAKqQ,QAJzBG,EAOX,CAAEC,QAAS,EAAGC,UAAW,IAE3BpB,EAAKmB,SAAW9W,IAAE0U,SAAStF,EAAMG,YACjCoG,EAAKoB,WAAa,EAClB,MAAMC,EAAoBrB,EAAKmB,QAAUnB,EAAKoB,UAG9C,O,2WAAO,IACF3H,EADL,CAEEqH,uBAAwBO,KAEzBvB,IAIQwB,GAAuB,EAAGlF,WAAU0D,eAAczD,YAAWkF,UAASC,YAQjF,MAAMC,EA5KU,GAAGrF,WAAU0D,mBAC7B,MAAM2B,EAAa,GAEnB,IAAK,MAAMC,KAAW5B,EAAc,CAClC,MAAMrG,EAAQqG,EAAa4B,GACrBC,EAAelI,EAAMuE,QAErB4D,EADa5a,OAAOyS,EAAMqH,wBAA0BrH,EAAMG,aACpC,IAAM,IAClC,GAAIH,EAAMoI,SAAU,CAClB,MAAMA,EAAWpI,EAAMoI,SACvB,IAAK,MAAMnT,KAAUiT,EACnB,IAAKjT,EAAOgP,QAAUmE,EAAU,CAC9B,MAUMC,EAVK3a,KAAKwO,IAAI,EAAGxO,KAAKuO,IAAI,EAAGhH,EAAOqT,SAAWF,EAAW,IAAO,IAajEG,EAAKF,EAAIF,EAEfH,EAAW/S,EAAOzF,IAAM,CACtB+Y,GAAI,CACFA,KACA7Z,EAAG2Z,EACHD,WACAD,QACAK,YAAaL,EAAQI,EACrBE,QAASF,EAAKJ,EACdO,QAASnb,OAAOgb,EAAGI,QAAQ,MAG/B,MAAMtZ,EAAUsT,EAAS1N,EAAOoP,UAC5BhV,IACGA,EAAQkZ,KACXlZ,EAAQkZ,GAAK,CAAEK,OAAQ,GAAIL,GAAI,IAEjClZ,EAAQkZ,GAAGK,OAAO3B,KAAK,CACrB4B,IAAKtb,OAAOgb,EAAGI,QAAQ,IACvBG,EAAG9I,EAAMsB,KACTyD,EAAG/E,EAAM+B,WACTwG,KACAtT,SACA+K,QACAqI,SAQZ,IAAK,MAAMhE,KAAY1B,EAAU,CAC/B,MAAMtT,EAAUsT,EAAS0B,GACrBhV,EAAQkZ,IACVlZ,EAAQkZ,GAAGK,OAAOnE,KAAK,CAACC,EAAGC,IAAMA,EAAE4D,GAAK7D,EAAE6D,IAC1ClZ,EAAQkZ,GAAGA,GAAK,EAChBlZ,EAAQkZ,GAAGK,OAAOjF,QAAQ,CAAClB,EAAOjL,KAChCnI,EAAQkZ,GAAGA,IAAM,KAAQ/Q,EAAQiL,EAAM8F,KAEzClZ,EAAQ0Z,OAAS1Z,EAAQkZ,GAAGA,IAE5BlZ,EAAQ0Z,OAAS,EASrB,OAAOf,GA+FYgB,CAAU,CAC3BrG,SAPFA,EAAWD,GAAoBC,EAAUC,GAQvCyD,aALFA,EAAeD,GAAwBC,EAAc1D,KALwC,EAvfxE,GAAGmF,UAASnF,WAAUoF,QAAOC,WAAYiB,MAC9D,IAAIC,EAAU,GACd,MAAMC,EAAe,GACfC,EAAoB,CAAC3G,EAAO4G,IAAR,UACrB5G,EAAM4B,SADe,aACFgF,EAAWhF,SADT,YACqB5B,EAAM6G,cAD3B,YAC4C7G,EAAMwB,QACtEsF,EAAiB,GACjBC,EAAuB/G,GAAD,UAAcA,EAAM4B,SAApB,YAAgC5B,EAAM6G,cAAtC,YAAuD7G,EAAMwB,QAoNzF,OAlNA6D,EAAQnE,QAAQ,EAAElB,EAAO4G,EAAY/H,MAEnC,MAAMmI,EAAK9G,EAASF,EAAM4B,UACpBqF,EAAK/G,EAAS0G,EAAWhF,UAEzBsF,EAAkBlH,EAAMwB,OAAS,IAAM,EAC7C,IAAImE,EAAW,KACX9G,EAAK8G,WACPA,EAAW9G,EAAK8G,SAAWuB,EAEzBjc,KAAKwO,IAAIkM,EAAU3F,EAAMA,MAAO4G,EAAW5G,SAAW2F,GACrD3F,EAAMwB,QACLxB,EAAMvN,aAAgBmU,EAAWnU,cAEnCkT,GAAY,KAIV1a,KAAKwO,IAAIkM,EAAU3F,EAAMA,MAAO4G,EAAW5G,SAAW2F,IAExDA,EAAW1a,KAAKwO,IAAIkM,EAAU3F,EAAMA,MAAO4G,EAAW5G,OAAS,MAK9DwG,EAAcxG,EAAMjT,MAAKyZ,EAAcxG,EAAMjT,IAAM,IACnDyZ,EAAcI,EAAW7Z,MAAKyZ,EAAcI,EAAW7Z,IAAM,IAClE,MAAMoa,EAAYX,EAAcxG,EAAMjT,IAChCqa,EAAiBZ,EAAcI,EAAW7Z,IAG3Coa,EAAUE,iBAAgBF,EAAUE,eAAiBL,EAAGV,QACxDc,EAAeC,iBAAgBD,EAAeC,eAAiBJ,EAAGX,QAGvEU,EAAGM,cACHL,EAAGK,cAMH,MAAMC,EAAKP,EAAGV,OACRkB,EAAKP,EAAGX,OACRmB,EAAK,KAAOF,EAAK,KACjBG,EAAK,KAAOF,EAAK,KACjBG,EAAKF,GAAMA,EAAKC,GAChBE,EAAKF,GAAMD,EAAKC,GACtB,IAEIG,EAAIC,EAFJ5K,EAAI8C,EAAMA,MACV/C,EAAI2J,EAAW5G,MAEf9C,IAAMD,EACR4K,EAAKC,EAAK,GACDnC,GAAkB,IAANzI,GAAiB,IAAND,GAGhC4K,EAA2B,IAD3B5K,EAAI0I,EAAW1I,EAAI,KADnBC,EAAIyI,EAAWzI,EAAI,GAEJD,GAAK,IAAW,GAC/B6K,EAA2B,GAArB5K,GAAKA,EAAID,GAAK,IAAW,IAG/B6K,EAAK,GADLD,EAAK3K,EAAID,EAAI,EAAIA,EAAIC,EAAI,EAAI,IAG/B2K,EAAK5c,KAAKwO,IAAI,EAAGxO,KAAKuO,IAAI,EAAGqO,IAC7BC,EAAK7c,KAAKwO,IAAI,EAAGxO,KAAKuO,IAAI,EAAGsO,IAE7B,MAAMC,EAAW9c,KAAKwO,IAAI,EAAGxO,KAAKuO,IAAI,GAAI+N,EAAK,KAAO,MAChDS,EAAW/c,KAAKwO,IAAI,EAAGxO,KAAKuO,IAAI,GAAIgO,EAAK,KAAO,MAChDS,EAAQ,GAAK,GAAKF,EAClBG,EAAQ,GAAK,GAAKF,EAClBtK,EAAa5S,OAAO+T,EAAK+F,wBAA0B/F,EAAKnB,YACxDyK,EAAUld,KAAKwO,IACnB,EACAxO,KAAKuO,IAAIyO,GAAQvK,EAAa,MAA2B,GAAlBqK,EAAW,IAAW,KAAOE,IAEhEG,EAAUnd,KAAKwO,IACnB,EACAxO,KAAKuO,IAAI0O,GAAQxK,EAAa,MAA2B,GAAlBsK,EAAW,IAAW,KAAOE,IAEhEG,EAASpd,KAAKuO,IAAI2O,EAASC,GAGjC,IAAIE,EAAa,EAGfzJ,EAAK8G,WACJ3F,EAAMrC,MAAM4K,WAAW,OAAyB,IAAfvI,EAAMR,MAA4B,IAAdQ,EAAMP,OAC3DmH,EAAWjJ,MAAM4K,WAAW,OAA8B,IAApB3B,EAAWpH,MAAiC,IAAnBoH,EAAWnH,MAC3EO,EAAMA,MAAQ2F,EALI,KAMlBiB,EAAW5G,MAAQ2F,EAND,MAQlB2C,EACErd,KAAKwO,IACHxO,KAAKuO,IACH,EACAvO,KAAKwO,IACH,IAAO,IAAMuG,EAAMA,MAAS2F,EAC5B,IAAO,IAAMiB,EAAW5G,MAAS2F,GAFnC,GAMF,IACG,GAGT,MAAM6C,EAAKH,EAASC,EACdG,EAAKJ,EAASC,EACpB,IAAII,EAAMF,GAAMX,EAAKF,GACjBgB,EAAMF,GAAMX,EAAKF,GAErBc,EAAMA,EAAM,GAAqB,QAAhB1I,EAAMrC,MAAkB,EAAI+K,EAC7CC,EAAMA,EAAM,GAA0B,QAArB/B,EAAWjJ,MAAkB,EAAIgL,EAElD,MAAMC,EAAajC,EAAkB3G,EAAO4G,GACtCiC,EAAalC,EAAkBC,EAAY5G,GAC3C8I,EAAYpC,EAAakC,IAAe,EACxCG,EAAYrC,EAAamC,IAAe,EAC9CnC,EAAakC,GAAcF,EAC3BhC,EAAamC,GAAcF,EAG3B3B,EAAGV,OAASU,EAAGV,OAASoC,EAAMI,EAC9B7B,EAAGX,OAASW,EAAGX,OAASqC,EAAMI,EAE9B,MAAMC,EAAgBjC,EAAoB/G,GACpCiJ,EAAgBlC,EAAoBH,GAC1CE,EAAekC,IAAkBlC,EAAekC,IAAkB,GAAKN,EAAMI,EAC7EhC,EAAemC,IAAkBnC,EAAemC,IAAkB,GAAKN,EAAMI,EAG7E5B,EAAU+B,WAAapC,EAAekC,GACtC7B,EAAUgC,eAAiBT,EAAMI,EAEjC1B,EAAe8B,WAAapC,EAAemC,GAC3C7B,EAAe+B,eAAiBR,EAAMI,EAElCzD,IAKFmB,GAAO,UAAO5H,EAAKS,WAAZ,cAA4BT,EAAKA,KAAjC,aAA0CA,EAAKgI,cAA/C,eACL3G,EAASF,EAAM4B,UAAU/W,KADpB,cAEDqV,EAAS0G,EAAWhF,UAAU/W,KAF7B,eAGTmV,EAAMA,MAHG,cAGQ4G,EAAW5G,MAHnB,aAG6B/U,KAAKme,MAAMzD,GAHxC,aAGsD1a,KAAKme,MAChEvK,EAAK8G,SAAWuB,GAJX,kBAKIW,EAAG3B,QAAQ,GALf,YAKqB4B,EAAG5B,QAAQ,GALhC,cAKwCyB,EAAGzB,QAAQ,GALnD,cAK2D0B,EAAG1B,QAAQ,GALtE,sBAMFqB,EAAGrB,QAAQ,GANT,cAMiBsB,EAAGtB,QAAQ,GAN5B,cAMoCwC,EAAIxC,QAAQ,GANhD,cAMwDyC,EAAIzC,QACjE,GAPK,gBAQEsC,EAAGtC,QAAQ,GARb,YAQmBuC,EAAGvC,QAAQ,IAR9B,OASU,IAAfoC,EAAmB,GAAnB,iBAAkCA,EAAWpC,QAAQ,GAArD,KATK,yBAWC4C,EAAU5C,QAAQ,GAXnB,cAW2B6C,EAAU7C,QAAQ,GAX7C,4BAYIwC,EAAMI,GAAW5C,QAAQ,GAZ7B,eAYsCyC,EAAMI,GAAW7C,QAAQ,GAZ/D,6BAaKQ,EAAakC,GAAY1C,QAAQ,GAbtC,cAa8CQ,EAAamC,GAAY3C,QAAQ,GAb/E,mBAcLY,EAAekC,GAAe9C,QAAQ,GAdjC,cAcyCY,EAAemC,GAAe/C,QAAQ,GAd/E,OAiBTc,EAAGV,OAASrb,KAAKwO,IAAI,IAAKuN,EAAGV,QAC7BW,EAAGX,OAASrb,KAAKwO,IAAI,IAAKwN,EAAGX,QAE7B,MAAM+C,EAAgBlb,IAAEwU,KACtBxU,IAAE6S,KACF7S,IAAE2G,IAAK/H,IAAD,CAAWA,KAAIuZ,OAAQpG,EAASnT,GAAIuZ,UAC1CnY,IAAEmb,QAAQ,CAAC,UAAW,CAAC,SAHHnb,CAIpB+R,GACIqJ,EACJvJ,EAAMtN,WAAakU,EAAWlU,WAAasN,EAAMtN,WAAakU,EAAWlU,WAC3E2W,EAAcnI,QAAQ,CAACsI,EAAQzU,KACXmL,EAASsJ,EAAOzc,IAAI0c,YACpB1U,EAAQ,IACxBmL,EAASsJ,EAAOzc,IAAI2c,eAAelF,KAAK,CACtCmF,MAAO5U,EAAQ,EACf1B,KAAMkW,EAAWK,YAEnB1J,EAASsJ,EAAOzc,IAAI0c,UAAY1U,EAAQ,KAI5C,MAAM8U,EAAe1b,IAAE2b,KAAK9C,EAAG+C,eACzBC,EAAe7b,IAAE2b,KAAK7C,EAAG8C,eAC3BF,IAAiB7C,EAAGV,QACtBU,EAAG+C,cAAcvF,KAAK,CACpB8B,OAAQU,EAAGV,OACXjT,KAAMkW,EAAWK,YAGjBI,IAAiB/C,EAAGX,QACtBW,EAAG8C,cAAcvF,KAAK,CACpB8B,OAAQW,EAAGX,OACXjT,KAAMkW,EAAWK,cAKvBzb,IAAEwU,KACAxU,IAAE6S,KACF7S,IAAE+S,QAASlM,IACTkL,EAASlL,GAAKjI,GAAKoB,IAAE8b,UAAUjV,GAC/BkL,EAASlL,GAAKyM,SACZvB,EAASlL,GAAKyO,SAAW,EACrBxY,KAAKiY,MAAOhD,EAASlL,GAAK0O,YAAcxD,EAASlL,GAAKyO,SAAY,KAAO,IACzE,KACNvD,EAASlL,GAAKkV,UAAYhK,EAASlL,GAAKsR,OACxCpG,EAASlL,GAAKsR,OAASrb,KAAKiY,MAAMhD,EAASlL,GAAKsR,QAChDpG,EAASlL,GAAK0U,eAAiB,IAC1BxJ,EAASlL,GAAK0U,eACjB,CAAEC,MAAOxb,IAAEsC,IAAI,QAAStC,IAAE2b,KAAK5J,EAASlL,GAAK0U,iBAAkBrW,KAAMU,KAAKoW,UAZhFhc,CAeE+R,GACK,CAAEuG,YA2SW2D,CAAe,CACjC/E,UACAnF,WACAqF,aACAD,UAGF,MAAO,CAAEpF,WAAUqF,aAAY3B,eAAc6C,QArBgD,EAcrFA,UC1gBN4D,eACFC,OAAOC,QAAU,WACfF,aAAaG,QAAQ,QAAS,IAEhCF,OAAOG,SAAW,WAChBJ,aAAaK,WAAW,WAIrB,IAAMC,GAAQN,cAAgBA,aAAaO,QAAQ,S,6kBCO1D,MAAMpZ,GAAO,cACPC,GAAO,cACPC,GAAK,YACLmZ,GAAU,iBACVC,GAAY,mBACZC,GAAkB,yBAClBC,GAAe,sBAERC,GAAgB,CAAEC,UAAU,EAAMC,mBAAmB,GAE5DxZ,GAAe,CACnBC,WAAW,EACXwZ,kBAAkB,EAClBvZ,KAAM,GACNkQ,OAAQkJ,GACRI,QAAS,GACTnL,SAAU,GACV4B,QAAS,GACTyD,WAAY,GACZ3B,aAAc,IAGH0H,GAAkB,CAC7B,IAAK,EACLxO,EAAG,EACHC,EAAG,EACH,KAAM,EACNC,EAAG,EACH,KAAM,EACNC,EAAG,EACH,KAAM,EACNC,EAAG,EACH,KAAM,EACNC,EAAG,GACHC,GAAI,GACJC,IAAK,IAyBDkO,GAAa/Y,GACK,IAAlBA,EAAOgZ,QAAgC,IAAhBhZ,EAAOiZ,MAA+B,IAAjBjZ,EAAOkZ,MAC/B,IAAlBlZ,EAAOmZ,OACF,MAEA,KAGJnZ,EAAOmL,MAGViO,GAAY,CAACrK,EAAK8J,EAAS9N,KAC/B,GAAqC,qBAA1BgE,EAAIsK,kBAGb,MAAO,CACL9e,GAAIwU,EAAIxU,GACR+e,gBAAqD,aAApCT,EAAQ9J,EAAIiI,QAAQuC,YACrCC,sBAAsB,EACtBnF,cAAetF,EAAI0K,aACnBrK,SAAUL,EAAIiI,OACd0C,SAAUb,EAAQ9J,EAAIiI,QAAQ0C,SAC9BC,eAAgBd,EAAQ9J,EAAIiI,QAAQuC,YACpC1Y,KAAMkO,EAAI6K,OACV1Z,WAAYkB,GAAU2N,EAAI6K,QAC1BzO,MAAO4D,EAAI5D,MACXlL,cAAe8O,EAAI8K,gBACnBrM,MAAOuB,EAAIvB,MACX6F,SAAU9F,GAAqBwB,EAAIvB,MAAOuB,EAAI5D,OAC9C6D,SAAUD,EAAI+K,WAIlB,IAAIC,EAAK,CACPT,gBAAqD,aAApCT,EAAQ9J,EAAIiI,QAAQuC,YACrCC,sBAAsB,EACtBnF,cAAetF,EAAI0K,aACnBlf,GAAIwU,EAAIxU,GACR6U,SAAUL,EAAIiI,OACd0C,SAAUb,EAAQ9J,EAAIiI,QAAQ0C,SAC9BC,eAAgBd,EAAQ9J,EAAIiI,QAAQuC,YACpCS,iBAAkBjL,EAAIkL,aACtBC,mBAAoBnL,EAAIoL,eACxBC,cAAerL,EAAIsL,eACnBxZ,KAAMkO,EAAI6K,OACV1Z,WAAYkB,GAAU2N,EAAI6K,QAC1BzO,MAAqB,MAAd4D,EAAI5D,MAAgB4D,EAAI5D,MAAQ4N,GAAWhK,GAClD9O,cAAe8O,EAAI8K,gBACnBrM,MAAOuB,EAAIvB,MACX6F,SAAU9F,GAAqBwB,EAAIvB,MAAOuB,EAAI5D,OAC9CmP,cAAevL,EAAIwL,eACnBC,SAAUzL,EAAIyL,UAAYzL,EAAIyL,SAAW,IACzCC,QAAS1L,EAAI2L,SACbrN,MAAO0B,EAAIoK,OACX/L,KAAM2B,EAAImK,MACVjM,IAAK8B,EAAIkK,KACTjM,KAAM+B,EAAIiK,OACVjN,MAAOgD,EAAI4L,UACXC,KAAM7L,EAAI8L,UACV7L,SAAUD,EAAI+K,UACdgB,MAAO/L,EAAI8L,WAAa,IAAI/W,MAAM,KAAKiG,SAAS,MAChDxJ,cAAyC,iBAA1BwO,EAAIsK,kBACnB/Y,SAAoC,kBAA1ByO,EAAIsK,mBApFa,EAACrZ,EAAQ+a,KACtC,IAAKA,EACH,OAEF,MAAMC,EAAQ,CAAChb,EAAOya,QAASza,EAAOqN,MAAOrN,EAAOoN,KAAMpN,EAAOiN,IAAKjN,EAAOgN,MAC7E,IAAIiO,GAAgB,EAClBC,EAAqB,EACrBC,EAAe,EACjB,IAAK,IAAI1J,EAAI,EAAGA,EAAI,IAAKA,EAClB9V,IAAEyf,SAASJ,EAAMvJ,IAIpB0J,GAAgBH,EAAMvJ,IAHtBwJ,EAAexJ,EACfyJ,KAKuB,IAAvBA,IACFlb,EAAO,CAAC,UAAW,QAAS,OAAQ,MAAO,QAAQib,IACjDF,EAAgBI,IAqEpBE,CAAuBtB,EAAIhP,EAAMgQ,eAEjC,MAAML,EAAmC,GAAxBjiB,KAAKkY,KAAKoJ,EAAGU,SACxBjI,EAAMkI,EACRjiB,KAAKme,OACU,IAAX8D,EAA4B,GAAXX,EAAG1M,MAAuB,GAAV0M,EAAG3M,MAAuB,GAAX2M,EAAG/M,OAClD0N,EAAWX,EAAG1M,MAAQ0M,EAAG3M,KAAO2M,EAAG9M,IAAM8M,EAAG/M,MAC7C,KACA,IACJ,KACEsO,EAASvB,EAAGU,QACdhiB,KAAKme,OACY,IAAbmD,EAAGU,QAA2B,GAAXV,EAAG1M,MAAuB,GAAV0M,EAAG3M,MAAuB,GAAX2M,EAAG/M,OACpD+M,EAAGU,QAAUV,EAAG1M,MAAQ0M,EAAG3M,KAAO2M,EAAG9M,IAAM8M,EAAG/M,MAC/C,KACA,IACJ,KAIJ,OAFA+M,EAAG9K,SAAWuD,EAAM,EAAI,EAAe,MAAX8I,EAAiB,IAAM9I,IAAQA,EAAIkB,QAAQ,GACvEqG,EAAGwB,YAAcD,EACVvB,GAMHyB,GAAiBhO,GACZA,EAAM6F,SAAW7F,EAAMyB,SAAY,KAAQzB,EAAMwB,OAAS,IAAM,GAGrEyM,GAAoB,CAACzb,EAAQ0N,KACjC,MAAMnT,EAAKyF,EAAOoP,SACZX,EAAiB9S,IAAE+f,UAAU9iB,MAAM4D,KAAK,CAAElD,OAAQ,KAAMgJ,IAAI,CAAC3J,EAAG8Y,IAAM,CAACA,EAAI,EAAG,MACpF/D,EAASnT,GAAM,CACblC,KAAM2H,EAAO0Z,SACbiC,WAAY3b,EAAO2Z,eACnBiC,eAAgB,GAChBnN,iBACAoN,eAAgB7b,EAAOE,WACvB0O,MAAO,EACPkG,YAAa,EACb7D,SAAU,EACV6K,OAAQ,CAAExR,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,GAAI,EAAGC,IAAK,GAC1DqG,YAAa,EACbgG,eAAgB,GAChBK,cAAe,GACfN,UAAW,KACX8E,eAAgB,GAElBrO,EAASnT,GAAIkR,aAAe9P,IAAEwU,KAC5BxU,IAAE6S,KACF7S,IAAE2G,IAAI0Z,GAAW,CACfA,EADe,MAETvQ,GAAauQ,GAAS7c,cAAgBmO,MAE9C3R,IAAE+f,UANwB/f,CAO1B8P,IACFiC,EAASnT,GAAIyT,IAAM,GAGfiO,GAA2B,CAACjc,EAAQ+K,EAAO2C,KAC/C,MAAMtT,EAAUsT,EAAS1N,EAAOoP,UAEhChV,EAAQwU,QACJ5O,EAAOiP,WACT7U,EAAQ6W,WACR7W,EAAQ8W,aAAelR,EAAOiP,UAEhC7U,EAAQ0hB,OAAO9b,EAAOmL,MAAM+Q,QAAQ,IAAK,OACjB,SAApBnR,EAAME,WAAwBjL,EAAOgL,qBACvC5Q,EAAQwhB,eAAe5b,EAAOmL,OAAS,IACjC/Q,EAAQwhB,eAAe5b,EAAOmL,QAAU,GAC5C,CAAEnL,SAAQ+K,UAEZ3Q,EAAQqU,eAAe1D,EAAMG,YAAc,IACrC9Q,EAAQqU,eAAe1D,EAAMG,aAAe,GAChD,CAAElL,SAAQ+K,WAGV/K,EAAOC,aAAe7F,EAAQyhB,eAAiB7b,EAAOE,aACxD9F,EAAQyhB,eAAiB7b,EAAOE,YAElC9F,EAAQqR,aAAe9P,IAAEiS,UAAUuO,QAAQ,CAAEC,KAAK,GAA3BzgB,CAAoC,CAAC0gB,EAAUL,IAC7DvQ,GAAauQ,GAASnQ,eAAe7L,EAAQ+K,EAAOsR,EAAUjiB,GACpEA,EAAQqR,cACXrR,EAAQ4T,KAAOlD,GAAO9K,EAAQ+K,IA0MzB,MAAMuR,GAAe,IACnB1e,MAAOC,EAAUC,KACtBD,EAAS,CAAEZ,KAAM+B,KACjB,IACE,MAAMK,QAAaxB,EACjBX,EAAU,CACRC,IAAI,GAAD,OAAK2B,EAAL,0BAGP,GAAIO,EAAKd,MACP,MAAM,IAAIG,MAAMW,EAAKd,OASvBV,EAAS0e,GAAmBld,IAC5B,MAAOd,GACPie,QAAQC,IAAIle,GACZV,EAAS,CAAEZ,KAAMiC,GAAOX,YA6DxBge,GAAqBld,GAClBzB,MAAOC,EAAUC,KAAc,MAC5B6P,EAAc7P,IAAd6P,UAD2B,EA3RnB,EAACtO,EAAMsO,KAAe,MAChCkL,EAAoCxZ,EAApCwZ,QAASvJ,EAA2BjQ,EAA3BiQ,QAASoN,EAAkBrd,EAAlBqd,cAGpBC,EAAgB,GAChBC,EAAiB5c,GAAM,UAAOA,EAAOqU,cAAd,YAA+BrU,EAAOoP,SAAtC,YAAkDpP,EAAOgP,QAChF6N,EAAuB7c,GAAM,UAAOA,EAAOqU,cAAd,YAA+BrU,EAAOoP,UACnE0N,EAAa,GACbC,EAAmB,GACnBrZ,EAAM,GAGNmP,EAAU,GAGhB,IAAInF,EAAW,GAGf,IAAK,IAAIsP,KAAU1N,EAAS,CAC1B,MAAM+E,EAAgB2I,EAAOvD,aAE7B,IAAK/V,EAAI2Q,GAAgB,CACvB,MAAM4I,EAAcP,EAAcrI,GAC5B6I,EAAQvhB,IAAEwhB,QAAQF,EAAYG,aAFb,EAGSF,EAAMG,MAAM,gBAHrB,mBAGhBpS,EAHgB,KAGLC,EAHK,KAIvBxH,EAAI2Q,GAAiB,CACnBhI,KAAM4Q,EAAYK,WAClBxQ,WAAYoQ,EACZhS,aACAD,YACAzB,SAAUyT,EAAYzT,SACtB6K,cAAeA,EACf0G,cAAekC,EAAYM,gBAC3BjO,QAAS,GACTkO,kBAAmB,GAKvB,MAAMC,EAAW/Z,EAAI2Q,GACfrU,EAASoZ,GAAU4D,EAAQnE,EAAS4E,GAC1Cd,EAAc3K,KAAKhS,GAGnB,MAAM0d,EAAcd,EAAe5c,GAC7B2d,EAAmBb,EAAWY,GACpC,IAAKC,GAAoBA,EAAiBnQ,MAAQxN,EAAOwN,MAAO,CAC9D,GAAImQ,EAAkB,CACpB,MAAMC,EAAgBH,EAASnO,QAAQK,QAAQgO,IACxB,IAAnBC,GACFH,EAASnO,QAAQuO,OAAOD,EAAe,GAG3C,MAAME,EAAgBniB,IAAEoiB,kBAAkBzhB,IAAMA,EAAEkR,MAAOxN,EAAQyd,EAASnO,SACrEtP,EAAOsZ,iBAAqC,IAAlBwE,IAC7BL,EAASnO,QAAQuO,OAAOC,EAAe,EAAG9d,GAC1Cyd,EAASO,gBAAkBhe,EAAOa,KAClC4c,EAASD,oBACTV,EAAWY,GAAe1d,GAEvBA,EAAOsZ,iBACVmE,EAASnO,QAAQZ,QAAQuP,KAEpBA,EAAY3E,iBACb2E,EAAYjP,SAAWhP,EAAOgP,QAC9BiP,EAAY7O,WAAapP,EAAOoP,UAChCpP,EAAOwN,OACPyQ,EAAYzQ,OAEZqF,EAAQb,KAAK,CAAChS,EAAQie,EAAaR,MAO3C,IAAKzd,EAAOwZ,qBAAsB,CAChC,MAAM0E,EAAoBrB,EAAqB7c,GACzCme,EAAsBpB,EAAiBmB,KAE1CC,GACDrF,GAAgBqF,EAAoBhT,QAAU2N,GAAgB9Y,EAAOmL,UAGrEgT,IAAwBA,EAAoBnT,oBAAqB,GACjEhL,EAAOgL,oBAAqB,EAC5B+R,EAAiBmB,GAAqBle,IAM5C,IAAK,IAAIgT,KAAWtP,EAAK,CACvB,MAAMqH,EAAQrH,EAAIsP,GAClBjI,EAAMoI,SAAW,KACjB,IAAK,IAAInT,KAAU+K,EAAMuE,QAAS,CAChC,IAAKtP,EAAOgP,OACV,GAAIhP,EAAOiP,SAAU,CACnB,MAAMmP,EAAoB5C,GAAexb,GACrC+K,EAAMoI,SAAWiL,IACnBrT,EAAMoI,SAAWiL,QAEVrT,EAAMoI,UAAYpI,EAAMoI,SAAWnT,EAAOwN,QACnDzC,EAAMoI,SAAWnT,EAAOwN,OAIvBxN,EAAOsZ,iBAAoBtZ,EAAOwZ,uBAChC9L,EAAS1N,EAAOoP,WACnBqM,GAAkBzb,EAAQ0N,GAE5BuO,GAAyBjc,EAAQ+K,EAAO2C,KAK9C,MAAO,CAAEiP,gBAAejP,WAAU0D,aAAc1N,EAAKmP,YAyKQwL,CAAYhf,GAA/D+R,EAF2B,EAE3BA,aAAcuL,EAFa,EAEbA,cAAejP,EAFF,EAEEA,SAAUmF,EAFZ,EAEYA,QAE/ChV,EAAS,CACPZ,KAAMgC,GACNI,KAAM1D,IAAEC,OAAOwV,GACfyH,QAASld,IAAEwU,KACTxU,IAAEyU,QACFzU,IAAE2G,IAAI,EAAE/H,EAAIyc,KAAN,MAAwBA,EAAxB,CAAgCzc,GAAIoB,IAAE8b,UAAUld,MAF/CoB,CAGP0D,EAAKwZ,SACPvJ,QAASqN,EACTjP,WACA0D,eACAkN,aAAcjf,IAIhB,MAAMkf,EAAQ,CAAEnN,eAAc1D,WAAUC,YAAWkF,UAASC,MAAOqF,IACnE,IAAIqG,EAASC,EAGXD,EAFE1G,OAAO1f,QACTqmB,EAAS,IAAIC,MACI9L,qBAAqB2L,GAE5B,IAAI3f,QAAQmQ,GAAOA,EAAI4P,GAAwCJ,KAG3E,MAAMK,QAAeJ,EACrBrG,IAASqE,QAAQC,IAAImC,EAAO3K,SAC5BkE,IACEqE,QAAQC,IACN,sBACA1jB,OAAO6C,OAAOgjB,EAAOlR,UAClB6B,OAAOsP,GAAKA,EAAEvL,IACd9D,KAAK,CAACC,EAAGC,IAAMA,EAAE4D,GAAGA,GAAK7D,EAAE6D,GAAGA,KAGrCzV,EAAS,IACPZ,KAAMub,IACHoG,IAEL/gB,EAASihB,GAAwBF,EAAOlR,WACpC+Q,GAAQA,EAAOM,aAIVC,GAAYzP,IAAM,CAC7BtS,KAAMob,GACN9I,WAOI0P,GAAiBtjB,IAAE2G,IAAI,MACvB4c,GAAkBvjB,IAAEwU,KACxBxU,IAAE2G,IAAIuc,GAAK,CAACA,EAAEtkB,GAAIskB,EAAE/K,SACpBnY,IAAE+f,WAGSoD,GAA0BpR,GAC9B9P,MAAOC,EAAUC,KACtB,IACE,MAAM5D,EAAUyB,IAAEmb,QAAQ,YAAa,OAAQnb,IAAEC,OAAO8R,IADtD,QAE+E9O,QAAQugB,IAAI,CAC3FC,IAAYhH,QAAQ,yBACpBgH,IAAYhH,QAAQ,+BACpBgH,IAAYhH,QAAQ,2BALpB,mBAEKiH,EAFL,KAEyBC,EAFzB,KAEmDC,EAFnD,KAOIC,EAAUP,GAAe/kB,GACzBulB,EAAkBR,GAAeM,GACjCG,EAAkBT,GAAeI,GACjCM,EAAeT,GAAgBhlB,GAC/B0lB,EAAuBV,GAAgBK,GAG7C,IAAIM,EAFyBX,GAAgBI,GAKxC3jB,IAAEgO,QAAQgW,EAAcC,KAE3BR,IAAYpH,QAAQ,8BAA+BuH,GACnDM,EAAoBD,GAEtB,IAAIE,EAAWJ,EACV/jB,IAAEgO,QAAQ6V,EAASC,KAEtBL,IAAYpH,QAAQ,wBAAyBuH,GAC7CO,EAAWL,GAEb5hB,EAAS,CACPZ,KAAMsb,GACNiH,UACAM,WACAD,sBAEFT,IAAYpH,QAAQ,wBAAyB9d,GAC7C,MAAOqE,GACPie,QAAQuD,KAAK,wCAAyCxhB,K,6kBC9lB5D,IAAMyhB,GAAa,wBACbC,GAAY,uBACZC,GAAa,wBACbC,GAAW,sBAEXhhB,GAAe,CACnBihB,QAAS,GACTC,cAAe,KACfjhB,WAAW,GAGPkhB,GAAe,SAAAte,GAAI,OACvBA,GAAI,MACCA,EADD,CAEFkb,MAAOlb,EAAK3J,KACZG,MAAOwJ,EAAK3J,QAgChB,IAAMkoB,GAAgB,SAAAH,GAAO,MAAK,CAAEnjB,KAAMgjB,GAAcG,QAASA,GAAW,KAEtEI,GAAe,iBAAO,CAC1BvjB,KAAMijB,KAGFO,GAAa,iBAAO,CACxBxjB,KAAMkjB,KAGKO,GAAe,SAAAL,GAAa,MAAK,CAC5CpjB,KAAM+iB,GACNK,kBA+BWM,GAAa,kBAAM,SAAC9iB,EAAUC,GACzCD,EAAS2iB,MACT,IAAMH,EAAgBviB,IAAWsiB,QAAQC,cACnChoB,EAAOsD,IAAEsC,IAAI,OAAQoiB,GAC3B,OAAOjB,IAAYhH,QAAQ,iBAAiBjW,MAAK,SAAAie,GAChC/nB,GAAQsD,IAAEwS,KAAK,CAAE9V,QAAQ+nB,IAEtCviB,EAAS6iB,GAAaL,IACtBxiB,EAASmhB,GAAUqB,EAAc9Q,UAGjC1R,EAAS0iB,GAAcH,IAEzBviB,EAAS4iB,W,+NClGb,IAAMnb,GACJ,4BAAQxJ,UAAU,8CAChB,kBAAC,IAAD,MADF,8CAMI8kB,GAAmB,iBAAM,kCAQzBC,GAAqB,CACzBC,YDyCyB,kBAAM,SAACjjB,EAAUC,GAE1C,OADAD,EAAS2iB,MACFpB,IAAYhH,QAAQ,iBAAiBjW,MAAK,SAAAie,GAC/CviB,EAAS0iB,GAAcH,IACvBviB,EAAS4iB,WC5CXM,WDgDwB,SAAA1oB,GAAI,OAAI,SAACwF,EAAUC,GAE3C,OADAD,EAAS2iB,MACFpB,IAAYhH,QAAQ,iBAAiBjW,MAAK,SAAAie,GAAY,IACnD7Q,EAAWzR,IAAW4F,IAAtB6L,OACFyR,EAAY,CAAE3oB,OAAMkX,UAC1B,GAAK5T,IAAEiR,KAAK,CAAEvU,QAAQ+nB,IAKf,GAAItI,OAAOmJ,QAAQ,qDAAsD,CAC9E,IAAMC,EAAmBvlB,IAAEwlB,OAAO,CAAE9oB,QAAQ+nB,GACtCgB,EAAU,uBAAOF,GAAP,CAAyBF,IACzCnjB,EAAS0iB,GAAca,IACvBhC,IAAYpH,QAAQ,gBAAiBoJ,QATP,CAC9B,IAAMA,EAAU,uBAAQhB,GAAW,IAAnB,CAAwBY,IACxCnjB,EAAS0iB,GAAca,IACvBvjB,EAAS6iB,GAAaM,IACtB5B,IAAYpH,QAAQ,gBAAiBoJ,GAOvCvjB,EAAS4iB,WC/DXE,cACAU,aDmF0B,kBAAM,SAACxjB,EAAUC,GAC3CD,EAAS2iB,MACT,IAAMnoB,EAAOsD,IAAEsC,IAAI,OAAQH,IAAWsiB,QAAQC,eAC9C,OAAOjB,IAAYhH,QAAQ,iBAAiBjW,MAAK,SAAAie,GAE/C,GADezkB,IAAEwS,KAAK,CAAE9V,QAAQ+nB,IAClBtI,OAAOmJ,QAAQ,oDAAqD,CAChF,IAAMC,EAAmBvlB,IAAEwlB,OAAO,CAAE9oB,QAAQ+nB,GAC5CviB,EAAS0iB,GAAcW,IACvB9B,IAAYpH,QAAQ,gBAAiBkJ,QAGrCrjB,EAAS0iB,GAAcH,IAEzBviB,EAAS4iB,WC/FXC,iBAGIY,G,8MACJtd,MAAQ,G,EAMRud,kBAAoB,SAAAC,GAClB,EAAKvc,MAAMyb,aAAac,EAASnpB,O,EAGnCopB,gBAAkB,WAAO,IACfpB,EAAkB,EAAKpb,MAAvBob,cACR,EAAKpb,MAAM8b,WAAWV,EAAchoB,O,EAGtCqpB,aAAe,WAAO,IACZrpB,EAAS,EAAK2L,MAAd3L,KACR,EAAK4M,MAAM8b,WAAW1oB,GACtB,EAAKmM,SAAS,CAAEmd,aAAa,K,qFAf7BzoB,KAAK+L,MAAM6b,gB,+BAkBH,IAAD,SACuC5nB,KAAK+L,MAA3Cmb,EADD,EACCA,QAASC,EADV,EACUA,cAAejhB,EADzB,EACyBA,UADzB,EAEuBlG,KAAK8K,MAA3B3L,EAFD,EAECA,KAAMspB,EAFP,EAEOA,YACd,OACE,6BACE,kBAAC,GAAD,CAASrc,YAAaA,IACpB,yBAAKxJ,UAAU,2BACb,kBAAC,KAAD,CACEA,UAAU,wBACV8lB,gBAAgB,SAChBC,YAAY,gDACZC,QAAS1B,EACT5nB,MAAO6nB,EACPvZ,SAAU5N,KAAK+L,MAAMyb,aACrBqB,iBAAkBnB,KAEnBP,GACC,yBAAKvkB,UAAU,kCACb,yBAAKA,UAAU,eACf,4BACEA,UAAU,6CACV0J,QAAStM,KAAK+L,MAAM0b,WACpBqB,SAAU5iB,GAEV,kBAAC,IAAD,MALF,+CAOA,4BACEtD,UAAU,6CACV0J,QAAStM,KAAKuoB,gBACdO,SAAU5iB,GAEV,kBAAC,IAAD,MALF,6EAOA,4BACEtD,UAAU,+BACV0J,QAAStM,KAAK+L,MAAMoc,aACpBW,SAAU5iB,GAEV,kBAAC,IAAD,MALF,iDASFuiB,GACA,yBAAK7lB,UAAU,kCACb,yBAAKA,UAAU,eAEf,4BACEA,UAAU,4DACV0J,QAAS,kBAAM,EAAKhB,SAAS,CAAEmd,aAAa,KAC5CK,SAAU5iB,GAEV,kBAAC,IAAD,MALF,sDASHuiB,GACC,yBAAK7lB,UAAU,6BACb,kBAAC,GAAD,CACEtD,MAAOH,EACPwpB,YAAY,mEACZ/lB,UAAU,eACVgL,SAAU,SAAAzO,GAAI,OAAI,EAAKmM,SAAS,CAAEnM,YAEpC,4BACEyD,UAAU,4CACV0J,QAAStM,KAAKwoB,aACdM,UAAW3pB,GAAQ+G,GAEnB,kBAAC,IAAD,MALF,2DAOA,4BACEtD,UAAU,4CACV0J,QAAS,kBAAM,EAAKhB,SAAS,CAAEmd,aAAa,KAC5CK,SAAU5iB,GAHZ,gD,GA5Fa+E,IAAMuD,WAsHpB5E,gBApIS,SAAAkB,GACtB,O,2WAAO,IACFA,EAAMoc,WAoIXS,GAFa/d,CAGbwe,IC1JWW,GAAc,CACzB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,W,gmBCnBK,MAAMC,GAAkBC,aAC7Bne,GAASA,EAAMsL,QAAQuJ,QACvB7U,GAASA,EAAMoe,KAAK/iB,KAAK2X,OAAOzc,GAChC,CAACse,EAASzJ,IACRzT,IAAEwU,KACAxU,IAAEyU,QACFzU,IAAE2G,IAAI,EAAE,EAAIoX,WAAUH,cAAahf,UAA7B,CACJ2iB,MAAM,GAAD,OAAKxD,EAAL,aAAkBH,EAAlB,KACL/gB,MAAOkhB,EACP2I,gBAAiBjT,IAAa7U,KAEhCoB,IAAE2mB,OAAOC,GAAOA,EAAGF,gBAAkB,IAAM1mB,IAAE6mB,QAAQD,EAAGrF,QAP1DvhB,CAQEkd,IAmKO4J,GAAuBN,aAClCne,GAASA,EAAMsL,QAAQjQ,KACvB2E,GAASA,EAAMsL,QAAQ8B,aACvBpN,GAASA,EAAMsL,QAAQC,OACvBvL,GAASA,EAAMsL,QAAQyD,WAnJD,CAAC1T,EAAM+R,EAAc7B,EAAQwD,EAAa,MAEhE,MAAM2P,EAAQ/mB,IAAE2G,IAAI,QAASiN,EAAOsJ,SAC9B8J,EAAUhnB,IAAE2G,IAAI,QAASiN,EAAOqT,WAChCC,EAAWlnB,IAAE2G,IAAI,QAASiN,EAAOuT,YACjCC,EAAcpnB,IAAEsC,IAAI,QAASsR,EAAOwT,aACpCC,EAAcrnB,IAAEsC,IAAI,QAASsR,EAAOyT,aACpCC,EAAqBtnB,IAAE2G,IAAI,QAASiN,EAAO0T,oBAE3CC,EAAiB,CAACvnB,IAAEmb,QAAQ,CAAC,mBAAoB,CAAC,UAClDqM,EAA+BH,EAEjC,CACErnB,IAAEmb,QACA,CACEzK,GACE1Q,IAAEsL,IACAtL,IAAE2G,IACAyM,GAAQA,EAAI2K,WAAasJ,EAAcjU,EAAI7O,WAAWkX,UAAY,EAClE/K,EAAKiD,WAIb,CAAC,UAZL4T,EAeEE,EAAqB,CACzBznB,IAAE4T,OAAO8T,GAAO1nB,IAAE2G,IAAI,WAAY+gB,EAAI/T,SAASvF,SAASiZ,IACxDrnB,IAAE2G,IAAI+gB,IACJ,MAAMC,EAAY3nB,IAAE7C,UAAU,CAAE4gB,SAAUsJ,GAAeK,EAAI/T,SACvDiU,EAAYF,EAAI/T,QAAQgU,GAAW9V,MACnCgW,EAAU7nB,IAAEwU,KAAK,CACrBxU,IAAE8nB,KAAKH,GACP3nB,IAAE+nB,OAAO,YACT/nB,IAAEwlB,OAAOpS,GAAOkU,EAAmBlZ,SAASgF,EAAI2K,WAAa3K,EAAIvB,QAAU+V,IAH7D5nB,CAIb0nB,EAAI/T,SAIP,OAAO,MACF+T,EADL,CAEEM,wBALelrB,KAAKkY,KACpBhV,IAAE4W,OAAO,CAACqR,EAAMC,IAAUD,GAAQC,EAAMrW,MAAQ+V,EAAY,MAAS,EAAG,EAAGC,QAO/E7nB,IAAEmb,QAAQ,CAAC,2BAA4B,CAAC,UAEpCgN,EAAe,CAACC,EAAOC,EAAY,SAAW,CAClDroB,IAAE4T,OAAO8T,GAAO1nB,IAAE2G,IAAI,WAAY+gB,EAAI/T,SAASvF,SAASiZ,IACxDrnB,IAAEmb,QACA,CACEuM,IACE,MAAMrjB,EAASrE,IAAEwS,KAAK,CAAEuL,SAAUsJ,GAAeK,EAAI/T,SAC/C2U,EAAOlR,EAAW/S,EAAOzF,KAAO,GACtC,OAAOoB,IAAE4N,MAAoB,SAAdya,GAAwBE,IAAWA,IAAUH,EAAOE,KAGvE,CAACD,KAGCG,EAAgBH,GAAa,CACjCroB,IAAE4T,OAAO8T,GAAO1nB,IAAE2G,IAAI,WAAY+gB,EAAI/T,SAASvF,SAASiZ,IACxDrnB,IAAEmb,QACA,CACEuM,IACE,MAAM7V,EAAQ7R,IAAEwS,KAAK,CAAEuL,SAAUsJ,GAAeK,EAAI/T,SAC9C2U,EAAOlR,EAAWvF,EAAMjT,IAC9B,OAAOoB,IAAE4N,MAAoB,QAAdya,EAAsBE,KAAYA,IAAU,aAAcD,KAG7E,CAACD,KAGCI,EAAiB,CAACJ,EAAY,SAAW,CAC7CroB,IAAEmb,QACA,CACEuM,IACE,MAAMgB,EAAYjT,EAAaiS,EAAIhP,eACnC,OAAO1Y,IAAE4N,MAAM5N,IAAE0U,SAASgT,EAAInY,YAAa,yBAA0BmZ,KAGzE,CAACL,KAGCM,EACJ,CACE,CAAC5pB,EAAKC,SAAUuoB,EAChB,CAACxoB,EAAKO,mBAAoBkoB,EAC1B,CAACzoB,EAAKE,aAAcwoB,EACpB,CAAC1oB,EAAKG,UAAWspB,EAAc,OAC/B,CAACzpB,EAAKI,WAAYqpB,EAAc,QAChC,CAACzpB,EAAKK,QAAS+oB,EAAa,aAAc,OAC1C,CAACppB,EAAKM,SAAU8oB,EAAa,SAC7B,CAACppB,EAAKQ,eAAgBkpB,EAAe,OACrC,CAAC1pB,EAAKS,eAAgBipB,EAAe,SACrCrB,IAAgBG,EA8CpB,OA5CevnB,IAAEwU,KACfxU,IAAE4oB,QAAQ,CACR5oB,IAAE2G,IAAI+gB,GAAG,MACJA,EADI,CAEP/T,QAAS+T,EAAI/T,QAAQC,OACnB,CAACR,EAAKxM,KAAWwM,EAAIuK,iBAA6B,IAAV/W,EACxC8gB,EAAI/T,YAGRC,EAAOiV,YAAP,CAAsBC,GA1HP,EAAClV,EAAQmV,KAC5B,MAAMtc,EAAQzM,IAAE4N,MAAMnO,EAAe,QAASmU,GACxCtS,EAAOtB,IAAE4N,MAAM,KAAM,OAAQgG,GAC7B/F,EAAW7N,IAAE4N,MAAM7N,EAAkB,WAAY6T,GAEvD,OAAO5T,IAAE4T,OAAO8T,KACV7Z,IAAa9N,IAAqB8N,EAASO,SAASsZ,EAAI7Z,aAI1D6Z,EAAInY,YAAc9C,EAAM,IACxBib,EAAInY,YAAc9C,EAAM,MACtBnL,GAAQomB,EAAIpY,UAAU8K,WAAW9Y,KAEpCynB,IA4GgCC,CAAapV,EAAOiV,WAAYC,KAC9DlV,EAAOmJ,UACN/c,IAAE2G,IAAI+gB,GAAG,MAAUA,EAAV,CAAe/T,QAAS3T,IAAE4T,OAAOR,IAAQA,EAAIC,OAAQqU,EAAI/T,YACpEC,EAAOmJ,UACLnJ,EAAOqV,cACPjpB,IAAE2G,IAAI+gB,GAAG,MAAUA,EAAV,CAAe/T,QAAS3T,IAAE4T,OAAOR,GAAOA,EAAIC,OAAQqU,EAAI/T,YACnEC,EAAOmJ,WACJnJ,EAAOqV,eACPrV,EAAOoJ,mBACRhd,IAAE2G,IAAI+gB,IACJ,MAAMwB,EAAe,GACrB,OAAO,MACFxB,EADL,CAEE/T,QAAS3T,IAAE4T,OAAOR,IAChB,MAAM+V,EAAiBD,EAAa9a,SAASgF,EAAI2K,UAEjD,OADAmL,EAAa7S,KAAKjD,EAAI2K,WACdoL,GACPzB,EAAI/T,cAGZoT,EAAMppB,QAAUqpB,EAAQrpB,QAAUupB,EAASvpB,SAC1CqC,IAAE4T,OAAO8T,IACP,MAAM0B,EAAWppB,IAAE2G,IAAI,WAAY+gB,EAAI/T,SACvC,QACIoT,EAAMppB,QAAUqC,IAAEqpB,MAAM3sB,GAAQ0sB,EAAShb,SAAS1R,GAAOqqB,OACzDC,EAAQrpB,QAAUqC,IAAEiR,KAAKvU,GAAQ0sB,EAAShb,SAAS1R,GAAOsqB,OAC1DE,EAASvpB,SAAWqC,IAAEiR,KAAKvU,GAAQ0sB,EAAShb,SAAS1R,GAAOwqB,MAGpElnB,IAAE4T,OAAO8T,GAAO1nB,IAAEspB,KAAK5B,EAAI/T,aACxBgV,EACH/U,EAAOlD,MAAP,CAAgBoY,GAASS,aAAYT,EAAOlV,EAAOlD,KAAK8Y,OAAQ,CAAE3W,KAAM,CAAC,aAxC9D7S,CA0Cb0D,K,6kBC7HJ,MAAM+lB,GAAqB,IACrBC,GAAiB,CACrB,CACEnI,MAAO,mFACP1kB,MAAOkC,EAAKC,SAEd,CACEuiB,MAAO,2LACP1kB,MAAOkC,EAAKO,mBAMd,CACEiiB,MAAO,4IACP1kB,MAAOkC,EAAKG,UAEd,CACEqiB,MAAO,4IACP1kB,MAAOkC,EAAKI,WAEd,CACEoiB,MAAO,4HACP1kB,MAAOkC,EAAKK,QAEd,CACEmiB,MAAO,4HACP1kB,MAAOkC,EAAKM,SAEd,CACEkiB,MAAO,yFACP1kB,MAAOkC,EAAKQ,eAEd,CACEgiB,MAAO,+FACP1kB,MAAOkC,EAAKS,gBAoBV0lB,GAAqB,CACzBvE,gBACA0C,aACAsG,YLqcyB,MACzBroB,KAAMqb,KKrcNoI,gBACAC,eAGF,MAAM4E,WAAoB7d,YAAW,eAAD,oBAUlC1D,MAAQ,CAAEwhB,eAAgB,GAAIC,eAAgB,IAVZ,KAYlCzG,UAAYrjB,IAAE+pB,MAAM,CAACrtB,EAAMG,KACzB,MAAM+W,EAAM,MAAQrW,KAAK+L,MAAMsK,OAAnB,CAA2B,CAAClX,GAAOG,IAC/CU,KAAK+L,MAAM+Z,UAAUzP,GACrB6P,IAAYpH,QAAQ,SAAUzI,KAfE,KAkBlC+V,YAAc,KACZpsB,KAAK+L,MAAMqgB,cACXpsB,KAAKsL,SAAS,CAAEihB,eAAgB,KAChCrG,IAAYpH,QAAQ,SAAUS,KArBE,KAwBlCkN,UAAY,KAAO,MACTvmB,EAAclG,KAAK+L,MAAnB7F,UACRlG,KAAKsL,SAAS,CAAEihB,eAAgB,MAC/BrmB,GAAalG,KAAK+L,MAAMqX,gBA3BO,KA8BlCsJ,eAAiBjqB,IAAEkqB,SAAS,IAAMrtB,IAChCU,KAAK8lB,UAAU,OAAQxmB,KA/BS,KAkClCstB,mBAAqBnqB,IAAEoqB,SAASX,GAAqB,GAAKra,IACxD,MAAMib,EAAYrqB,IAAEsqB,KAAK,EAAG/sB,KAAK8K,MAAMyhB,eAAe1a,EAAMsJ,gBAC5Dnb,KAAKsL,SAAUR,IAAD,CACZyhB,eAAe,MACVzhB,EAAMyhB,eADG,CAEZ,CAAC1a,EAAMsJ,eAAsC,IAAtB1Y,IAAEspB,KAAKe,GAAmB,KAAOA,SAvC5B,KA4ClCE,mBAAqBvqB,IAAEoqB,SAASX,GAAqB,GAAKra,IACpDpP,IAAEiO,QAAQmB,EAAMuE,UAClBpW,KAAKsL,SAAUR,IAAD,CACZyhB,eAAgB9pB,IAAEyL,KAAK2D,EAAMsJ,cAAerQ,EAAMyhB,mBAGtD,MAAMU,EAAexqB,IAAEyqB,MAAM,OAAQrb,EAAMuE,SAC3C,IAAK6W,EAAc,OAP+C,MAS1D7W,EAAYpW,KAAK+L,MAAjBqK,QACF+W,EAAiBF,EAAa/W,SAC9BkX,EAAuB3qB,IAAEoS,SAC5BgB,GACCA,EAAIK,WAAaiX,GACjBtX,EAAIsF,gBAAkBtJ,EAAMsJ,eAC5BtF,EAAIC,SAAWmX,EAAanX,QAC5BD,EAAIlO,KAAOslB,EAAatlB,KAC1ByO,GAEIiX,EAAa5qB,IAAEmb,QACnB,QACA,OACAnb,IAAE4oB,QAAQ5oB,IAAE2G,IAAKyM,GAASA,IAAQoX,EAAeG,EAAuBvX,EAAMhE,EAAMuE,WAEhFkX,EAAc7qB,IAAEyqB,MAAM,OAAQG,GAC9BE,EAAa,MACd1b,EADc,CAEjBiT,gBAAiBwI,GAAeA,EAAY3lB,KAC5CyO,QAASiX,IAEP5qB,IAAEiO,QAAQ2c,GACZrtB,KAAKsL,SAAUR,IAAD,CACZyhB,eAAe,MACVzhB,EAAMyhB,eADG,CAEZ,CAAC1a,EAAMsJ,eAAgB,UAI3Bnb,KAAKsL,SAAUR,IAAD,CACZyhB,eAAe,MACVzhB,EAAMyhB,eADG,CAEZ,CAAC1a,EAAMsJ,eAAgB,CACrBoS,KACIziB,EAAMyhB,eAAe1a,EAAMsJ,gBAAkB,CAACtJ,WAO5D2b,qBAAsB,MAAD,EACWxtB,KAAK+L,MAA3B7F,EADW,EACXA,UAAWmQ,EADA,EACAA,OACnB,OACE,yBAAKzT,UAAU,iBACb,yBAAKA,UAAU,0CACb,kBAAC,GAAD,CACEtD,MAAO+W,EAAOlD,MAAQ,GACtBwV,YAAY,qFACZ/lB,UAAU,eACVgL,SAAU5N,KAAK0sB,kBAGnB,yBAAK9pB,UAAU,4CACb,kBAACsN,GAAD,CAAaC,YAAakG,EAAOiV,WAAY1d,SAAU5N,KAAK8lB,UAAU,iBAExE,yBAAKljB,UAAU,eACf,yBAAKA,UAAU,4BACb,kBAAC,GAAD,MACA,4BAAQA,UAAU,6CAA6C0J,QAAStM,KAAKosB,aAC3E,kBAAC,IAAD,MADF,gGAGA,4BACEtD,SAAU5iB,EACVtD,UAAU,+BACV0J,QAAStM,KAAKysB,WAEd,kBAAC,IAAD,MALF,uDAYRgB,gBAAiB,MAAD,EACcztB,KAAK+L,MAAzB4T,EADM,EACNA,QAAStJ,EADH,EACGA,OACjB,OACE,yBAAKzT,UAAU,WACb,yBAAKA,UAAU,kBACb,2BAAOA,UAAU,SAAjB,iLACA,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,iBACb,2BAAOA,UAAU,SAAjB,8EACA,kBAAC,KAAD,CACE8qB,mBAAmB,EACnB9qB,UAAU,iBACV8lB,gBAAgB,SAChBC,YAAY,0CACZgF,SAAO,EACP/E,QAASjJ,EACTrgB,MAAOmD,IAAE4N,MAAM,KAAM,UAAWgG,GAChCzI,SAAU5N,KAAK8lB,UAAU,cAG7B,yBAAKljB,UAAU,iBACb,2BAAOA,UAAU,SAAjB,kGACA,kBAAC,KAAD,CACE8qB,mBAAmB,EACnB9qB,UAAU,iBACV8lB,gBAAgB,SAChBC,YAAY,0CACZgF,SAAO,EACP/E,QAASjJ,EACTrgB,MAAOmD,IAAE4N,MAAM,KAAM,YAAagG,GAClCzI,SAAU5N,KAAK8lB,UAAU,gBAG7B,yBAAKljB,UAAU,iBACb,2BAAOA,UAAU,SAAjB,+EACA,kBAAC,KAAD,CACE8qB,mBAAmB,EACnB9qB,UAAU,iBACV8lB,gBAAgB,SAChBC,YAAY,0CACZgF,SAAO,EACP/E,QAASjJ,EACTrgB,MAAOmD,IAAE4N,MAAM,KAAM,aAAcgG,GACnCzI,SAAU5N,KAAK8lB,UAAU,mBAKjC,6BACE,kBAAC,GAAD,CACEnX,QAASlM,IAAE4N,OAAM,EAAO,WAAYgG,GACpCzI,SAAU5N,KAAK8lB,UAAU,aAF3B,4IAODrjB,IAAEsC,IAAI,WAAYsR,IACjB,oCACE,6BACE,kBAAC,GAAD,CACE1H,QAASlM,IAAE4N,OAAM,EAAO,eAAgBgG,GACxCzI,SAAWtO,IACTU,KAAK8lB,UAAU,eAAgBxmB,GAC3BmD,IAAEsC,IAAI,oBAAqBsR,IAC7BrW,KAAK8lB,UAAU,qBAAqB,KAIxC,wEATF,iDAYF,6BACE,kBAAC,GAAD,CACEnX,QAASlM,IAAE4N,OAAM,EAAO,oBAAqBgG,GAC7CzI,SAAWtO,IACTU,KAAK8lB,UAAU,oBAAqBxmB,GAChCmD,IAAEsC,IAAI,eAAgBsR,IACxBrW,KAAK8lB,UAAU,gBAAgB,KALrC,6MAkBZ8H,iBAAkB,MAAD,EACa5tB,KAAK+L,MAAzB4T,EADO,EACPA,QAAStJ,EADF,EACEA,OACjB,OACE,yBAAKzT,UAAU,YACb,6BACE,2BAAOA,UAAU,SAAjB,iEACA,kBAAC,KAAD,CACE+lB,YAAY,gHACZ/lB,UAAU,SACV8lB,gBAAgB,SAChBmF,aAAa,EACbjF,QAASuD,GACT7sB,MAAOmD,IAAE4N,MAAM8b,GAAe,GAAI,cAAe9V,GACjDzI,SAAU5N,KAAK8lB,UAAU,kBAG5B,CACCtkB,EAAKE,YACLF,EAAKG,SACLH,EAAKI,UACLJ,EAAKK,OACLL,EAAKM,QACLN,EAAKO,mBACL8O,SAASpO,IAAEsC,IAAI,oBAAqBsR,KACpC,6BACE,2BAAOzT,UAAU,SAAjB,mCACA,kBAAC,KAAD,CACEA,UAAW2G,IAAW,iBAAkB,CACtC,cAAe9G,IAAEsC,IAAI,cAAesR,KAEtCqS,gBAAgB,SAChBC,YAAY,0CACZC,QAASjJ,EACTrgB,MAAOmD,IAAE4N,MAAM,KAAM,cAAegG,GACpCzI,SAAU5N,KAAK8lB,UAAU,kBAI9B,CAACtkB,EAAKE,aAAamP,SAASpO,IAAEsC,IAAI,oBAAqBsR,KACtD,6BACE,2BAAOzT,UAAU,SAAjB,sIACA,kBAAC,KAAD,CACE8qB,mBAAmB,EACnB9qB,UAAU,iBACV8lB,gBAAgB,SAChBC,YAAY,0CACZC,QAASjJ,EACTgO,SAAO,EACPruB,MAAOmD,IAAE4N,MAAM,GAAI,qBAAsBgG,GACzCzI,SAAU5N,KAAK8lB,UAAU,0BAQrCgI,SAAU,MAAD,EACsE9tB,KAAK+L,MAA1E7F,EADD,EACCA,UAAW6nB,EADZ,EACYA,aAAc1oB,EAD1B,EAC0BA,MAAOgR,EADjC,EACiCA,OAAQwD,EADzC,EACyCA,WAAY3B,EADrD,EACqDA,aADrD,EAEoClY,KAAK8K,MAAxCwhB,EAFD,EAECA,eAAgBC,EAFjB,EAEiBA,eAClByB,EAAcD,EAAa3tB,OAASksB,EACpC2B,EAAcxrB,IAAEyrB,MAAM,EAAG5B,EAAgByB,GAEzClE,EAAcpnB,IAAEsC,IAAI,oBAAqBsR,GACzC8X,EAA2B,CAAC3sB,EAAKG,SAAUH,EAAKI,WAAWiP,SAASgZ,GACpEuE,EAA0B,CAAC5sB,EAAKK,OAAQL,EAAKM,SAAS+O,SAASgZ,GAC/DwE,EAAuB,CAC3B7sB,EAAKE,YACLF,EAAKG,SACLH,EAAKI,UACLJ,EAAKK,OACLL,EAAKM,QACLN,EAAKO,mBACL8O,SAASgZ,GACLyE,EAAkB7rB,IAAEsC,IAAI,oBAAqBsR,GAC7CkY,EAAsB9rB,IAAEyrB,MAC5B,EACAnF,GAAY3oB,OACZqC,IAAE2Q,KACA3Q,IAAE4oB,QAAQ,CACRgD,GAAwBC,KACrB7rB,IAAE2G,IAAI,QAASiN,EAAOsJ,YACtBld,IAAE2G,IAAI,QAASiN,EAAOqT,eAK/B,OACE,yBAAK9mB,UAAU,oBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,gBACZ5C,KAAKwtB,qBACN,kBAAC,GAAD,CAAgBhlB,MAAM,8CAAWxI,KAAKytB,iBACtC,kBAAC,GAAD,CAAgBjlB,MAAM,gEAAcxI,KAAK4tB,mBAE1C1nB,GAAa,kBAACvD,EAAD,QACX3C,KAAK+L,MAAMmb,QAAQ9mB,QACpB,yBAAKwC,UAAU,mBACb,6EACC5C,KAAK+L,MAAMmb,QAAQ9d,IAAKolB,GACvB,kBAAC,GAAD,CACEllB,IAAKklB,EAAOrvB,KACZiO,KAAMohB,EAAOrvB,KACbyD,UAAU,oCACVsK,OAAQzK,IAAEsC,IAAI,SAAUypB,KAAYxuB,KAAK+L,MAAMsK,OAC/ClJ,SAAU,KACRnN,KAAK+L,MAAMyb,aAAagH,GACxBxuB,KAAK+L,MAAM0b,kBAMrB,yBAAK7kB,UAAU,YACZH,IAAEiO,QAAQqd,KAAkB7nB,IAAcb,EAAQA,EAAMI,QAAU,iGACjES,GACA+nB,EAAY7kB,IAAI,CAACqlB,EAAeC,KAC9B,MAAM5B,EAAYP,EAAekC,EAActT,eACzCtJ,EAAQpP,IAAEksB,MAAM7B,IAAc2B,EAChCxP,IAAOqE,QAAQC,IAAI1R,GACvB,IAAI+c,EAAW,EACf,MAAMC,EAAmB,GACnBzY,EAAUvE,EAAMuE,QAAQhN,IAAI,CAACyM,EAAKxM,KACtC,MAAMylB,EAA6BD,EAAiBhe,SAASgF,EAAI2K,UAUjE,OATAqO,EAAiB/V,KAAKjD,EAAI2K,UACZ,IAAVnX,EACFulB,EAAW,EAEVE,GACDjZ,EAAIvB,QAAU7R,IAAEsC,IAAI,CAACsE,EAAQ,EAAG,SAAUwI,EAAMuE,WAEhDwY,GAAY,GAEP,MACF/Y,EADL,CAEE+Y,WACAE,iCAGE5V,EACJhB,EAAarG,EAAMsJ,gBACnBjD,EAAarG,EAAMsJ,eAAejC,uBACpC,OACE,yBAAKtW,UAAU,aAAa0G,IAAKuI,EAAMsJ,eACrC,yBAAKvY,UAAU,aACb,yBACEA,UAAW2G,IAAW,aAAc,CAClC4L,OAA4B,MAApBtD,EAAME,UACdgd,QAA6B,OAApBld,EAAME,UACfid,QAA6B,OAApBnd,EAAME,UACfmD,OAA4B,MAApBrD,EAAME,UACdkd,KAA0B,SAApBpd,EAAME,aAGd,0BAAMnP,UAAU,gBAAgBiP,EAAME,WACtC,0BAAMnP,UAAU,gBAAgBiP,EAAMG,aAExC,6BACGH,EAAMsB,KAAM,IACb,0BAAMvQ,UAAU,cAAhB,IACIsW,GAA0BA,EAAuBsB,QAAQ,GAD7D,MAIF,yBAAK5X,UAAU,gBACb,uBACEssB,KAAI,sCAAiCC,KAAY5qB,UAAU,CACzD6qB,aAAc,UAAGvd,EAAMsB,KAAT,YAAiBtB,EAAM+B,YAAaoP,QAChD,aACA,QAGJxX,OAAO,SACP6jB,IAAI,uBAEJ,kBAAC,IAAD,QAGJ,yBAAKzsB,UAAU,eACd,MACC,MAAM0sB,GAAY7sB,IAAEiO,QAAQoc,GACtByC,EAAeD,EACjB,EAAIzd,EAAMyS,kBAAoB7hB,IAAEspB,KAAKe,GACrCjb,EAAMyS,kBACJkL,IAA6B,IAAjBD,GAAkD,IAA5B1d,EAAMyS,mBAC9C,OACE,yBACE1hB,UAAW2G,IAAW,qBAAsB,CAC1C2D,OAAQoiB,KAGV,kBAAC,IAAD,CACE1sB,UAAW2G,IAAW,eAAgB,CAAEuf,UAAW0G,IACnDljB,QAAS,IAAMkjB,GAAWxvB,KAAKgtB,mBAAmBnb,KAEpD,0BAAMjP,UAAU,UACb2sB,EADH,IACkB1d,EAAMyS,mBAExB,kBAAC,IAAD,CACE1hB,UAAW2G,IAAW,cAAe,CAAEuf,UAAWwG,IAClDhjB,QAAS,IAAMgjB,GAAYtvB,KAAK4sB,mBAAmB/a,OArB1D,IA2BH,yBAAKjP,UAAU,WACXH,IAAEiO,QAAQ0F,IACV,yBAAKxT,UAAU,SACb,yBAAKA,UAAU,WACb,+BACkB,IAAf8rB,GACC,+BACE,4BACE,wBAAI9rB,UAAU,UACd,wBAAIA,UAAU,aACd,wBAAIA,UAAU,UACd,wBAAIA,UAAU,SAAd,SACA,wBAAIA,UAAU,UACd,wBAAIA,UAAU,UAAd,QACA,wBAAIA,UAAU,UAAd,OACA,wBAAIA,UAAU,UAAd,QACA,wBAAIA,UAAU,UAAd,SACA,wBAAIA,UAAU,UAAd,WACA,wBAAIA,UAAU,SAAd,SACA,wBAAIA,UAAU,YAAd,YACA,wBAAIA,UAAU,WAIpB,kBAAC,KAAD,CACE6sB,eAAe,OACfC,eAAe,OACfC,SAAS,QACTC,yBAAuB,EACvBtf,SAAU4b,IAET9V,EAAQhN,IAAI,CAACyM,EAAKxM,KACjB,GAAIwM,EAAIuK,iBAA6B,IAAV/W,EACzB,OAAO,KAET,MAAMwmB,EAAYtB,EAAoB9X,QAAQZ,EAAI2K,UAClD,IAAIsP,EAAiBC,EACrB,GAAIla,EAAIuL,eAAiBvL,EAAIlO,OAASkK,EAAMiT,gBAAiB,CAC3D,MAAMkL,EAAYna,EAAIvB,MAAQuB,EAAIuL,cAKlC0O,GAJAC,EAAWttB,IAAEwtB,cACVpa,GAAQA,EAAIvB,MAAQ0b,EACrB5Z,IAE2B/M,EAE/B,MAAM6mB,EAAMrW,EAAWhE,EAAIxU,KAAO,GAGlC,IAAI8uB,EAAkB,KAmCtB,OAlCIlR,GAEFkR,EACE,oCACE,0BAAMvtB,UAAU,kBACb,IACAstB,EAAIvU,gBAAkBpc,KAAKiY,MAAM0Y,EAAIvU,gBACrC,MACAuU,EAAI1S,WAAa,EAAI,IAAM,GAC3B0S,EAAI1S,YAAcje,KAAKiY,MAAM0Y,EAAI1S,YACjC,MACA0S,EAAI9V,IAAM8V,EAAI9V,GAAGG,QAPpB,OAWK1E,EAAI2K,WAAa8N,IAE1B6B,EACE,oCACG,MACAhC,GAA4B+B,EAAI1S,YAC/B,wCACM0S,EAAI1S,WAAa,EAAI,IAAM,IADjC,OACsCje,KAAKiY,MACvC0Y,EAAI1S,cAIT4Q,GAA2B8B,EAAI9V,IAC9B,8BAAO8V,EAAI9V,GAAGG,QAAd,QAON,wBACEjR,IAAKuM,EAAIC,OAAS,IAAMD,EAAI2K,SAC5B5d,UAAW2G,IAAW,CACpB6mB,OAAQva,EAAI9O,YACZspB,OAAQxa,EAAIlO,OAASkK,EAAMiT,mBAG7B,wBAAIliB,UAAU,SACXiT,EAAIiZ,2BAA6B,GAAjC,WAA0CjZ,EAAI+Y,WAEjD,wBACEhsB,UAAU,WACV0E,MACEuoB,GAAa,EACT,CAAES,WAAY,OAAQpf,MAAO6X,GAAY8G,IACzC,IAGLha,EAAI2K,WACFsP,GACD,0BAAMltB,UAAU,oBACd,8BAAOktB,GACP,kBAAC,IAAD,OAGHK,GAEH,wBACEvtB,UAAW2G,IAAW,QAAS,CAC7BgnB,GAAI1a,EAAIC,OACR0a,GAAI3a,EAAI+L,QAGT/L,EAAIC,QACH,yBAAKlT,UAAU,SACZiT,EAAI9O,YACH,KAEA,kBAAC,KAAD,CACE0pB,QACE,iYAKFC,iBAAiB,oBAPnB,QAcL7a,EAAI+L,MAAQ,yBAAKhf,UAAU,SAAf,OAEf,wBAAIA,UAAU,SACZ,kBAAC,GAAD,CACEuJ,iBAAiB,sBACjBC,YACE,0BAAMxJ,UAAU,cAEbiT,EAAIuL,cAA4B,GAAZvL,EAAIvB,OAAe,IACvCqc,KAAQ9a,EAAIvB,OAAOrM,OAAO,QAG/B0C,UAAU,OAEV,yBAAK/H,UAAU,iBACZqc,IACC,oCACE,6BACE,0BAAMrc,UAAU,SAAhB,eACCiT,EAAIxU,IAEP,6BACE,0BAAMuB,UAAU,SAAhB,eACCiT,EAAIK,WAIX,6BACE,0BAAMtT,UAAU,SAAhB,oCACA,kBAAC,IAAD,CACEguB,OAAK,EACLrtB,GAAI3C,EAAOM,QAAQC,QAAQ,CAAEE,GAAIwU,EAAIK,YAEpCL,EAAI2K,SAJP,KAImB3K,EAAI4K,eAJvB,QAOC7O,GAAOiE,EAAKhE,IACb,yBAAKjP,UAAU,aACb,0BAAMA,UAAU,SAAhB,8BADF,IAEG+tB,KAAQ/e,GAAOiE,EAAKhE,IAAQ5J,OAAO,QAGvCxF,IAAEyf,SAASgO,EAAIvU,iBACdlZ,IAAEyf,SAASgO,EAAI1S,aACb,yBAAK5a,UAAU,aACb,0BAAMA,UAAU,SAAhB,uBACQstB,EAAIvU,eAAenB,QAAQ,GAAI,KAEtC0V,EAAI1S,YAAc,EAAlB,WACO0S,EAAI1S,WAAWhD,QAAQ,IAC3B0V,EAAI1S,WAAWhD,QAAQ,IAGhC0V,EAAI9V,IACH,yBAAKxX,UAAU,aACb,0BAAMA,UAAU,SAAhB,QACA,8BAAOstB,EAAI9V,GAAGG,QAAd,QAGF1E,EAAI9O,aACJ,yBAAKnE,UAAU,WACb,kBAAC,IAAD,MADF,oNAKCiT,EAAI9O,aACL,sCACK8O,EAAI6L,MACL,6BACE,0BAAM9e,UAAU,SAAhB,8BACCiT,EAAI6L,QAGN7L,EAAIyL,UACL,6BACE,0BAAM1e,UAAU,SAAhB,8BACCiT,EAAIyL,YAGNzL,EAAIuL,eACL,6BACE,0BAAMxe,UAAU,SAAhB,gDADF,IAEG+tB,KAAQ9a,EAAIuL,eAAenZ,OAAO,QAGtC4N,EAAIiL,kBACH,6BACE,yBAAKle,UAAU,WACb,kBAAC,IAAD,MADF,oFAEmBiT,EAAIiL,kBAEtBjL,EAAImL,oBACH,6BACE,0BAAMpe,UAAU,SAAhB,qGACqB,KAEpBiT,EAAImL,oBAGRnL,EAAIqL,eACH,6BACE,0BAAMte,UAAU,SAAhB,qGACqB,KAEpBiT,EAAIqL,gBAKZrL,EAAIuL,cAA4B,GAAZvL,EAAIvB,OAAe,mDAMlD,wBAAI1R,UAAU,SACZ,yBAAKA,UAAU,cACZiT,EAAI5D,OAAuB,MAAd4D,EAAI5D,OAChB,yBACEG,IAAG,UAAKC,IAAL,mBAAsCwD,EAAI5D,MAA1C,QACHK,IAAKuD,EAAI5D,QAGE,MAAd4D,EAAI5D,OAAiB,OAG1B,wBAAIrP,UAAU,eAAeiT,EAAI/B,MACjC,wBAAIlR,UAAU,cAAciT,EAAI9B,KAChC,wBAAInR,UAAU,eAAeiT,EAAI3B,MACjC,wBAAItR,UAAU,gBAAgBiT,EAAI1B,OAClC,wBAAIvR,UAAU,kBAAkBiT,EAAI0L,SACpC,wBAAI3e,UAAU,SACXiT,EAAIhD,MACJgD,EAAIhD,MAAQ,IAAM,IAErB,wBAAIjQ,UAAU,YACXiT,EAAIE,SACJF,EAAIE,SAAW,IAAM,IAExB,wBACEnT,UAAW2G,IAAW,OAAQ,CAC5B8mB,OAAQxa,EAAIlO,OAASkK,EAAMiT,mBAG7B,kBAAC,KAAD,CACE2L,QAAS5pB,GAAiBgP,GAC1B6a,iBAAiB,oBAEhBhpB,GAAWmO,EAAI7O,YACf6O,EAAI9O,YAAc,GAAK,kBAepDb,GAAa8nB,GACb,4BACEprB,UAAU,yBACV0J,QAAS,IACPtM,KAAKsL,SAAUR,IAAD,CAAcwhB,eAAgBxhB,EAAMwhB,eAAiB,OAHvE,oBAgBC1iB,mBA3vBUkB,IAChB,CACL6U,QAASqJ,GAAgBle,GACzB+O,WAAY/O,EAAMsL,QAAQyD,WAC1BzD,QAAStL,EAAMsL,QAAQA,QACvB8B,aAAcpN,EAAMsL,QAAQ8B,aAC5B6V,aAAcxE,GAAqBze,GACnC3E,KAAM2E,EAAMsL,QAAQjQ,KACpBkQ,OAAQvL,EAAMsL,QAAQC,OACtBhR,MAAOyF,EAAMsL,QAAQ/Q,OAASyF,EAAM2J,UAAUpP,MAC9Ca,UAAW4E,EAAMsL,QAAQlQ,WAAa4E,EAAM2J,UAAUvO,UACtDghB,QAASpc,EAAMoc,QAAQA,QACvBC,cAAerc,EAAMoc,QAAQC,gBA+uBOQ,GAAzB/d,CAA6CyiB,I,OCx0B5D,MAAMwE,GAAe5e,GACnB,yBAAKG,IAAG,UAAKC,IAAL,mBAAsCJ,EAAtC,QAAmDK,IAAKL,IAGnD,SAAS6e,IAAY,QAAE9vB,EAAF,UAAWkF,IAC7C,OACE,yBAAKtD,UAAU,gBACZH,IAAEiO,QAAQ1P,KAAakF,GAAa,+FACpCA,GAAa,kBAACvD,EAAD,OACZuD,GACA,+BACE,+BACE,4BACE,wBAAItD,UAAU,UACd,wBAAIA,UAAU,WACd,wBAAIA,UAAU,YAAd,QACA,wBAAIA,UAAU,QAAd,QACA,wBAAIA,UAAU,SAAd,YACA,wBAAIA,UAAU,UAAd,OACA,wBAAIA,UAAU,uBACd,wBAAIA,UAAU,UAAd,MAEA,wBAAIA,UAAU,cAAciuB,GAAY,QACxC,wBAAIjuB,UAAU,aAAaiuB,GAAY,OACvC,wBAAIjuB,UAAU,YAAYiuB,GAAY,MACtC,wBAAIjuB,UAAU,YAAYiuB,GAAY,OACtC,wBAAIjuB,UAAU,YAAYiuB,GAAY,MACtC,wBAAIjuB,UAAU,YAAYiuB,GAAY,MACtC,wBAAIjuB,UAAU,YAAYiuB,GAAY,MACtC,wBAAIjuB,UAAU,YAAYiuB,GAAY,MACtC,wBAAIjuB,UAAU,aAAd,UAEA,wBAAIA,UAAU,YAAd,cAGJ,+BACG5B,EAAQoI,IAAI,CAAC0U,EAAQiT,IAElB,wBAAInuB,UAAU,SAAS0G,IAAKwU,EAAO3e,MACjC,wBAAIyD,UAAU,SACK,IAAhBmuB,EAAoB,kBAAC,KAAD,MAApB,WAA2CA,EAAc,IAE5D,wBAAInuB,UAAU,UACXkb,EAAOkT,OAAS,GACf,yBAAKpuB,UAAU,oBACb,8BAAOkb,EAAOkT,QACd,kBAAC,IAAD,OAGHlT,EAAOkT,OAAS,GACf,yBAAKpuB,UAAU,sBACb,+BAAQkb,EAAOkT,QACf,kBAAC,IAAD,SAGDlT,EAAOkT,QAAUvuB,IAAE8C,SAASuY,EAAOkT,SACpC,yBAAKpuB,UAAU,sBACb,8BAAOkb,EAAOkT,UAIpB,wBAAIpuB,UAAU,YAAYsP,GAAW4L,EAAOlJ,UAC5C,wBAAIhS,UAAU,QACZ,kBAAC,IAAD,CAASguB,OAAK,EAACrtB,GAAI3C,EAAOM,QAAQC,QAAQ,CAAEE,GAAIyc,EAAOzc,MACpDyc,EAAO3e,OAGZ,wBAAIyD,UAAU,QACZ,kBAAC,IAAD,CAASguB,OAAK,EAACrtB,GAAI3C,EAAOM,QAAQC,QAAQ,CAAEE,GAAIyc,EAAOzc,MACpDyc,EAAO2E,aAGZ,wBAAI7f,UAAU,UAAUkb,EAAOlD,QAC/B,wBAAIhY,UAAU,wBACTkb,EAAOmT,YAAcnT,EAAOmT,aAAenT,EAAOlD,QACnD,0BACEhY,UAAW2G,IAAW,gBAAiB,CACrC2nB,KAAMpT,EAAOmT,WAAanT,EAAOlD,OACjCuW,GAAIrT,EAAOmT,WAAanT,EAAOlD,UAGhCkD,EAAOmT,WAAanT,EAAOlD,OAAS,IAAM,GAC1CkD,EAAOlD,OAASkD,EAAOmT,aAI9B,wBAAIruB,UAAU,oBAAoBrD,KAAKiY,MAAMsG,EAAO1D,GAAGA,KACvD,wBAAIxX,UAAU,cAAckb,EAAO8E,OAAOjR,KAC1C,wBAAI/O,UAAU,aAAakb,EAAO8E,OAAOlR,IACzC,wBAAI9O,UAAU,YAAYkb,EAAO8E,OAAOnR,GACxC,wBAAI7O,UAAU,YAAYkb,EAAO8E,OAAOpR,GACxC,wBAAI5O,UAAU,YAAYkb,EAAO8E,OAAOrR,GACxC,wBAAI3O,UAAU,YAAYkb,EAAO8E,OAAOtR,GACxC,wBAAI1O,UAAU,YAAYkb,EAAO8E,OAAOvR,GACxC,wBAAIzO,UAAU,YAAYkb,EAAO8E,OAAOxR,GACxC,wBAAIxO,UAAU,aAAakb,EAAOpI,OAClC,wBAAI9S,UAAU,YACXkb,EAAO/H,SAAP,UAAqB+H,EAAO/H,SAASyE,QAAQ,GAA7C,KAAqD,SC7G3D,SAAS4W,KACtB,OACE,yBAAKxuB,UAAU,OACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,YAAf,4HACA,yBAAKA,UAAU,UAAf,+EACkB,uBAAGssB,KAAK,mDAAR,iEADlB,uoDAQF,yBAAKtsB,UAAU,mBACb,yBAAKA,UAAU,YAAf,gNACA,yBAAKA,UAAU,UAAf,mdAGE,6BAHF,okBAME,6BANF,4iBASE,6BATF,+ZAWE,6BAXF,mjBAcE,6BAdF,wtBAmBF,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,YAAf,+iBAIA,yBAAKA,UAAU,UAAf,glBAMF,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,YAAf,6HACA,yBAAKA,UAAU,UAAf,k2DAQF,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,YAAf,sOACA,yBAAKA,UAAU,UAAf,2iCAMF,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,YAAf,gJACA,yBAAKA,UAAU,UAAf,ynBAKF,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,YAAf,6ZAGA,yBAAKA,UAAU,UAAf,sOAEF,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,YAAf,8jBAIA,yBAAKA,UAAU,UAAf,unBAKF,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,YAAf,+IACA,yBAAKA,UAAU,UAAf,+JClER,MAAMyuB,GAAkBpI,aACrBne,GAAUA,EAAMsL,QAAQ5B,SAEzB/R,IAAEwU,KAAKxU,IAAEC,OAAQD,IAAEmb,QAAQ,CAAC,aAAc,CAAC,WAYvC+J,GAAqB,CACzBvE,iBAGF,MAAMkO,WAAgB9iB,YAAW,eAAD,oBAW9Bie,UAAY,MACYzsB,KAAK+L,MAAnB7F,WACMlG,KAAK+L,MAAMqX,gBAG3B0K,SAAU,MAAD,EAC+B9tB,KAAK+L,MAAnC7F,EADD,EACCA,UAAWlF,EADZ,EACYA,QAASqE,EADrB,EACqBA,MAE5B,OACE,yBAAKzC,UAAU,gBACb,yBAAKA,UAAU,WACZyC,GAASA,EAAMI,QAChB,yBAAK7C,UAAU,gBACb,yBAAKA,UAAU,eACf,kBAAC,IAAD,CACEguB,OAAK,EACL9vB,KAAMF,EAAOI,QAAQF,KACrBgtB,OAAQ,IACN,oCACE,kBAAC,IAAD,CAAMvqB,GAAI3C,EAAOI,QAAQC,IAAIH,MAC3B,4BAAQ8B,UAAU,8CAChB,kBAAC,IAAD,MADF,SAIF,4BACEkmB,SAAU5iB,EACVtD,UAAU,+BACV0J,QAAStM,KAAKysB,WAEd,kBAAC,IAAD,MALF,wDAUN,kBAAC,IAAD,CACEmE,OAAK,EACL9vB,KAAMF,EAAOI,QAAQC,IAAIH,KACzBgtB,OAAQ,IACN,kBAAC,IAAD,CAAMvqB,GAAI3C,EAAOI,QAAQF,MACvB,4BAAQ8B,UAAU,gCAAlB,sCAKR,kBAAC,IAAD,CACEguB,OAAK,EACL9vB,KAAMF,EAAOI,QAAQF,KACrBgtB,OAAQ,IAAM,kBAACgD,GAAD,CAAa9vB,QAASA,EAASkF,UAAWA,MAE1D,kBAAC,IAAD,CAAO0qB,OAAK,EAAC9vB,KAAMF,EAAOI,QAAQC,IAAIH,KAAMywB,UAAWH,QA5D3DE,GAOG7iB,aAAe,CACpBzN,QAAS,IA2DE4I,mBAhFUkB,IAChB,CACL9J,QAASqwB,GAAgBvmB,GACzBzF,MAAOyF,EAAMsL,QAAQ/Q,OAASyF,EAAM2J,UAAUpP,MAC9Ca,UACE4E,EAAMsL,QAAQlQ,WAAa4E,EAAMsL,QAAQsJ,kBAAoB5U,EAAM2J,UAAUvO,YA2E3CyhB,GAAzB/d,CAA6C4nB,YAAWF,K,gDC7FxD1nB,I,OAAAA,YACbkB,IAAK,CAAO2I,OAAQ3I,EAAMsL,QAAQ8B,eAClC,CAAElU,aAFW4F,CAGb,EAAGsM,WAAUzC,SAAQzP,gBAAiB,MAAD,EACL0E,oBAAS,GADJ,mBAC9BxC,EAD8B,KACnB0C,EADmB,OAEXF,mBAAS,IAFE,mBAE9B+oB,EAF8B,KAEvBC,EAFuB,OAGbhpB,mBAAS,IAHI,mBAG9BvC,EAH8B,KAGxBwC,EAHwB,KAqBrC,OAhBAK,oBAAU,KACRJ,GAAW,GACX5E,EAAU,CACRC,IAAI,GAAD,OAAK2B,EAAL,mBAAoBsQ,EAApB,6BAAiDub,KAEnDxoB,KAAKnC,IACJ8B,GAAW,GACP9B,EAAOoC,SACTP,EAAQ7B,EAAOX,QAGlBgD,MAAM,KACLP,GAAW,MAEd,CAACsN,EAAUub,EAAOztB,IAGnB,yBAAKpB,UAAU,eACZsD,GAAa,kBAACvD,EAAD,MACbwD,EAAKiD,IAAIN,IACR,MAAM+I,EAAQ4B,EAAO3K,EAAKyX,cAC1B,OACE,yBAAK3d,UAAU,QAAQ0G,IAAKR,EAAKyX,cAC/B,yBACE3d,UAAW2G,IAAW,aAAc,CAClC4L,OAA4B,MAApBtD,EAAME,UACdgd,QAA6B,OAApBld,EAAME,UACfid,QAA6B,OAApBnd,EAAME,UACfmD,OAA4B,MAApBrD,EAAME,UACdkd,KAA0B,SAApBpd,EAAME,aAGd,0BAAMnP,UAAU,gBAAgBiP,EAAME,WACtC,0BAAMnP,UAAU,gBAAgBiP,EAAMG,aAExC,yBAAKpP,UAAU,aAAaiP,EAAMsB,MAClC,yBAAKvQ,UAAU,QACZkG,EAAK6oB,WAAajqB,GAAWQ,GAAUY,EAAK6oB,aAAe,MAE9D,yBAAK/uB,UAAU,aACb,kBAAC,IAAD,MACA,8BAAOkG,EAAK4M,WAKnB+b,IAAUhvB,IAAEspB,KAAK5lB,IAChB,4BACEvD,UAAU,yCACV0J,QAAS,IAAMolB,EAASD,EAAQ,KAEhC,kBAAC,KAAD,MAJF,6CCpEO,SAASG,KACtB,OACE,yBAAKhvB,UAAU,WACb,yBAAKA,UAAU,cACb,4DADF,8TAEE,6BAFF,iYAIE,6BAJF,ikBAQA,yBAAKA,UAAU,cAAf,8QACA,yBAAKA,UAAU,cACZmO,GAAM3H,KAAI,SAAA+I,GAAI,OACb,yBAAK7I,IAAK6I,EAAKnB,UAAWpO,UAAU,QAClC,yBAAKA,UAAU,YAAYsP,GAAWC,IACtC,yBAAKvP,UAAU,aAAauP,EAAKnB,iB,6kBCpB7C,MAAMmO,GAAU,sBACVC,GAAY,wBAELG,GAAgB,GAEvBtZ,GAAe,CACnBC,WAAW,EACXmQ,OAAQkJ,IAoBH,MAAMsS,GAAoBxb,IAAM,CACrCtS,KAAMob,GACN9I,WAGWyb,GAAsB,MACjC/tB,KAAMqb,K,6kBC7BR,MAAM2S,GAAW,CAACC,EAAO9iB,KACvB,MAAM+iB,EAAaxvB,IAAE7C,UAAUkJ,GAAQA,EAAKnB,KAAOuH,EAAM,GAAI8iB,GACvDE,EAAWzvB,IAAEwtB,cAAcnnB,GAAQA,EAAKnB,KAAOuH,EAAM,GAAI8iB,GAC/D,IAAIG,EACFF,EAAa,EAAID,EAAMC,EAAa,GAAoB,IAAfA,EAAmBD,EAAMC,GAAcxvB,IAAE2b,KAAK4T,GACrFI,EAAcF,GAAY,EAAIF,EAAME,GAAYzvB,IAAEksB,MAAMqD,GAM5D,OALAG,EAAY,MAAQA,EAAR,CAAsBxqB,KAAMuH,EAAM,KAC9CkjB,EAAW,MAAQA,EAAR,CAAqBzqB,KAAMuH,EAAM,KAIrC,CAACijB,KAFNF,GAAc,GAAKC,GAAY,EAAIF,EAAM9D,MAAM+D,EAAYC,EAAW,GAAK,GAEpCE,IAGrCC,GAA4B,CAChC1gB,IAAK,EACLD,GAAI,EACJD,EAAG,EACH,KAAM,EACND,EAAG,EACHD,EAAG,EACHD,EAAG,EACHD,EAAG,EACHD,EAAG,GAECkhB,GAAsC7vB,IAAEwU,KAC5CxU,IAAE8vB,QAAQxuB,GACDtB,IAAEwU,KACPxU,IAAEyU,QACFzU,IAAE2G,IAAI,EAAE6I,EAAO3S,KAAW,CAAC,GAAD,OAAIyE,EAAJ,YAAYkO,GAAS3S,IAF1CmD,CAGL4vB,KAEJ5vB,IAAE+f,UAPwC/f,CAQ1C,CAAC,IAAK,MAEK+vB,GAAyBC,GACpCxJ,aACE,CAACne,EAAOiB,IAAUtJ,IAAE8b,UAAUxS,EAAMoY,MAAM/iB,OAAOqxB,IACjD3nB,GAASA,EAAMsL,QAAQlQ,WAAa4E,EAAMsL,QAAQsJ,iBAClD5U,GAASA,EAAMsL,QAAQ5B,SACvB1J,GAASA,EAAM0J,SAAS6B,OACxBvL,GAASA,EAAM2J,UAAUtO,KACzB,CAAC9E,EAAI6E,EAAWsO,EAAU6B,EAAQ5B,KAChC,MAAMvT,EAAUsT,EAASnT,GACzB,GAAIoB,IAAEiO,QAAQxP,IAAYgF,EACxB,OAAO,KAET,MAAMwsB,EAAqBjwB,IAAEwU,KAC3BxU,IAAEsC,IAAI,kBACNtC,IAAEyU,QACFzU,IAAE2G,IAAI,EAAE3J,EAAGkzB,MAAL,CACJlzB,EAAGgD,IAAE8b,UAAU9e,GACfgS,EACGhP,IAAEspB,KACDtpB,IAAE4T,OAAOR,GAA+B,MAAxBA,EAAIhE,MAAME,WAA6C,OAAxB8D,EAAIhE,MAAME,UAAoB4gB,IAE7Ele,EAAUme,cAAcnzB,GAC1B,IACF4R,GACI5O,IAAEspB,KACFtpB,IAAE4T,OAAOR,GAA+B,MAAxBA,EAAIhE,MAAME,WAA6C,OAAxB8D,EAAIhE,MAAME,UAAoB4gB,IAE7Ele,EAAUoe,cAAcpzB,GAC1B,OAhBqBgD,CAkBzBvB,GACI4xB,EAAarwB,IAAEwU,KACnBxU,IAAEsC,IAAI,kBACNtC,IAAEyU,QACFzU,IAAE2G,IACA3G,IAAEswB,OAAO,mBAAoB9gB,GAC3BA,GAASA,EAAMpB,SAAS,MAAkB,OAAVoB,EAAiBA,EAAM+Q,QAAQ,IAAK,IAAM/Q,IAL7DxP,CAQjBvB,GACI8xB,EAAqBvwB,IAAEwU,KAC3BxU,IAAE2G,IAAI,EAAE3J,EAAGkzB,KAAL,IACJlzB,EAAGgD,IAAE8b,UAAU9e,IACZ4yB,GAFC,GAGD5vB,IAAEyL,KAAK,IAAKzL,IAAEiS,UAAUjS,IAAEspB,KAAMtpB,IAAEwwB,QAAQ,eAAgBN,OAE/DlwB,IAAE2G,IAAIN,IACJ,MAAM8Z,EAASngB,IAAEywB,KAAKrzB,OAAOyV,KAAK+c,IAA4BvpB,GACxD6M,EAAMlT,IAAEkT,IAAIlT,IAAEC,OAAOkgB,IAC3B,OAAO,MACF9Z,EADL,CAEEqqB,aAAcvQ,GACF,IAARjN,EAAYiN,EAASngB,IAAEiS,UAAUpV,GAAU,IAAMA,EAASqW,EAAKiN,MAZ9CngB,CAezBqwB,GACIM,EAA8B3wB,IAAEwU,KACpCxU,IAAE2G,IAAI,EAAE3J,EAAGkzB,MACT,MAAMU,EAAiB5wB,IAAEwwB,QAAQ,eAAgBN,GAC3CW,EAAS7wB,IAAEyL,KACf,IACAzL,IAAEiS,UACAjS,IAAE8wB,QAAQ1d,GACuB,MAAxBA,EAAIhE,MAAME,WAA6C,OAAxB8D,EAAIhE,MAAME,UAC5C,IACwB,MAAxB8D,EAAIhE,MAAME,WAA6C,OAAxB8D,EAAIhE,MAAME,UACzC,IACA,SAENshB,IAGEG,EAAU/wB,IAAE4W,OAChB,CAACC,GAAMrH,EAAOwhB,MAWZ,OAAO,MAAKna,EAAZ,GAVgB7W,IAAEwU,KAChBxU,IAAEyU,QACFzU,IAAE2G,IAAI,EAAErF,EAAM2R,KAAW,CAAC,GAAD,OACpB3R,EADoB,YACZkO,GACF,MAATlO,EACK2R,EAAQjB,EAAUme,cAAcnzB,GAAM,KACrCiW,EAAQjB,EAAUoe,cAAcpzB,GAAM,MAE9CgD,IAAE+f,UARY/f,CASdgxB,KAGJ,GACAhxB,IAAEyU,QAAQoc,IAGZ,OAAO,IACL7zB,EAAGgD,IAAE8b,UAAU9e,IACZ6yB,GAFL,GAGKkB,KArC2B/wB,CAwClCqwB,GAEIY,EAAiBjxB,IAAE2b,KAAKld,EAAQmd,eAAe1W,KAC/CgsB,EAAkBlxB,IAAE2b,KAAKld,EAAQ8c,gBAAgBrW,KACjDisB,EAAWF,EAAiBC,EAAkBD,EAAiBC,EAC/DE,EAAYpxB,IAAEksB,MAAMztB,EAAQmd,eAAe1W,KAC3CmsB,EAAUjsB,KAAO+rB,GAAUG,MAAM,OAEjCC,EAAc,CADHnsB,KAAOgsB,GAAW/rB,QAAQ,OACX,IAAO,GAAK,GAAK,GAAIgsB,EAAU,IAAO,GAAK,GAAK,IAE1EG,EAAc5d,EAAO6d,UAAY,CACrC30B,KAAKwO,IAAIimB,EAAY,GAAIA,EAAY,GAAK,IAC1CA,EAAY,IAERG,EAAa,EAChBtsB,KAAwB,IAAjBosB,EAAY,GAAY,GAAK,GAAK,IAAInsB,QAAQ,QACrDD,KAAwB,IAAjBosB,EAAY,GAAY,GAAK,GAAK,IAAIF,MAAM,QAEhDK,EAAgBrC,GAAS7wB,EAAQ8c,eAAgBmW,GACjDE,EAAgBtC,GAAS7wB,EAAQmd,cAAe8V,GAItD,OAAO,MACFjzB,EADL,CAEEiR,KAJW,EAAI1P,IAAE7C,UAAU,CAAEyB,MAAMoB,IAAEmb,QAAQ,CAAC,aAAc,CAAC,QAASnb,IAAEC,OAAO8R,KAK/Ewf,cACAC,cACAvB,qBACAM,qBACAI,8BACAgB,gBACAC,oB,+NClHR,MAAMC,QAAmBntB,EAEnBotB,GAAkB/B,GAAuB,MAElCgC,GAAuBvL,aAClCne,GAASA,EAAMsL,QAAQuJ,QACvB,CAAC7U,EAAOiB,IAAUtJ,IAAE0U,SAASpL,EAAMoY,MAAM/iB,OAAOC,IAChD,CAACse,EAASte,IACRoB,IAAEwU,KACAxU,IAAEyU,QACFzU,IAAE2G,IAAI,EAAEqrB,GAAOjU,WAAUH,cAAahf,UAAhC,CACJ2iB,MAAM,GAAD,OAAKxD,EAAL,aAAkBH,EAAlB,KACL/gB,MAAOkhB,EACPnf,GAAIoB,IAAE0U,SAAS9V,MAEjBoB,IAAEwlB,OAAOoB,GAAMA,EAAGhoB,KAAOA,GACzBoB,IAAE2mB,OAAOC,GAAM5mB,IAAE6mB,QAAQD,EAAGrF,QAR9BvhB,CASEkd,IAeAgI,GAAqB,CACzBvE,gBACAyO,qBACAC,wBAGF,MAAM4C,WAAgBlmB,YAAW,eAAD,oBAW9B1D,MAAQ,CACN6pB,sBAAsB,EACtBC,SAAS,GAbmB,KAoB9BnI,UAAY,MACYzsB,KAAK+L,MAAnB7F,WACMlG,KAAK+L,MAAMqX,gBAtBG,KAyB9ByR,iBAAmB3lB,IAAU,MACnBmH,EAAWrW,KAAK+L,MAAhBsK,OACRrW,KAAK+L,MAAM8lB,kB,2WAAX,IACKxb,EADL,CAEE6d,SAAUhlB,MA7BgB,KAiC9B4lB,UAAY,KACV90B,KAAKsL,SAAS,CAAEspB,SAAS,KAlCG,KAqC9BG,UAAY,KACV/0B,KAAKsL,SAAS,CAAEspB,SAAS,KAtB3BI,uBACEh1B,KAAK+L,MAAM+lB,sBAwBbmD,uBAAwB,MACd/zB,EAAYlB,KAAK+L,MAAjB7K,QACR,OACE,kBAAC,KAAD,CAAqBg0B,UAAWZ,GAAkBa,OAAQ,KACxD,kBAAC,KAAD,CAAWhvB,KAAMjF,EAAQmzB,cAAee,OAAQ,CAAE5qB,IAAK,EAAGC,OAAQ,EAAGH,MAAO,EAAGC,KAAM,IACnF,kBAAC,KAAD,CAAe8qB,gBAAgB,QAC/B,kBAAC,KAAD,CACEC,QAAQ,OACRvxB,KAAK,SACLwxB,OAAQ,CAAC,UAAW,WACpBC,cAAel2B,GAAS4I,GAAU5I,GAAO2H,uBAE3C,kBAAC,KAAD,CACEwuB,eAAe,EACfF,OAAQ,CAAC,gBAAiB,iBAC1BC,cAAej2B,KAAKiY,MACpB3U,MAAO,KAET,kBAAC,KAAD,CAAe8vB,EAAG,IAAM+C,OAAO,UAC/B,kBAAC,KAAD,CACEC,mBAAmB,EACnBlF,QAAS,EAAGvjB,SAAQ0oB,UAAS5R,WACtB4R,GAAYA,EAAQ,GAIvB,yBAAKhzB,UAAU,mBACb,6BAAMsF,GAAU0tB,EAAQ,GAAGA,QAAQjuB,MAAMV,sBACxC2uB,GAAWA,EAAQ,IAAM,wCAAcr2B,KAAKiY,MAAMoe,EAAQ,GAAGt2B,SALzD,OAUb,kBAAC,KAAD,CACEyE,KAAK,WACL4xB,mBAAmB,EACnBL,QAAQ,SACRI,OAAO,UACPG,YAAa,EACbC,KAAK,MAOfC,qBAAsB,MACZ70B,EAAYlB,KAAK+L,MAAjB7K,QACR,OACE,kBAAC,KAAD,CAAqBg0B,UAAWZ,GAAkBa,OAAQ,KACxD,kBAAC,KAAD,CAAWhvB,KAAMjF,EAAQkzB,cAAegB,OAAQ,CAAE5qB,IAAK,EAAGC,OAAQ,EAAGH,MAAO,EAAGC,KAAM,IACnF,kBAAC,KAAD,CAAe8qB,gBAAgB,QAC/B,kBAAC,KAAD,CACEC,QAAQ,OACRvxB,KAAK,SACLwxB,OAAQ,CAAC,UAAW,WACpBC,cAAel2B,GAAS4I,GAAU5I,GAAO2H,uBAE3C,kBAAC,KAAD,CACEwuB,eAAe,EACfF,OAAQ,CAAC,EAAGS,GAAYA,EAAU,EAAIA,EAAU,EAAIA,EAAU,GAC9DC,SAAU,EACVC,UAAQ,EACRrzB,MAAO,KAET,kBAAC,KAAD,CACE8yB,mBAAmB,EACnBlF,QAAS,EAAGvjB,SAAQ0oB,UAAS5R,WACtB4R,GAAYA,EAAQ,GAIvB,yBAAKhzB,UAAU,mBACb,6BAAMsF,GAAU0tB,EAAQ,GAAGA,QAAQjuB,MAAMV,sBACxC2uB,GAAWA,EAAQ,IAAM,wCAAcA,EAAQ,GAAGt2B,QAL9C,OAUb,kBAAC,KAAD,CACEq2B,mBAAmB,EACnB5xB,KAAK,YACLuxB,QAAQ,QACRI,OAAO,UACPG,YAAa,EACbC,KAAK,MAOfK,eAAgB,MACNj1B,EAAYlB,KAAK+L,MAAjB7K,QACR,OACE,kBAAC,KAAD,CAAqBg0B,UAAWZ,GAAkBa,OAAQ,KACxD,kBAAC,KAAD,CACEhvB,KAAMjF,EAAQ8xB,mBACdoC,OAAQ,CAAE5qB,IAAK,EAAGC,OAAQ,EAAGH,MAAO,EAAGC,KAAM,IAE7C,kBAAC,KAAD,CACEorB,mBAAmB,EACnBlF,QAAS,EAAGvjB,SAAQ0oB,UAAS5R,WACtB4R,GAAYA,EAAQ,GAIvB,yBAAKhzB,UAAU,mBACb,uCAAagzB,EAAQ,GAAGA,QAAQn2B,GAC/BgD,IAAE4T,OAAOvN,GAAQA,EAAKxJ,MAAQ,EAAGs2B,GAASxsB,IAAIN,GAC7C,yBAAKQ,IAAKR,EAAK3J,KAAMmI,MAAO,CAAEgpB,WAAY,OAAQpf,MAAOpI,EAAKoI,QAC3DpI,EAAK3J,KADR,KACgBy2B,EAAQ,GAAGA,QAAQzC,aAAarqB,EAAK3J,SAPlD,OAcb,kBAAC,KAAD,CAAOm2B,QAAQ,MACf,kBAAC,KAAD,CACEC,OAAQ,CAAC,EAAG,KACZa,MAAO,CAAC,EAAG,GAAI,KACfZ,cAAe/1B,GAAC,UAAOF,KAAKiY,MAAM/X,GAAlB,KAChBoD,MAAO,KAET,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAKyyB,QAAQ,MAAMryB,KAAK,UAAUozB,QAAQ,UAC1C,kBAAC,KAAD,CAAKf,QAAQ,KAAKryB,KAAK,UAAUozB,QAAQ,UACzC,kBAAC,KAAD,CAAKf,QAAQ,IAAIryB,KAAK,UAAUozB,QAAQ,UACxC,kBAAC,KAAD,CAAKf,QAAQ,KAAKryB,KAAK,UAAUozB,QAAQ,UACzC,kBAAC,KAAD,CAAKf,QAAQ,IAAIryB,KAAK,UAAUozB,QAAQ,UACxC,kBAAC,KAAD,CAAKf,QAAQ,IAAIryB,KAAK,UAAUozB,QAAQ,UACxC,kBAAC,KAAD,CAAKf,QAAQ,IAAIryB,KAAK,UAAUozB,QAAQ,UACxC,kBAAC,KAAD,CAAKf,QAAQ,IAAIryB,KAAK,UAAUozB,QAAQ,UACxC,kBAAC,KAAD,CAAKf,QAAQ,IAAIryB,KAAK,UAAUozB,QAAQ,YAMhDC,yBAA0B,MAAD,EACQt2B,KAAK+L,MAA5B7K,EADe,EACfA,QAASuT,EADM,EACNA,UACjB,OACE,kBAAC,KAAD,CAAqBygB,UAAWZ,GAAkBa,OAAQ,KACxD,kBAAC,KAAD,CACEhvB,KAAMjF,EAAQkyB,4BACdgC,OAAQ,CAAE5qB,IAAK,EAAGC,OAAQ,EAAGH,MAAO,EAAGC,KAAM,GAC7CgsB,YAAY,QAEZ,kBAAC,KAAD,CACEZ,mBAAmB,EACnBlF,QAAS,EAAGvjB,SAAQ0oB,UAAS5R,YAC3B,IAAK4R,IAAYA,EAAQ,GACvB,OAAO,KAET,MAAMY,EAAc/zB,IAAE4T,OACpBvN,GAAuB,IAAfA,EAAKxJ,OAAewJ,EAAKwsB,QAAQzY,WAAW,KACpD+Y,GAEIa,EAAch0B,IAAE4T,OACpBvN,GAAuB,IAAfA,EAAKxJ,OAAewJ,EAAKwsB,QAAQzY,WAAW,KACpD+Y,GAEF,OACE,yBAAKhzB,UAAU,mBACb,uCAAagzB,EAAQ,GAAGA,QAAQn2B,KAC7Bg3B,EAAYr2B,QACb,oCACE,wCACCq2B,EAAYrtB,IAAIN,GACf,yBAAKQ,IAAKR,EAAK3J,KAAMmI,MAAO,CAAEgpB,WAAY,OAAQpf,MAAOpI,EAAKoI,QAC3DpI,EAAK3J,KAAK+uB,MAAM,GADnB,KACyB3uB,KAAKiY,MAAMjY,KAAKm3B,IAAI5tB,EAAKxJ,QADlD,MAEGC,KAAKiY,MAAO/C,EAAUme,cAAc9pB,EAAK8sB,QAAQn2B,GAAKqJ,EAAKxJ,MAAS,KAFvE,IAGImV,EAAUme,cAAc9pB,EAAK8sB,QAAQn2B,GAHzC,SAQH+2B,EAAYp2B,QACb,oCACE,wCACCo2B,EAAYptB,IAAIN,GACf,yBAAKQ,IAAKR,EAAK3J,KAAMmI,MAAO,CAAEgpB,WAAY,OAAQpf,MAAOpI,EAAKoI,QAC3DpI,EAAK3J,KAAK+uB,MAAM,GADnB,KACyB3uB,KAAKiY,MAAMjY,KAAKm3B,IAAI5tB,EAAKxJ,QADlD,MAEGC,KAAKiY,MACH/C,EAAUoe,cAAc/pB,EAAK8sB,QAAQn2B,IAAMqJ,EAAKxJ,MAAS,KAH9D,IAKImV,EAAUoe,cAAc/pB,EAAK8sB,QAAQn2B,GALzC,WAcd,kBAAC,KAAD,CAAO61B,QAAQ,MACf,kBAAC,KAAD,CACEE,cAAe/1B,GAAC,UAAOF,KAAKiY,MAAMjY,KAAKm3B,IAAIj3B,IAA3B,KAChBoD,MAAO,GACP0yB,OAAQ,CAACoB,GAAWp3B,KAAKuO,IAAI6oB,GAAU,IAAKX,GAAWz2B,KAAKwO,IAAI,GAAIioB,MAEtE,kBAAC,KAAD,CAAKV,QAAQ,QAAQryB,KAAK,UAAUozB,QAAQ,UAC5C,kBAAC,KAAD,CAAKf,QAAQ,OAAOryB,KAAK,UAAUozB,QAAQ,UAC3C,kBAAC,KAAD,CAAKf,QAAQ,MAAMryB,KAAK,UAAUozB,QAAQ,UAC1C,kBAAC,KAAD,CAAKf,QAAQ,OAAOryB,KAAK,UAAUozB,QAAQ,UAC3C,kBAAC,KAAD,CAAKf,QAAQ,MAAMryB,KAAK,UAAUozB,QAAQ,UAC1C,kBAAC,KAAD,CAAKf,QAAQ,MAAMryB,KAAK,UAAUozB,QAAQ,UAC1C,kBAAC,KAAD,CAAKf,QAAQ,MAAMryB,KAAK,UAAUozB,QAAQ,UAC1C,kBAAC,KAAD,CAAKf,QAAQ,MAAMryB,KAAK,UAAUozB,QAAQ,UAC1C,kBAAC,KAAD,CAAKf,QAAQ,MAAMryB,KAAK,UAAUozB,QAAQ,UAC1C,kBAAC,KAAD,CAAKf,QAAQ,QAAQryB,KAAK,UAAUozB,QAAQ,UAC5C,kBAAC,KAAD,CAAKf,QAAQ,OAAOryB,KAAK,UAAUozB,QAAQ,UAC3C,kBAAC,KAAD,CAAKf,QAAQ,MAAMryB,KAAK,UAAUozB,QAAQ,UAC1C,kBAAC,KAAD,CAAKf,QAAQ,OAAOryB,KAAK,UAAUozB,QAAQ,UAC3C,kBAAC,KAAD,CAAKf,QAAQ,MAAMryB,KAAK,UAAUozB,QAAQ,UAC1C,kBAAC,KAAD,CAAKf,QAAQ,MAAMryB,KAAK,UAAUozB,QAAQ,UAC1C,kBAAC,KAAD,CAAKf,QAAQ,MAAMryB,KAAK,UAAUozB,QAAQ,UAC1C,kBAAC,KAAD,CAAKf,QAAQ,MAAMryB,KAAK,UAAUozB,QAAQ,UAC1C,kBAAC,KAAD,CAAKf,QAAQ,MAAMryB,KAAK,UAAUozB,QAAQ,UAC1C,kBAAC,KAAD,CAAO/2B,MAAM,SAASs3B,OAAQ,EAAGrnB,SAAS,qBAC1C,kBAAC,KAAD,CAAOjQ,MAAM,SAASs3B,OAAQ,EAAGrnB,SAAS,kBAC1C,kBAAC,KAAD,CAAeojB,EAAG,EAAG+C,OAAO,WAMpCmB,eAAgB,MAAD,EACkB72B,KAAK+L,MAA5B7K,EADK,EACLA,QAASuT,EADJ,EACIA,UACjB,OACE,kBAAC,KAAD,CAAqBygB,UAAWZ,GAAkBa,OAAQ,KACxD,kBAAC,KAAD,CACEhvB,KAAMjF,EAAQwxB,mBACd6D,YAAY,OACZnB,OAAQ,CAAE5qB,IAAK,EAAGC,OAAQ,EAAGH,MAAO,EAAGC,KAAM,IAE7C,kBAAC,KAAD,CACEorB,mBAAmB,EACnBlF,QAAS,EAAGvjB,SAAQ0oB,UAAS5R,YAC3B,IAAK4R,IAAYA,EAAQ,GACvB,OAAO,KAET,MAAMkB,EAASriB,EAAUoe,cAAc+C,EAAQ,GAAGA,QAAQn2B,GACpDs3B,EAAStiB,EAAUme,cAAcgD,EAAQ,GAAGA,QAAQn2B,GAC1D,OACE,yBAAKmD,UAAU,mBACb,uCAAagzB,EAAQ,GAAGA,QAAQn2B,GAC/Bs3B,EAAS,GACR,yBAAKzvB,MAAO,CAAEgpB,WAAY,OAAQpf,MAAO0kB,EAAQ,GAAG1kB,QAApD,WACW3R,KAAKm3B,IAAId,EAAQ,GAAGt2B,OAAOkb,QAAQ,GAD9C,MAEGjb,KAAKiY,MAAOoe,EAAQ,GAAGt2B,MAAQy3B,EAAU,KAF5C,IAEmDA,EAFnD,KAKDD,EAAS,GACR,yBAAKxvB,MAAO,CAAEgpB,WAAY,OAAQpf,MAAO0kB,EAAQ,GAAG1kB,QAApD,WACW3R,KAAKm3B,IAAId,EAAQ,GAAGt2B,OAAOkb,QAAQ,GAD9C,MAEGjb,KAAKiY,MAAOjY,KAAKm3B,IAAId,EAAQ,GAAGt2B,OAASw3B,EAAU,KAFtD,IAE6DA,EAF7D,SASV,kBAAC,KAAD,CAAOxB,QAAQ,MACf,kBAAC,KAAD,CACEE,cAAe/1B,GAAKF,KAAKiY,MAAMjY,KAAKm3B,IAAIj3B,IAAM,IAC9CoD,MAAO,GACP0yB,OAAQ,CAACoB,GAAWp3B,KAAKuO,IAAI6oB,GAAU,IAAKX,GAAWz2B,KAAKwO,IAAI,GAAIioB,MAEtE,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAerD,EAAG,EAAG+C,OAAO,SAC5B,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAKJ,QAAQ,IAAIryB,KAAK,UAAUozB,QAAQ,UACxC,kBAAC,KAAD,CAAKf,QAAQ,IAAIryB,KAAK,UAAUozB,QAAQ,YAMhDW,iBAAiBjzB,EAAMkO,GAAQ,MAEvBglB,EADcj3B,KAAK+L,MAAjB7K,QACY0R,SAAS7O,GACvBmzB,EAAsB,WAATnzB,EAAoB,IAAM,IACvCozB,EAAQ53B,KAAKme,MAAgD,KAAzCuZ,EAAI,GAAD,OAAIhlB,EAAJ,uBAAiC,IACxDmlB,EAAYH,EAAI,GAAD,OAAIhlB,EAAJ,4BACfolB,EAAgBJ,EAAI,GAAD,OAAIhlB,EAAJ,iCACnBqlB,EAAcL,EAAI,GAAD,OAAIhlB,EAAJ,iBAAH,UACbilB,GADa,OACAD,EAAI,GAAD,OAAIhlB,EAAJ,kBACnB,IACJ,OACE,yBAAKrP,UAAU,eACb,yBAAKA,UAAU,gBACb,yBAAKwP,IAAG,UAAKC,IAAL,mBAAsCJ,EAAtC,QAAmDK,IAAKL,KAElE,yBAAKrP,UAAU,eAAe00B,GAC9B,yBAAK10B,UAAU,kBACZu0B,EADH,MACuB,MAAVA,EAAgBC,EAAYC,EADzC,IACyDD,EADzD,KAGA,yBACEx0B,UAAW2G,IAAW,sBAAuB,CAC3CguB,SAAoB,MAAVJ,EACVK,KAAgB,IAAVL,IAER7vB,MAAO,CACLxE,OAAO,GAAD,OAAKq0B,EAAL,SAOhBM,kBAAkB3U,EAAS4U,GACzB,MAAMC,EAAOplB,GAAauQ,GAAStQ,KAC7BE,EAAcH,GAAauQ,GAASpQ,YAC1C,OACE,kBAAC,KAAD,CACEpJ,IAAKwZ,EACL2N,QAAS,6BAAM/d,GACfge,iBAAiB,wCAEjB,yBAAK9tB,UAAU,aACZ+0B,GACC,yBAAK/0B,UAAU,YACb,kBAAC+0B,EAAD,OAGJ,yBAAK/0B,UAAU,YAAYkgB,GAC3B,yBACElgB,UAAW2G,IAAW,sBAAuB,CAC3CguB,SAAmC,MAAzBG,EAAY9kB,SACtB4kB,KAA+B,IAAzBE,EAAY9kB,WAEpBtL,MAAO,CACLxE,OAAO,GAAD,OAAKvD,KAAKiY,MAAMkgB,EAAY9kB,UAA5B,UAQlBglB,gBAAiB,MAAD,EAC4B53B,KAAK+L,MAAvC7K,EADM,EACNA,QAAS22B,EADH,EACGA,aAAcxhB,EADjB,EACiBA,OACvBse,EAAyB30B,KAAK8K,MAA9B6pB,qBACFmD,EAAc52B,EAAQ8T,aACvB9T,EAAQ4T,IAAM5T,EAAQ0T,QAAQ5D,YAC9B9P,EAAQ8T,YAAYhE,UAAY9P,EAAQ0T,QAAQ5D,WACjD,IACJ,OACE,yBAAKpO,UAAU,WACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,eAAf,kCACA,6BAAM1B,EAAQ/B,OAEhB,yBAAKyD,UAAU,oBACb,yBAAKA,UAAU,eAAf,4BACA,iCAAO1B,EAAQiR,OAEjB,yBAAKvP,UAAU,oBACb,yBAAKA,UAAU,eAAf,sBACA,6BAAM1B,EAAQ0Z,SAEhB,yBAAKhY,UAAU,oBACb,yBAAKA,UAAU,eAAf,mFACA,6BAAM1B,EAAQyhB,eAAiBjb,GAAWxG,EAAQyhB,gBAAkB,+CAEtE,yBAAK/f,UAAU,eACf,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,eAAf,2DACA,6BACE,kBAAC,KAAD,CACE8qB,mBAAiB,EACjB9qB,UAAU,iBACV8lB,gBAAgB,SAChBC,YAAY,0CACZC,QAASiP,EACTjqB,SAAUtO,IACRU,KAAK+L,MAAMgsB,QAAQjf,KACjBlY,EAAOM,QAAQI,QAAQH,QAAQ,CAAEE,GAAIH,EAAQG,GAAIE,YAAajC,EAAM+B,YAOhF,yBAAKuB,UAAU,mBACb,yBAAKA,UAAU,qDACb,0DACA,yBAAKA,UAAU,eACf,yBAAK0J,QAAStM,KAAK80B,UAAWlyB,UAAU,cACtC,kBAAC,IAAD,CAAkB0J,QAAStM,KAAK80B,aAElC,kBAAC,KAAD,CACEkD,aAAa,EACbp1B,UAAU,kBACVuJ,iBAAiB,UACjB8rB,OAAQj4B,KAAK8K,MAAM8pB,QACnBsD,eAAgBl4B,KAAK+0B,WAErB,yBAAKnyB,UAAU,YAAY0J,QAAStM,KAAK+0B,WACvC,kBAAC,IAAD,OACK,IACP,kBAACnD,GAAD,QAGJ,yBAAKhvB,UAAU,aACb,yBAAKA,UAAU,iBACZsP,GAAWhR,EAAQ0T,SACnB1T,EAAQ0T,SAAW,6BAAM1T,EAAQ0T,QAAQ5D,YAE5C,yBAAKpO,UAAU,uBACb,yBAAKA,UAAU,aACZ1B,EAAQ8T,YACP,oCACE,0BAAMpS,UAAU,aACbrD,KAAKiY,MAAMtW,EAAQ4T,IAAM5T,EAAQ0T,QAAQ5D,YAF9C,aAIS9P,EAAQ8T,YAAYhE,UAAY9P,EAAQ0T,QAAQ5D,YAEvD,MAEN,yBAAKpO,UAAU,YACb,yBAAKA,UAAU,QAAQ0E,MAAO,CAAEzE,MAAOtD,KAAKme,MAAM,IAAMoa,GAAe,OACvE,yBACEl1B,UAAU,OACV0E,MAAO,CAAEzE,MAAO,IAAMtD,KAAK44B,KAAK,IAAML,GAAe,QAGzD,yBAAKl1B,UAAU,aAAf,UACS,0BAAMA,UAAU,aAAarD,KAAKiY,MAAMtW,EAAQ4T,QAG1D5T,EAAQ8T,aACP,yBAAKpS,UAAU,iBACZsP,GAAWhR,EAAQ8T,aACnB9T,EAAQ8T,aAAe,6BAAM9T,EAAQ8T,YAAYhE,cAK1D,yBAAKpO,UAAU,wCACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,2BACX+xB,EA6BA,yBAAK/xB,UAAU,qBACb,yBAAKA,UAAU,kCACb,sEACA,yBAAKA,UAAU,iBACb,kBAAC,GAAD,CACEA,UAAU,iBACV+L,QAASgmB,EACT/mB,SAAU,IACR5N,KAAKsL,SAASR,IAAK,CACjB6pB,sBAAuB7pB,EAAM6pB,yBALnC,6GAaJ,yBAAK/xB,UAAU,wCACZ5C,KAAKs2B,2BA9CV,oCACE,yBAAK1zB,UAAU,qBACb,yBAAKA,UAAU,kCACb,sEACA,yBAAKA,UAAU,iBACb,kBAAC,GAAD,CACEA,UAAU,iBACV+L,QAASgmB,EACT/mB,SAAU,IACR5N,KAAKsL,SAASR,IAAK,CACjB6pB,sBAAuB7pB,EAAM6pB,yBALnC,6GAaJ,yBAAK/xB,UAAU,mBAAmB5C,KAAK62B,iBAEzC,yBAAKj0B,UAAU,qBACb,yBAAKA,UAAU,6BACb,uEAEF,yBAAKA,UAAU,mBAAmB5C,KAAKm2B,oBA4BjD,yBAAKvzB,UAAU,mBACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,6BACb,qDAEF,yBAAKA,UAAU,mBAAmB5C,KAAKi1B,yBAEzC,yBAAKryB,UAAU,qBACb,yBAAKA,UAAU,6BACb,iGAEF,yBAAKA,UAAU,mBAAmB5C,KAAK+1B,wBAG1C,MACC,MAAMqC,EAAe/hB,EAAO6d,UAAYhzB,EAAQ+yB,YAC1CoE,EAAQxwB,KAAyB,IAAlBuwB,EAAa,GAAY,GAAK,GAAK,IAAInwB,OAAO,KAC7DqwB,EAAQzwB,KAAyB,IAAlBuwB,EAAa,GAAY,GAAK,GAAK,IAAInwB,OAAO,KAC7DswB,EAAKh5B,KAAKwO,IAAIqqB,EAAa,GAAK,EAAGl3B,EAAQ8yB,YAAY,IACvDwE,EAAKj5B,KAAKuO,IAAIsqB,EAAa,GAAK,EAAGA,EAAa,IAChDvc,EAAKtc,KAAKwO,IAAIqqB,EAAa,GAAK,EAAGA,EAAa,IAChDtc,EAAKvc,KAAKuO,IAAIsqB,EAAa,GAAK,EAAGl3B,EAAQ8yB,YAAY,IAC7D,OACE,yBAAKpxB,UAAU,mBACb,kBAACqM,GAAD,CACEC,MAAOkpB,EACPtqB,IAAK5M,EAAQ8yB,YAAY,GACzBjmB,IAAK7M,EAAQ8yB,YAAY,GACzBpmB,SAAU5N,KAAK60B,mBAEjB,yBAAKjyB,UAAU,4BACb,4BACEA,UAAU,sBACV0J,QAAS,IAAMtM,KAAK60B,iBAAiB,CAAC0D,EAAIH,EAAa,MAEvD,kBAAC,IAAD,OAEF,0BAAMx1B,UAAU,aAAay1B,GAC7B,4BACEz1B,UAAU,sBACV0J,QAAS,IAAMtM,KAAK60B,iBAAiB,CAAC2D,EAAIJ,EAAa,MAEvD,kBAAC,IAAD,OAEF,yBAAKx1B,UAAU,eACf,4BACEA,UAAU,sBACV0J,QAAS,IAAMtM,KAAK60B,iBAAiB,CAACuD,EAAa,GAAIvc,KAEvD,kBAAC,IAAD,OAEF,0BAAMjZ,UAAU,aAAa01B,GAC7B,4BACE11B,UAAU,sBACV0J,QAAS,IAAMtM,KAAK60B,iBAAiB,CAACuD,EAAa,GAAItc,KAEvD,kBAAC,IAAD,UA1CT,KAkDL,yBAAKlZ,UAAU,oCACb,yBAAKA,UAAU,6BACb,uJAEF,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,8BACZ5C,KAAKg3B,iBAAiB,SAAU,KAChCh3B,KAAKg3B,iBAAiB,SAAU,MAChCh3B,KAAKg3B,iBAAiB,SAAU,KAChCh3B,KAAKg3B,iBAAiB,SAAU,QAGrC,yBAAKp0B,UAAU,kBACb,yBAAKA,UAAU,8BACZ5C,KAAKg3B,iBAAiB,SAAU,KAChCh3B,KAAKg3B,iBAAiB,SAAU,MAChCh3B,KAAKg3B,iBAAiB,SAAU,KAChCh3B,KAAKg3B,iBAAiB,SAAU,SAIvC,yBAAKp0B,UAAU,aAAf,icAKF,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,6BACb,+FAEF,yBAAKA,UAAU,gBACZH,IAAE6S,KAAKpU,EAAQqR,cAAcnJ,IAAI0Z,GAChC9iB,KAAKy3B,kBAAkB3U,EAAS5hB,EAAQqR,aAAauQ,OAI3D,yBAAKlgB,UAAU,mBACb,yBAAKA,UAAU,6BACb,iJAEF,kBAAC61B,GAAD,CAAYviB,SAAUhV,EAAQG,OAMtCysB,SAAU,MAAD,EAC+B9tB,KAAK+L,MAAnC7F,EADD,EACCA,UAAWhF,EADZ,EACYA,QAASmE,EADrB,EACqBA,MAE5B,OADA4Z,IAASqE,QAAQC,IAAI,WAAYriB,GAE/B,yBAAK0B,UAAU,gBACb,yBAAKA,UAAU,WACZyC,GAASA,EAAMI,QAChB,yBAAK7C,UAAU,gBACb,yBAAKA,UAAU,eACf,4BACEkmB,SAAU5iB,EACVtD,UAAU,+BACV0J,QAAStM,KAAKysB,WAEd,kBAAC,IAAD,MALF,sDAQDvmB,GAAa,kBAACvD,EAAD,OACZuD,GAAazD,IAAEiO,QAAQxP,IAAY,yBAAK0B,UAAU,WAAf,sBACnCsD,IAAczD,IAAEiO,QAAQxP,IAAYlB,KAAK43B,mBA9pB/ClD,GAOGjmB,aAAe,CACpBvN,QAAS,IA6pBE0I,mBAvrBS,CAACkB,EAAOiB,KACvB,CACL7K,QAASqzB,GAAgBzpB,EAAOiB,GAChC8rB,aAAcrD,GAAqB1pB,EAAOiB,GAC1C0I,UAAW3J,EAAM2J,UAAUtO,KAC3BkQ,OAAQvL,EAAM0J,SAAS6B,OACvBhR,MAAOyF,EAAMsL,QAAQ/Q,OAASyF,EAAM2J,UAAUpP,MAC9Ca,UACE4E,EAAMsL,QAAQlQ,WAAa4E,EAAMsL,QAAQsJ,kBAAoB5U,EAAM2J,UAAUvO,YA+qB3CyhB,GAAzB/d,CAA6C4nB,YAAWkD,K,gPCrtBvE,MAAMgE,GAAa,CACjBC,WAAY,aACZC,YAAa,cACbC,WAAY,aACZC,YAAa,cACbC,SAAU,WACVC,UAAW,aAEPC,GAAiBC,IACrB,OAAQA,GACN,KAAKR,GAAWC,WACd,MAAO,CACL,kBAAC,KAAD,CACErvB,IAAI,KACJgsB,QAAQ,uBACRryB,KAAK,UACLozB,QAAQ,QACRV,mBAAiB,IAEnB,kBAAC,KAAD,CACErsB,IAAI,KACJgsB,QAAQ,uBACRryB,KAAK,UACLozB,QAAQ,QACRV,mBAAiB,KAGvB,KAAK+C,GAAWE,YACd,MAAO,CACL,kBAAC,KAAD,CAAKtvB,IAAI,IAAIgsB,QAAQ,eAAeryB,KAAK,UAAUozB,QAAQ,QAAQV,mBAAiB,IACpF,kBAAC,KAAD,CACErsB,IAAI,IACJgsB,QAAQ,qBACRryB,KAAK,UACLozB,QAAQ,QACRV,mBAAiB,IAEnB,kBAAC,KAAD,CACErsB,IAAI,IACJgsB,QAAQ,mBACRryB,KAAK,YACLozB,QAAQ,QACRV,mBAAiB,IAEnB,kBAAC,KAAD,CACErsB,IAAI,IACJgsB,QAAQ,qBACRryB,KAAK,UACLozB,QAAQ,QACRV,mBAAiB,IAEnB,kBAAC,KAAD,CAAKrsB,IAAI,IAAIgsB,QAAQ,eAAeryB,KAAK,UAAUozB,QAAQ,QAAQV,mBAAiB,KAExF,KAAK+C,GAAWG,WACd,MAAO,CACL,kBAAC,KAAD,CACEvvB,IAAI,KACJgsB,QAAQ,uBACRryB,KAAK,UACLozB,QAAQ,QACRV,mBAAiB,IAEnB,kBAAC,KAAD,CACErsB,IAAI,KACJgsB,QAAQ,uBACRryB,KAAK,UACLozB,QAAQ,QACRV,mBAAiB,KAGvB,KAAK+C,GAAWI,YACd,MAAO,CACL,kBAAC,KAAD,CAAKxvB,IAAI,IAAIgsB,QAAQ,eAAeryB,KAAK,UAAUozB,QAAQ,QAAQV,mBAAiB,IACpF,kBAAC,KAAD,CACErsB,IAAI,IACJgsB,QAAQ,qBACRryB,KAAK,UACLozB,QAAQ,QACRV,mBAAiB,IAEnB,kBAAC,KAAD,CACErsB,IAAI,IACJgsB,QAAQ,mBACRryB,KAAK,YACLozB,QAAQ,QACRV,mBAAiB,IAEnB,kBAAC,KAAD,CACErsB,IAAI,IACJgsB,QAAQ,qBACRryB,KAAK,UACLozB,QAAQ,QACRV,mBAAiB,IAEnB,kBAAC,KAAD,CAAKrsB,IAAI,IAAIgsB,QAAQ,eAAeryB,KAAK,UAAUozB,QAAQ,QAAQV,mBAAiB,KAExF,KAAK+C,GAAWK,SACd,MAAO,CACL,kBAAC,KAAD,CACEzvB,IAAI,KACJgsB,QAAQ,oBACRryB,KAAK,UACLozB,QAAQ,QACRV,mBAAiB,IAEnB,kBAAC,KAAD,CACErsB,IAAI,KACJgsB,QAAQ,oBACRryB,KAAK,UACLozB,QAAQ,QACRV,mBAAiB,KAGvB,KAAK+C,GAAWM,UACd,MAAO,CACL,kBAAC,KAAD,CAAK1vB,IAAI,IAAIgsB,QAAQ,YAAYryB,KAAK,UAAUozB,QAAQ,QAAQV,mBAAiB,IACjF,kBAAC,KAAD,CAAKrsB,IAAI,IAAIgsB,QAAQ,kBAAkBryB,KAAK,UAAUozB,QAAQ,QAAQV,mBAAiB,IACvF,kBAAC,KAAD,CAAKrsB,IAAI,IAAIgsB,QAAQ,gBAAgBryB,KAAK,YAAYozB,QAAQ,QAAQV,mBAAiB,IACvF,kBAAC,KAAD,CAAKrsB,IAAI,IAAIgsB,QAAQ,kBAAkBryB,KAAK,UAAUozB,QAAQ,QAAQV,mBAAiB,IACvF,kBAAC,KAAD,CAAKrsB,IAAI,IAAIgsB,QAAQ,YAAYryB,KAAK,UAAUozB,QAAQ,QAAQV,mBAAiB,KAErF,QACE,OAAO,OAIPrB,QAAmBntB,EAEnBgyB,GAAmB3G,GAAuB,MAC1C4G,GAAmB5G,GAAuB,eAE1C6G,GAAkBC,eAAU,CAAChe,EAAIC,EAAI9G,KACzC,IAAK6G,IAAOC,EACV,MAAO,GAET,IAAIge,EAAMje,EAAG+Y,cAAc,GAAGzZ,OAC1B4e,EAAMje,EAAG8Y,cAAc,GAAGzZ,OAC9B,MAAM6e,EAAQh3B,IAAEwU,KACdxU,IAAE2mB,OAAO,QACT3mB,IAAE2G,IAAIN,IACAA,EAAK8R,SACP2e,EAAMzwB,EAAK8R,QAET9R,EAAK4wB,UACPF,EAAM1wB,EAAK4wB,SAEN,CACLC,QAASJ,EACTG,QAASF,EACT7xB,KAAMmB,EAAKnB,QAGflF,IAAEm3B,aAAa,QAfHn3B,CAgBZ,IAAI6Y,EAAG+Y,iBAAkB9Y,EAAG8Y,cAAcjrB,IAAIigB,IAAE,CAAO1hB,KAAM0hB,EAAG1hB,KAAM+xB,QAASrQ,EAAGzO,YAEpF2e,EAAMje,EAAG8Y,cAAc,GAAGnW,MAC1Bub,EAAMje,EAAG6Y,cAAc,GAAGnW,MAC1B,MAAM4b,EAAQp3B,IAAEwU,KACdxU,IAAE2mB,OAAO,QACT3mB,IAAE2G,IAAIN,IACAA,EAAKmV,QACPsb,EAAMzwB,EAAKmV,OAETnV,EAAKgxB,SACPN,EAAM1wB,EAAKgxB,QAEN,CACLC,OAAQR,EACRO,OAAQN,EACR7xB,KAAMmB,EAAKnB,QAZHlF,CAeZ,IAAI6Y,EAAG8Y,iBAAkB7Y,EAAG6Y,cAAchrB,IAAIigB,IAAE,CAAO1hB,KAAM0hB,EAAG1hB,KAAMmyB,OAAQzQ,EAAGpL,WAE7E+b,EAAqBv3B,IAAE+f,UAAU9iB,MAAM4D,KAAK,CAAElD,OAAQ,KAAMgJ,IAAI,CAAC3J,EAAG8Y,IAAM,CAACA,EAAI,EAAG,MA8ExF,OA7EA9V,IAAE6S,KAAK0kB,GAAoBxkB,QAAQC,IACjC,MAAMhC,EAAShR,IAAEwU,KACfxU,IAAE2G,IAAI,SACN3G,IAAE+nB,OAAO,iBAFI/nB,CAGb,IAAI6Y,EAAG/F,eAAeE,MAAW8F,EAAGhG,eAAeE,KAC/CtP,EAAO,CACX1G,EAAGgW,EACHwQ,IAAK,CACHgU,MAAO,EACPC,YAAa,EACbC,MAAO,EACPC,YAAa,EACbC,UAAW,EACXC,QAAS,IAEXplB,OAAQ,CACN+kB,MAAO,EACPC,YAAa,EACbC,MAAO,EACPC,YAAa,EACbC,UAAW,EACXC,QAAS,IAEXnlB,OAAQ,CACN8kB,MAAO,EACPC,YAAa,EACbC,MAAO,EACPC,YAAa,EACbC,UAAW,EACXC,QAAS,KAGb7mB,EAAO+B,QAAQ3D,IACb,MAAM0oB,EAAU1oB,EAAMuE,QAAQxW,UAAUwD,GAAKA,EAAE8S,WAAaoF,EAAGja,IACzDm5B,EAAU3oB,EAAMuE,QAAQxW,UAAUwD,GAAKA,EAAE8S,WAAaqF,EAAGla,IACzDo5B,EAAU5oB,EAAME,UAAU8K,WAAW,KAAO1W,EAAK+O,OAAS/O,EAAKgP,OACjEolB,EAAU,GAAKC,EAAU,EAC3BlX,QAAQC,IAAI,QACHgX,EAAU,GACnBp0B,EAAK8f,IAAIiU,cACTO,EAAQP,eACCM,EAAU,GACnBr0B,EAAK8f,IAAImU,cACTK,EAAQL,eACCG,EAAUC,GACnBr0B,EAAK8f,IAAIgU,QACTQ,EAAQR,SACCO,EAAUD,IACnBp0B,EAAK8f,IAAIkU,QACTM,EAAQN,WAIZ,MAAMO,EAAeC,IACnB,MAAMC,EAAcD,EAAQV,MAAQU,EAAQR,OAAS,EACrDQ,EAAQL,QAAQL,MAAQU,EAAQV,MAAQW,EACxCD,EAAQL,QAAQH,MAAQQ,EAAQR,MAAQS,GAE1CF,EAAav0B,EAAK8f,KAClByU,EAAav0B,EAAKgP,QAClBulB,EAAav0B,EAAK+O,QAElB,MAAM2lB,EAAgB,CAACF,EAASG,KAC9BH,EAAQV,MAAQU,EAAQV,MAAQa,EAChCH,EAAQT,YAAcS,EAAQT,YAAcY,EAC5CH,EAAQR,MAAQQ,EAAQR,MAAQW,EAChCH,EAAQP,YAAcO,EAAQP,YAAcU,EAC5CH,EAAQN,UACN,EAAIM,EAAQV,MAAQU,EAAQT,YAAcS,EAAQR,MAAQQ,EAAQP,aAEtES,EAAc10B,EAAK8f,IAAKxR,EAAUsmB,YAAYtlB,IAC9ColB,EAAc10B,EAAK+O,OAAQT,EAAUoe,cAAcpd,IACnDolB,EAAc10B,EAAKgP,OAAQV,EAAUme,cAAcnd,IAEnDukB,EAAmBvkB,GAAStP,IAGvB,CACLkuB,cAAeoF,EACfrF,cAAeyF,EACfG,mBAAoBv3B,IAAEC,OAAOs3B,MAmB3BrS,GAAqB,CACzBvE,gBACAyO,qBACAC,wBAGF,MAAMkJ,WAAuBxsB,YAAW,eAAD,oBAarC1D,MAAQ,CACN6pB,sBAAsB,EACtBsG,gBAAiBvC,GAAWK,UAfO,KAkBrCtM,UAAY,MACYzsB,KAAK+L,MAAnB7F,WACMlG,KAAK+L,MAAMqX,gBApBU,KAuBrCyR,iBAAmB3lB,IAAU,MACnBmH,EAAWrW,KAAK+L,MAAhBsK,OACRrW,KAAK+L,MAAM8lB,kB,2WAAX,IACKxb,EADL,CAEE6d,SAAUhlB,MA3BuB,KA+BrCgsB,SAAW,CAAE1wB,IAAK,EAAGC,OAAQ,EAAGH,MAAO,EAAGC,KAAM,GA/BX,KAgCrC4wB,UAAY,CAAC,UAAW,WAhCa,KAiCrCC,UAAY,CAAC,gBAAiB,iBAjCO,KAkCrCC,iBAAmB/7B,GAAS4I,GAAU5I,GAAO2H,qBAlCR,KAmCrCq0B,UAAY,EAAGpuB,SAAQ0oB,UAAS5R,YAAa,MAAD,EACZhkB,KAAK+L,MAA3B7K,EADkC,EAClCA,QAASq6B,EADyB,EACzBA,SACXC,EAASt6B,EAAQ/B,KACjBs8B,EAASF,EAASp8B,KACxB,OAAKy2B,GAAYA,EAAQ,GAIvB,yBAAKhzB,UAAU,mBACb,6BAAMsF,GAAU0tB,EAAQ,GAAGA,QAAQjuB,MAAMV,sBACxC2uB,EAAQ,IACP,yBAAKtuB,MAAO,CAAEgpB,WAAY,OAAQpf,MAAO0kB,EAAQ,GAAG1kB,QACjDsqB,EADH,KACaj8B,KAAKiY,MAAMoe,EAAQ,GAAGt2B,QAGpCs2B,EAAQ,IACP,yBAAKtuB,MAAO,CAAEgpB,WAAY,OAAQpf,MAAO0kB,EAAQ,GAAG1kB,QACjDuqB,EADH,KACal8B,KAAKiY,MAAMoe,EAAQ,GAAGt2B,SAZhC,MAxC0B,KAyKrCo8B,UAAY,CAAElxB,IAAK,EAAGC,OAAQ,EAAGH,MAAO,EAAGC,KAAM,GAzKZ,KA0KrCoxB,WAAa,EAAGzuB,SAAQ0oB,UAAS5R,YAAa,MAAD,EACbhkB,KAAK+L,MAA3B7K,EADmC,EACnCA,QAASq6B,EAD0B,EAC1BA,SACTN,EAAoBj7B,KAAK8K,MAAzBmwB,gBACFW,EAAQ,CAAClD,GAAWC,WAAYD,GAAWG,WAAYH,GAAWK,UAAUloB,SAChFoqB,GAEIO,EAASt6B,EAAQ/B,KACjBs8B,EAASF,EAASp8B,KAExB,IAAKy2B,IAAYA,EAAQ,GACvB,OAAO,KAET,MAAMiG,EAAmB,CAAC/yB,EAAMkb,IAC9B,yBAAK1a,IAAKR,EAAK3J,KAAMmI,MAAO,CAAEgpB,WAAY,OAAQpf,MAAOpI,EAAKoI,QAC3D8S,EADH,KACYzkB,KAAKiY,MAA0C,IAApC/U,IAAEsC,IAAI+D,EAAKwsB,QAASxsB,EAAK8sB,UADhD,KAIF,OACE,yBAAKhzB,UAAU,mBACb,uCAAagzB,EAAQ,GAAGA,QAAQn2B,GAC/Bo8B,EAAiBjG,EAAQ,GAAT,UAAgB4F,EAAhB,WACfI,GAASC,EAAiBjG,EAAQ,GAAT,UAAgB6F,EAAhB,mBACzBG,GAASC,EAAiBjG,EAAQ,GAAT,uBACzBgG,GAASC,EAAiBjG,EAAQ,GAAT,UAAgB4F,EAAhB,kBAC1BK,EAAiBD,EAAQhG,EAAQ,GAAKA,EAAQ,GAA9B,UAAqC6F,EAArC,YAlMc,KAsMrCK,WAAa,CAAC,EAAG,GAtMoB,KAuMrCC,UAAY,CAAC,EAAG,GAAK,GAvMgB,KAwMrCC,cAAgBv8B,GAAC,UAAOF,KAAKiY,MAAU,IAAJ/X,GAAlB,KA7IjBw1B,uBAAwB,MACdgH,EAAiBj8B,KAAK+L,MAAtBkwB,aACR,OACE,kBAAC,KAAD,CAAqB/G,UAAWZ,GAAkBa,OAAQ,KACxD,kBAAC,KAAD,CAAWhvB,KAAM81B,EAAa5H,cAAee,OAAQp1B,KAAKk7B,UACxD,kBAAC,KAAD,CAAe7F,gBAAgB,QAC/B,kBAAC,KAAD,CACEC,QAAQ,OACRvxB,KAAK,SACLwxB,OAAQv1B,KAAKm7B,UACb3F,cAAex1B,KAAKq7B,mBAEtB,kBAAC,KAAD,CACE5F,eAAe,EACfF,OAAQv1B,KAAKo7B,UACb5F,cAAej2B,KAAKiY,MACpB3U,MAAO,KAET,kBAAC,KAAD,CAAe8vB,EAAG,IAAM+C,OAAO,UAC/B,kBAAC,KAAD,CAAiBC,mBAAmB,EAAOlF,QAASzwB,KAAKs7B,YACzD,kBAAC,KAAD,CACEv3B,KAAK,WACL4xB,mBAAmB,EACnBL,QAAQ,UACRI,OAAO,UACPG,YAAa,EACbC,KAAK,IAEP,kBAAC,KAAD,CACE/xB,KAAK,WACL4xB,mBAAmB,EACnBL,QAAQ,UACRI,OAAO,UACPG,YAAa,EACbC,KAAK,MAOfC,qBAAsB,MAAD,EACyB/1B,KAAK+L,MAAzCkwB,EADW,EACXA,aAAc/6B,EADH,EACGA,QAASq6B,EADZ,EACYA,SACzBC,EAASt6B,EAAQ/B,KACjBs8B,EAASF,EAASp8B,KAExB,OACE,kBAAC,KAAD,CAAqB+1B,UAAWZ,GAAkBa,OAAQ,KACxD,kBAAC,KAAD,CACEhvB,KAAM81B,EAAa7H,cACnBgB,OAAQ,CAAE5qB,IAAK,EAAGC,OAAQ,EAAGH,MAAO,EAAGC,KAAM,IAE7C,kBAAC,KAAD,CAAe8qB,gBAAgB,QAC/B,kBAAC,KAAD,CACEC,QAAQ,OACRvxB,KAAK,SACLwxB,OAAQ,CAAC,UAAW,WACpBC,cAAel2B,GAAS4I,GAAU5I,GAAO2H,uBAE3C,kBAAC,KAAD,CACEwuB,eAAe,EACfF,OAAQ,CAAC,EAAGS,GAAYA,EAAU,EAAIA,EAAU,EAAIA,EAAU,GAC9DC,SAAU,EACVC,UAAQ,EACRrzB,MAAO,KAET,kBAAC,KAAD,CACE8yB,mBAAmB,EACnBlF,QAAS,EAAGvjB,SAAQ0oB,UAAS5R,WACtB4R,GAAYA,EAAQ,GAIvB,yBAAKhzB,UAAU,mBACb,6BAAMsF,GAAU0tB,EAAQ,GAAGA,QAAQjuB,MAAMV,sBACxC2uB,EAAQ,IACP,yBAAKtuB,MAAO,CAAEgpB,WAAY,OAAQpf,MAAO0kB,EAAQ,GAAG1kB,QACjDsqB,EADH,MACc5F,EAAQ,GAAGt2B,OAG1Bs2B,EAAQ,IACP,yBAAKtuB,MAAO,CAAEgpB,WAAY,OAAQpf,MAAO0kB,EAAQ,GAAG1kB,QACjDuqB,EADH,MACc7F,EAAQ,GAAGt2B,QAZtB,OAmBb,kBAAC,KAAD,CACEq2B,mBAAmB,EACnB5xB,KAAK,YACLuxB,QAAQ,SACRI,OAAO,UACPG,YAAa,EACbC,KAAK,IAEP,kBAAC,KAAD,CACEH,mBAAmB,EACnB5xB,KAAK,YACLuxB,QAAQ,SACRI,OAAO,UACPG,YAAa,EACbC,KAAK,MAwCfoG,2BAA4B,MAClBD,EAAiBj8B,KAAK+L,MAAtBkwB,aACAhB,EAAoBj7B,KAAK8K,MAAzBmwB,gBAER,OACE,kBAAC,KAAD,CAAqBp4B,MAAM,OAAOsyB,OAAQ,IACxC,kBAAC,KAAD,CACEgH,OAAO,WACPh2B,KAAM,IAAI81B,EAAajC,oBACvB5E,OAAQp1B,KAAK07B,WAEb,kBAAC,KAAD,CAAiB/F,mBAAmB,EAAOlF,QAASzwB,KAAK27B,aACzD,kBAAC,KAAD,CAAOzF,UAAQ,EAACZ,QAAQ,IAAIvxB,KAAK,WAAWlB,MAAO,KACnD,kBAAC,KAAD,CACEkB,KAAK,SACLwxB,OAAQv1B,KAAK87B,WACb1F,MAAOp2B,KAAK+7B,UACZvG,cAAex1B,KAAKg8B,gBAEtB,kBAAC,KAAD,CAAev8B,EAAG,GAAKi2B,OAAO,SAC7BuD,GAAegC,KAMxBrD,gBAAiB,MAAD,EACwB53B,KAAK+L,MAAnC7K,EADM,EACNA,QAASq6B,EADH,EACGA,SAAUllB,EADb,EACaA,OACnB4kB,EAAoBj7B,KAAK8K,MAAzBmwB,gBACR,OACE,yBAAKr4B,UAAU,WACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,eAAf,kCACA,6BAAM1B,EAAQ/B,OAEhB,yBAAKyD,UAAU,oBACb,yBAAKA,UAAU,eAAf,4BACA,iCAAO1B,EAAQiR,OAEjB,yBAAKvP,UAAU,oBACb,yBAAKA,UAAU,eAAf,sBACA,6BAAM1B,EAAQ0Z,SAEhB,yBAAKhY,UAAU,oBACb,yBAAKA,UAAU,eAAf,mFACA,6BAAM1B,EAAQyhB,eAAiBjb,GAAWxG,EAAQyhB,gBAAkB,gDAGxE,yBAAK/f,UAAU,8BACb,yBAAKA,UAAU,wCACb,yBAAKA,UAAU,eAAf,kCACA,6BAAM24B,EAASp8B,OAEjB,yBAAKyD,UAAU,oBACb,yBAAKA,UAAU,eAAf,4BACA,iCAAO24B,EAASppB,OAElB,yBAAKvP,UAAU,oBACb,yBAAKA,UAAU,eAAf,sBACA,6BAAM24B,EAAS3gB,SAEjB,yBAAKhY,UAAU,oBACb,yBAAKA,UAAU,eAAf,mFACA,6BAAM24B,EAAS5Y,eAAiBjb,GAAW6zB,EAAS5Y,gBAAkB,gDAG1E,yBAAK/f,UAAU,wCACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,kCACb,+HAEF,yBAAKA,UAAU,kCACZ,MACC,MAAMg5B,EAAQ,CACZlD,GAAWC,WACXD,GAAWG,WACXH,GAAWK,UACXloB,SAASoqB,GACX,OACE,yBAAKr4B,UAAU,iBACb,kBAAC,GAAD,CACEA,UAAU,iBACV+L,SAAUitB,EACVhuB,SAAU,IACR5N,KAAKsL,SAASR,IAAK,CACjBmwB,gBAAiB,CACf,CAACvC,GAAWC,YAAaD,GAAWE,YACpC,CAACF,GAAWG,YAAaH,GAAWI,YACpC,CAACJ,GAAWK,UAAWL,GAAWM,UAClC,CAACN,GAAWE,aAAcF,GAAWC,WACrC,CAACD,GAAWI,aAAcJ,GAAWG,WACrC,CAACH,GAAWM,WAAYN,GAAWK,UACnCjuB,EAAMmwB,qBAZd,oDAkBA,yBAAKr4B,UAAU,eACb,kBAAC,GAAD,CACEwK,KAAK,qBACLF,OAAQ,CAACwrB,GAAWK,SAAUL,GAAWM,WAAWnoB,SAClDoqB,GAEF9tB,SAAU,KACRnN,KAAKsL,SAASR,IAAK,CACjBmwB,gBAAiBW,EAAQlD,GAAWK,SAAWL,GAAWM,gBAIhE,kBAAC,GAAD,CACE5rB,KAAK,uCACLF,OAAQ,CAACwrB,GAAWC,WAAYD,GAAWE,aAAa/nB,SACtDoqB,GAEF9tB,SAAUD,IACRlN,KAAKsL,SAASR,IAAK,CACjBmwB,gBAAiBW,EACblD,GAAWC,WACXD,GAAWE,kBAIrB,kBAAC,GAAD,CACExrB,KAAK,iCACLF,OAAQ,CAACwrB,GAAWG,WAAYH,GAAWI,aAAajoB,SACtDoqB,GAEF9tB,SAAUD,IACRlN,KAAKsL,SAASR,IAAK,CACjBmwB,gBAAiBW,EACblD,GAAWG,WACXH,GAAWI,qBA5D5B,IAqEH,yBAAKl2B,UAAU,mBAAmB5C,KAAKk8B,+BAI7C,yBAAKt5B,UAAU,mBACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,6BACb,qDAEF,yBAAKA,UAAU,mBAAmB5C,KAAKi1B,yBAEzC,yBAAKryB,UAAU,qBACb,yBAAKA,UAAU,6BACb,iGAEF,yBAAKA,UAAU,mBAAmB5C,KAAK+1B,wBAG1C,MACC,MAAMqC,EAAe/hB,EAAO6d,UAAYhzB,EAAQ+yB,YAC1CoE,EAAQxwB,KAAyB,IAAlBuwB,EAAa,GAAY,GAAK,GAAK,IAAInwB,OAAO,KAC7DqwB,EAAQzwB,KAAyB,IAAlBuwB,EAAa,GAAY,GAAK,GAAK,IAAInwB,OAAO,KAC7DswB,EAAKh5B,KAAKwO,IAAIqqB,EAAa,GAAK,EAAGl3B,EAAQ8yB,YAAY,IACvDwE,EAAKj5B,KAAKuO,IAAIsqB,EAAa,GAAK,EAAGA,EAAa,IAChDvc,EAAKtc,KAAKwO,IAAIqqB,EAAa,GAAK,EAAGA,EAAa,IAChDtc,EAAKvc,KAAKuO,IAAIsqB,EAAa,GAAK,EAAGl3B,EAAQ8yB,YAAY,IAC7D,OACE,yBAAKpxB,UAAU,mBACb,kBAACqM,GAAD,CACEC,MAAOkpB,EACPtqB,IAAK5M,EAAQ8yB,YAAY,GACzBjmB,IAAK7M,EAAQ8yB,YAAY,GACzBpmB,SAAU5N,KAAK60B,mBAEjB,yBAAKjyB,UAAU,4BACb,4BACEA,UAAU,sBACV0J,QAAS,IAAMtM,KAAK60B,iBAAiB,CAAC0D,EAAIH,EAAa,MAEvD,kBAAC,IAAD,OAEF,0BAAMx1B,UAAU,aAAay1B,GAC7B,4BACEz1B,UAAU,sBACV0J,QAAS,IAAMtM,KAAK60B,iBAAiB,CAAC2D,EAAIJ,EAAa,MAEvD,kBAAC,IAAD,OAEF,yBAAKx1B,UAAU,eACf,4BACEA,UAAU,sBACV0J,QAAS,IAAMtM,KAAK60B,iBAAiB,CAACuD,EAAa,GAAIvc,KAEvD,kBAAC,IAAD,OAEF,0BAAMjZ,UAAU,aAAa01B,GAC7B,4BACE11B,UAAU,sBACV0J,QAAS,IAAMtM,KAAK60B,iBAAiB,CAACuD,EAAa,GAAItc,KAEvD,kBAAC,IAAD,UA1CT,MAsDXgS,SAAU,MAAD,EAC+B9tB,KAAK+L,MAAnC7F,EADD,EACCA,UAAWhF,EADZ,EACYA,QAASmE,EADrB,EACqBA,MAE5B,OADA4Z,IAASqE,QAAQC,IAAI,WAAYriB,GAE/B,yBAAK0B,UAAU,wBACb,yBAAKA,UAAU,WACZyC,GAASA,EAAMI,QAChB,yBAAK7C,UAAU,gBACb,yBAAKA,UAAU,eACf,4BACEkmB,SAAU5iB,EACVtD,UAAU,+BACV0J,QAAStM,KAAKysB,WAEd,kBAAC,IAAD,MALF,sDAQDvmB,GAAa,kBAACvD,EAAD,OACZuD,GAAazD,IAAEiO,QAAQxP,IAAY,yBAAK0B,UAAU,WAAf,sBACnCsD,IAAczD,IAAEiO,QAAQxP,IAAYlB,KAAK43B,mBAtb/CoD,GAOGvsB,aAAe,CACpBvN,QAAS,GACTq6B,SAAU,GACVU,aAAc,IAmbHryB,mBAldS,CAACkB,EAAOiB,KAC9B,MAAMqwB,EAAWjD,GAAiBruB,EAAOiB,GACnCwvB,EAAWnC,GAAiBtuB,EAAOiB,GACzC,MAAO,CACL7K,QAASk7B,EACTb,WACAU,aAAc5C,GAAgB+C,EAAUb,EAAUzwB,EAAM2J,UAAUtO,MAClEsO,UAAW3J,EAAM2J,UAAUtO,KAC3BkQ,OAAQvL,EAAM0J,SAAS6B,OACvBhR,MAAOyF,EAAMsL,QAAQ/Q,OAASyF,EAAM2J,UAAUpP,MAC9Ca,UACE4E,EAAMsL,QAAQlQ,WAAa4E,EAAMsL,QAAQsJ,kBAAoB5U,EAAM2J,UAAUvO,YAuc3CyhB,GAAzB/d,CAA6C4nB,YAAWwJ,K,olBC3vBvE,MAAMl1B,GAAO,eACPC,GAAO,eACPC,GAAK,aAELC,GAAe,CACnBC,WAAW,EACXC,KAAM,MA+BD,MAAMk2B,GAAY,IAChB33B,UACLC,EAAS,CAAEZ,KAAM+B,KACjB,IACE,MAAMK,QAAaxB,EAASX,EAAU,CAAEC,IAAI,GAAD,OAAK2B,EAAL,eAE3C,OADAjB,EAAS,CAAEZ,KAAMgC,GAASI,SACnBA,EACP,MAAOd,GAEP,OADAV,EAAS,CAAEZ,KAAMiC,GAAOX,UACjB,O,6kBC3Cb,MAAMS,GAAO,gBACPC,GAAO,gBACPC,GAAK,cAELC,GAAe,CACnBC,WAAW,EACXC,KAAM,KACNd,MAAO,MA8BF,MAAMi3B,GAAQC,GACZ73B,UACLC,EAAS,CAAEZ,KAAM+B,KACjB,IACE,MAAMK,QAAaxB,EACjBP,EAAS,CACPH,IAAI,GAAD,OAAK2B,EAAL,iBACHvB,KAAM,CAAEm4B,MAAOD,EAAeE,YAMlC,OAHA33B,IAAQ43B,IAAI,UAAWv2B,EAAKtB,QAAS,CAAE83B,QAAS,KAChDh4B,EAAS,CAAEZ,KAAMgC,GAASI,SAC1BxB,EAAS03B,MACFl2B,EACP,MAAOd,GAEP,OADAV,EAAS,CAAEZ,KAAMiC,GAAOX,UACjB,OCvCPsiB,GAAqB,CACzB2U,MAAOM,GACPC,OD0CoB,IACbn4B,UACLC,EAAS,CAAEZ,KAAM+B,KACjBnB,EAASb,KACT,IACE,MAAMqC,QAAaxB,EACjBP,EAAS,CACPH,IAAI,GAAD,OAAK2B,EAAL,cAIP,OADAjB,EAAS,CAAEZ,KAAMgC,GAASI,SACnBA,EACP,MAAOd,GAEP,OADAV,EAAS,CAAEZ,KAAMiC,GAAOX,UACjB,QCXEuE,mBAvDSkB,IACf,CACLgyB,eAAgBhyB,EAAMwxB,MAAMp2B,UAC5B62B,cAAejyB,EAAMoe,KAAKhjB,UAC1BgjB,KAAMpe,EAAMoe,KAAK/iB,OAqDnBwhB,GAFa/d,EA1Cf,UAAgB,eAAEkzB,EAAF,cAAkBC,EAAlB,KAAiC7T,EAAjC,MAAuCoT,EAAvC,OAA8CO,IAC5D,OACE,4BAAQj6B,UAAU,WAChB,6BACE,4BACE,4BACE,kBAAC,IAAD,CAASguB,OAAK,EAACrtB,GAAI3C,EAAOC,YAAYC,MAAtC,gBAIF,4BACE,kBAAC,IAAD,CAAS8vB,OAAK,EAACrtB,GAAI3C,EAAOI,QAAQF,MAAlC,YAIF,4BACE,kBAAC,IAAD,CAAS8vB,OAAK,EAACrtB,GAAI3C,EAAOG,MAAMD,MAAhC,YAMN,yBAAK8B,UAAU,eACf,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CACEA,UAAU,cACVguB,OAAK,EACLrtB,GAAI3C,EAAOM,QAAQC,QAAQ,CAAEE,GAAIoB,IAAEsC,IAAI,YAAamkB,MAEnDzmB,IAAE4N,MAAM,GAAI,kBAAmB6Y,IAElC,4BACEtmB,UAAU,+BACV0J,QAASuwB,EACT/T,SAAUgU,GAAkBC,GAE5B,+C,sCCnDV,MAOMpV,GAAqB,CACzB2U,MAAOM,IAkDMhzB,mBA1DSkB,IACf,CACL5E,UAAW4E,EAAMwxB,MAAMp2B,UACvBb,MAAOyF,EAAMwxB,MAAMj3B,QAyDrBsiB,GAFa/d,EA/Cf,UAAqB,UAAE1D,EAAF,MAAab,EAAb,MAAoBi3B,IAAU,MAAD,EACpB5zB,oBAAS,GADW,mBACzCs0B,EADyC,KAChCC,EADgC,KAE1CC,EAAmBrnB,IACnBA,EAAIxQ,MACNie,QAAQC,IAAI,+BAAgC1N,GAE5CymB,EAAMzmB,IAIV,OACE,yBAAKjT,UAAU,gBACb,yBAAKA,UAAU,aAAf,YACA,yBAAKA,UAAU,gBACb,kBAAC,eAAD,CACEu6B,SAAS,2EACT5sB,WAAW,QACX6sB,UAAWF,EACXG,UAAWH,EACXI,aAAc,qBACdxP,OAAQ,EAAGxhB,UAASwc,cAClB,4BACElmB,UAAU,+BACV0J,QAASA,EACTwc,SAAUA,GAAY5iB,GAEtB,kBAAC,IAAD,MACA,4CAKPb,GAAS,yBAAKzC,UAAU,SAASyC,EAAMI,SACxC,yBAAK7C,UAAU,UAAf,kCACkC,IAC/Bo6B,EACC,kBAAC,KAAD,CAAO5vB,KAAK,eAAKxK,UAAU,UAE3B,0BAAM0J,QAAS,IAAM2wB,GAAS,GAAOr6B,UAAU,cAA/C,uB,ymBCtDVwD,KAAQC,UAAUC,MAClB,MAAMC,GAAU,IAAIH,KAAQ,SACtBI,GAAY,CAChBC,QAAS,OACTC,UAAWC,KACXC,MAAO,CAAC,MAAO,OAAQ,UAEZc,GAAaC,IACxB,MAAMC,EAAUC,OACbC,QAAQ,OACRC,KAAKF,KAAOF,GAAMG,QAAQ,OAAQ,QACrC,OAAmB,IAAZF,EAAgB,6CAAwB,IAAZA,EAAgB,iCAAUrB,GAAQ0B,OAAON,EAAMnB,KAGvE+2B,GAAiBp3B,GAAI,MAC7BA,EAD6B,CAEhCiQ,QAAS3T,IAAEwU,KACTxU,IAAEsC,IAAI,WACNtC,IAAEyU,QACFzU,IAAE2G,IAAI,EAAE0Q,EAAShR,MACf,MAAM00B,EAAU/6B,IAAEwS,KAChB7R,GAAKX,IAAEqpB,MAAMrpB,IAAEyf,SAAU,CAAC9e,EAAEoe,SAAUpe,EAAE6c,OAAQ7c,EAAE4c,MAAO5c,EAAE2c,KAAM3c,EAAE0c,SACnEhX,EAAKsN,SAEDqnB,EACJD,GACA,CAACA,EAAQhc,SAAUgc,EAAQvd,OAAQud,EAAQxd,MAAOwd,EAAQzd,KAAMyd,EAAQ1d,QAAQzG,OAC9E,CAAC1D,EAAK+nB,IAAM/nB,EAAM+nB,EAClB,GATqB,EAYO50B,EAAKob,YAAYC,MAAM,gBAZ9B,mBAYlBpS,EAZkB,KAYPC,EAZO,KAczB,MAAO,CACLmB,KAAMrK,EAAK60B,MACXxiB,cAAe1Y,IAAE0U,SAAS2C,GAC1BlG,WAAY9K,EAAKob,YACjBlS,aACAD,YACA6rB,IAAK90B,EAAK80B,IACVttB,SAAUxH,EAAKwH,SACf8F,QAAStN,EAAKsN,QAAQhN,IAAI,CAACyM,EAAKxM,KAC9B,IAAIw0B,EAAsB,GAC1B,GAAIJ,EAAS,CACX,MAAM3b,EAAQ,CAACjM,EAAI2L,SAAU3L,EAAIoK,OAAQpK,EAAImK,MAAOnK,EAAIkK,KAAMlK,EAAIiK,QAClE,IAAIiC,GAAgB,EAChBE,EAAe,EASH,IAPdH,EAAMzL,OAAO,CAACynB,EAAMz0B,IACb5G,IAAEyf,SAAS4b,IAIhB7b,GAAgB6b,GACT,IAJL/b,EAAe1Y,GACR,IAIRjJ,SAEHy9B,EAAoB,CAAC,UAAW,QAAS,OAAQ,MAAO,QAAQ9b,IAC9D0b,EAAUxb,GAGhB,OAAO,IACL5gB,GAAIwU,EAAIxU,GACR6U,SAAUL,EAAIiI,OACd0C,SAAUra,EAAKwZ,QAAQ9J,EAAIiI,QAAQ0C,SACnCC,eAAgBta,EAAKwZ,QAAQ9J,EAAIiI,QAAQuC,YACzCS,iBAAkBjL,EAAIiL,iBACtBE,mBAAoBnL,EAAImL,mBACxBE,cAAerL,EAAIqL,cACnBvZ,KAAMkO,EAAI6K,OACV1Z,WAAY,IAAIqB,KAAKwN,EAAI6K,QACzBzO,MAAO4D,EAAI5D,MACXlL,cAAe8O,EAAI8K,gBACnBrM,MAAOuB,EAAIvB,MACX8M,cAAevL,EAAIwL,eACnBC,SAAUzL,EAAIyL,UAAYzL,EAAIyL,SAAW,IACzCC,QAAS1L,EAAI2L,SACbrN,MAAO0B,EAAIoK,OACX/L,KAAM2B,EAAImK,MACVjM,IAAK8B,EAAIkK,KACTjM,KAAM+B,EAAIiK,OACVjN,MAAOgD,EAAI4L,UACXC,KAAM7L,EAAI8L,UACV7L,SAAUD,EAAI+K,UACdgB,MAAO/L,EAAI8L,WAAa,IAAI/W,MAAM,KAAKiG,SAAS,OAC7CgtB,QAKXp7B,IAAE2G,IAAI+J,GACG,MACFA,EADL,CAEE2R,gBAAiB3R,EAAKiD,QAAQiD,OAC5B,CAACgX,EAAQxjB,IAAaA,EAAQlF,KAAO0oB,EAASxjB,EAAQlF,KAAO0oB,EAC7Dld,EAAKiD,QAAQ,GAAGzO,MAElByO,QAASjD,EAAKiD,QAAQhN,IAAIyM,IACxB,MAAM2L,EAAYjiB,KAAKkY,KAAK5B,EAAI0L,SAAW9e,IAAE8b,UAAUpL,EAAKnB,YAAe,EACrEsH,EAAMkI,EACRjiB,KAAKme,OACU,IAAX8D,EAA6B,GAAZ3L,EAAI1B,MAAwB,GAAX0B,EAAI3B,MAAwB,GAAZ2B,EAAI/B,OACrD0N,EAAW3L,EAAI1B,MAAQ0B,EAAI3B,KAAO2B,EAAI9B,IAAM8B,EAAI/B,MACjD,KACA,IACJ,KACEsO,EAASvM,EAAI0L,QACfhiB,KAAKme,OACa,IAAd7H,EAAI0L,QAA4B,GAAZ1L,EAAI1B,MAAwB,GAAX0B,EAAI3B,MAAwB,GAAZ2B,EAAI/B,OACxD+B,EAAI0L,QAAU1L,EAAI1B,MAAQ0B,EAAI3B,KAAO2B,EAAI9B,IAAM8B,EAAI/B,MACpD,KACA,IACJ,KACJ,OAAO,MACF+B,EADL,CAEEE,SAAUuD,EAAM,EAAI,EAAe,MAAX8I,EAAiB,IAAM9I,IAAQA,EAAIkB,QAAQ,GACnE6H,YAAaD,EACb2b,aAAct7B,IAAEiR,KAAK,CAAEwC,SAAUL,EAAIK,SAAUJ,QAAQ,GAAQ3C,EAAKiD,gBAK5E3T,IAAEmb,QAAQ,CAAC,kBAAmB,OAAQ,cAAe,CAAC,OAAQ,MAAO,SA1G9Dnb,CA2GP0D,K,6kBC1HJ,MAAML,GAAO,uBACPC,GAAO,uBACPC,GAAK,qBAELC,GAAe,CACnBC,WAAW,EACXC,KAAM,KACNd,MAAO,KACP24B,eAAgB,M,6kBCZlB,MAAMl4B,GAAO,oBACPC,GAAO,oBACPC,GAAK,kBAELC,GAAe,CACnBC,WAAW,EACXC,KAAM,IA2BD,MAAM83B,GAAiB,IACrBv5B,UACLC,EAAS,CAAEZ,KAAM+B,KACjB,IACE,MAAMK,QAAaxB,EAASX,EAAU,CAAEC,IAAI,GAAD,OAAK2B,EAAL,0BAE3C,OADAjB,EAAS,CAAEZ,KAAMgC,GAASI,SACnBA,EACP,MAAOd,GAEP,OADAV,EAAS,CAAEZ,KAAMiC,GAAOX,UACjB,O,6kBCzBb,MAAM64B,GAAsB,IActBvW,GAAqB,CACzBvE,gBACA+a,gBFgB6B,CAACC,EAAUC,EAAWC,KACnD,MAAMN,EAAiB7O,KAAY5qB,UAAU,CAC3Cg6B,UAAWH,EACX3qB,OAAQhR,IAAE4oB,QAAQ5oB,IAAE2Q,KAAK,CAACirB,EAAWC,KAAcE,KAAK,OAE1D,OAAO95B,UACLC,EAAS,CAAEZ,KAAM+B,GAASk4B,mBAC1B,IACE,MAAM73B,QAAaxB,EAASX,EAAU,CAAEC,IAAI,GAAD,OAAK2B,EAAL,uBAAwBo4B,MAC7DS,EAAgBh8B,IAAEwU,KAAKsmB,GAAgB96B,IAAEsC,IAAI,WAA7BtC,CAAyC0D,GAE/D,OADAxB,EAAS,CAAEZ,KAAMgC,GAASI,KAAMs4B,EAAeT,mBACxCS,EACP,MAAOp5B,GAEP,OADAV,EAAS,CAAEZ,KAAMiC,GAAOX,QAAO24B,mBACxB,QE7BXC,kBACAS,iBtBga8BC,GACvBj6B,MAAOC,EAAUC,KAAc,MAAD,EACIA,IAAWwR,QAA1CgP,EAD2B,EAC3BA,aAAclN,EADa,EACbA,aACtB,IAAKymB,EACH,OAAOh6B,EAASye,MAGlBze,EAAS,CAAEZ,KAAM+B,KACjB,IACE,MAAMK,QAAaxB,EACjBX,EAAU,CACRC,IAAI,GAAD,OAAK2B,EAAL,+BAAgCupB,KAAY5qB,UAAU,CAAEq6B,WAAYD,QAG3E,GAAIx4B,EAAKd,MACP,MAAM,IAAIG,MAAMW,EAAKd,OAGvB,MAAMw5B,EAAkBp8B,IAAE4T,OAAOvP,IAC/B,MAAMg4B,EAAiB5mB,EAAapR,EAAOyZ,cAC3C,IAAKue,EACH,OAAO,EAET,MAAMC,EAAYt8B,IAAEwS,KAClB+pB,GACEA,EAAI39B,KAAOyF,EAAOzF,IACjB29B,EAAI9oB,WAAapP,EAAOgX,QAAUkhB,EAAIlpB,WAAahP,EAAO8Z,UAC7Dke,EAAe1oB,SAEjB,OAAK2oB,IAMDA,EAAU19B,KAAOyF,EAAOzF,IAAM09B,EAAUzqB,OAASxN,EAAOwN,SALpC,IAAlBxN,EAAOgX,QAAgBghB,EAAe1oB,QAAQ,GAAG9B,MAAQxN,EAAOwN,QASrEnO,EAAKiQ,SAERkN,QAAQC,IAAI,oBAAqBpd,EAAM,iBAAkB04B,GAEzD,MAAMI,EAAa,CACjBtf,QAASxZ,EAAKwZ,QACdvJ,QAAS,IAAIgP,EAAahP,WAAYyoB,GACtCrb,cAAc,MAAM4B,EAAa5B,cAApB,GAAsCrd,EAAKqd,gBAE1D7e,EAAS0e,GAAmB4b,IAC5B,MAAO55B,GACPie,QAAQC,IAAIle,GACZV,EAAS,CAAEZ,KAAMiC,GAAOX,asB/cxB65B,GAAmB,CAACn7B,EAAM0R,IAE5B,yBACE7S,UAAW2G,IAAW,aAAc,CAClC4L,OAAiB,MAATpR,EACRgrB,QAAkB,OAAThrB,EACTirB,QAAkB,OAATjrB,EACTmR,OAAiB,MAATnR,EACRkrB,KAAe,SAATlrB,KAGR,0BAAMnB,UAAU,gBAAgBmB,GAChC,0BAAMnB,UAAU,gBAAgB6S,IAshBvB7L,mBArjBUkB,IAChB,CACL5E,UAAW4E,EAAMq0B,WAAWj5B,UAC5Bk5B,YAAat0B,EAAMq0B,WAAWh5B,KAC9Bd,MAAOyF,EAAMq0B,WAAW95B,MACxBmP,SAAU1J,EAAMsL,QAAQ5B,SACxBqF,WAAY/O,EAAMsL,QAAQyD,WAC1B3B,aAAcpN,EAAMsL,QAAQ8B,eA8iBQyP,GAAzB/d,EAjhBf,UAAoB,UAClB1D,EADkB,aAElBkd,EAFkB,eAGlB6a,EAHkB,gBAIlBE,EAJkB,iBAKlBO,EALkB,YAMlBU,EANkB,MAOlB/5B,EAPkB,SAQlBmP,EARkB,WASlBqF,EAAa,GATK,aAUlB3B,EAAe,KACb,MAAD,EAC6BxP,mBAAS,IADtC,mBACMjD,EADN,KACe45B,EADf,OAEmD32B,mBAAS,IAF5D,mBAEM42B,EAFN,KAE0BC,EAF1B,OAGuC72B,oBAAS,GAHhD,mBAGM82B,EAHN,KAGqBC,EAHrB,OAI2B/2B,oBAAS,GAJpC,mBAIMg3B,EAJN,KAIeC,EAJf,OAKiCj3B,mBAAS,MAL1C,mBAKM21B,EALN,KAKiBuB,EALjB,OAMmCl3B,mBAAS,MAN5C,mBAMM41B,EANN,KAMkBuB,EANlB,OAOmCn3B,mBAAS,MAP5C,mBAOMo3B,EAPN,KAOkBC,EAPlB,OAQqCr3B,mBAAS,MAR9C,mBAQMs3B,EARN,KAQmBC,EARnB,OASmDv3B,mBAAS,IAT5D,mBASMw3B,EATN,KAS0BC,EAT1B,KAWKC,GAAYC,iBAAO,MACnBC,GAAuBD,iBAAO,MAE9BE,GAAY99B,IAAEwS,KAAK,CAAErB,WAAYyqB,GAAae,GAC9CoB,GAAa/9B,IAAEwS,KAAK,CAAErB,WAAY0qB,GAAcc,GAChDqB,GAAeh+B,IAAE2Q,KAAK3Q,IAAE4oB,QAAQ,CAACkV,GAAWC,MAE5CE,GAAiBj+B,IAAEwU,KAAKxU,IAAEC,OAAQD,IAAEmb,QAAQ,YAAa,QAAU2N,GACvEA,EAAMniB,IAAI,CAACigB,EAAIhgB,IAAL,IAAkB4U,MAAO5U,EAAQ,GAAMggB,IAD5B5mB,CAErB+R,GAEF,IAAImsB,GAAc,GACdC,GAAe,GAEfd,IACFa,GAAcl+B,IAAEo+B,MAAOC,GAAMC,KAAIh8B,IAAI+7B,EAAEre,WAAYqd,GAAar9B,IAAEC,OAAO8R,KAAc,IAErFwrB,IACFY,GAAen+B,IAAEo+B,MAAOC,GAAMC,KAAIh8B,IAAI+7B,EAAEre,WAAYud,GAAcv9B,IAAEC,OAAO8R,KAAc,IA7B1F,SAgC+B9L,mBAAS,CAAEvJ,KAAMwhC,GAAYxhC,KAAMqf,UAAW,KAAM1J,IAAK,OAhCxF,qBAgCMksB,GAhCN,MAgCgBC,GAhChB,SAiCiCv4B,mBAAS,CACzCvJ,KAAMyhC,GAAazhC,KACnBqf,UAAW,KACX1J,IAAK,OApCN,qBAiCMosB,GAjCN,MAiCiBC,GAjCjB,MAuCKC,GAAiBC,sBAAY,KACjC1B,GAAS,GACLW,GAAqBzzB,SACvBy0B,aAAahB,GAAqBzzB,SAEpCyzB,GAAqBzzB,QAAU00B,WAAW,OAGvCrD,KACF,IAEHl1B,oBAAU,KACJ23B,GAAYniB,WAAamiB,GAAYniB,YAAcwiB,GAASxiB,WAC9DyiB,GAAY,MACPD,GADM,CAETxiB,UAAWmiB,GAAYniB,UACvBgjB,cAAeR,GAASxiB,UACxB5J,QAAS+rB,GAAY/rB,QACrBI,YAAa2rB,GAAY3rB,eAGzB2rB,GAAY7rB,KAAO6rB,GAAY7rB,MAAQksB,GAASlsB,KAClDmsB,GAAY,MACPD,GADM,CAETlsB,IAAK6rB,GAAY7rB,IACjB2sB,QAAST,GAASlsB,IAClBF,QAAS+rB,GAAY/rB,SAAWosB,GAASpsB,QACzCI,YAAa2rB,GAAY3rB,aAAegsB,GAAShsB,eAGjD4rB,GAAapiB,WAAaoiB,GAAapiB,YAAc0iB,GAAU1iB,WACjE2iB,GAAa,MACRD,GADO,CAEV1iB,UAAWoiB,GAAapiB,UACxBgjB,cAAeN,GAAU1iB,UACzB5J,QAASgsB,GAAahsB,QACtBI,YAAa4rB,GAAa5rB,eAG1B4rB,GAAa9rB,KAAO8rB,GAAa9rB,MAAQosB,GAAUpsB,KACrDqsB,GAAa,MACRD,GADO,CAEVpsB,IAAK8rB,GAAa9rB,IAClB2sB,QAASP,GAAUpsB,IACnBF,QAASgsB,GAAahsB,SAAWssB,GAAUtsB,QAC3CI,YAAa4rB,GAAa5rB,aAAeksB,GAAUlsB,eAGnDgsB,GAAS7hC,OAASwhC,GAAYxhC,MAChC8hC,GAAY,MACPD,GADM,CAETxiB,UAAWmiB,GAAYniB,UACvBgjB,cAAe,KACf1sB,IAAK6rB,GAAY7rB,IACjBF,QAAS+rB,GAAY/rB,QACrBI,YAAa2rB,GAAY3rB,YACzBysB,QAAS,KACTtiC,KAAMwhC,GAAYxhC,QAGlB+hC,GAAU/hC,OAASyhC,GAAazhC,MAClCgiC,GAAa,MACRD,GADO,CAEV1iB,UAAWoiB,GAAapiB,UACxBgjB,cAAe,KACf1sB,IAAK8rB,GAAa9rB,IAClBF,QAASgsB,GAAahsB,QACtBI,YAAa4rB,GAAa5rB,YAC1BysB,QAAS,KACTtiC,KAAMyhC,GAAazhC,SAItB,CACDwhC,GAAYniB,UACZoiB,GAAapiB,UACbmiB,GAAY7rB,IACZ8rB,GAAa9rB,IACb6rB,GAAYxhC,KACZyhC,GAAazhC,KACb6hC,GACAE,KAIFl4B,oBAAU,KACRo3B,GAAUvzB,QAAU,IAAI60B,UAAU77B,GAClCu6B,GAAUvzB,QAAQ80B,QAAU,KAC1BtC,EAAW,+DAEbe,GAAUvzB,QAAQ+0B,OAAUl0B,IAC1B+xB,GAAe,KAEhB,IAEHz2B,oBAAU,KACRo3B,GAAUvzB,QAAQg1B,UAAat2B,IAC7B61B,KACA,IACE,MAAMj7B,EAAOoF,GAASA,EAAMpF,MAAQ7B,KAAKw9B,MAAMv2B,EAAMpF,MAGrD,GAFAmd,QAAQC,IAAIpd,GAEM,kBAAdA,EAAKpC,KAA0B,CACjC,MAAMq6B,EAAWj4B,EAAKA,KAAKie,WACrBia,EAAY57B,IAAEsC,IAAI,mBAAoBoB,EAAKA,MAC3Cm4B,EAAa77B,IAAEsC,IAAI,oBAAqBoB,EAAKA,MAC7C25B,EAAar9B,IAAEsC,IAAI,0BAA2BoB,EAAKA,MACnD65B,EAAcv9B,IAAEsC,IAAI,2BAA4BoB,EAAKA,MAC3D45B,EAAcD,GACdG,EAAeD,GACfJ,EAAavB,GACbwB,EAAcvB,GACd6B,EAAsB/B,GACtBM,EAAiBv4B,EAAKA,KAAKua,QAC3Byd,EAAgBC,EAAUC,EAAWC,QAChC,GAAkB,mBAAdn4B,EAAKpC,OACdw7B,EAAsBp5B,EAAKA,KAAKd,OAAS,KACrCc,EAAKA,KAAK25B,YAAc35B,EAAKA,KAAK65B,eACpCD,EAAc55B,EAAKA,KAAK25B,YACxBG,EAAe95B,EAAKA,KAAK65B,eAEvB75B,EAAKA,KAAKk4B,WAAal4B,EAAKA,KAAKm4B,cACnCsB,EAAaz5B,EAAKA,KAAKk4B,WACvBwB,EAAc15B,EAAKA,KAAKm4B,YACpBn4B,EAAKA,KAAKiH,OAAM,CAElB,MAAM20B,EAAc57B,EAAKA,KAAKiH,KAC9B+yB,EAAsB4B,GACtBze,QAAQC,IAAI,YAAawe,EAAa7B,GAClCA,IAAuB6B,GACzB5D,EAAgB4D,EAAa57B,EAAKA,KAAKk4B,UAAWl4B,EAAKA,KAAKm4B,aAKpE,MAAO5wB,GACP4V,QAAQC,IAAI,mBAAoB7V,GAChC2xB,EAAW,UAAD,OAAW3xB,EAAEjI,aAG1B,CAACy6B,EAAoB/B,EAAiBiD,GAAgB1C,IAWzD,MAAMsD,GAAsB3B,iBAAO,MAC7B4B,GAAgB5B,iBAAO,MACvB6B,GAAiB7B,iBAAO,MAE9Br3B,oBAAU,KACR,GAAIg5B,GAAoBn1B,SAAWo1B,GAAcp1B,QAC/C,GAAIq1B,GAAer1B,QAAS,CAE1B,MAAMtC,EAAO03B,GAAcp1B,QACrBvC,EAAQ43B,GAAer1B,QACvBs1B,EAAY,CAChBljC,EAAG+iC,GAAoBn1B,QAAQu1B,YAC/BC,EAAGL,GAAoBn1B,QAAQy1B,cAE3BC,EAAUJ,EAAUljC,GAAKsL,EAAKi4B,YAAcl4B,EAAMk4B,aAClDC,EAAUN,EAAUE,EAAI9iC,KAAKwO,IAAIxD,EAAKm4B,aAAcp4B,EAAMo4B,cAC1DC,EAAUR,EAAUljC,EAAIM,KAAKwO,IAAIxD,EAAKi4B,YAAal4B,EAAMk4B,aACzDI,EAAUT,EAAUE,GAAK93B,EAAKm4B,aAAep4B,EAAMo4B,cAErDnjC,KAAKuO,IAAIy0B,EAASE,GAAWljC,KAAKuO,IAAI60B,EAASC,IACjDZ,GAAoBn1B,QAAQvF,MAAMG,cAAgB,MAClDu6B,GAAoBn1B,QAAQvF,MAAME,WAAa,SAE7Cw6B,GAAoBn1B,QAAQvF,MAAMu7B,UAAlC,gBADEN,EAAUE,EAC2C,IAAOA,EAEP,IAAOF,EAF9D,OAKFP,GAAoBn1B,QAAQvF,MAAMG,cAAgB,SAClDu6B,GAAoBn1B,QAAQvF,MAAME,WAAa,SAE7Cw6B,GAAoBn1B,QAAQvF,MAAMu7B,UAAlC,gBADEF,EAAUC,EAC2C,IAAOA,EAEP,IAAOD,EAF9D,UAKC,CAEL,MAAMp4B,EAAO03B,GAAcp1B,QACrBs1B,EAAY,CAChBljC,EAAG+iC,GAAoBn1B,QAAQu1B,YAC/BC,EAAGL,GAAoBn1B,QAAQy1B,cAE3BQ,EAASX,EAAUljC,EAAIsL,EAAKi4B,YAC5BO,EAASZ,EAAUE,EAAI93B,EAAKm4B,aAEhCV,GAAoBn1B,QAAQvF,MAAMu7B,UAAlC,gBADEC,EAASC,EAC4C,IAAOD,EAEP,IAAOC,EAF9D,QAQR,MAAMC,GAAe,EAAGllB,SAAQ5c,UAAS8iB,QAAO7d,OAAM88B,UAAS,MAC7D,MAAMC,EAAkB,CAACxF,EAAGyF,KAC1B,IAAKA,GAASA,IAAUzF,EACtB,OAAO,KAET,MAAM0F,EAAQ1F,EAAIyF,EAClB,OACE,0BAAMvgC,UAAS,iBAAYwgC,GAAS,EAAI,MAAQ,QAC7CA,EAAQ,EAAIA,EAAM5oB,QAAQ,GAA1B,WAAmC4oB,EAAM5oB,QAAQ,MAiClDuW,EAActuB,IAAE7C,UAAU,CAAEyB,GAAIH,EAAQG,IAAMq/B,IAC9C2C,EAAiB3C,GAAexS,MACpC3uB,KAAKwO,IAAI,EAAGgjB,EAAc,GAC1BxxB,KAAKuO,IAAIijB,EAAc,EAAG2P,GAAetgC,SAG3C,OACE,yBAAKwC,UAAS,2BAAsBqgC,EAAS,OAAS,UACnDnlB,GACC,oCACE,yBAAKlb,UAAU,gBAAf,UAAsCqgC,EAAS,EAAI,EAAnD,KACA,yBAAKrgC,UAAU,mBACb,yBAAKA,UAAU,QAAQ1B,EAAQ/B,MAAQ2e,GACvC,yBAAKlb,UAAU,eACZohB,GAASkb,MAAoBlb,EAAMG,MAAM,mBAG7Che,EAAK2O,KAAO3O,EAAKyO,SAChB,yBAAKhS,UAAU,gBACZsP,GAAW/L,EAAKyO,SA/CP,MACpB,IAAKzO,EAAKyO,UAAYzO,EAAK2O,IACzB,OAAO,KAGT,IAAIwuB,EAAan9B,EAAK6O,aACjB7O,EAAK2O,IAAM3O,EAAKyO,QAAQ5D,YACxB7K,EAAK6O,YAAYhE,UAAY7K,EAAKyO,QAAQ5D,WAC3C,EACJ,MAAMuyB,EAAa,EAAID,EACvB,IAAIE,EAAY,EAShB,OAPIr9B,EAAKs7B,UAKP+B,EAAY,EAAID,GAJhBD,EAAan9B,EAAK6O,aACb7O,EAAKs7B,QAAUt7B,EAAKyO,QAAQ5D,YAC5B7K,EAAK6O,YAAYhE,UAAY7K,EAAKyO,QAAQ5D,WAC3C,IAIJ,yBAAKpO,UAAU,YACb,yBAAKA,UAAU,QAAQ0E,MAAO,CAAEzE,MAAOtD,KAAKme,MAAM,IAAM4lB,GAAc,OACtE,yBAAK1gC,UAAU,OAAO0E,MAAO,CAAEzE,MAAOtD,KAAK44B,KAAK,IAAMqL,GAAa,OACnE,yBAAK5gC,UAAU,OAAO0E,MAAO,CAAEzE,MAAOtD,KAAK44B,KAAK,IAAMoL,GAAc,SAyB7DE,IAGJt9B,EAAK2O,KACJ,yBAAKlS,UAAU,YACb,0BAAMA,UAAU,cAAhB,QADF,IAC4CrD,KAAKiY,MAAMrR,EAAK2O,KAAM,IAC/DouB,EAAgB/8B,EAAK2O,IAAK3O,EAAKs7B,UAGnCt7B,EAAKqY,WACJ,yBAAK5b,UAAU,UACb,0BAAMA,UAAU,cAAhB,OADF,IAC2CrD,KAAKiY,MAAMrR,EAAKqY,WAAY,IACpE0kB,EAAgB/8B,EAAKqY,UAAWrY,EAAKq7B,gBAG1C,yBAAK5+B,UAAU,mBACZH,IAAE2G,IAAKs6B,GAEJ,yBAAK9gC,UAAS,yBAAoB1B,EAAQG,KAAOqiC,EAAGriC,GAAK,iBAAmB,KAC1E,yBAAKuB,UAAU,SAAf,IAAyB8gC,EAAGzlB,OAC5B,yBAAKrb,UAAU,QAAQ8gC,EAAGvkC,MAC1B,yBAAKyD,UAAU,OAAO8gC,EAAG9oB,SAG5ByoB,OAQf,OACE,yBAAKzgC,UAAU,qBACb,yBAAKA,UAAU,WACZogC,GAAa,CACZllB,OAAQgiB,EACR5+B,QAASy/B,GACT3c,MAAOqa,EACPl4B,KAAM66B,GACNiC,QAAQ,IAGTD,GAAa,CACZllB,OAAQkiB,EACR9+B,QAAS0/B,GACT5c,MAAOsa,EACPn4B,KAAM+6B,MAGV,yBAAKt+B,UAAU,UAAU+I,IAAKq2B,KAC1B38B,GAASI,IACT,yBAAK7C,UAAU,SACZ6C,EACD,6BACCJ,GAASA,EAAMI,SAGnB+5B,IACEM,IACAE,IACAV,IACAp5B,GACDzD,IAAEiO,QAAQ+vB,MACTf,EACC,yBAAK98B,UAAU,OAAf,+BAEA,yBAAKA,UAAU,eAAf,0BAEH48B,IACEnB,GAAaC,KACbgB,IACAp5B,GACDzD,IAAEiO,QAAQ+vB,KACV,4BACDv6B,GAAa,kBAACvD,EAAD,OACZuD,GACAu6B,GAAar3B,IAAI,CAACyI,EAAO6c,KACvB,IAAIE,EAAW,EACf,MAAMC,EAAmB,GACnBzY,EAAUvE,EAAMuE,QAAQhN,IAAI,CAACyM,EAAKxM,KACtC,MAAMylB,EAA6BD,EAAiBhe,SAASgF,EAAI2K,UAUjE,OATAqO,EAAiB/V,KAAKjD,EAAI2K,UACZ,IAAVnX,EACFulB,EAAW,EAEVE,GACDjZ,EAAIvB,QAAU7R,IAAEsC,IAAI,CAACsE,EAAQ,EAAG,SAAUwI,EAAMuE,WAEhDwY,GAAY,GAEP,MACF/Y,EADL,CAEE+Y,WACAE,iCAIE6U,EAAalhC,IAAEsC,IAAI,yBAA0BmT,EAAarG,EAAMsJ,gBACtE,OACE,yBACEvY,UAAU,aACV0G,IAAKuI,EAAMsB,KAAOtB,EAAM+B,WACxBjI,IAAoB,IAAf+iB,EAAmBuT,GAAgBC,IAExC,yBAAKt/B,UAAU,aACZs8B,GAAiBrtB,EAAME,UAAWF,EAAMG,YACzC,6BACG2xB,EAAU,WAAOA,EAAWnpB,QAAQ,GAA1B,MAAmC,GAC7C3I,EAAMsB,OAGX,yBAAKvQ,UAAU,UACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,WACb,+BACE,+BACGwT,EAAQhN,IAAI,CAACyM,EAAKxM,KACjB,IAAIymB,EAAiBC,EACrB,GAAIla,EAAIuL,eAAiBvL,EAAIlO,OAASkK,EAAMiT,gBAAiB,CAC3D,MAAMkL,EAAYna,EAAIvB,MAAQuB,EAAIuL,cAElC0O,GADAC,EAAWttB,IAAEwtB,cAAepa,GAAQA,EAAIvB,MAAQ0b,EAAW5Z,IAC9B/M,EAE/B,MAAM+Q,EAAK3X,IAAE4N,MAAM,GAAR,WAAgBwF,EAAIxU,GAApB,gBAAsCwY,GACjD,OACE,wBACEvQ,IAAKuM,EAAIvB,MAAQuB,EAAI2K,SACrB5d,UAAW2G,IAAW,CACpB6mB,OAAQva,EAAI9O,YACZspB,OAAQxa,EAAIlO,OAASkK,EAAMiT,gBAC3Bva,KAAMsL,EAAI2K,WAAamgB,GAAYxhC,KACnCmL,MAAOuL,EAAI2K,WAAaogB,GAAazhC,QAGvC,wBAAIyD,UAAU,YACXiT,EAAI2K,WACFsP,GACD,0BAAMltB,UAAU,oBACd,8BAAOktB,GACP,kBAAC,IAAD,QAIN,wBAAIltB,UAAU,MACXwX,EACAA,GAAM,0BAAMxX,UAAU,SAAhB,OAET,wBACEA,UAAW2G,IAAW,QAAS,CAC7BgnB,GAAI1a,EAAIC,OACR0a,GAAI3a,EAAI+L,QAGT/L,EAAIC,QACH,yBAAKlT,UAAU,SAASiT,EAAI9O,YAAc,KAAO,OAElD8O,EAAI+L,MAAQ,yBAAKhf,UAAU,SAAf,OAEf,wBAAIA,UAAU,SACZ,0BAAMA,UAAU,cACbiT,EAAIuL,cAA4B,GAAZvL,EAAIvB,OAAe,IACvCqc,KAAQ9a,EAAIvB,OAAOrM,OAAO,SAG/B,wBAAIrF,UAAU,SACZ,yBAAKA,UAAU,cACZiT,EAAI5D,OAAuB,MAAd4D,EAAI5D,OAChB,yBACEG,IAAG,UAAKC,IAAL,mBAAsCwD,EAAI5D,MAA1C,QACHK,IAAKuD,EAAI5D,QAGE,MAAd4D,EAAI5D,OAAiB,OAG1B,wBAAIrP,UAAU,eAAeiT,EAAI/B,MACjC,wBAAIlR,UAAU,cAAciT,EAAI9B,KAChC,wBAAInR,UAAU,eAAeiT,EAAI3B,MACjC,wBAAItR,UAAU,gBAAgBiT,EAAI1B,OAClC,wBAAIvR,UAAU,kBAAkBiT,EAAI0L,SACpC,wBAAI3e,UAAU,SACXiT,EAAIhD,MACJgD,EAAIhD,MAAQ,IAAM,IAErB,wBAAIjQ,UAAU,YACXiT,EAAIE,SACJF,EAAIE,SAAW,IAAM,IAExB,wBACEnT,UAAW2G,IAAW,OAAQ,CAC5B8mB,OAAQxa,EAAIlO,OAASkK,EAAMiT,mBAG5Bpd,GAAWmO,EAAI7O,YACf6O,EAAI9O,YAAc,GAAK,qB,6kBCjiB1D,MAOM4gB,GAAqB,CACzB7B,aACA1C,gBACA6a,kBACA5B,cAsEazyB,mBAjFSkB,IACf,CACL3E,KAAM2E,EAAMoe,KAAK/iB,KACjBD,UAAW4E,EAAMoe,KAAKhjB,YAgFxByhB,GAFa/d,EAnEf,SAAamC,GAAQ,MACXswB,EAAwEtwB,EAAxEswB,UAAW4B,EAA6DlyB,EAA7DkyB,eAAgB7a,EAA6CrX,EAA7CqX,aAAc0C,EAA+B/Z,EAA/B+Z,UAAW3f,EAAoB4F,EAApB5F,KAAMD,EAAc6F,EAAd7F,UAiClE,OA/BA8C,oBAAU,KACRkd,IACGhH,QAAQ,UACRjW,KAAKoN,IACAA,GACFyP,EAAU,MACLzP,EADI,CAEPiV,WAAYjV,EAAOiV,YAAP,MACPjV,EAAOiV,WADA,CAEVpc,MAAOzM,IAAEqpB,MACP1oB,GAAKA,GAAKlB,EAAc,IAAMkB,GAAKlB,EAAc,GACjDmU,EAAOiV,WAAWpc,OAEhBmH,EAAOiV,WAAWpc,MAClBhN,SAKXiH,MAAM9D,GAASie,QAAQje,MAAM,uCAAwCA,IACxEg3B,KACC,CAACA,EAAW4B,EAAgB7a,EAAc0C,IAE7C9c,oBAAU,KACJ7C,GAAQA,EAAK2X,QACfmgB,IAAiBh1B,KAAK,KACpBma,OAGH,CAACjd,EAAMid,EAAc6a,IAEpB/3B,EAEA,yBAAKtD,UAAU,aACb,kBAACD,EAAD,OAKDwD,GAASA,EAAK2X,OAIfzL,+CAAYuxB,iBACP,kBAACC,GAAD,MAIP,yBAAKjhC,UAAU,aACb,kBAAC,GAAD,MACA,kBAAC,IAAD,CAAOguB,OAAK,EAAC9vB,KAAK,IAAIgtB,OAAQ,IAAM,kBAAC,IAAD,CAAUvqB,GAAI3C,EAAOC,YAAYC,SACrE,kBAAC,IAAD,CAAOA,KAAMF,EAAOC,YAAYC,KAAMywB,UAAWlF,KACjD,kBAAC,IAAD,CAAOvrB,KAAMF,EAAOI,QAAQF,KAAMywB,UAAWD,KAC7C,kBAAC,IAAD,CAAOxwB,KAAMF,EAAOM,QAAQJ,MAC1B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOA,KAAMF,EAAOM,QAAQJ,KAAM8vB,OAAK,EAACW,UAAWmD,KACnD,kBAAC,IAAD,CAAO5zB,KAAMF,EAAOM,QAAQI,QAAQR,KAAM8vB,OAAK,EAACW,UAAWyJ,OAG/D,kBAAC,IAAD,CAAOl6B,KAAMF,EAAOG,MAAMD,KAAMywB,UAAWuS,MAnBtC,kBAAC,GAAD,S,mBC7EIC,gBAAgB,CAC7BC,W3CMa,SAAiBl5B,EAAQ7E,EAAcg+B,GACpD,OAAQA,EAAOlgC,MACb,KAAK+B,EACH,OAAO,KACFgF,EADL,CAEE5E,WAAW,IAEf,KAAKF,EACH,OAAO,KACF8E,EADL,CAEE5E,WAAW,EACXb,MAAO4+B,EAAO5+B,QAElB,KAAKU,EACH,OAAO,KACF+E,EADL,CAEE5E,WAAW,EACXC,KAAM89B,EAAO99B,OAEjB,QACE,OAAO2E,I2CzBXo5B,gB1CKa,SAAiBp5B,EAAQ7E,EAAcg+B,GACpD,OAAQA,EAAOlgC,MACb,KAAK+B,EACH,OAAO,KACFgF,EADL,CAEE5E,WAAW,IAEf,KAAKF,EACH,OAAO,KACF8E,EADL,CAEE5E,WAAW,EACXb,MAAO4+B,EAAO5+B,QAElB,KAAKU,EACH,OAAO,KACF+E,EADL,CAEE5E,WAAW,EACXC,KAAM89B,EAAO99B,OAEjB,QACE,OAAO2E,I0CxBXq5B,YzCIa,SAAiBr5B,EAAQ7E,GAAcg+B,GACpD,OAAQA,EAAOlgC,MACb,KAAK+B,EACH,OAAO,KACFgF,EADL,CAEE5E,WAAW,IAEf,KAAKF,EACH,OAAO,KACF8E,EADL,CAEE5E,WAAW,EACXb,MAAO4+B,EAAO5+B,QAElB,KAAKU,EACH,OAAO,KACF+E,EADL,CAEE5E,WAAW,EACXC,KAAM89B,EAAO99B,OAEjB,QACE,OAAO2E,M0CpBb,MAAMs5B,GAAcL,aAAgB,CAClC5E,WLKa,SAAiBr0B,EAAQ7E,GAAcg+B,GACpD,OAAQA,EAAOlgC,MACb,KAAK+B,GACH,OAAO,MACFgF,EADL,CAEE5E,WAAW,EACX83B,eAAgBiG,EAAOjG,eACvB73B,KAAM,KACNd,MAAO,OAEX,KAAKW,GACH,OAAOi+B,EAAOjG,iBAAmBlzB,EAAMkzB,eAAhC,MAEElzB,EAFF,CAGD5E,WAAW,EACXb,MAAO4+B,EAAO5+B,MACdc,KAAM,KACN63B,eAAgB,OAElBlzB,EACN,KAAK/E,GACH,OAAOk+B,EAAOjG,iBAAmBlzB,EAAMkzB,eAAhC,MAEElzB,EAFF,CAGD5E,WAAW,EACXC,KAAM89B,EAAO99B,KACb63B,eAAgB,OAElBlzB,EACN,QACE,OAAOA,IKlCXwxB,MTGa,SAAiBxxB,EAAQ7E,GAAcg+B,GACpD,OAAQA,EAAOlgC,MACb,KAAK+B,GACH,OAAO,MACFgF,EADL,CAEE5E,WAAW,EACXC,KAAM,KACNd,MAAO,OAEX,KAAKW,GACH,OAAO,MACF8E,EADL,CAEE5E,WAAW,EACXb,MAAO4+B,EAAO5+B,MACdc,KAAM,OAEV,KAAKJ,GACH,OAAO,MACF+E,EADL,CAEE5E,WAAW,EACXC,KAAM89B,EAAO99B,OAEjB,QACE,OAAO2E,ISzBXoc,QxBOa,WAAgD,IAA/Bpc,EAA8B,uDAAtB7E,GAAcg+B,EAAQ,uCAC5D,OAAQA,EAAOlgC,MACb,KAAKgjB,GACH,IAAMI,EAAgB1kB,IAAEwS,KAAK,CAAE9V,KAAMsD,IAAEsC,IAAI,OAAQ+F,EAAMqc,gBAAkB8c,EAAO/c,SAClF,OAAO,MACFpc,EADL,CAEEqc,cAAeC,GAAaD,IAAkB,KAC9CD,QAASzkB,IAAE2G,IAAIge,GAAc6c,EAAO/c,WAExC,KAAKJ,GACH,OAAO,MACFhc,EADL,CAEEqc,cAAeC,GAAa6c,EAAO9c,iBAEvC,KAAKH,GACH,OAAO,MACFlc,EADL,CAEE5E,WAAW,IAEf,KAAK+gB,GACH,OAAO,MACFnc,EADL,CAEE5E,WAAW,IAEf,QACE,OAAO4E,IwB/BX0J,SdPa,SAAiB1J,EAAQ7E,GAAcg+B,GACpD,OAAQA,EAAOlgC,MACb,KAAKob,GACH,OAAO,MACFrU,EADL,CAEEuL,OAAQ4tB,EAAO5tB,SAEnB,KAAK+I,GACH,OAAO,MACFtU,EADL,CAEEuL,OAAQkJ,KAEZ,QACE,OAAOzU,IcLXsL,QzB0Ua,SAAiBtL,EAAQ7E,GAAcg+B,GACpD,OAAQA,EAAOlgC,MACb,KAAK+B,GACH,OAAO,MACFgF,EADL,CAEE5E,WAAW,IAEf,KAAKF,GACH,OAAO,MACF8E,EADL,CAEE5E,WAAW,EACXb,MAAO4+B,EAAO5+B,MACdc,KAAMF,GAAaE,KACnBwZ,QAAS1Z,GAAa0Z,QACtBnL,SAAUvO,GAAauO,SACvB4B,QAASnQ,GAAamQ,QACtB8B,aAAcjS,GAAaiS,aAC3BuD,UAAW,KAEf,KAAK1V,GACH,OAAO,MACF+E,EADL,CAEE5E,WAAW,EACXwZ,kBAAkB,EAClBvZ,KAAM89B,EAAO99B,KACbwZ,QAASskB,EAAOtkB,QAChBnL,SAAUyvB,EAAOzvB,SACjB4B,QAAS6tB,EAAO7tB,QAChB8B,aAAc+rB,EAAO/rB,aACrBkN,aAAc6e,EAAO7e,aACrB3J,UAAW,KAEf,KAAK6D,GACH,OAAO,MACFxU,EADL,CAEE4U,kBAAkB,EAClBlL,SAAUyvB,EAAOzvB,SACjBqF,WAAYoqB,EAAOpqB,WACnB3B,aAAc+rB,EAAO/rB,eAEzB,KAAKiH,GACH,OAAO,MACFrU,EADL,CAEEuL,OAAQ4tB,EAAO5tB,SAEnB,KAAK+I,GACH,OAAO,MACFtU,EADL,CAEEuL,OAAQkJ,KAEZ,KAAKF,GACH,MAAMglB,GAAe5hC,IAAEiO,QAAQuzB,EAAOrd,UACtC,OAAO,MACF9b,EADL,CAEE0J,SAAU/R,IAAEiS,UAAU4vB,IACpB,MAAMxmB,EAAM,MACPwmB,EADO,CAEVrT,WAAYxuB,IAAEsC,IAAIu/B,EAAejjC,GAAI4iC,EAAOtd,qBAE9C,OAAK0d,EAGA5hC,IAAEoO,SAASiN,EAAOzc,GAAI4iC,EAAOrd,UAEtBnkB,IAAEoO,SAASiN,EAAOzc,GAAI4iC,EAAO3d,SAIhC,MACFxI,EADL,CAEEkT,OAAQvuB,IAAEgU,QAAQqH,EAAOzc,GAAI4iC,EAAOrd,UAAYnkB,IAAEgU,QAAQqH,EAAOzc,GAAI4iC,EAAO3d,WAJvE,MAAKxI,EAAZ,CAAoBkT,OAAQ,MAHrB,MAAKlT,EAAZ,CAAoBkT,OAAQ,QAHrBlT,GAaRhT,EAAM0J,YAEb,QACE,OAAO1J,IyBrZXy5B,cACA9vB,UJPa,SAAiB3J,EAAQ7E,GAAcg+B,GACpD,OAAQA,EAAOlgC,MACb,KAAK+B,GACH,OAAO,MACFgF,EADL,CAEE5E,WAAW,IAEf,KAAKF,GACH,OAAO,MACF8E,EADL,CAEE5E,WAAW,EACXb,MAAO4+B,EAAO5+B,QAElB,KAAKU,GACH,OAAO,MACF+E,EADL,CAEE5E,WAAW,EACXC,KAAM89B,EAAO99B,OAEjB,QACE,OAAO2E,IIZXoe,KVPa,SAAiBpe,EAAQ7E,GAAcg+B,GACpD,OAAQA,EAAOlgC,MACb,KAAK+B,GACH,OAAO,MACFgF,EADL,CAEE5E,WAAW,EACXC,KAAM,OAEV,KAAKH,GACH,OAAO,MACF8E,EADL,CAEE5E,WAAW,EACXb,MAAO4+B,EAAO5+B,MACdc,KAAM,OAEV,KAAKJ,GACH,OAAO,MACF+E,EADL,CAEE5E,WAAW,EACXC,KAAM89B,EAAO99B,OAEjB,KAAKtC,EACH,OAAOoC,GACT,QACE,OAAO6E,MUdA05B,GAAQC,aACnBL,IACAxlB,OAAO8lB,6BAyBHC,aAAgBC,QCrCtBr4B,IAASuhB,OACP,kBAAC,IAAD,CAAU0W,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJ93B,SAASm4B,eAAe,W","file":"static/js/main.2ba6a2ad.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"getProcessedProfiles\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"83d4a872d99d900aa155.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","/* eslint-disable */\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\r\nNumber.isNaN =\r\n  Number.isNaN ||\r\n  function(value) {\r\n    return value !== value;\r\n  };\r\n\r\nif (typeof Math.sign === 'undefined') {\r\n  Math.sign = function(x) {\r\n    return x > 0 ? 1 : x < 0 ? -1 : x;\r\n  };\r\n}\r\n\r\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\r\nif (!Array.prototype.findIndex) {\r\n  Object.defineProperty(Array.prototype, 'findIndex', {\r\n    value: function(predicate) {\r\n      // 1. Let O be ? ToObject(this value).\r\n      if (this == null) {\r\n        throw new TypeError('\"this\" is null or not defined');\r\n      }\r\n\r\n      var o = Object(this);\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('predicate must be a function');\r\n      }\r\n\r\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n      var thisArg = arguments[1];\r\n\r\n      // 5. Let k be 0.\r\n      var k = 0;\r\n\r\n      // 6. Repeat, while k < len\r\n      while (k < len) {\r\n        // a. Let Pk be ! ToString(k).\r\n        // b. Let kValue be ? Get(O, Pk).\r\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n        // d. If testResult is true, return k.\r\n        var kValue = o[k];\r\n        if (predicate.call(thisArg, kValue, k, o)) {\r\n          return k;\r\n        }\r\n        // e. Increase k by 1.\r\n        k++;\r\n      }\r\n\r\n      // 7. Return -1.\r\n      return -1;\r\n    },\r\n    configurable: true,\r\n    writable: true,\r\n  });\r\n}\r\n","export const routes = {\r\n  leaderboard: {\r\n    path: `/leaderboard`,\r\n  },\r\n  songs: {\r\n    path: `/songs`,\r\n  },\r\n  ranking: {\r\n    path: `/ranking`,\r\n    faq: {\r\n      path: '/ranking/faq',\r\n    },\r\n  },\r\n  profile: {\r\n    path: `/profiles/:id`,\r\n    getPath: params => `/profiles/${params.id}`,\r\n    compare: {\r\n      path: `/profiles/:id/vs/:compareToId`,\r\n      getPath: params => `/profiles/${params.id}/vs/${params.compareToId}`,\r\n    },\r\n  },\r\n};\r\n","import _ from 'lodash/fp';\r\n\r\nexport const SORT = {\r\n  DEFAULT: 'default',\r\n  PROTAGONIST: 'protagonist',\r\n  RANK_ASC: 'rankAsc',\r\n  RANK_DESC: 'rankDesc',\r\n  PP_ASC: 'ppAsc',\r\n  PP_DESC: 'ppDesc',\r\n  NEW_SCORES_PLAYER: 'newScoresPlayer',\r\n  EASIEST_SONGS: 'easiestSongs',\r\n  HARDEST_SONGS: 'hardestSongs',\r\n};\r\n\r\nexport const CHART_MIN_MAX = [1, 28];\r\nexport const DURATION = {\r\n  STD: 'Standard',\r\n  SHORT: 'Short',\r\n  REMIX: 'Remix',\r\n  FULL: 'Full',\r\n};\r\nexport const DURATION_DEFAULT = _.values(DURATION);\r\n","import React from 'react';\r\n\r\nimport './loader.scss';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"loader\">\r\n      <svg\r\n        width=\"40\"\r\n        height=\"12\"\r\n        viewBox=\"0 0 120 30\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"#eee\"\r\n      >\r\n        <circle cx=\"15\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"60\" cy=\"15\" r=\"9\" fillOpacity=\"0.3\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"9\"\r\n            to=\"9\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"9;15;9\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"0.5\"\r\n            to=\"0.5\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\".5;1;.5\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"105\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","export const RESET = `USER/RESET`;\r\nexport const resetUser = () => ({ type: RESET });\r\n","import _ from 'lodash/fp';\r\nimport cookies from 'browser-cookies';\r\n\r\nimport { resetUser } from 'reducers/user/resetAction';\r\n\r\nexport const fetchJson = ({ url }) => request({ url, method: 'get' });\r\nexport const postJson = ({ url, body }) =>\r\n  request({\r\n    url,\r\n    method: 'post',\r\n    body: JSON.stringify(body),\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n    },\r\n  });\r\n\r\nconst defaultHeaders = {};\r\n\r\nexport const request = ({ url, method, body, headers }) => async (dispatch, getState) => {\r\n  try {\r\n    const session = cookies.get('session');\r\n    if (session) {\r\n      defaultHeaders['Session'] = session;\r\n    }\r\n    const response = await fetch(url, {\r\n      method,\r\n      body,\r\n      headers: { ...defaultHeaders, ...headers },\r\n      credentials: 'include',\r\n    });\r\n    if (response.status >= 200 && response.status < 300) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      const error = await response.json();\r\n      if (_.isObject(error) && _.isString(error.error)) {\r\n        throw new Error(error.error);\r\n      } else if (_.isString(error)) {\r\n        throw new Error(error);\r\n      } else {\r\n        throw new Error('HTTP Status ' + response.status);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    if (error.message === 'Invalid session') {\r\n      dispatch(resetUser());\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n","// export const HOST = 'http://localhost:5000';\r\nexport const HOST = 'https://vps720616.ovh.net:5000';\r\nexport const SOCKET_SERVER_IP = 'ws://127.0.0.1:6789';\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `MOST_PLAYED/LOADING`;\r\nconst SUCCESS = `MOST_PLAYED/SUCCESS`;\r\nconst ERROR = `MOST_PLAYED/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchMostPlayed = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-played` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `MOST_PLAYED_MONTH/LOADING`;\r\nconst SUCCESS = `MOST_PLAYED_MONTH/SUCCESS`;\r\nconst ERROR = `MOST_PLAYED_MONTH/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchMostPlayedMonth = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-played-month` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `LEAST_PLAYED/LOADING`;\r\nconst SUCCESS = `LEAST_PLAYED/SUCCESS`;\r\nconst ERROR = `LEAST_PLAYED/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchLeastPlayed = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-time-not-played` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport moment from 'moment';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\n\r\nconst timeStyle = {\r\n  flavour: 'long',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nexport const tooltipFormatter = result => {\r\n  if (!result.isExactDate) {\r\n    const resultType =\r\n      result.isMyBest === undefined && result.isMachineBest === undefined\r\n        ? 'с my best или machine best'\r\n        : result.isMyBest\r\n        ? 'с my best'\r\n        : result.isMachineBest\r\n        ? 'с machine best'\r\n        : 'хз откуда';\r\n    return (\r\n      <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n        <div>точная дата взятия неизвестна</div>\r\n        <div>скор был записан {resultType}</div>\r\n        <div>дата записи: {result.dateObject.toLocaleDateString()}</div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return result.dateObject.toLocaleDateString();\r\n  }\r\n};\r\n\r\nexport const getTimeAgo = date => {\r\n  const dayDiff = moment()\r\n    .startOf('day')\r\n    .diff(moment(date).startOf('day'), 'days');\r\n  const hour = moment(date).hour();\r\n  if (moment().hour() < 5) {\r\n    return dayDiff <= 1 ? 'сегодня' : timeAgo.format(date, timeStyle);\r\n  }\r\n  return dayDiff === 0\r\n    ? hour < 5\r\n      ? 'вчера ночью'\r\n      : 'сегодня'\r\n    : dayDiff === 1\r\n    ? 'вчера'\r\n    : timeAgo.format(date, timeStyle);\r\n};\r\n","import moment from 'moment';\r\n\r\nexport const parseDate = textDate => {\r\n  if (typeof textDate === 'string') {\r\n    return moment(textDate, 'YYYY-MM-DD HH:mm:ss').toDate();\r\n  } else {\r\n    return new Date(textDate);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaPlay } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\n// styles\r\nimport './songs-top.scss';\r\n\r\n// components\r\nimport Loader from 'components/Shared/Loader';\r\n\r\n// constants\r\n\r\n// reducers\r\nimport { fetchMostPlayed } from 'reducers/trackStats/mostPlayed';\r\nimport { fetchMostPlayedMonth } from 'reducers/trackStats/mostPlayedMonth';\r\nimport { fetchLeastPlayed } from 'reducers/trackStats/leastPlayed';\r\n\r\n// utils\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { parseDate } from 'utils/date';\r\n\r\n// code\r\nfunction TopList({ fetchList, title, renderRightSide }) {\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const getRightSide =\r\n    renderRightSide ||\r\n    (item => (\r\n      <div className=\"playcount\">\r\n        <FaPlay />\r\n        <span>{item.countplay}</span>\r\n      </div>\r\n    ));\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchList()\r\n      .then(data => {\r\n        data.success && setData(data.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [fetchList]);\r\n\r\n  return (\r\n    <div className=\"top-songs-list\">\r\n      <div className=\"top-songs-header\">\r\n        <span>{title}</span>\r\n      </div>\r\n      {isLoading && <Loader />}\r\n      {!isLoading &&\r\n        data.map((item, index) => {\r\n          return (\r\n            <div key={item.id} className=\"top-songs-item\">\r\n              <div className={classNames('place', `top-${index + 1}`, { best: index < 3 })}>\r\n                <span>{index + 1}.</span>\r\n              </div>\r\n              <div className=\"song-name\">{item.full_name}</div>\r\n              {getRightSide(item)}\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst leastPlayedRightSide = item => (\r\n  <div className=\"date\">\r\n    <span>{item.last_play ? getTimeAgo(parseDate(item.last_play)) : 'никогда'}</span>\r\n  </div>\r\n);\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    fetchMostPlayed,\r\n    fetchMostPlayedMonth,\r\n    fetchLeastPlayed,\r\n  }\r\n)(function SongsTop({ fetchMostPlayed, fetchMostPlayedMonth, fetchLeastPlayed }) {\r\n  return (\r\n    <div className=\"songs-top-page\">\r\n      <TopList fetchList={fetchMostPlayed} title=\"топ популярных треков\" />\r\n      <TopList fetchList={fetchMostPlayedMonth} title=\"топ популярных треков за месяц\" />\r\n      <TopList\r\n        fetchList={fetchLeastPlayed}\r\n        title=\"треки, которые долго не играли\"\r\n        renderRightSide={leastPlayedRightSide}\r\n      />\r\n      <div className=\"top-songs-list -placeholder\" />\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport toBe from 'prop-types';\r\nimport { Popper } from 'react-popper';\r\nimport classNames from 'classnames';\r\nimport listensToClickOutside from 'react-onclickoutside';\r\n\r\nimport './overlay.scss';\r\n\r\nconst POPPER_MODIFIERS = {\r\n  preventOverflow: {\r\n    enabled: true,\r\n    padding: 10,\r\n    boundariesElement: 'viewport',\r\n  },\r\n};\r\n\r\nconst PLACEMENT_ARROW_MAPPING = {\r\n  right: 'left',\r\n  left: 'right',\r\n  top: 'bottom',\r\n  bottom: 'top',\r\n};\r\n\r\nconst getArrowPlacement = placement => {\r\n  return placement && PLACEMENT_ARROW_MAPPING[placement.split('-')[0]];\r\n};\r\n\r\nclass Overlay extends React.PureComponent {\r\n  static propTypes = {\r\n    placement: toBe.string,\r\n    overlayItem: toBe.any,\r\n    hideWhenOutOfBounds: toBe.bool,\r\n  };\r\n\r\n  static defaultTypes = {\r\n    placement: 'bottom',\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isVisible: false,\r\n    };\r\n    this.containerItemRef = React.createRef();\r\n    this.renderPopper = this.renderPopper.bind(this);\r\n    this.toggleOverlayVisibility = this.toggleOverlayVisibility.bind(this);\r\n  }\r\n\r\n  hideOverlay() {\r\n    this.setState({\r\n      isVisible: false,\r\n    });\r\n  }\r\n\r\n  toggleOverlayVisibility() {\r\n    this.setState({\r\n      isVisible: !this.state.isVisible,\r\n    });\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    const preventHiding = event && event.target.closest('.inner-popper-overlay'); // prevent overlays from hiding when a modal is opened within overlay\r\n\r\n    if (!preventHiding) {\r\n      this.hideOverlay();\r\n    }\r\n  }\r\n\r\n  renderPopper({ ref, style, placement, arrowProps, scheduleUpdate, outOfBoundaries }) {\r\n    const { children, hideWhenOutOfBounds } = this.props;\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        data-placement={placement}\r\n        className={classNames(\r\n          'inner-popper-overlay',\r\n          `arrow-${getArrowPlacement(placement)}`,\r\n          this.props.overlayClassName,\r\n          { 'out-of-bounds': outOfBoundaries && hideWhenOutOfBounds }\r\n        )}\r\n      >\r\n        <div className=\"arrow-hider\">\r\n          <div className=\"arrow\" ref={arrowProps.ref} style={arrowProps.style} />\r\n        </div>\r\n        <div\r\n          className=\"inner-popper-content\"\r\n          // ref={ref => this.setupPopperContentRef(scheduleUpdate, ref)}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { placement, overlayItem } = this.props;\r\n    const { isVisible } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"overlay-item\"\r\n          ref={this.containerItemRef}\r\n          onClick={this.toggleOverlayVisibility}\r\n        >\r\n          {overlayItem}\r\n        </div>\r\n        {isVisible &&\r\n          ReactDOM.createPortal(\r\n            <Popper\r\n              container={document.body}\r\n              modifiers={POPPER_MODIFIERS}\r\n              placement={placement}\r\n              referenceElement={this.containerItemRef.current}\r\n            >\r\n              {this.renderPopper}\r\n            </Popper>,\r\n            document.body\r\n          )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default listensToClickOutside(Overlay);\r\n","import React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './toggle-button.scss';\r\n\r\nexport default class ToggleButton extends React.PureComponent {\r\n  static propTypes = {\r\n    text: toBe.string,\r\n    onToggle: toBe.func,\r\n    active: toBe.bool,\r\n  };\r\n\r\n  render() {\r\n    const { active, onToggle, text } = this.props;\r\n    return (\r\n      <div\r\n        className={classNames('toggle-button', { active: active })}\r\n        onClick={() => onToggle(!active)}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable react/no-deprecated */\r\n// imports from vendor deps\r\nimport React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\n\r\n// imports from styles\r\nexport default class Input extends React.Component {\r\n  static propTypes = {\r\n    value: toBe.any,\r\n    defaultValue: toBe.any,\r\n    onChange: toBe.func,\r\n    onBlur: toBe.func,\r\n    type: toBe.string,\r\n    className: toBe.string,\r\n    trimOnBlur: toBe.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    value: null,\r\n    type: 'text',\r\n    onChange: _.noop,\r\n    onBlur: _.noop,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: (!_.isNil(props.value) ? props.value : props.defaultValue) || '',\r\n    };\r\n    _.bindAll(['handleChange', 'handleBlur', 'handleKeyPress'], this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.value !== this.props.value) {\r\n      this.setState({ value: this.props.value });\r\n    }\r\n  }\r\n\r\n  handleChange(e) {\r\n    const newValue = e.target.value;\r\n    this.setState({ value: newValue }, () => this.props.onChange(newValue));\r\n  }\r\n\r\n  handleBlur(e) {\r\n    const { type } = this.props;\r\n    const { value } = this.state;\r\n    if (type === 'number') {\r\n      const numericValue = Number(value);\r\n      if (numericValue >= Number(e.target.min) && numericValue <= Number(e.target.max)) {\r\n        this.props.onBlur(numericValue, e);\r\n      } else {\r\n        this.setState({ value: this.props.value });\r\n        this.props.onBlur(this.props.value, e);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleKeyPress(e) {\r\n    if (e.key === 'Enter') {\r\n      this.handleBlur(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props;\r\n\r\n    // HACK: This component uses onInput instead of onChange\r\n    // because IE11 fails to call onChange events when you paste/cut using context menu (RMB)\r\n    // We're using onInput because it works fine, and because for text input\r\n    // there's no difference between how onChange and onInput work\r\n    return (\r\n      <input\r\n        {..._.omit(['defaultValue', 'onChange'], this.props)}\r\n        className={classNames(className, 'text-input')}\r\n        value={this.state.value}\r\n        onBlur={this.handleBlur}\r\n        onKeyPress={this.handleKeyPress}\r\n        onInput={this.handleChange}\r\n        onChange={_.noop} // Handled by onInput\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './toggle.scss';\r\n\r\n// imports from styles\r\nexport default class Toggle extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.id = _.uniqueId();\r\n  }\r\n\r\n  onChange = e => {\r\n    this.props.onChange(e.target.checked);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"toggle-checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle-checkbox-cb\"\r\n          id={this.id}\r\n          onChange={this.onChange}\r\n          checked={this.props.checked}\r\n        />\r\n        <label htmlFor={this.id} className=\"toggle\">\r\n          <span></span>\r\n        </label>\r\n        <label htmlFor={this.id} className=\"text-label\">\r\n          {this.props.children}\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\nimport './styles.scss';\r\n\r\nexport default class CollapsibleBar extends PureComponent {\r\n  static propTypes = {\r\n    className: toBe.string,\r\n    children: toBe.any,\r\n    title: toBe.any,\r\n    defaultOpen: toBe.bool,\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = { open: props.defaultOpen || false };\r\n  }\r\n\r\n  render() {\r\n    const { children, title, className } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classNames('collapsible-bar', className, { open })}>\r\n        <div className=\"header\" onClick={() => this.setState(state => ({ open: !state.open }))}>\r\n          <div className=\"collapse-button\">\r\n            <FaChevronRight />\r\n          </div>\r\n          <div className=\"title\">{title}</div>\r\n        </div>\r\n        {children && <div className=\"collapsible-children\">{children}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Range as ReactRange, getTrackBackground } from 'react-range';\r\n\r\nexport default function Range({ range, min, max, onChange }) {\r\n  return (\r\n    <ReactRange\r\n      values={range}\r\n      step={1}\r\n      min={min}\r\n      max={max}\r\n      onChange={onChange}\r\n      renderTrack={({ props, children }) => (\r\n        <div\r\n          onMouseDown={props.onMouseDown}\r\n          onTouchStart={props.onTouchStart}\r\n          style={{\r\n            ...props.style,\r\n            position: 'relative',\r\n            height: '10px',\r\n            display: 'flex',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <div\r\n            ref={props.ref}\r\n            style={{\r\n              height: '6px',\r\n              width: '100%',\r\n              borderRadius: '3px',\r\n              background: getTrackBackground({\r\n                values: range,\r\n                colors: ['#ccc', '#88d3ff', '#ccc'],\r\n                min,\r\n                max,\r\n              }),\r\n              alignSelf: 'center',\r\n            }}\r\n          >\r\n            {children}\r\n          </div>\r\n        </div>\r\n      )}\r\n      renderThumb={({ props, isDragged }) => (\r\n        <div\r\n          {...props}\r\n          style={{\r\n            ...props.style,\r\n            height: '12px',\r\n            width: '12px',\r\n            borderRadius: '6px',\r\n            backgroundColor: '#FFF',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            boxShadow: '0px 2px 3px #AAA',\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              height: '6px',\r\n              width: '6px',\r\n              borderRadius: '3px',\r\n              backgroundColor: isDragged ? '#88d3ff' : '#CCC',\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\nimport { FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Range from 'components/Shared/Range';\r\n\r\nimport { CHART_MIN_MAX, DURATION_DEFAULT, DURATION } from 'constants/leaderboard';\r\n\r\nexport default function ChartFilter({ filterValue, onChange: onChangeEx }) {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filterValue);\r\n  const type = _.getOr(null, 'type', filterValue);\r\n  const duration = _.getOr(DURATION_DEFAULT, 'duration', filterValue);\r\n\r\n  let buttonText = 'фильтр чартов';\r\n  if (filterValue) {\r\n    const t = type || '';\r\n    buttonText = range[0] === range[1] ? `${t}${range[0]}` : `${t}${range[0]} - ${t}${range[1]}`;\r\n    buttonText = 'чарты: ' + buttonText;\r\n    if (!_.isEqual(duration, DURATION_DEFAULT)) {\r\n      buttonText += ' ***';\r\n      // buttonText += ` (${_.values(DURATION)\r\n      //   .filter(dur => duration.includes(dur))\r\n      //   .map(s => s.slice(0, 2))\r\n      //   .join('-')})`;\r\n    }\r\n  }\r\n\r\n  const onChange = value => {\r\n    onChangeEx({\r\n      range,\r\n      type,\r\n      ...value,\r\n      duration: _.isEmpty(value.duration) ? duration : value.duration,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Overlay\r\n        overlayClassName=\"chart-range-overlay-outer\"\r\n        overlayItem={\r\n          <button className=\"filter-charts-button btn btn-sm btn-dark\">{buttonText}</button>\r\n        }\r\n      >\r\n        <div className=\"chart-range-overlay\">\r\n          <div className=\"buttons\">\r\n            <ToggleButton\r\n              text=\"Single\"\r\n              active={type === 'S'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  type: active ? 'S' : null,\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Double\"\r\n              active={type === 'D'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  type: active ? 'D' : null,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <Range\r\n            range={range}\r\n            min={CHART_MIN_MAX[0]}\r\n            max={CHART_MIN_MAX[1]}\r\n            onChange={r => onChange({ range: r })}\r\n          />\r\n          <div className=\"inputs\">\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  range: [Math.max(range[0] - 1, CHART_MIN_MAX[0]), range[1]],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={CHART_MIN_MAX[0]}\r\n              max={Math.min(CHART_MIN_MAX[1], range[1])}\r\n              value={range[0]}\r\n              onBlur={value => {\r\n                onChange({ range: [value, range[1]] });\r\n              }}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMin = Math.min(range[0] + 1, CHART_MIN_MAX[1]);\r\n                onChange({\r\n                  range: [newMin, range[1] < newMin ? newMin : range[1]],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMax = Math.max(range[1] - 1, CHART_MIN_MAX[0]);\r\n                onChange({\r\n                  range: [range[0] > newMax ? newMax : range[0], newMax],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={Math.max(CHART_MIN_MAX[0], range[0])}\r\n              max={CHART_MIN_MAX[1]}\r\n              value={range[1]}\r\n              onBlur={value => onChange({ range: [range[0], value] })}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  range: [range[0], Math.min(range[1] + 1, CHART_MIN_MAX[1])],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n          </div>\r\n          <div className=\"buttons-duration\">\r\n            <ToggleButton\r\n              text=\"Standard\"\r\n              active={duration.includes(DURATION.STD)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.STD]\r\n                    : _.without([DURATION.STD], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Short\"\r\n              active={duration.includes(DURATION.SHORT)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.SHORT]\r\n                    : _.without([DURATION.SHORT], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Remix\"\r\n              active={duration.includes(DURATION.REMIX)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.REMIX]\r\n                    : _.without([DURATION.REMIX], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Full\"\r\n              active={duration.includes(DURATION.FULL)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.FULL]\r\n                    : _.without([DURATION.FULL], duration),\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Overlay>\r\n    </div>\r\n  );\r\n}\r\n","export const ranks = [\r\n  {\r\n    threshold: 0,\r\n    iconName: '0.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 1000,\r\n    iconName: '1.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 2000,\r\n    iconName: '2.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 3000,\r\n    iconName: '3.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 4000,\r\n    iconName: '4.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 5000,\r\n    iconName: '5.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 6250,\r\n    iconName: '6.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 7500,\r\n    iconName: '7.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 8750,\r\n    iconName: '8.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 10000,\r\n    iconName: '9.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 12000,\r\n    iconName: '10.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 14000,\r\n    iconName: '11.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 16000,\r\n    iconName: '12.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 18000,\r\n    iconName: '13.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 22000,\r\n    iconName: '14.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 26000,\r\n    iconName: '15.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 30000,\r\n    iconName: '16.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 35000,\r\n    iconName: '17.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 40000,\r\n    iconName: '18.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 50000,\r\n    iconName: '19.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 60000,\r\n    iconName: '20.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 70000,\r\n    iconName: '21.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 80000,\r\n    iconName: '22.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 100000,\r\n    iconName: '23.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 120000,\r\n    iconName: '24.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 140000,\r\n    iconName: '25.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 160000,\r\n    iconName: '26.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 180000,\r\n    iconName: '27.png',\r\n    color: 'green',\r\n  },\r\n];\r\n","import React from 'react';\r\n\r\nexport const gradeValue = {\r\n  F: 0.1,\r\n  D: 0.2,\r\n  'D+': 0.3,\r\n  C: 0.3,\r\n  'C+': 0.5,\r\n  B: 0.5,\r\n  'B+': 0.8,\r\n  A: 0.8,\r\n  'A+': 1,\r\n  S: 1.1,\r\n  SS: 1.2,\r\n  SSS: 1.2,\r\n};\r\n\r\nexport const getExp = (result, chart) => {\r\n  if (!result.isBestGradeOnChart) {\r\n    return 0;\r\n  }\r\n  if (chart.chartType === 'COOP') {\r\n    return (chart.chartLevel * 1000 * (gradeValue[result.grade] || 0.8)) / 8;\r\n  }\r\n  const exp = (chart.chartLevel ** 2.31 * (gradeValue[result.grade] || 0.8)) / 9;\r\n  return exp;\r\n};\r\n\r\nexport const getRankImg = rank =>\r\n  rank && (\r\n    <img\r\n      className={rank.color}\r\n      src={`${process.env.PUBLIC_URL}/ranks/${rank.iconName}`}\r\n      alt={rank.threshold}\r\n    />\r\n  );\r\n\r\nexport { ranks } from './expRanks';\r\n","import _ from 'lodash/fp';\r\n\r\nimport {\r\n  GiLoveSong,\r\n  GiLifeBar,\r\n  GiSmokingFinger,\r\n  GiSnail,\r\n  GiRetroController,\r\n  GiRank1,\r\n  GiRank2,\r\n  GiRank3,\r\n  GiWoodenPegleg,\r\n  GiPodiumSecond,\r\n} from 'react-icons/gi';\r\n\r\nexport const achievements = {\r\n  '500 комбо': {\r\n    icon: GiRank1,\r\n    description: 'Заработать 500+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 500 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  '1000 комбо': {\r\n    icon: GiRank2,\r\n    description: 'Заработать 1000+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 1000 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  '2000 комбо': {\r\n    icon: GiRank3,\r\n    description: 'Заработать 2000+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 2000 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Мастер фингеринга': {\r\n    icon: GiSmokingFinger,\r\n    description: 'Сыграть все Fingers треки',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: ['Monkey Fingers', 'Kimchi Fingers', 'Monkey Fingers 2', 'Money Fingers'],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  '8-bit': {\r\n    icon: GiRetroController,\r\n    description: 'Сыграть Seize My Day, Tales of Pumpnia и Pumptris (8bit ver.)',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: ['Seize My Day', 'Tales of Pumpnia', 'Pumptris (8bit ver.)'],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  'Love is...': {\r\n    icon: GiLoveSong,\r\n    description: 'Сыграть все Love is a Danger Zone треки',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: [\r\n        'Love is a Danger Zone',\r\n        'Love is a Danger Zone [SHORT]',\r\n        'Love is a Danger Zone (Cranky Mix)',\r\n        'Love is a Danger Zone 2',\r\n        'Love is a Danger Zone 2 [SHORT]',\r\n        'Love is a Danger Zone 2 [FULL]',\r\n        'Love is a Danger Zone 2 (D&G Ver.)',\r\n        'Love is a Danger Zone (try to B.P.M.)',\r\n      ],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  Улитка: {\r\n    icon: GiSnail,\r\n    description:\r\n      'Мастер замедлений: сыграть старшие чарты Twist of Fate, Karyawisata, Awakening и Moonlight',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: [\r\n        { song: 'Twist of Fate (feat. Ruriling)', charts: ['D20', 'S19'] },\r\n        { song: 'Karyawisata', charts: ['S20', 'D16'] },\r\n        { song: 'Awakening', charts: ['S19', 'D20'] },\r\n        { song: 'Moonlight', charts: ['S19', 'D21'] },\r\n      ],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.some(\r\n        songToPlay => chart.song === songToPlay.song && songToPlay.charts.includes(chart.chartLabel)\r\n      )\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  'Коричневая S': {\r\n    icon: GiPodiumSecond,\r\n    description: 'Получить S, но 5+ бэдов',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.miss === 0 && result.bad >= 5 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Мы выживали как могли': {\r\n    icon: GiLifeBar,\r\n    description: 'Получить B или ниже, но удержать лайфбар',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress:\r\n          state.progress === 100 ? 100 : ['B+', 'C+', 'D+'].includes(result.grade) ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Падовый мисс': {\r\n    icon: GiWoodenPegleg,\r\n    description: 'Когда от SSS тебя удерживают только миссы из-за плохого моддинга падов',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress:\r\n          state.progress === 100\r\n            ? 100\r\n            : result.miss > 0 && result.bad === 0 && result.good === 0 && result.great === 0\r\n            ? 100\r\n            : 0,\r\n      };\r\n    },\r\n  },\r\n};\r\n\r\nexport const initialAchievementState = {\r\n  progress: 0,\r\n};\r\n","export const getScoreWithoutBonus = (score, grade) => {\r\n  if (grade === 'SSS') return score - 300000;\r\n  if (grade === 'SS') return score - 150000;\r\n  if (grade === 'S') return score - 100000;\r\n  return score;\r\n};\r\n","import _ from 'lodash/fp';\r\nimport regression from 'regression';\r\n\r\nimport { ranks as expRanks } from 'utils/expRanks';\r\n\r\nconst processBattles = ({ battles, profiles, debug, resultInfo: dictScoreInfo }) => {\r\n  let logText = '';\r\n  const dictChartElo = {};\r\n  const getDictChartEloId = (score, enemyScore) =>\r\n    `${score.playerId}vs${enemyScore.playerId}-${score.sharedChartId}-${score.isRank}`;\r\n  const dictRatingDiff = {};\r\n  const getDictRatingDiffId = (score) => `${score.playerId}-${score.sharedChartId}-${score.isRank}`;\r\n  // const dictScoreInfo = {};\r\n  battles.forEach(([score, enemyScore, song]) => {\r\n    // For each battle\r\n    const p1 = profiles[score.playerId];\r\n    const p2 = profiles[enemyScore.playerId];\r\n\r\n    const scoreMultiplier = score.isRank ? 1.2 : 1;\r\n    let maxScore = null;\r\n    if (song.maxScore) {\r\n      maxScore = song.maxScore * scoreMultiplier;\r\n      if (\r\n        Math.max(maxScore, score.score, enemyScore.score) !== maxScore &&\r\n        !score.isRank &&\r\n        (!score.isExactDate || !enemyScore.isExactDate)\r\n      ) {\r\n        maxScore *= 1.2;\r\n        // Rank from machine best wasn't recognized most likely.\r\n        // Increasing max score by 20% is fine\r\n      }\r\n      if (Math.max(maxScore, score.score, enemyScore.score) !== maxScore) {\r\n        // If calculated max score isn't max score anyway, use current scores as max + cherry on top\r\n        maxScore = Math.max(maxScore, score.score, enemyScore.score) + 10000;\r\n      }\r\n    }\r\n\r\n    // Data to be appended to every score outside of this thread\r\n    if (!dictScoreInfo[score.id]) dictScoreInfo[score.id] = {};\r\n    if (!dictScoreInfo[enemyScore.id]) dictScoreInfo[enemyScore.id] = {};\r\n    const scoreInfo = dictScoreInfo[score.id];\r\n    const enemyScoreInfo = dictScoreInfo[enemyScore.id];\r\n\r\n    // Rating at the start of battle for this score\r\n    if (!scoreInfo.startingRating) scoreInfo.startingRating = p1.rating;\r\n    if (!enemyScoreInfo.startingRating) enemyScoreInfo.startingRating = p2.rating;\r\n\r\n    // Counting the number of battles\r\n    p1.battleCount++;\r\n    p2.battleCount++;\r\n\r\n    // This is one match between two players\r\n    //// Elo formula\r\n    // const r1 = score.startingRating;\r\n    // const r2 = enemyScore.startingRating;\r\n    const r1 = p1.rating;\r\n    const r2 = p2.rating;\r\n    const R1 = 10 ** (r1 / 400);\r\n    const R2 = 10 ** (r2 / 400);\r\n    const E1 = R1 / (R1 + R2);\r\n    const E2 = R2 / (R1 + R2);\r\n    let A = score.score;\r\n    let B = enemyScore.score;\r\n    let S1, S2;\r\n    if (A === B) {\r\n      S1 = S2 = 0.5;\r\n    } else if (maxScore && A !== 0 && B !== 0) {\r\n      A = maxScore / A - 1;\r\n      B = maxScore / B - 1;\r\n      S1 = (B / (A + B) - 0.5) * 5 + 0.5;\r\n      S2 = (A / (A + B) - 0.5) * 5 + 0.5;\r\n    } else {\r\n      S1 = A > B ? 1 : B < A ? 0 : 0.5;\r\n      S2 = 1 - S1;\r\n    }\r\n    S1 = Math.max(0, Math.min(1, S1)); // Set strict boundaries to [0, 1]\r\n    S2 = Math.max(0, Math.min(1, S2));\r\n\r\n    const kRating1 = Math.max(0, Math.min(1, (r1 - 700) / 800));\r\n    const kRating2 = Math.max(0, Math.min(1, (r2 - 700) / 800));\r\n    const maxK1 = 20 + 20 * kRating1;\r\n    const maxK2 = 20 + 20 * kRating2;\r\n    const chartLevel = Number(song.interpolatedDifficulty || song.chartLevel);\r\n    const kLevel1 = Math.max(\r\n      1,\r\n      Math.min(maxK1, (chartLevel / 25) ** ((kRating1 - 0.5) * 5 + 2.5) * maxK1)\r\n    );\r\n    const kLevel2 = Math.max(\r\n      1,\r\n      Math.min(maxK2, (chartLevel / 25) ** ((kRating2 - 0.5) * 5 + 2.5) * maxK2)\r\n    );\r\n    const kLevel = Math.min(kLevel1, kLevel2);\r\n\r\n    // When YOU vs ENEMY both have SS/SSS, and both scores are very close to SSS, this battle will NOT affect ELO too much\r\n    let kMinimizer = 1;\r\n    const kDropCutoff = 0.98; // Score is 98% of max score or higher -- K will be lower\r\n    if (\r\n      song.maxScore &&\r\n      (score.grade.startsWith('SS') || (score.miss === 0 && score.bad === 0)) &&\r\n      (enemyScore.grade.startsWith('SS') || (enemyScore.miss === 0 && enemyScore.bad === 0)) &&\r\n      score.score / maxScore > kDropCutoff &&\r\n      enemyScore.score / maxScore > kDropCutoff\r\n    ) {\r\n      kMinimizer =\r\n        Math.max(\r\n          Math.min(\r\n            1,\r\n            Math.max(\r\n              100 - (100 * score.score) / maxScore,\r\n              100 - (100 * enemyScore.score) / maxScore\r\n            ) /\r\n              (100 - kDropCutoff * 100)\r\n          ),\r\n          0\r\n        ) ** 2;\r\n    }\r\n\r\n    const K1 = kLevel * kMinimizer;\r\n    const K2 = kLevel * kMinimizer;\r\n    let dr1 = K1 * (S1 - E1);\r\n    let dr2 = K2 * (S2 - E2);\r\n    // Do not decrease rating if you have SSS - RIP zero-sum algorithm\r\n    dr1 = dr1 < 0 && score.grade === 'SSS' ? 0 : dr1;\r\n    dr2 = dr2 < 0 && enemyScore.grade === 'SSS' ? 0 : dr2;\r\n    // Recording this value for display\r\n    const baseEloId1 = getDictChartEloId(score, enemyScore);\r\n    const baseEloId2 = getDictChartEloId(enemyScore, score);\r\n    const baseEloP1 = dictChartElo[baseEloId1] || 0;\r\n    const baseEloP2 = dictChartElo[baseEloId2] || 0;\r\n    dictChartElo[baseEloId1] = dr1;\r\n    dictChartElo[baseEloId2] = dr2;\r\n\r\n    // Change rating as a result of this battle\r\n    p1.rating = p1.rating + dr1 - baseEloP1;\r\n    p2.rating = p2.rating + dr2 - baseEloP2;\r\n\r\n    const ratingDiffId1 = getDictRatingDiffId(score);\r\n    const ratingDiffId2 = getDictRatingDiffId(enemyScore);\r\n    dictRatingDiff[ratingDiffId1] = (dictRatingDiff[ratingDiffId1] || 0) + dr1 - baseEloP1;\r\n    dictRatingDiff[ratingDiffId2] = (dictRatingDiff[ratingDiffId2] || 0) + dr2 - baseEloP2;\r\n\r\n    // Q\r\n    scoreInfo.ratingDiff = dictRatingDiff[ratingDiffId1];\r\n    scoreInfo.ratingDiffLast = dr1 - baseEloP1;\r\n\r\n    enemyScoreInfo.ratingDiff = dictRatingDiff[ratingDiffId2];\r\n    enemyScoreInfo.ratingDiffLast = dr2 - baseEloP2;\r\n\r\n    if (debug) {\r\n      // if (score.sharedChartId === 5292) {\r\n      // if (song.song === 'Club Night') {\r\n      // if (score.nickname === 'Liza' || enemyScore.nickname === 'Liza') {\r\n      // if (!song.maxScore) {\r\n      logText += `${song.chartLabel} - ${song.song} (${song.sharedChartId}) - ${\r\n        profiles[score.playerId].name\r\n      } / ${profiles[enemyScore.playerId].name}\r\n- ${score.score} / ${enemyScore.score} (${Math.floor(maxScore)} (${Math.floor(\r\n        song.maxScore * scoreMultiplier\r\n      )})) - R ${S1.toFixed(2)}/${S2.toFixed(2)} E ${E1.toFixed(2)} / ${E2.toFixed(2)}\r\n- Rating ${r1.toFixed(2)} / ${r2.toFixed(2)} - ${dr1.toFixed(2)} / ${dr2.toFixed(\r\n        2\r\n      )} - K ${K1.toFixed(2)} ${K2.toFixed(2)}${\r\n        kMinimizer === 1 ? '' : ` (coef ${kMinimizer.toFixed(2)})`\r\n      }\r\n- Base elo: ${baseEloP1.toFixed(2)} / ${baseEloP2.toFixed(2)}\r\n- Elo change: ${(dr1 - baseEloP1).toFixed(2)} / ${(dr2 - baseEloP2).toFixed(2)}\r\n- New base elo: ${dictChartElo[baseEloId1].toFixed(2)} / ${dictChartElo[baseEloId2].toFixed(2)}\r\n- RD: ${dictRatingDiff[ratingDiffId1].toFixed(2)} / ${dictRatingDiff[ratingDiffId2].toFixed(2)}\\n`;\r\n    }\r\n    // Rating floor\r\n    p1.rating = Math.max(100, p1.rating);\r\n    p2.rating = Math.max(100, p2.rating);\r\n\r\n    const playersSorted = _.flow(\r\n      _.keys,\r\n      _.map((id) => ({ id, rating: profiles[id].rating })),\r\n      _.orderBy(['rating'], ['desc'])\r\n    )(profiles);\r\n    const battleDate =\r\n      score.dateObject > enemyScore.dateObject ? score.dateObject : enemyScore.dateObject;\r\n    playersSorted.forEach((player, index) => {\r\n      const lastPlace = profiles[player.id].lastPlace;\r\n      if (lastPlace !== index + 1) {\r\n        profiles[player.id].rankingHistory.push({\r\n          place: index + 1,\r\n          date: battleDate.getTime(),\r\n        });\r\n        profiles[player.id].lastPlace = index + 1;\r\n      }\r\n    });\r\n\r\n    const p1LastRating = _.last(p1.ratingHistory);\r\n    const p2LastRating = _.last(p2.ratingHistory);\r\n    if (p1LastRating !== p1.rating) {\r\n      p1.ratingHistory.push({\r\n        rating: p1.rating,\r\n        date: battleDate.getTime(),\r\n      });\r\n    }\r\n    if (p2LastRating !== p2.rating) {\r\n      p2.ratingHistory.push({\r\n        rating: p2.rating,\r\n        date: battleDate.getTime(),\r\n      });\r\n    }\r\n  });\r\n\r\n  _.flow(\r\n    _.keys,\r\n    _.forEach((key) => {\r\n      profiles[key].id = _.toInteger(key);\r\n      profiles[key].accuracy =\r\n        profiles[key].countAcc > 0\r\n          ? Math.round((profiles[key].sumAccuracy / profiles[key].countAcc) * 100) / 100\r\n          : null;\r\n      profiles[key].ratingRaw = profiles[key].rating;\r\n      profiles[key].rating = Math.round(profiles[key].rating);\r\n      profiles[key].rankingHistory = [\r\n        ...profiles[key].rankingHistory,\r\n        { place: _.get('place', _.last(profiles[key].rankingHistory)), date: Date.now() },\r\n      ];\r\n    })\r\n  )(profiles);\r\n  return { logText };\r\n};\r\n\r\nconst postProcessProfiles = (profiles, tracklist) => {\r\n  const getBonusForLevel = (level) => (30 * (1 + 2 ** (level / 4))) / 11;\r\n  const getMinimumNumber = (totalCharts) =>\r\n    Math.round(\r\n      Math.min(totalCharts, 1 + totalCharts / 20 + Math.sqrt(Math.max(totalCharts - 1, 0)) * 0.7)\r\n    );\r\n\r\n  const newProfiles = _.mapValues((profile) => {\r\n    const neededGrades = ['A', 'A+', 'S', 'SS', 'SSS'];\r\n    profile.expRank = _.findLast((rank) => rank.threshold <= profile.exp, expRanks);\r\n    profile.expRankNext = _.find((rank) => rank.threshold > profile.exp, expRanks);\r\n    profile.progress = {\r\n      double: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n      single: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n    };\r\n    const gradeIncrementMap = {\r\n      SSS: ['SS', 'S', 'A+', 'A'],\r\n      SS: ['SS', 'S', 'A+', 'A'],\r\n      S: ['S', 'A+', 'A'],\r\n      'A+': ['A+', 'A'],\r\n      A: ['A'],\r\n    };\r\n    const incrementLevel = (l, g, chartType) => {\r\n      const prog =\r\n        chartType === 'S' || chartType === 'SP'\r\n          ? profile.progress.single\r\n          : chartType === 'D' || chartType === 'DP'\r\n          ? profile.progress.double\r\n          : null;\r\n      if (prog) {\r\n        prog[g][l] = prog[g][l] ? prog[g][l] + 1 : 1;\r\n      }\r\n    };\r\n    profile.accuracyByLevel = {};\r\n    _.keys(profile.resultsByLevel).forEach((level) => {\r\n      profile.accuracyByLevel[level] = { count: 0, sum: 0, average: null };\r\n      profile.resultsByLevel[level].forEach((res) => {\r\n        if (!res.result.isRank && res.result.accuracy) {\r\n          profile.accuracyByLevel[level].count++;\r\n          profile.accuracyByLevel[level].sum += res.result.accuracy;\r\n        }\r\n\r\n        const thisGrade = res.result.grade;\r\n        const thisPlayerId = res.result.playerId;\r\n        const otherResults = res.chart.results.filter((r) => r.playerId === thisPlayerId);\r\n        if (otherResults.length > 1) {\r\n          const sortedResults = otherResults.sort(\r\n            (a, b) => neededGrades.indexOf(b.grade) - neededGrades.indexOf(a.grade)\r\n          );\r\n          if (sortedResults[0].grade !== thisGrade) {\r\n            return; // Don't do anything when we have a different result with better grade\r\n          }\r\n        }\r\n        const gradeIncArray = gradeIncrementMap[thisGrade];\r\n        if (gradeIncArray) {\r\n          gradeIncArray.forEach((gradeInc) => {\r\n            incrementLevel(level, gradeInc, res.chart.chartType);\r\n          });\r\n        }\r\n      });\r\n      profile.accuracyByLevel[level].average =\r\n        profile.accuracyByLevel[level].count === 0\r\n          ? null\r\n          : profile.accuracyByLevel[level].sum / profile.accuracyByLevel[level].count;\r\n    });\r\n    const points = _.flow(\r\n      _.toPairs,\r\n      _.filter(([level, data]) => data.average && data.count > 10),\r\n      _.map(([level, data]) => [_.toNumber(level), data.average])\r\n    )(profile.accuracyByLevel);\r\n    profile.accuracyPoints = points;\r\n    ['single', 'double'].forEach((chartType) => {\r\n      profile.progress[`${chartType}-bonus`] = 0;\r\n      _.keys(profile.progress[chartType]).forEach((grade) => {\r\n        profile.progress[chartType][`${grade}-bonus`] = 0;\r\n        _.keys(profile.progress[chartType][grade]).forEach((level) => {\r\n          const number = profile.progress[chartType][grade][level];\r\n          const totalCharts = tracklist.data[`${chartType}sLevels`][level];\r\n          const minimumNumber = getMinimumNumber(totalCharts);\r\n          const bonusCoefficientNumber = Math.min(1, number / minimumNumber);\r\n          const rawBonus = getBonusForLevel(level);\r\n          const bonus = rawBonus * bonusCoefficientNumber;\r\n          profile.progress[chartType][grade][`${level}-bonus`] = bonus;\r\n          profile.progress[chartType][grade][`${level}-bonus-coef`] = bonusCoefficientNumber;\r\n          profile.progress[chartType][grade][`${level}-min-number`] = minimumNumber;\r\n          profile.progress[chartType][grade][`${level}-achieved-number`] = number;\r\n          if (bonus >= profile.progress[chartType][`${grade}-bonus`]) {\r\n            profile.progress[chartType][`${grade}-bonus`] = bonus;\r\n            profile.progress[chartType][`${grade}-bonus-level`] = level;\r\n            profile.progress[chartType][`${grade}-bonus-level-coef`] = bonusCoefficientNumber;\r\n            profile.progress[chartType][`${grade}-bonus-level-min-number`] = minimumNumber;\r\n            profile.progress[chartType][`${grade}-bonus-level-achieved-number`] = number;\r\n          }\r\n        });\r\n        profile.progress[`${chartType}-bonus`] += profile.progress[chartType][`${grade}-bonus`];\r\n      });\r\n    });\r\n    profile.progress.bonus = profile.progress['double-bonus'] + profile.progress['single-bonus'];\r\n    profile.achievementBonus = profile.progress.bonus;\r\n    profile.accuracy =\r\n      profile.countAcc > 0\r\n        ? Math.round((profile.sumAccuracy / profile.countAcc) * 100) / 100\r\n        : null;\r\n    return profile;\r\n  }, profiles);\r\n  return newProfiles;\r\n};\r\n\r\nconst processPP = ({ profiles, sharedCharts }) => {\r\n  const resultInfo = {};\r\n  // const now = new Date();\r\n  for (const chartId in sharedCharts) {\r\n    const chart = sharedCharts[chartId];\r\n    const chartResults = chart.results;\r\n    const chartLevel = Number(chart.interpolatedDifficulty || chart.chartLevel);\r\n    const maxPP = chartLevel ** 2.2 / 7.6; // 7;\r\n    if (chart.maxScore) {\r\n      const maxScore = chart.maxScore;\r\n      for (const result of chartResults) {\r\n        if (!result.isRank && maxScore) {\r\n          const K1 = Math.max(0, Math.min(1, result.scoreRaw / maxScore - 0.3) / 0.7);\r\n          // Optional: decrease PP values for older scores. Testing showing this doesn't change anything really\r\n          // const millisecOld = now - result.dateObject;\r\n          // const maxDays = 365;\r\n          // const maxTimeDecrease = 0;\r\n          // const K2 =\r\n          //   1 -\r\n          //   maxTimeDecrease * Math.min(1, Math.max(0, millisecOld / 1000 / 60 / 60 / 24 / maxDays));\r\n          // const K = K1 * K2;\r\n\r\n          const K = K1;\r\n\r\n          // Final PP value\r\n          const pp = K * maxPP;\r\n          // Record result data\r\n          resultInfo[result.id] = {\r\n            pp: {\r\n              pp,\r\n              k: K,\r\n              maxScore,\r\n              maxPP,\r\n              ppPotential: maxPP - pp,\r\n              ppRatio: pp / maxPP,\r\n              ppFixed: Number(pp.toFixed(1)),\r\n            },\r\n          };\r\n          const profile = profiles[result.playerId];\r\n          if (profile) {\r\n            if (!profile.pp) {\r\n              profile.pp = { scores: [], pp: 0 };\r\n            }\r\n            profile.pp.scores.push({\r\n              pp_: Number(pp.toFixed(1)),\r\n              s: chart.song,\r\n              l: chart.chartLabel,\r\n              pp,\r\n              result,\r\n              chart,\r\n              K,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // Calculate total pp\r\n  for (const playerId in profiles) {\r\n    const profile = profiles[playerId];\r\n    if (profile.pp) {\r\n      profile.pp.scores.sort((a, b) => b.pp - a.pp);\r\n      profile.pp.pp = 0;\r\n      profile.pp.scores.forEach((score, index) => {\r\n        profile.pp.pp += 0.95 ** index * score.pp;\r\n      });\r\n      profile.rating = profile.pp.pp;\r\n    } else {\r\n      profile.rating = 0;\r\n    }\r\n    // profile.id = _.toInteger(playerId);\r\n    // profile.accuracy =\r\n    //   profile.countAcc > 0\r\n    //     ? Math.round((profile.sumAccuracy / profile.countAcc) * 100) / 100\r\n    //     : null;\r\n    // profile.rating = Math.round(profile.ratingRaw);\r\n  }\r\n  return resultInfo;\r\n};\r\n\r\nconst interpolateDifficulties = (sharedCharts, processedProfiles) => {\r\n  let newSharedCharts = _.mapValues((chart) => {\r\n    const datas = chart.results\r\n      .map((r) => {\r\n        const profile = processedProfiles[r.playerId];\r\n        if (!profile || !r.accuracy || r.isRank || _.isEmpty(profile.accuracyPoints)) {\r\n          return null;\r\n        }\r\n        const accData = profile.accuracyByLevel[chart.chartLevel];\r\n        if (!profile.accuracyPointsInterpolated) {\r\n          let points = [...profile.accuracyPoints, [30, 0]];\r\n          for (let i = profile.accuracyPoints[0][0]; i > 0; i--) {\r\n            points = [[i, 100], ...points];\r\n          }\r\n          const result = regression('polynomial', points, 3);\r\n          // console.log(result);\r\n          const predict = (x) => {\r\n            return (\r\n              result.equation[0] +\r\n              result.equation[1] * x +\r\n              result.equation[2] * x * x +\r\n              result.equation[3] * x * x * x\r\n            );\r\n          };\r\n\r\n          // const f_1 = interpolate(profile.accuracyPoints);\r\n          const f = (x) => {\r\n            if (x <= profile.accuracyPoints[0][0]) {\r\n              return 100;\r\n            }\r\n            // const calculated = f_1(x);\r\n            const calculated = predict(x);\r\n            return Math.max(0, Math.min(calculated, 100));\r\n          };\r\n          const yx = [];\r\n          for (let i = 1; i <= 28; i += 0.05) {\r\n            yx.push([i, f(i)]);\r\n          }\r\n          // console.log(JSON.stringify(yx, null, 1));\r\n          profile.accuracyPointsInterpolated = yx;\r\n        }\r\n        const interpolatedPoint = _.find(\r\n          (pair) => pair[1] < r.accuracy,\r\n          profile.accuracyPointsInterpolated\r\n        );\r\n        return {\r\n          id: r.playerId,\r\n          accuracy: r.accuracy,\r\n          avgAccuracy: accData.average,\r\n          interpolatedDifficulty: interpolatedPoint && interpolatedPoint[0],\r\n          weight:\r\n            r.accuracy > 98\r\n              ? 1 - (r.accuracy - 98) / (100 - 98)\r\n              : r.accuracy < 80\r\n              ? Math.max(0, (r.accuracy - 70) / (80 - 70))\r\n              : 1,\r\n        };\r\n      })\r\n      .filter(_.identity);\r\n    const sums = datas.reduce(\r\n      (acc, item) => {\r\n        if (!item.interpolatedDifficulty) {\r\n          return acc;\r\n        }\r\n        return {\r\n          diffSum: acc.diffSum + item.interpolatedDifficulty * item.weight,\r\n          weightSum: acc.weightSum + item.weight,\r\n        };\r\n      },\r\n      { diffSum: 0, weightSum: 0 }\r\n    );\r\n    sums.diffSum += _.toNumber(chart.chartLevel);\r\n    sums.weightSum += 1;\r\n    const averageDifficulty = sums.diffSum / sums.weightSum;\r\n    // console.log(chart.song, chart.chartLabel, JSON.stringify(datas), averageDifficulty);\r\n\r\n    return {\r\n      ...chart,\r\n      interpolatedDifficulty: averageDifficulty,\r\n    };\r\n  }, sharedCharts);\r\n  return newSharedCharts;\r\n};\r\n\r\nexport const getProcessedProfiles = ({ profiles, sharedCharts, tracklist, battles, debug }) => {\r\n  // Calculate Progress achievements and bonus for starting Elo\r\n  profiles = postProcessProfiles(profiles, tracklist);\r\n\r\n  // Recalculate chart difficulty\r\n  sharedCharts = interpolateDifficulties(sharedCharts, profiles);\r\n\r\n  // Calculate PP\r\n  const resultInfo = processPP({\r\n    profiles,\r\n    sharedCharts,\r\n  });\r\n\r\n  // Calculate ELO\r\n  const { logText } = processBattles({\r\n    battles,\r\n    profiles,\r\n    resultInfo,\r\n    debug,\r\n  });\r\n\r\n  return { profiles, resultInfo, sharedCharts, logText };\r\n};\r\n","if (localStorage) {\r\n  window.debugOn = () => {\r\n    localStorage.setItem('debug', 1);\r\n  };\r\n  window.debugOff = () => {\r\n    localStorage.removeItem('debug');\r\n  };\r\n}\r\n\r\nexport const DEBUG = localStorage && localStorage.getItem('debug');\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\nimport queryString from 'query-string';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\nimport { getExp } from 'utils/exp';\r\nimport { achievements, initialAchievementState } from 'utils/achievements';\r\nimport { parseDate } from 'utils/date';\r\nimport { getScoreWithoutBonus } from 'utils/score';\r\n\r\nimport WorkerProfilesProcessing from 'workerize-loader!utils/workers/profilesPostProcess'; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport * as profilesProcessing from 'utils/workers/profilesPostProcess';\r\n\r\nimport { HOST } from 'constants/backend';\r\nimport { DEBUG } from 'constants/env';\r\n\r\nconst LOADING = `TOP/LOADING`;\r\nconst SUCCESS = `TOP/SUCCESS`;\r\nconst ERROR = `TOP/ERROR`;\r\nconst SET_FILTER = `TOP/SET_FILTER`;\r\nconst RESET_FILTER = `TOP/RESET_FILTER`;\r\nconst RANKING_CHANGE_SET = `TOP/RANKING_CHANGE_SET`;\r\nconst PROFILES_UPDATE = `TOP/PROFILES_UPDATE`;\r\n\r\nexport const defaultFilter = { showRank: true, showRankAndNorank: true };\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  isLoadingRanking: false,\r\n  data: [],\r\n  filter: defaultFilter,\r\n  players: {},\r\n  profiles: {},\r\n  results: [],\r\n  resultInfo: {},\r\n  sharedCharts: {},\r\n};\r\n\r\nexport const gradeComparator = {\r\n  '?': 0,\r\n  F: 1,\r\n  D: 2,\r\n  'D+': 3,\r\n  C: 4,\r\n  'C+': 5,\r\n  B: 6,\r\n  'B+': 7,\r\n  A: 8,\r\n  'A+': 9,\r\n  S: 10,\r\n  SS: 11,\r\n  SSS: 12,\r\n};\r\n\r\nconst tryFixIncompleteResult = (result, maxTotalSteps) => {\r\n  if (!maxTotalSteps) {\r\n    return;\r\n  }\r\n  const infos = [result.perfect, result.great, result.good, result.bad, result.miss];\r\n  let fixableIndex = -1,\r\n    absentNumbersCount = 0,\r\n    localStepSum = 0;\r\n  for (let i = 0; i < 5; ++i) {\r\n    if (!_.isNumber(infos[i])) {\r\n      fixableIndex = i;\r\n      absentNumbersCount++;\r\n    } else {\r\n      localStepSum += infos[i];\r\n    }\r\n  }\r\n  if (absentNumbersCount === 1) {\r\n    result[['perfect', 'great', 'good', 'bad', 'miss'][fixableIndex]] =\r\n      maxTotalSteps - localStepSum;\r\n  }\r\n};\r\n\r\nconst guessGrade = result => {\r\n  if (result.misses === 0 && result.bads === 0 && result.goods === 0) {\r\n    if (result.greats === 0) {\r\n      return 'SSS';\r\n    } else {\r\n      return 'SS';\r\n    }\r\n  }\r\n  return result.grade;\r\n};\r\n\r\nconst mapResult = (res, players, chart) => {\r\n  if (typeof res.recognition_notes === 'undefined') {\r\n    // Short result, minimum info, only for ELO calculation\r\n    // Will be replaced with better result later\r\n    return {\r\n      id: res.id,\r\n      isUnknownPlayer: players[res.player].arcade_name === 'PUMPITUP',\r\n      isIntermediateResult: true,\r\n      sharedChartId: res.shared_chart,\r\n      playerId: res.player,\r\n      nickname: players[res.player].nickname,\r\n      nicknameArcade: players[res.player].arcade_name,\r\n      date: res.gained,\r\n      dateObject: parseDate(res.gained),\r\n      grade: res.grade,\r\n      isExactDate: !!res.exact_gain_date,\r\n      score: res.score,\r\n      scoreRaw: getScoreWithoutBonus(res.score, res.grade),\r\n      isRank: !!res.rank_mode,\r\n    };\r\n  }\r\n  // Full best result\r\n  let _r = {\r\n    isUnknownPlayer: players[res.player].arcade_name === 'PUMPITUP',\r\n    isIntermediateResult: false,\r\n    sharedChartId: res.shared_chart,\r\n    id: res.id,\r\n    playerId: res.player,\r\n    nickname: players[res.player].nickname,\r\n    nicknameArcade: players[res.player].arcade_name,\r\n    originalChartMix: res.original_mix,\r\n    originalChartLabel: res.original_label,\r\n    originalScore: res.original_score,\r\n    date: res.gained,\r\n    dateObject: parseDate(res.gained),\r\n    grade: res.grade !== '?' ? res.grade : guessGrade(res),\r\n    isExactDate: !!res.exact_gain_date,\r\n    score: res.score,\r\n    scoreRaw: getScoreWithoutBonus(res.score, res.grade),\r\n    scoreIncrease: res.score_increase,\r\n    calories: res.calories && res.calories / 1000,\r\n    perfect: res.perfects,\r\n    great: res.greats,\r\n    good: res.goods,\r\n    bad: res.bads,\r\n    miss: res.misses,\r\n    combo: res.max_combo,\r\n    mods: res.mods_list,\r\n    isRank: !!res.rank_mode,\r\n    isHJ: (res.mods_list || '').split(' ').includes('HJ'),\r\n    isMachineBest: res.recognition_notes === 'machine_best',\r\n    isMyBest: res.recognition_notes === 'personal_best',\r\n  };\r\n\r\n  tryFixIncompleteResult(_r, chart.maxTotalSteps);\r\n\r\n  const perfects = Math.sqrt(_r.perfect) * 10;\r\n  const acc = perfects\r\n    ? Math.floor(\r\n        ((perfects * 100 + _r.great * 60 + _r.good * 30 + _r.miss * -20) /\r\n          (perfects + _r.great + _r.good + _r.bad + _r.miss)) *\r\n          100\r\n      ) / 100\r\n    : null;\r\n  const accRaw = _r.perfect\r\n    ? Math.floor(\r\n        ((_r.perfect * 100 + _r.great * 60 + _r.good * 30 + _r.miss * -20) /\r\n          (_r.perfect + _r.great + _r.good + _r.bad + _r.miss)) *\r\n          100\r\n      ) / 100\r\n    : null;\r\n\r\n  _r.accuracy = acc < 0 ? 0 : accRaw === 100 ? 100 : acc && +acc.toFixed(2);\r\n  _r.accuracyRaw = accRaw;\r\n  return _r;\r\n};\r\n\r\n// const getMaxScore = score => {\r\n//   return ((score.score / score.accuracyRaw) * 100) / (score.isRank ? 1.2 : 1);\r\n// };\r\nconst getMaxRawScore = score => {\r\n  return ((score.scoreRaw / score.accuracy) * 100) / (score.isRank ? 1.2 : 1);\r\n};\r\n\r\nconst initializeProfile = (result, profiles) => {\r\n  const id = result.playerId;\r\n  const resultsByLevel = _.fromPairs(Array.from({ length: 28 }).map((x, i) => [i + 1, []]));\r\n  profiles[id] = {\r\n    name: result.nickname,\r\n    nameArcade: result.nicknameArcade,\r\n    resultsByGrade: {},\r\n    resultsByLevel,\r\n    lastResultDate: result.dateObject,\r\n    count: 0,\r\n    battleCount: 0,\r\n    countAcc: 0,\r\n    grades: { F: 0, D: 0, C: 0, B: 0, A: 0, S: 0, SS: 0, SSS: 0 },\r\n    sumAccuracy: 0,\r\n    rankingHistory: [],\r\n    ratingHistory: [],\r\n    lastPlace: null,\r\n    lastBattleDate: 0,\r\n  };\r\n  profiles[id].achievements = _.flow(\r\n    _.keys,\r\n    _.map(achName => [\r\n      achName,\r\n      { ...(achievements[achName].initialState || initialAchievementState) },\r\n    ]),\r\n    _.fromPairs\r\n  )(achievements);\r\n  profiles[id].exp = 0;\r\n};\r\n\r\nconst getProfileInfoFromResult = (result, chart, profiles) => {\r\n  const profile = profiles[result.playerId];\r\n\r\n  profile.count++;\r\n  if (result.accuracy) {\r\n    profile.countAcc++;\r\n    profile.sumAccuracy += result.accuracy;\r\n  }\r\n  profile.grades[result.grade.replace('+', '')]++;\r\n  if (chart.chartType !== 'COOP' && result.isBestGradeOnChart) {\r\n    profile.resultsByGrade[result.grade] = [\r\n      ...(profile.resultsByGrade[result.grade] || []),\r\n      { result, chart },\r\n    ];\r\n    profile.resultsByLevel[chart.chartLevel] = [\r\n      ...(profile.resultsByLevel[chart.chartLevel] || []),\r\n      { result, chart },\r\n    ];\r\n  }\r\n  if (result.isExactDate && profile.lastResultDate < result.dateObject) {\r\n    profile.lastResultDate = result.dateObject;\r\n  }\r\n  profile.achievements = _.mapValues.convert({ cap: false })((achState, achName) => {\r\n    return achievements[achName].resultFunction(result, chart, achState, profile);\r\n  }, profile.achievements);\r\n  profile.exp += getExp(result, chart);\r\n};\r\n\r\nconst processData = (data, tracklist) => {\r\n  const { players, results, shared_charts } = data;\r\n  //// Initialization\r\n  // Init for TOP\r\n  const mappedResults = [];\r\n  const getTopResultId = result => `${result.sharedChartId}-${result.playerId}-${result.isRank}`;\r\n  const getBestGradeResultId = result => `${result.sharedChartId}-${result.playerId}`;\r\n  const topResults = {}; // Temp object\r\n  const bestGradeResults = {}; // Temp object\r\n  const top = {}; // Main top scores pbject\r\n\r\n  // Battles for ELO calculation\r\n  const battles = [];\r\n\r\n  // Profiles for every player\r\n  let profiles = {};\r\n\r\n  // Loop 1\r\n  for (let resRaw of results) {\r\n    const sharedChartId = resRaw.shared_chart;\r\n    // Initialize Song\r\n    if (!top[sharedChartId]) {\r\n      const sharedChart = shared_charts[sharedChartId];\r\n      const label = _.toUpper(sharedChart.chart_label);\r\n      const [chartType, chartLevel] = label.match(/(\\D+)|(\\d+)/g);\r\n      top[sharedChartId] = {\r\n        song: sharedChart.track_name,\r\n        chartLabel: label,\r\n        chartLevel,\r\n        chartType,\r\n        duration: sharedChart.duration,\r\n        sharedChartId: sharedChartId,\r\n        maxTotalSteps: sharedChart.max_total_steps,\r\n        results: [],\r\n        totalResultsCount: 0,\r\n      };\r\n    }\r\n\r\n    // Getting current chart and result (mapped)\r\n    const chartTop = top[sharedChartId];\r\n    const result = mapResult(resRaw, players, chartTop);\r\n    mappedResults.push(result);\r\n\r\n    // Inserting result into TOP\r\n    const topResultId = getTopResultId(result);\r\n    const currentTopResult = topResults[topResultId];\r\n    if (!currentTopResult || currentTopResult.score < result.score) {\r\n      if (currentTopResult) {\r\n        const oldScoreIndex = chartTop.results.indexOf(currentTopResult);\r\n        if (oldScoreIndex !== -1) {\r\n          chartTop.results.splice(oldScoreIndex, 1);\r\n        }\r\n      }\r\n      const newScoreIndex = _.sortedLastIndexBy(r => -r.score, result, chartTop.results);\r\n      if (!result.isUnknownPlayer || newScoreIndex === 0) {\r\n        chartTop.results.splice(newScoreIndex, 0, result);\r\n        chartTop.latestScoreDate = result.date;\r\n        chartTop.totalResultsCount++;\r\n        topResults[topResultId] = result;\r\n      }\r\n      if (!result.isUnknownPlayer) {\r\n        chartTop.results.forEach(enemyResult => {\r\n          if (\r\n            !enemyResult.isUnknownPlayer &&\r\n            enemyResult.isRank === result.isRank &&\r\n            enemyResult.playerId !== result.playerId &&\r\n            result.score &&\r\n            enemyResult.score\r\n          ) {\r\n            battles.push([result, enemyResult, chartTop]);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    // Getting best grade of player on this chart\r\n    if (!result.isIntermediateResult) {\r\n      const bestGradeResultId = getBestGradeResultId(result);\r\n      const currentBestGradeRes = bestGradeResults[bestGradeResultId];\r\n      if (\r\n        !currentBestGradeRes ||\r\n        gradeComparator[currentBestGradeRes.grade] <= gradeComparator[result.grade]\r\n      ) {\r\n        // Using <= here, so newer scores always win and rewrite old scores\r\n        currentBestGradeRes && (currentBestGradeRes.isBestGradeOnChart = false);\r\n        result.isBestGradeOnChart = true;\r\n        bestGradeResults[bestGradeResultId] = result;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Loop 2, when the TOP is already set up\r\n  for (let chartId in top) {\r\n    const chart = top[chartId];\r\n    chart.maxScore = null;\r\n    for (let result of chart.results) {\r\n      if (!result.isRank) {\r\n        if (result.accuracy) {\r\n          const maxScoreCandidate = getMaxRawScore(result, chart);\r\n          if (chart.maxScore < maxScoreCandidate) {\r\n            chart.maxScore = maxScoreCandidate;\r\n          }\r\n        } else if (chart.maxScore && chart.maxScore < result.score) {\r\n          chart.maxScore = result.score;\r\n        }\r\n      }\r\n      // Getting some info about players\r\n      if (!result.isUnknownPlayer && !result.isIntermediateResult) {\r\n        if (!profiles[result.playerId]) {\r\n          initializeProfile(result, profiles);\r\n        }\r\n        getProfileInfoFromResult(result, chart, profiles);\r\n      }\r\n    }\r\n  }\r\n\r\n  return { mappedResults, profiles, sharedCharts: top, battles };\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: initialState.data,\r\n        players: initialState.players,\r\n        profiles: initialState.profiles,\r\n        results: initialState.results,\r\n        sharedCharts: initialState.sharedCharts,\r\n        scoreInfo: {},\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isLoadingRanking: true,\r\n        data: action.data,\r\n        players: action.players,\r\n        profiles: action.profiles,\r\n        results: action.results,\r\n        sharedCharts: action.sharedCharts,\r\n        originalData: action.originalData,\r\n        scoreInfo: {},\r\n      };\r\n    case PROFILES_UPDATE:\r\n      return {\r\n        ...state,\r\n        isLoadingRanking: false,\r\n        profiles: action.profiles,\r\n        resultInfo: action.resultInfo,\r\n        sharedCharts: action.sharedCharts,\r\n      };\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    case RANKING_CHANGE_SET:\r\n      const hasPrevList = !_.isEmpty(action.listPrev);\r\n      return {\r\n        ...state,\r\n        profiles: _.mapValues(playerOriginal => {\r\n          const player = {\r\n            ...playerOriginal,\r\n            prevRating: _.get(playerOriginal.id, action.rankingsPointsMap),\r\n          };\r\n          if (!hasPrevList) {\r\n            return player; // First time opening this thing and we didn't have any previous data\r\n          }\r\n          if (!_.includes(player.id, action.listPrev)) {\r\n            return { ...player, change: 'NEW' };\r\n          } else if (!_.includes(player.id, action.listNow)) {\r\n            // Should NEVER happen, idk if this is possible\r\n            return { ...player, change: '?' };\r\n          } else {\r\n            return {\r\n              ...player,\r\n              change: _.indexOf(player.id, action.listPrev) - _.indexOf(player.id, action.listNow),\r\n            };\r\n          }\r\n        }, state.profiles),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchResults = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        fetchJson({\r\n          url: `${HOST}/results/highscores`,\r\n        })\r\n      );\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n      // HACKS for test\r\n      // data.results = _.dropRight(500, data.results);\r\n      // console.log(1, data.results);\r\n      // data.results = _.filter(res => res.gained < '2020-03-12 16:55:00', data.results);\r\n      // data.results = _.filter(res => res.gained < '2020-03-12 16:34:51', data.results);\r\n      // console.log(2, data.results);\r\n\r\n      dispatch(processResultsData(data));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const appendNewResults = lastDate => {\r\n  return async (dispatch, getState) => {\r\n    const { originalData, sharedCharts } = getState().results;\r\n    if (!lastDate) {\r\n      return dispatch(fetchResults());\r\n    }\r\n\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        fetchJson({\r\n          url: `${HOST}/results/highscores?${queryString.stringify({ start_date: lastDate })}`,\r\n        })\r\n      );\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n\r\n      const appendedResults = _.filter(result => {\r\n        const currentResults = sharedCharts[result.shared_chart];\r\n        if (!currentResults) {\r\n          return true;\r\n        }\r\n        const oldResult = _.find(\r\n          old =>\r\n            old.id === result.id ||\r\n            (old.playerId === result.player && old.isRank === !!result.rank_mode),\r\n          currentResults.results\r\n        );\r\n        if (!oldResult) {\r\n          if (result.player === 1 && currentResults.results[0].score > result.score) {\r\n            return false;\r\n          }\r\n          return true;\r\n        }\r\n        if (oldResult.id === result.id || oldResult.score >= result.score) {\r\n          return false;\r\n        }\r\n        return true;\r\n      }, data.results);\r\n\r\n      console.log('Received results:', data, '; Will append:', appendedResults);\r\n\r\n      const mergedData = {\r\n        players: data.players,\r\n        results: [...originalData.results, ...appendedResults],\r\n        shared_charts: { ...originalData.shared_charts, ...data.shared_charts },\r\n      };\r\n      dispatch(processResultsData(mergedData));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nconst processResultsData = data => {\r\n  return async (dispatch, getState) => {\r\n    const { tracklist } = getState();\r\n    const { sharedCharts, mappedResults, profiles, battles } = processData(data, tracklist);\r\n\r\n    dispatch({\r\n      type: SUCCESS,\r\n      data: _.values(sharedCharts),\r\n      players: _.flow(\r\n        _.toPairs,\r\n        _.map(([id, player]) => ({ ...player, id: _.toInteger(id) }))\r\n      )(data.players),\r\n      results: mappedResults,\r\n      profiles,\r\n      sharedCharts,\r\n      originalData: data,\r\n    });\r\n\r\n    // Parallelized calculation of ELO and profile data\r\n    const input = { sharedCharts, profiles, tracklist, battles, debug: DEBUG };\r\n    let promise, worker;\r\n    if (window.Worker) {\r\n      worker = new WorkerProfilesProcessing();\r\n      promise = worker.getProcessedProfiles(input);\r\n    } else {\r\n      promise = new Promise(res => res(profilesProcessing.getProcessedProfiles(input)));\r\n    }\r\n\r\n    const output = await promise;\r\n    DEBUG && console.log(output.logText);\r\n    DEBUG &&\r\n      console.log(\r\n        'Processed profiles:',\r\n        Object.values(output.profiles)\r\n          .filter(q => q.pp)\r\n          .sort((a, b) => b.pp.pp - a.pp.pp)\r\n      );\r\n\r\n    dispatch({\r\n      type: PROFILES_UPDATE,\r\n      ...output,\r\n    });\r\n    dispatch(calculateRankingChanges(output.profiles));\r\n    if (worker) worker.terminate();\r\n  };\r\n};\r\n\r\nexport const setFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\n\r\nexport const resetFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n\r\nconst getListOfNames = _.map('id');\r\nconst getMapOfRatings = _.flow(\r\n  _.map(q => [q.id, q.rating]),\r\n  _.fromPairs\r\n);\r\n\r\nexport const calculateRankingChanges = profiles => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const ranking = _.orderBy('ratingRaw', 'desc', _.values(profiles));\r\n      const [lastChangedRanking, lastChangedRankingPoints, lastFetchedRanking] = await Promise.all([\r\n        localForage.getItem('lastChangedRanking_v3'),\r\n        localForage.getItem('lastChangedRankingPoints_v3'),\r\n        localForage.getItem('lastFetchedRanking_v3'),\r\n      ]);\r\n      const listNow = getListOfNames(ranking);\r\n      const listLastFetched = getListOfNames(lastFetchedRanking);\r\n      const listLastChanged = getListOfNames(lastChangedRanking);\r\n      const mapPointsNow = getMapOfRatings(ranking);\r\n      const mapPointsLastFetched = getMapOfRatings(lastFetchedRanking);\r\n      const mapPointsLastChanged = getMapOfRatings(lastChangedRankingPoints);\r\n\r\n      let rankingsPointsMap = mapPointsLastChanged;\r\n      // console.log(listNow, listLastFetched, listLastChanged);\r\n      // console.log(mapPointsNow, mapPointsLastFetched, mapPointsLastChanged);\r\n      if (!_.isEqual(mapPointsNow, mapPointsLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRankingPoints_v3', lastFetchedRanking);\r\n        rankingsPointsMap = mapPointsLastFetched;\r\n      }\r\n      let listPrev = listLastChanged;\r\n      if (!_.isEqual(listNow, listLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRanking_v3', lastFetchedRanking);\r\n        listPrev = listLastFetched;\r\n      }\r\n      dispatch({\r\n        type: RANKING_CHANGE_SET,\r\n        listNow,\r\n        listPrev,\r\n        rankingsPointsMap,\r\n      });\r\n      localForage.setItem('lastFetchedRanking_v3', ranking);\r\n    } catch (error) {\r\n      console.warn('Cannot get ranking from local storage', error);\r\n    }\r\n  };\r\n};\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\n\r\nimport { setFilter } from 'reducers/results';\r\n\r\nconst SELECT_PRESET = `PRESETS/SELECT_PRESET`;\r\nconst LOAD_PRESETS = `PRESETS/LOAD_PRESETS`;\r\nconst LOADING_START = `PRESETS/LOADING_START`;\r\nconst LOADING_END = `PRESETS/LOADING_END`;\r\n\r\nconst initialState = {\r\n  presets: [],\r\n  currentPreset: null,\r\n  isLoading: false,\r\n};\r\n\r\nconst itemToOption = item =>\r\n  item && {\r\n    ...item,\r\n    label: item.name,\r\n    value: item.name,\r\n  };\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_PRESETS:\r\n      const currentPreset = _.find({ name: _.get('name', state.currentPreset) }, action.presets);\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(currentPreset) || null,\r\n        presets: _.map(itemToOption, action.presets),\r\n      };\r\n    case SELECT_PRESET:\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(action.currentPreset),\r\n      };\r\n    case LOADING_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case LOADING_END:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst reloadPresets = presets => ({ type: LOAD_PRESETS, presets: presets || [] });\r\n\r\nconst startLoading = () => ({\r\n  type: LOADING_START,\r\n});\r\n\r\nconst endLoading = () => ({\r\n  type: LOADING_END,\r\n});\r\n\r\nexport const selectPreset = currentPreset => ({\r\n  type: SELECT_PRESET,\r\n  currentPreset,\r\n});\r\n\r\nexport const loadPresets = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    dispatch(reloadPresets(presets));\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const savePreset = name => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const { filter } = getState().top;\r\n    const newPreset = { name, filter };\r\n    if (!_.some({ name }, presets)) {\r\n      const newPresets = [...(presets || []), newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      dispatch(selectPreset(newPreset));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    } else if (window.confirm('Preset with this name already exists, replace it?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      const newPresets = [...withoutOldPreset, newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const openPreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const currentPreset = getState().presets.currentPreset;\r\n  const name = _.get('name', currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = name && _.find({ name }, presets);\r\n    if (preset) {\r\n      dispatch(selectPreset(currentPreset));\r\n      dispatch(setFilter(currentPreset.filter));\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const deletePreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const name = _.get('name', getState().presets.currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = _.find({ name }, presets);\r\n    if (preset && window.confirm('Are you sure you want to delete selected preset?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      dispatch(reloadPresets(withoutOldPreset));\r\n      localForage.setItem('filterPresets', withoutOldPreset);\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaLayerGroup, FaFolderOpen, FaSave, FaPlus, FaTrashAlt } from 'react-icons/fa';\r\nimport Select from 'react-select';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport Input from 'components/Shared/Input/Input';\r\n\r\nimport { loadPresets, savePreset, selectPreset, openPreset, deletePreset } from 'reducers/presets';\r\n\r\nconst overlayItem = (\r\n  <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n    <FaLayerGroup />\r\n    пресеты\r\n  </button>\r\n);\r\n\r\nconst noPresetsMessage = () => 'пусто';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ...state.presets,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  loadPresets,\r\n  savePreset,\r\n  openPreset,\r\n  deletePreset,\r\n  selectPreset,\r\n};\r\n\r\nclass PresetsControl extends React.Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    this.props.loadPresets();\r\n  }\r\n\r\n  onChangeSelection = selected => {\r\n    this.props.selectPreset(selected.name);\r\n  };\r\n\r\n  onRewritePreset = () => {\r\n    const { currentPreset } = this.props;\r\n    this.props.savePreset(currentPreset.name);\r\n  };\r\n\r\n  onSavePreset = () => {\r\n    const { name } = this.state;\r\n    this.props.savePreset(name);\r\n    this.setState({ isAddingNew: false });\r\n  };\r\n\r\n  render() {\r\n    const { presets, currentPreset, isLoading } = this.props;\r\n    const { name, isAddingNew } = this.state;\r\n    return (\r\n      <div>\r\n        <Overlay overlayItem={overlayItem}>\r\n          <div className=\"presets-control-overlay\">\r\n            <Select\r\n              className=\"select _margin-bottom\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"пресеты...\"\r\n              options={presets}\r\n              value={currentPreset}\r\n              onChange={this.props.selectPreset}\r\n              noOptionsMessage={noPresetsMessage}\r\n            />\r\n            {currentPreset && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.props.openPreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaFolderOpen /> открыть\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.onRewritePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaSave /> перезаписать\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon\"\r\n                  onClick={this.props.deletePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaTrashAlt /> удалить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {!isAddingNew && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left _self-align-end\"\r\n                  onClick={() => this.setState({ isAddingNew: true })}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaPlus /> добавить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {isAddingNew && (\r\n              <div className=\"adding-new _margin-bottom\">\r\n                <Input\r\n                  value={name}\r\n                  placeholder=\"имя пресета...\"\r\n                  className=\"form-control\"\r\n                  onChange={name => this.setState({ name })}\r\n                />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={this.onSavePreset}\r\n                  disabled={!name || isLoading}\r\n                >\r\n                  <FaSave /> сохранить\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={() => this.setState({ isAddingNew: false })}\r\n                  disabled={isLoading}\r\n                >\r\n                  отмена\r\n                </button>\r\n              </div>\r\n            )}\r\n            {/* <div>\r\n              <Toggle\r\n                checked={false}\r\n                onToggle={active => {\r\n                  localForage.setItem('showTabs', active);\r\n                }}\r\n              >\r\n                показывать табы с пресетами\r\n              </Toggle>\r\n            </div> */}\r\n          </div>\r\n        </Overlay>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PresetsControl);\r\n","export const colorsArray = [\r\n  '#4DB3FF',\r\n  '#80B300',\r\n  '#FF6655',\r\n  '#FF99E6',\r\n  '#33FFCC',\r\n  '#e633c8',\r\n  '#dbe812',\r\n  '#FF1A66',\r\n  '#991AFF',\r\n  '#E6B333',\r\n  '#1AB399',\r\n  '#4D8066',\r\n  '#CC9999',\r\n  '#00E680',\r\n  '#809980',\r\n  '#E6FF80',\r\n  '#1AFF33',\r\n  '#999933',\r\n  '#E6331A',\r\n  '#CCCC00',\r\n  '#66E64D',\r\n  '#4D80CC',\r\n  '#9900B3',\r\n  '#4DB380',\r\n  '#FF4D4D',\r\n];\r\n","import _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport matchSorter from 'match-sorter';\r\n\r\nimport { SORT, CHART_MIN_MAX, DURATION_DEFAULT } from 'constants/leaderboard';\r\n\r\nexport const playersSelector = createSelector(\r\n  state => state.results.players,\r\n  state => state.user.data.player.id,\r\n  (players, playerId) =>\r\n    _.flow(\r\n      _.toPairs,\r\n      _.map(([, { nickname, arcade_name, id }]) => ({\r\n        label: `${nickname} (${arcade_name})`,\r\n        value: nickname,\r\n        isCurrentPlayer: playerId === id,\r\n      })),\r\n      _.sortBy(it => (it.isCurrentPlayer ? '!' : _.toLower(it.label)))\r\n    )(players)\r\n);\r\n\r\nconst filterCharts = (filter, rows) => {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filter);\r\n  const type = _.getOr(null, 'type', filter);\r\n  const duration = _.getOr(DURATION_DEFAULT, 'duration', filter);\r\n\r\n  return _.filter(row => {\r\n    if (duration !== DURATION_DEFAULT && !duration.includes(row.duration)) {\r\n      return false;\r\n    }\r\n    return (\r\n      row.chartLevel >= range[0] &&\r\n      row.chartLevel <= range[1] &&\r\n      (!type || row.chartType.startsWith(type))\r\n    );\r\n  }, rows);\r\n};\r\n\r\nconst getFilteredData = (data, sharedCharts, filter, resultInfo = {}) => {\r\n  // const start = performance.now();\r\n  const names = _.map('value', filter.players);\r\n  const namesOr = _.map('value', filter.playersOr);\r\n  const namesNot = _.map('value', filter.playersNot);\r\n  const sortingType = _.get('value', filter.sortingType);\r\n  const protagonist = _.get('value', filter.protagonist);\r\n  const excludeAntagonists = _.map('value', filter.excludeAntagonists);\r\n\r\n  const defaultSorting = [_.orderBy(['latestScoreDate'], ['desc'])];\r\n  const newScoresProtagonistSorting = !protagonist\r\n    ? defaultSorting\r\n    : [\r\n        _.orderBy(\r\n          [\r\n            song =>\r\n              _.max(\r\n                _.map(\r\n                  res => (res.nickname === protagonist ? res.dateObject.getTime() : 0),\r\n                  song.results\r\n                )\r\n              ),\r\n          ],\r\n          ['desc']\r\n        ),\r\n      ];\r\n  const protagonistSorting = [\r\n    _.filter(row => _.map('nickname', row.results).includes(protagonist)),\r\n    _.map(row => {\r\n      const protIndex = _.findIndex({ nickname: protagonist }, row.results);\r\n      const protScore = row.results[protIndex].score;\r\n      const enemies = _.flow([\r\n        _.take(protIndex),\r\n        _.uniqBy('nickname'),\r\n        _.remove(res => excludeAntagonists.includes(res.nickname) || res.score === protScore),\r\n      ])(row.results);\r\n      const distance = Math.sqrt(\r\n        _.reduce((dist, enemy) => dist + (enemy.score / protScore - 0.99) ** 2, 0, enemies)\r\n      );\r\n      return {\r\n        ...row,\r\n        distanceFromProtagonist: distance,\r\n      };\r\n    }),\r\n    _.orderBy(['distanceFromProtagonist'], ['desc']),\r\n  ];\r\n  const getPpSorting = (field, direction = 'desc') => [\r\n    _.filter(row => _.map('nickname', row.results).includes(protagonist)),\r\n    _.orderBy(\r\n      [\r\n        row => {\r\n          const result = _.find({ nickname: protagonist }, row.results);\r\n          const info = resultInfo[result.id] || {};\r\n          return _.getOr(direction === 'desc' ? -Infinity : Infinity, field, info);\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const getEloSorting = direction => [\r\n    _.filter(row => _.map('nickname', row.results).includes(protagonist)),\r\n    _.orderBy(\r\n      [\r\n        row => {\r\n          const score = _.find({ nickname: protagonist }, row.results);\r\n          const info = resultInfo[score.id];\r\n          return _.getOr(direction === 'asc' ? Infinity : -Infinity, 'ratingDiff', info);\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const getDiffSorting = (direction = 'desc') => [\r\n    _.orderBy(\r\n      [\r\n        row => {\r\n          const chartInfo = sharedCharts[row.sharedChartId];\r\n          return _.getOr(_.toNumber(row.chartLevel), 'interpolatedDifficulty', chartInfo);\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const sortingFunctions =\r\n    {\r\n      [SORT.DEFAULT]: defaultSorting,\r\n      [SORT.NEW_SCORES_PLAYER]: newScoresProtagonistSorting,\r\n      [SORT.PROTAGONIST]: protagonistSorting,\r\n      [SORT.RANK_ASC]: getEloSorting('asc'),\r\n      [SORT.RANK_DESC]: getEloSorting('desc'),\r\n      [SORT.PP_ASC]: getPpSorting('pp.ppRatio', 'asc'),\r\n      [SORT.PP_DESC]: getPpSorting('pp.pp'),\r\n      [SORT.EASIEST_SONGS]: getDiffSorting('asc'),\r\n      [SORT.HARDEST_SONGS]: getDiffSorting('desc'),\r\n    }[sortingType] || defaultSorting;\r\n\r\n  const result = _.flow(\r\n    _.compact([\r\n      _.map(row => ({\r\n        ...row,\r\n        results: row.results.filter(\r\n          (res, index) => !res.isUnknownPlayer || index === 0,\r\n          row.results\r\n        ),\r\n      })),\r\n      filter.chartRange && (items => filterCharts(filter.chartRange, items)),\r\n      !filter.showRank &&\r\n        _.map(row => ({ ...row, results: _.filter(res => !res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        filter.showOnlyRank &&\r\n        _.map(row => ({ ...row, results: _.filter(res => res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        !filter.showOnlyRank &&\r\n        !filter.showRankAndNorank &&\r\n        _.map(row => {\r\n          const occuredNames = [];\r\n          return {\r\n            ...row,\r\n            results: _.filter(res => {\r\n              const alreadyOccured = occuredNames.includes(res.nickname);\r\n              occuredNames.push(res.nickname);\r\n              return !alreadyOccured;\r\n            }, row.results),\r\n          };\r\n        }),\r\n      (names.length || namesOr.length || namesNot.length) &&\r\n        _.filter(row => {\r\n          const rowNames = _.map('nickname', row.results);\r\n          return (\r\n            (!names.length || _.every(name => rowNames.includes(name), names)) &&\r\n            (!namesOr.length || _.some(name => rowNames.includes(name), namesOr)) &&\r\n            (!namesNot.length || !_.some(name => rowNames.includes(name), namesNot))\r\n          );\r\n        }),\r\n      _.filter(row => _.size(row.results)),\r\n      ...sortingFunctions,\r\n      filter.song && (items => matchSorter(items, filter.song.trim(), { keys: ['song'] })),\r\n    ])\r\n  )(data);\r\n  // console.log('Elapsed:', performance.now() - start);\r\n  return result;\r\n};\r\n\r\nexport const filteredDataSelector = createSelector(\r\n  state => state.results.data,\r\n  state => state.results.sharedCharts,\r\n  state => state.results.filter,\r\n  state => state.results.resultInfo,\r\n  getFilteredData\r\n);\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash/fp';\r\nimport Select from 'react-select';\r\nimport classNames from 'classnames';\r\nimport numeral from 'numeral';\r\nimport localForage from 'localforage';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport {\r\n  FaRedoAlt,\r\n  FaExclamationTriangle,\r\n  FaSearch,\r\n  FaYoutube,\r\n  FaAngleDoubleUp,\r\n  FaBackward,\r\n  FaForward,\r\n} from 'react-icons/fa';\r\nimport FlipMove from 'react-flip-move';\r\nimport queryString from 'query-string';\r\n\r\n// styles\r\nimport './leaderboard.scss';\r\n\r\n// components\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport CollapsibleBar from 'components/Shared/CollapsibleBar';\r\nimport ChartFilter from './ChartFilter';\r\nimport PresetsControl from './PresetsControl';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\nimport { SORT } from 'constants/leaderboard';\r\nimport { DEBUG } from 'constants/env';\r\n\r\n// reducers\r\nimport { fetchResults, setFilter, resetFilter, defaultFilter } from 'reducers/results';\r\nimport { selectPreset, openPreset } from 'reducers/presets';\r\n\r\n// utils\r\nimport { getExp } from 'utils/exp';\r\nimport { tooltipFormatter, getTimeAgo } from 'utils/leaderboards';\r\nimport { colorsArray } from 'utils/colors';\r\nimport { playersSelector, filteredDataSelector } from 'reducers/selectors';\r\n\r\n// code\r\nconst ANIMATION_DURATION = 250;\r\nconst sortingOptions = [\r\n  {\r\n    label: 'от новых скоров',\r\n    value: SORT.DEFAULT,\r\n  },\r\n  {\r\n    label: 'от новых скоров конкретного игрока',\r\n    value: SORT.NEW_SCORES_PLAYER,\r\n  },\r\n  // {\r\n  //   label: 'отставанию от остальных',\r\n  //   value: SORT.PROTAGONIST,\r\n  // },\r\n  {\r\n    label: 'от худших результатов (эло)',\r\n    value: SORT.RANK_ASC,\r\n  },\r\n  {\r\n    label: 'от лучших результатов (эло)',\r\n    value: SORT.RANK_DESC,\r\n  },\r\n  {\r\n    label: 'от худших результатов (pp)',\r\n    value: SORT.PP_ASC,\r\n  },\r\n  {\r\n    label: 'от лучших результатов (pp)',\r\n    value: SORT.PP_DESC,\r\n  },\r\n  {\r\n    label: 'от лёгких чартов',\r\n    value: SORT.EASIEST_SONGS,\r\n  },\r\n  {\r\n    label: 'от сложных чартов',\r\n    value: SORT.HARDEST_SONGS,\r\n  },\r\n];\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    players: playersSelector(state),\r\n    resultInfo: state.results.resultInfo,\r\n    results: state.results.results,\r\n    sharedCharts: state.results.sharedCharts,\r\n    filteredData: filteredDataSelector(state),\r\n    data: state.results.data,\r\n    filter: state.results.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading: state.results.isLoading || state.tracklist.isLoading,\r\n    presets: state.presets.presets,\r\n    currentPreset: state.presets.currentPreset,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setFilter,\r\n  resetFilter,\r\n  selectPreset,\r\n  openPreset,\r\n};\r\n\r\nclass Leaderboard extends Component {\r\n  static propTypes = {\r\n    match: toBe.object,\r\n    resultInfo: toBe.object,\r\n    data: toBe.array,\r\n    error: toBe.object,\r\n    results: toBe.array,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  state = { showItemsCount: 20, chartOverrides: {} };\r\n\r\n  setFilter = _.curry((name, value) => {\r\n    const filter = { ...this.props.filter, [name]: value };\r\n    this.props.setFilter(filter);\r\n    localForage.setItem('filter', filter);\r\n  });\r\n\r\n  resetFilter = () => {\r\n    this.props.resetFilter();\r\n    this.setState({ chartOverrides: {} });\r\n    localForage.setItem('filter', defaultFilter);\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    this.setState({ chartOverrides: {} });\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onTypeSongName = _.debounce(300, (value) => {\r\n    this.setFilter('song', value);\r\n  });\r\n\r\n  onRedoLatestResult = _.throttle(ANIMATION_DURATION + 10, (chart) => {\r\n    const overrides = _.drop(1, this.state.chartOverrides[chart.sharedChartId]);\r\n    this.setState((state) => ({\r\n      chartOverrides: {\r\n        ...state.chartOverrides,\r\n        [chart.sharedChartId]: _.size(overrides) === 1 ? null : overrides,\r\n      },\r\n    }));\r\n  });\r\n\r\n  onUndoLatestResult = _.throttle(ANIMATION_DURATION + 10, (chart) => {\r\n    if (_.isEmpty(chart.results)) {\r\n      this.setState((state) => ({\r\n        chartOverrides: _.omit(chart.sharedChartId, state.chartOverrides),\r\n      }));\r\n    }\r\n    const undoedResult = _.maxBy('date', chart.results);\r\n    if (!undoedResult) return;\r\n\r\n    const { results } = this.props;\r\n    const undoedPlayerId = undoedResult.playerId;\r\n    const previousPlayerResult = _.findLast(\r\n      (res) =>\r\n        res.playerId === undoedPlayerId &&\r\n        res.sharedChartId === chart.sharedChartId &&\r\n        res.isRank === undoedResult.isRank &&\r\n        res.date < undoedResult.date,\r\n      results\r\n    );\r\n    const newResults = _.orderBy(\r\n      'score',\r\n      'desc',\r\n      _.compact(_.map((res) => (res === undoedResult ? previousPlayerResult : res), chart.results))\r\n    );\r\n    const latestScore = _.maxBy('date', newResults);\r\n    const overrideChart = {\r\n      ...chart,\r\n      latestScoreDate: latestScore && latestScore.date,\r\n      results: newResults,\r\n    };\r\n    if (_.isEmpty(newResults)) {\r\n      this.setState((state) => ({\r\n        chartOverrides: {\r\n          ...state.chartOverrides,\r\n          [chart.sharedChartId]: null,\r\n        },\r\n      }));\r\n    } else {\r\n      this.setState((state) => ({\r\n        chartOverrides: {\r\n          ...state.chartOverrides,\r\n          [chart.sharedChartId]: [\r\n            overrideChart,\r\n            ...(state.chartOverrides[chart.sharedChartId] || [chart]),\r\n          ],\r\n        },\r\n      }));\r\n    }\r\n  });\r\n\r\n  renderSimpleSearch() {\r\n    const { isLoading, filter } = this.props;\r\n    return (\r\n      <div className=\"simple-search\">\r\n        <div className=\"song-name _margin-right _margin-bottom\">\r\n          <Input\r\n            value={filter.song || ''}\r\n            placeholder=\"название песни...\"\r\n            className=\"form-control\"\r\n            onChange={this.onTypeSongName}\r\n          />\r\n        </div>\r\n        <div className=\"chart-range _margin-right _margin-bottom\">\r\n          <ChartFilter filterValue={filter.chartRange} onChange={this.setFilter('chartRange')} />\r\n        </div>\r\n        <div className=\"_flex-fill\" />\r\n        <div className=\"_flex-row _margin-bottom\">\r\n          <PresetsControl />\r\n          <button className=\"btn btn-sm btn-dark btn-icon _margin-right\" onClick={this.resetFilter}>\r\n            <FaRedoAlt /> сбросить фильтры\r\n          </button>\r\n          <button\r\n            disabled={isLoading}\r\n            className=\"btn btn-sm btn-dark btn-icon\"\r\n            onClick={this.onRefresh}\r\n          >\r\n            <FaSearch /> обновить\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFilters() {\r\n    const { players, filter } = this.props;\r\n    return (\r\n      <div className=\"filters\">\r\n        <div className=\"people-filters\">\r\n          <label className=\"label\">показывать чарты, которые сыграл:</label>\r\n          <div className=\"players-block\">\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">каждый из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'players', filter)}\r\n                onChange={this.setFilter('players')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и хоть один из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersOr', filter)}\r\n                onChange={this.setFilter('playersOr')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и никто из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersNot', filter)}\r\n                onChange={this.setFilter('playersNot')}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Toggle\r\n            checked={_.getOr(false, 'showRank', filter)}\r\n            onChange={this.setFilter('showRank')}\r\n          >\r\n            показывать скоры на ранке\r\n          </Toggle>\r\n        </div>\r\n        {_.get('showRank', filter) && (\r\n          <>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showOnlyRank', filter)}\r\n                onChange={(value) => {\r\n                  this.setFilter('showOnlyRank', value);\r\n                  if (_.get('showRankAndNorank', filter)) {\r\n                    this.setFilter('showRankAndNorank', false);\r\n                  }\r\n                }}\r\n              >\r\n                <strong>только</strong> на ранке\r\n              </Toggle>\r\n            </div>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showRankAndNorank', filter)}\r\n                onChange={(value) => {\r\n                  this.setFilter('showRankAndNorank', value);\r\n                  if (_.get('showOnlyRank', filter)) {\r\n                    this.setFilter('showOnlyRank', false);\r\n                  }\r\n                }}\r\n              >\r\n                показывать лучшие скоры с ранком и без\r\n              </Toggle>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSortings() {\r\n    const { players, filter } = this.props;\r\n    return (\r\n      <div className=\"sortings\">\r\n        <div>\r\n          <label className=\"label\">сортировка:</label>\r\n          <Select\r\n            placeholder=\"выберите сортировку\"\r\n            className=\"select\"\r\n            classNamePrefix=\"select\"\r\n            isClearable={false}\r\n            options={sortingOptions}\r\n            value={_.getOr(sortingOptions[0], 'sortingType', filter)}\r\n            onChange={this.setFilter('sortingType')}\r\n          />\r\n        </div>\r\n        {[\r\n          SORT.PROTAGONIST,\r\n          SORT.RANK_ASC,\r\n          SORT.RANK_DESC,\r\n          SORT.PP_ASC,\r\n          SORT.PP_DESC,\r\n          SORT.NEW_SCORES_PLAYER,\r\n        ].includes(_.get('sortingType.value', filter)) && (\r\n          <div>\r\n            <label className=\"label\">игрок:</label>\r\n            <Select\r\n              className={classNames('select players', {\r\n                'red-border': !_.get('protagonist', filter),\r\n              })}\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              value={_.getOr(null, 'protagonist', filter)}\r\n              onChange={this.setFilter('protagonist')}\r\n            />\r\n          </div>\r\n        )}\r\n        {[SORT.PROTAGONIST].includes(_.get('sortingType.value', filter)) && (\r\n          <div>\r\n            <label className=\"label\">не учитывать в сравнении:</label>\r\n            <Select\r\n              closeMenuOnSelect={false}\r\n              className=\"select players\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              isMulti\r\n              value={_.getOr([], 'excludeAntagonists', filter)}\r\n              onChange={this.setFilter('excludeAntagonists')}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, filteredData, error, filter, resultInfo, sharedCharts } = this.props;\r\n    const { showItemsCount, chartOverrides } = this.state;\r\n    const canShowMore = filteredData.length > showItemsCount;\r\n    const visibleData = _.slice(0, showItemsCount, filteredData);\r\n\r\n    const sortingType = _.get('sortingType.value', filter);\r\n    const showProtagonistEloChange = [SORT.RANK_ASC, SORT.RANK_DESC].includes(sortingType);\r\n    const showProtagonistPpChange = [SORT.PP_ASC, SORT.PP_DESC].includes(sortingType);\r\n    const highlightProtagonist = [\r\n      SORT.PROTAGONIST,\r\n      SORT.RANK_ASC,\r\n      SORT.RANK_DESC,\r\n      SORT.PP_ASC,\r\n      SORT.PP_DESC,\r\n      SORT.NEW_SCORES_PLAYER,\r\n    ].includes(sortingType);\r\n    const protagonistName = _.get('protagonist.value', filter);\r\n    const uniqueSelectedNames = _.slice(\r\n      0,\r\n      colorsArray.length,\r\n      _.uniq(\r\n        _.compact([\r\n          highlightProtagonist && protagonistName,\r\n          ..._.map('value', filter.players),\r\n          ..._.map('value', filter.playersOr),\r\n        ])\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div className=\"leaderboard-page\">\r\n        <div className=\"content\">\r\n          <div className=\"search-block\">\r\n            {this.renderSimpleSearch()}\r\n            <CollapsibleBar title=\"фильтры\">{this.renderFilters()}</CollapsibleBar>\r\n            <CollapsibleBar title=\"сортировка\">{this.renderSortings()}</CollapsibleBar>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!!this.props.presets.length && (\r\n            <div className=\"presets-buttons\">\r\n              <span>пресеты:</span>\r\n              {this.props.presets.map((preset) => (\r\n                <ToggleButton\r\n                  key={preset.name}\r\n                  text={preset.name}\r\n                  className=\"btn btn-sm btn-dark _margin-right\"\r\n                  active={_.get('filter', preset) === this.props.filter}\r\n                  onToggle={() => {\r\n                    this.props.selectPreset(preset);\r\n                    this.props.openPreset();\r\n                  }}\r\n                ></ToggleButton>\r\n              ))}\r\n            </div>\r\n          )}\r\n          <div className=\"top-list\">\r\n            {_.isEmpty(filteredData) && !isLoading && (error ? error.message : 'ничего не найдено')}\r\n            {!isLoading &&\r\n              visibleData.map((chartOriginal, chartIndex) => {\r\n                const overrides = chartOverrides[chartOriginal.sharedChartId];\r\n                const chart = _.first(overrides) || chartOriginal;\r\n                if (DEBUG) console.log(chart);\r\n                let topPlace = 1;\r\n                const occuredNicknames = [];\r\n                const results = chart.results.map((res, index) => {\r\n                  const isSecondOccurenceInResults = occuredNicknames.includes(res.nickname);\r\n                  occuredNicknames.push(res.nickname);\r\n                  if (index === 0) {\r\n                    topPlace = 1;\r\n                  } else if (\r\n                    !isSecondOccurenceInResults &&\r\n                    res.score !== _.get([index - 1, 'score'], chart.results)\r\n                  ) {\r\n                    topPlace += 1;\r\n                  }\r\n                  return {\r\n                    ...res,\r\n                    topPlace,\r\n                    isSecondOccurenceInResults,\r\n                  };\r\n                });\r\n                const interpolatedDifficulty =\r\n                  sharedCharts[chart.sharedChartId] &&\r\n                  sharedCharts[chart.sharedChartId].interpolatedDifficulty;\r\n                return (\r\n                  <div className=\"song-block\" key={chart.sharedChartId}>\r\n                    <div className=\"song-name\">\r\n                      <div\r\n                        className={classNames('chart-name', {\r\n                          single: chart.chartType === 'S',\r\n                          singlep: chart.chartType === 'SP',\r\n                          doublep: chart.chartType === 'DP',\r\n                          double: chart.chartType === 'D',\r\n                          coop: chart.chartType === 'COOP',\r\n                        })}\r\n                      >\r\n                        <span className=\"chart-letter\">{chart.chartType}</span>\r\n                        <span className=\"chart-number\">{chart.chartLevel}</span>\r\n                      </div>\r\n                      <div>\r\n                        {chart.song}{' '}\r\n                        <span className=\"_grey-text\">\r\n                          ({interpolatedDifficulty && interpolatedDifficulty.toFixed(2)})\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"youtube-link\">\r\n                        <a\r\n                          href={`https://youtube.com/results?${queryString.stringify({\r\n                            search_query: `${chart.song} ${chart.chartLabel}`.replace(\r\n                              /( -)|(- )/g,\r\n                              ' '\r\n                            ),\r\n                          })}`}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          <FaYoutube />\r\n                        </a>\r\n                      </div>\r\n                      <div className=\"_flex-fill\" />\r\n                      {(() => {\r\n                        const isActive = !_.isEmpty(overrides);\r\n                        const currentIndex = isActive\r\n                          ? 1 + chart.totalResultsCount - _.size(overrides)\r\n                          : chart.totalResultsCount;\r\n                        const canUndo = !(currentIndex === 1 && chart.totalResultsCount === 1);\r\n                        return (\r\n                          <div\r\n                            className={classNames('undo-result-button', {\r\n                              active: isActive,\r\n                            })}\r\n                          >\r\n                            <FaBackward\r\n                              className={classNames('backward-btn', { disabled: !canUndo })}\r\n                              onClick={() => canUndo && this.onUndoLatestResult(chart)}\r\n                            />\r\n                            <span className=\"number\">\r\n                              {currentIndex}/{chart.totalResultsCount}\r\n                            </span>\r\n                            <FaForward\r\n                              className={classNames('forward-btn', { disabled: !isActive })}\r\n                              onClick={() => isActive && this.onRedoLatestResult(chart)}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      })()}\r\n                    </div>\r\n                    <div className=\"charts\">\r\n                      {!_.isEmpty(results) && (\r\n                        <div className=\"chart\">\r\n                          <div className=\"results\">\r\n                            <table>\r\n                              {chartIndex === 0 && (\r\n                                <thead>\r\n                                  <tr>\r\n                                    <th className=\"place\"></th>\r\n                                    <th className=\"nickname\"></th>\r\n                                    <th className=\"judge\"></th>\r\n                                    <th className=\"score\">score</th>\r\n                                    <th className=\"grade\"></th>\r\n                                    <th className=\"number\">miss</th>\r\n                                    <th className=\"number\">bad</th>\r\n                                    <th className=\"number\">good</th>\r\n                                    <th className=\"number\">great</th>\r\n                                    <th className=\"number\">perfect</th>\r\n                                    <th className=\"combo\">combo</th>\r\n                                    <th className=\"accuracy\">accuracy</th>\r\n                                    <th className=\"date\"></th>\r\n                                  </tr>\r\n                                </thead>\r\n                              )}\r\n                              <FlipMove\r\n                                enterAnimation=\"fade\"\r\n                                leaveAnimation=\"fade\"\r\n                                typeName=\"tbody\"\r\n                                maintainContainerHeight\r\n                                duration={ANIMATION_DURATION}\r\n                              >\r\n                                {results.map((res, index) => {\r\n                                  if (res.isUnknownPlayer && index !== 0) {\r\n                                    return null;\r\n                                  }\r\n                                  const nameIndex = uniqueSelectedNames.indexOf(res.nickname);\r\n                                  let placeDifference, newIndex;\r\n                                  if (res.scoreIncrease && res.date === chart.latestScoreDate) {\r\n                                    const prevScore = res.score - res.scoreIncrease;\r\n                                    newIndex = _.findLastIndex(\r\n                                      (res) => res.score > prevScore,\r\n                                      results\r\n                                    );\r\n                                    placeDifference = newIndex - index;\r\n                                  }\r\n                                  const inf = resultInfo[res.id] || {};\r\n\r\n                                  // Rating info for nickname column:\r\n                                  let ratingInfoBlock = null;\r\n                                  if (DEBUG) {\r\n                                    // In debug mode we show all info\r\n                                    ratingInfoBlock = (\r\n                                      <>\r\n                                        <span className=\"debug-elo-info\">\r\n                                          {' '}\r\n                                          {inf.startingRating && Math.round(inf.startingRating)}\r\n                                          {' / '}\r\n                                          {inf.ratingDiff > 0 ? '+' : ''}\r\n                                          {inf.ratingDiff && Math.round(inf.ratingDiff)}\r\n                                          {' / '}\r\n                                          {inf.pp && inf.pp.ppFixed}pp\r\n                                        </span>\r\n                                      </>\r\n                                    );\r\n                                  } else if (res.nickname === protagonistName) {\r\n                                    // In non-debug mode we show relevant info for selected protagonist\r\n                                    ratingInfoBlock = (\r\n                                      <>\r\n                                        {' / '}\r\n                                        {showProtagonistEloChange && inf.ratingDiff && (\r\n                                          <span>\r\n                                            {`${inf.ratingDiff > 0 ? '+' : ''}${Math.round(\r\n                                              inf.ratingDiff\r\n                                            )}`}\r\n                                          </span>\r\n                                        )}\r\n                                        {showProtagonistPpChange && inf.pp && (\r\n                                          <span>{inf.pp.ppFixed}pp</span>\r\n                                        )}\r\n                                      </>\r\n                                    );\r\n                                  }\r\n\r\n                                  return (\r\n                                    <tr\r\n                                      key={res.isRank + '_' + res.nickname}\r\n                                      className={classNames({\r\n                                        empty: !res.isExactDate,\r\n                                        latest: res.date === chart.latestScoreDate,\r\n                                      })}\r\n                                    >\r\n                                      <td className=\"place\">\r\n                                        {res.isSecondOccurenceInResults ? '' : `#${res.topPlace}`}\r\n                                      </td>\r\n                                      <td\r\n                                        className=\"nickname\"\r\n                                        style={\r\n                                          nameIndex > -1\r\n                                            ? { fontWeight: 'bold', color: colorsArray[nameIndex] }\r\n                                            : {}\r\n                                        }\r\n                                      >\r\n                                        {res.nickname}\r\n                                        {!!placeDifference && (\r\n                                          <span className=\"change-holder up\">\r\n                                            <span>{placeDifference}</span>\r\n                                            <FaAngleDoubleUp />\r\n                                          </span>\r\n                                        )}\r\n                                        {ratingInfoBlock}\r\n                                      </td>\r\n                                      <td\r\n                                        className={classNames('judge', {\r\n                                          vj: res.isRank,\r\n                                          hj: res.isHJ,\r\n                                        })}\r\n                                      >\r\n                                        {res.isRank && (\r\n                                          <div className=\"inner\">\r\n                                            {res.isExactDate ? (\r\n                                              'VJ'\r\n                                            ) : (\r\n                                              <Tooltip\r\n                                                content={\r\n                                                  <div>\r\n                                                    наличие ранка на этом результате было угадано,\r\n                                                    основываясь на скоре\r\n                                                  </div>\r\n                                                }\r\n                                                tooltipClassName=\"pumpking-tooltip\"\r\n                                              >\r\n                                                VJ?\r\n                                              </Tooltip>\r\n                                            )}\r\n                                          </div>\r\n                                        )}\r\n                                        {res.isHJ && <div className=\"inner\">HJ</div>}\r\n                                      </td>\r\n                                      <td className=\"score\">\r\n                                        <Overlay\r\n                                          overlayClassName=\"score-overlay-outer\"\r\n                                          overlayItem={\r\n                                            <span className=\"score-span\">\r\n                                              {/* {res.scoreIncrease > res.score * 0.8 && <FaPlus />} */}\r\n                                              {res.scoreIncrease > res.score * 0.8 && '*'}\r\n                                              {numeral(res.score).format('0,0')}\r\n                                            </span>\r\n                                          }\r\n                                          placement=\"top\"\r\n                                        >\r\n                                          <div className=\"score-overlay\">\r\n                                            {DEBUG && (\r\n                                              <>\r\n                                                <div>\r\n                                                  <span className=\"_grey\">result id: </span>\r\n                                                  {res.id}\r\n                                                </div>\r\n                                                <div>\r\n                                                  <span className=\"_grey\">player id: </span>\r\n                                                  {res.playerId}\r\n                                                </div>\r\n                                              </>\r\n                                            )}\r\n                                            <div>\r\n                                              <span className=\"_grey\">игрок: </span>\r\n                                              <NavLink\r\n                                                exact\r\n                                                to={routes.profile.getPath({ id: res.playerId })}\r\n                                              >\r\n                                                {res.nickname} ({res.nicknameArcade})\r\n                                              </NavLink>\r\n                                            </div>\r\n                                            {!!getExp(res, chart) && (\r\n                                              <div className=\"important\">\r\n                                                <span className=\"_grey\">опыт: </span>+\r\n                                                {numeral(getExp(res, chart)).format('0,0')}\r\n                                              </div>\r\n                                            )}\r\n                                            {_.isNumber(inf.startingRating) &&\r\n                                              _.isNumber(inf.ratingDiff) && (\r\n                                                <div className=\"important\">\r\n                                                  <span className=\"_grey\">\r\n                                                    эло: {inf.startingRating.toFixed(0)}{' '}\r\n                                                  </span>\r\n                                                  {inf.ratingDiff >= 0\r\n                                                    ? `+${inf.ratingDiff.toFixed(0)}`\r\n                                                    : inf.ratingDiff.toFixed(0)}\r\n                                                </div>\r\n                                              )}\r\n                                            {inf.pp && (\r\n                                              <div className=\"important\">\r\n                                                <span className=\"_grey\">pp: </span>\r\n                                                <span>{inf.pp.ppFixed}pp</span>\r\n                                              </div>\r\n                                            )}\r\n                                            {!res.isExactDate && (\r\n                                              <div className=\"warning\">\r\n                                                <FaExclamationTriangle />\r\n                                                рекорд взят с my best. часть данных недоступна\r\n                                              </div>\r\n                                            )}\r\n                                            {!!res.isExactDate && (\r\n                                              <>\r\n                                                {!!res.mods && (\r\n                                                  <div>\r\n                                                    <span className=\"_grey\">моды: </span>\r\n                                                    {res.mods}\r\n                                                  </div>\r\n                                                )}\r\n                                                {!!res.calories && (\r\n                                                  <div>\r\n                                                    <span className=\"_grey\">ккал: </span>\r\n                                                    {res.calories}\r\n                                                  </div>\r\n                                                )}\r\n                                                {!!res.scoreIncrease && (\r\n                                                  <div>\r\n                                                    <span className=\"_grey\">прирост: </span>+\r\n                                                    {numeral(res.scoreIncrease).format('0,0')}\r\n                                                  </div>\r\n                                                )}\r\n                                                {res.originalChartMix && (\r\n                                                  <div>\r\n                                                    <div className=\"warning\">\r\n                                                      <FaExclamationTriangle />\r\n                                                      было сыграно на {res.originalChartMix}\r\n                                                    </div>\r\n                                                    {res.originalChartLabel && (\r\n                                                      <div>\r\n                                                        <span className=\"_grey\">\r\n                                                          оригинальный чарт:{' '}\r\n                                                        </span>\r\n                                                        {res.originalChartLabel}\r\n                                                      </div>\r\n                                                    )}\r\n                                                    {res.originalScore && (\r\n                                                      <div>\r\n                                                        <span className=\"_grey\">\r\n                                                          оригинальный скор:{' '}\r\n                                                        </span>\r\n                                                        {res.originalScore}\r\n                                                      </div>\r\n                                                    )}\r\n                                                  </div>\r\n                                                )}\r\n                                                {res.scoreIncrease > res.score * 0.8 && '* сайтрид'}\r\n                                              </>\r\n                                            )}\r\n                                          </div>\r\n                                        </Overlay>\r\n                                      </td>\r\n                                      <td className=\"grade\">\r\n                                        <div className=\"img-holder\">\r\n                                          {res.grade && res.grade !== '?' && (\r\n                                            <img\r\n                                              src={`${process.env.PUBLIC_URL}/grades/${res.grade}.png`}\r\n                                              alt={res.grade}\r\n                                            />\r\n                                          )}\r\n                                          {res.grade === '?' && null}\r\n                                        </div>\r\n                                      </td>\r\n                                      <td className=\"number miss\">{res.miss}</td>\r\n                                      <td className=\"number bad\">{res.bad}</td>\r\n                                      <td className=\"number good\">{res.good}</td>\r\n                                      <td className=\"number great\">{res.great}</td>\r\n                                      <td className=\"number perfect\">{res.perfect}</td>\r\n                                      <td className=\"combo\">\r\n                                        {res.combo}\r\n                                        {res.combo ? 'x' : ''}\r\n                                      </td>\r\n                                      <td className=\"accuracy\">\r\n                                        {res.accuracy}\r\n                                        {res.accuracy ? '%' : ''}\r\n                                      </td>\r\n                                      <td\r\n                                        className={classNames('date', {\r\n                                          latest: res.date === chart.latestScoreDate,\r\n                                        })}\r\n                                      >\r\n                                        <Tooltip\r\n                                          content={tooltipFormatter(res)}\r\n                                          tooltipClassName=\"pumpking-tooltip\"\r\n                                        >\r\n                                          {getTimeAgo(res.dateObject)}\r\n                                          {res.isExactDate ? '' : '?'}\r\n                                        </Tooltip>\r\n                                      </td>\r\n                                    </tr>\r\n                                  );\r\n                                })}\r\n                              </FlipMove>\r\n                            </table>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            {!isLoading && canShowMore && (\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() =>\r\n                  this.setState((state) => ({ showItemsCount: state.showItemsCount + 10 }))\r\n                }\r\n              >\r\n                show more...\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Leaderboard);\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n// import numeral from 'numeral';\r\nimport classNames from 'classnames';\r\nimport { GiQueenCrown } from 'react-icons/gi';\r\nimport { FaAngleDoubleUp, FaAngleDoubleDown } from 'react-icons/fa';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nimport { getRankImg } from 'utils/exp';\r\n\r\nconst getGradeImg = (grade) => (\r\n  <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n);\r\n\r\nexport default function RankingList({ ranking, isLoading }) {\r\n  return (\r\n    <div className=\"ranking-list\">\r\n      {_.isEmpty(ranking) && !isLoading && 'ничего не найдено'}\r\n      {isLoading && <Loader />}\r\n      {!isLoading && (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"place\"></th>\r\n              <th className=\"change\"></th>\r\n              <th className=\"exp-rank\">rank</th>\r\n              <th className=\"name\">name</th>\r\n              <th className=\"name2\">piu name</th>\r\n              <th className=\"rating\">elo</th>\r\n              <th className=\"rating-change-cell\"></th>\r\n              <th className=\"rating\">pp</th>\r\n              {/* <th className=\"total-score\">total score</th> */}\r\n              <th className=\"grades sss\">{getGradeImg('SSS')}</th>\r\n              <th className=\"grades ss\">{getGradeImg('SS')}</th>\r\n              <th className=\"grades s\">{getGradeImg('S')}</th>\r\n              <th className=\"grades a\">{getGradeImg('A+')}</th>\r\n              <th className=\"grades b\">{getGradeImg('B')}</th>\r\n              <th className=\"grades c\">{getGradeImg('C')}</th>\r\n              <th className=\"grades d\">{getGradeImg('D')}</th>\r\n              <th className=\"grades f\">{getGradeImg('F')}</th>\r\n              <th className=\"playcount\">scores</th>\r\n              {/* <th className=\"calories\">kcal</th> */}\r\n              <th className=\"accuracy\">accuracy</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {ranking.map((player, playerIndex) => {\r\n              return (\r\n                <tr className=\"player\" key={player.name}>\r\n                  <td className=\"place\">\r\n                    {playerIndex === 0 ? <GiQueenCrown /> : `#${playerIndex + 1}`}\r\n                  </td>\r\n                  <td className=\"change\">\r\n                    {player.change > 0 && (\r\n                      <div className=\"change-holder up\">\r\n                        <span>{player.change}</span>\r\n                        <FaAngleDoubleUp />\r\n                      </div>\r\n                    )}\r\n                    {player.change < 0 && (\r\n                      <div className=\"change-holder down\">\r\n                        <span>{-player.change}</span>\r\n                        <FaAngleDoubleDown />\r\n                      </div>\r\n                    )}\r\n                    {!!player.change && _.isString(player.change) && (\r\n                      <div className=\"change-holder text\">\r\n                        <span>{player.change}</span>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"exp-rank\">{getRankImg(player.expRank)}</td>\r\n                  <td className=\"name\">\r\n                    <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                      {player.name}\r\n                    </NavLink>\r\n                  </td>\r\n                  <td className=\"name\">\r\n                    <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                      {player.nameArcade}\r\n                    </NavLink>\r\n                  </td>\r\n                  <td className=\"rating\">{player.rating}</td>\r\n                  <td className=\"rating-change-cell\">\r\n                    {!!player.prevRating && player.prevRating !== player.rating && (\r\n                      <span\r\n                        className={classNames('rating-change', {\r\n                          down: player.prevRating > player.rating,\r\n                          up: player.prevRating < player.rating,\r\n                        })}\r\n                      >\r\n                        {player.prevRating < player.rating ? '+' : ''}\r\n                        {player.rating - player.prevRating}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"rating secondary\">{Math.round(player.pp.pp)}</td>\r\n                  <td className=\"grades sss\">{player.grades.SSS}</td>\r\n                  <td className=\"grades ss\">{player.grades.SS}</td>\r\n                  <td className=\"grades s\">{player.grades.S}</td>\r\n                  <td className=\"grades a\">{player.grades.A}</td>\r\n                  <td className=\"grades b\">{player.grades.B}</td>\r\n                  <td className=\"grades c\">{player.grades.C}</td>\r\n                  <td className=\"grades d\">{player.grades.D}</td>\r\n                  <td className=\"grades f\">{player.grades.F}</td>\r\n                  <td className=\"playcount\">{player.count}</td>\r\n                  <td className=\"accuracy\">\r\n                    {player.accuracy ? `${player.accuracy.toFixed(2)}%` : ''}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function RankingFaq() {\r\n  return (\r\n    <div className=\"faq\">\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Как считается рейтинг?</div>\r\n        <div className=\"answer\">\r\n          A: Используется <a href=\"https://en.wikipedia.org/wiki/Elo_rating_system\">рейтинг Эло</a>,\r\n          широко используемый в шахматах и других играх, слегка модицированный под условия игры на\r\n          пампе. Средний рейтинг - 1000. Коэффициент К зависит от уровня чарта (более сложные чарты\r\n          сильнее влияют на рейтинг). Количество очков влияет на заработанный рейтинг (маленький\r\n          отрыв от противника не даст так много очков как большой отрыв).\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Что такое рр и чем оно отличается от эло?</div>\r\n        <div className=\"answer\">\r\n          A: РР (performance points) - система очков, взятая из osu!. Эло - система рейтинга, взятая\r\n          из шахмат. Основные отличия:\r\n          <br />\r\n          С эло твои очки зависят от других игроков на этом чарте, с рр твои очки зависят только от\r\n          того, как ты сыграешь чарт.\r\n          <br />\r\n          С эло можно потерять очки или заставить другого игрока их потерять, с рр можно только\r\n          набирать больше очков.\r\n          <br />\r\n          С эло намного проще кого-то обогнать, с рр люди редко меняются местами в рейтинге.\r\n          <br />\r\n          Эло показывает кто кого обыгрывает в последнее время, а рр показывает, кто на каком\r\n          примерно уровне по скиллу.\r\n          <br />\r\n          Сейчас рейтинг сортируется по Эло. РР выступает в качестве дополнительной инфы для\r\n          интереса, плюс используется как стартовое значение Эло.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Система Эло используется для игр 1 на 1, как она используется на пампе, где на одном\r\n          чарте играет много игроков?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: Рекорды на одном чарте делятся на несколько игр 1 на 1. Если есть 3 игрока: A, B, C; то\r\n          считается, что было 3 отдельные игры: A vs B, A vs C, B vs C.\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Как считается сумма рр?</div>\r\n        <div className=\"answer\">\r\n          A: Сначала все скоры игрока сортируются по рр. Затем в общую сумму рр добавляется 100% от\r\n          лучшего скора, 95% от второго скора, 90% от третьего, 86% от 4-го и так далее. (Формула\r\n          коэффициента - 0.95^N). Таким образом, на общую сумму рр больше всего влияют самые лучшие\r\n          результаты человека за всё время, и чтобы поднять свой уровень рр, нужно получать новые\r\n          топовые результаты (и поднимать свой скилл).\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Учитываются ли рекорды на ранке в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: Да. Как минимум потому что у нас есть много рекордов, взятых с машин бестов, и мы не\r\n          знаем наверняка, на ранке они или нет. Если у игрока в топе есть два скора - на ранке и\r\n          без ранка, используется тот, где больше очков.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Почему меня нет в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: В таблицу попадают только те, у кого есть хотя бы 20 игр 1 на 1. Первые 20 игр\r\n          используются для определения изначального рейтинга.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Почему суммарное количество оценок S-A-B не совпадает с общим количеством скоров?\r\n        </div>\r\n        <div className=\"answer\">A: Не для каждого результата известна оценка.</div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Если у меня есть несколько рекордов на А, несколько на А+, как считается суммарное\r\n          количество грейдов в таблице?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: В каждой колонке учитываются обе буквы - и треснутые, и с удержанным лайфом. То есть и\r\n          А, и А+ идут в колонку А. Точно так же для B, C, D.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Убери аккураси из таблицы!</div>\r\n        <div className=\"answer\">A: Грем, это секция для вопросов.</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle } from 'react-icons/fa';\r\nimport { Link, Route, withRouter } from 'react-router-dom';\r\nimport { createSelector } from 'reselect';\r\nimport _ from 'lodash/fp';\r\n\r\n// styles\r\nimport './ranking.scss';\r\n\r\n// components\r\nimport RankingList from './RankingList';\r\nimport RankingFaq from './RankingFaq';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\n\r\n// utils\r\n\r\n// code\r\nconst rankingSelector = createSelector(\r\n  (state) => state.results.profiles,\r\n  // _.flow(_.values, _.orderBy(['pp.pp'], ['desc']))\r\n  _.flow(_.values, _.orderBy(['ratingRaw'], ['desc']))\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ranking: rankingSelector(state),\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading:\r\n      state.results.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n};\r\n\r\nclass Ranking extends Component {\r\n  static propTypes = {\r\n    ranking: toBe.array,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    ranking: [],\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, ranking, error } = this.props;\r\n\r\n    return (\r\n      <div className=\"ranking-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.path}\r\n              render={() => (\r\n                <>\r\n                  <Link to={routes.ranking.faq.path}>\r\n                    <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n                      <FaQuestionCircle /> faq\r\n                    </button>\r\n                  </Link>\r\n                  <button\r\n                    disabled={isLoading}\r\n                    className=\"btn btn-sm btn-dark btn-icon\"\r\n                    onClick={this.onRefresh}\r\n                  >\r\n                    <FaSearch /> обновить\r\n                  </button>\r\n                </>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.faq.path}\r\n              render={() => (\r\n                <Link to={routes.ranking.path}>\r\n                  <button className=\"btn btn-sm btn-dark btn-icon\">назад</button>\r\n                </Link>\r\n              )}\r\n            />\r\n          </div>\r\n          <Route\r\n            exact\r\n            path={routes.ranking.path}\r\n            render={() => <RankingList ranking={ranking} isLoading={isLoading} />}\r\n          />\r\n          <Route exact path={routes.ranking.faq.path} component={RankingFaq} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Ranking));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\nimport { FaPlay } from 'react-icons/fa';\r\nimport { MdExpandMore } from 'react-icons/md';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { parseDate } from 'utils/date';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport './most-played.scss';\r\n\r\nexport default connect(\r\n  state => ({ charts: state.results.sharedCharts }),\r\n  { fetchJson }\r\n)(({ playerId, charts, fetchJson }) => {\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [limit, setLimit] = useState(10);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchJson({\r\n      url: `${HOST}/player/${playerId}/mostPlayed?limit=${limit}`,\r\n    })\r\n      .then(result => {\r\n        setLoading(false);\r\n        if (result.success) {\r\n          setData(result.data);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [playerId, limit, fetchJson]);\r\n\r\n  return (\r\n    <div className=\"most-played\">\r\n      {isLoading && <Loader />}\r\n      {data.map(item => {\r\n        const chart = charts[item.shared_chart];\r\n        return (\r\n          <div className=\"chart\" key={item.shared_chart}>\r\n            <div\r\n              className={classNames('chart-name', {\r\n                single: chart.chartType === 'S',\r\n                singlep: chart.chartType === 'SP',\r\n                doublep: chart.chartType === 'DP',\r\n                double: chart.chartType === 'D',\r\n                coop: chart.chartType === 'COOP',\r\n              })}\r\n            >\r\n              <span className=\"chart-letter\">{chart.chartType}</span>\r\n              <span className=\"chart-number\">{chart.chartLevel}</span>\r\n            </div>\r\n            <div className=\"song-name\">{chart.song}</div>\r\n            <div className=\"date\">\r\n              {item.latestDate ? getTimeAgo(parseDate(item.latestDate)) : null}\r\n            </div>\r\n            <div className=\"playcount\">\r\n              <FaPlay />\r\n              <span>{item.count}</span>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      {limit === _.size(data) && (\r\n        <button\r\n          className=\"show-more btn btn-sm btn-dark btn-icon\"\r\n          onClick={() => setLimit(limit + 10)}\r\n        >\r\n          <MdExpandMore /> больше\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\n\r\nimport { ranks, getRankImg } from 'utils/exp';\r\n\r\nexport default function ExpFaq() {\r\n  return (\r\n    <div className=\"faq-exp\">\r\n      <div className=\"faq-header\">\r\n        <strong>Опыт</strong> игрока основывается на количестве сыгранных песен и чартов.\r\n        <br />\r\n        Чем выше уровень чарта и чем лучше оценка на чарте, тем больше опыта он даёт.\r\n        <br />\r\n        Повторные попытки на тех же чартах не дают больше опыта. Чтобы поднимать свой уровень, играй\r\n        новые треки и чарты.\r\n      </div>\r\n      <div className=\"faq-header\">Список уровней и необходимый опыт для их получения:</div>\r\n      <div className=\"ranks-list\">\r\n        {ranks.map(rank => (\r\n          <div key={rank.threshold} className=\"rank\">\r\n            <div className=\"exp-rank\">{getRankImg(rank)}</div>\r\n            <div className=\"threshold\">{rank.threshold}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const SET_FILTER = `PROFILES/SET_FILTER`;\r\nconst RESET_FILTER = `PROFILES/RESET_FILTER`;\r\n\r\nexport const defaultFilter = {};\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  filter: defaultFilter,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setProfilesFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\n\r\nexport const resetProfilesFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n","import _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport moment from 'moment';\r\n\r\nconst cutRange = (array, range) => {\r\n  const startIndex = _.findIndex(item => item.date > range[0], array);\r\n  const endIndex = _.findLastIndex(item => item.date < range[1], array);\r\n  let firstElement =\r\n    startIndex > 0 ? array[startIndex - 1] : startIndex === 0 ? array[startIndex] : _.last(array);\r\n  let lastElement = endIndex > -1 ? array[endIndex] : _.first(array);\r\n  firstElement = { ...firstElement, date: range[0] };\r\n  lastElement = { ...lastElement, date: range[1] };\r\n  const middleElements =\r\n    startIndex > -1 && endIndex > -1 ? array.slice(startIndex, endIndex + 1) : [];\r\n\r\n  return [firstElement, ...middleElements, lastElement];\r\n};\r\n\r\nconst defaultGradesDistribution = {\r\n  SSS: 0,\r\n  SS: 0,\r\n  S: 0,\r\n  'A+': 0,\r\n  A: 0,\r\n  B: 0,\r\n  C: 0,\r\n  D: 0,\r\n  F: 0,\r\n};\r\nconst defaultGradesWithLevelsDistribution = _.flow(\r\n  _.flatMap(type => {\r\n    return _.flow(\r\n      _.toPairs,\r\n      _.map(([grade, value]) => [`${type}-${grade}`, value])\r\n    )(defaultGradesDistribution);\r\n  }),\r\n  _.fromPairs\r\n)(['S', 'D']);\r\n\r\nexport const profileSelectorCreator = idParamName =>\r\n  createSelector(\r\n    (state, props) => _.toInteger(props.match.params[idParamName]),\r\n    state => state.results.isLoading || state.results.isLoadingRanking,\r\n    state => state.results.profiles,\r\n    state => state.profiles.filter,\r\n    state => state.tracklist.data,\r\n    (id, isLoading, profiles, filter, tracklist) => {\r\n      const profile = profiles[id];\r\n      if (_.isEmpty(profile) || isLoading) {\r\n        return null;\r\n      }\r\n      const levelsDistribution = _.flow(\r\n        _.get('resultsByLevel'),\r\n        _.toPairs,\r\n        _.map(([x, y]) => ({\r\n          x: _.toInteger(x),\r\n          S:\r\n            (_.size(\r\n              _.filter(res => res.chart.chartType === 'S' || res.chart.chartType === 'SP', y)\r\n            ) /\r\n              tracklist.singlesLevels[x]) *\r\n            100,\r\n          D:\r\n            (-_.size(\r\n              _.filter(res => res.chart.chartType === 'D' || res.chart.chartType === 'DP', y)\r\n            ) /\r\n              tracklist.doublesLevels[x]) *\r\n            100,\r\n        }))\r\n      )(profile);\r\n      const gradesData = _.flow(\r\n        _.get('resultsByLevel'),\r\n        _.toPairs,\r\n        _.map(\r\n          _.update('[1].result.grade', grade =>\r\n            grade && grade.includes('+') && grade !== 'A+' ? grade.replace('+', '') : grade\r\n          )\r\n        )\r\n      )(profile);\r\n      const gradesDistribution = _.flow(\r\n        _.map(([x, y]) => ({\r\n          x: _.toInteger(x),\r\n          ...defaultGradesDistribution,\r\n          ..._.omit('?', _.mapValues(_.size, _.groupBy('result.grade', y))),\r\n        })),\r\n        _.map(item => {\r\n          const grades = _.pick(Object.keys(defaultGradesDistribution), item);\r\n          const sum = _.sum(_.values(grades));\r\n          return {\r\n            ...item,\r\n            gradesValues: grades,\r\n            ...(sum === 0 ? grades : _.mapValues(value => (100 * value) / sum, grades)),\r\n          };\r\n        })\r\n      )(gradesData);\r\n      const gradesAndLevelsDistribution = _.flow(\r\n        _.map(([x, y]) => {\r\n          const groupedResults = _.groupBy('result.grade', y);\r\n          const counts = _.omit(\r\n            '?',\r\n            _.mapValues(\r\n              _.countBy(res => {\r\n                return res.chart.chartType === 'S' || res.chart.chartType === 'SP'\r\n                  ? 'S'\r\n                  : res.chart.chartType === 'D' || res.chart.chartType === 'DP'\r\n                  ? 'D'\r\n                  : 'Other';\r\n              }),\r\n              groupedResults\r\n            )\r\n          );\r\n          const reduced = _.reduce(\r\n            (acc, [grade, levelsData]) => {\r\n              const accData = _.flow(\r\n                _.toPairs,\r\n                _.map(([type, count]) => [\r\n                  `${type}-${grade}`,\r\n                  type === 'S'\r\n                    ? (count / tracklist.singlesLevels[x]) * 100\r\n                    : (-count / tracklist.doublesLevels[x]) * 100,\r\n                ]),\r\n                _.fromPairs\r\n              )(levelsData);\r\n              return { ...acc, ...accData };\r\n            },\r\n            {},\r\n            _.toPairs(counts)\r\n          );\r\n\r\n          return {\r\n            x: _.toInteger(x),\r\n            ...defaultGradesWithLevelsDistribution,\r\n            ...reduced,\r\n          };\r\n        })\r\n      )(gradesData);\r\n\r\n      const lastTickRating = _.last(profile.ratingHistory).date;\r\n      const lastTickRanking = _.last(profile.rankingHistory).date;\r\n      const lastTick = lastTickRating > lastTickRanking ? lastTickRating : lastTickRanking; // End graph at either point\r\n      const firstTick = _.first(profile.ratingHistory).date; // Start graph from the first battle of this player\r\n      const lastDay = moment(lastTick).endOf('day');\r\n      const firstDay = moment(firstTick).startOf('day');\r\n      const minMaxRange = [firstDay / 1000 / 60 / 60 / 24, lastDay / 1000 / 60 / 60 / 24];\r\n\r\n      const filterRange = filter.dayRange || [\r\n        Math.max(minMaxRange[0], minMaxRange[1] - 30),\r\n        minMaxRange[1],\r\n      ];\r\n      const dayRangeMs = [\r\n        +moment(filterRange[0] * 1000 * 60 * 60 * 24).startOf('day'),\r\n        +moment(filterRange[1] * 1000 * 60 * 60 * 24).endOf('day'),\r\n      ];\r\n      const placesChanges = cutRange(profile.rankingHistory, dayRangeMs);\r\n      const ratingChanges = cutRange(profile.ratingHistory, dayRangeMs);\r\n\r\n      const rank = 1 + _.findIndex({ id }, _.orderBy(['ratingRaw'], ['desc'], _.values(profiles)));\r\n\r\n      return {\r\n        ...profile,\r\n        rank,\r\n        minMaxRange,\r\n        filterRange,\r\n        levelsDistribution,\r\n        gradesDistribution,\r\n        gradesAndLevelsDistribution,\r\n        placesChanges,\r\n        ratingChanges,\r\n      };\r\n    }\r\n  );\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle, FaTimes, FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport ReactModal from 'react-modal';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport Select from 'react-select';\r\nimport moment from 'moment';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as RechartsTooltip,\r\n  ReferenceLine,\r\n  CartesianGrid,\r\n  Line,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Label,\r\n} from 'recharts';\r\nimport _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\n\r\n// styles\r\nimport './profile.scss';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\nimport { DEBUG } from 'constants/env';\r\n\r\n// components\r\nimport Range from 'components/Shared/Range';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport MostPlayed from './MostPlayed';\r\nimport ExpFaq from './ExpFaq';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\nimport { setProfilesFilter, resetProfilesFilter } from 'reducers/profiles';\r\n\r\n// utils\r\nimport { profileSelectorCreator } from 'utils/profiles';\r\nimport { parseDate } from 'utils/date';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { achievements } from 'utils/achievements';\r\nimport { getRankImg } from 'utils/exp';\r\n\r\n// code\r\nconst MIN_GRAPH_HEIGHT = undefined;\r\n\r\nconst profileSelector = profileSelectorCreator('id');\r\n\r\nexport const otherPlayersSelector = createSelector(\r\n  state => state.results.players,\r\n  (state, props) => _.toNumber(props.match.params.id),\r\n  (players, id) =>\r\n    _.flow(\r\n      _.toPairs,\r\n      _.map(([ind, { nickname, arcade_name, id }]) => ({\r\n        label: `${nickname} (${arcade_name})`,\r\n        value: nickname,\r\n        id: _.toNumber(id),\r\n      })),\r\n      _.remove(it => it.id === id),\r\n      _.sortBy(it => _.toLower(it.label))\r\n    )(players)\r\n);\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    profile: profileSelector(state, props),\r\n    otherPlayers: otherPlayersSelector(state, props),\r\n    tracklist: state.tracklist.data,\r\n    filter: state.profiles.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading:\r\n      state.results.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setProfilesFilter,\r\n  resetProfilesFilter,\r\n};\r\n\r\nclass Profile extends Component {\r\n  static propTypes = {\r\n    profile: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    profile: {},\r\n  };\r\n\r\n  state = {\r\n    isLevelGraphCombined: true,\r\n    showFaq: false,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetProfilesFilter();\r\n  }\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onChangeDayRange = range => {\r\n    const { filter } = this.props;\r\n    this.props.setProfilesFilter({\r\n      ...filter,\r\n      dayRange: range,\r\n    });\r\n  };\r\n\r\n  onShowFaq = () => {\r\n    this.setState({ showFaq: true });\r\n  };\r\n\r\n  onHideFaq = () => {\r\n    this.setState({ showFaq: false });\r\n  };\r\n\r\n  renderRankingHistory() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={profile.ratingChanges} margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={value => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={['dataMin - 100', 'dataMax + 100']}\r\n            tickFormatter={Math.round}\r\n            width={40}\r\n          />\r\n          <ReferenceLine y={1000} stroke=\"white\" />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Rating: {Math.round(payload[0].value)}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderPlaceHistory() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={profile.placesChanges} margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={value => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={[1, dataMax => (dataMax < 3 ? dataMax + 2 : dataMax + 1)]}\r\n            interval={0}\r\n            reversed\r\n            width={40}\r\n          />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Place: #{payload[0].value}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGrades() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <BarChart\r\n          data={profile.gradesDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {_.filter(item => item.value > 0, payload).map(item => (\r\n                    <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                      {item.name}: {payload[0].payload.gradesValues[item.name]}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            domain={[0, 100]}\r\n            ticks={[0, 50, 100]}\r\n            tickFormatter={x => `${Math.round(x)}%`}\r\n            width={40}\r\n          />\r\n          <Legend />\r\n          <Bar dataKey=\"SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"F\" fill=\"#774949\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradesWithLevels() {\r\n    const { profile, tracklist } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={0.74}>\r\n        <BarChart\r\n          data={profile.gradesAndLevelsDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n          stackOffset=\"sign\"\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              const doubleItems = _.filter(\r\n                item => item.value !== 0 && item.dataKey.startsWith('D'),\r\n                payload\r\n              );\r\n              const singleItems = _.filter(\r\n                item => item.value !== 0 && item.dataKey.startsWith('S'),\r\n                payload\r\n              );\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {!!singleItems.length && (\r\n                    <>\r\n                      <div>Single:</div>\r\n                      {singleItems.map(item => (\r\n                        <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                          {item.name.slice(2)}: {Math.round(Math.abs(item.value))}% (\r\n                          {Math.round((tracklist.singlesLevels[item.payload.x] * item.value) / 100)}\r\n                          /{tracklist.singlesLevels[item.payload.x]})\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                  {!!doubleItems.length && (\r\n                    <>\r\n                      <div>Double:</div>\r\n                      {doubleItems.map(item => (\r\n                        <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                          {item.name.slice(2)}: {Math.round(Math.abs(item.value))}% (\r\n                          {Math.round(\r\n                            (tracklist.doublesLevels[item.payload.x] * -item.value) / 100\r\n                          )}\r\n                          /{tracklist.doublesLevels[item.payload.x]})\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            tickFormatter={x => `${Math.round(Math.abs(x))}%`}\r\n            width={40}\r\n            domain={[dataMin => Math.min(dataMin, -10), dataMax => Math.max(10, dataMax)]}\r\n          />\r\n          <Bar dataKey=\"S-SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Label value=\"Double\" offset={0} position=\"insideBottomLeft\" />\r\n          <Label value=\"Single\" offset={0} position=\"insideTopLeft\" />\r\n          <ReferenceLine y={0} stroke=\"#bbb\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderLevels() {\r\n    const { profile, tracklist } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <BarChart\r\n          data={profile.levelsDistribution}\r\n          stackOffset=\"sign\"\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              const totalD = tracklist.doublesLevels[payload[0].payload.x];\r\n              const totalS = tracklist.singlesLevels[payload[0].payload.x];\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {totalS > 0 && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n                      Single: {Math.abs(payload[1].value).toFixed(1)}% (\r\n                      {Math.round((payload[1].value * totalS) / 100)}/{totalS})\r\n                    </div>\r\n                  )}\r\n                  {totalD > 0 && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n                      Double: {Math.abs(payload[0].value).toFixed(1)}% (\r\n                      {Math.round((Math.abs(payload[0].value) * totalD) / 100)}/{totalD})\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            tickFormatter={x => Math.round(Math.abs(x)) + '%'}\r\n            width={40}\r\n            domain={[dataMin => Math.min(dataMin, -10), dataMax => Math.max(10, dataMax)]}\r\n          />\r\n          <RechartsTooltip />\r\n          <ReferenceLine y={0} stroke=\"#555\" />\r\n          <Legend />\r\n          <Bar dataKey=\"D\" fill=\"#169c16\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#af2928\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradeBlock(type, grade) {\r\n    const { profile } = this.props;\r\n    const obj = profile.progress[type];\r\n    const typeLetter = type === 'double' ? 'D' : 'S';\r\n    const progr = Math.floor((obj[`${grade}-bonus-level-coef`] || 0) * 100);\r\n    const minNumber = obj[`${grade}-bonus-level-min-number`];\r\n    const currentNumber = obj[`${grade}-bonus-level-achieved-number`];\r\n    const levelString = obj[`${grade}-bonus-level`]\r\n      ? `${typeLetter}${obj[`${grade}-bonus-level`]}`\r\n      : '?';\r\n    return (\r\n      <div className=\"grade-block\">\r\n        <div className=\"grade-letter\">\r\n          <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n        </div>\r\n        <div className=\"grade-level\">{levelString}</div>\r\n        <div className=\"grade-progress\">\r\n          {progr}% ({progr === 100 ? minNumber : currentNumber}/{minNumber})\r\n        </div>\r\n        <div\r\n          className={classNames('progress-background', {\r\n            complete: progr === 100,\r\n            zero: progr === 0,\r\n          })}\r\n          style={{\r\n            height: `${progr}%`,\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderAchievement(achName, achievement) {\r\n    const Icon = achievements[achName].icon;\r\n    const description = achievements[achName].description;\r\n    return (\r\n      <Tooltip\r\n        key={achName}\r\n        content={<div>{description}</div>}\r\n        tooltipClassName=\"pumpking-tooltip achievement-tooltip\"\r\n      >\r\n        <div className=\"ach-block\">\r\n          {Icon && (\r\n            <div className=\"ach-icon\">\r\n              <Icon />\r\n            </div>\r\n          )}\r\n          <div className=\"ach-name\">{achName}</div>\r\n          <div\r\n            className={classNames('progress-background', {\r\n              complete: achievement.progress === 100,\r\n              zero: achievement.progress === 0,\r\n            })}\r\n            style={{\r\n              height: `${Math.round(achievement.progress)}%`,\r\n            }}\r\n          />\r\n        </div>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  renderProfile() {\r\n    const { profile, otherPlayers, filter } = this.props;\r\n    const { isLevelGraphCombined } = this.state;\r\n    const expProgress = profile.expRankNext\r\n      ? (profile.exp - profile.expRank.threshold) /\r\n        (profile.expRankNext.threshold - profile.expRank.threshold)\r\n      : 100;\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"profile-header\">\r\n          <div className=\"profile-name text-with-header\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile.lastResultDate ? getTimeAgo(profile.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n          <div className=\"_flex-fill\"></div>\r\n          <div className=\"text-with-header -select\">\r\n            <div className=\"text-header\">сравнить с</div>\r\n            <div>\r\n              <Select\r\n                closeMenuOnSelect\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                options={otherPlayers}\r\n                onChange={value => {\r\n                  this.props.history.push(\r\n                    routes.profile.compare.getPath({ id: profile.id, compareToId: value.id })\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header _flex-row _align-center\">\r\n            <span>опыт</span>\r\n            <div className=\"_flex-fill\" />\r\n            <div onClick={this.onShowFaq} className=\"_clickable\">\r\n              <FaQuestionCircle onClick={this.onShowFaq} />\r\n            </div>\r\n            <ReactModal\r\n              ariaHideApp={false}\r\n              className=\"Modal faq-modal\"\r\n              overlayClassName=\"Overlay\"\r\n              isOpen={this.state.showFaq}\r\n              onRequestClose={this.onHideFaq}\r\n            >\r\n              <div className=\"close-btn\" onClick={this.onHideFaq}>\r\n                <FaTimes />\r\n              </div>{' '}\r\n              <ExpFaq />\r\n            </ReactModal>\r\n          </div>\r\n          <div className=\"exp-range\">\r\n            <div className=\"rank exp-rank\">\r\n              {getRankImg(profile.expRank)}\r\n              {profile.expRank && <div>{profile.expRank.threshold}</div>}\r\n            </div>\r\n            <div className=\"exp-line-with-label\">\r\n              <div className=\"exp-label\">\r\n                {profile.expRankNext ? (\r\n                  <>\r\n                    <span className=\"taken-num\">\r\n                      {Math.round(profile.exp - profile.expRank.threshold)}\r\n                    </span>\r\n                    {` / ${profile.expRankNext.threshold - profile.expRank.threshold}`}\r\n                  </>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"exp-line\">\r\n                <div className=\"taken\" style={{ width: Math.floor(100 * expProgress) + '%' }}></div>\r\n                <div\r\n                  className=\"rest\"\r\n                  style={{ width: 100 - Math.ceil(100 * expProgress) + '%' }}\r\n                ></div>\r\n              </div>\r\n              <div className=\"exp-label\">\r\n                total: <span className=\"taken-num\">{Math.round(profile.exp)}</span>\r\n              </div>\r\n            </div>\r\n            {profile.expRankNext && (\r\n              <div className=\"rank exp-rank\">\r\n                {getRankImg(profile.expRankNext)}\r\n                {profile.expRankNext && <div>{profile.expRankNext.threshold}</div>}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              {!isLevelGraphCombined ? (\r\n                <>\r\n                  <div className=\"profile-section-2\">\r\n                    <div className=\"profile-sm-section-header flex\">\r\n                      <span>уровни</span>\r\n                      <div className=\"toggle-holder\">\r\n                        <Toggle\r\n                          className=\"combine-toggle\"\r\n                          checked={isLevelGraphCombined}\r\n                          onChange={() =>\r\n                            this.setState(state => ({\r\n                              isLevelGraphCombined: !state.isLevelGraphCombined,\r\n                            }))\r\n                          }\r\n                        >\r\n                          объединить графики\r\n                        </Toggle>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"chart-container\">{this.renderLevels()}</div>\r\n                  </div>\r\n                  <div className=\"profile-section-2\">\r\n                    <div className=\"profile-sm-section-header\">\r\n                      <span>оценки</span>\r\n                    </div>\r\n                    <div className=\"chart-container\">{this.renderGrades()}</div>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div className=\"profile-section-2\">\r\n                  <div className=\"profile-sm-section-header flex\">\r\n                    <span>оценки</span>\r\n                    <div className=\"toggle-holder\">\r\n                      <Toggle\r\n                        className=\"combine-toggle\"\r\n                        checked={isLevelGraphCombined}\r\n                        onChange={() =>\r\n                          this.setState(state => ({\r\n                            isLevelGraphCombined: !state.isLevelGraphCombined,\r\n                          }))\r\n                        }\r\n                      >\r\n                        объединить графики\r\n                      </Toggle>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"chart-container single-double-labels\">\r\n                    {this.renderGradesWithLevels()}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>эло</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderRankingHistory()}</div>\r\n              </div>\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>место в топе</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderPlaceHistory()}</div>\r\n              </div>\r\n            </div>\r\n            {(() => {\r\n              const currentRange = filter.dayRange || profile.filterRange;\r\n              const dateL = moment(currentRange[0] * 1000 * 60 * 60 * 24).format('L');\r\n              const dateR = moment(currentRange[1] * 1000 * 60 * 60 * 24).format('L');\r\n              const l1 = Math.max(currentRange[0] - 1, profile.minMaxRange[0]);\r\n              const l2 = Math.min(currentRange[0] + 1, currentRange[1]);\r\n              const r1 = Math.max(currentRange[1] - 1, currentRange[0]);\r\n              const r2 = Math.min(currentRange[1] + 1, profile.minMaxRange[1]);\r\n              return (\r\n                <div className=\"range-container\">\r\n                  <Range\r\n                    range={currentRange}\r\n                    min={profile.minMaxRange[0]}\r\n                    max={profile.minMaxRange[1]}\r\n                    onChange={this.onChangeDayRange}\r\n                  />\r\n                  <div className=\"range-controls _flex-row\">\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l1, currentRange[1]])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateL}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l2, currentRange[1]])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                    <div className=\"_flex-fill\"></div>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r1])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateR}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r2])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })()}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section progress-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>достижения по уровням</span>\r\n          </div>\r\n          <div className=\"progress-blocks-single-double\">\r\n            <div className=\"progress-block\">\r\n              <div className=\"achievements-grades single\">\r\n                {this.renderGradeBlock('single', 'A')}\r\n                {this.renderGradeBlock('single', 'A+')}\r\n                {this.renderGradeBlock('single', 'S')}\r\n                {this.renderGradeBlock('single', 'SS')}\r\n              </div>\r\n            </div>\r\n            <div className=\"progress-block\">\r\n              <div className=\"achievements-grades double\">\r\n                {this.renderGradeBlock('double', 'A')}\r\n                {this.renderGradeBlock('double', 'A+')}\r\n                {this.renderGradeBlock('double', 'S')}\r\n                {this.renderGradeBlock('double', 'SS')}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"bonus-faq\">\r\n            * для получения ачивки нужно сыграть около 10% всех чартов данного левела на нужный\r\n            грейд\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>достижения</span>\r\n          </div>\r\n          <div className=\"achievements\">\r\n            {_.keys(profile.achievements).map(achName =>\r\n              this.renderAchievement(achName, profile.achievements[achName])\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>часто играемые чарты</span>\r\n          </div>\r\n          <MostPlayed playerId={profile.id} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, profile, error } = this.props;\r\n    DEBUG && console.log('profile:', profile);\r\n    return (\r\n      <div className=\"profile-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"btn btn-sm btn-dark btn-icon\"\r\n              onClick={this.onRefresh}\r\n            >\r\n              <FaSearch /> обновить\r\n            </button>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!isLoading && _.isEmpty(profile) && <div className=\"profile\">Profile not found</div>}\r\n          {!isLoading && !_.isEmpty(profile) && this.renderProfile()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Profile));\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as RechartsTooltip,\r\n  ReferenceLine,\r\n  CartesianGrid,\r\n  Line,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\nimport _ from 'lodash/fp';\r\nimport memoize from 'lru-memoize';\r\n\r\n// styles\r\nimport './profile-compare.scss';\r\n\r\n// constants\r\nimport { DEBUG } from 'constants/env';\r\n\r\n// components\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Range from 'components/Shared/Range';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\nimport { setProfilesFilter, resetProfilesFilter } from 'reducers/profiles';\r\n\r\n// utils\r\nimport { profileSelectorCreator } from 'utils/profiles';\r\nimport { parseDate } from 'utils/date';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\n\r\n// code\r\nconst BARS_MODES = {\r\n  SINGLE_TWO: 'SINGLE_TWO',\r\n  SINGLE_FIVE: 'SINGLE_FIVE',\r\n  DOUBLE_TWO: 'DOUBLE_TWO',\r\n  DOUBLE_FIVE: 'DOUBLE_FIVE',\r\n  BOTH_TWO: 'BOTH_TWO',\r\n  BOTH_FIVE: 'BOTH_FIVE',\r\n};\r\nconst getCompareBars = mode => {\r\n  switch (mode) {\r\n    case BARS_MODES.SINGLE_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"single.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"single.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.SINGLE_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"single.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar\r\n          key=\"2\"\r\n          dataKey=\"single.p2notPlayed\"\r\n          fill=\"#899db3\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"3\"\r\n          dataKey=\"single.notPlayed\"\r\n          fill=\"#70707060\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"4\"\r\n          dataKey=\"single.p1notPlayed\"\r\n          fill=\"#bfa988\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar key=\"5\" dataKey=\"single.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    case BARS_MODES.DOUBLE_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"double.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"double.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.DOUBLE_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"double.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar\r\n          key=\"2\"\r\n          dataKey=\"double.p2notPlayed\"\r\n          fill=\"#899db3\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"3\"\r\n          dataKey=\"double.notPlayed\"\r\n          fill=\"#70707060\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"4\"\r\n          dataKey=\"double.p1notPlayed\"\r\n          fill=\"#bfa988\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar key=\"5\" dataKey=\"double.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    case BARS_MODES.BOTH_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"all.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"all.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.BOTH_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"all.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"2\" dataKey=\"all.p2notPlayed\" fill=\"#899db3\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"3\" dataKey=\"all.notPlayed\" fill=\"#70707060\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"4\" dataKey=\"all.p1notPlayed\" fill=\"#bfa988\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"5\" dataKey=\"all.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst MIN_GRAPH_HEIGHT = undefined;\r\n\r\nconst profile1Selector = profileSelectorCreator('id');\r\nconst profile2Selector = profileSelectorCreator('compareToId');\r\n\r\nconst getCombinedData = memoize()((p1, p2, tracklist) => {\r\n  if (!p1 || !p2) {\r\n    return {};\r\n  }\r\n  let rc1 = p1.ratingChanges[0].rating;\r\n  let rc2 = p2.ratingChanges[0].rating;\r\n  const allRC = _.flow(\r\n    _.sortBy('date'),\r\n    _.map(item => {\r\n      if (item.rating) {\r\n        rc1 = item.rating;\r\n      }\r\n      if (item.rating2) {\r\n        rc2 = item.rating2;\r\n      }\r\n      return {\r\n        rating1: rc1,\r\n        rating2: rc2,\r\n        date: item.date,\r\n      };\r\n    }),\r\n    _.sortedUniqBy('date')\r\n  )([...p1.ratingChanges, ...p2.ratingChanges.map(it => ({ date: it.date, rating2: it.rating }))]);\r\n\r\n  rc1 = p1.placesChanges[0].place;\r\n  rc2 = p2.placesChanges[0].place;\r\n  const allPC = _.flow(\r\n    _.sortBy('date'),\r\n    _.map(item => {\r\n      if (item.place) {\r\n        rc1 = item.place;\r\n      }\r\n      if (item.place2) {\r\n        rc2 = item.place2;\r\n      }\r\n      return {\r\n        place1: rc1,\r\n        place2: rc2,\r\n        date: item.date,\r\n      };\r\n    })\r\n  )([...p1.placesChanges, ...p2.placesChanges.map(it => ({ date: it.date, place2: it.place }))]);\r\n\r\n  const perLevelComparison = _.fromPairs(Array.from({ length: 28 }).map((x, i) => [i + 1, {}]));\r\n  _.keys(perLevelComparison).forEach(level => {\r\n    const charts = _.flow(\r\n      _.map('chart'),\r\n      _.uniqBy('sharedChartId')\r\n    )([...p1.resultsByLevel[level], ...p2.resultsByLevel[level]]);\r\n    const data = {\r\n      x: level,\r\n      all: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        twoBars: {},\r\n      },\r\n      double: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        twoBars: {},\r\n      },\r\n      single: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        twoBars: {},\r\n      },\r\n    };\r\n    charts.forEach(chart => {\r\n      const p1index = chart.results.findIndex(r => r.playerId === p1.id);\r\n      const p2index = chart.results.findIndex(r => r.playerId === p2.id);\r\n      const perType = chart.chartType.startsWith('D') ? data.double : data.single;\r\n      if (p1index < 0 && p2index < 0) {\r\n        console.log('wtf?');\r\n      } else if (p1index < 0) {\r\n        data.all.p1notPlayed++;\r\n        perType.p1notPlayed++;\r\n      } else if (p2index < 0) {\r\n        data.all.p2notPlayed++;\r\n        perType.p2notPlayed++;\r\n      } else if (p1index < p2index) {\r\n        data.all.p1win++;\r\n        perType.p1win++;\r\n      } else if (p2index < p1index) {\r\n        data.all.p2win++;\r\n        perType.p2win++;\r\n      }\r\n    });\r\n\r\n    const normalizeTwo = dataObj => {\r\n      const totalPlayed = dataObj.p1win + dataObj.p2win || 1; // in case of divide by 0\r\n      dataObj.twoBars.p1win = dataObj.p1win / totalPlayed;\r\n      dataObj.twoBars.p2win = dataObj.p2win / totalPlayed;\r\n    };\r\n    normalizeTwo(data.all);\r\n    normalizeTwo(data.single);\r\n    normalizeTwo(data.double);\r\n\r\n    const normalizeFive = (dataObj, total) => {\r\n      dataObj.p1win = dataObj.p1win / total;\r\n      dataObj.p1notPlayed = dataObj.p1notPlayed / total;\r\n      dataObj.p2win = dataObj.p2win / total;\r\n      dataObj.p2notPlayed = dataObj.p2notPlayed / total;\r\n      dataObj.notPlayed =\r\n        1 - dataObj.p1win - dataObj.p1notPlayed - dataObj.p2win - dataObj.p2notPlayed;\r\n    };\r\n    normalizeFive(data.all, tracklist.chartLevels[level]);\r\n    normalizeFive(data.double, tracklist.doublesLevels[level]);\r\n    normalizeFive(data.single, tracklist.singlesLevels[level]);\r\n\r\n    perLevelComparison[level] = data;\r\n  });\r\n\r\n  return {\r\n    ratingChanges: allRC,\r\n    placesChanges: allPC,\r\n    perLevelComparison: _.values(perLevelComparison),\r\n  };\r\n});\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const profile1 = profile1Selector(state, props);\r\n  const profile2 = profile2Selector(state, props);\r\n  return {\r\n    profile: profile1,\r\n    profile2,\r\n    combinedData: getCombinedData(profile1, profile2, state.tracklist.data),\r\n    tracklist: state.tracklist.data,\r\n    filter: state.profiles.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading:\r\n      state.results.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setProfilesFilter,\r\n  resetProfilesFilter,\r\n};\r\n\r\nclass ProfileCompare extends Component {\r\n  static propTypes = {\r\n    profile: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    profile: {},\r\n    profile2: {},\r\n    combinedData: {},\r\n  };\r\n\r\n  state = {\r\n    isLevelGraphCombined: true,\r\n    compareBarsMode: BARS_MODES.BOTH_TWO,\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onChangeDayRange = range => {\r\n    const { filter } = this.props;\r\n    this.props.setProfilesFilter({\r\n      ...filter,\r\n      dayRange: range,\r\n    });\r\n  };\r\n\r\n  rhMargin = { top: 5, bottom: 5, right: 5, left: 0 };\r\n  rhXDomain = ['dataMin', 'dataMax'];\r\n  rhYDomain = ['dataMin - 100', 'dataMax + 100'];\r\n  rhXTickFormatter = value => parseDate(value).toLocaleDateString();\r\n  rhTooltip = ({ active, payload, label }) => {\r\n    const { profile, profile2 } = this.props;\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n    if (!payload || !payload[0]) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"history-tooltip\">\r\n        <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n        {payload[1] && (\r\n          <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n            {p1Name}: {Math.round(payload[1].value)}\r\n          </div>\r\n        )}\r\n        {payload[0] && (\r\n          <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n            {p2Name}: {Math.round(payload[0].value)}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderRankingHistory() {\r\n    const { combinedData } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={combinedData.ratingChanges} margin={this.rhMargin}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={this.rhXDomain}\r\n            tickFormatter={this.rhXTickFormatter}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={this.rhYDomain}\r\n            tickFormatter={Math.round}\r\n            width={40}\r\n          />\r\n          <ReferenceLine y={1000} stroke=\"white\" />\r\n          <RechartsTooltip isAnimationActive={false} content={this.rhTooltip} />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating2\"\r\n            stroke=\"#ffd388\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating1\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderPlaceHistory() {\r\n    const { combinedData, profile, profile2 } = this.props;\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart\r\n          data={combinedData.placesChanges}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={value => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={[1, dataMax => (dataMax < 3 ? dataMax + 2 : dataMax + 1)]}\r\n            interval={0}\r\n            reversed\r\n            width={40}\r\n          />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload[1] && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n                      {p1Name}: #{payload[1].value}\r\n                    </div>\r\n                  )}\r\n                  {payload[0] && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n                      {p2Name}: #{payload[0].value}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place2\"\r\n            stroke=\"#ffd388\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place1\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  plcMargin = { top: 5, bottom: 5, right: 5, left: 0 };\r\n  plcTooltip = ({ active, payload, label }) => {\r\n    const { profile, profile2 } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n    const isTwo = [BARS_MODES.SINGLE_TWO, BARS_MODES.DOUBLE_TWO, BARS_MODES.BOTH_TWO].includes(\r\n      compareBarsMode\r\n    );\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n\r\n    if (!payload || !payload[0]) {\r\n      return null;\r\n    }\r\n    const renderLegendItem = (item, label) => (\r\n      <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n        {label}: {Math.round(_.get(item.dataKey, item.payload) * 100)}%\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"history-tooltip\">\r\n        <div>Level: {payload[0].payload.x}</div>\r\n        {renderLegendItem(payload[0], `${p1Name} wins`)}\r\n        {!isTwo && renderLegendItem(payload[1], `${p2Name} has no score`)}\r\n        {!isTwo && renderLegendItem(payload[2], `Both have no score`)}\r\n        {!isTwo && renderLegendItem(payload[3], `${p1Name} has no score`)}\r\n        {renderLegendItem(isTwo ? payload[1] : payload[4], `${p2Name} wins`)}\r\n      </div>\r\n    );\r\n  };\r\n  plcXDomain = [0, 1];\r\n  plcXTicks = [0, 0.5, 1];\r\n  plcXFormatter = x => `${Math.round(x * 100)}%`;\r\n\r\n  renderPerLevelComparison() {\r\n    const { combinedData } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" aspect={0.7}>\r\n        <BarChart\r\n          layout=\"vertical\"\r\n          data={[...combinedData.perLevelComparison]}\r\n          margin={this.plcMargin}\r\n        >\r\n          <RechartsTooltip isAnimationActive={false} content={this.plcTooltip} />\r\n          <YAxis reversed dataKey=\"x\" type=\"category\" width={23} />\r\n          <XAxis\r\n            type=\"number\"\r\n            domain={this.plcXDomain}\r\n            ticks={this.plcXTicks}\r\n            tickFormatter={this.plcXFormatter}\r\n          />\r\n          <ReferenceLine x={0.5} stroke=\"#666\" />\r\n          {getCompareBars(compareBarsMode)}\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderProfile() {\r\n    const { profile, profile2, filter } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"profile-header\">\r\n          <div className=\"profile-name text-with-header blue\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile.lastResultDate ? getTimeAgo(profile.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-header right-align\">\r\n          <div className=\"profile-name text-with-header orange\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile2.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile2.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile2.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile2.lastResultDate ? getTimeAgo(profile2.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header flex\">\r\n                  <span>победы по уровням</span>\r\n                </div>\r\n                <div className=\"profile-sm-section-header flex\">\r\n                  {(() => {\r\n                    const isTwo = [\r\n                      BARS_MODES.SINGLE_TWO,\r\n                      BARS_MODES.DOUBLE_TWO,\r\n                      BARS_MODES.BOTH_TWO,\r\n                    ].includes(compareBarsMode);\r\n                    return (\r\n                      <div className=\"toggle-holder\">\r\n                        <Toggle\r\n                          className=\"combine-toggle\"\r\n                          checked={!isTwo}\r\n                          onChange={() =>\r\n                            this.setState(state => ({\r\n                              compareBarsMode: {\r\n                                [BARS_MODES.SINGLE_TWO]: BARS_MODES.SINGLE_FIVE,\r\n                                [BARS_MODES.DOUBLE_TWO]: BARS_MODES.DOUBLE_FIVE,\r\n                                [BARS_MODES.BOTH_TWO]: BARS_MODES.BOTH_FIVE,\r\n                                [BARS_MODES.SINGLE_FIVE]: BARS_MODES.SINGLE_TWO,\r\n                                [BARS_MODES.DOUBLE_FIVE]: BARS_MODES.DOUBLE_TWO,\r\n                                [BARS_MODES.BOTH_FIVE]: BARS_MODES.BOTH_TWO,\r\n                              }[state.compareBarsMode],\r\n                            }))\r\n                          }\r\n                        >\r\n                          подробно\r\n                        </Toggle>\r\n                        <div className=\"tabs-holder\">\r\n                          <ToggleButton\r\n                            text=\"все\"\r\n                            active={[BARS_MODES.BOTH_TWO, BARS_MODES.BOTH_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={() => {\r\n                              this.setState(state => ({\r\n                                compareBarsMode: isTwo ? BARS_MODES.BOTH_TWO : BARS_MODES.BOTH_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                          <ToggleButton\r\n                            text=\"синглы\"\r\n                            active={[BARS_MODES.SINGLE_TWO, BARS_MODES.SINGLE_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={active => {\r\n                              this.setState(state => ({\r\n                                compareBarsMode: isTwo\r\n                                  ? BARS_MODES.SINGLE_TWO\r\n                                  : BARS_MODES.SINGLE_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                          <ToggleButton\r\n                            text=\"даблы\"\r\n                            active={[BARS_MODES.DOUBLE_TWO, BARS_MODES.DOUBLE_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={active => {\r\n                              this.setState(state => ({\r\n                                compareBarsMode: isTwo\r\n                                  ? BARS_MODES.DOUBLE_TWO\r\n                                  : BARS_MODES.DOUBLE_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })()}\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderPerLevelComparison()}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>эло</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderRankingHistory()}</div>\r\n              </div>\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>место в топе</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderPlaceHistory()}</div>\r\n              </div>\r\n            </div>\r\n            {(() => {\r\n              const currentRange = filter.dayRange || profile.filterRange;\r\n              const dateL = moment(currentRange[0] * 1000 * 60 * 60 * 24).format('L');\r\n              const dateR = moment(currentRange[1] * 1000 * 60 * 60 * 24).format('L');\r\n              const l1 = Math.max(currentRange[0] - 1, profile.minMaxRange[0]);\r\n              const l2 = Math.min(currentRange[0] + 1, currentRange[1]);\r\n              const r1 = Math.max(currentRange[1] - 1, currentRange[0]);\r\n              const r2 = Math.min(currentRange[1] + 1, profile.minMaxRange[1]);\r\n              return (\r\n                <div className=\"range-container\">\r\n                  <Range\r\n                    range={currentRange}\r\n                    min={profile.minMaxRange[0]}\r\n                    max={profile.minMaxRange[1]}\r\n                    onChange={this.onChangeDayRange}\r\n                  />\r\n                  <div className=\"range-controls _flex-row\">\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l1, currentRange[1]])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateL}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l2, currentRange[1]])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                    <div className=\"_flex-fill\"></div>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r1])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateR}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r2])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, profile, error } = this.props;\r\n    DEBUG && console.log('profile:', profile);\r\n    return (\r\n      <div className=\"profile-compare-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"btn btn-sm btn-dark btn-icon\"\r\n              onClick={this.onRefresh}\r\n            >\r\n              <FaSearch /> обновить\r\n            </button>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!isLoading && _.isEmpty(profile) && <div className=\"profile\">Profile not found</div>}\r\n          {!isLoading && !_.isEmpty(profile) && this.renderProfile()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProfileCompare));\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\nimport { RESET } from './resetAction';\r\n\r\nconst LOADING = `USER/LOADING`;\r\nconst SUCCESS = `USER/SUCCESS`;\r\nconst ERROR = `USER/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        data: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: null,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    case RESET:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchUser = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/profile` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport { resetUser } from './resetAction';\r\n","import cookies from 'browser-cookies';\r\n\r\nimport { postJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport { fetchUser, resetUser } from 'reducers/user';\r\n\r\nconst LOADING = `LOGIN/LOADING`;\r\nconst SUCCESS = `LOGIN/SUCCESS`;\r\nconst ERROR = `LOGIN/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n  error: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        data: null,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: null,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const login = googleResponse => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        postJson({\r\n          url: `${HOST}/login/google`,\r\n          body: { token: googleResponse.tokenId },\r\n        })\r\n      );\r\n      cookies.set('session', data.session, { expires: 30 });\r\n      dispatch({ type: SUCCESS, data });\r\n      dispatch(fetchUser());\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    dispatch(resetUser());\r\n    try {\r\n      const data = await dispatch(\r\n        postJson({\r\n          url: `${HOST}/logout`,\r\n        })\r\n      );\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './top-bar.scss';\r\n\r\n// routes\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport * as loginACs from 'reducers/login';\r\n\r\n// redux\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoadingLogin: state.login.isLoading,\r\n    isLoadingUser: state.user.isLoading,\r\n    user: state.user.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login: loginACs.login,\r\n  logout: loginACs.logout,\r\n};\r\n\r\nfunction TopBar({ isLoadingLogin, isLoadingUser, user, login, logout }) {\r\n  return (\r\n    <header className=\"top-bar\">\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <NavLink exact to={routes.leaderboard.path}>\r\n              leaderboard\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact to={routes.ranking.path}>\r\n              ranking\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact to={routes.songs.path}>\r\n              songs\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div className=\"_flex-fill\" />\r\n      <div className=\"login-container\">\r\n        <NavLink\r\n          className=\"player-info\"\r\n          exact\r\n          to={routes.profile.getPath({ id: _.get('player.id', user) })}\r\n        >\r\n          {_.getOr('', 'player.nickname', user)}\r\n        </NavLink>\r\n        <button\r\n          className=\"btn btn-dark btn-icon btn-sm\"\r\n          onClick={logout}\r\n          disabled={isLoadingLogin || isLoadingUser}\r\n        >\r\n          <span> logout</span>\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TopBar);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { FaGoogle } from 'react-icons/fa';\r\nimport Emoji from 'react-emoji-render';\r\n\r\nimport './login-screen.scss';\r\n\r\n// reducers\r\nimport * as loginACs from 'reducers/login';\r\n\r\n// redux\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoading: state.login.isLoading,\r\n    error: state.login.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login: loginACs.login,\r\n};\r\n\r\nfunction LoginScreen({ isLoading, error, login }) {\r\n  const [isClown, setClown] = useState(false);\r\n  const onGoogleResponse = res => {\r\n    if (res.error) {\r\n      console.log('Google login response error:', res);\r\n    } else {\r\n      login(res);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <div className=\"site-name\">pumpking</div>\r\n      <div className=\"login-button\">\r\n        <GoogleLogin\r\n          clientId=\"197132042723-cmibep21qf6dald9l2l01rif7l5dtd4s.apps.googleusercontent.com\"\r\n          buttonText=\"Login\"\r\n          onSuccess={onGoogleResponse}\r\n          onFailure={onGoogleResponse}\r\n          cookiePolicy={'single_host_origin'}\r\n          render={({ onClick, disabled }) => (\r\n            <button\r\n              className=\"btn btn-dark btn-icon btn-sm\"\r\n              onClick={onClick}\r\n              disabled={disabled || isLoading}\r\n            >\r\n              <FaGoogle />\r\n              <span> login</span>\r\n            </button>\r\n          )}\r\n        />\r\n      </div>\r\n      {error && <div className=\"error\">{error.message}</div>}\r\n      <div className=\"footer\">\r\n        By logging in, you agree to our{' '}\r\n        {isClown ? (\r\n          <Emoji text=\"🤡\" className=\"clown\" />\r\n        ) : (\r\n          <span onClick={() => setClown(true)} className=\"link-style\">\r\n            Privacy Policy\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginScreen);\r\n","import { useState, useEffect } from 'react';\r\nimport _ from 'lodash/fp';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport moment from 'moment';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\nconst timeStyle = {\r\n  flavour: 'long',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nexport const getTimeAgo = date => {\r\n  const dayDiff = moment()\r\n    .startOf('day')\r\n    .diff(moment(date).startOf('day'), 'days');\r\n  return dayDiff === 0 ? 'сегодня' : dayDiff === 1 ? 'вчера' : timeAgo.format(date, timeStyle);\r\n};\r\n\r\nexport const preprocessData = data => ({\r\n  ...data,\r\n  results: _.flow(\r\n    _.get('results'),\r\n    _.toPairs,\r\n    _.map(([chartId, item]) => {\r\n      const fullRes = _.find(\r\n        r => _.every(_.isNumber, [r.perfects, r.greats, r.goods, r.bads, r.misses]),\r\n        item.results\r\n      );\r\n      const stepSum =\r\n        fullRes &&\r\n        [fullRes.perfects, fullRes.greats, fullRes.goods, fullRes.bads, fullRes.misses].reduce(\r\n          (sum, n) => sum + n,\r\n          0\r\n        );\r\n\r\n      const [chartType, chartLevel] = item.chart_label.match(/(\\D+)|(\\d+)/g);\r\n\r\n      return {\r\n        song: item.track,\r\n        sharedChartId: _.toNumber(chartId),\r\n        chartLabel: item.chart_label,\r\n        chartLevel,\r\n        chartType,\r\n        mix: item.mix,\r\n        duration: item.duration,\r\n        results: item.results.map((res, index) => {\r\n          let resultInfoOverrides = {};\r\n          if (stepSum) {\r\n            const infos = [res.perfects, res.greats, res.goods, res.bads, res.misses];\r\n            let fixableIndex = -1;\r\n            let localStepSum = 0;\r\n            const canFix =\r\n              infos.filter((numb, index) => {\r\n                if (!_.isNumber(numb)) {\r\n                  fixableIndex = index;\r\n                  return true;\r\n                }\r\n                localStepSum += numb;\r\n                return false;\r\n              }).length === 1;\r\n            if (canFix) {\r\n              resultInfoOverrides[['perfect', 'great', 'good', 'bad', 'miss'][fixableIndex]] =\r\n                stepSum - localStepSum;\r\n            }\r\n          }\r\n          return {\r\n            id: res.id,\r\n            playerId: res.player,\r\n            nickname: data.players[res.player].nickname,\r\n            nicknameArcade: data.players[res.player].arcade_name,\r\n            originalChartMix: res.originalChartMix,\r\n            originalChartLabel: res.originalChartLabel,\r\n            originalScore: res.originalScore,\r\n            date: res.gained,\r\n            dateObject: new Date(res.gained),\r\n            grade: res.grade,\r\n            isExactDate: !!res.exact_gain_date,\r\n            score: res.score,\r\n            scoreIncrease: res.score_increase,\r\n            calories: res.calories && res.calories / 1000,\r\n            perfect: res.perfects,\r\n            great: res.greats,\r\n            good: res.goods,\r\n            bad: res.bads,\r\n            miss: res.misses,\r\n            combo: res.max_combo,\r\n            mods: res.mods_list,\r\n            isRank: !!res.rank_mode,\r\n            isHJ: (res.mods_list || '').split(' ').includes('HJ'),\r\n            ...resultInfoOverrides,\r\n          };\r\n        }),\r\n      };\r\n    }),\r\n    _.map(song => {\r\n      return {\r\n        ...song,\r\n        latestScoreDate: song.results.reduce(\r\n          (latest, current) => (current.date > latest ? current.date : latest),\r\n          song.results[0].date\r\n        ),\r\n        results: song.results.map(res => {\r\n          const perfects = (Math.sqrt(res.perfect) * _.toInteger(song.chartLevel)) / 2;\r\n          const acc = perfects\r\n            ? Math.floor(\r\n                ((perfects * 100 + res.great * 60 + res.good * 30 + res.miss * -20) /\r\n                  (perfects + res.great + res.good + res.bad + res.miss)) *\r\n                  100\r\n              ) / 100\r\n            : null;\r\n          const accRaw = res.perfect\r\n            ? Math.floor(\r\n                ((res.perfect * 100 + res.great * 60 + res.good * 30 + res.miss * -20) /\r\n                  (res.perfect + res.great + res.good + res.bad + res.miss)) *\r\n                  100\r\n              ) / 100\r\n            : null;\r\n          return {\r\n            ...res,\r\n            accuracy: acc < 0 ? 0 : accRaw === 100 ? 100 : acc && +acc.toFixed(2),\r\n            accuracyRaw: accRaw,\r\n            hasRankScore: _.some({ playerId: res.playerId, isRank: true }, song.results),\r\n          };\r\n        }),\r\n      };\r\n    }),\r\n    _.orderBy(['latestScoreDate', 'song', 'chartLevel'], ['desc', 'asc', 'desc'])\r\n  )(data),\r\n});\r\n\r\nexport const useTracked = (data, onChange) => {\r\n  const [prevData, setPrevData] = useState(data);\r\n  const [currData, setCurrData] = useState(data);\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(data) && data !== currData) {\r\n      setPrevData(currData);\r\n      setCurrData(data);\r\n      onChange(data, currData);\r\n    }\r\n  }, [data, onChange, currData, prevData]);\r\n\r\n  return [currData, prevData];\r\n};\r\n","import { fetchJson } from 'utils/fetch';\r\nimport queryString from 'query-string';\r\nimport _ from 'lodash/fp';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport { preprocessData } from 'components/SocketTracker/helpers';\r\n\r\nconst LOADING = `TOP_PER_SONG/LOADING`;\r\nconst SUCCESS = `TOP_PER_SONG/SUCCESS`;\r\nconst ERROR = `TOP_PER_SONG/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n  error: null,\r\n  fetchingParams: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        fetchingParams: action.fetchingParams,\r\n        data: null,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return action.fetchingParams === state.fetchingParams\r\n        ? {\r\n            ...state,\r\n            isLoading: false,\r\n            error: action.error,\r\n            data: null,\r\n            fetchingParams: null,\r\n          }\r\n        : state;\r\n    case SUCCESS:\r\n      return action.fetchingParams === state.fetchingParams\r\n        ? {\r\n            ...state,\r\n            isLoading: false,\r\n            data: action.data,\r\n            fetchingParams: null,\r\n          }\r\n        : state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTopPerSong = (songName, leftLabel, rightLabel) => {\r\n  const fetchingParams = queryString.stringify({\r\n    song_name: songName,\r\n    charts: _.compact(_.uniq([leftLabel, rightLabel])).join(','),\r\n  });\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING, fetchingParams });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/topPerSong?${fetchingParams}` }));\r\n      const processedData = _.flow(preprocessData, _.get('results'))(data);\r\n      dispatch({ type: SUCCESS, data: processedData, fetchingParams });\r\n      return processedData;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error, fetchingParams });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TRACKLIST/LOADING`;\r\nconst SUCCESS = `TRACKLIST/SUCCESS`;\r\nconst ERROR = `TRACKLIST/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTracklist = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/tracklist/stats/XX` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React, { useEffect, useState, useRef, useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport numeral from 'numeral';\r\nimport _ from 'lodash/fp';\r\nimport { FaAngleDoubleUp } from 'react-icons/fa';\r\nimport lev from 'fast-levenshtein';\r\n\r\nimport './socket.scss';\r\n\r\nimport { SOCKET_SERVER_IP } from 'constants/backend';\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nimport { fetchResults, appendNewResults } from 'reducers/results';\r\nimport { fetchTopPerSong } from 'reducers/topPerSong';\r\nimport { fetchTracklist } from 'reducers/tracklist';\r\n\r\nimport { getRankImg } from 'utils/exp';\r\nimport { getTimeAgo } from './helpers';\r\n\r\n// code\r\nconst STATE_RESET_TIMEOUT = 10 * 60 * 1000; // 5 minutes\r\n\r\n// redux\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.topPerSong.isLoading,\r\n    songTopData: state.topPerSong.data,\r\n    error: state.topPerSong.error,\r\n    profiles: state.results.profiles,\r\n    resultInfo: state.results.resultInfo,\r\n    sharedCharts: state.results.sharedCharts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  fetchTopPerSong,\r\n  fetchTracklist,\r\n  appendNewResults,\r\n};\r\n\r\n// component\r\nconst renderChartLabel = (type, level) => {\r\n  return (\r\n    <div\r\n      className={classNames('chart-name', {\r\n        single: type === 'S',\r\n        singlep: type === 'SP',\r\n        doublep: type === 'DP',\r\n        double: type === 'D',\r\n        coop: type === 'COOP',\r\n      })}\r\n    >\r\n      <span className=\"chart-letter\">{type}</span>\r\n      <span className=\"chart-number\">{level}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction TrackerApp({\r\n  isLoading,\r\n  fetchResults,\r\n  fetchTracklist,\r\n  fetchTopPerSong,\r\n  appendNewResults,\r\n  songTopData,\r\n  error,\r\n  profiles,\r\n  resultInfo = {},\r\n  sharedCharts = {},\r\n}) {\r\n  const [message, setMessage] = useState('');\r\n  const [socketErrorMessage, setSocketErrorMessage] = useState('');\r\n  const [isSocketReady, setSocketReady] = useState(false);\r\n  const [isAlive, setAlive] = useState(false);\r\n  const [leftLabel, setLeftLabel] = useState(null);\r\n  const [rightLabel, setRightLabel] = useState(null);\r\n  const [leftPlayer, setLeftPlayer] = useState(null);\r\n  const [rightPlayer, setRightPlayer] = useState(null);\r\n  const [recognizedSongName, setRecognizedSongName] = useState('');\r\n\r\n  const socketRef = useRef(null);\r\n  const timeoutResetTokenRef = useRef(null);\r\n\r\n  const leftChart = _.find({ chartLabel: leftLabel }, songTopData);\r\n  const rightChart = _.find({ chartLabel: rightLabel }, songTopData);\r\n  const chartsToShow = _.uniq(_.compact([leftChart, rightChart]));\r\n\r\n  const topPlayersList = _.flow(_.values, _.orderBy('ratingRaw', 'desc'), (items) =>\r\n    items.map((it, index) => ({ place: index + 1, ...it }))\r\n  )(profiles);\r\n\r\n  let leftProfile = {};\r\n  let rightProfile = {};\r\n\r\n  if (leftPlayer) {\r\n    leftProfile = _.minBy((p) => lev.get(p.nameArcade, leftPlayer), _.values(profiles)) || {};\r\n  }\r\n  if (rightPlayer) {\r\n    rightProfile = _.minBy((p) => lev.get(p.nameArcade, rightPlayer), _.values(profiles)) || {};\r\n  }\r\n\r\n  const [leftData, setLeftData] = useState({ name: leftProfile.name, ratingRaw: null, exp: null });\r\n  const [rightData, setRightData] = useState({\r\n    name: rightProfile.name,\r\n    ratingRaw: null,\r\n    exp: null,\r\n  });\r\n\r\n  const restartTimeout = useCallback(() => {\r\n    setAlive(true);\r\n    if (timeoutResetTokenRef.current) {\r\n      clearTimeout(timeoutResetTokenRef.current);\r\n    }\r\n    timeoutResetTokenRef.current = setTimeout(() => {\r\n      // TODO: reset page\r\n      // this.setState(defaultState);\r\n    }, STATE_RESET_TIMEOUT);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (leftProfile.ratingRaw && leftProfile.ratingRaw !== leftData.ratingRaw) {\r\n      setLeftData({\r\n        ...leftData,\r\n        ratingRaw: leftProfile.ratingRaw,\r\n        prevRatingRaw: leftData.ratingRaw,\r\n        expRank: leftProfile.expRank,\r\n        expRankNext: leftProfile.expRankNext,\r\n      });\r\n    }\r\n    if (leftProfile.exp && leftProfile.exp !== leftData.exp) {\r\n      setLeftData({\r\n        ...leftData,\r\n        exp: leftProfile.exp,\r\n        prevExp: leftData.exp,\r\n        expRank: leftProfile.expRank || leftData.expRank,\r\n        expRankNext: leftProfile.expRankNext || leftData.expRankNext,\r\n      });\r\n    }\r\n    if (rightProfile.ratingRaw && rightProfile.ratingRaw !== rightData.ratingRaw) {\r\n      setRightData({\r\n        ...rightData,\r\n        ratingRaw: rightProfile.ratingRaw,\r\n        prevRatingRaw: rightData.ratingRaw,\r\n        expRank: rightProfile.expRank,\r\n        expRankNext: rightProfile.expRankNext,\r\n      });\r\n    }\r\n    if (rightProfile.exp && rightProfile.exp !== rightData.exp) {\r\n      setRightData({\r\n        ...rightData,\r\n        exp: rightProfile.exp,\r\n        prevExp: rightData.exp,\r\n        expRank: rightProfile.expRank || rightData.expRank,\r\n        expRankNext: rightProfile.expRankNext || rightData.expRankNext,\r\n      });\r\n    }\r\n    if (leftData.name !== leftProfile.name) {\r\n      setLeftData({\r\n        ...leftData,\r\n        ratingRaw: leftProfile.ratingRaw,\r\n        prevRatingRaw: null,\r\n        exp: leftProfile.exp,\r\n        expRank: leftProfile.expRank,\r\n        expRankNext: leftProfile.expRankNext,\r\n        prevExp: null,\r\n        name: leftProfile.name,\r\n      });\r\n    }\r\n    if (rightData.name !== rightProfile.name) {\r\n      setRightData({\r\n        ...rightData,\r\n        ratingRaw: rightProfile.ratingRaw,\r\n        prevRatingRaw: null,\r\n        exp: rightProfile.exp,\r\n        expRank: rightProfile.expRank,\r\n        expRankNext: rightProfile.expRankNext,\r\n        prevExp: null,\r\n        name: rightProfile.name,\r\n      });\r\n    }\r\n    /* eslint-disable */\r\n  }, [\r\n    leftProfile.ratingRaw,\r\n    rightProfile.ratingRaw,\r\n    leftProfile.exp,\r\n    rightProfile.exp,\r\n    leftProfile.name,\r\n    rightProfile.name,\r\n    leftData,\r\n    rightData,\r\n  ]);\r\n  /* eslint-enable */\r\n\r\n  useEffect(() => {\r\n    socketRef.current = new WebSocket(SOCKET_SERVER_IP);\r\n    socketRef.current.onerror = () => {\r\n      setMessage(`Cannot connect to websocket server, please reload the page`);\r\n    };\r\n    socketRef.current.onopen = (e) => {\r\n      setSocketReady(true);\r\n    };\r\n  }, []); // eslint-disable-line\r\n\r\n  useEffect(() => {\r\n    socketRef.current.onmessage = (event) => {\r\n      restartTimeout();\r\n      try {\r\n        const data = event && event.data && JSON.parse(event.data);\r\n        console.log(data);\r\n\r\n        if (data.type === 'result_screen') {\r\n          const songName = data.data.track_name;\r\n          const leftLabel = _.get('left.chart_label', data.data);\r\n          const rightLabel = _.get('right.chart_label', data.data);\r\n          const leftPlayer = _.get('left.result.player_name', data.data);\r\n          const rightPlayer = _.get('right.result.player_name', data.data);\r\n          setLeftPlayer(leftPlayer);\r\n          setRightPlayer(rightPlayer);\r\n          setLeftLabel(leftLabel);\r\n          setRightLabel(rightLabel);\r\n          setRecognizedSongName(songName);\r\n          appendNewResults(data.data.gained); // Fetch results that we don't have here yet (to calculate elo)\r\n          fetchTopPerSong(songName, leftLabel, rightLabel);\r\n        } else if (data.type === 'chart_selected') {\r\n          setSocketErrorMessage(data.data.error || '');\r\n          if (data.data.leftPlayer || data.data.rightPlayer) {\r\n            setLeftPlayer(data.data.leftPlayer);\r\n            setRightPlayer(data.data.rightPlayer);\r\n          }\r\n          if (data.data.leftLabel || data.data.rightLabel) {\r\n            setLeftLabel(data.data.leftLabel);\r\n            setRightLabel(data.data.rightLabel);\r\n            if (data.data.text) {\r\n              // If we have full info, try to fetch if needed\r\n              const newSongName = data.data.text;\r\n              setRecognizedSongName(newSongName);\r\n              console.log('song name', newSongName, recognizedSongName);\r\n              if (recognizedSongName !== newSongName) {\r\n                fetchTopPerSong(newSongName, data.data.leftLabel, data.data.rightLabel);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.log('on message error', e);\r\n        setMessage(`Error: ${e.message}`);\r\n      }\r\n    };\r\n  }, [recognizedSongName, fetchTopPerSong, restartTimeout, appendNewResults]);\r\n\r\n  // useEffect(() => {\r\n  //   setTimeout(() => {\r\n  //     socketRef.current.onmessage({\r\n  //       data:\r\n  //         '{\"type\": \"chart_selected\", \"data\": {\"text\": \"Uranium\", \"leftLabel\": \"D17\", \"rightLabel\": \"D20\", \"leftPlayer\": \"GRUMD\", \"rightPlayer\": \"DINO\"}}',\r\n  //     });\r\n  //   }, 2000);\r\n  // }, []);\r\n\r\n  const resultsContainerRef = useRef(null);\r\n  const leftResultRef = useRef(null);\r\n  const rightResultRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (resultsContainerRef.current && leftResultRef.current) {\r\n      if (rightResultRef.current) {\r\n        // Both refs\r\n        const left = leftResultRef.current;\r\n        const right = rightResultRef.current;\r\n        const totalSize = {\r\n          w: resultsContainerRef.current.clientWidth,\r\n          h: resultsContainerRef.current.clientHeight,\r\n        };\r\n        const scaleHH = totalSize.w / (left.offsetWidth + right.offsetWidth);\r\n        const scaleHW = totalSize.h / Math.max(left.offsetHeight, right.offsetHeight);\r\n        const scaleWH = totalSize.w / Math.max(left.offsetWidth, right.offsetWidth);\r\n        const scaleWW = totalSize.h / (left.offsetHeight + right.offsetHeight);\r\n        // console.log(scaleHH, scaleHW, scaleWH, scaleWW);\r\n        if (Math.min(scaleHH, scaleHW) > Math.min(scaleWH, scaleWW)) {\r\n          resultsContainerRef.current.style.flexDirection = 'row';\r\n          resultsContainerRef.current.style.alignItems = 'center';\r\n          if (scaleHH > scaleHW) {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleHW})`;\r\n          } else {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleHH})`;\r\n          }\r\n        } else {\r\n          resultsContainerRef.current.style.flexDirection = 'column';\r\n          resultsContainerRef.current.style.alignItems = 'center';\r\n          if (scaleWH > scaleWW) {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleWW})`;\r\n          } else {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleWH})`;\r\n          }\r\n        }\r\n      } else {\r\n        // One ref\r\n        const left = leftResultRef.current;\r\n        const totalSize = {\r\n          w: resultsContainerRef.current.clientWidth,\r\n          h: resultsContainerRef.current.clientHeight,\r\n        };\r\n        const scaleW = totalSize.w / left.offsetWidth;\r\n        const scaleH = totalSize.h / left.offsetHeight;\r\n        if (scaleW < scaleH) {\r\n          resultsContainerRef.current.style.transform = `scale(${0.98 * scaleW})`;\r\n        } else {\r\n          resultsContainerRef.current.style.transform = `scale(${0.98 * scaleH})`;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  const renderPlayer = ({ player, profile, label, data, isLeft = false }) => {\r\n    const renderDeltaText = (n, prevN) => {\r\n      if (!prevN || prevN === n) {\r\n        return null;\r\n      }\r\n      const delta = n - prevN;\r\n      return (\r\n        <span className={`change ${delta >= 0 ? 'pos' : 'neg'}`}>\r\n          {delta < 0 ? delta.toFixed(1) : `+${delta.toFixed(1)}`}\r\n        </span>\r\n      );\r\n    };\r\n\r\n    const renderExpLine = () => {\r\n      if (!data.expRank || !data.exp) {\r\n        return null;\r\n      }\r\n\r\n      let takenWidth = data.expRankNext\r\n        ? (data.exp - data.expRank.threshold) /\r\n          (data.expRankNext.threshold - data.expRank.threshold)\r\n        : 1;\r\n      const emptyWidth = 1 - takenWidth;\r\n      let diffWidth = 0;\r\n\r\n      if (data.prevExp) {\r\n        takenWidth = data.expRankNext\r\n          ? (data.prevExp - data.expRank.threshold) /\r\n            (data.expRankNext.threshold - data.expRank.threshold)\r\n          : 1;\r\n        diffWidth = 1 - emptyWidth - takenWidth;\r\n      }\r\n      return (\r\n        <div className=\"exp-line\">\r\n          <div className=\"taken\" style={{ width: Math.floor(100 * takenWidth) + '%' }}></div>\r\n          <div className=\"diff\" style={{ width: Math.ceil(100 * diffWidth) + '%' }}></div>\r\n          <div className=\"rest\" style={{ width: Math.ceil(100 * emptyWidth) + '%' }}></div>\r\n        </div>\r\n      );\r\n    };\r\n\r\n    const playerIndex = _.findIndex({ id: profile.id }, topPlayersList);\r\n    const closestPlayers = topPlayersList.slice(\r\n      Math.max(0, playerIndex - 1),\r\n      Math.min(playerIndex + 2, topPlayersList.length)\r\n    );\r\n\r\n    return (\r\n      <div className={`player-container ${isLeft ? 'left' : 'right'}`}>\r\n        {player && (\r\n          <>\r\n            <div className=\"title-header\">player {isLeft ? 1 : 2}:</div>\r\n            <div className=\"name-with-label\">\r\n              <div className=\"name\">{profile.name || player}</div>\r\n              <div className=\"chart-label\">\r\n                {label && renderChartLabel(...label.match(/(\\D+)|(\\d+)/g))}\r\n              </div>\r\n            </div>\r\n            {data.exp && data.expRank && (\r\n              <div className=\"exp exp-rank\">\r\n                {getRankImg(data.expRank)}\r\n                {renderExpLine()}\r\n              </div>\r\n            )}\r\n            {data.exp && (\r\n              <div className=\"exp-text\">\r\n                <span className=\"_grey-text\">exp:</span> {Math.round(data.exp)}{' '}\r\n                {renderDeltaText(data.exp, data.prevExp)}\r\n              </div>\r\n            )}\r\n            {data.ratingRaw && (\r\n              <div className=\"rating\">\r\n                <span className=\"_grey-text\">pp:</span> {Math.round(data.ratingRaw)}{' '}\r\n                {renderDeltaText(data.ratingRaw, data.prevRatingRaw)}\r\n              </div>\r\n            )}\r\n            <div className=\"closest-players\">\r\n              {_.map((pl) => {\r\n                return (\r\n                  <div className={`closest-player ${profile.id === pl.id ? 'current-player' : ''}`}>\r\n                    <div className=\"place\">#{pl.place}</div>\r\n                    <div className=\"name\">{pl.name}</div>\r\n                    <div className=\"elo\">{pl.rating}</div>\r\n                  </div>\r\n                );\r\n              }, closestPlayers)}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"tracker-container\">\r\n      <div className=\"sidebar\">\r\n        {renderPlayer({\r\n          player: leftPlayer,\r\n          profile: leftProfile,\r\n          label: leftLabel,\r\n          data: leftData,\r\n          isLeft: true,\r\n        })}\r\n        {/* <div className=\"song-name\">{socketErrorMessage || recognizedSongName}</div> */}\r\n        {renderPlayer({\r\n          player: rightPlayer,\r\n          profile: rightProfile,\r\n          label: rightLabel,\r\n          data: rightData,\r\n        })}\r\n      </div>\r\n      <div className=\"results\" ref={resultsContainerRef}>\r\n        {(error || message) && (\r\n          <div className=\"error\">\r\n            {message}\r\n            <br />\r\n            {error && error.message}\r\n          </div>\r\n        )}\r\n        {isSocketReady &&\r\n          !leftPlayer &&\r\n          !rightPlayer &&\r\n          !socketErrorMessage &&\r\n          !isLoading &&\r\n          _.isEmpty(chartsToShow) &&\r\n          (isAlive ? (\r\n            <div className=\"msg\">Waiting for chart select...</div>\r\n          ) : (\r\n            <div className=\"offline msg\">Recognizer is offline</div>\r\n          ))}\r\n        {isSocketReady &&\r\n          (leftLabel || rightLabel) &&\r\n          !socketErrorMessage &&\r\n          !isLoading &&\r\n          _.isEmpty(chartsToShow) &&\r\n          'No results for this chart'}\r\n        {isLoading && <Loader />}\r\n        {!isLoading &&\r\n          chartsToShow.map((chart, chartIndex) => {\r\n            let topPlace = 1;\r\n            const occuredNicknames = [];\r\n            const results = chart.results.map((res, index) => {\r\n              const isSecondOccurenceInResults = occuredNicknames.includes(res.nickname);\r\n              occuredNicknames.push(res.nickname);\r\n              if (index === 0) {\r\n                topPlace = 1;\r\n              } else if (\r\n                !isSecondOccurenceInResults &&\r\n                res.score !== _.get([index - 1, 'score'], chart.results)\r\n              ) {\r\n                topPlace += 1;\r\n              }\r\n              return {\r\n                ...res,\r\n                topPlace,\r\n                isSecondOccurenceInResults,\r\n              };\r\n            });\r\n\r\n            const interpDiff = _.get('interpolatedDifficulty', sharedCharts[chart.sharedChartId]);\r\n            return (\r\n              <div\r\n                className=\"song-block\"\r\n                key={chart.song + chart.chartLabel}\r\n                ref={chartIndex === 0 ? leftResultRef : rightResultRef}\r\n              >\r\n                <div className=\"song-name\">\r\n                  {renderChartLabel(chart.chartType, chart.chartLevel)}\r\n                  <div>\r\n                    {interpDiff ? `(${interpDiff.toFixed(1)}) ` : ''}\r\n                    {chart.song}\r\n                  </div>\r\n                </div>\r\n                <div className=\"charts\">\r\n                  <div className=\"chart\">\r\n                    <div className=\"results\">\r\n                      <table>\r\n                        <tbody>\r\n                          {results.map((res, index) => {\r\n                            let placeDifference, newIndex;\r\n                            if (res.scoreIncrease && res.date === chart.latestScoreDate) {\r\n                              const prevScore = res.score - res.scoreIncrease;\r\n                              newIndex = _.findLastIndex((res) => res.score > prevScore, results);\r\n                              placeDifference = newIndex - index;\r\n                            }\r\n                            const pp = _.getOr('', `[${res.id}].pp.ppFixed`, resultInfo);\r\n                            return (\r\n                              <tr\r\n                                key={res.score + res.nickname}\r\n                                className={classNames({\r\n                                  empty: !res.isExactDate,\r\n                                  latest: res.date === chart.latestScoreDate,\r\n                                  left: res.nickname === leftProfile.name,\r\n                                  right: res.nickname === rightProfile.name,\r\n                                })}\r\n                              >\r\n                                <td className=\"nickname\">\r\n                                  {res.nickname}\r\n                                  {!!placeDifference && (\r\n                                    <span className=\"change-holder up\">\r\n                                      <span>{placeDifference}</span>\r\n                                      <FaAngleDoubleUp />\r\n                                    </span>\r\n                                  )}\r\n                                </td>\r\n                                <td className=\"pp\">\r\n                                  {pp}\r\n                                  {pp && <span className=\"_grey\">pp</span>}\r\n                                </td>\r\n                                <td\r\n                                  className={classNames('judge', {\r\n                                    vj: res.isRank,\r\n                                    hj: res.isHJ,\r\n                                  })}\r\n                                >\r\n                                  {res.isRank && (\r\n                                    <div className=\"inner\">{res.isExactDate ? 'VJ' : 'VJ?'}</div>\r\n                                  )}\r\n                                  {res.isHJ && <div className=\"inner\">HJ</div>}\r\n                                </td>\r\n                                <td className=\"score\">\r\n                                  <span className=\"score-span\">\r\n                                    {res.scoreIncrease > res.score * 0.8 && '*'}\r\n                                    {numeral(res.score).format('0,0')}\r\n                                  </span>\r\n                                </td>\r\n                                <td className=\"grade\">\r\n                                  <div className=\"img-holder\">\r\n                                    {res.grade && res.grade !== '?' && (\r\n                                      <img\r\n                                        src={`${process.env.PUBLIC_URL}/grades/${res.grade}.png`}\r\n                                        alt={res.grade}\r\n                                      />\r\n                                    )}\r\n                                    {res.grade === '?' && null}\r\n                                  </div>\r\n                                </td>\r\n                                <td className=\"number miss\">{res.miss}</td>\r\n                                <td className=\"number bad\">{res.bad}</td>\r\n                                <td className=\"number good\">{res.good}</td>\r\n                                <td className=\"number great\">{res.great}</td>\r\n                                <td className=\"number perfect\">{res.perfect}</td>\r\n                                <td className=\"combo\">\r\n                                  {res.combo}\r\n                                  {res.combo ? 'x' : ''}\r\n                                </td>\r\n                                <td className=\"accuracy\">\r\n                                  {res.accuracy}\r\n                                  {res.accuracy ? '%' : ''}\r\n                                </td>\r\n                                <td\r\n                                  className={classNames('date', {\r\n                                    latest: res.date === chart.latestScoreDate,\r\n                                  })}\r\n                                >\r\n                                  {getTimeAgo(res.dateObject)}\r\n                                  {res.isExactDate ? '' : '?'}\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TrackerApp);\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport localForage from 'localforage';\r\nimport _ from 'lodash/fp';\r\n\r\nimport 'react-responsive-ui/style.css';\r\nimport './App.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\nimport { CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nimport SongsTop from 'components/SongsTop/SongsTop';\r\nimport Leaderboard from 'components/Leaderboard/Leaderboard';\r\nimport Ranking from 'components/Ranking/Ranking';\r\nimport Profile from 'components/Profile/Profile';\r\nimport ProfileCompare from 'components/ProfileCompare/ProfileCompare';\r\nimport TopBar from 'components/Shared/TopBar/TopBar';\r\nimport Loader from 'components/Shared/Loader';\r\nimport LoginScreen from 'components/LoginScreen/LoginScreen';\r\nimport SocketTracker from 'components/SocketTracker/SocketTracker';\r\n\r\nimport { fetchResults, setFilter } from 'reducers/results';\r\nimport { fetchTracklist } from 'reducers/tracklist';\r\nimport { fetchUser } from 'reducers/user';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data: state.user.data,\r\n    isLoading: state.user.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setFilter,\r\n  fetchResults,\r\n  fetchTracklist,\r\n  fetchUser,\r\n};\r\n\r\nfunction App(props) {\r\n  const { fetchUser, fetchTracklist, fetchResults, setFilter, data, isLoading } = props;\r\n\r\n  useEffect(() => {\r\n    localForage\r\n      .getItem('filter')\r\n      .then(filter => {\r\n        if (filter) {\r\n          setFilter({\r\n            ...filter,\r\n            chartRange: filter.chartRange && {\r\n              ...filter.chartRange,\r\n              range: _.every(\r\n                r => r >= CHART_MIN_MAX[0] && r <= CHART_MIN_MAX[1],\r\n                filter.chartRange.range\r\n              )\r\n                ? filter.chartRange.range\r\n                : CHART_MIN_MAX,\r\n            },\r\n          });\r\n        }\r\n      })\r\n      .catch(error => console.error('Cannot get filter from local storage', error));\r\n    fetchUser();\r\n  }, [fetchUser, fetchTracklist, fetchResults, setFilter]);\r\n\r\n  useEffect(() => {\r\n    if (data && data.player) {\r\n      fetchTracklist().then(() => {\r\n        fetchResults();\r\n      });\r\n    }\r\n  }, [data, fetchResults, fetchTracklist]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <Loader />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!data || !data.player) {\r\n    return <LoginScreen />;\r\n  }\r\n\r\n  if (process.env.REACT_APP_SOCKET) {\r\n    return <SocketTracker />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TopBar />\r\n      <Route exact path=\"/\" render={() => <Redirect to={routes.leaderboard.path} />} />\r\n      <Route path={routes.leaderboard.path} component={Leaderboard} />\r\n      <Route path={routes.ranking.path} component={Ranking} />\r\n      <Route path={routes.profile.path}>\r\n        <Switch>\r\n          <Route path={routes.profile.path} exact component={Profile} />\r\n          <Route path={routes.profile.compare.path} exact component={ProfileCompare} />\r\n        </Switch>\r\n      </Route>\r\n      <Route path={routes.songs.path} component={SongsTop} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","import { combineReducers } from 'redux';\r\n\r\nimport mostPlayed from './mostPlayed';\r\nimport mostPlayedMonth from './mostPlayedMonth';\r\nimport leastPlayed from './leastPlayed';\r\n\r\nexport default combineReducers({\r\n  mostPlayed,\r\n  mostPlayedMonth,\r\n  leastPlayed,\r\n});\r\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport _ from 'lodash/fp';\r\n\r\nimport tracklist from 'reducers/tracklist';\r\nimport trackStats from 'reducers/trackStats';\r\nimport profiles from 'reducers/profiles';\r\nimport presets from 'reducers/presets';\r\nimport results from 'reducers/results';\r\nimport user from 'reducers/user';\r\nimport login from 'reducers/login';\r\nimport topPerSong from 'reducers/topPerSong';\r\n\r\nconst rootReducer = combineReducers({\r\n  topPerSong,\r\n  login,\r\n  presets,\r\n  profiles,\r\n  results,\r\n  trackStats,\r\n  tracklist,\r\n  user,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && process.env.NODE_ENV === 'development'\r\n    ? compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__({\r\n          stateSanitizer: state => ({\r\n            ...state,\r\n            results: {\r\n              ...state.results,\r\n              data: `big array, ${_.size(state.results.data)}`,\r\n              results: `big array, ${_.size(state.results.results)}`,\r\n              sharedCharts: 'big object',\r\n              profiles: _.mapValues(\r\n                pl => ({\r\n                  ...pl,\r\n                  resultsByGrade: '...',\r\n                  resultsByLevel: '...',\r\n                  rankingHistory: '...',\r\n                  ratingHistory: '...',\r\n                }),\r\n                state.results.profiles\r\n              ),\r\n            },\r\n          }),\r\n        })\r\n      )\r\n    : applyMiddleware(thunk)\r\n);\r\n","import 'promise-polyfill';\r\nimport 'whatwg-fetch';\r\nimport 'utils/polyfills';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.scss';\r\nimport App from 'components/App';\r\n\r\nimport { store } from 'reducers';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}