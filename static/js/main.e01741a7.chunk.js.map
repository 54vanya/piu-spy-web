{"version":3,"sources":["utils/polyfills.js","constants/routes.js","components/Shared/Overlay/Overlay.js","components/Shared/Loader/index.js","components/Shared/Input/Input.js","components/Shared/Toggle/Toggle.js","components/Shared/CollapsibleBar/index.js","components/Shared/ToggleButton/ToggleButton.js","constants/leaderboard.js","components/Leaderboard/ChartFilter.js","constants/env.js","utils/fetch.js","reducers/ranking.js","reducers/profiles.js","reducers/top.js","constants/backend.js","utils/leaderboards.js","utils/colors.js","components/Leaderboard/selectors.js","components/Leaderboard/Leaderboard.js","components/Ranking/RankingList.js","components/Ranking/RankingFaq.js","components/Ranking/Ranking.js","components/Profile/Profile.js","components/Shared/TopBar/TopBar.js","components/App.js","reducers/index.js","index.js"],"names":["Number","isNaN","value","Math","sign","x","Array","prototype","findIndex","Object","defineProperty","predicate","this","TypeError","o","len","length","thisArg","arguments","k","kValue","call","configurable","writable","routes","leaderboard","path","ranking","faq","profile","getPath","params","name","POPPER_MODIFIERS","preventOverflow","enabled","padding","boundariesElement","PLACEMENT_ARROW_MAPPING","right","left","top","bottom","getArrowPlacement","placement","split","Overlay","state","isVisible","containerItemRef","React","createRef","renderPopper","bind","toggleOverlayVisibility","setState","event","target","closest","hideOverlay","ref","style","arrowProps","outOfBoundaries","scheduleUpdate","props","children","hideWhenOutOfBounds","data-placement","className","classNames","overlayClassName","overlayItem","Fragment","onClick","ReactDOM","createPortal","container","document","body","modifiers","referenceElement","current","PureComponent","defaultTypes","listensToClickOutside","Loader","width","height","viewBox","xmlns","fill","cx","cy","r","attributeName","from","to","begin","dur","values","calcMode","repeatCount","fillOpacity","Input","_","isNil","defaultValue","bindAll","prevProps","e","newValue","onChange","type","numericValue","min","max","onBlur","omit","handleBlur","onInput","handleChange","Component","defaultProps","noop","Toggle","checked","id","uniqueId","htmlFor","CollapsibleBar","open","defaultOpen","title","ToggleButton","active","onToggle","text","SORT","DEFAULT","PROTAGONIST","RANK_ASC","RANK_DESC","CHART_MIN_MAX","ChartFilter","filterValue","range","getOr","buttonText","t","step","renderTrack","onMouseDown","onTouchStart","display","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","justifyContent","alignItems","boxShadow","newMin","newMax","localStorage","window","debugOn","setItem","debugOff","removeItem","DEBUG","getItem","fetchJson","a","url","fetch","response","status","json","data","Error","console","error","Promise","reject","SET_RANKINGS","RANKING_CHANGE_SET","getRankings","players","defaultInfo","count","battleCount","countAcc","rating","grades","F","D","C","B","A","S","SS","SSS","totalScore","sumAccuracy","history","lastPlace","playerInfo","battles","forEach","song","validResults","orderBy","results","score","nickname","includes","push","playerId","cloneDeep","accuracy","chartType","grade","replace","isInteger","perfect","great","good","bad","miss","isFullScore","maxScore","maxCombo","chartLevel","getMaxScore","scoreIndex","slice","enemyScore","isRank","flow","sortBy","s1","s2","dateObject","getTime","scoreMultiplier","isExactDate","map","startingRating","S1","S2","r1","r2","R1","R2","E1","E2","kRatingDiff","abs","kRating1","kRating2","maxK1","maxK2","K1","K2","dr1","dr2","ratingDiff","ratingDiffLast","log","chartLabel","toFixed","idsSorted","keys","toInteger","p1Place","indexOf","p2Place","battleDate","place","date","key","nameArcade","arcade_name","round","ratingRaw","remove","i","setRankingsAction","getListOfNames","getMapOfRatings","q","fromPairs","setRankings","dispatch","getState","all","localForage","lastChangedRanking","lastChangedRankingPoints","lastFetchedRanking","listNow","listLastFetched","listLastChanged","mapPointsNow","mapPointsLastFetched","mapPointsLastChanged","rankingsPointsMap","isEqual","listPrev","warn","SET_PROFILES","getProfiles","profiles","addResultData","chart","result","rankingHistory","find","get","last","Date","now","resultsByGrade","resultsByLevel","initializeProfile","setProfiles","LOADING","SUCCESS","ERROR","SET_FILTER","RESET_FILTER","defaultFilter","showRank","initialState","isLoading","filter","preprocessData","item","track","chart_label","mix","res","index","perfects","sqrt","acc","floor","greats","goods","misses","bads","player","nicknameArcade","originalChartMix","originalChartLabel","originalScore","gained","exact_gain_date","combo","max_combo","mods","mods_list","rank_mode","latestScoreDate","reduce","latest","hasRankScore","some","fetchTopScores","processedData","rankings","setFilter","TimeAgo","addLocale","ru","timeAgo","timeStyle","flavour","gradation","convenient","units","tooltipFormatterForBests","flexDirection","toLocaleDateString","nowDate","colorsArray","playersSelector","createSelector","flatMap","uniq","toLower","label","filteredDataSelector","names","namesOr","playersOr","namesNot","playersNot","sortingType","protagonist","excludeAntagonists","defaultSorting","protagonistSorting","row","protIndex","protScore","enemies","take","uniqBy","distanceFromProtagonist","dist","enemy","getScoreSorting","direction","Infinity","sortingFunctions","compact","chartRange","items","rows","filterCharts","showOnlyRank","showRankAndNorank","occuredNames","alreadyOccured","rowNames","every","size","matchSorter","topPlace","occuredNicknames","isSecondOccurenceInResults","sortingOptions","mapDispatchToProps","resetFilter","Leaderboard","showItemsCount","curry","onRefresh","placeholder","disabled","closeMenuOnSelect","classNamePrefix","isMulti","options","clearable","filteredData","canShowMore","visibleData","uniqueSelectedNames","message","renderSimpleSearch","renderFilters","renderSortings","isEmpty","chartIndex","single","href","rel","nameIndex","empty","fontWeight","color","vj","content","tooltipClassName","numeral","format","exact","src","process","alt","strTimeAgo","dayDiff","moment","startOf","diff","getTimeAgo","connect","getGradeImg","RankingList","playerIndex","change","isString","prevRating","down","up","RankingFaq","Ranking","render","component","withRouter","Profile","match","levelsData","toPairs","y","brushData","historyTicks","lastTick","firstTick","first","isBefore","add","valueOf","isAfter","subtract","placesData","newItems","it","tick","flatten","dateRounded","stackOffset","margin","dataKey","stroke","stackId","strokeDasharray","domain","tickFormatter","allowDecimals","dataMax","interval","reversed","isAnimationActive","payload","strokeWidth","dot","travellerWidth","TopBar","App","rootReducer","combineReducers","action","hasPrevList","playerOriginal","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","thunk","stateSanitizer","then","catch","getElementById"],"mappings":"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","file":"static/js/main.e01741a7.chunk.js","sourcesContent":["/* eslint-disable */\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\r\nNumber.isNaN =\r\n  Number.isNaN ||\r\n  function(value) {\r\n    return value !== value;\r\n  };\r\n\r\nif (typeof Math.sign === 'undefined') {\r\n  Math.sign = function(x) {\r\n    return x > 0 ? 1 : x < 0 ? -1 : x;\r\n  };\r\n}\r\n\r\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\r\nif (!Array.prototype.findIndex) {\r\n  Object.defineProperty(Array.prototype, 'findIndex', {\r\n    value: function(predicate) {\r\n      // 1. Let O be ? ToObject(this value).\r\n      if (this == null) {\r\n        throw new TypeError('\"this\" is null or not defined');\r\n      }\r\n\r\n      var o = Object(this);\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('predicate must be a function');\r\n      }\r\n\r\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n      var thisArg = arguments[1];\r\n\r\n      // 5. Let k be 0.\r\n      var k = 0;\r\n\r\n      // 6. Repeat, while k < len\r\n      while (k < len) {\r\n        // a. Let Pk be ! ToString(k).\r\n        // b. Let kValue be ? Get(O, Pk).\r\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n        // d. If testResult is true, return k.\r\n        var kValue = o[k];\r\n        if (predicate.call(thisArg, kValue, k, o)) {\r\n          return k;\r\n        }\r\n        // e. Increase k by 1.\r\n        k++;\r\n      }\r\n\r\n      // 7. Return -1.\r\n      return -1;\r\n    },\r\n    configurable: true,\r\n    writable: true,\r\n  });\r\n}\r\n","export const routes = {\r\n  leaderboard: {\r\n    path: `/leaderboard`,\r\n  },\r\n  ranking: {\r\n    path: `/ranking`,\r\n    faq: {\r\n      path: '/ranking/faq',\r\n    },\r\n  },\r\n  profile: {\r\n    path: `/profiles/:name`,\r\n    getPath: params => `/profiles/${params.name}`,\r\n  },\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport toBe from 'prop-types';\r\nimport { Popper } from 'react-popper';\r\nimport classNames from 'classnames';\r\nimport listensToClickOutside from 'react-onclickoutside';\r\n\r\nimport './overlay.scss';\r\n\r\nconst POPPER_MODIFIERS = {\r\n  preventOverflow: {\r\n    enabled: true,\r\n    padding: 10,\r\n    boundariesElement: 'viewport',\r\n  },\r\n};\r\n\r\nconst PLACEMENT_ARROW_MAPPING = {\r\n  right: 'left',\r\n  left: 'right',\r\n  top: 'bottom',\r\n  bottom: 'top',\r\n};\r\n\r\nconst getArrowPlacement = placement => {\r\n  return placement && PLACEMENT_ARROW_MAPPING[placement.split('-')[0]];\r\n};\r\n\r\nclass Overlay extends React.PureComponent {\r\n  static propTypes = {\r\n    placement: toBe.string,\r\n    overlayItem: toBe.any,\r\n    hideWhenOutOfBounds: toBe.bool,\r\n  };\r\n\r\n  static defaultTypes = {\r\n    placement: 'bottom',\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isVisible: false,\r\n    };\r\n    this.containerItemRef = React.createRef();\r\n    this.renderPopper = this.renderPopper.bind(this);\r\n    this.toggleOverlayVisibility = this.toggleOverlayVisibility.bind(this);\r\n  }\r\n\r\n  hideOverlay() {\r\n    this.setState({\r\n      isVisible: false,\r\n    });\r\n  }\r\n\r\n  toggleOverlayVisibility() {\r\n    this.setState({\r\n      isVisible: !this.state.isVisible,\r\n    });\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    const preventHiding = event && event.target.closest('.inner-popper-overlay'); // prevent overlays from hiding when a modal is opened within overlay\r\n\r\n    if (!preventHiding) {\r\n      this.hideOverlay();\r\n    }\r\n  }\r\n\r\n  renderPopper({ ref, style, placement, arrowProps, scheduleUpdate, outOfBoundaries }) {\r\n    const { children, hideWhenOutOfBounds } = this.props;\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        data-placement={placement}\r\n        className={classNames(\r\n          'inner-popper-overlay',\r\n          `arrow-${getArrowPlacement(placement)}`,\r\n          this.props.overlayClassName,\r\n          { 'out-of-bounds': outOfBoundaries && hideWhenOutOfBounds }\r\n        )}\r\n      >\r\n        <div className=\"arrow-hider\">\r\n          <div className=\"arrow\" ref={arrowProps.ref} style={arrowProps.style} />\r\n        </div>\r\n        <div\r\n          className=\"inner-popper-content\"\r\n          // ref={ref => this.setupPopperContentRef(scheduleUpdate, ref)}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { placement, overlayItem } = this.props;\r\n    const { isVisible } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"overlay-item\"\r\n          ref={this.containerItemRef}\r\n          onClick={this.toggleOverlayVisibility}\r\n        >\r\n          {overlayItem}\r\n        </div>\r\n        {isVisible &&\r\n          ReactDOM.createPortal(\r\n            <Popper\r\n              container={document.body}\r\n              modifiers={POPPER_MODIFIERS}\r\n              placement={placement}\r\n              referenceElement={this.containerItemRef.current}\r\n            >\r\n              {this.renderPopper}\r\n            </Popper>,\r\n            document.body\r\n          )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default listensToClickOutside(Overlay);\r\n","import React from 'react';\r\n\r\nimport './loader.scss';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"loader\">\r\n      <svg\r\n        width=\"40\"\r\n        height=\"12\"\r\n        viewBox=\"0 0 120 30\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"#eee\"\r\n      >\r\n        <circle cx=\"15\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"60\" cy=\"15\" r=\"9\" fillOpacity=\"0.3\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"9\"\r\n            to=\"9\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"9;15;9\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"0.5\"\r\n            to=\"0.5\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\".5;1;.5\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"105\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react/no-deprecated */\r\n// imports from vendor deps\r\nimport React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\n\r\n// imports from styles\r\nexport default class Input extends React.Component {\r\n  static propTypes = {\r\n    value: toBe.any,\r\n    defaultValue: toBe.any,\r\n    onChange: toBe.func,\r\n    onBlur: toBe.func,\r\n    type: toBe.string,\r\n    className: toBe.string,\r\n    trimOnBlur: toBe.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    value: null,\r\n    type: 'text',\r\n    onChange: _.noop,\r\n    onBlur: _.noop,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: (!_.isNil(props.value) ? props.value : props.defaultValue) || '',\r\n    };\r\n    _.bindAll(['handleChange', 'handleBlur'], this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.value !== this.props.value) {\r\n      this.setState({ value: this.props.value });\r\n    }\r\n  }\r\n\r\n  handleChange(e) {\r\n    const newValue = e.target.value;\r\n    this.setState({ value: newValue }, () => this.props.onChange(newValue));\r\n  }\r\n\r\n  handleBlur(e) {\r\n    const { type } = this.props;\r\n    const { value } = this.state;\r\n    if (type === 'number') {\r\n      const numericValue = Number(value);\r\n      if (numericValue >= Number(e.target.min) && numericValue <= Number(e.target.max)) {\r\n        this.props.onBlur(numericValue, e);\r\n      } else {\r\n        this.setState({ value: this.props.value });\r\n        this.props.onBlur(this.props.value, e);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props;\r\n\r\n    // HACK: This component uses onInput instead of onChange\r\n    // because IE11 fails to call onChange events when you paste/cut using context menu (RMB)\r\n    // We're using onInput because it works fine, and because for text input\r\n    // there's no difference between how onChange and onInput work\r\n    return (\r\n      <input\r\n        {..._.omit(['defaultValue', 'onChange'], this.props)}\r\n        className={classNames(className, 'text-input')}\r\n        value={this.state.value}\r\n        onBlur={this.handleBlur}\r\n        onInput={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './toggle.scss';\r\n\r\n// imports from styles\r\nexport default class Toggle extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.id = _.uniqueId();\r\n  }\r\n\r\n  onChange = e => {\r\n    this.props.onChange(e.target.checked);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"toggle-checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle-checkbox-cb\"\r\n          id={this.id}\r\n          onChange={this.onChange}\r\n          checked={this.props.checked}\r\n        />\r\n        <label htmlFor={this.id} className=\"toggle\">\r\n          <span></span>\r\n        </label>\r\n        <label htmlFor={this.id} className=\"text-label\">\r\n          {this.props.children}\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\nimport './styles.scss';\r\n\r\nexport default class CollapsibleBar extends PureComponent {\r\n  static propTypes = {\r\n    className: toBe.string,\r\n    children: toBe.any,\r\n    title: toBe.any,\r\n    defaultOpen: toBe.bool,\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = { open: props.defaultOpen || false };\r\n  }\r\n\r\n  render() {\r\n    const { children, title, className } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classNames('collapsible-bar', className, { open })}>\r\n        <div className=\"header\" onClick={() => this.setState(state => ({ open: !state.open }))}>\r\n          <div className=\"collapse-button\">\r\n            <FaChevronRight />\r\n          </div>\r\n          <div className=\"title\">{title}</div>\r\n        </div>\r\n        {children && <div className=\"collapsible-children\">{children}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './toggle-button.scss';\r\n\r\nexport default class ToggleButton extends React.PureComponent {\r\n  static propTypes = {\r\n    text: toBe.string,\r\n    onToggle: toBe.func,\r\n    active: toBe.bool,\r\n  };\r\n\r\n  render() {\r\n    const { active, onToggle, text } = this.props;\r\n    return (\r\n      <div\r\n        className={classNames('toggle-button', { active: active })}\r\n        onClick={() => onToggle(!active)}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const SORT = {\r\n  DEFAULT: 'default',\r\n  PROTAGONIST: 'protagonist',\r\n  RANK_ASC: 'rankAsc',\r\n  RANK_DESC: 'rankDesc',\r\n};\r\n\r\nexport const CHART_MIN_MAX = [1, 28];\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\nimport { FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\nimport { Range, getTrackBackground } from 'react-range';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Input from 'components/Shared/Input/Input';\r\n\r\nimport { CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nexport default function ChartFilter({ filterValue, onChange }) {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filterValue);\r\n  const type = _.getOr(null, 'type', filterValue);\r\n  let buttonText = 'фильтр чартов';\r\n  if (filterValue) {\r\n    const t = type || '';\r\n    buttonText = range[0] === range[1] ? `${t}${range[0]}` : `${t}${range[0]} - ${t}${range[1]}`;\r\n    buttonText = 'чарты: ' + buttonText;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Overlay\r\n        overlayClassName=\"chart-range-overlay-outer\"\r\n        overlayItem={\r\n          <button className=\"filter-charts-button btn btn-sm btn-dark\">{buttonText}</button>\r\n        }\r\n      >\r\n        <div className=\"chart-range-overlay\">\r\n          <div className=\"buttons\">\r\n            <ToggleButton\r\n              text=\"S\"\r\n              active={!type || type === 'S'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  range,\r\n                  type: !active ? 'D' : null,\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"D\"\r\n              active={!type || type === 'D'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  range,\r\n                  type: !active ? 'S' : null,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <Range\r\n            values={range}\r\n            step={1}\r\n            min={CHART_MIN_MAX[0]}\r\n            max={CHART_MIN_MAX[1]}\r\n            onChange={r => onChange({ type, range: r })}\r\n            renderTrack={({ props, children }) => (\r\n              <div\r\n                onMouseDown={props.onMouseDown}\r\n                onTouchStart={props.onTouchStart}\r\n                style={{\r\n                  ...props.style,\r\n                  height: '10px',\r\n                  display: 'flex',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <div\r\n                  ref={props.ref}\r\n                  style={{\r\n                    height: '6px',\r\n                    width: '100%',\r\n                    borderRadius: '3px',\r\n                    background: getTrackBackground({\r\n                      values: range,\r\n                      colors: ['#ccc', '#337ab7', '#ccc'],\r\n                      min: CHART_MIN_MAX[0],\r\n                      max: CHART_MIN_MAX[1],\r\n                    }),\r\n                    alignSelf: 'center',\r\n                  }}\r\n                >\r\n                  {children}\r\n                </div>\r\n              </div>\r\n            )}\r\n            renderThumb={({ props, isDragged }) => (\r\n              <div\r\n                {...props}\r\n                style={{\r\n                  ...props.style,\r\n                  height: '12px',\r\n                  width: '12px',\r\n                  borderRadius: '6px',\r\n                  backgroundColor: '#FFF',\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  boxShadow: '0px 2px 3px #AAA',\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    height: '6px',\r\n                    width: '6px',\r\n                    borderRadius: '3px',\r\n                    backgroundColor: isDragged ? '#337ab7' : '#CCC',\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n          />\r\n          <div className=\"inputs\">\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  type,\r\n                  range: [Math.max(range[0] - 1, CHART_MIN_MAX[0]), range[1]],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={CHART_MIN_MAX[0]}\r\n              max={Math.min(CHART_MIN_MAX[1], range[1])}\r\n              value={range[0]}\r\n              onBlur={value => {\r\n                onChange({ type, range: [value, range[1]] });\r\n              }}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMin = Math.min(range[0] + 1, CHART_MIN_MAX[1]);\r\n                onChange({\r\n                  type,\r\n                  range: [newMin, range[1] < newMin ? newMin : range[1]],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMax = Math.max(range[1] - 1, CHART_MIN_MAX[0]);\r\n                onChange({\r\n                  type,\r\n                  range: [range[0] > newMax ? newMax : range[0], newMax],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={Math.max(CHART_MIN_MAX[0], range[0])}\r\n              max={CHART_MIN_MAX[1]}\r\n              value={range[1]}\r\n              onBlur={value => onChange({ type, range: [range[0], value] })}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  type,\r\n                  range: [range[0], Math.min(range[1] + 1, CHART_MIN_MAX[1])],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Overlay>\r\n    </div>\r\n  );\r\n}\r\n","if (localStorage) {\r\n  window.debugOn = () => {\r\n    localStorage.setItem('debug', 1);\r\n  };\r\n  window.debugOff = () => {\r\n    localStorage.removeItem('debug');\r\n  };\r\n}\r\n\r\nexport const DEBUG = localStorage && localStorage.getItem('debug');\r\n","export const fetchJson = async ({ url }) => {\r\n  try {\r\n    const response = await fetch(url);\r\n    if (response.status >= 200 && response.status < 300) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      throw Error('HTTP Status ' + response.status);\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\n\r\nimport { DEBUG } from 'constants/env';\r\n\r\nconst SET_RANKINGS = `RANKINGS/SET_RANKINGS`;\r\nconst RANKING_CHANGE_SET = `RANKINGS/RANKING_CHANGE_SET`;\r\n\r\nconst isFullScore = score => {\r\n  return (\r\n    _.isInteger(score.perfect) &&\r\n    _.isInteger(score.great) &&\r\n    _.isInteger(score.good) &&\r\n    _.isInteger(score.bad) &&\r\n    _.isInteger(score.miss) &&\r\n    _.isInteger(score.score)\r\n  );\r\n};\r\n\r\nconst getMaxScore = (score, song) => {\r\n  const maxCombo = score.perfect + score.great + score.good + score.bad + score.miss;\r\n  let maxScore = maxCombo * 1000 + (maxCombo - 50) * 1000; // all perfects + 51 combo bonus\r\n  if (song.chartLevel > 10) {\r\n    maxScore *= song.chartLevel / 10; // Level multiplier\r\n  }\r\n  if (song.chartType === 'D') {\r\n    maxScore *= 1.2; // Double multiplier\r\n  }\r\n  maxScore += 300000; // SSS bonus\r\n  return maxScore;\r\n};\r\n\r\nexport default function reducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case SET_RANKINGS:\r\n      return {\r\n        ...state,\r\n        data: action.ranking,\r\n      };\r\n    case RANKING_CHANGE_SET:\r\n      const hasPrevList = !_.isEmpty(action.listPrev);\r\n      return {\r\n        ...state,\r\n        data: _.map(playerOriginal => {\r\n          const player = {\r\n            ...playerOriginal,\r\n            prevRating: _.get(playerOriginal.name, action.rankingsPointsMap),\r\n          };\r\n          if (!hasPrevList) {\r\n            return player; // First time opening this thing and we didn't have any previous data\r\n          }\r\n          if (!_.includes(player.name, action.listPrev)) {\r\n            return { ...player, change: 'NEW' };\r\n          } else if (!_.includes(player.name, action.listNow)) {\r\n            // Should NEVER happen, idk if this is possible\r\n            return { ...player, change: '?' };\r\n          } else {\r\n            return {\r\n              ...player,\r\n              change:\r\n                _.indexOf(player.name, action.listPrev) - _.indexOf(player.name, action.listNow),\r\n            };\r\n          }\r\n        }, state.data),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getRankings = (data, { players }) => {\r\n  const defaultInfo = {\r\n    count: 0,\r\n    battleCount: 0,\r\n    countAcc: 0,\r\n    rating: 1000,\r\n    grades: { F: 0, D: 0, C: 0, B: 0, A: 0, S: 0, SS: 0, SSS: 0 },\r\n    totalScore: { S: 0, D: 0 },\r\n    sumAccuracy: 0,\r\n    history: [],\r\n    lastPlace: null,\r\n  };\r\n  const playerInfo = {};\r\n  const battles = [];\r\n  data.forEach(song => {\r\n    const validResults = [];\r\n    _.orderBy(['score'], ['desc'], song.results).forEach(score => {\r\n      if (!score.nickname.includes('???')) {\r\n        validResults.push(score);\r\n\r\n        if (!playerInfo[score.playerId]) {\r\n          playerInfo[score.playerId] = _.cloneDeep(defaultInfo);\r\n        }\r\n\r\n        playerInfo[score.playerId].count++;\r\n        if (score.accuracy) {\r\n          playerInfo[score.playerId].countAcc++;\r\n          playerInfo[score.playerId].sumAccuracy += score.accuracy;\r\n        }\r\n        playerInfo[score.playerId].totalScore[song.chartType] += score.score;\r\n        playerInfo[score.playerId].grades[score.grade.replace('+', '')]++;\r\n      }\r\n      if (isFullScore(score)) {\r\n        song.maxScore = getMaxScore(score, song);\r\n      }\r\n    });\r\n\r\n    validResults.forEach((score, scoreIndex) => {\r\n      const enemyScores = validResults.length > 1 ? validResults.slice(scoreIndex + 1) : [];\r\n\r\n      enemyScores.forEach(enemyScore => {\r\n        if (score.isRank === enemyScore.isRank && score.playerId !== enemyScore.playerId) {\r\n          battles.push([score, enemyScore, song]);\r\n        }\r\n      });\r\n    });\r\n  });\r\n  _.flow([\r\n    // Apply battles chronologically instead of randomly\r\n    _.sortBy(([s1, s2]) => Math.max(s1.dateObject.getTime(), s2.dateObject.getTime())),\r\n    _.forEach(([score, enemyScore, song]) => {\r\n      // For each battle\r\n      if (!playerInfo[enemyScore.playerId]) {\r\n        playerInfo[enemyScore.playerId] = _.cloneDeep(defaultInfo);\r\n      }\r\n\r\n      const scoreMultiplier = score.isRank ? 1.2 : 1;\r\n      let maxScore = null;\r\n      if (song.maxScore) {\r\n        maxScore = song.maxScore * scoreMultiplier;\r\n        if (\r\n          Math.max(maxScore, score.score, enemyScore.score) !== maxScore &&\r\n          !score.isRank &&\r\n          (!score.isExactDate || !enemyScore.isExactDate)\r\n        ) {\r\n          maxScore *= 1.2;\r\n          // Rank from machine best wasn't recognized most likely.\r\n          // Increasing max score by 20% is fine\r\n        }\r\n        if (Math.max(maxScore, score.score, enemyScore.score) !== maxScore) {\r\n          // If calculated max score isn't max score anyway, use current scores as max + cherry on top\r\n          maxScore = Math.max(..._.map('score', song.results));\r\n        }\r\n      }\r\n      // console.log(song.maxScore * scoreMultiplier, score.score, enemyScore.score);\r\n      // Rating at the start of battle for this score\r\n      score.startingRating = playerInfo[score.playerId].rating;\r\n      enemyScore.startingRating = playerInfo[enemyScore.playerId].rating;\r\n      // Counting the number of battles\r\n      playerInfo[score.playerId].battleCount++;\r\n      playerInfo[enemyScore.playerId].battleCount++;\r\n\r\n      // This is one match between two players\r\n      //// Elo formula\r\n      const r1 = playerInfo[score.playerId].rating;\r\n      const r2 = playerInfo[enemyScore.playerId].rating;\r\n      const R1 = 10 ** (r1 / 400);\r\n      const R2 = 10 ** (r2 / 400);\r\n      const E1 = R1 / (R1 + R2);\r\n      const E2 = R2 / (R1 + R2);\r\n      // S1/S2 is the factor of winning\r\n      // S1 = 1  S2 = 0  -- player 1 wins\r\n      // S1 = 0.5  S2 = 0.5  -- draw\r\n      // I'm using difference in score to get this value, it ranges from 0 from 1\r\n      // Current formula assigns 100% win if you have at least ~15% more score than the other player\r\n      // 3.000 vs 3.500 score -- 0 / 1 win percentage -- clear win for player 2\r\n      // 3.000 vs 3.300 score -- 0.17 / 0.83 win percentage -- ranking is not affected as strongly as 0 / 1\r\n      // 3.000 vs 3.100 score -- 0.38 / 0.62 win percentage -- almost draw\r\n      let A = score.score;\r\n      let B = enemyScore.score;\r\n      let S1, S2;\r\n      if (A === B) {\r\n        S1 = S2 = 0.5;\r\n      } else if (maxScore && A !== 0 && B !== 0) {\r\n        A = maxScore / A - 1;\r\n        B = maxScore / B - 1;\r\n        S1 = (B / (A + B) - 0.5) * 5 + 0.5;\r\n        S2 = (A / (A + B) - 0.5) * 5 + 0.5;\r\n      } else {\r\n        // console.log('////////// NO MAX SCORE /////////////');\r\n        S1 = A > B ? 1 : B < A ? 0 : 0.5;\r\n        S2 = 1 - S1;\r\n      }\r\n      S1 = Math.max(0, Math.min(1, S1)); // Set strict boundaries to [0, 1]\r\n      S2 = Math.max(0, Math.min(1, S2));\r\n      // S1old = Math.max(0, Math.min(1, S1old)); // Set strict boundaries to [0, 1]\r\n      // S2old = Math.max(0, Math.min(1, S2old));\r\n      // K is the coeficient that decides how strongly this match affects rating\r\n      // Higher level -- affects more\r\n      // More playcount -- affects less (just to make first matches place people faster)\r\n      // const k1pow = Math.min(1, playerInfo[score.playerId].battleCount / 100) * 0.3; // battlecount 0 -> 150 => results in 0 -> 0.5 value here\r\n      // const k2pow = Math.min(1, playerInfo[enemyScore.playerId].battleCount / 100) * 0.3; // battlecount 0 -> 150 => results in 0 -> 0.5 value here\r\n\r\n      let kRatingDiff = Math.abs(E1 - E2) + 0.6;\r\n      // prettier-ignore\r\n      if ((S1 - E1 > 0) === (E1 < 0.5) && Math.abs(E1 - E2) > 0.1) {\r\n        const difference = Math.abs(E1 - E2) / 3;\r\n        kRatingDiff *= 1 - difference; // When someone with lower rank wins against someone with higher rank\r\n      }\r\n      const kRating1 = Math.max(0, Math.min(1, (r1 - 700) / 800));\r\n      const kRating2 = Math.max(0, Math.min(1, (r2 - 700) / 800));\r\n      const maxK1 = 60 + 20 * kRating1;\r\n      const maxK2 = 60 + 20 * kRating2;\r\n      const kLevel1 = Math.max(\r\n        1,\r\n        Math.min(maxK1, (song.chartLevel / 25) ** ((kRating1 - 0.5) * 5 + 2.5) * maxK1)\r\n      );\r\n      const kLevel2 = Math.max(\r\n        1,\r\n        Math.min(maxK2, (song.chartLevel / 25) ** ((kRating2 - 0.5) * 5 + 2.5) * maxK2)\r\n      );\r\n\r\n      const K1 = kLevel1 / kRatingDiff;\r\n      const K2 = kLevel2 / kRatingDiff;\r\n      // const K1 = (kLevel + (1 - kRating1) * (maxK - kLevel)) / kRatingDiff;\r\n      // const K2 = (kLevel + (1 - kRating2) * (maxK - kLevel)) / kRatingDiff;\r\n      // const K1D = (Math.max(r1 - 600, 0) / 1500 + 1) ** 3 / 2;\r\n      // const K2D = (Math.max(r2 - 600, 0) / 1500 + 1) ** 3 / 2;\r\n      // const K1 = Math.min(20, Math.max(4, song.chartLevel - 4)) ** (2 - k1pow) / K1D / RD;\r\n      // const K2 = Math.min(20, Math.max(4, song.chartLevel - 4)) ** (2 - k2pow) / K2D / RD;\r\n      let dr1 = K1 * (S1 - E1);\r\n      let dr2 = K2 * (S2 - E2);\r\n      // Do not decrease rating if you have SSS - RIP zero-sum algorithm\r\n      dr1 = dr1 < 0 && score.grade === 'SSS' ? 0 : dr1;\r\n      dr2 = dr2 < 0 && enemyScore.grade === 'SSS' ? 0 : dr2;\r\n      // Recording this value for display\r\n      score.ratingDiff = (score.ratingDiff || 0) + dr1;\r\n      enemyScore.ratingDiff = (enemyScore.ratingDiff || 0) + dr2;\r\n      score.ratingDiffLast = dr1;\r\n      enemyScore.ratingDiffLast = dr2;\r\n\r\n      if (DEBUG) {\r\n        // if (song.song === 'Club Night') {\r\n        // if (score.nickname === 'Liza' || enemyScore.nickname === 'Liza') {\r\n        // if (!song.maxScore) {\r\n        console.log(\r\n          `${song.chartLabel} - ${score.nickname} / ${enemyScore.nickname} - ${song.song}`\r\n        );\r\n        console.log(\r\n          `- ${score.score} / ${enemyScore.score} (${maxScore}) - R ${S1.toFixed(2)}/${S2.toFixed(\r\n            2\r\n          )} E ${E1.toFixed(2)} / ${E2.toFixed(2)}`\r\n        );\r\n        // console.log(`- old R ${S1old.toFixed(2)}/${S2old.toFixed(2)}`);\r\n        console.log(\r\n          `- Rating ${r1.toFixed(2)} / ${r2.toFixed(2)} - ${dr1.toFixed(2)} / ${dr2.toFixed(\r\n            2\r\n          )} - K ${K1.toFixed(2)} ${K2.toFixed(2)} RD ${kRatingDiff.toFixed(1)}`\r\n        );\r\n        // }\r\n      }\r\n\r\n      // Change rating as a result of this battle\r\n      playerInfo[score.playerId].rating = r1 + dr1;\r\n      playerInfo[enemyScore.playerId].rating = r2 + dr2;\r\n      // Rating floor\r\n      playerInfo[score.playerId].rating = Math.max(100, playerInfo[score.playerId].rating);\r\n      playerInfo[enemyScore.playerId].rating = Math.max(\r\n        100,\r\n        playerInfo[enemyScore.playerId].rating\r\n      );\r\n      // console.log(playerInfo);\r\n      const idsSorted = _.flow(\r\n        _.keys,\r\n        _.map(id => ({ id, rating: playerInfo[id].rating })),\r\n        _.orderBy(['rating'], ['desc']),\r\n        _.map(x => _.toInteger(x.id))\r\n      )(playerInfo);\r\n      const p1Place = idsSorted.indexOf(score.playerId) + 1;\r\n      const p2Place = idsSorted.indexOf(enemyScore.playerId) + 1;\r\n      const battleDate =\r\n        score.dateObject > enemyScore.dateObject ? score.dateObject : enemyScore.dateObject;\r\n      if (\r\n        (playerInfo[score.playerId].lastPlace !== p1Place &&\r\n          playerInfo[score.playerId].battleCount > 20) ||\r\n        (playerInfo[score.playerId].battleCount === 21 &&\r\n          !playerInfo[score.playerId].history.length)\r\n      ) {\r\n        // Place in rankings changed!\r\n        playerInfo[score.playerId].history.push({\r\n          place: p1Place,\r\n          date: battleDate.getTime(),\r\n        });\r\n      }\r\n      if (\r\n        (playerInfo[enemyScore.playerId].lastPlace !== p2Place &&\r\n          playerInfo[enemyScore.playerId].battleCount > 20) ||\r\n        (playerInfo[enemyScore.playerId].battleCount === 21 &&\r\n          !playerInfo[enemyScore.playerId].history.length)\r\n      ) {\r\n        playerInfo[enemyScore.playerId].history.push({\r\n          place: p2Place,\r\n          date: battleDate.getTime(),\r\n        });\r\n      }\r\n      playerInfo[score.playerId].lastPlace = p1Place;\r\n      playerInfo[enemyScore.playerId].lastPlace = p2Place;\r\n    }),\r\n  ])(battles);\r\n\r\n  const ranking = _.flow(\r\n    _.keys,\r\n    _.map(key => ({\r\n      ..._.omit(['countAcc', 'sumAccuracy'], playerInfo[key]),\r\n      id: key,\r\n      name: players[key].nickname,\r\n      nameArcade: players[key].arcade_name,\r\n      accuracy:\r\n        playerInfo[key].countAcc > 0\r\n          ? Math.round((playerInfo[key].sumAccuracy / playerInfo[key].countAcc) * 100) / 100\r\n          : null,\r\n      rating: Math.round(playerInfo[key].rating),\r\n      ratingRaw: playerInfo[key].rating,\r\n    })),\r\n    _.remove(i => i.battleCount < 20),\r\n    _.orderBy(['ratingRaw'], ['desc'])\r\n  )(playerInfo);\r\n  return ranking;\r\n};\r\n\r\nexport const setRankingsAction = ranking => ({\r\n  type: SET_RANKINGS,\r\n  ranking,\r\n});\r\n\r\nconst getListOfNames = _.map('name');\r\nconst getMapOfRatings = _.flow(\r\n  _.map(q => [q.name, q.rating]),\r\n  _.fromPairs\r\n);\r\nexport const setRankings = ranking => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(setRankingsAction(ranking));\r\n    try {\r\n      const [lastChangedRanking, lastChangedRankingPoints, lastFetchedRanking] = await Promise.all([\r\n        localForage.getItem('lastChangedRanking_v2'),\r\n        localForage.getItem('lastChangedRankingPoints_v2'),\r\n        localForage.getItem('lastFetchedRanking_v2'),\r\n      ]);\r\n      console.log(ranking);\r\n      const listNow = getListOfNames(ranking);\r\n      const listLastFetched = getListOfNames(lastFetchedRanking);\r\n      const listLastChanged = getListOfNames(lastChangedRanking);\r\n      const mapPointsNow = getMapOfRatings(ranking);\r\n      const mapPointsLastFetched = getMapOfRatings(lastFetchedRanking);\r\n      const mapPointsLastChanged = getMapOfRatings(lastChangedRankingPoints);\r\n      let rankingsPointsMap = mapPointsLastChanged;\r\n      console.log(mapPointsNow, mapPointsLastFetched, mapPointsLastChanged);\r\n      if (!_.isEqual(mapPointsNow, mapPointsLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRankingPoints_v2', lastFetchedRanking);\r\n        rankingsPointsMap = mapPointsLastFetched;\r\n      }\r\n      let listPrev = listLastChanged;\r\n      if (!_.isEqual(listNow, listLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRanking_v2', lastFetchedRanking);\r\n        listPrev = listLastFetched;\r\n      }\r\n      dispatch({\r\n        type: RANKING_CHANGE_SET,\r\n        listNow,\r\n        listPrev,\r\n        rankingsPointsMap,\r\n      });\r\n      localForage.setItem('lastFetchedRanking_v2', ranking);\r\n      // console.log(listNow, listLastFetched, listLastChanged);\r\n    } catch (error) {\r\n      console.warn('Cannot get ranking from local storage', error);\r\n    }\r\n  };\r\n};\r\n","import _ from 'lodash/fp';\r\n// import localForage from 'localforage';\r\n//\r\n// import { DEBUG } from 'constants/env';\r\n\r\nconst SET_PROFILES = `PROFILES/SET_PROFILES`;\r\n\r\nexport default function reducer(state = { data: {} }, action) {\r\n  switch (action.type) {\r\n    case SET_PROFILES:\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getProfiles = (data, ranking) => {\r\n  const profiles = {};\r\n  console.log(data, ranking);\r\n  const initializeProfile = nickname => {\r\n    const rankingHistory = _.flow(\r\n      _.find({ name: nickname }),\r\n      _.get('history'),\r\n      history =>\r\n        history && [...history, { place: _.get('place', _.last(history)), date: Date.now() }]\r\n    )(ranking);\r\n    profiles[nickname] = { resultsByGrade: {}, resultsByLevel: {}, rankingHistory };\r\n  };\r\n  const addResultData = (chart, result) => {\r\n    if (!profiles[result.nickname]) {\r\n      initializeProfile(result.nickname);\r\n    }\r\n    const profile = profiles[result.nickname];\r\n    profile.resultsByGrade[result.grade] = [\r\n      ...(profile.resultsByGrade[result.grade] || []),\r\n      { result, chart },\r\n    ];\r\n    profile.resultsByLevel[chart.chartLevel] = [\r\n      ...(profile.resultsByLevel[chart.chartLevel] || []),\r\n      { result, chart },\r\n    ];\r\n  };\r\n  data.forEach(chart => {\r\n    chart.results.forEach(result => {\r\n      addResultData(chart, result);\r\n    });\r\n  });\r\n  // console.log(profiles);\r\n  return profiles;\r\n};\r\n\r\nexport const setProfilesAction = data => ({\r\n  type: SET_PROFILES,\r\n  data,\r\n});\r\n\r\nexport const setProfiles = ranking => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(setProfilesAction(ranking));\r\n  };\r\n};\r\n","import _ from 'lodash/fp';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\n\r\nimport { getRankings, setRankings } from './ranking';\r\nimport { getProfiles, setProfiles } from './profiles';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TOP/LOADING`;\r\nconst SUCCESS = `TOP/SUCCESS`;\r\nconst ERROR = `TOP/ERROR`;\r\nconst SET_FILTER = `TOP/SET_FILTER`;\r\nconst RESET_FILTER = `TOP/RESET_FILTER`;\r\n\r\nexport const defaultFilter = { showRank: true };\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n  filter: defaultFilter,\r\n};\r\n\r\nconst preprocessData = data =>\r\n  _.flow(\r\n    _.get('top'),\r\n    _.values,\r\n    _.map(item => ({\r\n      song: item.track,\r\n      chartLabel: item.chart_label,\r\n      chartLevel: item.chart_label.slice(1),\r\n      chartType: item.chart_label.slice(0, 1),\r\n      mix: item.mix,\r\n      results: item.results.map((res, index) => {\r\n        const perfects = (Math.sqrt(res.perfects) * _.toInteger(item.chart_label.slice(1))) / 2;\r\n        const acc = perfects\r\n          ? Math.floor(\r\n              ((perfects * 100 + res.greats * 60 + res.goods * 30 + res.misses * -20) /\r\n                (perfects + res.greats + res.goods + res.bads + res.misses)) *\r\n                100\r\n            ) / 100\r\n          : null;\r\n        return {\r\n          playerId: res.player,\r\n          nickname: data.players[res.player].nickname,\r\n          nicknameArcade: data.players[res.player].arcade_name,\r\n          originalChartMix: res.originalChartMix,\r\n          originalChartLabel: res.originalChartLabel,\r\n          originalScore: res.originalScore,\r\n          date: res.gained,\r\n          dateObject: new Date(res.gained),\r\n          grade: res.grade,\r\n          isExactDate: !!res.exact_gain_date,\r\n          score: res.score,\r\n          perfect: res.perfects,\r\n          great: res.greats,\r\n          good: res.goods,\r\n          bad: res.bads,\r\n          miss: res.misses,\r\n          combo: res.max_combo,\r\n          mods: res.mods_list,\r\n          isRank: !!res.rank_mode,\r\n          accuracy: acc < 0 ? 0 : acc,\r\n        };\r\n      }),\r\n    })),\r\n    _.map(song => {\r\n      return {\r\n        ...song,\r\n        latestScoreDate: song.results.reduce(\r\n          (latest, current) => (current.date > latest ? current.date : latest),\r\n          song.results[0].date\r\n        ),\r\n        results: song.results.map(res => ({\r\n          ...res,\r\n          hasRankScore: _.some({ playerId: res.playerId, isRank: true }, song.results),\r\n        })),\r\n      };\r\n    }),\r\n    _.orderBy(['latestScoreDate', 'song', 'chartLevel'], ['desc', 'asc', 'desc'])\r\n  )(data);\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n        players: action.players,\r\n      };\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTopScores = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await fetchJson({\r\n        url: `${HOST}/top/v2`,\r\n      });\r\n      // const data = jsonData;\r\n      const processedData = preprocessData(data);\r\n      dispatch({ type: SUCCESS, data: processedData, players: _.values(data.players) });\r\n      const rankings = getRankings(processedData, data);\r\n      dispatch(setRankings(rankings));\r\n      const profiles = getProfiles(processedData, rankings);\r\n      dispatch(setProfiles(profiles));\r\n      return processedData;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\nexport const resetFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n","export const HOST = 'https://vps720616.ovh.net:5000';\r\n","import React from 'react';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport moment from 'moment';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\n\r\nconst timeStyle = {\r\n  flavour: 'long',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nexport const tooltipFormatter = date => date.toLocaleDateString();\r\nexport const tooltipFormatterForBests = date => (\r\n  <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n    <div>точная дата взятия неизвестна</div>\r\n    <div>скор был записан с my best или machine best</div>\r\n    <div>дата записи: {date.toLocaleDateString()}</div>\r\n  </div>\r\n);\r\n\r\nconst nowDate = new Date();\r\nexport const getTimeAgo = date => {\r\n  const strTimeAgo = timeAgo.format(date, timeStyle);\r\n  if (!strTimeAgo) {\r\n    const dayDiff = moment(nowDate)\r\n      .startOf('day')\r\n      .diff(moment(date).startOf('day'), 'days');\r\n    return dayDiff === 0 ? 'сегодня' : dayDiff === 1 ? 'вчера' : '';\r\n  } else {\r\n    return strTimeAgo;\r\n  }\r\n};\r\n","export const colorsArray = [\r\n  '#FF6633',\r\n  '#66991A',\r\n  '#6666FF',\r\n  '#E6B333',\r\n  '#CC80CC',\r\n  '#E64D66',\r\n  '#4DB3FF',\r\n  '#99E6E6',\r\n  '#99FF99',\r\n  '#FFFF99',\r\n  '#FFB399',\r\n  '#809900',\r\n  '#00B3E6',\r\n  '#3366E6',\r\n  '#999966',\r\n  '#B34D4D',\r\n  '#80B300',\r\n  '#E6B3B3',\r\n  '#6680B3',\r\n  '#66664D',\r\n  '#FF99E6',\r\n  '#CCFF1A',\r\n  '#FF1A66',\r\n  '#33FFCC',\r\n  '#4D8000',\r\n  '#B33300',\r\n  '#991AFF',\r\n  '#E666FF',\r\n  '#1AB399',\r\n  '#E666B3',\r\n  '#33991A',\r\n  '#4D8066',\r\n  '#CC9999',\r\n  '#B3B31A',\r\n  '#00E680',\r\n  '#E6331A',\r\n  '#809980',\r\n  '#E6FF80',\r\n  '#1AFF33',\r\n  '#999933',\r\n  '#FF3380',\r\n  '#CCCC00',\r\n  '#66E64D',\r\n  '#4D80CC',\r\n  '#9900B3',\r\n  '#4DB380',\r\n  '#FF4D4D',\r\n];\r\n","import _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport matchSorter from 'match-sorter';\r\n\r\nimport { SORT, CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nexport const playersSelector = createSelector(\r\n  state => state.top.data,\r\n  _.flow(\r\n    _.flatMap(_.get('results')),\r\n    _.map('nickname'),\r\n    _.uniq,\r\n    _.sortBy(_.toLower),\r\n    _.map(name => ({ label: name, value: name }))\r\n  )\r\n);\r\n\r\nconst filterCharts = (filter, rows) => {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filter);\r\n  const type = _.getOr(null, 'type', filter);\r\n\r\n  const filtered = _.flow(\r\n    _.filter(row => {\r\n      return (\r\n        row.chartLevel >= range[0] &&\r\n        row.chartLevel <= range[1] &&\r\n        (!type || type === row.chartType)\r\n      );\r\n    })\r\n  )(rows);\r\n  return filtered;\r\n};\r\n\r\nconst getFilteredData = (data, filter) => {\r\n  const names = _.map('value', filter.players);\r\n  const namesOr = _.map('value', filter.playersOr);\r\n  const namesNot = _.map('value', filter.playersNot);\r\n  const sortingType = _.get('value', filter.sortingType);\r\n  const protagonist = _.get('value', filter.protagonist);\r\n  const excludeAntagonists = _.map('value', filter.excludeAntagonists);\r\n\r\n  const defaultSorting = [_.orderBy(['latestScoreDate'], ['desc'])];\r\n  const protagonistSorting = [\r\n    _.filter(row => _.map('nickname', row.results).includes(protagonist)),\r\n    _.map(row => {\r\n      const protIndex = _.findIndex({ nickname: protagonist }, row.results);\r\n      const protScore = row.results[protIndex].score;\r\n      const enemies = _.flow([\r\n        _.take(protIndex),\r\n        _.uniqBy('nickname'),\r\n        _.remove(res => excludeAntagonists.includes(res.nickname) || res.score === protScore),\r\n      ])(row.results);\r\n      const distance = Math.sqrt(\r\n        _.reduce((dist, enemy) => dist + (enemy.score / protScore - 0.99) ** 2, 0, enemies)\r\n      );\r\n      return {\r\n        ...row,\r\n        distanceFromProtagonist: distance,\r\n      };\r\n    }),\r\n    _.orderBy(['distanceFromProtagonist'], ['desc']),\r\n  ];\r\n  const getScoreSorting = direction => [\r\n    _.filter(row => _.map('nickname', row.results).includes(protagonist)),\r\n    _.orderBy(\r\n      [\r\n        row => {\r\n          return _.getOr(\r\n            direction === 'asc' ? Infinity : -Infinity,\r\n            'ratingDiff',\r\n            _.find({ nickname: protagonist }, row.results)\r\n          );\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const sortingFunctions =\r\n    {\r\n      [SORT.DEFAULT]: defaultSorting,\r\n      [SORT.PROTAGONIST]: protagonistSorting,\r\n      [SORT.RANK_ASC]: getScoreSorting('asc'),\r\n      [SORT.RANK_DESC]: getScoreSorting('desc'),\r\n    }[sortingType] || defaultSorting;\r\n\r\n  return _.flow(\r\n    _.compact([\r\n      filter.chartRange && (items => filterCharts(filter.chartRange, items)),\r\n      !filter.showRank &&\r\n        _.map(row => ({ ...row, results: _.filter(res => !res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        filter.showOnlyRank &&\r\n        _.map(row => ({ ...row, results: _.filter(res => res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        !filter.showOnlyRank &&\r\n        !filter.showRankAndNorank &&\r\n        _.map(row => {\r\n          const occuredNames = [];\r\n          return {\r\n            ...row,\r\n            results: _.filter(res => {\r\n              const alreadyOccured = occuredNames.includes(res.nickname);\r\n              occuredNames.push(res.nickname);\r\n              return !alreadyOccured;\r\n            }, row.results),\r\n          };\r\n        }),\r\n      (names.length || namesOr.length || namesNot.length) &&\r\n        _.filter(row => {\r\n          const rowNames = _.map('nickname', row.results);\r\n          return (\r\n            (!names.length || _.every(name => rowNames.includes(name), names)) &&\r\n            (!namesOr.length || _.some(name => rowNames.includes(name), namesOr)) &&\r\n            (!namesNot.length || !_.some(name => rowNames.includes(name), namesNot))\r\n          );\r\n        }),\r\n      _.filter(row => _.size(row.results)),\r\n      ...sortingFunctions,\r\n      filter.song && (items => matchSorter(items, filter.song, { keys: ['song'] })),\r\n      _.map(song => {\r\n        let topPlace = 1;\r\n        const occuredNicknames = [];\r\n        return {\r\n          ...song,\r\n          results: song.results.map((res, index) => {\r\n            const isSecondOccurenceInResults = occuredNicknames.includes(res.nickname);\r\n            occuredNicknames.push(res.nickname);\r\n            if (index === 0) {\r\n              topPlace = 1;\r\n            } else if (\r\n              !isSecondOccurenceInResults &&\r\n              res.score !== _.get([index - 1, 'score'], song.results)\r\n            ) {\r\n              topPlace += 1;\r\n            }\r\n            return {\r\n              ...res,\r\n              topPlace,\r\n              isSecondOccurenceInResults,\r\n            };\r\n          }),\r\n        };\r\n      }),\r\n    ])\r\n  )(data);\r\n};\r\n\r\nexport const filteredDataSelector = createSelector(\r\n  state => state.top.data,\r\n  state => state.top.filter,\r\n  getFilteredData\r\n);\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash/fp';\r\nimport Select from 'react-select';\r\nimport classNames from 'classnames';\r\nimport numeral from 'numeral';\r\nimport localForage from 'localforage';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport { FaRedoAlt, FaExclamationTriangle, FaSearch, FaYoutube } from 'react-icons/fa';\r\n\r\n// styles\r\nimport 'react-responsive-ui/style.css';\r\nimport './leaderboard.scss';\r\n\r\n// components\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport CollapsibleBar from 'components/Shared/CollapsibleBar';\r\nimport ChartFilter from './ChartFilter';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\nimport { SORT } from 'constants/leaderboard';\r\nimport { DEBUG } from 'constants/env';\r\n\r\n// reducers\r\nimport { fetchTopScores, setFilter, resetFilter, defaultFilter } from 'reducers/top';\r\n\r\n// utils\r\nimport { tooltipFormatter, tooltipFormatterForBests, getTimeAgo } from 'utils/leaderboards';\r\nimport { colorsArray } from 'utils/colors';\r\nimport { playersSelector, filteredDataSelector } from './selectors';\r\n\r\n// code\r\nconst sortingOptions = [\r\n  {\r\n    label: 'новизне скоров',\r\n    value: SORT.DEFAULT,\r\n  },\r\n  {\r\n    label: 'отставанию от остальных',\r\n    value: SORT.PROTAGONIST,\r\n  },\r\n  ...(DEBUG\r\n    ? [\r\n        {\r\n          label: 'от худших результатов',\r\n          value: SORT.RANK_ASC,\r\n        },\r\n        {\r\n          label: 'от лучших результатов',\r\n          value: SORT.RANK_DESC,\r\n        },\r\n      ]\r\n    : []),\r\n];\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    players: playersSelector(state),\r\n    filteredData: filteredDataSelector(state),\r\n    data: state.top.data,\r\n    filter: state.top.filter,\r\n    error: state.top.error,\r\n    isLoading: state.top.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopScores,\r\n  setFilter,\r\n  resetFilter,\r\n};\r\n\r\nclass Leaderboard extends Component {\r\n  static propTypes = {\r\n    match: toBe.object,\r\n    data: toBe.array,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  state = { showItemsCount: 20 };\r\n\r\n  setFilter = _.curry((name, value) => {\r\n    const filter = { ...this.props.filter, [name]: value };\r\n    this.props.setFilter(filter);\r\n    localForage.setItem('filter', filter);\r\n  });\r\n\r\n  resetFilter = () => {\r\n    this.props.resetFilter();\r\n    localForage.setItem('filter', defaultFilter);\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchTopScores();\r\n  };\r\n\r\n  renderSimpleSearch() {\r\n    const { isLoading, filter } = this.props;\r\n    return (\r\n      <div className=\"simple-search\">\r\n        <div className=\"song-name _margin-right _margin-bottom\">\r\n          <Input\r\n            value={filter.song || ''}\r\n            placeholder=\"название песни...\"\r\n            className=\"form-control\"\r\n            onChange={this.setFilter('song')}\r\n          />\r\n        </div>\r\n        <div className=\"chart-range _margin-right _margin-bottom\">\r\n          <ChartFilter filterValue={filter.chartRange} onChange={this.setFilter('chartRange')} />\r\n        </div>\r\n        <div className=\"_flex-fill\" />\r\n        <div className=\"_flex-row _margin-bottom\">\r\n          <button className=\"btn btn-sm btn-dark btn-icon _margin-right\" onClick={this.resetFilter}>\r\n            <FaRedoAlt /> сбросить фильтры\r\n          </button>\r\n          <button\r\n            disabled={isLoading}\r\n            className=\"btn btn-sm btn-dark btn-icon\"\r\n            onClick={this.onRefresh}\r\n          >\r\n            <FaSearch /> обновить\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFilters() {\r\n    const { players, filter } = this.props;\r\n\r\n    return (\r\n      <div className=\"filters\">\r\n        <div className=\"people-filters\">\r\n          <label className=\"label\">показывать чарты, которые сыграл:</label>\r\n          <div className=\"players-block\">\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">каждый из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'players', filter)}\r\n                onChange={this.setFilter('players')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и хоть один из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersOr', filter)}\r\n                onChange={this.setFilter('playersOr')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и никто из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersNot', filter)}\r\n                onChange={this.setFilter('playersNot')}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Toggle\r\n            checked={_.getOr(false, 'showRank', filter)}\r\n            onChange={this.setFilter('showRank')}\r\n          >\r\n            показывать скоры на ранке\r\n          </Toggle>\r\n        </div>\r\n        {_.get('showRank', filter) && (\r\n          <>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showOnlyRank', filter)}\r\n                onChange={value => {\r\n                  this.setFilter('showOnlyRank', value);\r\n                  if (_.get('showRankAndNorank', filter)) {\r\n                    this.setFilter('showRankAndNorank', false);\r\n                  }\r\n                }}\r\n              >\r\n                <strong>только</strong> на ранке\r\n              </Toggle>\r\n            </div>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showRankAndNorank', filter)}\r\n                onChange={value => {\r\n                  this.setFilter('showRankAndNorank', value);\r\n                  if (_.get('showOnlyRank', filter)) {\r\n                    this.setFilter('showOnlyRank', false);\r\n                  }\r\n                }}\r\n              >\r\n                показывать лучшие скоры с ранком и без\r\n              </Toggle>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSortings() {\r\n    const { players, filter } = this.props;\r\n    return (\r\n      <div className=\"sortings\">\r\n        <div>\r\n          <label className=\"label\">сортировать по</label>\r\n          <Select\r\n            placeholder=\"выберите сортировку\"\r\n            className=\"select\"\r\n            classNamePrefix=\"select\"\r\n            clearable={false}\r\n            options={sortingOptions}\r\n            value={_.getOr(sortingOptions[0], 'sortingType', filter)}\r\n            onChange={this.setFilter('sortingType')}\r\n          />\r\n        </div>\r\n        {[SORT.PROTAGONIST, SORT.RANK_ASC, SORT.RANK_DESC].includes(\r\n          _.get('sortingType.value', filter)\r\n        ) && (\r\n          <div>\r\n            <label className=\"label\">протагонист (кого сравнивать с остальными):</label>\r\n            <Select\r\n              className={classNames('select players', {\r\n                'red-border': !_.get('protagonist', filter),\r\n              })}\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              value={_.getOr(null, 'protagonist', filter)}\r\n              onChange={this.setFilter('protagonist')}\r\n            />\r\n          </div>\r\n        )}\r\n        {[SORT.PROTAGONIST].includes(_.get('sortingType.value', filter)) && (\r\n          <div>\r\n            <label className=\"label\">не учитывать в сравнении:</label>\r\n            <Select\r\n              closeMenuOnSelect={false}\r\n              className=\"select players\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              isMulti\r\n              value={_.getOr([], 'excludeAntagonists', filter)}\r\n              onChange={this.setFilter('excludeAntagonists')}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, filteredData, error, filter } = this.props;\r\n    const { showItemsCount } = this.state;\r\n    const canShowMore = filteredData.length > showItemsCount;\r\n    const visibleData = _.slice(0, showItemsCount, filteredData);\r\n\r\n    const uniqueSelectedNames = _.slice(\r\n      0,\r\n      colorsArray.length,\r\n      _.uniq(\r\n        _.compact([\r\n          _.get('sortingType.value', filter) === SORT.PROTAGONIST &&\r\n            _.get('protagonist.value', filter),\r\n          ..._.map('value', filter.players),\r\n          ..._.map('value', filter.playersOr),\r\n        ])\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div className=\"leaderboard-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"search-block\">\r\n            {this.renderSimpleSearch()}\r\n            <CollapsibleBar title=\"фильтры\">{this.renderFilters()}</CollapsibleBar>\r\n            <CollapsibleBar title=\"сортировка\">{this.renderSortings()}</CollapsibleBar>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          <div className=\"top-list\">\r\n            {_.isEmpty(filteredData) && !isLoading && 'ничего не найдено'}\r\n            {!isLoading &&\r\n              visibleData.map((chart, chartIndex) => {\r\n                return (\r\n                  <div className=\"song-block\" key={chart.song + chart.chartLabel}>\r\n                    <div className=\"song-name\">\r\n                      <div\r\n                        className={classNames('chart-name', {\r\n                          single: chart.chartType === 'S',\r\n                        })}\r\n                      >\r\n                        <span className=\"chart-letter\">{chart.chartType}</span>\r\n                        <span className=\"chart-number\">{chart.chartLevel}</span>\r\n                      </div>\r\n                      <div>{chart.song}</div>\r\n                      <div className=\"youtube-link\">\r\n                        <a\r\n                          href={`https://youtube.com/results?search_query=${chart.song.replace(\r\n                            / /g,\r\n                            '+'\r\n                          )}+${chart.chartLabel}`}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          <FaYoutube />\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"charts\">\r\n                      <div className=\"chart\">\r\n                        <div className=\"results\">\r\n                          <table>\r\n                            {chartIndex === 0 && (\r\n                              <thead>\r\n                                <tr>\r\n                                  <th className=\"place\"></th>\r\n                                  <th className=\"nickname\"></th>\r\n                                  <th className=\"rank\"></th>\r\n                                  <th className=\"score\">score</th>\r\n                                  <th className=\"grade\"></th>\r\n                                  <th className=\"number\">miss</th>\r\n                                  <th className=\"number\">bad</th>\r\n                                  <th className=\"number\">good</th>\r\n                                  <th className=\"number\">great</th>\r\n                                  <th className=\"number\">perfect</th>\r\n                                  <th className=\"combo\">combo</th>\r\n                                  <th className=\"accuracy\">accuracy</th>\r\n                                  <th className=\"date\"></th>\r\n                                </tr>\r\n                              </thead>\r\n                            )}\r\n                            <tbody>\r\n                              {chart.results.map(res => {\r\n                                const nameIndex = uniqueSelectedNames.indexOf(res.nickname);\r\n                                return (\r\n                                  <tr\r\n                                    key={res.score + res.nickname}\r\n                                    className={classNames({\r\n                                      empty: !res.isExactDate,\r\n                                      latest: res.date === chart.latestScoreDate,\r\n                                    })}\r\n                                  >\r\n                                    <td className=\"place\">\r\n                                      {res.isSecondOccurenceInResults ? '' : `#${res.topPlace}`}\r\n                                    </td>\r\n                                    <td\r\n                                      className=\"nickname\"\r\n                                      style={\r\n                                        nameIndex > -1\r\n                                          ? { fontWeight: 'bold', color: colorsArray[nameIndex] }\r\n                                          : {}\r\n                                      }\r\n                                    >\r\n                                      {res.nickname}\r\n\r\n                                      {DEBUG && (\r\n                                        <span>\r\n                                          {' '}\r\n                                          {res.startingRating &&\r\n                                            Math.round(res.startingRating)}{' '}\r\n                                          {res.ratingDiff && Math.round(res.ratingDiff)}{' '}\r\n                                          {res.ratingDiffLast && Math.round(res.ratingDiffLast)}\r\n                                        </span>\r\n                                      )}\r\n\r\n                                      {_.get('sortingType.value', filter) === SORT.PROTAGONIST &&\r\n                                        res.nickname === _.get('protagonist.value', filter) &&\r\n                                        chart.distanceFromProtagonist > 0 && (\r\n                                          <span className=\"protagonist-diff\">\r\n                                            {' '}\r\n                                            -{(chart.distanceFromProtagonist * 100).toFixed(1)}%\r\n                                          </span>\r\n                                        )}\r\n                                    </td>\r\n                                    <td className={classNames('rank', { vj: res.isRank })}>\r\n                                      {res.isRank && (\r\n                                        <div className=\"inner-vj\">\r\n                                          {res.isExactDate ? (\r\n                                            'VJ'\r\n                                          ) : (\r\n                                            <Tooltip\r\n                                              content={\r\n                                                <>\r\n                                                  <div>\r\n                                                    наличие ранка на этом результате было угадано,\r\n                                                    основываясь на скоре\r\n                                                  </div>\r\n                                                </>\r\n                                              }\r\n                                              tooltipClassName=\"timeago-tooltip\"\r\n                                            >\r\n                                              VJ?\r\n                                            </Tooltip>\r\n                                          )}\r\n                                        </div>\r\n                                      )}\r\n                                    </td>\r\n                                    <td className=\"score\">\r\n                                      <Overlay\r\n                                        overlayClassName=\"score-overlay-outer\"\r\n                                        overlayItem={\r\n                                          <span>{numeral(res.score).format('0,0')}</span>\r\n                                        }\r\n                                        placement=\"top\"\r\n                                      >\r\n                                        <div className=\"score-overlay\">\r\n                                          <div>\r\n                                            <span className=\"_grey\">игрок: </span>\r\n                                            <NavLink\r\n                                              exact\r\n                                              to={routes.profile.getPath({ name: res.nickname })}\r\n                                            >\r\n                                              {res.nickname} ({res.nicknameArcade})\r\n                                            </NavLink>\r\n                                          </div>\r\n                                          {!res.isExactDate && (\r\n                                            <div className=\"warning\">\r\n                                              <FaExclamationTriangle />\r\n                                              рекорд взят с my best. часть данных недоступна\r\n                                            </div>\r\n                                          )}\r\n                                          {res.isExactDate && (\r\n                                            <>\r\n                                              <div>\r\n                                                <span className=\"_grey\">моды: </span>\r\n                                                {res.mods || '—'}\r\n                                              </div>\r\n                                              {res.originalChartMix && (\r\n                                                <div>\r\n                                                  <div className=\"warning\">\r\n                                                    <FaExclamationTriangle />\r\n                                                    было сыграно на {res.originalChartMix}\r\n                                                  </div>\r\n                                                  {res.originalChartLabel && (\r\n                                                    <div>\r\n                                                      <span className=\"_grey\">\r\n                                                        оригинальный чарт:{' '}\r\n                                                      </span>\r\n                                                      {res.originalChartLabel}\r\n                                                    </div>\r\n                                                  )}\r\n                                                  {res.originalScore && (\r\n                                                    <div>\r\n                                                      <span className=\"_grey\">\r\n                                                        оригинальный скор:{' '}\r\n                                                      </span>\r\n                                                      {res.originalScore}\r\n                                                    </div>\r\n                                                  )}\r\n                                                </div>\r\n                                              )}\r\n                                            </>\r\n                                          )}\r\n                                        </div>\r\n                                      </Overlay>\r\n                                    </td>\r\n                                    <td className=\"grade\">\r\n                                      <div className=\"img-holder\">\r\n                                        {res.grade && res.grade !== '?' && (\r\n                                          <img\r\n                                            src={`${process.env.PUBLIC_URL}/grades/${res.grade}.png`}\r\n                                            alt={res.grade}\r\n                                          />\r\n                                        )}\r\n                                        {res.grade === '?' && null}\r\n                                      </div>\r\n                                    </td>\r\n                                    <td className=\"number miss\">{res.miss}</td>\r\n                                    <td className=\"number bad\">{res.bad}</td>\r\n                                    <td className=\"number good\">{res.good}</td>\r\n                                    <td className=\"number great\">{res.great}</td>\r\n                                    <td className=\"number perfect\">{res.perfect}</td>\r\n                                    <td className=\"combo\">\r\n                                      {res.combo}\r\n                                      {res.combo ? 'x' : ''}\r\n                                    </td>\r\n                                    <td className=\"accuracy\">\r\n                                      {res.accuracy}\r\n                                      {res.accuracy ? '%' : ''}\r\n                                    </td>\r\n                                    <td\r\n                                      className={classNames('date', {\r\n                                        latest: res.date === chart.latestScoreDate,\r\n                                      })}\r\n                                    >\r\n                                      <Tooltip\r\n                                        content={\r\n                                          res.isExactDate\r\n                                            ? tooltipFormatter(res.dateObject)\r\n                                            : tooltipFormatterForBests(res.dateObject)\r\n                                        }\r\n                                        tooltipClassName=\"timeago-tooltip\"\r\n                                      >\r\n                                        {getTimeAgo(res.dateObject)}\r\n                                        {res.isExactDate ? '' : '?'}\r\n                                      </Tooltip>\r\n                                    </td>\r\n                                  </tr>\r\n                                );\r\n                              })}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            {!isLoading && canShowMore && (\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() =>\r\n                  this.setState(state => ({ showItemsCount: state.showItemsCount + 10 }))\r\n                }\r\n              >\r\n                show more...\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Leaderboard);\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\nimport numeral from 'numeral';\r\nimport classNames from 'classnames';\r\nimport { GiQueenCrown } from 'react-icons/gi';\r\nimport { FaAngleDoubleUp, FaAngleDoubleDown } from 'react-icons/fa';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nconst getGradeImg = grade => (\r\n  <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n);\r\n\r\nexport default function RankingList({ ranking, isLoading }) {\r\n  return (\r\n    <div className=\"ranking-list\">\r\n      {_.isEmpty(ranking) && !isLoading && 'ничего не найдено'}\r\n      {isLoading && <Loader />}\r\n      {!isLoading && (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"place\"></th>\r\n              <th className=\"change\"></th>\r\n              <th className=\"name\">name</th>\r\n              <th className=\"rating\">elo</th>\r\n              <th className=\"total-score\">total score</th>\r\n              <th className=\"grades sss\">{getGradeImg('SSS')}</th>\r\n              <th className=\"grades ss\">{getGradeImg('SS')}</th>\r\n              <th className=\"grades s\">{getGradeImg('S')}</th>\r\n              <th className=\"grades a\">{getGradeImg('A+')}</th>\r\n              <th className=\"grades b\">{getGradeImg('B')}</th>\r\n              <th className=\"grades c\">{getGradeImg('C')}</th>\r\n              <th className=\"grades d\">{getGradeImg('D')}</th>\r\n              <th className=\"grades f\">{getGradeImg('F')}</th>\r\n              <th className=\"playcount\">scores</th>\r\n              <th className=\"accuracy\">accuracy</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {ranking.map((player, playerIndex) => {\r\n              return (\r\n                <tr className=\"player\" key={player.name}>\r\n                  <td className=\"place\">\r\n                    {playerIndex === 0 ? <GiQueenCrown /> : `#${playerIndex + 1}`}\r\n                  </td>\r\n                  <td className=\"change\">\r\n                    {player.change > 0 && (\r\n                      <div className=\"change-holder up\">\r\n                        <span>{player.change}</span>\r\n                        <FaAngleDoubleUp />\r\n                      </div>\r\n                    )}\r\n                    {player.change < 0 && (\r\n                      <div className=\"change-holder down\">\r\n                        <span>{-player.change}</span>\r\n                        <FaAngleDoubleDown />\r\n                      </div>\r\n                    )}\r\n                    {!!player.change && _.isString(player.change) && (\r\n                      <div className=\"change-holder text\">\r\n                        <span>{player.change}</span>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"name\">\r\n                    <NavLink exact to={routes.profile.getPath({ name: player.name })}>\r\n                      {player.name}\r\n                    </NavLink>\r\n                  </td>\r\n                  <td className=\"rating\">\r\n                    {player.rating}{' '}\r\n                    {!!player.prevRating && player.prevRating !== player.rating && (\r\n                      <span\r\n                        className={classNames('rating-change', {\r\n                          down: player.prevRating > player.rating,\r\n                          up: player.prevRating < player.rating,\r\n                        })}\r\n                      >\r\n                        {player.prevRating < player.rating ? '+' : ''}\r\n                        {player.rating - player.prevRating}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"total-score\">\r\n                    <div>S: {numeral(player.totalScore.S).format('0,0')}</div>\r\n                    <div>D: {numeral(player.totalScore.D).format('0,0')}</div>\r\n                  </td>\r\n                  <td className=\"grades sss\">{player.grades.SSS}</td>\r\n                  <td className=\"grades ss\">{player.grades.SS}</td>\r\n                  <td className=\"grades s\">{player.grades.S}</td>\r\n                  <td className=\"grades a\">{player.grades.A}</td>\r\n                  <td className=\"grades b\">{player.grades.B}</td>\r\n                  <td className=\"grades c\">{player.grades.C}</td>\r\n                  <td className=\"grades d\">{player.grades.D}</td>\r\n                  <td className=\"grades f\">{player.grades.F}</td>\r\n                  <td className=\"playcount\">{player.count}</td>\r\n                  <td className=\"accuracy\">{player.accuracy ? `${player.accuracy}%` : ''}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function RankingFaq() {\r\n  return (\r\n    <div className=\"faq\">\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Как считается рейтинг?</div>\r\n        <div className=\"answer\">\r\n          A: Используется <a href=\"https://en.wikipedia.org/wiki/Elo_rating_system\">рейтинг Эло</a>,\r\n          широко используемый в шахматах и других играх, слегка модицированный под условия игры на\r\n          пампе. Средний рейтинг - 1000. Коэффициент К зависит от уровня чарта (более сложные чарты\r\n          сильнее влияют на рейтинг). Количество очков влияет на заработанный рейтинг (маленький\r\n          отрыв от противника не даст так много очков как большой отрыв).\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Система Эло используется для игр 1 на 1, как она используется на пампе, где на одном\r\n          чарте играет много игроков?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: Рекорды на одном чарте делятся на несколько игр 1 на 1. Если есть 3 игрока: A, B, C; то\r\n          считается, что было 3 отдельные игры: A vs B, A vs C, B vs C.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Учитываются ли рекорды на ранке в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: Да. Как минимум потому что у нас есть много рекордов, взятых с машин бестов, и мы не\r\n          знаем наверняка, на ранке они или нет. Если у игрока в топе есть два скора - на ранке и\r\n          без ранка, используется тот, где больше очков.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Почему меня нет в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: В таблицу попадают только те, у кого есть хотя бы 20 игр 1 на 1. Первые 20 игр\r\n          используются для определения изначального рейтинга.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Почему суммарное количество оценок S-A-B не совпадает с общим количеством скоров?\r\n        </div>\r\n        <div className=\"answer\">A: Не для каждого результата известна оценка.</div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Если у меня есть несколько рекордов на А, несколько на А+, как считается суммарное\r\n          количество грейдов в таблице?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: В каждой колонке учитываются обе буквы - и треснутые, и с удержанным лайфом. То есть и\r\n          А, и А+ идут в колонку А. Точно так же для B, C, D.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Убери аккураси из таблицы!</div>\r\n        <div className=\"answer\">A: Грем, это секция для вопросов.</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle } from 'react-icons/fa';\r\nimport { Link, Route, withRouter } from 'react-router-dom';\r\n\r\n// styles\r\nimport 'react-responsive-ui/style.css';\r\nimport './ranking.scss';\r\n\r\n// components\r\nimport RankingList from './RankingList';\r\nimport RankingFaq from './RankingFaq';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport { fetchTopScores } from 'reducers/top';\r\n\r\n// utils\r\n\r\n// code\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ranking: state.ranking.data,\r\n    error: state.top.error,\r\n    isLoading: state.top.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopScores,\r\n};\r\n\r\nclass Ranking extends Component {\r\n  static propTypes = {\r\n    ranking: toBe.array,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    ranking: [],\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchTopScores();\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, ranking, error } = this.props;\r\n\r\n    return (\r\n      <div className=\"ranking-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.path}\r\n              render={() => (\r\n                <>\r\n                  <Link to={routes.ranking.faq.path}>\r\n                    <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n                      <FaQuestionCircle /> faq\r\n                    </button>\r\n                  </Link>\r\n                  <button\r\n                    disabled={isLoading}\r\n                    className=\"btn btn-sm btn-dark btn-icon\"\r\n                    onClick={this.onRefresh}\r\n                  >\r\n                    <FaSearch /> обновить\r\n                  </button>\r\n                </>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.faq.path}\r\n              render={() => (\r\n                <Link to={routes.ranking.path}>\r\n                  <button className=\"btn btn-sm btn-dark btn-icon\">назад</button>\r\n                </Link>\r\n              )}\r\n            />\r\n          </div>\r\n          <Route\r\n            exact\r\n            path={routes.ranking.path}\r\n            render={() => <RankingList ranking={ranking} isLoading={isLoading} />}\r\n          />\r\n          <Route exact path={routes.ranking.faq.path} component={RankingFaq} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Ranking));\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ReferenceLine,\r\n  CartesianGrid,\r\n  Line,\r\n  Brush,\r\n} from 'recharts';\r\nimport _ from 'lodash/fp';\r\nimport moment from 'moment';\r\n\r\n// styles\r\nimport 'react-responsive-ui/style.css';\r\nimport './profile.scss';\r\n// import 'react-vis/dist/style.css';\r\n\r\n// constants\r\n\r\n// reducers\r\nimport { fetchTopScores } from 'reducers/top';\r\n\r\n// utils\r\n\r\n// code\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    profile: state.profiles.data[props.match.params.name],\r\n    error: state.top.error,\r\n    isLoading: state.top.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopScores,\r\n};\r\n\r\nclass Profile extends Component {\r\n  static propTypes = {\r\n    profile: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    profile: {},\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchTopScores();\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, profile, error, match } = this.props;\r\n    if (_.isEmpty(profile)) {\r\n      return null;\r\n    }\r\n    // console.log(match, profile);\r\n    const levelsData = _.flow(\r\n      _.get('resultsByLevel'),\r\n      _.toPairs,\r\n      _.map(([x, y]) => ({\r\n        x: _.toInteger(x),\r\n        S: _.size(_.filter(res => res.chart.chartType === 'S', y)),\r\n        D: -_.size(_.filter(res => res.chart.chartType === 'D', y)),\r\n      }))\r\n    )(profile);\r\n\r\n    let brushData = [];\r\n    let historyTicks = [];\r\n    const lastTick = _.last(profile.rankingHistory).date;\r\n    const firstTick = _.first(profile.rankingHistory).date;\r\n    for (let date = moment(firstTick); date.isBefore(lastTick); date.add(1, 'day')) {\r\n      brushData.push({ date: date.valueOf() });\r\n    }\r\n    for (let date = moment(lastTick); date.isAfter(firstTick); date.subtract(1, 'month')) {\r\n      historyTicks = [date.valueOf(), ...historyTicks];\r\n    }\r\n    const placesData = _.flow(\r\n      items => {\r\n        const newItems = items.map((item, index) => {\r\n          if (index > 0 && items[index - 1].date < item.date - 24 * 60 * 60 * 1000) {\r\n            return [\r\n              ..._.map(\r\n                it => ({ date: it.date, place: items[index - 1].place }),\r\n                _.filter(\r\n                  ({ date: tick }) => tick > items[index - 1].date && tick < item.date,\r\n                  brushData\r\n                )\r\n              ),\r\n              item,\r\n            ];\r\n          }\r\n          return item;\r\n        });\r\n        return _.flatten(newItems);\r\n      },\r\n      _.map(item => ({\r\n        ...item,\r\n        dateRounded: Math.round(item.date / 1000 / 60 / 60 / 24),\r\n      }))\r\n    )(profile.rankingHistory);\r\n    return (\r\n      <div className=\"profile-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <div className=\"beta\">страница в бета-версии</div>\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"btn btn-sm btn-dark btn-icon\"\r\n              onClick={this.onRefresh}\r\n            >\r\n              <FaSearch /> обновить\r\n            </button>\r\n          </div>\r\n          <div className=\"profile\">\r\n            <div className=\"profile-header\">\r\n              <div className=\"profile-name\">{match.params.name}</div>\r\n            </div>\r\n            <div className=\"levels-chart\">\r\n              <BarChart\r\n                height={300}\r\n                width={800}\r\n                data={levelsData}\r\n                stackOffset=\"sign\"\r\n                margin={{\r\n                  top: 5,\r\n                  right: 30,\r\n                  left: 20,\r\n                  bottom: 5,\r\n                }}\r\n              >\r\n                <XAxis dataKey=\"x\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <ReferenceLine y={0} stroke=\"#555\" />\r\n                <Bar dataKey=\"D\" fill=\"#169c16\" stackId=\"stack\" />\r\n                <Bar dataKey=\"S\" fill=\"#af2928\" stackId=\"stack\" />\r\n              </BarChart>\r\n            </div>\r\n            <div className=\"history-chart\">\r\n              <LineChart\r\n                height={300}\r\n                width={800}\r\n                data={placesData}\r\n                margin={{\r\n                  top: 5,\r\n                  right: 30,\r\n                  left: 20,\r\n                  bottom: 5,\r\n                }}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis\r\n                  dataKey=\"dateRounded\"\r\n                  type=\"number\"\r\n                  domain={['dataMin', 'dataMax']}\r\n                  tickFormatter={value =>\r\n                    new Date(value * 24 * 60 * 60 * 1000).toLocaleDateString()\r\n                  }\r\n                />\r\n                <YAxis\r\n                  allowDecimals={false}\r\n                  domain={[1, dataMax => (dataMax < 3 ? dataMax + 2 : dataMax + 1)]}\r\n                  interval={0}\r\n                  reversed\r\n                />\r\n                <Tooltip\r\n                  isAnimationActive={false}\r\n                  content={({ active, payload, label }) => {\r\n                    if (!payload || !payload[0]) {\r\n                      return null;\r\n                    }\r\n                    return (\r\n                      <div className=\"history-tooltip\">\r\n                        <div>{new Date(payload[0].payload.date).toLocaleDateString()}</div>\r\n                        {payload && payload[0] && <div>Place: #{payload[0].value}</div>}\r\n                      </div>\r\n                    );\r\n                  }}\r\n                />\r\n                <Line\r\n                  isAnimationActive={false}\r\n                  type=\"stepAfter\"\r\n                  dataKey=\"place\"\r\n                  stroke=\"#8884d8\"\r\n                  strokeWidth={3}\r\n                  dot={false}\r\n                />\r\n                <Brush\r\n                  data={brushData}\r\n                  dataKey=\"date\"\r\n                  height={40}\r\n                  stroke=\"#8884d8\"\r\n                  travellerWidth={20}\r\n                  tickFormatter={value => new Date(value).toLocaleDateString()}\r\n                />\r\n              </LineChart>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Profile));\r\n","import React, { Component } from 'react';\r\n// import toBe from 'prop-types';\r\n// import classNames from 'classnames';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './top-bar.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nclass TopBar extends Component {\r\n  static propTypes = {};\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"top-bar\">\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <NavLink exact to={routes.leaderboard.path}>\r\n                leaderboard\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink exact to={routes.ranking.path}>\r\n                ranking\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopBar;\r\n","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport './App.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport Leaderboard from 'components/Leaderboard/Leaderboard';\r\nimport Ranking from 'components/Ranking/Ranking';\r\nimport Profile from 'components/Profile/Profile';\r\nimport TopBar from 'components/Shared/TopBar/TopBar';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <TopBar />\r\n        <Route exact path=\"/\" render={() => <Redirect to={routes.leaderboard.path} />} />\r\n        <Route path={routes.leaderboard.path} component={Leaderboard} />\r\n        <Route path={routes.ranking.path} component={Ranking} />\r\n        <Route path={routes.profile.path} component={Profile} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport top from 'reducers/top';\r\nimport ranking from 'reducers/ranking';\r\nimport profiles from 'reducers/profiles';\r\n\r\nconst rootReducer = combineReducers({\r\n  top,\r\n  ranking,\r\n  profiles,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__\r\n    ? compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__({\r\n          stateSanitizer: state => ({\r\n            ...state,\r\n          }),\r\n        })\r\n      )\r\n    : applyMiddleware(thunk)\r\n);\r\n","import 'promise-polyfill';\r\nimport 'whatwg-fetch';\r\nimport 'utils/polyfills';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport localForage from 'localforage';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './index.scss';\r\nimport App from 'components/App';\r\n\r\nimport { CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nimport { store } from 'reducers';\r\nimport { fetchTopScores, setFilter } from 'reducers/top';\r\n\r\nlocalForage\r\n  .getItem('filter')\r\n  .then(filter => {\r\n    if (filter) {\r\n      store.dispatch(\r\n        setFilter({\r\n          ...filter,\r\n          chartRange: filter.chartRange && {\r\n            ...filter.chartRange,\r\n            range: _.every(\r\n              r => r >= CHART_MIN_MAX[0] && r <= CHART_MIN_MAX[1],\r\n              filter.chartRange.range\r\n            )\r\n              ? filter.chartRange.range\r\n              : CHART_MIN_MAX,\r\n          },\r\n        })\r\n      );\r\n    }\r\n  })\r\n  .catch(error => console.error('Cannot get filter from local storage', error));\r\n\r\nstore.dispatch(fetchTopScores());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}