{"version":3,"sources":["webpack:///./src/utils/workers/profilesPostProcess.js?f05c","utils/polyfills.js","constants/routes.js","constants/leaderboard.js","components/Shared/Loader/index.js","reducers/user/resetAction.js","utils/fetch.js","constants/backend.js","reducers/trackStats/mostPlayed.js","reducers/trackStats/mostPlayedMonth.js","reducers/trackStats/leastPlayed.js","utils/leaderboards.js","utils/date.js","components/SongsTop/SongsTop.js","components/Shared/ToggleButton/ToggleButton.js","components/Shared/Input/Input.js","components/Shared/Toggle/Toggle.js","components/Shared/CollapsibleBar/index.js","components/Shared/Overlay/Overlay.js","components/Shared/Range/index.js","components/Leaderboard/ChartFilter.js","utils/expRanks.js","utils/exp.js","utils/achievements.js","utils/score.js","utils/workers/profilesPostProcess.js","constants/env.js","reducers/results.js","reducers/presets.js","components/Leaderboard/PresetsControl.js","components/Shared/Flag/index.js","components/SocketTracker/helpers.js","utils/colors.js","components/Leaderboard/Result.js","components/Leaderboard/ChartLabel.js","components/Leaderboard/Chart.js","reducers/selectors.js","components/Leaderboard/Leaderboard.js","components/Ranking/RankingList.js","components/Ranking/RankingFaq.js","reducers/preferences.js","components/Ranking/Ranking.js","components/Profile/MostPlayed.js","components/Profile/ExpFaq.js","reducers/profiles.js","utils/profiles.js","components/Profile/Profile.js","components/ProfileCompare/ProfileCompare.js","reducers/user/index.js","reducers/login.js","components/Shared/TopBar/TopBar.js","components/LoginScreen/LoginScreen.js","constants/popups.js","reducers/popups.js","components/Shared/Popups/AchievementPopup.js","components/Shared/Popups/RankUpPopup.js","components/Shared/Popups/index.js","reducers/topPerSong.js","components/SocketTracker/PlayerCard.js","components/SocketTracker/SocketTracker.js","reducers/tracklist.js","components/App.js","reducers/trackStats/index.js","reducers/index.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","Number","isNaN","value","Math","sign","x","Array","prototype","findIndex","Object","defineProperty","predicate","this","TypeError","o","len","length","thisArg","arguments","k","kValue","call","configurable","writable","routes","leaderboard","path","sharedChart","getPath","params","sharedChartId","songs","ranking","faq","profile","id","compare","compareToId","SORT","DEFAULT","PROTAGONIST","RANK_ASC","RANK_DESC","PP_ASC","PP_DESC","NEW_SCORES_PLAYER","EASIEST_SONGS","HARDEST_SONGS","RANK_FILTER","SHOW_ALL","SHOW_BEST","SHOW_ONLY_RANK","SHOW_ONLY_NORANK","CHART_MIN_MAX","DURATION","STD","SHORT","REMIX","FULL","DURATION_DEFAULT","_","values","Loader","className","width","height","viewBox","xmlns","fill","cx","cy","r","attributeName","from","to","begin","dur","calcMode","repeatCount","fillOpacity","RESET","resetUser","type","fetchJson","url","request","method","postJson","body","JSON","stringify","headers","defaultHeaders","async","dispatch","getState","session","cookies","get","response","fetch","credentials","status","json","error","isObject","isString","Error","message","Promise","reject","HOST","SOCKET_SERVER_IP","LOADING","SUCCESS","ERROR","initialState","isLoading","data","TimeAgo","addLocale","ru","timeAgo","timeStyle","flavour","gradation","convenient","units","tooltipFormatter","result","isExactDate","dateObject","toLocaleDateString","resultType","undefined","isMyBest","isMachineBest","style","display","alignItems","flexDirection","getTimeAgo","date","dayDiff","moment","startOf","diff","hour","format","parseDate","textDate","toDate","Date","TopList","fetchList","title","renderRightSide","useState","setData","setLoading","getRightSide","item","countplay","useEffect","then","success","catch","map","index","key","classNames","best","full_name","leastPlayedRightSide","last_play","connect","fetchMostPlayed","fetchMostPlayedMonth","fetchLeastPlayed","ToggleButton","props","active","onToggle","text","onClick","React","PureComponent","Input","state","isNil","defaultValue","bindAll","prevProps","setState","e","newValue","target","onChange","numericValue","min","max","onBlur","handleBlur","omit","onKeyPress","handleKeyPress","onInput","handleChange","noop","Component","defaultProps","Toggle","constructor","super","checked","uniqueId","render","htmlFor","children","CollapsibleBar","open","defaultOpen","POPPER_MODIFIERS","preventOverflow","enabled","padding","boundariesElement","PLACEMENT_ARROW_MAPPING","right","left","top","bottom","getArrowPlacement","placement","split","Overlay","isVisible","containerItemRef","createRef","renderPopper","bind","toggleOverlayVisibility","event","closest","hideOverlay","ref","arrowProps","outOfBoundaries","scheduleUpdate","hideWhenOutOfBounds","data-placement","overlayClassName","overlayItem","Fragment","ReactDOM","createPortal","container","document","modifiers","referenceElement","current","defaultTypes","listensToClickOutside","Range","range","step","renderTrack","onMouseDown","onTouchStart","position","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","justifyContent","boxShadow","ChartFilter","filterValue","onChangeEx","getOr","duration","buttonText","t","isEqual","isEmpty","newMin","newMax","includes","without","ranks","threshold","iconName","color","gradeValue","F","D","C","B","A","S","SS","SSS","getExp","chart","isBestGradeOnChart","chartType","chartLevel","grade","getRankImg","rank","src","process","alt","achievements","icon","GiRank1","description","resultFunction","progress","combo","GiRank2","GiRank3","GiSmokingFinger","playedSongs","songsToPlay","song","uniq","GiRetroController","GiLoveSong","Улитка","GiSnail","charts","some","songToPlay","chartLabel","GiPodiumSecond","miss","bad","GiLifeBar","GiWoodenPegleg","good","great","initialAchievementState","getScoreWithoutBonus","score","postProcessProfiles","profiles","tracklist","mapValues","neededGrades","expRank","findLast","exp","expRanks","expRankNext","find","double","single","gradeIncrementMap","accuracyPointsRaw","keys","resultsByLevel","forEach","level","res","isRank","accuracyRaw","push","toNumber","thisGrade","thisPlayerId","playerId","otherResults","results","filter","sort","a","b","indexOf","gradeIncArray","gradeInc","l","g","prog","incrementLevel","number","minimumNumber","totalCharts","round","sqrt","getMinimumNumber","bonusCoefficientNumber","bonus","getBonusForLevel","achievementBonus","accuracy","countAcc","sumAccuracy","interpolateDifficulties","sharedCharts","debug","sums","size","accuracyPointsInterpolated","maxAccuracy","maxBy","y","maxLevelWithMaxAcc","points","regression","logarithmic","f","calculated","predict","yx","i","interpolatedPoint","pair","returnValue","interpolatedDifficulty","weight","abs","interpolation","identity","reduce","acc","diffSum","weightSum","averageDifficulty","getProcessedProfiles","battles","resultInfo","chartId","chartResults","maxPP","maxScore","K","scoreRaw","pp","ppPotential","ppRatio","ppFixed","toFixed","scores","pp_","s","rating","flow","orderBy","items","ratingHistory","firstResultDate","rankingHistory","place","processPP","dictScoreInfo","logText","dictChartElo","getDictChartEloId","enemyScore","dictRatingDiff","getDictRatingDiffId","p1","p2","scoreMultiplier","scoreInfo","enemyScoreInfo","startingRating","battleCount","r1","r2","R1","R2","E1","E2","S1","S2","kRating1","kRating2","maxK1","maxK2","kLevel1","kLevel2","kLevel","kMinimizer","startsWith","K1","K2","dr1","dr2","baseEloId1","baseEloId2","baseEloP1","baseEloP2","ratingDiffId1","ratingDiffId2","ratingDiff","ratingDiffLast","floor","playersSorted","battleDate","player","lastPlace","getTime","p1LastRating","last","p2LastRating","toInteger","ratingRaw","now","processBattles","localStorage","window","debugOn","setItem","debugOff","removeItem","DEBUG","getItem","STOP_LOADING","SET_FILTER","RESET_FILTER","RANKING_CHANGE_SET","PROFILES_UPDATE","highscoresUrl","REACT_APP_SOCKET","defaultFilter","isLoadingRanking","players","gradeComparator","guessGrade","misses","bads","goods","greats","mapResult","recognition_notes","isUnknownPlayer","arcade_name","isIntermediateResult","shared_chart","nickname","nicknameArcade","gained","exact_gain_date","rank_mode","_r","originalChartMix","original_mix","originalChartLabel","original_label","originalScore","original_score","scoreIncrease","score_increase","calories","perfect","perfects","max_combo","mods","mods_list","isHJ","maxTotalSteps","infos","fixableIndex","absentNumbersCount","localStepSum","isNumber","tryFixIncompleteResult","accRaw","getMaxRawScore","initializeProfile","fromPairs","nameArcade","resultsByGrade","lastResultDate","count","grades","lastBattleDate","region","achName","getProfileInfoFromResult","replace","convert","cap","achState","fetchResults","processResultsData","console","log","shared_charts","mappedResults","getTopResultId","getBestGradeResultId","topResults","bestGradeResults","resRaw","label","toUpper","chart_label","match","track_name","max_total_steps","allResultsIds","chartTop","topResultId","currentTopResult","oldScoreIndex","splice","newScoreIndex","sortedLastIndexBy","latestScoreDate","enemyResult","bestGradeResultId","currentBestGradeRes","maxScoreCandidate","processData","toPairs","originalData","input","promise","worker","WorkerProfilesProcessing","profilesProcessing","output","q","calculateRankingChanges","terminate","setFilter","getListOfNames","getMapOfRatings","all","localForage","lastChangedRanking","lastChangedRankingPoints","lastFetchedRanking","listNow","listLastFetched","listLastChanged","mapPointsNow","mapPointsLastFetched","rankingsPointsMap","listPrev","warn","SELECT_PRESET","LOAD_PRESETS","LOADING_START","LOADING_END","presets","currentPreset","itemToOption","reloadPresets","startLoading","endLoading","selectPreset","openPreset","noPresetsMessage","mapDispatchToProps","loadPresets","savePreset","newPreset","confirm","withoutOldPreset","remove","newPresets","deletePreset","PresetsControl","onChangeSelection","selected","onRewritePreset","onSavePreset","isAddingNew","classNamePrefix","placeholder","options","noOptionsMessage","disabled","Flag","backgroundImage","preprocessData","fullRes","every","stepSum","sum","n","track","mix","resultInfoOverrides","numb","latest","hasRankScore","useTracked","resetIndicatorData","isDebugOn","prevData","setPrevData","currData","setCurrData","resetIndicator","useRef","reset","useCallback","useMemo","useResetTrackedObject","object","tracking","colorsArray","forwardRef","placeDifference","showProtagonistEloChange","showProtagonistPpChange","protagonistName","uniqueSelectedNames","leftProfile","rightProfile","isSocketView","inf","ratingInfoBlock","flag","nameIndex","empty","outline","isSecondOccurenceInResults","topPlace","fontWeight","exact","mod","avMod","endsWith","xMod","numeral","vj","hj","getShortTimeAgo","content","tooltipClassName","singlep","doublep","coop","Chart","allResults","playersHiddenStatus","chartOriginal","showHiddenPlayers","overrides","setOverrides","isHidingPlayers","setHidingPlayers","first","occuredNicknames","hiddenPlayersCount","isPlayerHidden","onRedoLatestResult","throttle","ANIMATION_DURATION","newOverrides","drop","onUndoLatestResult","undoedResult","undoedPlayerId","previousPlayerResult","newResults","compact","latestScore","overrideChart","isActive","totalResultsCount","countBy","true","currentIndex","canUndo","interpDiff","ChartLabel","href","queryString","search_query","rel","enterAnimation","leaveAnimation","typeName","maintainContainerHeight","isProtagonist","newIndex","prevScore","findLastIndex","preferences","playersSelector","createSelector","user","isCurrentPlayer","sortBy","it","toLower","filteredDataSelector","start","performance","showHidden","showHiddenFromPreferences","names","namesOr","playersOr","namesNot","playersNot","sortingType","rankFilter","protagonist","excludeAntagonists","defaultSorting","newScoresProtagonistSorting","protagonistSorting","row","protIndex","protScore","enemies","take","uniqBy","distanceFromProtagonist","dist","enemy","getPpSorting","field","direction","info","Infinity","getEloSorting","getDiffSorting","chartInfo","sortingFunctions","occuredIds","isVisibleWithRankFilter","chartRange","rows","filterCharts","rowNames","matchSorter","trim","sharedChartDataSelector","sortingOptions","rankOptions","resetFilter","Leaderboard","showItemsCount","curry","onRefresh","onTypeSongName","debounce","renderSimpleSearch","renderFilters","closeMenuOnSelect","isMulti","renderSortings","isClearable","isChartView","filteredData","canShowMore","visibleData","slice","highlightProtagonist","preset","chartIndex","getGradeImg","RankingList","updatePreferences","playerIndex","isHidden","showHiddenPlayersInRanking","change","prevRating","down","up","set","RankingFaq","CHANGE","defaultPreferences","rankingSelector","Ranking","onChangeHidingPlayers","component","withRouter","limit","setLimit","latestDate","ExpFaq","setProfilesFilter","resetProfilesFilter","cutRange","array","startIndex","endIndex","firstElement","lastElement","defaultGradesDistribution","defaultGradesWithLevelsDistribution","flatMap","profileSelectorCreator","idParamName","levelsDistribution","singlesLevels","doublesLevels","gradesData","update","gradesDistribution","groupBy","pick","gradesValues","gradesAndLevelsDistribution","groupedResults","counts","reduced","levelsData","lastTickRating","lastTickRanking","lastTick","firstTick","lastDay","endOf","minMaxRange","filterRange","dayRange","dayRangeMs","placesChanges","ratingChanges","MIN_GRAPH_HEIGHT","profileSelector","otherPlayersSelector","ind","Profile","isLevelGraphCombined","showFaq","onChangeDayRange","onShowFaq","onHideFaq","circleShape","args","componentWillUnmount","renderRankingHistory","minHeight","aspect","margin","strokeDasharray","dataKey","domain","tickFormatter","allowDecimals","stroke","isAnimationActive","payload","strokeWidth","dot","renderAccuracyPoints","interpolated","pointsByType","ticks","shape","false","renderPlaceHistory","dataMax","interval","reversed","renderGrades","stackId","renderGradesWithLevels","stackOffset","doubleItems","singleItems","dataMin","offset","renderLevels","totalD","totalS","renderGradeBlock","obj","typeLetter","progr","minNumber","currentNumber","levelString","complete","zero","renderAchievement","achievement","Icon","renderProfile","otherPlayers","expProgress","history","ariaHideApp","isOpen","onRequestClose","ceil","currentRange","dateL","dateR","l1","l2","MostPlayed","BARS_MODES","SINGLE_TWO","SINGLE_FIVE","DOUBLE_TWO","DOUBLE_FIVE","BOTH_TWO","BOTH_FIVE","getCompareBars","mode","profile1Selector","profile2Selector","getCombinedData","memoize","rc1","rc2","allRC","rating2","rating1","sortedUniqBy","allPC","place2","place1","perLevelComparison","p1win","p1notPlayed","p2win","p2notPlayed","notPlayed","twoBars","p1index","p2index","perType","normalizeTwo","dataObj","totalPlayed","normalizeFive","total","chartLevels","ProfileCompare","compareBarsMode","rhMargin","rhXDomain","rhYDomain","rhXTickFormatter","rhTooltip","profile2","p1Name","p2Name","plcMargin","plcTooltip","isTwo","renderLegendItem","plcXDomain","plcXTicks","plcXFormatter","combinedData","useProfile2","renderPerLevelComparison","layout","profile1","fetchUser","login","googleResponse","token","tokenId","expires","loginACs","logout","isLoadingLogin","isLoadingUser","isClown","setClown","onGoogleResponse","clientId","onSuccess","onFailure","cookiePolicy","TYPES","ACHIEVEMENT","RANK_UP","ADD_POPUP","REMOVE_POPUP","ID_PREFIX","popups","AchievementPopup","playerName","achievementName","progressNumber","setProgressNumber","RankUpPopup","prevPlace","currPlace","list","prevList","currList","setPlace","setList","listTop","delay","pl","renderPlayerLine","popupByType","popupStyles","overlay","transition","opacity","removePopup","visiblePopup","setVisiblePopup","contentRef","popup","persistent","setTimeout","fadeOut","timeout","onAfterOpen","fadeIn","popupBody","PopupComponent","parameters","fetchingParams","PlayerCard","trackedData","isLeft","topPlayersList","addPopup","renderDeltaText","prevN","delta","rivals","closestPlayers","resetData","isDataValid","useTrackedEx","takenWidth","emptyWidth","diffWidth","renderExpLine","elo","STATE_RESET_TIMEOUT_SEC","topPlayersListSelector","fetchTopPerSong","songName","leftLabel","rightLabel","song_name","join","processedData","appendNewResults","lastDate","start_date","appendedResults","currentResults","oldResult","old","mergedData","popupType","fetchUserPreferences","topPerSong","songTopData","setMessage","socketErrorMessage","setSocketErrorMessage","isSocketReady","setSocketReady","isAlive","setAlive","setLeftLabel","setRightLabel","leftPlayer","setLeftPlayer","rightPlayer","setRightPlayer","recognizedSongName","setRecognizedSongName","leftPreferences","setLeftPreferences","rightPreferences","setRightPreferences","resultsContainerRef","leftResultRef","rightResultRef","socketRef","timeoutResetTokenRef","minBy","p","lev","onChangeAchievements","prevAchievement","currAchievement","leftTracked","resetLeftTracked","rightTracked","resetRightTracked","restartTimeout","clearTimeout","WebSocket","onerror","onopen","onmessage","parse","newSongName","totalSize","clientWidth","h","clientHeight","scaleHH","offsetWidth","scaleHW","offsetHeight","scaleWH","scaleWW","transform","scaleW","scaleH","leftChart","rightChart","chartsToShow","leftPlayersHiddenStatus","omitBy","v","rightPlayersHiddenStatus","isHiddenInBoth","ReactModal","setAppElement","fetchTracklist","fetchPreferences","userData","SocketTracker","SongsTop","combineReducers","mostPlayed","action","mostPlayedMonth","leastPlayed","rootReducer","merge","hasPrevList","playerOriginal","trackStats","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","getElementById"],"mappings":"yGACI,IAAIA,EAAa,EAAQ,KACrBC,EAAU,CAAC,wBACfC,EAAOC,QAAU,WAChB,IAAIC,EAAI,IAAIC,OAAO,IAA0B,iCAAkC,CAAEC,KAAM,qBAGvF,OAFAN,EAAWI,EAAGH,GAEPG,I,wDCJZG,OAAOC,MACLD,OAAOC,OACP,SAASC,GACP,OAAOA,IAAUA,GAGI,qBAAdC,KAAKC,OACdD,KAAKC,KAAO,SAASC,GACnB,OAAOA,EAAI,EAAI,EAAIA,EAAI,GAAK,EAAIA,IAK/BC,MAAMC,UAAUC,WACnBC,OAAOC,eAAeJ,MAAMC,UAAW,YAAa,CAClDL,MAAO,SAASS,GAEd,GAAY,MAARC,KACF,MAAM,IAAIC,UAAU,iCAGtB,IAAIC,EAAIL,OAAOG,MAGXG,EAAMD,EAAEE,SAAW,EAGvB,GAAyB,oBAAdL,EACT,MAAM,IAAIE,UAAU,gCAUtB,IANA,IAAII,EAAUC,UAAU,GAGpBC,EAAI,EAGDA,EAAIJ,GAAK,CAKd,IAAIK,EAASN,EAAEK,GACf,GAAIR,EAAUU,KAAKJ,EAASG,EAAQD,EAAGL,GACrC,OAAOK,EAGTA,IAIF,OAAQ,GAEVG,cAAc,EACdC,UAAU,K,gkBC1DP,MAAMC,EAAS,CACpBC,YAAa,CACXC,KAAK,eACLC,YAAa,CACXD,KAAK,oCACLE,QAAUC,GAAD,6BAAkCA,EAAOC,iBAGtDC,MAAO,CACLL,KAAK,UAEPM,QAAS,CACPN,KAAK,WACLO,IAAK,CACHP,KAAM,iBAGVQ,QAAS,CACPR,KAAK,gBACLE,QAAUC,GAAD,oBAAyBA,EAAOM,IACzCC,QAAS,CACPV,KAAK,gCACLE,QAAUC,GAAD,oBAAyBA,EAAOM,GAAhC,eAAyCN,EAAOQ,gBCpBlDC,EAAO,CAClBC,QAAS,UACTC,YAAa,cACbC,SAAU,UACVC,UAAW,WACXC,OAAQ,QACRC,QAAS,SACTC,kBAAmB,kBACnBC,cAAe,eACfC,cAAe,gBAGJC,EAAc,CACzBC,SAAU,WACVC,UAAW,YACXC,eAAgB,iBAChBC,iBAAkB,oBAGPC,EAAgB,CAAC,EAAG,IACpBC,EAAW,CACtBC,IAAK,WACLC,MAAO,QACPC,MAAO,QACPC,KAAM,QAEKC,EAAmBC,IAAEC,OAAOP,G,kDCxB1B,SAASQ,IACtB,OACE,yBAAKC,UAAU,UACb,yBACEC,MAAM,KACNC,OAAO,KACPC,QAAQ,aACRC,MAAM,6BACNC,KAAK,QAEL,4BAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,MACxB,6BACEC,cAAc,IACdC,KAAK,KACLC,GAAG,KACHC,MAAM,KACNC,IAAI,OACJf,OAAO,UACPgB,SAAS,SACTC,YAAY,eAEd,6BACEN,cAAc,eACdC,KAAK,IACLC,GAAG,IACHC,MAAM,KACNC,IAAI,OACJf,OAAO,SACPgB,SAAS,SACTC,YAAY,gBAGhB,4BAAQT,GAAG,KAAKC,GAAG,KAAKC,EAAE,IAAIQ,YAAY,OACxC,6BACEP,cAAc,IACdC,KAAK,IACLC,GAAG,IACHC,MAAM,KACNC,IAAI,OACJf,OAAO,SACPgB,SAAS,SACTC,YAAY,eAEd,6BACEN,cAAc,eACdC,KAAK,MACLC,GAAG,MACHC,MAAM,KACNC,IAAI,OACJf,OAAO,UACPgB,SAAS,SACTC,YAAY,gBAGhB,4BAAQT,GAAG,MAAMC,GAAG,KAAKC,EAAE,MACzB,6BACEC,cAAc,IACdC,KAAK,KACLC,GAAG,KACHC,MAAM,KACNC,IAAI,OACJf,OAAO,UACPgB,SAAS,SACTC,YAAY,eAEd,6BACEN,cAAc,eACdC,KAAK,IACLC,GAAG,IACHC,MAAM,KACNC,IAAI,OACJf,OAAO,SACPgB,SAAS,SACTC,YAAY,kB,qBC7EjB,MAAME,EAAK,aACLC,EAAY,MAASC,KAAMF,I,ykBCIjC,MAAMG,EAAY,EAAGC,SAAUC,EAAQ,CAAED,MAAKE,OAAQ,QAChDC,EAAW,EAAGH,MAAKI,UAC9BH,EAAQ,CACND,MACAE,OAAQ,OACRE,KAAMC,KAAKC,UAAUF,GACrBG,QAAS,CACP,eAAgB,oCAIhBC,EAAiB,GAEVP,EAAU,EAAGD,MAAKE,SAAQE,OAAMG,aAAcE,MAAOC,EAAUC,KAC1E,IACE,MAAMC,EAAUC,IAAQC,IAAI,WACxBF,IACFJ,EAAc,QAAcI,GAE9B,MAAMG,QAAiBC,MAAMhB,EAAK,CAChCE,SACAE,OACAG,QAAQ,EAAD,GAAOC,EAAP,GAA0BD,GACjCU,YAAa,YAEf,GAAIF,EAASG,QAAU,KAAOH,EAASG,OAAS,IAAK,CAEnD,aADmBH,EAASI,OAEvB,CACL,MAAMC,QAAcL,EAASI,OAC7B,MAAI3C,IAAE6C,SAASD,IAAU5C,IAAE8C,SAASF,EAAMA,OAClC,IAAIG,MAAMH,EAAMA,OACb5C,IAAE8C,SAASF,GACd,IAAIG,MAAMH,GAEV,IAAIG,MAAM,eAAiBR,EAASG,SAG9C,MAAOE,GAIP,MAHsB,oBAAlBA,EAAMI,SACRd,EAASb,KAEJ4B,QAAQC,OAAON,KC9CbO,EAAO,iCACPC,EAAmB,sB,ykBCEhC,MAAMC,EAAO,sBACPC,EAAO,sBACPC,EAAK,oBAELC,EAAe,CACnBC,WAAW,EACXC,KAAM,I,ykBCNR,MAAML,EAAO,4BACPC,EAAO,4BACPC,EAAK,0BAELC,EAAe,CACnBC,WAAW,EACXC,KAAM,I,ykBCNR,MAAML,GAAO,uBACPC,GAAO,uBACPC,GAAK,qBAELC,GAAe,CACnBC,WAAW,EACXC,KAAM,I,gECJRC,KAAQC,UAAUC,MAClB,MAAMC,GAAU,IAAIH,KAAQ,SAEtBI,GAAY,CAChBC,QAAS,OACTC,UAAWC,KACXC,MAAO,CAAC,MAAO,OAAQ,UAEZC,GAAmBC,IAC9B,GAAKA,EAAOC,YAiBV,OAAOD,EAAOE,WAAWC,qBAjBF,CACvB,MAAMC,OACgBC,IAApBL,EAAOM,eAAmDD,IAAzBL,EAAOO,cACpC,iDACAP,EAAOM,SACP,iBACAN,EAAOO,cACP,sBACA,oDACN,OACE,yBAAKC,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,cAAe,WAClE,gMACA,uHAAuBP,GACvB,+FAAmBJ,EAAOE,WAAWC,yBAQhCS,GAAaC,IACxB,MAAMC,EAAUC,OACbC,QAAQ,OACRC,KAAKF,KAAOF,GAAMG,QAAQ,OAAQ,QAC/BE,EAAOH,KAAOF,GAAMK,OAC1B,OAAIH,OAASG,OAAS,EACbJ,GAAW,EAAI,6CAAYrB,GAAQ0B,OAAON,EAAMnB,IAEtC,IAAZoB,EACHI,EAAO,EACL,gEACA,6CACU,IAAZJ,EACA,iCACArB,GAAQ0B,OAAON,EAAMnB,KChDd0B,GAAaC,GACA,kBAAbA,EACFN,KAAOM,GAAUC,SAEjB,IAAIC,KAAKF,GCiBpB,SAASG,IAAQ,UAAEC,EAAF,MAAaC,EAAb,gBAAoBC,IAAoB,MAAD,EAC9BC,mBAAS,IADqB,mBAC/CvC,EAD+C,KACzCwC,EADyC,OAEtBD,oBAAS,GAFa,mBAE/CxC,EAF+C,KAEpC0C,EAFoC,KAIhDC,EACJJ,GAAe,CACdK,GACC,yBAAKlG,UAAU,aACb,kBAAC,IAAD,MACA,8BAAOkG,EAAKC,aAgBlB,OAZAC,oBAAU,KACRJ,GAAW,GACXL,IACGU,KAAK9C,IACJA,EAAK+C,SAAWP,EAAQxC,EAAKA,MAC7ByC,GAAW,KAEZO,MAAM,KACLP,GAAW,MAEd,CAACL,IAGF,yBAAK3F,UAAU,kBACb,yBAAKA,UAAU,oBACb,8BAAO4F,IAERtC,GAAa,kBAACvD,EAAD,OACZuD,GACAC,EAAKiD,IAAI,CAACN,EAAMO,IAEZ,yBAAKC,IAAKR,EAAK9H,GAAI4B,UAAU,kBAC3B,yBAAKA,UAAW2G,IAAW,QAAD,cAAiBF,EAAQ,GAAK,CAAEG,KAAMH,EAAQ,KACtE,8BAAOA,EAAQ,EAAf,MAEF,yBAAKzG,UAAU,aAAakG,EAAKW,WAChCZ,EAAaC,MAQ5B,MAAMY,GAAuBZ,GAC3B,yBAAKlG,UAAU,QACb,8BAAOkG,EAAKa,UAAYjC,GAAWQ,GAAUY,EAAKa,YAAc,+CAIrDC,mBACb,KACA,CACEC,gBL1C2B,IACtBnF,UACLC,EAAS,CAAEZ,KAAM+B,IACjB,IACE,MAAMK,QAAaxB,EAASX,EAAU,CAAEC,IAAI,GAAD,OAAK2B,EAAL,+BAE3C,OADAjB,EAAS,CAAEZ,KAAMgC,EAASI,SACnBA,EACP,MAAOd,GAEP,OADAV,EAAS,CAAEZ,KAAMiC,EAAOX,UACjB,OKkCTyE,qBJ3CgC,IAC3BpF,UACLC,EAAS,CAAEZ,KAAM+B,IACjB,IACE,MAAMK,QAAaxB,EAASX,EAAU,CAAEC,IAAI,GAAD,OAAK2B,EAAL,qCAE3C,OADAjB,EAAS,CAAEZ,KAAMgC,EAASI,SACnBA,EACP,MAAOd,GAEP,OADAV,EAAS,CAAEZ,KAAMiC,EAAOX,UACjB,OImCT0E,iBH5C4B,IACvBrF,UACLC,EAAS,CAAEZ,KAAM+B,KACjB,IACE,MAAMK,QAAaxB,EAASX,EAAU,CAAEC,IAAI,GAAD,OAAK2B,EAAL,wCAE3C,OADAjB,EAAS,CAAEZ,KAAMgC,GAASI,SACnBA,EACP,MAAOd,GAEP,OADAV,EAAS,CAAEZ,KAAMiC,GAAOX,UACjB,QG8BEuE,EAOb,UAAkB,gBAAEC,EAAF,qBAAmBC,EAAnB,iBAAyCC,IAC3D,OACE,yBAAKnH,UAAU,kBACb,kBAAC0F,GAAD,CAASC,UAAWsB,EAAiBrB,MAAM,yHAC3C,kBAACF,GAAD,CAASC,UAAWuB,EAAsBtB,MAAM,qKAChD,kBAACF,GAAD,CACEC,UAAWwB,EACXvB,MAAM,8JACNC,gBAAiBiB,KAEnB,yBAAK9G,UAAU,oC,+DCvFAoH,I,6LAOT,IAAD,EAC4BvK,KAAKwK,MAAhCC,EADD,EACCA,OAAQC,EADT,EACSA,SAAUC,EADnB,EACmBA,KAC1B,OACE,yBACExH,UAAW2G,IAAW,gBAAiB,CAAEW,OAAQA,IACjDG,QAAS,kBAAMF,GAAUD,KAExBE,O,GAdiCE,IAAMC,gB,SCE3BC,G,YAkBnB,WAAYP,GAAQ,IAAD,+BACjB,8CAAMA,KACDQ,MAAQ,CACX1L,OAAS0D,IAAEiI,MAAMT,EAAMlL,OAAuBkL,EAAMU,aAApBV,EAAMlL,QAA+B,IAEvE0D,IAAEmI,QAAQ,CAAC,eAAgB,aAAc,kBAAzC,iBALiB,E,kFAQAC,GACbA,EAAU9L,QAAUU,KAAKwK,MAAMlL,OACjCU,KAAKqL,SAAS,CAAE/L,MAAOU,KAAKwK,MAAMlL,U,mCAIzBgM,GAAI,IAAD,OACRC,EAAWD,EAAEE,OAAOlM,MAC1BU,KAAKqL,SAAS,CAAE/L,MAAOiM,IAAY,kBAAM,EAAKf,MAAMiB,SAASF,Q,iCAGpDD,GAAI,IACLhH,EAAStE,KAAKwK,MAAdlG,KACAhF,EAAUU,KAAKgL,MAAf1L,MACR,GAAa,WAATgF,EAAmB,CACrB,IAAMoH,EAAetM,OAAOE,GACxBoM,GAAgBtM,OAAOkM,EAAEE,OAAOG,MAAQD,GAAgBtM,OAAOkM,EAAEE,OAAOI,KAC1E5L,KAAKwK,MAAMqB,OAAOH,EAAcJ,IAEhCtL,KAAKqL,SAAS,CAAE/L,MAAOU,KAAKwK,MAAMlL,QAClCU,KAAKwK,MAAMqB,OAAO7L,KAAKwK,MAAMlL,MAAOgM,O,qCAK3BA,GACC,UAAVA,EAAEzB,KACJ7J,KAAK8L,WAAWR,K,+BAIV,IACAnI,EAAcnD,KAAKwK,MAAnBrH,UAMR,OACE,2CACMH,IAAE+I,KAAK,CAAC,eAAgB,YAAa/L,KAAKwK,OADhD,CAEErH,UAAW2G,IAAW3G,EAAW,cACjC7D,MAAOU,KAAKgL,MAAM1L,MAClBuM,OAAQ7L,KAAK8L,WACbE,WAAYhM,KAAKiM,eACjBC,QAASlM,KAAKmM,aACdV,SAAUzI,IAAEoJ,Y,GAxEevB,IAAMwB,WAApBtB,GAWZuB,aAAe,CACpBhN,MAAO,KACPgF,KAAM,OACNmH,SAAUzI,IAAEoJ,KACZP,OAAQ7I,IAAEoJ,M,OCjBC,MAAMG,WAAe1B,IAAMwB,UACxCG,cACEC,QADY,KAKdhB,SAAYH,IACVtL,KAAKwK,MAAMiB,SAASH,EAAEE,OAAOkB,UAJ7B1M,KAAKuB,GAAKyB,IAAE2J,WAOdC,SACE,OACE,yBAAKzJ,UAAU,mBACb,2BACEmB,KAAK,WACLnB,UAAU,qBACV5B,GAAIvB,KAAKuB,GACTkK,SAAUzL,KAAKyL,SACfiB,QAAS1M,KAAKwK,MAAMkC,UAEtB,2BAAOG,QAAS7M,KAAKuB,GAAI4B,UAAU,UACjC,gCAEDnD,KAAKwK,MAAMsC,UACV,2BAAOD,QAAS7M,KAAKuB,GAAI4B,UAAU,cAChCnD,KAAKwK,MAAMsC,Y,WCxBHC,G,YAQnB,WAAYvC,GAAQ,IAAD,+BACjB,iDACKQ,MAAQ,CAAEgC,KAAMxC,EAAMyC,cAAe,GAFzB,E,wEAKT,IAAD,SACgCjN,KAAKwK,MAApCsC,EADD,EACCA,SAAU/D,EADX,EACWA,MAAO5F,EADlB,EACkBA,UACjB6J,EAAShN,KAAKgL,MAAdgC,KAER,OACE,yBAAK7J,UAAW2G,IAAW,kBAAmB3G,EAAW,CAAE6J,UACzD,yBAAK7J,UAAU,SAASyH,QAAS,kBAAM,EAAKS,UAAS,SAAAL,GAAK,MAAK,CAAEgC,MAAOhC,EAAMgC,WAC5E,yBAAK7J,UAAU,mBACb,kBAAC,IAAD,OAEF,yBAAKA,UAAU,SAAS4F,IAEzB+D,GAAY,yBAAK3J,UAAU,wBAAwB2J,Q,GAzBhBhC,iB,6BCEtCoC,I,OAAmB,CACvBC,gBAAiB,CACfC,SAAS,EACTC,QAAS,GACTC,kBAAmB,cAIjBC,GAA0B,CAC9BC,MAAO,OACPC,KAAM,QACNC,IAAK,SACLC,OAAQ,OAGJC,GAAoB,SAAAC,GACxB,OAAOA,GAAaN,GAAwBM,EAAUC,MAAM,KAAK,KAG7DC,G,YAWJ,aAAe,IAAD,+BACZ,iDACK/C,MAAQ,CACXgD,WAAW,GAEb,EAAKC,iBAAmBpD,IAAMqD,YAC9B,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,iBACpB,EAAKC,wBAA0B,EAAKA,wBAAwBD,KAA7B,iBAPnB,E,6EAWZpO,KAAKqL,SAAS,CACZ2C,WAAW,M,gDAKbhO,KAAKqL,SAAS,CACZ2C,WAAYhO,KAAKgL,MAAMgD,c,yCAIRM,GACKA,GAASA,EAAM9C,OAAO+C,QAAQ,0BAGlDvO,KAAKwO,gB,sCAI6E,IAAvEC,EAAsE,EAAtEA,IAAK5G,EAAiE,EAAjEA,MAAOgG,EAA0D,EAA1DA,UAAWa,EAA+C,EAA/CA,WAA4BC,GAAmB,EAAnCC,eAAmC,EAAnBD,iBAAmB,EACzC3O,KAAKwK,MAAvCsC,EAD2E,EAC3EA,SAAU+B,EADiE,EACjEA,oBAClB,OACE,yBACEJ,IAAKA,EACL5G,MAAOA,EACPiH,iBAAgBjB,EAChB1K,UAAW2G,IACT,uBADmB,gBAEV8D,GAAkBC,IAC3B7N,KAAKwK,MAAMuE,iBACX,CAAE,gBAAiBJ,GAAmBE,KAGxC,yBAAK1L,UAAU,eACb,yBAAKA,UAAU,QAAQsL,IAAKC,EAAWD,IAAK5G,MAAO6G,EAAW7G,SAEhE,yBACE1E,UAAU,wBAGT2J,M,+BAMC,IAAD,EAC4B9M,KAAKwK,MAAhCqD,EADD,EACCA,UAAWmB,EADZ,EACYA,YACXhB,EAAchO,KAAKgL,MAAnBgD,UACR,OACE,kBAAC,IAAMiB,SAAP,KACE,yBACE9L,UAAU,eACVsL,IAAKzO,KAAKiO,iBACVrD,QAAS5K,KAAKqO,yBAEbW,GAEFhB,GACCkB,IAASC,aACP,kBAAC,KAAD,CACEC,UAAWC,SAASzK,KACpB0K,UAAWpC,GACXW,UAAWA,EACX0B,iBAAkBvP,KAAKiO,iBAAiBuB,SAEvCxP,KAAKmO,cAERkB,SAASzK,W,GA1FCiG,IAAMC,eAAtBiD,GAOG0B,aAAe,CACpB5B,UAAW,UAyFA6B,oBAAsB3B,I,ulBC1HtB,SAAS4B,GAAT,GAA+C,IAA9BC,EAA6B,EAA7BA,MAAOjE,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,IAAKH,EAAY,EAAZA,SAC/C,OACE,kBAAC,SAAD,CACExI,OAAQ2M,EACRC,KAAM,EACNlE,IAAKA,EACLC,IAAKA,EACLH,SAAUA,EACVqE,YAAa,gBAAGtF,EAAH,EAAGA,MAAOsC,EAAV,EAAUA,SAAV,OACX,yBACEiD,YAAavF,EAAMuF,YACnBC,aAAcxF,EAAMwF,aACpBnI,MAAK,MACA2C,EAAM3C,MADN,CAEHoI,SAAU,WACV5M,OAAQ,OACRyE,QAAS,OACT1E,MAAO,UAGT,yBACEqL,IAAKjE,EAAMiE,IACX5G,MAAO,CACLxE,OAAQ,MACRD,MAAO,OACP8M,aAAc,MACdC,WAAYC,8BAAmB,CAC7BnN,OAAQ2M,EACRS,OAAQ,CAAC,OAAQ,UAAW,QAC5B1E,MACAC,QAEF0E,UAAW,WAGZxD,KAIPyD,YAAa,gBAAG/F,EAAH,EAAGA,MAAOgG,EAAV,EAAUA,UAAV,OACX,yCACMhG,EADN,CAEE3C,MAAK,MACA2C,EAAM3C,MADN,CAEHxE,OAAQ,OACRD,MAAO,OACP8M,aAAc,MACdO,gBAAiB,OACjB3I,QAAS,OACT4I,eAAgB,SAChB3I,WAAY,SACZ4I,UAAW,uBAGb,yBACE9I,MAAO,CACLxE,OAAQ,MACRD,MAAO,MACP8M,aAAc,MACdO,gBAAiBD,EAAY,UAAY,c,+NCnDxC,SAASI,GAAT,GAA6D,IAAtCC,EAAqC,EAArCA,YAAuBC,EAAc,EAAxBrF,SAC3CmE,EAAQ5M,IAAE+N,MAAMtO,EAAe,QAASoO,GACxCvM,EAAOtB,IAAE+N,MAAM,KAAM,OAAQF,GAC7BG,EAAWhO,IAAE+N,MAAMhO,EAAkB,WAAY8N,GAEnDI,EAAa,4EACjB,GAAIJ,EAAa,CACf,IAAMK,EAAI5M,GAAQ,GAElB2M,EAAa,oCADbA,EAAarB,EAAM,KAAOA,EAAM,GAAnB,UAA2BsB,GAA3B,OAA+BtB,EAAM,IAArC,UAA+CsB,GAA/C,OAAmDtB,EAAM,GAAzD,cAAiEsB,GAAjE,OAAqEtB,EAAM,KAEnF5M,IAAEmO,QAAQH,EAAUjO,KACvBkO,GAAc,QAQlB,IAAMxF,EAAW,SAAAnM,GACfwR,E,2WAAW,EACTlB,QACAtL,QACGhF,EAHK,CAIR0R,SAAUhO,IAAEoO,QAAQ9R,EAAM0R,UAAYA,EAAW1R,EAAM0R,aAI3D,OACE,6BACE,kBAAC,GAAD,CACEjC,iBAAiB,4BACjBC,YACE,4BAAQ7L,UAAU,4CAA4C8N,IAGhE,yBAAK9N,UAAU,uBACb,yBAAKA,UAAU,WACb,kBAAC,GAAD,CACEwH,KAAK,SACLF,OAAiB,MAATnG,EACRoG,SAAU,SAAAD,GACRgB,EAAS,CACPnH,KAAMmG,EAAS,IAAM,UAI3B,kBAAC,GAAD,CACEE,KAAK,SACLF,OAAiB,MAATnG,EACRoG,SAAU,SAAAD,GACRgB,EAAS,CACPnH,KAAMmG,EAAS,IAAM,WAK7B,kBAACkF,GAAD,CACEC,MAAOA,EACPjE,IAAKlJ,EAAc,GACnBmJ,IAAKnJ,EAAc,GACnBgJ,SAAU,SAAA9H,GAAC,OAAI8H,EAAS,CAAEmE,MAAOjM,OAEnC,yBAAKR,UAAU,UACb,4BACEA,UAAU,sBACVyH,QAAS,kBACPa,EAAS,CACPmE,MAAO,CAACrQ,KAAKqM,IAAIgE,EAAM,GAAK,EAAGnN,EAAc,IAAKmN,EAAM,QAI5D,kBAAC,IAAD,OAEF,kBAAC,GAAD,CACEtL,KAAK,SACLnB,UAAU,eACVwI,IAAKlJ,EAAc,GACnBmJ,IAAKrM,KAAKoM,IAAIlJ,EAAc,GAAImN,EAAM,IACtCtQ,MAAOsQ,EAAM,GACb/D,OAAQ,SAAAvM,GACNmM,EAAS,CAAEmE,MAAO,CAACtQ,EAAOsQ,EAAM,SAGpC,4BACEzM,UAAU,sBACVyH,QAAS,WACP,IAAMyG,EAAS9R,KAAKoM,IAAIiE,EAAM,GAAK,EAAGnN,EAAc,IACpDgJ,EAAS,CACPmE,MAAO,CAACyB,EAAQzB,EAAM,GAAKyB,EAASA,EAASzB,EAAM,QAIvD,kBAAC,IAAD,OAEF,yBAAKzM,UAAU,eACf,4BACEA,UAAU,sBACVyH,QAAS,WACP,IAAM0G,EAAS/R,KAAKqM,IAAIgE,EAAM,GAAK,EAAGnN,EAAc,IACpDgJ,EAAS,CACPmE,MAAO,CAACA,EAAM,GAAK0B,EAASA,EAAS1B,EAAM,GAAI0B,OAInD,kBAAC,IAAD,OAEF,kBAAC,GAAD,CACEhN,KAAK,SACLnB,UAAU,eACVwI,IAAKpM,KAAKqM,IAAInJ,EAAc,GAAImN,EAAM,IACtChE,IAAKnJ,EAAc,GACnBnD,MAAOsQ,EAAM,GACb/D,OAAQ,SAAAvM,GAAK,OAAImM,EAAS,CAAEmE,MAAO,CAACA,EAAM,GAAItQ,QAEhD,4BACE6D,UAAU,sBACVyH,QAAS,kBACPa,EAAS,CACPmE,MAAO,CAACA,EAAM,GAAIrQ,KAAKoM,IAAIiE,EAAM,GAAK,EAAGnN,EAAc,SAI3D,kBAAC,IAAD,QAGJ,yBAAKU,UAAU,oBACb,kBAAC,GAAD,CACEwH,KAAK,WACLF,OAAQuG,EAASO,SAAS7O,EAASC,KACnC+H,SAAU,SAAAD,GACRgB,EAAS,CACPuF,SAAUvG,EAAM,uBACRuG,GADQ,CACEtO,EAASC,MACvBK,IAAEwO,QAAQ,CAAC9O,EAASC,KAAMqO,QAIpC,kBAAC,GAAD,CACErG,KAAK,QACLF,OAAQuG,EAASO,SAAS7O,EAASE,OACnC8H,SAAU,SAAAD,GACRgB,EAAS,CACPuF,SAAUvG,EAAM,uBACRuG,GADQ,CACEtO,EAASE,QACvBI,IAAEwO,QAAQ,CAAC9O,EAASE,OAAQoO,QAItC,kBAAC,GAAD,CACErG,KAAK,QACLF,OAAQuG,EAASO,SAAS7O,EAASG,OACnC6H,SAAU,SAAAD,GACRgB,EAAS,CACPuF,SAAUvG,EAAM,uBACRuG,GADQ,CACEtO,EAASG,QACvBG,IAAEwO,QAAQ,CAAC9O,EAASG,OAAQmO,QAItC,kBAAC,GAAD,CACErG,KAAK,OACLF,OAAQuG,EAASO,SAAS7O,EAASI,MACnC4H,SAAU,SAAAD,GACRgB,EAAS,CACPuF,SAAUvG,EAAM,uBACRuG,GADQ,CACEtO,EAASI,OACvBE,IAAEwO,QAAQ,CAAC9O,EAASI,MAAOkO,Y,wBClL1C,MAAMS,GAAQ,CACnB,CACEC,UAAW,EACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,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","file":"static/js/main.28aa6c85.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"getProcessedProfiles\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"7a1b1cf29acfcd2fc2da.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","/* eslint-disable */\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\r\nNumber.isNaN =\r\n  Number.isNaN ||\r\n  function(value) {\r\n    return value !== value;\r\n  };\r\n\r\nif (typeof Math.sign === 'undefined') {\r\n  Math.sign = function(x) {\r\n    return x > 0 ? 1 : x < 0 ? -1 : x;\r\n  };\r\n}\r\n\r\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\r\nif (!Array.prototype.findIndex) {\r\n  Object.defineProperty(Array.prototype, 'findIndex', {\r\n    value: function(predicate) {\r\n      // 1. Let O be ? ToObject(this value).\r\n      if (this == null) {\r\n        throw new TypeError('\"this\" is null or not defined');\r\n      }\r\n\r\n      var o = Object(this);\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('predicate must be a function');\r\n      }\r\n\r\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n      var thisArg = arguments[1];\r\n\r\n      // 5. Let k be 0.\r\n      var k = 0;\r\n\r\n      // 6. Repeat, while k < len\r\n      while (k < len) {\r\n        // a. Let Pk be ! ToString(k).\r\n        // b. Let kValue be ? Get(O, Pk).\r\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n        // d. If testResult is true, return k.\r\n        var kValue = o[k];\r\n        if (predicate.call(thisArg, kValue, k, o)) {\r\n          return k;\r\n        }\r\n        // e. Increase k by 1.\r\n        k++;\r\n      }\r\n\r\n      // 7. Return -1.\r\n      return -1;\r\n    },\r\n    configurable: true,\r\n    writable: true,\r\n  });\r\n}\r\n","export const routes = {\r\n  leaderboard: {\r\n    path: `/leaderboard`,\r\n    sharedChart: {\r\n      path: `/leaderboard/chart/:sharedChartId`,\r\n      getPath: (params) => `/leaderboard/chart/${params.sharedChartId}`,\r\n    },\r\n  },\r\n  songs: {\r\n    path: `/songs`,\r\n  },\r\n  ranking: {\r\n    path: `/ranking`,\r\n    faq: {\r\n      path: '/ranking/faq',\r\n    },\r\n  },\r\n  profile: {\r\n    path: `/profiles/:id`,\r\n    getPath: (params) => `/profiles/${params.id}`,\r\n    compare: {\r\n      path: `/profiles/:id/vs/:compareToId`,\r\n      getPath: (params) => `/profiles/${params.id}/vs/${params.compareToId}`,\r\n    },\r\n  },\r\n};\r\n","import _ from 'lodash/fp';\r\n\r\nexport const SORT = {\r\n  DEFAULT: 'default',\r\n  PROTAGONIST: 'protagonist',\r\n  RANK_ASC: 'rankAsc',\r\n  RANK_DESC: 'rankDesc',\r\n  PP_ASC: 'ppAsc',\r\n  PP_DESC: 'ppDesc',\r\n  NEW_SCORES_PLAYER: 'newScoresPlayer',\r\n  EASIEST_SONGS: 'easiestSongs',\r\n  HARDEST_SONGS: 'hardestSongs',\r\n};\r\n\r\nexport const RANK_FILTER = {\r\n  SHOW_ALL: 'SHOW_ALL',\r\n  SHOW_BEST: 'SHOW_BEST',\r\n  SHOW_ONLY_RANK: 'SHOW_ONLY_RANK',\r\n  SHOW_ONLY_NORANK: 'SHOW_ONLY_NORANK',\r\n};\r\n\r\nexport const CHART_MIN_MAX = [1, 28];\r\nexport const DURATION = {\r\n  STD: 'Standard',\r\n  SHORT: 'Short',\r\n  REMIX: 'Remix',\r\n  FULL: 'Full',\r\n};\r\nexport const DURATION_DEFAULT = _.values(DURATION);\r\n","import React from 'react';\r\n\r\nimport './loader.scss';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"loader\">\r\n      <svg\r\n        width=\"40\"\r\n        height=\"12\"\r\n        viewBox=\"0 0 120 30\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"#eee\"\r\n      >\r\n        <circle cx=\"15\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"60\" cy=\"15\" r=\"9\" fillOpacity=\"0.3\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"9\"\r\n            to=\"9\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"9;15;9\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"0.5\"\r\n            to=\"0.5\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\".5;1;.5\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"105\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","export const RESET = `USER/RESET`;\r\nexport const resetUser = () => ({ type: RESET });\r\n","import _ from 'lodash/fp';\r\nimport cookies from 'browser-cookies';\r\n\r\nimport { resetUser } from 'reducers/user/resetAction';\r\n\r\nexport const fetchJson = ({ url }) => request({ url, method: 'get' });\r\nexport const postJson = ({ url, body }) =>\r\n  request({\r\n    url,\r\n    method: 'post',\r\n    body: JSON.stringify(body),\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n    },\r\n  });\r\n\r\nconst defaultHeaders = {};\r\n\r\nexport const request = ({ url, method, body, headers }) => async (dispatch, getState) => {\r\n  try {\r\n    const session = cookies.get('session');\r\n    if (session) {\r\n      defaultHeaders['Session'] = session;\r\n    }\r\n    const response = await fetch(url, {\r\n      method,\r\n      body,\r\n      headers: { ...defaultHeaders, ...headers },\r\n      credentials: 'include',\r\n    });\r\n    if (response.status >= 200 && response.status < 300) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      const error = await response.json();\r\n      if (_.isObject(error) && _.isString(error.error)) {\r\n        throw new Error(error.error);\r\n      } else if (_.isString(error)) {\r\n        throw new Error(error);\r\n      } else {\r\n        throw new Error('HTTP Status ' + response.status);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    if (error.message === 'Invalid session') {\r\n      dispatch(resetUser());\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n","// export const HOST = 'http://localhost:5000';\r\nexport const HOST = 'https://vps720616.ovh.net:5000';\r\nexport const SOCKET_SERVER_IP = 'ws://127.0.0.1:6789';\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `MOST_PLAYED/LOADING`;\r\nconst SUCCESS = `MOST_PLAYED/SUCCESS`;\r\nconst ERROR = `MOST_PLAYED/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchMostPlayed = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-played` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `MOST_PLAYED_MONTH/LOADING`;\r\nconst SUCCESS = `MOST_PLAYED_MONTH/SUCCESS`;\r\nconst ERROR = `MOST_PLAYED_MONTH/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchMostPlayedMonth = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-played-month` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `LEAST_PLAYED/LOADING`;\r\nconst SUCCESS = `LEAST_PLAYED/SUCCESS`;\r\nconst ERROR = `LEAST_PLAYED/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchLeastPlayed = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-time-not-played` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport moment from 'moment';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\n\r\nconst timeStyle = {\r\n  flavour: 'long',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nexport const tooltipFormatter = result => {\r\n  if (!result.isExactDate) {\r\n    const resultType =\r\n      result.isMyBest === undefined && result.isMachineBest === undefined\r\n        ? 'с my best или machine best'\r\n        : result.isMyBest\r\n        ? 'с my best'\r\n        : result.isMachineBest\r\n        ? 'с machine best'\r\n        : 'хз откуда';\r\n    return (\r\n      <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n        <div>точная дата взятия неизвестна</div>\r\n        <div>скор был записан {resultType}</div>\r\n        <div>дата записи: {result.dateObject.toLocaleDateString()}</div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return result.dateObject.toLocaleDateString();\r\n  }\r\n};\r\n\r\nexport const getTimeAgo = date => {\r\n  const dayDiff = moment()\r\n    .startOf('day')\r\n    .diff(moment(date).startOf('day'), 'days');\r\n  const hour = moment(date).hour();\r\n  if (moment().hour() < 5) {\r\n    return dayDiff <= 1 ? 'сегодня' : timeAgo.format(date, timeStyle);\r\n  }\r\n  return dayDiff === 0\r\n    ? hour < 5\r\n      ? 'вчера ночью'\r\n      : 'сегодня'\r\n    : dayDiff === 1\r\n    ? 'вчера'\r\n    : timeAgo.format(date, timeStyle);\r\n};\r\n","import moment from 'moment';\r\n\r\nexport const parseDate = (textDate) => {\r\n  if (typeof textDate === 'string') {\r\n    return moment(textDate).toDate();\r\n  } else {\r\n    return new Date(textDate);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaPlay } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\n// styles\r\nimport './songs-top.scss';\r\n\r\n// components\r\nimport Loader from 'components/Shared/Loader';\r\n\r\n// constants\r\n\r\n// reducers\r\nimport { fetchMostPlayed } from 'reducers/trackStats/mostPlayed';\r\nimport { fetchMostPlayedMonth } from 'reducers/trackStats/mostPlayedMonth';\r\nimport { fetchLeastPlayed } from 'reducers/trackStats/leastPlayed';\r\n\r\n// utils\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { parseDate } from 'utils/date';\r\n\r\n// code\r\nfunction TopList({ fetchList, title, renderRightSide }) {\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const getRightSide =\r\n    renderRightSide ||\r\n    (item => (\r\n      <div className=\"playcount\">\r\n        <FaPlay />\r\n        <span>{item.countplay}</span>\r\n      </div>\r\n    ));\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchList()\r\n      .then(data => {\r\n        data.success && setData(data.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [fetchList]);\r\n\r\n  return (\r\n    <div className=\"top-songs-list\">\r\n      <div className=\"top-songs-header\">\r\n        <span>{title}</span>\r\n      </div>\r\n      {isLoading && <Loader />}\r\n      {!isLoading &&\r\n        data.map((item, index) => {\r\n          return (\r\n            <div key={item.id} className=\"top-songs-item\">\r\n              <div className={classNames('place', `top-${index + 1}`, { best: index < 3 })}>\r\n                <span>{index + 1}.</span>\r\n              </div>\r\n              <div className=\"song-name\">{item.full_name}</div>\r\n              {getRightSide(item)}\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst leastPlayedRightSide = item => (\r\n  <div className=\"date\">\r\n    <span>{item.last_play ? getTimeAgo(parseDate(item.last_play)) : 'никогда'}</span>\r\n  </div>\r\n);\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    fetchMostPlayed,\r\n    fetchMostPlayedMonth,\r\n    fetchLeastPlayed,\r\n  }\r\n)(function SongsTop({ fetchMostPlayed, fetchMostPlayedMonth, fetchLeastPlayed }) {\r\n  return (\r\n    <div className=\"songs-top-page\">\r\n      <TopList fetchList={fetchMostPlayed} title=\"топ популярных треков\" />\r\n      <TopList fetchList={fetchMostPlayedMonth} title=\"топ популярных треков за месяц\" />\r\n      <TopList\r\n        fetchList={fetchLeastPlayed}\r\n        title=\"треки, которые долго не играли\"\r\n        renderRightSide={leastPlayedRightSide}\r\n      />\r\n      <div className=\"top-songs-list -placeholder\" />\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './toggle-button.scss';\r\n\r\nexport default class ToggleButton extends React.PureComponent {\r\n  static propTypes = {\r\n    text: toBe.string,\r\n    onToggle: toBe.func,\r\n    active: toBe.bool,\r\n  };\r\n\r\n  render() {\r\n    const { active, onToggle, text } = this.props;\r\n    return (\r\n      <div\r\n        className={classNames('toggle-button', { active: active })}\r\n        onClick={() => onToggle(!active)}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable react/no-deprecated */\r\n// imports from vendor deps\r\nimport React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\n\r\n// imports from styles\r\nexport default class Input extends React.Component {\r\n  static propTypes = {\r\n    value: toBe.any,\r\n    defaultValue: toBe.any,\r\n    onChange: toBe.func,\r\n    onBlur: toBe.func,\r\n    type: toBe.string,\r\n    className: toBe.string,\r\n    trimOnBlur: toBe.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    value: null,\r\n    type: 'text',\r\n    onChange: _.noop,\r\n    onBlur: _.noop,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: (!_.isNil(props.value) ? props.value : props.defaultValue) || '',\r\n    };\r\n    _.bindAll(['handleChange', 'handleBlur', 'handleKeyPress'], this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.value !== this.props.value) {\r\n      this.setState({ value: this.props.value });\r\n    }\r\n  }\r\n\r\n  handleChange(e) {\r\n    const newValue = e.target.value;\r\n    this.setState({ value: newValue }, () => this.props.onChange(newValue));\r\n  }\r\n\r\n  handleBlur(e) {\r\n    const { type } = this.props;\r\n    const { value } = this.state;\r\n    if (type === 'number') {\r\n      const numericValue = Number(value);\r\n      if (numericValue >= Number(e.target.min) && numericValue <= Number(e.target.max)) {\r\n        this.props.onBlur(numericValue, e);\r\n      } else {\r\n        this.setState({ value: this.props.value });\r\n        this.props.onBlur(this.props.value, e);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleKeyPress(e) {\r\n    if (e.key === 'Enter') {\r\n      this.handleBlur(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props;\r\n\r\n    // HACK: This component uses onInput instead of onChange\r\n    // because IE11 fails to call onChange events when you paste/cut using context menu (RMB)\r\n    // We're using onInput because it works fine, and because for text input\r\n    // there's no difference between how onChange and onInput work\r\n    return (\r\n      <input\r\n        {..._.omit(['defaultValue', 'onChange'], this.props)}\r\n        className={classNames(className, 'text-input')}\r\n        value={this.state.value}\r\n        onBlur={this.handleBlur}\r\n        onKeyPress={this.handleKeyPress}\r\n        onInput={this.handleChange}\r\n        onChange={_.noop} // Handled by onInput\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './toggle.scss';\r\n\r\n// imports from styles\r\nexport default class Toggle extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.id = _.uniqueId();\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.props.onChange(e.target.checked);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"toggle-checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle-checkbox-cb\"\r\n          id={this.id}\r\n          onChange={this.onChange}\r\n          checked={this.props.checked}\r\n        />\r\n        <label htmlFor={this.id} className=\"toggle\">\r\n          <span></span>\r\n        </label>\r\n        {this.props.children && (\r\n          <label htmlFor={this.id} className=\"text-label\">\r\n            {this.props.children}\r\n          </label>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\nimport './styles.scss';\r\n\r\nexport default class CollapsibleBar extends PureComponent {\r\n  static propTypes = {\r\n    className: toBe.string,\r\n    children: toBe.any,\r\n    title: toBe.any,\r\n    defaultOpen: toBe.bool,\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = { open: props.defaultOpen || false };\r\n  }\r\n\r\n  render() {\r\n    const { children, title, className } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classNames('collapsible-bar', className, { open })}>\r\n        <div className=\"header\" onClick={() => this.setState(state => ({ open: !state.open }))}>\r\n          <div className=\"collapse-button\">\r\n            <FaChevronRight />\r\n          </div>\r\n          <div className=\"title\">{title}</div>\r\n        </div>\r\n        {children && <div className=\"collapsible-children\">{children}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport toBe from 'prop-types';\r\nimport { Popper } from 'react-popper';\r\nimport classNames from 'classnames';\r\nimport listensToClickOutside from 'react-onclickoutside';\r\n\r\nimport './overlay.scss';\r\n\r\nconst POPPER_MODIFIERS = {\r\n  preventOverflow: {\r\n    enabled: true,\r\n    padding: 10,\r\n    boundariesElement: 'viewport',\r\n  },\r\n};\r\n\r\nconst PLACEMENT_ARROW_MAPPING = {\r\n  right: 'left',\r\n  left: 'right',\r\n  top: 'bottom',\r\n  bottom: 'top',\r\n};\r\n\r\nconst getArrowPlacement = placement => {\r\n  return placement && PLACEMENT_ARROW_MAPPING[placement.split('-')[0]];\r\n};\r\n\r\nclass Overlay extends React.PureComponent {\r\n  static propTypes = {\r\n    placement: toBe.string,\r\n    overlayItem: toBe.any,\r\n    hideWhenOutOfBounds: toBe.bool,\r\n  };\r\n\r\n  static defaultTypes = {\r\n    placement: 'bottom',\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isVisible: false,\r\n    };\r\n    this.containerItemRef = React.createRef();\r\n    this.renderPopper = this.renderPopper.bind(this);\r\n    this.toggleOverlayVisibility = this.toggleOverlayVisibility.bind(this);\r\n  }\r\n\r\n  hideOverlay() {\r\n    this.setState({\r\n      isVisible: false,\r\n    });\r\n  }\r\n\r\n  toggleOverlayVisibility() {\r\n    this.setState({\r\n      isVisible: !this.state.isVisible,\r\n    });\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    const preventHiding = event && event.target.closest('.inner-popper-overlay'); // prevent overlays from hiding when a modal is opened within overlay\r\n\r\n    if (!preventHiding) {\r\n      this.hideOverlay();\r\n    }\r\n  }\r\n\r\n  renderPopper({ ref, style, placement, arrowProps, scheduleUpdate, outOfBoundaries }) {\r\n    const { children, hideWhenOutOfBounds } = this.props;\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        data-placement={placement}\r\n        className={classNames(\r\n          'inner-popper-overlay',\r\n          `arrow-${getArrowPlacement(placement)}`,\r\n          this.props.overlayClassName,\r\n          { 'out-of-bounds': outOfBoundaries && hideWhenOutOfBounds }\r\n        )}\r\n      >\r\n        <div className=\"arrow-hider\">\r\n          <div className=\"arrow\" ref={arrowProps.ref} style={arrowProps.style} />\r\n        </div>\r\n        <div\r\n          className=\"inner-popper-content\"\r\n          // ref={ref => this.setupPopperContentRef(scheduleUpdate, ref)}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { placement, overlayItem } = this.props;\r\n    const { isVisible } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"overlay-item\"\r\n          ref={this.containerItemRef}\r\n          onClick={this.toggleOverlayVisibility}\r\n        >\r\n          {overlayItem}\r\n        </div>\r\n        {isVisible &&\r\n          ReactDOM.createPortal(\r\n            <Popper\r\n              container={document.body}\r\n              modifiers={POPPER_MODIFIERS}\r\n              placement={placement}\r\n              referenceElement={this.containerItemRef.current}\r\n            >\r\n              {this.renderPopper}\r\n            </Popper>,\r\n            document.body\r\n          )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default listensToClickOutside(Overlay);\r\n","import React from 'react';\r\nimport { Range as ReactRange, getTrackBackground } from 'react-range';\r\n\r\nexport default function Range({ range, min, max, onChange }) {\r\n  return (\r\n    <ReactRange\r\n      values={range}\r\n      step={1}\r\n      min={min}\r\n      max={max}\r\n      onChange={onChange}\r\n      renderTrack={({ props, children }) => (\r\n        <div\r\n          onMouseDown={props.onMouseDown}\r\n          onTouchStart={props.onTouchStart}\r\n          style={{\r\n            ...props.style,\r\n            position: 'relative',\r\n            height: '10px',\r\n            display: 'flex',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <div\r\n            ref={props.ref}\r\n            style={{\r\n              height: '6px',\r\n              width: '100%',\r\n              borderRadius: '3px',\r\n              background: getTrackBackground({\r\n                values: range,\r\n                colors: ['#ccc', '#88d3ff', '#ccc'],\r\n                min,\r\n                max,\r\n              }),\r\n              alignSelf: 'center',\r\n            }}\r\n          >\r\n            {children}\r\n          </div>\r\n        </div>\r\n      )}\r\n      renderThumb={({ props, isDragged }) => (\r\n        <div\r\n          {...props}\r\n          style={{\r\n            ...props.style,\r\n            height: '12px',\r\n            width: '12px',\r\n            borderRadius: '6px',\r\n            backgroundColor: '#FFF',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            boxShadow: '0px 2px 3px #AAA',\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              height: '6px',\r\n              width: '6px',\r\n              borderRadius: '3px',\r\n              backgroundColor: isDragged ? '#88d3ff' : '#CCC',\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\nimport { FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Range from 'components/Shared/Range';\r\n\r\nimport { CHART_MIN_MAX, DURATION_DEFAULT, DURATION } from 'constants/leaderboard';\r\n\r\nexport default function ChartFilter({ filterValue, onChange: onChangeEx }) {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filterValue);\r\n  const type = _.getOr(null, 'type', filterValue);\r\n  const duration = _.getOr(DURATION_DEFAULT, 'duration', filterValue);\r\n\r\n  let buttonText = 'фильтр чартов';\r\n  if (filterValue) {\r\n    const t = type || '';\r\n    buttonText = range[0] === range[1] ? `${t}${range[0]}` : `${t}${range[0]} - ${t}${range[1]}`;\r\n    buttonText = 'чарты: ' + buttonText;\r\n    if (!_.isEqual(duration, DURATION_DEFAULT)) {\r\n      buttonText += ' ***';\r\n      // buttonText += ` (${_.values(DURATION)\r\n      //   .filter(dur => duration.includes(dur))\r\n      //   .map(s => s.slice(0, 2))\r\n      //   .join('-')})`;\r\n    }\r\n  }\r\n\r\n  const onChange = value => {\r\n    onChangeEx({\r\n      range,\r\n      type,\r\n      ...value,\r\n      duration: _.isEmpty(value.duration) ? duration : value.duration,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Overlay\r\n        overlayClassName=\"chart-range-overlay-outer\"\r\n        overlayItem={\r\n          <button className=\"filter-charts-button btn btn-sm btn-dark\">{buttonText}</button>\r\n        }\r\n      >\r\n        <div className=\"chart-range-overlay\">\r\n          <div className=\"buttons\">\r\n            <ToggleButton\r\n              text=\"Single\"\r\n              active={type === 'S'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  type: active ? 'S' : null,\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Double\"\r\n              active={type === 'D'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  type: active ? 'D' : null,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <Range\r\n            range={range}\r\n            min={CHART_MIN_MAX[0]}\r\n            max={CHART_MIN_MAX[1]}\r\n            onChange={r => onChange({ range: r })}\r\n          />\r\n          <div className=\"inputs\">\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  range: [Math.max(range[0] - 1, CHART_MIN_MAX[0]), range[1]],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={CHART_MIN_MAX[0]}\r\n              max={Math.min(CHART_MIN_MAX[1], range[1])}\r\n              value={range[0]}\r\n              onBlur={value => {\r\n                onChange({ range: [value, range[1]] });\r\n              }}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMin = Math.min(range[0] + 1, CHART_MIN_MAX[1]);\r\n                onChange({\r\n                  range: [newMin, range[1] < newMin ? newMin : range[1]],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMax = Math.max(range[1] - 1, CHART_MIN_MAX[0]);\r\n                onChange({\r\n                  range: [range[0] > newMax ? newMax : range[0], newMax],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={Math.max(CHART_MIN_MAX[0], range[0])}\r\n              max={CHART_MIN_MAX[1]}\r\n              value={range[1]}\r\n              onBlur={value => onChange({ range: [range[0], value] })}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  range: [range[0], Math.min(range[1] + 1, CHART_MIN_MAX[1])],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n          </div>\r\n          <div className=\"buttons-duration\">\r\n            <ToggleButton\r\n              text=\"Standard\"\r\n              active={duration.includes(DURATION.STD)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.STD]\r\n                    : _.without([DURATION.STD], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Short\"\r\n              active={duration.includes(DURATION.SHORT)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.SHORT]\r\n                    : _.without([DURATION.SHORT], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Remix\"\r\n              active={duration.includes(DURATION.REMIX)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.REMIX]\r\n                    : _.without([DURATION.REMIX], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Full\"\r\n              active={duration.includes(DURATION.FULL)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.FULL]\r\n                    : _.without([DURATION.FULL], duration),\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Overlay>\r\n    </div>\r\n  );\r\n}\r\n","export const ranks = [\r\n  {\r\n    threshold: 0,\r\n    iconName: '0.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 1000,\r\n    iconName: '1.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 2000,\r\n    iconName: '2.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 3000,\r\n    iconName: '3.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 4000,\r\n    iconName: '4.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 5000,\r\n    iconName: '5.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 6250,\r\n    iconName: '6.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 7500,\r\n    iconName: '7.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 8750,\r\n    iconName: '8.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 10000,\r\n    iconName: '9.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 12000,\r\n    iconName: '10.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 14000,\r\n    iconName: '11.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 16000,\r\n    iconName: '12.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 18000,\r\n    iconName: '13.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 22000,\r\n    iconName: '14.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 26000,\r\n    iconName: '15.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 30000,\r\n    iconName: '16.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 35000,\r\n    iconName: '17.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 40000,\r\n    iconName: '18.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 50000,\r\n    iconName: '19.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 60000,\r\n    iconName: '20.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 70000,\r\n    iconName: '21.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 80000,\r\n    iconName: '22.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 100000,\r\n    iconName: '23.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 120000,\r\n    iconName: '24.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 140000,\r\n    iconName: '25.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 160000,\r\n    iconName: '26.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 180000,\r\n    iconName: '27.png',\r\n    color: 'green',\r\n  },\r\n];\r\n","import React from 'react';\r\n\r\nexport const gradeValue = {\r\n  F: 0.1,\r\n  D: 0.2,\r\n  'D+': 0.3,\r\n  C: 0.3,\r\n  'C+': 0.5,\r\n  B: 0.5,\r\n  'B+': 0.8,\r\n  A: 0.8,\r\n  'A+': 1,\r\n  S: 1.1,\r\n  SS: 1.2,\r\n  SSS: 1.2,\r\n};\r\n\r\nexport const getExp = (result, chart) => {\r\n  if (!result.isBestGradeOnChart) {\r\n    return 0;\r\n  }\r\n  if (chart.chartType === 'COOP') {\r\n    return (chart.chartLevel * 1000 * (gradeValue[result.grade] || 0.8)) / 8;\r\n  }\r\n  const exp = (chart.chartLevel ** 2.31 * (gradeValue[result.grade] || 0.8)) / 9;\r\n  return exp;\r\n};\r\n\r\nexport const getRankImg = rank =>\r\n  rank && (\r\n    <img\r\n      className={rank.color}\r\n      src={`${process.env.PUBLIC_URL}/ranks/${rank.iconName}`}\r\n      alt={rank.threshold}\r\n    />\r\n  );\r\n\r\nexport { ranks } from './expRanks';\r\n","import _ from 'lodash/fp';\r\n\r\nimport {\r\n  GiLoveSong,\r\n  GiLifeBar,\r\n  GiSmokingFinger,\r\n  GiSnail,\r\n  GiRetroController,\r\n  GiRank1,\r\n  GiRank2,\r\n  GiRank3,\r\n  GiWoodenPegleg,\r\n  GiPodiumSecond,\r\n} from 'react-icons/gi';\r\n\r\nexport const achievements = {\r\n  '500 комбо': {\r\n    icon: GiRank1,\r\n    description: 'Заработать 500+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 500 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  '1000 комбо': {\r\n    icon: GiRank2,\r\n    description: 'Заработать 1000+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 1000 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  '2000 комбо': {\r\n    icon: GiRank3,\r\n    description: 'Заработать 2000+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 2000 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Мастер фингеринга': {\r\n    icon: GiSmokingFinger,\r\n    description: 'Сыграть все Fingers треки',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: ['Monkey Fingers', 'Kimchi Fingers', 'Monkey Fingers 2', 'Money Fingers'],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  '8-bit': {\r\n    icon: GiRetroController,\r\n    description: 'Сыграть Seize My Day, Tales of Pumpnia и Pumptris (8bit ver.)',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: ['Seize My Day', 'Tales of Pumpnia', 'Pumptris (8bit ver.)'],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  'Love is...': {\r\n    icon: GiLoveSong,\r\n    description: 'Сыграть все Love is a Danger Zone треки',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: [\r\n        'Love is a Danger Zone',\r\n        'Love is a Danger Zone [SHORT]',\r\n        'Love is a Danger Zone (Cranky Mix)',\r\n        'Love is a Danger Zone 2',\r\n        'Love is a Danger Zone 2 [SHORT]',\r\n        'Love is a Danger Zone 2 [FULL]',\r\n        'Love is a Danger Zone 2 (D&G Ver.)',\r\n        'Love is a Danger Zone (try to B.P.M.)',\r\n      ],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  Улитка: {\r\n    icon: GiSnail,\r\n    description:\r\n      'Мастер замедлений: сыграть старшие чарты Twist of Fate, Karyawisata, Awakening и Moonlight',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: [\r\n        { song: 'Twist of Fate (feat. Ruriling)', charts: ['D20', 'S19'] },\r\n        { song: 'Karyawisata', charts: ['S20', 'D16'] },\r\n        { song: 'Awakening', charts: ['S19', 'D20'] },\r\n        { song: 'Moonlight', charts: ['S19', 'D21'] },\r\n      ],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.some(\r\n        songToPlay => chart.song === songToPlay.song && songToPlay.charts.includes(chart.chartLabel)\r\n      )\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  'Коричневая S': {\r\n    icon: GiPodiumSecond,\r\n    description: 'Получить S, но 5+ бэдов',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.miss === 0 && result.bad >= 5 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Мы выживали как могли': {\r\n    icon: GiLifeBar,\r\n    description: 'Получить B или ниже, но удержать лайфбар',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress:\r\n          state.progress === 100 ? 100 : ['B+', 'C+', 'D+'].includes(result.grade) ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Падовый мисс': {\r\n    icon: GiWoodenPegleg,\r\n    description: 'Когда от SSS тебя удерживают только миссы из-за плохого моддинга падов',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress:\r\n          state.progress === 100\r\n            ? 100\r\n            : result.miss > 0 && result.bad === 0 && result.good === 0 && result.great === 0\r\n            ? 100\r\n            : 0,\r\n      };\r\n    },\r\n  },\r\n};\r\n\r\nexport const initialAchievementState = {\r\n  progress: 0,\r\n};\r\n","export const getScoreWithoutBonus = (score, grade) => {\r\n  if (grade === 'SSS') return score - 300000;\r\n  if (grade === 'SS') return score - 150000;\r\n  if (grade === 'S') return score - 100000;\r\n  return score;\r\n};\r\n","import _ from 'lodash/fp';\r\nimport regression from 'regression';\r\n\r\nimport { ranks as expRanks } from 'utils/expRanks';\r\n\r\nconst processBattles = ({ battles, profiles, debug, resultInfo: dictScoreInfo }) => {\r\n  let logText = '';\r\n  const dictChartElo = {};\r\n  const getDictChartEloId = (score, enemyScore) =>\r\n    `${score.playerId}vs${enemyScore.playerId}-${score.sharedChartId}-${score.isRank}`;\r\n  const dictRatingDiff = {};\r\n  const getDictRatingDiffId = (score) => `${score.playerId}-${score.sharedChartId}-${score.isRank}`;\r\n  // const dictScoreInfo = {};\r\n  battles.forEach(([score, enemyScore, song]) => {\r\n    // For each battle\r\n    const p1 = profiles[score.playerId];\r\n    const p2 = profiles[enemyScore.playerId];\r\n\r\n    const scoreMultiplier = score.isRank ? 1.2 : 1;\r\n    let maxScore = null;\r\n    if (song.maxScore) {\r\n      maxScore = song.maxScore * scoreMultiplier;\r\n      if (\r\n        Math.max(maxScore, score.score, enemyScore.score) !== maxScore &&\r\n        !score.isRank &&\r\n        (!score.isExactDate || !enemyScore.isExactDate)\r\n      ) {\r\n        maxScore *= 1.2;\r\n        // Rank from machine best wasn't recognized most likely.\r\n        // Increasing max score by 20% is fine\r\n      }\r\n      if (Math.max(maxScore, score.score, enemyScore.score) !== maxScore) {\r\n        // If calculated max score isn't max score anyway, use current scores as max + cherry on top\r\n        maxScore = Math.max(maxScore, score.score, enemyScore.score) + 10000;\r\n      }\r\n    }\r\n\r\n    // Data to be appended to every score outside of this thread\r\n    if (!dictScoreInfo[score.id]) dictScoreInfo[score.id] = {};\r\n    if (!dictScoreInfo[enemyScore.id]) dictScoreInfo[enemyScore.id] = {};\r\n    const scoreInfo = dictScoreInfo[score.id];\r\n    const enemyScoreInfo = dictScoreInfo[enemyScore.id];\r\n\r\n    // Rating at the start of battle for this score\r\n    if (!scoreInfo.startingRating) scoreInfo.startingRating = p1.rating;\r\n    if (!enemyScoreInfo.startingRating) enemyScoreInfo.startingRating = p2.rating;\r\n\r\n    // Counting the number of battles\r\n    p1.battleCount++;\r\n    p2.battleCount++;\r\n\r\n    // This is one match between two players\r\n    //// Elo formula\r\n    // const r1 = score.startingRating;\r\n    // const r2 = enemyScore.startingRating;\r\n    const r1 = p1.rating;\r\n    const r2 = p2.rating;\r\n    const R1 = 10 ** (r1 / 400);\r\n    const R2 = 10 ** (r2 / 400);\r\n    const E1 = R1 / (R1 + R2);\r\n    const E2 = R2 / (R1 + R2);\r\n    let A = score.score;\r\n    let B = enemyScore.score;\r\n    let S1, S2;\r\n    if (A === B) {\r\n      S1 = S2 = 0.5;\r\n    } else if (maxScore && A !== 0 && B !== 0) {\r\n      A = maxScore / A - 1;\r\n      B = maxScore / B - 1;\r\n      S1 = (B / (A + B) - 0.5) * 5 + 0.5;\r\n      S2 = (A / (A + B) - 0.5) * 5 + 0.5;\r\n    } else {\r\n      S1 = A > B ? 1 : B < A ? 0 : 0.5;\r\n      S2 = 1 - S1;\r\n    }\r\n    S1 = Math.max(0, Math.min(1, S1)); // Set strict boundaries to [0, 1]\r\n    S2 = Math.max(0, Math.min(1, S2));\r\n\r\n    const kRating1 = Math.max(0, Math.min(1, (r1 - 700) / 800));\r\n    const kRating2 = Math.max(0, Math.min(1, (r2 - 700) / 800));\r\n    const maxK1 = 20 + 20 * kRating1;\r\n    const maxK2 = 20 + 20 * kRating2;\r\n    const chartLevel = Number(song.interpolatedDifficulty || song.chartLevel);\r\n    const kLevel1 = Math.max(\r\n      1,\r\n      Math.min(maxK1, (chartLevel / 25) ** ((kRating1 - 0.5) * 5 + 2.5) * maxK1)\r\n    );\r\n    const kLevel2 = Math.max(\r\n      1,\r\n      Math.min(maxK2, (chartLevel / 25) ** ((kRating2 - 0.5) * 5 + 2.5) * maxK2)\r\n    );\r\n    const kLevel = Math.min(kLevel1, kLevel2);\r\n\r\n    // When YOU vs ENEMY both have SS/SSS, and both scores are very close to SSS, this battle will NOT affect ELO too much\r\n    let kMinimizer = 1;\r\n    const kDropCutoff = 0.98; // Score is 98% of max score or higher -- K will be lower\r\n    if (\r\n      song.maxScore &&\r\n      (score.grade.startsWith('SS') || (score.miss === 0 && score.bad === 0)) &&\r\n      (enemyScore.grade.startsWith('SS') || (enemyScore.miss === 0 && enemyScore.bad === 0)) &&\r\n      score.score / maxScore > kDropCutoff &&\r\n      enemyScore.score / maxScore > kDropCutoff\r\n    ) {\r\n      kMinimizer =\r\n        Math.max(\r\n          Math.min(\r\n            1,\r\n            Math.max(\r\n              100 - (100 * score.score) / maxScore,\r\n              100 - (100 * enemyScore.score) / maxScore\r\n            ) /\r\n              (100 - kDropCutoff * 100)\r\n          ),\r\n          0\r\n        ) ** 2;\r\n    }\r\n\r\n    const K1 = kLevel * kMinimizer;\r\n    const K2 = kLevel * kMinimizer;\r\n    let dr1 = K1 * (S1 - E1);\r\n    let dr2 = K2 * (S2 - E2);\r\n    // Do not decrease rating if you have SSS - RIP zero-sum algorithm\r\n    dr1 = dr1 < 0 && score.grade === 'SSS' ? 0 : dr1;\r\n    dr2 = dr2 < 0 && enemyScore.grade === 'SSS' ? 0 : dr2;\r\n    // Recording this value for display\r\n    const baseEloId1 = getDictChartEloId(score, enemyScore);\r\n    const baseEloId2 = getDictChartEloId(enemyScore, score);\r\n    const baseEloP1 = dictChartElo[baseEloId1] || 0;\r\n    const baseEloP2 = dictChartElo[baseEloId2] || 0;\r\n    dictChartElo[baseEloId1] = dr1;\r\n    dictChartElo[baseEloId2] = dr2;\r\n\r\n    // Change rating as a result of this battle\r\n    p1.rating = p1.rating + dr1 - baseEloP1;\r\n    p2.rating = p2.rating + dr2 - baseEloP2;\r\n\r\n    const ratingDiffId1 = getDictRatingDiffId(score);\r\n    const ratingDiffId2 = getDictRatingDiffId(enemyScore);\r\n    dictRatingDiff[ratingDiffId1] = (dictRatingDiff[ratingDiffId1] || 0) + dr1 - baseEloP1;\r\n    dictRatingDiff[ratingDiffId2] = (dictRatingDiff[ratingDiffId2] || 0) + dr2 - baseEloP2;\r\n\r\n    // Q\r\n    scoreInfo.ratingDiff = dictRatingDiff[ratingDiffId1];\r\n    scoreInfo.ratingDiffLast = dr1 - baseEloP1;\r\n\r\n    enemyScoreInfo.ratingDiff = dictRatingDiff[ratingDiffId2];\r\n    enemyScoreInfo.ratingDiffLast = dr2 - baseEloP2;\r\n\r\n    if (debug) {\r\n      // if (score.sharedChartId === 5292) {\r\n      // if (song.song === 'Club Night') {\r\n      // if (score.nickname === 'Liza' || enemyScore.nickname === 'Liza') {\r\n      // if (!song.maxScore) {\r\n      logText += `${song.chartLabel} - ${song.song} (${song.sharedChartId}) - ${\r\n        profiles[score.playerId].name\r\n      } / ${profiles[enemyScore.playerId].name}\r\n- ${score.score} / ${enemyScore.score} (${Math.floor(maxScore)} (${Math.floor(\r\n        song.maxScore * scoreMultiplier\r\n      )})) - R ${S1.toFixed(2)}/${S2.toFixed(2)} E ${E1.toFixed(2)} / ${E2.toFixed(2)}\r\n- Rating ${r1.toFixed(2)} / ${r2.toFixed(2)} - ${dr1.toFixed(2)} / ${dr2.toFixed(\r\n        2\r\n      )} - K ${K1.toFixed(2)} ${K2.toFixed(2)}${\r\n        kMinimizer === 1 ? '' : ` (coef ${kMinimizer.toFixed(2)})`\r\n      }\r\n- Base elo: ${baseEloP1.toFixed(2)} / ${baseEloP2.toFixed(2)}\r\n- Elo change: ${(dr1 - baseEloP1).toFixed(2)} / ${(dr2 - baseEloP2).toFixed(2)}\r\n- New base elo: ${dictChartElo[baseEloId1].toFixed(2)} / ${dictChartElo[baseEloId2].toFixed(2)}\r\n- RD: ${dictRatingDiff[ratingDiffId1].toFixed(2)} / ${dictRatingDiff[ratingDiffId2].toFixed(2)}\\n`;\r\n    }\r\n    // Rating floor\r\n    p1.rating = Math.max(100, p1.rating);\r\n    p2.rating = Math.max(100, p2.rating);\r\n\r\n    const playersSorted = _.flow(\r\n      _.keys,\r\n      _.map((id) => ({ id, rating: profiles[id].rating })),\r\n      _.orderBy(['rating'], ['desc'])\r\n    )(profiles);\r\n    const battleDate =\r\n      score.dateObject > enemyScore.dateObject ? score.dateObject : enemyScore.dateObject;\r\n    playersSorted.forEach((player, index) => {\r\n      const lastPlace = profiles[player.id].lastPlace;\r\n      if (lastPlace !== index + 1) {\r\n        profiles[player.id].rankingHistory.push({\r\n          place: index + 1,\r\n          date: battleDate.getTime(),\r\n        });\r\n        profiles[player.id].lastPlace = index + 1;\r\n      }\r\n    });\r\n\r\n    const p1LastRating = _.last(p1.ratingHistory);\r\n    const p2LastRating = _.last(p2.ratingHistory);\r\n    if (p1LastRating !== p1.rating) {\r\n      p1.ratingHistory.push({\r\n        rating: p1.rating,\r\n        date: battleDate.getTime(),\r\n      });\r\n    }\r\n    if (p2LastRating !== p2.rating) {\r\n      p2.ratingHistory.push({\r\n        rating: p2.rating,\r\n        date: battleDate.getTime(),\r\n      });\r\n    }\r\n  });\r\n\r\n  _.flow(\r\n    _.keys,\r\n    _.forEach((key) => {\r\n      profiles[key].id = _.toInteger(key);\r\n      profiles[key].accuracy =\r\n        profiles[key].countAcc > 0\r\n          ? Math.round((profiles[key].sumAccuracy / profiles[key].countAcc) * 100) / 100\r\n          : null;\r\n      profiles[key].ratingRaw = profiles[key].rating;\r\n      profiles[key].rating = Math.round(profiles[key].rating);\r\n      profiles[key].rankingHistory = [\r\n        ...profiles[key].rankingHistory,\r\n        { place: _.get('place', _.last(profiles[key].rankingHistory)), date: Date.now() },\r\n      ];\r\n    })\r\n  )(profiles);\r\n  return { logText };\r\n};\r\n\r\nconst postProcessProfiles = (profiles, tracklist) => {\r\n  const getBonusForLevel = (level) => (30 * (1 + 2 ** (level / 4))) / 11;\r\n  const getMinimumNumber = (totalCharts) =>\r\n    Math.round(\r\n      Math.min(totalCharts, 1 + totalCharts / 20 + Math.sqrt(Math.max(totalCharts - 1, 0)) * 0.7)\r\n    );\r\n\r\n  const newProfiles = _.mapValues((profile) => {\r\n    const neededGrades = ['A', 'A+', 'S', 'SS', 'SSS'];\r\n    profile.expRank = _.findLast((rank) => rank.threshold <= profile.exp, expRanks);\r\n    profile.expRankNext = _.find((rank) => rank.threshold > profile.exp, expRanks);\r\n    profile.progress = {\r\n      double: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n      single: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n    };\r\n    const gradeIncrementMap = {\r\n      SSS: ['SS', 'S', 'A+', 'A'],\r\n      SS: ['SS', 'S', 'A+', 'A'],\r\n      S: ['S', 'A+', 'A'],\r\n      'A+': ['A+', 'A'],\r\n      A: ['A'],\r\n    };\r\n    const incrementLevel = (l, g, chartType) => {\r\n      const prog =\r\n        chartType === 'S' || chartType === 'SP'\r\n          ? profile.progress.single\r\n          : chartType === 'D' || chartType === 'DP'\r\n          ? profile.progress.double\r\n          : null;\r\n      if (prog) {\r\n        prog[g][l] = prog[g][l] ? prog[g][l] + 1 : 1;\r\n      }\r\n    };\r\n\r\n    profile.accuracyPointsRaw = [];\r\n    _.keys(profile.resultsByLevel).forEach((level) => {\r\n      profile.resultsByLevel[level].forEach((res) => {\r\n        if (!res.result.isRank && res.result.accuracyRaw) {\r\n          profile.accuracyPointsRaw.push([\r\n            _.toNumber(level),\r\n            res.result.accuracyRaw,\r\n            res.result.sharedChartId,\r\n          ]);\r\n        }\r\n\r\n        const thisGrade = res.result.grade;\r\n        const thisPlayerId = res.result.playerId;\r\n        const otherResults = res.chart.results.filter((r) => r.playerId === thisPlayerId);\r\n        if (otherResults.length > 1) {\r\n          const sortedResults = otherResults.sort(\r\n            (a, b) => neededGrades.indexOf(b.grade) - neededGrades.indexOf(a.grade)\r\n          );\r\n          if (sortedResults[0].grade !== thisGrade) {\r\n            return; // Don't do anything when we have a different result with better grade\r\n          }\r\n        }\r\n        const gradeIncArray = gradeIncrementMap[thisGrade];\r\n        if (gradeIncArray) {\r\n          gradeIncArray.forEach((gradeInc) => {\r\n            incrementLevel(level, gradeInc, res.chart.chartType);\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    ['single', 'double'].forEach((chartType) => {\r\n      profile.progress[`${chartType}-bonus`] = 0;\r\n      _.keys(profile.progress[chartType]).forEach((grade) => {\r\n        profile.progress[chartType][`${grade}-bonus`] = 0;\r\n        _.keys(profile.progress[chartType][grade]).forEach((level) => {\r\n          const number = profile.progress[chartType][grade][level];\r\n          const totalCharts = tracklist.data[`${chartType}sLevels`][level];\r\n          const minimumNumber = getMinimumNumber(totalCharts);\r\n          const bonusCoefficientNumber = Math.min(1, number / minimumNumber);\r\n          const rawBonus = getBonusForLevel(level);\r\n          const bonus = rawBonus * bonusCoefficientNumber;\r\n          profile.progress[chartType][grade][`${level}-bonus`] = bonus;\r\n          profile.progress[chartType][grade][`${level}-bonus-coef`] = bonusCoefficientNumber;\r\n          profile.progress[chartType][grade][`${level}-min-number`] = minimumNumber;\r\n          profile.progress[chartType][grade][`${level}-achieved-number`] = number;\r\n          if (bonus >= profile.progress[chartType][`${grade}-bonus`]) {\r\n            profile.progress[chartType][`${grade}-bonus`] = bonus;\r\n            profile.progress[chartType][`${grade}-bonus-level`] = level;\r\n            profile.progress[chartType][`${grade}-bonus-level-coef`] = bonusCoefficientNumber;\r\n            profile.progress[chartType][`${grade}-bonus-level-min-number`] = minimumNumber;\r\n            profile.progress[chartType][`${grade}-bonus-level-achieved-number`] = number;\r\n          }\r\n        });\r\n        profile.progress[`${chartType}-bonus`] += profile.progress[chartType][`${grade}-bonus`];\r\n      });\r\n    });\r\n    profile.progress.bonus = profile.progress['double-bonus'] + profile.progress['single-bonus'];\r\n    profile.achievementBonus = profile.progress.bonus;\r\n    profile.accuracy =\r\n      profile.countAcc > 0\r\n        ? Math.round((profile.sumAccuracy / profile.countAcc) * 100) / 100\r\n        : null;\r\n    return profile;\r\n  }, profiles);\r\n  return newProfiles;\r\n};\r\n\r\nconst processPP = ({ profiles, sharedCharts }) => {\r\n  const resultInfo = {};\r\n  // const now = new Date();\r\n  for (const chartId in sharedCharts) {\r\n    const chart = sharedCharts[chartId];\r\n    const chartResults = chart.results;\r\n    const chartLevel = Number(chart.interpolatedDifficulty || chart.chartLevel);\r\n    const maxPP = chartLevel ** 2.2 / 7.6; // 7;\r\n    if (chart.maxScore) {\r\n      const maxScore = chart.maxScore;\r\n      for (const result of chartResults) {\r\n        if (!result.isRank && maxScore) {\r\n          const K1 = Math.max(0, Math.min(1, result.scoreRaw / maxScore - 0.3) / 0.7);\r\n          // Optional: decrease PP values for older scores. Testing showing this doesn't change anything really\r\n          // const millisecOld = now - result.dateObject;\r\n          // const maxDays = 365;\r\n          // const maxTimeDecrease = 0;\r\n          // const K2 =\r\n          //   1 -\r\n          //   maxTimeDecrease * Math.min(1, Math.max(0, millisecOld / 1000 / 60 / 60 / 24 / maxDays));\r\n          // const K = K1 * K2;\r\n\r\n          const K = K1;\r\n\r\n          // Final PP value\r\n          const pp = K * maxPP;\r\n          // Record result data\r\n          resultInfo[result.id] = {\r\n            pp: {\r\n              pp,\r\n              k: K,\r\n              maxScore,\r\n              maxPP,\r\n              ppPotential: maxPP - pp,\r\n              ppRatio: pp / maxPP,\r\n              ppFixed: Number(pp.toFixed(1)),\r\n            },\r\n          };\r\n          const profile = profiles[result.playerId];\r\n          if (profile) {\r\n            if (!profile.pp) {\r\n              profile.pp = { scores: [], pp: 0 };\r\n            }\r\n            profile.pp.scores.push({\r\n              pp_: Number(pp.toFixed(1)),\r\n              s: chart.song,\r\n              l: chart.chartLabel,\r\n              pp,\r\n              result,\r\n              chart,\r\n              K,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Calculate total pp\r\n  for (const playerId in profiles) {\r\n    const profile = profiles[playerId];\r\n    if (profile.pp) {\r\n      profile.pp.scores.sort((a, b) => b.pp - a.pp);\r\n      profile.pp.pp = 0;\r\n      profile.pp.scores.forEach((score, index) => {\r\n        profile.pp.pp += 0.95 ** index * score.pp;\r\n      });\r\n      profile.rating = profile.pp.pp;\r\n    } else {\r\n      profile.pp = {};\r\n      profile.rating = 0;\r\n    }\r\n  }\r\n\r\n  // Add first values for rankingHistory and ratingHistory\r\n  _.flow(\r\n    _.values,\r\n    _.orderBy((profile) => profile.rating, 'desc'),\r\n    (items) =>\r\n      items.forEach((profile, index) => {\r\n        profile.ratingHistory.push({\r\n          rating: profile.rating,\r\n          date: profile.firstResultDate,\r\n        });\r\n        profile.rankingHistory.push({\r\n          place: index + 1,\r\n          date: profile.firstResultDate,\r\n        });\r\n      })\r\n  )(profiles);\r\n\r\n  return resultInfo;\r\n};\r\n\r\nconst interpolateDifficulties = ({ sharedCharts, profiles, debug }) => {\r\n  let newSharedCharts = _.mapValues((chart) => {\r\n    const datas = chart.results\r\n      .map((r) => {\r\n        const profile = profiles[r.playerId];\r\n        if (!profile || !r.accuracy || r.isRank || _.size(profile.accuracyPointsRaw) < 50) {\r\n          return null;\r\n        }\r\n\r\n        if (!profile.accuracyPointsInterpolated) {\r\n          const maxAccuracy = _.maxBy(([x, y]) => y, profile.accuracyPointsRaw)[1];\r\n          const maxLevelWithMaxAcc = _.maxBy(\r\n            ([x, y]) => x,\r\n            _.filter(([x, y]) => y === maxAccuracy, profile.accuracyPointsRaw)\r\n          )[0];\r\n          const points = profile.accuracyPointsRaw\r\n            .filter(([x, y]) => x >= maxLevelWithMaxAcc - 1)\r\n            .map(([x, y]) => [30 - x, 101 - y]);\r\n          const result = regression.logarithmic(points);\r\n\r\n          const f = (x) => {\r\n            const calculated = 101 - result.predict(30 - x)[1];\r\n            return Math.max(0, Math.min(calculated, 100));\r\n          };\r\n          const yx = [];\r\n          for (let i = 1; i <= 28; i += 0.05) {\r\n            yx.push([i, f(i)]);\r\n          }\r\n\r\n          profile.accuracyPointsInterpolated = yx;\r\n        }\r\n\r\n        const interpolatedPoint = _.find(\r\n          (pair) => pair[1] < r.accuracyRaw,\r\n          profile.accuracyPointsInterpolated\r\n        );\r\n        const returnValue = {\r\n          interpolatedDifficulty: interpolatedPoint && interpolatedPoint[0],\r\n          weight:\r\n            r.accuracyRaw > 98\r\n              ? 1 - (r.accuracyRaw - 98) / (100 - 98)\r\n              : r.accuracyRaw < 80\r\n              ? Math.max(0, (r.accuracyRaw - 50) / (80 - 50))\r\n              : 1,\r\n        };\r\n        returnValue.weight *= Math.min(\r\n          1,\r\n          Math.max(0.1, (8 - Math.abs(returnValue.interpolatedDifficulty - chart.chartLevel)) / 8)\r\n        );\r\n        if (debug) {\r\n          r.interpolation = returnValue;\r\n        }\r\n        return returnValue;\r\n      })\r\n      .filter(_.identity);\r\n    const sums = datas.reduce(\r\n      (acc, item) => {\r\n        if (!item.interpolatedDifficulty) {\r\n          return acc;\r\n        }\r\n        return {\r\n          diffSum: acc.diffSum + item.interpolatedDifficulty * item.weight,\r\n          weightSum: acc.weightSum + item.weight,\r\n        };\r\n      },\r\n      { diffSum: 0, weightSum: 0 }\r\n    );\r\n    sums.diffSum += _.toNumber(chart.chartLevel) * 2;\r\n    sums.weightSum += 2;\r\n    const averageDifficulty = sums.diffSum / sums.weightSum;\r\n    // console.log(chart.song, chart.chartLabel, JSON.stringify(datas), averageDifficulty);\r\n\r\n    return {\r\n      ...chart,\r\n      interpolatedDifficulty: averageDifficulty,\r\n    };\r\n  }, sharedCharts);\r\n  return newSharedCharts;\r\n};\r\n\r\nexport const getProcessedProfiles = ({ profiles, sharedCharts, tracklist, battles, debug }) => {\r\n  // Calculate Progress achievements and bonus for starting Elo\r\n  profiles = postProcessProfiles(profiles, tracklist);\r\n\r\n  // Recalculate chart difficulty\r\n  sharedCharts = interpolateDifficulties({ debug, sharedCharts, profiles });\r\n\r\n  // Calculate PP\r\n  const resultInfo = processPP({\r\n    profiles,\r\n    sharedCharts,\r\n  });\r\n\r\n  // Calculate ELO\r\n  const { logText } = processBattles({\r\n    battles,\r\n    profiles,\r\n    resultInfo,\r\n    debug,\r\n  });\r\n\r\n  return { profiles, resultInfo, sharedCharts, logText };\r\n};\r\n","if (localStorage) {\r\n  window.debugOn = () => {\r\n    localStorage.setItem('debug', 1);\r\n  };\r\n  window.debugOff = () => {\r\n    localStorage.removeItem('debug');\r\n  };\r\n}\r\n\r\nexport const DEBUG = localStorage && localStorage.getItem('debug');\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\nimport queryString from 'query-string';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\nimport { getExp } from 'utils/exp';\r\nimport { achievements, initialAchievementState } from 'utils/achievements';\r\nimport { parseDate } from 'utils/date';\r\nimport { getScoreWithoutBonus } from 'utils/score';\r\n\r\nimport WorkerProfilesProcessing from 'workerize-loader!utils/workers/profilesPostProcess'; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport * as profilesProcessing from 'utils/workers/profilesPostProcess';\r\n\r\nimport { HOST } from 'constants/backend';\r\nimport { DEBUG } from 'constants/env';\r\nimport { RANK_FILTER } from 'constants/leaderboard';\r\n\r\nconst LOADING = `TOP/LOADING`;\r\nconst STOP_LOADING = `TOP/STOP_LOADING`;\r\nconst SUCCESS = `TOP/SUCCESS`;\r\nconst ERROR = `TOP/ERROR`;\r\nconst SET_FILTER = `TOP/SET_FILTER`;\r\nconst RESET_FILTER = `TOP/RESET_FILTER`;\r\nconst RANKING_CHANGE_SET = `TOP/RANKING_CHANGE_SET`;\r\nconst PROFILES_UPDATE = `TOP/PROFILES_UPDATE`;\r\n\r\nconst highscoresUrl = process.env.REACT_APP_SOCKET\r\n  ? 'results/highscores/trusted'\r\n  : 'results/highscores';\r\n\r\nexport const defaultFilter = {\r\n  rank: RANK_FILTER.SHOW_ALL,\r\n};\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  isLoadingRanking: false,\r\n  data: [],\r\n  filter: defaultFilter,\r\n  players: {},\r\n  profiles: {},\r\n  results: [],\r\n  resultInfo: {},\r\n  sharedCharts: {},\r\n};\r\n\r\nexport const gradeComparator = {\r\n  '?': 0,\r\n  F: 1,\r\n  D: 2,\r\n  'D+': 3,\r\n  C: 4,\r\n  'C+': 5,\r\n  B: 6,\r\n  'B+': 7,\r\n  A: 8,\r\n  'A+': 9,\r\n  S: 10,\r\n  SS: 11,\r\n  SSS: 12,\r\n};\r\n\r\nconst tryFixIncompleteResult = (result, maxTotalSteps) => {\r\n  if (!maxTotalSteps) {\r\n    return;\r\n  }\r\n  const infos = [result.perfect, result.great, result.good, result.bad, result.miss];\r\n  let fixableIndex = -1,\r\n    absentNumbersCount = 0,\r\n    localStepSum = 0;\r\n  for (let i = 0; i < 5; ++i) {\r\n    if (!_.isNumber(infos[i])) {\r\n      fixableIndex = i;\r\n      absentNumbersCount++;\r\n    } else {\r\n      localStepSum += infos[i];\r\n    }\r\n  }\r\n  if (absentNumbersCount === 1) {\r\n    result[['perfect', 'great', 'good', 'bad', 'miss'][fixableIndex]] =\r\n      maxTotalSteps - localStepSum;\r\n  }\r\n};\r\n\r\nconst guessGrade = (result) => {\r\n  if (result.misses === 0 && result.bads === 0 && result.goods === 0) {\r\n    if (result.greats === 0) {\r\n      return 'SSS';\r\n    } else {\r\n      return 'SS';\r\n    }\r\n  }\r\n  return result.grade;\r\n};\r\n\r\nconst mapResult = (res, players, chart) => {\r\n  if (typeof res.recognition_notes === 'undefined') {\r\n    // Short result, minimum info, only for ELO calculation\r\n    // Will be replaced with better result later\r\n    return {\r\n      id: res.id,\r\n      isUnknownPlayer: players[res.player].arcade_name === 'PUMPITUP',\r\n      isIntermediateResult: true,\r\n      sharedChartId: res.shared_chart,\r\n      playerId: res.player,\r\n      nickname: players[res.player].nickname,\r\n      nicknameArcade: players[res.player].arcade_name,\r\n      date: res.gained,\r\n      dateObject: parseDate(res.gained),\r\n      grade: res.grade,\r\n      isExactDate: !!res.exact_gain_date,\r\n      score: res.score,\r\n      scoreRaw: getScoreWithoutBonus(res.score, res.grade),\r\n      isRank: !!res.rank_mode,\r\n    };\r\n  }\r\n  // Full best result\r\n  let _r = {\r\n    isUnknownPlayer: players[res.player].arcade_name === 'PUMPITUP',\r\n    isIntermediateResult: false,\r\n    sharedChartId: res.shared_chart,\r\n    id: res.id,\r\n    playerId: res.player,\r\n    nickname: players[res.player].nickname,\r\n    nicknameArcade: players[res.player].arcade_name,\r\n    originalChartMix: res.original_mix,\r\n    originalChartLabel: res.original_label,\r\n    originalScore: res.original_score,\r\n    date: res.gained,\r\n    dateObject: parseDate(res.gained),\r\n    grade: res.grade !== '?' ? res.grade : guessGrade(res),\r\n    isExactDate: !!res.exact_gain_date,\r\n    score: res.score,\r\n    scoreRaw: getScoreWithoutBonus(res.score, res.grade),\r\n    scoreIncrease: res.score_increase,\r\n    calories: res.calories && res.calories / 1000,\r\n    perfect: res.perfects,\r\n    great: res.greats,\r\n    good: res.goods,\r\n    bad: res.bads,\r\n    miss: res.misses,\r\n    combo: res.max_combo,\r\n    mods: res.mods_list,\r\n    isRank: !!res.rank_mode,\r\n    isHJ: (res.mods_list || '').split(' ').includes('HJ'),\r\n    isMachineBest: res.recognition_notes === 'machine_best',\r\n    isMyBest: res.recognition_notes === 'personal_best',\r\n  };\r\n\r\n  tryFixIncompleteResult(_r, chart.maxTotalSteps);\r\n\r\n  const perfects = Math.sqrt(_r.perfect) * 10;\r\n  const acc = perfects\r\n    ? Math.floor(\r\n        ((perfects * 100 + _r.great * 85 + _r.good * 60 + _r.bad * 20 + _r.miss * -25) /\r\n          (perfects + _r.great + _r.good + _r.bad + _r.miss)) *\r\n          100\r\n      ) / 100\r\n    : null;\r\n  const accRaw = _r.perfect\r\n    ? Math.floor(\r\n        ((_r.perfect * 100 + _r.great * 85 + _r.good * 60 + _r.bad * 20 + _r.miss * -25) /\r\n          (_r.perfect + _r.great + _r.good + _r.bad + _r.miss)) *\r\n          100\r\n      ) / 100\r\n    : null;\r\n\r\n  _r.accuracy = acc < 0 ? 0 : accRaw === 100 ? 100 : acc && +acc.toFixed(2);\r\n  _r.accuracyRaw = _.toNumber(_r.accuracy);\r\n  return _r;\r\n};\r\n\r\nconst getMaxRawScore = (score) => {\r\n  return ((score.scoreRaw / score.accuracy) * 100) / (score.isRank ? 1.2 : 1);\r\n};\r\n\r\nconst initializeProfile = (result, profiles, players) => {\r\n  const id = result.playerId;\r\n  const resultsByLevel = _.fromPairs(Array.from({ length: 28 }).map((x, i) => [i + 1, []]));\r\n  profiles[id] = {\r\n    name: result.nickname,\r\n    nameArcade: result.nicknameArcade,\r\n    resultsByGrade: {},\r\n    resultsByLevel,\r\n    firstResultDate: result.dateObject,\r\n    lastResultDate: result.dateObject,\r\n    count: 0,\r\n    battleCount: 0,\r\n    countAcc: 0,\r\n    grades: { F: 0, D: 0, C: 0, B: 0, A: 0, S: 0, SS: 0, SSS: 0 },\r\n    sumAccuracy: 0,\r\n    rankingHistory: [],\r\n    ratingHistory: [],\r\n    lastPlace: null,\r\n    lastBattleDate: 0,\r\n    region: players[id].region,\r\n  };\r\n  profiles[id].achievements = _.flow(\r\n    _.keys,\r\n    _.map((achName) => [\r\n      achName,\r\n      { ...(achievements[achName].initialState || initialAchievementState) },\r\n    ]),\r\n    _.fromPairs\r\n  )(achievements);\r\n  profiles[id].exp = 0;\r\n};\r\n\r\nconst getProfileInfoFromResult = (result, chart, profiles) => {\r\n  const profile = profiles[result.playerId];\r\n\r\n  profile.count++;\r\n  if (result.accuracy) {\r\n    profile.countAcc++;\r\n    profile.sumAccuracy += result.accuracy;\r\n  }\r\n  profile.grades[result.grade.replace('+', '')]++;\r\n  if (chart.chartType !== 'COOP' && result.isBestGradeOnChart) {\r\n    profile.resultsByGrade[result.grade] = [\r\n      ...(profile.resultsByGrade[result.grade] || []),\r\n      { result, chart },\r\n    ];\r\n    profile.resultsByLevel[chart.chartLevel] = [\r\n      ...(profile.resultsByLevel[chart.chartLevel] || []),\r\n      { result, chart },\r\n    ];\r\n  }\r\n  if (result.isExactDate && profile.lastResultDate < result.dateObject) {\r\n    profile.lastResultDate = result.dateObject;\r\n  }\r\n  profile.achievements = _.mapValues.convert({ cap: false })((achState, achName) => {\r\n    return achievements[achName].resultFunction(result, chart, achState, profile);\r\n  }, profile.achievements);\r\n  profile.exp += getExp(result, chart);\r\n};\r\n\r\nconst processData = (data, tracklist) => {\r\n  const { players, results, shared_charts } = data;\r\n  //// Initialization\r\n  // Init for TOP\r\n  const mappedResults = [];\r\n  const getTopResultId = (result) => `${result.sharedChartId}-${result.playerId}-${result.isRank}`;\r\n  const getBestGradeResultId = (result) => `${result.sharedChartId}-${result.playerId}`;\r\n  const topResults = {}; // Temp object\r\n  const bestGradeResults = {}; // Temp object\r\n  const top = {}; // Main top scores pbject\r\n\r\n  // Battles for ELO calculation\r\n  const battles = [];\r\n\r\n  // Profiles for every player\r\n  let profiles = {};\r\n\r\n  // Loop 1\r\n  for (let resRaw of results) {\r\n    if (!players[resRaw.player]) {\r\n      // Player of this result was not found in list of players. Ignoring this result like it doesn't exist\r\n      continue;\r\n    }\r\n\r\n    const sharedChartId = resRaw.shared_chart;\r\n    // Initialize Song\r\n    if (!top[sharedChartId]) {\r\n      const sharedChart = shared_charts[sharedChartId];\r\n      const label = _.toUpper(sharedChart.chart_label);\r\n      const [chartType, chartLevel] = label.match(/(\\D+)|(\\d+)/g);\r\n      top[sharedChartId] = {\r\n        song: sharedChart.track_name,\r\n        chartLabel: label,\r\n        chartLevel,\r\n        chartType,\r\n        duration: sharedChart.duration,\r\n        sharedChartId: sharedChartId,\r\n        maxTotalSteps: sharedChart.max_total_steps,\r\n        results: [],\r\n        allResultsIds: [],\r\n      };\r\n    }\r\n\r\n    // Getting current chart and result (mapped)\r\n    const chartTop = top[sharedChartId];\r\n    const result = mapResult(resRaw, players, chartTop);\r\n    mappedResults.push(result);\r\n\r\n    // Inserting result into TOP\r\n    const topResultId = getTopResultId(result);\r\n    const currentTopResult = topResults[topResultId];\r\n    if (!currentTopResult || currentTopResult.score < result.score) {\r\n      if (currentTopResult) {\r\n        const oldScoreIndex = chartTop.results.indexOf(currentTopResult);\r\n        if (oldScoreIndex !== -1) {\r\n          chartTop.results.splice(oldScoreIndex, 1);\r\n        }\r\n      }\r\n      const newScoreIndex = _.sortedLastIndexBy((r) => -r.score, result, chartTop.results);\r\n      if (!result.isUnknownPlayer || newScoreIndex === 0) {\r\n        chartTop.results.splice(newScoreIndex, 0, result);\r\n        chartTop.latestScoreDate = result.date;\r\n        chartTop.allResultsIds.push(result.playerId);\r\n        topResults[topResultId] = result;\r\n      }\r\n      if (!result.isUnknownPlayer) {\r\n        chartTop.results.forEach((enemyResult) => {\r\n          if (\r\n            !enemyResult.isUnknownPlayer &&\r\n            enemyResult.isRank === result.isRank &&\r\n            enemyResult.playerId !== result.playerId &&\r\n            result.score &&\r\n            enemyResult.score\r\n          ) {\r\n            battles.push([result, enemyResult, chartTop]);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    // Getting best grade of player on this chart\r\n    if (!result.isIntermediateResult) {\r\n      const bestGradeResultId = getBestGradeResultId(result);\r\n      const currentBestGradeRes = bestGradeResults[bestGradeResultId];\r\n      if (\r\n        !currentBestGradeRes ||\r\n        gradeComparator[currentBestGradeRes.grade] <= gradeComparator[result.grade]\r\n      ) {\r\n        // Using <= here, so newer scores always win and rewrite old scores\r\n        currentBestGradeRes && (currentBestGradeRes.isBestGradeOnChart = false);\r\n        result.isBestGradeOnChart = true;\r\n        bestGradeResults[bestGradeResultId] = result;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Loop 2, when the TOP is already set up\r\n  for (let chartId in top) {\r\n    const chart = top[chartId];\r\n    chart.maxScore = null;\r\n    for (let result of chart.results) {\r\n      if (!result.isRank) {\r\n        if (result.accuracy) {\r\n          const maxScoreCandidate = getMaxRawScore(result, chart);\r\n          if (chart.maxScore < maxScoreCandidate) {\r\n            chart.maxScore = maxScoreCandidate;\r\n          }\r\n        } else if (chart.maxScore && chart.maxScore < result.score) {\r\n          chart.maxScore = result.score;\r\n        }\r\n      }\r\n      // Getting some info about players\r\n      if (!result.isUnknownPlayer && !result.isIntermediateResult) {\r\n        if (!profiles[result.playerId]) {\r\n          initializeProfile(result, profiles, players);\r\n        }\r\n        getProfileInfoFromResult(result, chart, profiles);\r\n      }\r\n    }\r\n  }\r\n\r\n  return { mappedResults, profiles, sharedCharts: top, battles };\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case STOP_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: initialState.data,\r\n        players: initialState.players,\r\n        profiles: initialState.profiles,\r\n        results: initialState.results,\r\n        sharedCharts: initialState.sharedCharts,\r\n        scoreInfo: {},\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isLoadingRanking: true,\r\n        data: action.data,\r\n        players: action.players,\r\n        profiles: action.profiles,\r\n        results: action.results,\r\n        sharedCharts: action.sharedCharts,\r\n        originalData: action.originalData,\r\n        scoreInfo: {},\r\n      };\r\n    case PROFILES_UPDATE:\r\n      return {\r\n        ...state,\r\n        isLoadingRanking: false,\r\n        profiles: action.profiles,\r\n        resultInfo: action.resultInfo,\r\n        sharedCharts: action.sharedCharts,\r\n        data: _.values(action.sharedCharts),\r\n      };\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    case RANKING_CHANGE_SET:\r\n      const hasPrevList = !_.isEmpty(action.listPrev);\r\n      return {\r\n        ...state,\r\n        profiles: _.mapValues((playerOriginal) => {\r\n          const player = {\r\n            ...playerOriginal,\r\n            prevRating: _.get(playerOriginal.id, action.rankingsPointsMap),\r\n          };\r\n          if (!hasPrevList) {\r\n            return player; // First time opening this thing and we didn't have any previous data\r\n          }\r\n          if (!_.includes(player.id, action.listPrev)) {\r\n            return { ...player, change: 'NEW' };\r\n          } else if (!_.includes(player.id, action.listNow)) {\r\n            // Should NEVER happen, idk if this is possible\r\n            return { ...player, change: '?' };\r\n          } else {\r\n            return {\r\n              ...player,\r\n              change: _.indexOf(player.id, action.listPrev) - _.indexOf(player.id, action.listNow),\r\n            };\r\n          }\r\n        }, state.profiles),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchResults = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        fetchJson({\r\n          url: `${HOST}/${highscoresUrl}`,\r\n        })\r\n      );\r\n\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n      // HACKS for test\r\n      // data.results = _.dropRight(500, data.results);\r\n      // data.results = _.dropRight(9500, data.results);\r\n      // console.log(1, data.results);\r\n      // data.results = _.filter((res) => res.gained < '2020-07-05 00:00:00', data.results);\r\n      // data.results = _.filter(res => res.gained < '2020-03-12 16:55:00', data.results);\r\n      // data.results = _.filter(res => res.gained < '2020-03-12 16:34:51', data.results);\r\n      // console.log(2, data.results);\r\n\r\n      dispatch(processResultsData(data));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const appendNewResults = (lastDate) => {\r\n  return async (dispatch, getState) => {\r\n    const { originalData, sharedCharts } = getState().results;\r\n    if (!lastDate) {\r\n      return dispatch(fetchResults());\r\n    }\r\n\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        fetchJson({\r\n          url: `${HOST}/${highscoresUrl}?${queryString.stringify({ start_date: lastDate })}`,\r\n        })\r\n      );\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n\r\n      const appendedResults = _.filter((result) => {\r\n        const currentResults = sharedCharts[result.shared_chart];\r\n        if (!currentResults) {\r\n          return true;\r\n        }\r\n        const oldResult = _.find(\r\n          (old) =>\r\n            old.id === result.id ||\r\n            (old.playerId === result.player && old.isRank === !!result.rank_mode),\r\n          currentResults.results\r\n        );\r\n        if (!oldResult) {\r\n          if (result.player === 1 && currentResults.results[0].score > result.score) {\r\n            return false;\r\n          }\r\n          return true;\r\n        }\r\n        if (oldResult.id === result.id || oldResult.score >= result.score) {\r\n          return false;\r\n        }\r\n        return true;\r\n      }, data.results);\r\n\r\n      console.log('Received results:', data, '; Will append:', appendedResults);\r\n\r\n      if (!_.isEmpty(appendedResults)) {\r\n        const mergedData = {\r\n          players: data.players,\r\n          results: [...originalData.results, ...appendedResults],\r\n          shared_charts: { ...originalData.shared_charts, ...data.shared_charts },\r\n        };\r\n        dispatch(processResultsData(mergedData));\r\n      } else {\r\n        dispatch({ type: STOP_LOADING });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nconst processResultsData = (data) => {\r\n  return async (dispatch, getState) => {\r\n    const { tracklist } = getState();\r\n    const { sharedCharts, mappedResults, profiles, battles } = processData(data, tracklist);\r\n\r\n    dispatch({\r\n      type: SUCCESS,\r\n      data: _.values(sharedCharts),\r\n      players: _.flow(\r\n        _.toPairs,\r\n        _.map(([id, player]) => ({ ...player, id: _.toInteger(id) }))\r\n      )(data.players),\r\n      results: mappedResults,\r\n      profiles,\r\n      sharedCharts,\r\n      originalData: data,\r\n    });\r\n\r\n    // Parallelized calculation of ELO and profile data\r\n    const input = { sharedCharts, profiles, tracklist, battles, debug: DEBUG };\r\n    let promise, worker;\r\n    if (window.Worker) {\r\n      worker = new WorkerProfilesProcessing();\r\n      promise = worker.getProcessedProfiles(input);\r\n    } else {\r\n      promise = new Promise((res) => res(profilesProcessing.getProcessedProfiles(input)));\r\n    }\r\n\r\n    const output = await promise;\r\n    DEBUG && console.log(output.logText);\r\n    DEBUG &&\r\n      console.log(\r\n        'Processed profiles:',\r\n        Object.values(output.profiles)\r\n          .filter((q) => q.pp)\r\n          .sort((a, b) => b.pp.pp - a.pp.pp)\r\n      );\r\n    // console.log(output.sharedCharts);\r\n    // let byLevel = _.groupBy((ch) => ch.chartLevel, _.values(output.sharedCharts));\r\n    // function getSD(array) {\r\n    //   const n = array.length;\r\n    //   const mean = array.reduce((a, b) => a + b) / n;\r\n    //   return Math.sqrt(array.map((x) => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / n);\r\n    // }\r\n    // byLevel = _.mapValues((charts) => {\r\n    //   return {\r\n    //     avgLevel: _.meanBy((ch) => ch.interpolatedDifficulty || Number(ch.chartLevel), charts),\r\n    //     deviation: getSD(charts.map((ch) => ch.interpolatedDifficulty || Number(ch.chartLevel))),\r\n    //     charts,\r\n    //   };\r\n    // }, byLevel);\r\n    // console.log(byLevel);\r\n    // console.log(\r\n    //   _.values(byLevel)\r\n    //     .map((q) => `${q.avgLevel}\\t${q.deviation}`)\r\n    //     .join('\\n')\r\n    // );\r\n    dispatch({\r\n      type: PROFILES_UPDATE,\r\n      ...output,\r\n    });\r\n    dispatch(calculateRankingChanges(output.profiles));\r\n    if (worker) worker.terminate();\r\n  };\r\n};\r\n\r\nexport const setFilter = (filter) => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\n\r\nexport const resetFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n\r\nconst getListOfNames = _.map('id');\r\nconst getMapOfRatings = _.flow(\r\n  _.map((q) => [q.id, q.rating]),\r\n  _.fromPairs\r\n);\r\n\r\nexport const calculateRankingChanges = (profiles) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const ranking = _.orderBy('ratingRaw', 'desc', _.values(profiles));\r\n      const [lastChangedRanking, lastChangedRankingPoints, lastFetchedRanking] = await Promise.all([\r\n        localForage.getItem('lastChangedRanking_v3'),\r\n        localForage.getItem('lastChangedRankingPoints_v3'),\r\n        localForage.getItem('lastFetchedRanking_v3'),\r\n      ]);\r\n      const listNow = getListOfNames(ranking);\r\n      const listLastFetched = getListOfNames(lastFetchedRanking);\r\n      const listLastChanged = getListOfNames(lastChangedRanking);\r\n      const mapPointsNow = getMapOfRatings(ranking);\r\n      const mapPointsLastFetched = getMapOfRatings(lastFetchedRanking);\r\n      const mapPointsLastChanged = getMapOfRatings(lastChangedRankingPoints);\r\n\r\n      let rankingsPointsMap = mapPointsLastChanged;\r\n      // console.log(listNow, listLastFetched, listLastChanged);\r\n      // console.log(mapPointsNow, mapPointsLastFetched, mapPointsLastChanged);\r\n      if (!_.isEqual(mapPointsNow, mapPointsLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRankingPoints_v3', lastFetchedRanking);\r\n        rankingsPointsMap = mapPointsLastFetched;\r\n      }\r\n      let listPrev = listLastChanged;\r\n      if (!_.isEqual(listNow, listLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRanking_v3', lastFetchedRanking);\r\n        listPrev = listLastFetched;\r\n      }\r\n      dispatch({\r\n        type: RANKING_CHANGE_SET,\r\n        listNow,\r\n        listPrev,\r\n        rankingsPointsMap,\r\n      });\r\n      localForage.setItem('lastFetchedRanking_v3', ranking);\r\n    } catch (error) {\r\n      console.warn('Cannot get ranking from local storage', error);\r\n    }\r\n  };\r\n};\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\n\r\nimport { setFilter } from 'reducers/results';\r\n\r\nconst SELECT_PRESET = `PRESETS/SELECT_PRESET`;\r\nconst LOAD_PRESETS = `PRESETS/LOAD_PRESETS`;\r\nconst LOADING_START = `PRESETS/LOADING_START`;\r\nconst LOADING_END = `PRESETS/LOADING_END`;\r\n\r\nconst initialState = {\r\n  presets: [],\r\n  currentPreset: null,\r\n  isLoading: false,\r\n};\r\n\r\nconst itemToOption = item =>\r\n  item && {\r\n    ...item,\r\n    label: item.name,\r\n    value: item.name,\r\n  };\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_PRESETS:\r\n      const currentPreset = _.find({ name: _.get('name', state.currentPreset) }, action.presets);\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(currentPreset) || null,\r\n        presets: _.map(itemToOption, action.presets),\r\n      };\r\n    case SELECT_PRESET:\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(action.currentPreset),\r\n      };\r\n    case LOADING_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case LOADING_END:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst reloadPresets = presets => ({ type: LOAD_PRESETS, presets: presets || [] });\r\n\r\nconst startLoading = () => ({\r\n  type: LOADING_START,\r\n});\r\n\r\nconst endLoading = () => ({\r\n  type: LOADING_END,\r\n});\r\n\r\nexport const selectPreset = currentPreset => ({\r\n  type: SELECT_PRESET,\r\n  currentPreset,\r\n});\r\n\r\nexport const loadPresets = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    dispatch(reloadPresets(presets));\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const savePreset = name => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const { filter } = getState().top;\r\n    const newPreset = { name, filter };\r\n    if (!_.some({ name }, presets)) {\r\n      const newPresets = [...(presets || []), newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      dispatch(selectPreset(newPreset));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    } else if (window.confirm('Preset with this name already exists, replace it?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      const newPresets = [...withoutOldPreset, newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const openPreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const currentPreset = getState().presets.currentPreset;\r\n  const name = _.get('name', currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = name && _.find({ name }, presets);\r\n    if (preset) {\r\n      dispatch(selectPreset(currentPreset));\r\n      dispatch(setFilter(currentPreset.filter));\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const deletePreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const name = _.get('name', getState().presets.currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = _.find({ name }, presets);\r\n    if (preset && window.confirm('Are you sure you want to delete selected preset?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      dispatch(reloadPresets(withoutOldPreset));\r\n      localForage.setItem('filterPresets', withoutOldPreset);\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaLayerGroup, FaFolderOpen, FaSave, FaPlus, FaTrashAlt } from 'react-icons/fa';\r\nimport Select from 'react-select';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport Input from 'components/Shared/Input/Input';\r\n\r\nimport { loadPresets, savePreset, selectPreset, openPreset, deletePreset } from 'reducers/presets';\r\n\r\nconst overlayItem = (\r\n  <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n    <FaLayerGroup />\r\n    пресеты\r\n  </button>\r\n);\r\n\r\nconst noPresetsMessage = () => 'пусто';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ...state.presets,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  loadPresets,\r\n  savePreset,\r\n  openPreset,\r\n  deletePreset,\r\n  selectPreset,\r\n};\r\n\r\nclass PresetsControl extends React.Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    this.props.loadPresets();\r\n  }\r\n\r\n  onChangeSelection = selected => {\r\n    this.props.selectPreset(selected.name);\r\n  };\r\n\r\n  onRewritePreset = () => {\r\n    const { currentPreset } = this.props;\r\n    this.props.savePreset(currentPreset.name);\r\n  };\r\n\r\n  onSavePreset = () => {\r\n    const { name } = this.state;\r\n    this.props.savePreset(name);\r\n    this.setState({ isAddingNew: false });\r\n  };\r\n\r\n  render() {\r\n    const { presets, currentPreset, isLoading } = this.props;\r\n    const { name, isAddingNew } = this.state;\r\n    return (\r\n      <div>\r\n        <Overlay overlayItem={overlayItem}>\r\n          <div className=\"presets-control-overlay\">\r\n            <Select\r\n              className=\"select _margin-bottom\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"пресеты...\"\r\n              options={presets}\r\n              value={currentPreset}\r\n              onChange={this.props.selectPreset}\r\n              noOptionsMessage={noPresetsMessage}\r\n            />\r\n            {currentPreset && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.props.openPreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaFolderOpen /> открыть\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.onRewritePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaSave /> перезаписать\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon\"\r\n                  onClick={this.props.deletePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaTrashAlt /> удалить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {!isAddingNew && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left _self-align-end\"\r\n                  onClick={() => this.setState({ isAddingNew: true })}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaPlus /> добавить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {isAddingNew && (\r\n              <div className=\"adding-new _margin-bottom\">\r\n                <Input\r\n                  value={name}\r\n                  placeholder=\"имя пресета...\"\r\n                  className=\"form-control\"\r\n                  onChange={name => this.setState({ name })}\r\n                />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={this.onSavePreset}\r\n                  disabled={!name || isLoading}\r\n                >\r\n                  <FaSave /> сохранить\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={() => this.setState({ isAddingNew: false })}\r\n                  disabled={isLoading}\r\n                >\r\n                  отмена\r\n                </button>\r\n              </div>\r\n            )}\r\n            {/* <div>\r\n              <Toggle\r\n                checked={false}\r\n                onToggle={active => {\r\n                  localForage.setItem('showTabs', active);\r\n                }}\r\n              >\r\n                показывать табы с пресетами\r\n              </Toggle>\r\n            </div> */}\r\n          </div>\r\n        </Overlay>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PresetsControl);\r\n","import React from 'react';\r\n\r\nconst Flag = ({ region }) => {\r\n  return (\r\n    <div\r\n      className=\"flag-img\"\r\n      style={{\r\n        backgroundImage: `url(https://osu.ppy.sh/images/flags/${region}.png)`,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Flag;\r\n","import { useState, useEffect, useMemo, useCallback, useRef } from 'react';\r\nimport _ from 'lodash/fp';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport moment from 'moment';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\nconst timeStyle = {\r\n  flavour: 'short',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nexport const getTimeAgo = (date) => {\r\n  const dayDiff = moment().startOf('day').diff(moment(date).startOf('day'), 'days');\r\n  return dayDiff === 0\r\n    ? 'сегодня'\r\n    : dayDiff === 1\r\n    ? 'вчера'\r\n    : timeAgo.format(date, timeStyle).replace('назад', '');\r\n};\r\n\r\nexport const preprocessData = (data) => ({\r\n  ...data,\r\n  results: _.flow(\r\n    _.get('results'),\r\n    _.toPairs,\r\n    _.map(([chartId, item]) => {\r\n      const fullRes = _.find(\r\n        (r) => _.every(_.isNumber, [r.perfects, r.greats, r.goods, r.bads, r.misses]),\r\n        item.results\r\n      );\r\n      const stepSum =\r\n        fullRes &&\r\n        [fullRes.perfects, fullRes.greats, fullRes.goods, fullRes.bads, fullRes.misses].reduce(\r\n          (sum, n) => sum + n,\r\n          0\r\n        );\r\n\r\n      const [chartType, chartLevel] = item.chart_label.match(/(\\D+)|(\\d+)/g);\r\n\r\n      return {\r\n        song: item.track,\r\n        sharedChartId: _.toNumber(chartId),\r\n        chartLabel: item.chart_label,\r\n        chartLevel,\r\n        chartType,\r\n        mix: item.mix,\r\n        duration: item.duration,\r\n        results: item.results.map((res, index) => {\r\n          let resultInfoOverrides = {};\r\n          if (stepSum) {\r\n            const infos = [res.perfects, res.greats, res.goods, res.bads, res.misses];\r\n            let fixableIndex = -1;\r\n            let localStepSum = 0;\r\n            const canFix =\r\n              infos.filter((numb, index) => {\r\n                if (!_.isNumber(numb)) {\r\n                  fixableIndex = index;\r\n                  return true;\r\n                }\r\n                localStepSum += numb;\r\n                return false;\r\n              }).length === 1;\r\n            if (canFix) {\r\n              resultInfoOverrides[['perfect', 'great', 'good', 'bad', 'miss'][fixableIndex]] =\r\n                stepSum - localStepSum;\r\n            }\r\n          }\r\n          return {\r\n            id: res.id,\r\n            playerId: res.player,\r\n            nickname: data.players[res.player].nickname,\r\n            nicknameArcade: data.players[res.player].arcade_name,\r\n            originalChartMix: res.originalChartMix,\r\n            originalChartLabel: res.originalChartLabel,\r\n            originalScore: res.originalScore,\r\n            date: res.gained,\r\n            dateObject: new Date(res.gained),\r\n            grade: res.grade,\r\n            isExactDate: !!res.exact_gain_date,\r\n            score: res.score,\r\n            scoreIncrease: res.score_increase,\r\n            calories: res.calories && res.calories / 1000,\r\n            perfect: res.perfects,\r\n            great: res.greats,\r\n            good: res.goods,\r\n            bad: res.bads,\r\n            miss: res.misses,\r\n            combo: res.max_combo,\r\n            mods: res.mods_list,\r\n            isRank: !!res.rank_mode,\r\n            isHJ: (res.mods_list || '').split(' ').includes('HJ'),\r\n            ...resultInfoOverrides,\r\n          };\r\n        }),\r\n      };\r\n    }),\r\n    _.map((song) => {\r\n      return {\r\n        ...song,\r\n        latestScoreDate: song.results.reduce(\r\n          (latest, current) => (current.date > latest ? current.date : latest),\r\n          song.results[0].date\r\n        ),\r\n        results: song.results.map((res) => {\r\n          const perfects = (Math.sqrt(res.perfect) * _.toInteger(song.chartLevel)) / 2;\r\n          const acc = perfects\r\n            ? Math.floor(\r\n                ((perfects * 100 + res.great * 60 + res.good * 30 + res.miss * -20) /\r\n                  (perfects + res.great + res.good + res.bad + res.miss)) *\r\n                  100\r\n              ) / 100\r\n            : null;\r\n          const accRaw = res.perfect\r\n            ? Math.floor(\r\n                ((res.perfect * 100 + res.great * 60 + res.good * 30 + res.miss * -20) /\r\n                  (res.perfect + res.great + res.good + res.bad + res.miss)) *\r\n                  100\r\n              ) / 100\r\n            : null;\r\n          return {\r\n            ...res,\r\n            accuracy: acc < 0 ? 0 : accRaw === 100 ? 100 : acc && +acc.toFixed(2),\r\n            accuracyRaw: accRaw,\r\n            hasRankScore: _.some({ playerId: res.playerId, isRank: true }, song.results),\r\n          };\r\n        }),\r\n      };\r\n    }),\r\n    _.orderBy(['latestScoreDate', 'song', 'chartLevel'], ['desc', 'asc', 'desc'])\r\n  )(data),\r\n});\r\n\r\nexport const useTrackedEx = ({\r\n  data,\r\n  resetData,\r\n  onChange = _.noop,\r\n  isDataValid = _.identity,\r\n  isDebugOn = false,\r\n}) => {\r\n  const [prevData, setPrevData] = useState(data);\r\n  const [currData, setCurrData] = useState(data);\r\n  const resetIndicator = useRef(resetData);\r\n\r\n  useEffect(() => {\r\n    // isDebugOn && console.log('tracking effect', resetIndicatorData, data, currData, prevData);\r\n    if (resetIndicator.current !== resetData) {\r\n      // isDebugOn && console.log('resetting due to indicator chage', data);\r\n      resetIndicator.current = resetData;\r\n      setPrevData(data);\r\n      setCurrData(data);\r\n    } else if (isDataValid(data) && !_.isEqual(data, currData)) {\r\n      // isDebugOn && console.log('data has updated', data, currData);\r\n      setPrevData(currData);\r\n      setCurrData(data);\r\n      onChange(currData, data);\r\n    }\r\n  }, [data, onChange, currData, prevData, resetData, isDataValid]);\r\n\r\n  const reset = useCallback(() => {\r\n    // isDebugOn && console.log('reset called from function');\r\n    setPrevData(data);\r\n    setCurrData(data);\r\n  }, [data]);\r\n\r\n  return useMemo(() => [currData, prevData, reset], [currData, prevData, reset]);\r\n};\r\n\r\nexport const useTracked = (data, resetIndicatorData, onChange = _.noop, isDebugOn) => {\r\n  const [prevData, setPrevData] = useState(data);\r\n  const [currData, setCurrData] = useState(data);\r\n  const resetIndicator = useRef(resetIndicatorData);\r\n\r\n  useEffect(() => {\r\n    // isDebugOn && console.log('tracking effect', resetIndicatorData, data, currData, prevData);\r\n    if (resetIndicator.current !== resetIndicatorData) {\r\n      // isDebugOn && console.log('resetting due to indicator chage', data);\r\n      resetIndicator.current = resetIndicatorData;\r\n      setPrevData(data);\r\n      setCurrData(data);\r\n    } else if (data && !_.isEqual(data, currData)) {\r\n      // isDebugOn && console.log('data has updated', data, currData);\r\n      setPrevData(currData);\r\n      setCurrData(data);\r\n      onChange(currData, data);\r\n    }\r\n  }, [data, onChange, currData, prevData, resetIndicatorData]);\r\n\r\n  const reset = useCallback(() => {\r\n    // isDebugOn && console.log('reset called from function');\r\n    setPrevData(data);\r\n    setCurrData(data);\r\n  }, [data]);\r\n\r\n  return useMemo(() => [currData, prevData, reset], [currData, prevData, reset]);\r\n};\r\n\r\nexport const useResetTrackedObject = (object) => {\r\n  return useCallback(() => {\r\n    const trackings = _.values(object);\r\n    trackings.forEach((tracking) => tracking[2]());\r\n  }, [object]);\r\n};\r\n","export const colorsArray = [\r\n  '#4DB3FF',\r\n  '#80B300',\r\n  '#FF6655',\r\n  '#FF99E6',\r\n  '#33FFCC',\r\n  '#e633c8',\r\n  '#dbe812',\r\n  '#FF1A66',\r\n  '#991AFF',\r\n  '#E6B333',\r\n  '#1AB399',\r\n  '#4D8066',\r\n  '#CC9999',\r\n  '#00E680',\r\n  '#809980',\r\n  '#E6FF80',\r\n  '#1AFF33',\r\n  '#999933',\r\n  '#E6331A',\r\n  '#CCCC00',\r\n  '#66E64D',\r\n  '#4D80CC',\r\n  '#9900B3',\r\n  '#4DB380',\r\n  '#FF4D4D',\r\n];\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport _ from 'lodash/fp';\r\nimport classNames from 'classnames';\r\nimport numeral from 'numeral';\r\nimport { FaExclamationTriangle, FaAngleDoubleUp } from 'react-icons/fa';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\n\r\nimport { routes } from 'constants/routes';\r\nimport { DEBUG } from 'constants/env';\r\n\r\nimport Flag from 'components/Shared/Flag';\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\n\r\nimport { getTimeAgo as getShortTimeAgo } from 'components/SocketTracker/helpers';\r\n\r\nimport { tooltipFormatter } from 'utils/leaderboards';\r\nimport { getExp } from 'utils/exp';\r\nimport { colorsArray } from 'utils/colors';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    resultInfo: state.results.resultInfo,\r\n    profiles: state.results.profiles,\r\n  };\r\n};\r\n\r\nconst Result = (\r\n  {\r\n    // shared\r\n    res,\r\n    chart,\r\n    resultInfo,\r\n    profiles,\r\n    placeDifference,\r\n    // leaderboard\r\n    showProtagonistEloChange = false,\r\n    showProtagonistPpChange = false,\r\n    protagonistName = null,\r\n    uniqueSelectedNames = [],\r\n    // socket\r\n    leftProfile = {},\r\n    rightProfile = {},\r\n    isSocketView = false,\r\n  },\r\n  ref\r\n) => {\r\n  const inf = resultInfo[res.id] || {};\r\n\r\n  // Rating info for nickname column:\r\n  let ratingInfoBlock = null;\r\n  if (DEBUG) {\r\n    // In debug mode we show all info\r\n    ratingInfoBlock = (\r\n      <>\r\n        <span className=\"debug-elo-info\">\r\n          {' '}\r\n          {inf.startingRating && Math.round(inf.startingRating)}\r\n          {' / '}\r\n          {inf.ratingDiff > 0 ? '+' : ''}\r\n          {inf.ratingDiff && Math.round(inf.ratingDiff)}\r\n          {' / '}\r\n          {inf.pp && inf.pp.ppFixed}pp\r\n        </span>\r\n      </>\r\n    );\r\n  } else if (\r\n    res.nickname === protagonistName &&\r\n    (showProtagonistEloChange || showProtagonistPpChange)\r\n  ) {\r\n    // In non-debug mode we show relevant info for selected protagonist\r\n    ratingInfoBlock = (\r\n      <>\r\n        {' / '}\r\n        {showProtagonistEloChange && inf.ratingDiff && (\r\n          <span>{`${inf.ratingDiff > 0 ? '+' : ''}${Math.round(inf.ratingDiff)}`}</span>\r\n        )}\r\n        {showProtagonistPpChange && inf.pp && <span>{inf.pp.ppFixed}pp</span>}\r\n      </>\r\n    );\r\n  }\r\n\r\n  const flag = profiles[res.playerId] ? <Flag region={profiles[res.playerId].region} /> : null;\r\n\r\n  const nameIndex = uniqueSelectedNames.indexOf(res.nickname);\r\n\r\n  return (\r\n    <tr\r\n      key={res.id}\r\n      ref={ref}\r\n      className={classNames({\r\n        empty: !res.accuracy,\r\n        latest: res.date === chart.latestScoreDate,\r\n        left: res.nickname === leftProfile.name,\r\n        right: res.nickname === rightProfile.name,\r\n      })}\r\n      style={\r\n        nameIndex > -1\r\n          ? {\r\n              background: colorsArray[nameIndex] + '3A',\r\n              outline: `1px solid ${colorsArray[nameIndex]}A0`,\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      {!isSocketView && (\r\n        <td className=\"place\">{res.isSecondOccurenceInResults ? '' : `#${res.topPlace}`}</td>\r\n      )}\r\n      <td className=\"nickname\" style={nameIndex > -1 ? { fontWeight: 'bold' } : {}}>\r\n        <div className=\"nickname-container\">\r\n          {flag}\r\n          <span className=\"nickname-text\">\r\n            <NavLink exact to={routes.profile.getPath({ id: res.playerId })}>\r\n              {res.nickname}\r\n            </NavLink>\r\n            {!!placeDifference && (\r\n              <span className=\"change-holder up\">\r\n                <span>{placeDifference}</span>\r\n                <FaAngleDoubleUp />\r\n              </span>\r\n            )}\r\n            {ratingInfoBlock}\r\n          </span>\r\n          {!isSocketView && (\r\n            <div className=\"mods-container\">\r\n              {isSocketView &&\r\n                res.mods &&\r\n                res.mods\r\n                  .split(' ')\r\n                  .filter((mod) => mod.includes('AV'))\r\n                  .map((avMod) => (\r\n                    <div className=\"mod av-mod\">\r\n                      <div className=\"av-text\">AV</div>\r\n                      <div className=\"av-number\">{avMod.replace('AV', '')}</div>\r\n                    </div>\r\n                  ))}\r\n              {isSocketView &&\r\n                res.mods &&\r\n                res.mods\r\n                  .split(' ')\r\n                  .filter((mod) => mod.endsWith('X'))\r\n                  .map((xMod) => (\r\n                    <div className=\"mod x-mod\">\r\n                      <div className=\"x-number\">{xMod}</div>\r\n                    </div>\r\n                  ))}\r\n              {res.isRank && <div className=\"mod vj\">{res.isExactDate ? 'R' : 'R?'}</div>}\r\n              {res.isHJ && <div className=\"mod hj\">HJ</div>}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </td>\r\n      <td className=\"score\">\r\n        <Overlay\r\n          overlayClassName=\"score-overlay-outer\"\r\n          overlayItem={\r\n            <span className=\"score-span\">\r\n              {res.scoreIncrease > res.score * 0.8 && '*'}\r\n              {numeral(res.score).format('0,0')}\r\n            </span>\r\n          }\r\n          placement=\"top\"\r\n        >\r\n          <div className=\"score-overlay\">\r\n            {DEBUG && (\r\n              <>\r\n                <div>\r\n                  <span className=\"_grey\">result id: </span>\r\n                  {res.id}\r\n                </div>\r\n                <div>\r\n                  <span className=\"_grey\">player id: </span>\r\n                  {res.playerId}\r\n                </div>\r\n              </>\r\n            )}\r\n            <div>\r\n              <span className=\"_grey\">игрок: </span>\r\n              <NavLink exact to={routes.profile.getPath({ id: res.playerId })}>\r\n                {res.nickname} ({res.nicknameArcade})\r\n              </NavLink>\r\n            </div>\r\n            {!!getExp(res, chart) && (\r\n              <div className=\"important\">\r\n                <span className=\"_grey\">опыт: </span>+{numeral(getExp(res, chart)).format('0,0')}\r\n              </div>\r\n            )}\r\n            {_.isNumber(inf.startingRating) && _.isNumber(inf.ratingDiff) && (\r\n              <div className=\"important\">\r\n                <span className=\"_grey\">эло: {inf.startingRating.toFixed(0)} </span>\r\n                {inf.ratingDiff >= 0 ? `+${inf.ratingDiff.toFixed(0)}` : inf.ratingDiff.toFixed(0)}\r\n              </div>\r\n            )}\r\n            {inf.pp && (\r\n              <div className=\"important\">\r\n                <span className=\"_grey\">pp: </span>\r\n                <span>{inf.pp.ppFixed}pp</span>\r\n              </div>\r\n            )}\r\n            {!res.isExactDate && (\r\n              <div className=\"warning\">\r\n                <FaExclamationTriangle />\r\n                рекорд взят с my best. часть данных недоступна\r\n              </div>\r\n            )}\r\n            {!!res.isExactDate && (\r\n              <>\r\n                {!!res.mods && (\r\n                  <div>\r\n                    <span className=\"_grey\">моды: </span>\r\n                    {res.mods}\r\n                  </div>\r\n                )}\r\n                {!!res.calories && (\r\n                  <div>\r\n                    <span className=\"_grey\">ккал: </span>\r\n                    {res.calories}\r\n                  </div>\r\n                )}\r\n                {!!res.scoreIncrease && (\r\n                  <div>\r\n                    <span className=\"_grey\">прирост: </span>+\r\n                    {numeral(res.scoreIncrease).format('0,0')}\r\n                  </div>\r\n                )}\r\n                {res.originalChartMix && (\r\n                  <div>\r\n                    <div className=\"warning\">\r\n                      <FaExclamationTriangle />\r\n                      было сыграно на {res.originalChartMix}\r\n                    </div>\r\n                    {res.originalChartLabel && (\r\n                      <div>\r\n                        <span className=\"_grey\">оригинальный чарт: </span>\r\n                        {res.originalChartLabel}\r\n                      </div>\r\n                    )}\r\n                    {res.originalScore && (\r\n                      <div>\r\n                        <span className=\"_grey\">оригинальный скор: </span>\r\n                        {res.originalScore}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                {res.scoreIncrease > res.score * 0.8 && '* сайтрид'}\r\n              </>\r\n            )}\r\n          </div>\r\n        </Overlay>\r\n      </td>\r\n      <td className=\"grade\">\r\n        <div className=\"img-holder\">\r\n          {res.grade && res.grade !== '?' && (\r\n            <img src={`${process.env.PUBLIC_URL}/grades/${res.grade}.png`} alt={res.grade} />\r\n          )}\r\n          {res.grade === '?' && null}\r\n        </div>\r\n      </td>\r\n      {isSocketView && (\r\n        <td\r\n          className={classNames('mods', {\r\n            vj: res.isRank,\r\n            hj: res.isHJ,\r\n          })}\r\n        >\r\n          <div className=\"mods-container\">\r\n            {isSocketView &&\r\n              res.mods &&\r\n              res.mods\r\n                .split(' ')\r\n                .filter((mod) => mod.includes('AV'))\r\n                .map((avMod) => (\r\n                  <div className=\"av-mod\">\r\n                    <div className=\"av-text\">AV</div>\r\n                    <div className=\"av-number\">{avMod.replace('AV', '')}</div>\r\n                  </div>\r\n                ))}\r\n            {isSocketView &&\r\n              res.mods &&\r\n              res.mods\r\n                .split(' ')\r\n                .filter((mod) => mod.endsWith('X'))\r\n                .map((xMod) => (\r\n                  <div className=\"x-mod\">\r\n                    <div className=\"x-number\">{xMod}</div>\r\n                  </div>\r\n                ))}\r\n            {res.isRank && <div className=\"inner\">{res.isExactDate ? 'R' : 'R?'}</div>}\r\n            {res.isHJ && <div className=\"inner\">HJ</div>}\r\n          </div>\r\n        </td>\r\n      )}\r\n      <td className=\"number miss\">{res.miss}</td>\r\n      <td className=\"number bad\">{res.bad}</td>\r\n      <td className=\"number good\">{res.good}</td>\r\n      <td className=\"number great\">{res.great}</td>\r\n      <td className=\"number perfect\">{res.perfect}</td>\r\n      <td className=\"combo\">\r\n        {res.combo}\r\n        {res.combo ? 'x' : ''}\r\n      </td>\r\n      <td className=\"accuracy\">\r\n        {res.accuracy === 100 ? 100 : res.accuracy ? res.accuracy.toFixed(2) : ''}\r\n        {res.accuracy ? '%' : ''}\r\n      </td>\r\n      <td\r\n        className={classNames('date', {\r\n          latest: res.date === chart.latestScoreDate,\r\n        })}\r\n      >\r\n        {isSocketView ? (\r\n          getShortTimeAgo(res.dateObject)\r\n        ) : (\r\n          <Tooltip content={tooltipFormatter(res)} tooltipClassName=\"pumpking-tooltip\">\r\n            {getShortTimeAgo(res.dateObject)}\r\n            {res.isExactDate ? '' : '?'}\r\n          </Tooltip>\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null, null, { forwardRef: true })(React.forwardRef(Result));\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport default ({ type, level }) => {\r\n  return (\r\n    <div\r\n      className={classNames('chart-name', {\r\n        single: type === 'S',\r\n        singlep: type === 'SP',\r\n        doublep: type === 'DP',\r\n        double: type === 'D',\r\n        coop: type === 'COOP',\r\n      })}\r\n    >\r\n      <span className=\"chart-letter\">{type}</span>\r\n      <span className=\"chart-number\">{level}</span>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash/fp';\r\nimport { FaYoutube, FaBackward, FaForward, FaGlobeAmericas } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\nimport FlipMove from 'react-flip-move';\r\nimport queryString from 'query-string';\r\n\r\nimport { routes } from 'constants/routes';\r\nimport { DEBUG } from 'constants/env';\r\n\r\nimport Result from './Result';\r\nimport ChartLabel from './ChartLabel';\r\n\r\nconst ANIMATION_DURATION = 250;\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    allResults: state.results.results,\r\n    sharedCharts: state.results.sharedCharts,\r\n    playersHiddenStatus: props.playersHiddenStatus || state.preferences.data.playersHiddenStatus,\r\n  };\r\n};\r\n\r\nconst Chart = React.forwardRef(\r\n  (\r\n    {\r\n      allResults,\r\n      playersHiddenStatus = {},\r\n      sharedCharts = {},\r\n      // shared\r\n      chart: chartOriginal,\r\n      // leaderboards\r\n      showHiddenPlayers = false,\r\n      showProtagonistEloChange = false,\r\n      showProtagonistPpChange = false,\r\n      uniqueSelectedNames = [],\r\n      protagonistName = null,\r\n      // socket stuff\r\n      leftProfile = {},\r\n      rightProfile = {},\r\n      isSocketView = false,\r\n    },\r\n    ref\r\n  ) => {\r\n    const [overrides, setOverrides] = useState(null);\r\n    const [isHidingPlayers, setHidingPlayers] = useState(!showHiddenPlayers);\r\n\r\n    useEffect(() => {\r\n      setHidingPlayers(!showHiddenPlayers);\r\n    }, [showHiddenPlayers]);\r\n\r\n    const chart = _.first(overrides) || chartOriginal;\r\n    if (DEBUG) {\r\n      console.log(chart, overrides);\r\n    }\r\n\r\n    let topPlace = 1;\r\n    const occuredNicknames = [];\r\n    let hiddenPlayersCount = 0;\r\n    const results = chart.results.map((res, index) => {\r\n      const isPlayerHidden = isHidingPlayers && (playersHiddenStatus[res.playerId] || false);\r\n      const isSecondOccurenceInResults = occuredNicknames.includes(res.nickname);\r\n      occuredNicknames.push(res.nickname);\r\n      if (index === 0) {\r\n        topPlace = 1;\r\n      } else if (\r\n        !isSecondOccurenceInResults &&\r\n        res.score !== _.get([index - 1, 'score'], chart.results)\r\n      ) {\r\n        topPlace += 1;\r\n      }\r\n      if (isPlayerHidden) {\r\n        hiddenPlayersCount++;\r\n      }\r\n      return {\r\n        ...res,\r\n        topPlace,\r\n        isSecondOccurenceInResults,\r\n        isPlayerHidden,\r\n      };\r\n    });\r\n\r\n    const onRedoLatestResult = _.throttle(ANIMATION_DURATION + 10, (chart) => {\r\n      const newOverrides = _.drop(1, overrides);\r\n      setOverrides(_.size(newOverrides) === 1 ? null : newOverrides);\r\n    });\r\n\r\n    const onUndoLatestResult = _.throttle(ANIMATION_DURATION + 10, (chart) => {\r\n      if (_.isEmpty(results)) {\r\n        setOverrides(null);\r\n      }\r\n      const undoedResult = _.maxBy('date', results);\r\n      if (!undoedResult) return;\r\n\r\n      const undoedPlayerId = undoedResult.playerId;\r\n      const previousPlayerResult = _.findLast(\r\n        (res) =>\r\n          res.playerId === undoedPlayerId &&\r\n          res.sharedChartId === chart.sharedChartId &&\r\n          res.isRank === undoedResult.isRank &&\r\n          res.date < undoedResult.date,\r\n        allResults\r\n      );\r\n      const newResults = _.orderBy(\r\n        'score',\r\n        'desc',\r\n        _.compact(\r\n          _.map((res) => (res.id === undoedResult.id ? previousPlayerResult : res), results)\r\n        )\r\n      );\r\n      const latestScore = _.maxBy('date', newResults);\r\n      const overrideChart = {\r\n        ...chart,\r\n        latestScoreDate: latestScore && latestScore.date,\r\n        results: newResults,\r\n      };\r\n      if (_.isEmpty(newResults)) {\r\n        setOverrides(null);\r\n      } else {\r\n        setOverrides([overrideChart, ...(overrides || [chart])]);\r\n      }\r\n    });\r\n\r\n    const isActive = !_.isEmpty(overrides);\r\n    const totalResultsCount = _.countBy((id) => !playersHiddenStatus[id], chart.allResultsIds).true;\r\n    const currentIndex = isActive ? 1 + totalResultsCount - _.size(overrides) : totalResultsCount;\r\n    const canUndo = !(currentIndex === 1 && totalResultsCount === 1);\r\n\r\n    // TODO: remove check from sharedCharts when SocketTracker works off results data instead of topPerSong\r\n    const interpDiff =\r\n      chart.interpolatedDifficulty ||\r\n      _.get('interpolatedDifficulty', sharedCharts[chart.sharedChartId]);\r\n\r\n    return (\r\n      <div className=\"song-block\" ref={ref}>\r\n        <div className=\"song-name\">\r\n          <ChartLabel type={chart.chartType} level={chart.chartLevel} />\r\n          {isSocketView ? (\r\n            <div className=\"song-name-text\">\r\n              {interpDiff ? `(${interpDiff.toFixed(1)}) ` : ''}\r\n              {chart.song}\r\n            </div>\r\n          ) : (\r\n            <div className=\"song-name-text\">\r\n              <NavLink\r\n                exact\r\n                to={routes.leaderboard.sharedChart.getPath({ sharedChartId: chart.sharedChartId })}\r\n              >\r\n                {chart.song}\r\n              </NavLink>{' '}\r\n              <span className=\"_grey-text\">({interpDiff && interpDiff.toFixed(1)})</span>\r\n            </div>\r\n          )}\r\n          {!isSocketView && (\r\n            <div className=\"youtube-link\">\r\n              <a\r\n                href={`https://youtube.com/results?${queryString.stringify({\r\n                  search_query: `${chart.song} ${chart.chartLabel}`.replace(/( -)|(- )/g, ' '),\r\n                })}`}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <FaYoutube />\r\n              </a>\r\n            </div>\r\n          )}\r\n          <div className=\"_flex-fill\" />\r\n          <div className=\"right-side-block\">\r\n            {hiddenPlayersCount > 0 && (\r\n              <div\r\n                className={classNames('players-hidden-count _grey-text', {\r\n                  '_on-hover': !isSocketView,\r\n                })}\r\n              >\r\n                скрыто: {hiddenPlayersCount}\r\n              </div>\r\n            )}\r\n            {(hiddenPlayersCount > 0 || !isHidingPlayers) && !isSocketView && (\r\n              <div\r\n                className=\"globe-icon _on-hover\"\r\n                onClick={() => setHidingPlayers(!isHidingPlayers)}\r\n              >\r\n                <FaGlobeAmericas />\r\n              </div>\r\n            )}\r\n            {!isSocketView && (\r\n              <div\r\n                className={classNames('undo-result-button _on-hover', {\r\n                  active: isActive,\r\n                })}\r\n              >\r\n                <FaBackward\r\n                  className={classNames('backward-btn', { disabled: !canUndo })}\r\n                  onClick={() => canUndo && onUndoLatestResult(chart)}\r\n                />\r\n                <span className=\"number\">\r\n                  {currentIndex}/{totalResultsCount}\r\n                </span>\r\n                <FaForward\r\n                  className={classNames('forward-btn', { disabled: !isActive })}\r\n                  onClick={() => isActive && onRedoLatestResult(chart)}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"charts\">\r\n          {!_.isEmpty(results) && (\r\n            <div className=\"chart\">\r\n              <div className=\"results\">\r\n                <table>\r\n                  {/* {chartIndex === 0 && (\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"place\"></th>\r\n                        <th className=\"nickname\"></th>\r\n                        <th className=\"judge\"></th>\r\n                        <th className=\"score\">score</th>\r\n                        <th className=\"grade\"></th>\r\n                        <th className=\"number\">miss</th>\r\n                        <th className=\"number\">bad</th>\r\n                        <th className=\"number\">good</th>\r\n                        <th className=\"number\">great</th>\r\n                        <th className=\"number\">perfect</th>\r\n                        <th className=\"combo\">combo</th>\r\n                        <th className=\"accuracy\">accuracy</th>\r\n                        <th className=\"date\"></th>\r\n                      </tr>\r\n                    </thead>\r\n                  )} */}\r\n                  <FlipMove\r\n                    enterAnimation=\"fade\"\r\n                    leaveAnimation=\"fade\"\r\n                    typeName=\"tbody\"\r\n                    maintainContainerHeight\r\n                    duration={ANIMATION_DURATION}\r\n                  >\r\n                    {results.map((res, index) => {\r\n                      const isProtagonist = res.nickname === protagonistName;\r\n                      if (\r\n                        (res.isPlayerHidden && !isProtagonist) ||\r\n                        (res.isUnknownPlayer && index !== 0)\r\n                      ) {\r\n                        return null;\r\n                      }\r\n\r\n                      let placeDifference, newIndex;\r\n                      if (res.scoreIncrease && res.date === chart.latestScoreDate) {\r\n                        const prevScore = res.score - res.scoreIncrease;\r\n                        newIndex = _.findLastIndex((res) => res.score > prevScore, results);\r\n                        placeDifference = newIndex - index;\r\n                      }\r\n\r\n                      return (\r\n                        <Result\r\n                          key={res.isRank + '_' + res.nickname}\r\n                          chart={chart}\r\n                          results={results}\r\n                          res={res}\r\n                          placeDifference={placeDifference}\r\n                          showProtagonistEloChange={showProtagonistEloChange}\r\n                          showProtagonistPpChange={showProtagonistPpChange}\r\n                          uniqueSelectedNames={uniqueSelectedNames}\r\n                          protagonistName={protagonistName}\r\n                          leftProfile={leftProfile}\r\n                          rightProfile={rightProfile}\r\n                          isSocketView={isSocketView}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </FlipMove>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default connect(mapStateToProps, null, null, { forwardRef: true })(Chart);\r\n","import _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport matchSorter from 'match-sorter';\r\n\r\nimport { SORT, CHART_MIN_MAX, DURATION_DEFAULT, RANK_FILTER } from 'constants/leaderboard';\r\nimport { defaultFilter } from 'reducers/results';\r\n\r\nexport const playersSelector = createSelector(\r\n  (state) => state.results.players,\r\n  (state) => state.user.data.player.id,\r\n  (players, playerId) =>\r\n    _.flow(\r\n      _.toPairs,\r\n      _.map(([, { nickname, arcade_name, id, region }]) => ({\r\n        label: `${nickname} (${arcade_name})`,\r\n        value: nickname,\r\n        isCurrentPlayer: playerId === id,\r\n      })),\r\n      _.sortBy((it) => (it.isCurrentPlayer ? '!' : _.toLower(it.label)))\r\n    )(players)\r\n);\r\n\r\nconst filterCharts = (filter, rows) => {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filter);\r\n  const type = _.getOr(null, 'type', filter);\r\n  const duration = _.getOr(DURATION_DEFAULT, 'duration', filter);\r\n\r\n  return _.filter((row) => {\r\n    if (duration !== DURATION_DEFAULT && !duration.includes(row.duration)) {\r\n      return false;\r\n    }\r\n    return (\r\n      row.chartLevel >= range[0] &&\r\n      row.chartLevel <= range[1] &&\r\n      (!type || row.chartType.startsWith(type))\r\n    );\r\n  }, rows);\r\n};\r\n\r\nconst getFilteredData = (\r\n  data,\r\n  sharedCharts,\r\n  filter = defaultFilter,\r\n  resultInfo = {},\r\n  preferences\r\n) => {\r\n  const start = performance.now();\r\n  const playersHiddenStatus = preferences.playersHiddenStatus;\r\n  const showHidden = filter.showHiddenFromPreferences;\r\n  const names = _.map('value', filter.players);\r\n  const namesOr = _.map('value', filter.playersOr);\r\n  const namesNot = _.map('value', filter.playersNot);\r\n  const sortingType = _.get('value', filter.sortingType);\r\n  const rankFilter = _.get('value', filter.rank) || RANK_FILTER.SHOW_ALL;\r\n  const protagonist = [\r\n    SORT.PROTAGONIST,\r\n    SORT.RANK_ASC,\r\n    SORT.RANK_DESC,\r\n    SORT.PP_ASC,\r\n    SORT.PP_DESC,\r\n    SORT.NEW_SCORES_PLAYER,\r\n  ].includes(sortingType)\r\n    ? _.get('value', filter.protagonist)\r\n    : null;\r\n  const excludeAntagonists = _.map('value', filter.excludeAntagonists);\r\n\r\n  const defaultSorting = [\r\n    _.orderBy(\r\n      [\r\n        (song) =>\r\n          _.max(\r\n            _.map(\r\n              (res) =>\r\n                showHidden || !playersHiddenStatus[res.playerId] ? res.dateObject.getTime() : 0,\r\n              song.results\r\n            )\r\n          ),\r\n      ],\r\n      ['desc']\r\n    ),\r\n  ];\r\n  const newScoresProtagonistSorting = !protagonist\r\n    ? defaultSorting\r\n    : [\r\n        _.orderBy(\r\n          [\r\n            (song) =>\r\n              _.max(\r\n                _.map(\r\n                  (res) => (res.nickname === protagonist ? res.dateObject.getTime() : 0),\r\n                  song.results\r\n                )\r\n              ),\r\n          ],\r\n          ['desc']\r\n        ),\r\n      ];\r\n  const protagonistSorting = [\r\n    _.filter((row) => _.map('nickname', row.results).includes(protagonist)),\r\n    _.map((row) => {\r\n      const protIndex = _.findIndex({ nickname: protagonist }, row.results);\r\n      const protScore = row.results[protIndex].score;\r\n      const enemies = _.flow([\r\n        _.take(protIndex),\r\n        _.uniqBy('nickname'),\r\n        _.remove((res) => excludeAntagonists.includes(res.nickname) || res.score === protScore),\r\n      ])(row.results);\r\n      const distance = Math.sqrt(\r\n        _.reduce((dist, enemy) => dist + (enemy.score / protScore - 0.99) ** 2, 0, enemies)\r\n      );\r\n      return {\r\n        ...row,\r\n        distanceFromProtagonist: distance,\r\n      };\r\n    }),\r\n    _.orderBy(['distanceFromProtagonist'], ['desc']),\r\n  ];\r\n  const getPpSorting = (field, direction = 'desc') => [\r\n    _.filter((row) => _.map('nickname', row.results).includes(protagonist)),\r\n    _.orderBy(\r\n      [\r\n        (row) => {\r\n          const result = _.find({ nickname: protagonist }, row.results);\r\n          const info = resultInfo[result.id] || {};\r\n          return _.getOr(direction === 'desc' ? -Infinity : Infinity, field, info);\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const getEloSorting = (direction) => [\r\n    _.filter((row) => _.map('nickname', row.results).includes(protagonist)),\r\n    _.orderBy(\r\n      [\r\n        (row) => {\r\n          const score = _.find({ nickname: protagonist }, row.results);\r\n          const info = resultInfo[score.id];\r\n          return _.getOr(direction === 'asc' ? Infinity : -Infinity, 'ratingDiff', info);\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const getDiffSorting = (direction = 'desc') => [\r\n    _.orderBy(\r\n      [\r\n        (row) => {\r\n          const chartInfo = sharedCharts[row.sharedChartId];\r\n          return _.getOr(_.toNumber(row.chartLevel), 'interpolatedDifficulty', chartInfo);\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const sortingFunctions =\r\n    {\r\n      [SORT.DEFAULT]: defaultSorting,\r\n      [SORT.NEW_SCORES_PLAYER]: newScoresProtagonistSorting,\r\n      [SORT.PROTAGONIST]: protagonistSorting,\r\n      [SORT.RANK_ASC]: getEloSorting('asc'),\r\n      [SORT.RANK_DESC]: getEloSorting('desc'),\r\n      [SORT.PP_ASC]: getPpSorting('pp.ppRatio', 'asc'),\r\n      [SORT.PP_DESC]: getPpSorting('pp.pp'),\r\n      [SORT.EASIEST_SONGS]: getDiffSorting('asc'),\r\n      [SORT.HARDEST_SONGS]: getDiffSorting('desc'),\r\n    }[sortingType] || defaultSorting;\r\n\r\n  const result = _.flow(\r\n    _.compact([\r\n      _.map((row) => {\r\n        let latestScoreDate = null;\r\n        const occuredIds = [];\r\n        const results = row.results.filter((res, index) => {\r\n          const isVisibleWithRankFilter =\r\n            !rankFilter || rankFilter === RANK_FILTER.SHOW_ALL\r\n              ? true\r\n              : rankFilter === RANK_FILTER.SHOW_ONLY_RANK\r\n              ? res.isRank\r\n              : rankFilter === RANK_FILTER.SHOW_ONLY_NORANK\r\n              ? !res.isRank\r\n              : rankFilter === RANK_FILTER.SHOW_BEST\r\n              ? !occuredIds.includes(res.playerId)\r\n              : true;\r\n          rankFilter === RANK_FILTER.SHOW_BEST && occuredIds.push(res.playerId);\r\n\r\n          const isVisible = (!res.isUnknownPlayer || index === 0) && isVisibleWithRankFilter;\r\n          if (isVisible && (!latestScoreDate || latestScoreDate < res.date)) {\r\n            latestScoreDate = res.date;\r\n          }\r\n          return isVisible;\r\n        }, row.results);\r\n        return {\r\n          ...row,\r\n          latestScoreDate,\r\n          results,\r\n        };\r\n      }),\r\n      filter.chartRange && ((items) => filterCharts(filter.chartRange, items)),\r\n      (names.length || namesOr.length || namesNot.length) &&\r\n        _.filter((row) => {\r\n          const rowNames = _.map('nickname', row.results);\r\n          return (\r\n            (!names.length || _.every((name) => rowNames.includes(name), names)) &&\r\n            (!namesOr.length || _.some((name) => rowNames.includes(name), namesOr)) &&\r\n            (!namesNot.length || !_.some((name) => rowNames.includes(name), namesNot))\r\n          );\r\n        }),\r\n      _.filter((row) => _.size(row.results)),\r\n      ...sortingFunctions,\r\n      filter.song && ((items) => matchSorter(items, filter.song.trim(), { keys: ['song'] })),\r\n    ])\r\n  )(data);\r\n  console.log('Sorting took', performance.now() - start, 'ms');\r\n  return result;\r\n};\r\n\r\nexport const filteredDataSelector = createSelector(\r\n  (state) => state.results.data,\r\n  (state) => state.results.sharedCharts,\r\n  (state) => state.results.filter,\r\n  (state) => state.results.resultInfo,\r\n  (state) => state.preferences.data,\r\n  getFilteredData\r\n);\r\n\r\nexport const sharedChartDataSelector = createSelector(\r\n  (state) => state.results.data,\r\n  (state, props) => props.match.params.sharedChartId,\r\n  (data, sharedChartId) => {\r\n    const chartId = _.toNumber(sharedChartId);\r\n    return data.filter((chart) => chart.sharedChartId === chartId);\r\n  }\r\n);\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport _ from 'lodash/fp';\r\nimport Select from 'react-select';\r\nimport classNames from 'classnames';\r\nimport localForage from 'localforage';\r\nimport { FaRedoAlt, FaSearch, FaArrowLeft } from 'react-icons/fa';\r\n\r\n// styles\r\nimport './leaderboard.scss';\r\n\r\n// components\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport CollapsibleBar from 'components/Shared/CollapsibleBar';\r\nimport ChartFilter from './ChartFilter';\r\nimport PresetsControl from './PresetsControl';\r\nimport Chart from './Chart';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\nimport { SORT, RANK_FILTER } from 'constants/leaderboard';\r\n\r\n// reducers\r\nimport { fetchResults, setFilter, resetFilter, defaultFilter } from 'reducers/results';\r\nimport { selectPreset, openPreset } from 'reducers/presets';\r\n\r\n// utils\r\nimport { colorsArray } from 'utils/colors';\r\nimport { playersSelector, filteredDataSelector, sharedChartDataSelector } from 'reducers/selectors';\r\n\r\n// code\r\nconst sortingOptions = [\r\n  {\r\n    label: 'от новых скоров',\r\n    value: SORT.DEFAULT,\r\n  },\r\n  {\r\n    label: 'от новых скоров конкретного игрока',\r\n    value: SORT.NEW_SCORES_PLAYER,\r\n  },\r\n  // {\r\n  //   label: 'отставанию от остальных',\r\n  //   value: SORT.PROTAGONIST,\r\n  // },\r\n  {\r\n    label: 'от худших результатов (эло)',\r\n    value: SORT.RANK_ASC,\r\n  },\r\n  {\r\n    label: 'от лучших результатов (эло)',\r\n    value: SORT.RANK_DESC,\r\n  },\r\n  {\r\n    label: 'от худших результатов (pp)',\r\n    value: SORT.PP_ASC,\r\n  },\r\n  {\r\n    label: 'от лучших результатов (pp)',\r\n    value: SORT.PP_DESC,\r\n  },\r\n  {\r\n    label: 'от лёгких чартов',\r\n    value: SORT.EASIEST_SONGS,\r\n  },\r\n  {\r\n    label: 'от сложных чартов',\r\n    value: SORT.HARDEST_SONGS,\r\n  },\r\n];\r\n\r\nconst rankOptions = [\r\n  {\r\n    label: 'показывать все скоры',\r\n    value: RANK_FILTER.SHOW_ALL,\r\n  },\r\n  {\r\n    label: 'один лучший скор каждого игрока (ранк или нет)',\r\n    value: RANK_FILTER.SHOW_BEST,\r\n  },\r\n  {\r\n    label: 'только на ранке',\r\n    value: RANK_FILTER.SHOW_ONLY_RANK,\r\n  },\r\n  {\r\n    label: 'только без ранка',\r\n    value: RANK_FILTER.SHOW_ONLY_NORANK,\r\n  },\r\n];\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const isChartView = !!props.match.params.sharedChartId;\r\n\r\n  return {\r\n    isChartView,\r\n    players: playersSelector(state),\r\n    filteredData: isChartView ? sharedChartDataSelector(state, props) : filteredDataSelector(state),\r\n    filter: isChartView ? defaultFilter : state.results.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading: state.results.isLoading || state.tracklist.isLoading,\r\n    presets: state.presets.presets,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setFilter,\r\n  resetFilter,\r\n  selectPreset,\r\n  openPreset,\r\n};\r\n\r\nclass Leaderboard extends Component {\r\n  static propTypes = {\r\n    match: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  state = { showItemsCount: 20 };\r\n\r\n  setFilter = _.curry((name, value) => {\r\n    const filter = { ...this.props.filter, [name]: value };\r\n    this.props.setFilter(filter);\r\n    localForage.setItem('filter', filter);\r\n  });\r\n\r\n  resetFilter = () => {\r\n    this.props.resetFilter();\r\n    localForage.setItem('filter', defaultFilter);\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onTypeSongName = _.debounce(300, (value) => {\r\n    this.setFilter('song', value);\r\n  });\r\n\r\n  renderSimpleSearch() {\r\n    const { isLoading, filter } = this.props;\r\n    return (\r\n      <div className=\"simple-search\">\r\n        <div className=\"song-name _margin-right _margin-bottom\">\r\n          <Input\r\n            value={filter.song || ''}\r\n            placeholder=\"название песни...\"\r\n            className=\"form-control\"\r\n            onChange={this.onTypeSongName}\r\n          />\r\n        </div>\r\n        <div className=\"chart-range _margin-right _margin-bottom\">\r\n          <ChartFilter filterValue={filter.chartRange} onChange={this.setFilter('chartRange')} />\r\n        </div>\r\n        <div className=\"_flex-fill\" />\r\n        <div className=\"_flex-row _margin-bottom\">\r\n          <PresetsControl />\r\n          <button className=\"btn btn-sm btn-dark btn-icon _margin-right\" onClick={this.resetFilter}>\r\n            <FaRedoAlt /> сбросить фильтры\r\n          </button>\r\n          <button\r\n            disabled={isLoading}\r\n            className=\"btn btn-sm btn-dark btn-icon\"\r\n            onClick={this.onRefresh}\r\n          >\r\n            <FaSearch /> обновить\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFilters() {\r\n    const { players, filter } = this.props;\r\n    return (\r\n      <div className=\"filters\">\r\n        <div className=\"people-filters\">\r\n          <label className=\"label\">показывать чарты, которые сыграл:</label>\r\n          <div className=\"players-block\">\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">каждый из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'players', filter)}\r\n                onChange={this.setFilter('players')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и хоть один из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersOr', filter)}\r\n                onChange={this.setFilter('playersOr')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и никто из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersNot', filter)}\r\n                onChange={this.setFilter('playersNot')}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"people-filters\">\r\n          <div className=\"players-block\">\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">показывать ранк:</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"...\"\r\n                options={rankOptions}\r\n                value={_.getOr(null, 'rank', filter) || RANK_FILTER.SHOW_ALL}\r\n                onChange={this.setFilter('rank')}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Toggle\r\n            checked={_.getOr(false, 'showHiddenFromPreferences', filter)}\r\n            onChange={this.setFilter('showHiddenFromPreferences')}\r\n          >\r\n            показывать скрытых игроков\r\n          </Toggle>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSortings() {\r\n    const { players, filter } = this.props;\r\n    return (\r\n      <div className=\"sortings\">\r\n        <div>\r\n          <label className=\"label\">сортировка:</label>\r\n          <Select\r\n            placeholder=\"выберите сортировку\"\r\n            className=\"select\"\r\n            classNamePrefix=\"select\"\r\n            isClearable={false}\r\n            options={sortingOptions}\r\n            value={_.getOr(sortingOptions[0], 'sortingType', filter)}\r\n            onChange={this.setFilter('sortingType')}\r\n          />\r\n        </div>\r\n        {[\r\n          SORT.PROTAGONIST,\r\n          SORT.RANK_ASC,\r\n          SORT.RANK_DESC,\r\n          SORT.PP_ASC,\r\n          SORT.PP_DESC,\r\n          SORT.NEW_SCORES_PLAYER,\r\n        ].includes(_.get('sortingType.value', filter)) && (\r\n          <div>\r\n            <label className=\"label\">игрок:</label>\r\n            <Select\r\n              className={classNames('select players', {\r\n                'red-border': !_.get('protagonist', filter),\r\n              })}\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              value={_.getOr(null, 'protagonist', filter)}\r\n              onChange={this.setFilter('protagonist')}\r\n            />\r\n          </div>\r\n        )}\r\n        {[SORT.PROTAGONIST].includes(_.get('sortingType.value', filter)) && (\r\n          <div>\r\n            <label className=\"label\">не учитывать в сравнении:</label>\r\n            <Select\r\n              closeMenuOnSelect={false}\r\n              className=\"select players\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              isMulti\r\n              value={_.getOr([], 'excludeAntagonists', filter)}\r\n              onChange={this.setFilter('excludeAntagonists')}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, isChartView, filteredData, error, filter, presets } = this.props;\r\n    const { showItemsCount } = this.state;\r\n    const canShowMore = filteredData.length > showItemsCount;\r\n    const visibleData = _.slice(0, showItemsCount, filteredData);\r\n\r\n    const sortingType = _.get('sortingType.value', filter);\r\n    const showProtagonistEloChange = [SORT.RANK_ASC, SORT.RANK_DESC].includes(sortingType);\r\n    const showProtagonistPpChange = [SORT.PP_ASC, SORT.PP_DESC].includes(sortingType);\r\n    const highlightProtagonist = [\r\n      SORT.PROTAGONIST,\r\n      SORT.RANK_ASC,\r\n      SORT.RANK_DESC,\r\n      SORT.PP_ASC,\r\n      SORT.PP_DESC,\r\n      SORT.NEW_SCORES_PLAYER,\r\n    ].includes(sortingType);\r\n    const protagonistName = _.get('protagonist.value', filter);\r\n    const uniqueSelectedNames = _.slice(\r\n      0,\r\n      colorsArray.length,\r\n      _.uniq(\r\n        _.compact([\r\n          highlightProtagonist && protagonistName,\r\n          ..._.map('value', filter.players),\r\n          ..._.map('value', filter.playersOr),\r\n        ])\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div className=\"leaderboard-page\">\r\n        <div className=\"content\">\r\n          {isChartView && (\r\n            <div className=\"simple-search\">\r\n              <NavLink exact to={routes.leaderboard.path}>\r\n                <button className=\"btn btn-sm btn-dark btn-icon\">\r\n                  <FaArrowLeft /> ко всем чартам\r\n                </button>\r\n              </NavLink>\r\n            </div>\r\n          )}\r\n          {!isChartView && (\r\n            <>\r\n              <div className=\"search-block\">\r\n                {this.renderSimpleSearch()}\r\n                <CollapsibleBar title=\"фильтры\">{this.renderFilters()}</CollapsibleBar>\r\n                <CollapsibleBar title=\"сортировка\">{this.renderSortings()}</CollapsibleBar>\r\n              </div>\r\n              {!!presets.length && (\r\n                <div className=\"presets-buttons\">\r\n                  <span>пресеты:</span>\r\n                  {presets.map((preset) => (\r\n                    <ToggleButton\r\n                      key={preset.name}\r\n                      text={preset.name}\r\n                      className=\"btn btn-sm btn-dark _margin-right\"\r\n                      active={_.get('filter', preset) === filter}\r\n                      onToggle={() => {\r\n                        this.props.selectPreset(preset);\r\n                        this.props.openPreset();\r\n                      }}\r\n                    ></ToggleButton>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n          <div className=\"top-list\">\r\n            {isLoading && <Loader />}\r\n            {_.isEmpty(filteredData) && !isLoading && (error ? error.message : 'ничего не найдено')}\r\n            {!isLoading &&\r\n              visibleData.map((chart, chartIndex) => {\r\n                return (\r\n                  <Chart\r\n                    showHiddenPlayers={isChartView || filter.showHiddenFromPreferences}\r\n                    key={chart.sharedChartId}\r\n                    chart={chart}\r\n                    chartIndex={chartIndex}\r\n                    showProtagonistEloChange={showProtagonistEloChange}\r\n                    showProtagonistPpChange={showProtagonistPpChange}\r\n                    uniqueSelectedNames={uniqueSelectedNames}\r\n                    protagonistName={protagonistName}\r\n                  />\r\n                );\r\n              })}\r\n            {!isLoading && canShowMore && (\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() =>\r\n                  this.setState((state) => ({ showItemsCount: state.showItemsCount + 10 }))\r\n                }\r\n              >\r\n                show more...\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Leaderboard);\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n// import numeral from 'numeral';\r\nimport classNames from 'classnames';\r\nimport { GiQueenCrown } from 'react-icons/gi';\r\nimport { FaAngleDoubleUp, FaAngleDoubleDown } from 'react-icons/fa';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\nimport Flag from 'components/Shared/Flag';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\n// import CheckBox from 'components/Shared/CheckBox';\r\n\r\nimport { getRankImg } from 'utils/exp';\r\n\r\nconst getGradeImg = (grade) => (\r\n  <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n);\r\n\r\nexport default function RankingList({ ranking, isLoading, preferences, updatePreferences }) {\r\n  return (\r\n    <div className=\"ranking-list\">\r\n      {_.isEmpty(ranking) && !isLoading && 'ничего не найдено'}\r\n      {isLoading && <Loader />}\r\n      {!isLoading && (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"place\"></th>\r\n              <th className=\"change\"></th>\r\n              <th className=\"exp-rank\">rank</th>\r\n              <th className=\"name\">name</th>\r\n              <th className=\"name name-piu\">piu name</th>\r\n              <th className=\"rating\">elo</th>\r\n              <th className=\"rating-change-cell\"></th>\r\n              <th className=\"rating\">pp</th>\r\n              {/* <th className=\"total-score\">total score</th> */}\r\n              <th className=\"grades sss\">{getGradeImg('SSS')}</th>\r\n              <th className=\"grades ss\">{getGradeImg('SS')}</th>\r\n              <th className=\"grades s\">{getGradeImg('S')}</th>\r\n              <th className=\"grades a\">{getGradeImg('A+')}</th>\r\n              <th className=\"grades b\">{getGradeImg('B')}</th>\r\n              <th className=\"grades c\">{getGradeImg('C')}</th>\r\n              <th className=\"grades d\">{getGradeImg('D')}</th>\r\n              <th className=\"grades f\">{getGradeImg('F')}</th>\r\n              <th className=\"playcount\">scores</th>\r\n              {/* <th className=\"calories\">kcal</th> */}\r\n              <th className=\"accuracy\">accuracy</th>\r\n              <th className=\"hide-col\"> </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {ranking.map((player, playerIndex) => {\r\n              const isHidden = preferences.playersHiddenStatus[player.id];\r\n              if (isHidden && !preferences.showHiddenPlayersInRanking) {\r\n                return null;\r\n              }\r\n              return (\r\n                <tr\r\n                  className={classNames('player', { 'hidden-player': isHidden })}\r\n                  key={player.name}\r\n                >\r\n                  <td className=\"place\">\r\n                    {playerIndex === 0 ? <GiQueenCrown /> : `#${playerIndex + 1}`}\r\n                  </td>\r\n                  <td className=\"change\">\r\n                    {player.change > 0 && (\r\n                      <div className=\"change-holder up\">\r\n                        <span>{player.change}</span>\r\n                        <FaAngleDoubleUp />\r\n                      </div>\r\n                    )}\r\n                    {player.change < 0 && (\r\n                      <div className=\"change-holder down\">\r\n                        <span>{-player.change}</span>\r\n                        <FaAngleDoubleDown />\r\n                      </div>\r\n                    )}\r\n                    {!!player.change && _.isString(player.change) && (\r\n                      <div className=\"change-holder text\">\r\n                        <span>{player.change}</span>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"exp-rank\">{getRankImg(player.expRank)}</td>\r\n                  <td className=\"name\">\r\n                    <div className=\"name-container\">\r\n                      <Flag region={player.region} />\r\n                      <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                        {player.name}\r\n                      </NavLink>\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"name name-piu\">\r\n                    <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                      {player.nameArcade}\r\n                    </NavLink>\r\n                  </td>\r\n                  <td className=\"rating\">{player.rating}</td>\r\n                  <td className=\"rating-change-cell\">\r\n                    {!!player.prevRating && player.prevRating !== player.rating && (\r\n                      <span\r\n                        className={classNames('rating-change', {\r\n                          down: player.prevRating > player.rating,\r\n                          up: player.prevRating < player.rating,\r\n                        })}\r\n                      >\r\n                        {player.prevRating < player.rating ? '+' : ''}\r\n                        {player.rating - player.prevRating}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"rating secondary\">{Math.round(player.pp.pp)}</td>\r\n                  <td className=\"grades sss\">{player.grades.SSS}</td>\r\n                  <td className=\"grades ss\">{player.grades.SS}</td>\r\n                  <td className=\"grades s\">{player.grades.S}</td>\r\n                  <td className=\"grades a\">{player.grades.A}</td>\r\n                  <td className=\"grades b\">{player.grades.B}</td>\r\n                  <td className=\"grades c\">{player.grades.C}</td>\r\n                  <td className=\"grades d\">{player.grades.D}</td>\r\n                  <td className=\"grades f\">{player.grades.F}</td>\r\n                  <td className=\"playcount\">{player.count}</td>\r\n                  <td className=\"accuracy\">\r\n                    {player.accuracy ? `${player.accuracy.toFixed(2)}%` : ''}\r\n                  </td>\r\n                  <td className=\"hide-col\">\r\n                    <Toggle\r\n                      onChange={() => {\r\n                        updatePreferences(\r\n                          _.set(['playersHiddenStatus', player.id], !isHidden, preferences)\r\n                        );\r\n                      }}\r\n                      checked={!isHidden}\r\n                    />\r\n                    {/* <CheckBox\r\n                      onChange={() => {\r\n                        updatePreferences(\r\n                          _.set(['playersHiddenStatus', player.id], !isHidden, preferences)\r\n                        );\r\n                      }}\r\n                      isChecked={isHidden}\r\n                    /> */}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function RankingFaq() {\r\n  return (\r\n    <div className=\"faq\">\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Как считается рейтинг?</div>\r\n        <div className=\"answer\">\r\n          A: Используется <a href=\"https://en.wikipedia.org/wiki/Elo_rating_system\">рейтинг Эло</a>,\r\n          широко используемый в шахматах и других играх, слегка модицированный под условия игры на\r\n          пампе. Средний рейтинг - 1000. Коэффициент К зависит от уровня чарта (более сложные чарты\r\n          сильнее влияют на рейтинг). Количество очков влияет на заработанный рейтинг (маленький\r\n          отрыв от противника не даст так много очков как большой отрыв).\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Что такое рр и чем оно отличается от эло?</div>\r\n        <div className=\"answer\">\r\n          A: РР (performance points) - система очков, взятая из osu!. Эло - система рейтинга, взятая\r\n          из шахмат. Основные отличия:\r\n          <br />\r\n          С эло твои очки зависят от других игроков на этом чарте, с рр твои очки зависят только от\r\n          того, как ты сыграешь чарт.\r\n          <br />\r\n          С эло можно потерять очки или заставить другого игрока их потерять, с рр можно только\r\n          набирать больше очков.\r\n          <br />\r\n          С эло намного проще кого-то обогнать, с рр люди редко меняются местами в рейтинге.\r\n          <br />\r\n          Эло показывает кто кого обыгрывает в последнее время, а рр показывает, кто на каком\r\n          примерно уровне по скиллу.\r\n          <br />\r\n          Сейчас рейтинг сортируется по Эло. РР выступает в качестве дополнительной инфы для\r\n          интереса, плюс используется как стартовое значение Эло.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Система Эло используется для игр 1 на 1, как она используется на пампе, где на одном\r\n          чарте играет много игроков?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: Рекорды на одном чарте делятся на несколько игр 1 на 1. Если есть 3 игрока: A, B, C; то\r\n          считается, что было 3 отдельные игры: A vs B, A vs C, B vs C.\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Как считается сумма рр?</div>\r\n        <div className=\"answer\">\r\n          A: Сначала все скоры игрока сортируются по рр. Затем в общую сумму рр добавляется 100% от\r\n          лучшего скора, 95% от второго скора, 90% от третьего, 86% от 4-го и так далее. (Формула\r\n          коэффициента - 0.95^N). Таким образом, на общую сумму рр больше всего влияют самые лучшие\r\n          результаты человека за всё время, и чтобы поднять свой уровень рр, нужно получать новые\r\n          топовые результаты (и поднимать свой скилл).\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Учитываются ли рекорды на ранке в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: Да. Как минимум потому что у нас есть много рекордов, взятых с машин бестов, и мы не\r\n          знаем наверняка, на ранке они или нет. Если у игрока в топе есть два скора - на ранке и\r\n          без ранка, используется тот, где больше очков.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Почему меня нет в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: В таблицу попадают только те, у кого есть хотя бы 20 игр 1 на 1. Первые 20 игр\r\n          используются для определения изначального рейтинга.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Почему суммарное количество оценок S-A-B не совпадает с общим количеством скоров?\r\n        </div>\r\n        <div className=\"answer\">A: Не для каждого результата известна оценка.</div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Если у меня есть несколько рекордов на А, несколько на А+, как считается суммарное\r\n          количество грейдов в таблице?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: В каждой колонке учитываются обе буквы - и треснутые, и с удержанным лайфом. То есть и\r\n          А, и А+ идут в колонку А. Точно так же для B, C, D.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Убери аккураси из таблицы!</div>\r\n        <div className=\"answer\">A: Грем, это секция для вопросов.</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import _ from 'lodash/fp';\r\n\r\nimport { fetchJson, postJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `PREFERENCES/LOADING`;\r\nconst SUCCESS = `PREFERENCES/SUCCESS`;\r\nconst ERROR = `PREFERENCES/ERROR`;\r\n// const UPDATE_LOADING = `PREFERENCES/UPDATE/LOADING`;\r\n// const UPDATE_SUCCESS = `PREFERENCES/UPDATE/SUCCESS`;\r\n// const UPDATE_ERROR = `PREFERENCES/UPDATE/ERROR`;\r\nconst CHANGE = `PREFERENCES/CHANGE`;\r\n\r\nconst defaultPreferences = {\r\n  playersHiddenStatus: {},\r\n};\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: defaultPreferences,\r\n  error: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: defaultPreferences,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: _.merge(defaultPreferences, action.data),\r\n      };\r\n    case CHANGE:\r\n      return {\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchPreferences = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/profile/preferences` }));\r\n      dispatch({ type: SUCCESS, data: data.preferences });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchUserPreferences = (id) => {\r\n  return async (dispatch) => {\r\n    const data = await dispatch(fetchJson({ url: `${HOST}/player/${id}/preferences` }));\r\n    return data;\r\n  };\r\n};\r\n\r\nexport const updatePreferences = (preferences) => {\r\n  return async (dispatch) => {\r\n    // dispatch({ type: LOADING });\r\n    dispatch({ type: CHANGE, data: preferences });\r\n    try {\r\n      await dispatch(\r\n        postJson({\r\n          url: `${HOST}/profile/preferences`,\r\n          body: { preferences },\r\n        })\r\n      );\r\n      // dispatch({ type: SUCCESS, data: data.preferences });\r\n      // return data.preferences;\r\n    } catch (error) {\r\n      // dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle } from 'react-icons/fa';\r\nimport { Link, Route, withRouter } from 'react-router-dom';\r\nimport { createSelector } from 'reselect';\r\nimport _ from 'lodash/fp';\r\n\r\n// styles\r\nimport './ranking.scss';\r\n\r\n// components\r\nimport RankingList from './RankingList';\r\nimport RankingFaq from './RankingFaq';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\nimport { updatePreferences } from 'reducers/preferences';\r\n\r\n// utils\r\n\r\n// code\r\nconst rankingSelector = createSelector(\r\n  (state) => state.results.profiles,\r\n  // _.flow(_.values, _.orderBy(['pp.pp'], ['desc']))\r\n  _.flow(_.values, _.orderBy(['ratingRaw'], ['desc']))\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    preferences: state.preferences.data,\r\n    ranking: rankingSelector(state),\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading:\r\n      state.results.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  updatePreferences,\r\n};\r\n\r\nclass Ranking extends Component {\r\n  static propTypes = {\r\n    ranking: toBe.array,\r\n    error: toBe.object,\r\n    preferences: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n    updatePreferences: toBe.func.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    ranking: [],\r\n  };\r\n\r\n  onChangeHidingPlayers = () => {\r\n    const { preferences, updatePreferences } = this.props;\r\n\r\n    updatePreferences(\r\n      _.set(['showHiddenPlayersInRanking'], !preferences.showHiddenPlayersInRanking, preferences)\r\n    );\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, ranking, error, preferences, updatePreferences } = this.props;\r\n    return (\r\n      <div className=\"ranking-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.path}\r\n              render={() => (\r\n                <>\r\n                  <button\r\n                    className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                    onClick={this.onChangeHidingPlayers}\r\n                  >\r\n                    {preferences.showHiddenPlayersInRanking\r\n                      ? 'скрыть невыбранных'\r\n                      : 'показать всех'}\r\n                  </button>\r\n                  <Link to={routes.ranking.faq.path}>\r\n                    <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n                      <FaQuestionCircle /> faq\r\n                    </button>\r\n                  </Link>\r\n                  <button\r\n                    disabled={isLoading}\r\n                    className=\"btn btn-sm btn-dark btn-icon\"\r\n                    onClick={this.onRefresh}\r\n                  >\r\n                    <FaSearch /> обновить\r\n                  </button>\r\n                </>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.faq.path}\r\n              render={() => (\r\n                <Link to={routes.ranking.path}>\r\n                  <button className=\"btn btn-sm btn-dark btn-icon\">назад</button>\r\n                </Link>\r\n              )}\r\n            />\r\n          </div>\r\n          <Route\r\n            exact\r\n            path={routes.ranking.path}\r\n            render={() => (\r\n              <RankingList\r\n                ranking={ranking}\r\n                isLoading={isLoading}\r\n                preferences={preferences}\r\n                updatePreferences={updatePreferences}\r\n              />\r\n            )}\r\n          />\r\n          <Route exact path={routes.ranking.faq.path} component={RankingFaq} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Ranking));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\nimport { FaPlay } from 'react-icons/fa';\r\nimport { MdExpandMore } from 'react-icons/md';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { parseDate } from 'utils/date';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nimport { routes } from 'constants/routes';\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport './most-played.scss';\r\n\r\nexport default connect((state) => ({ charts: state.results.sharedCharts }), { fetchJson })(\r\n  ({ playerId, charts, fetchJson }) => {\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [limit, setLimit] = useState(10);\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n      setLoading(true);\r\n      fetchJson({\r\n        url: `${HOST}/player/${playerId}/mostPlayed?limit=${limit}`,\r\n      })\r\n        .then((result) => {\r\n          setLoading(false);\r\n          if (result.success) {\r\n            setData(result.data);\r\n          }\r\n        })\r\n        .catch(() => {\r\n          setLoading(false);\r\n        });\r\n    }, [playerId, limit, fetchJson]);\r\n\r\n    return (\r\n      <div className=\"most-played\">\r\n        {isLoading && <Loader />}\r\n        {data.map((item) => {\r\n          const chart = charts[item.shared_chart];\r\n          return (\r\n            <div className=\"chart\" key={item.shared_chart}>\r\n              <div\r\n                className={classNames('chart-name', {\r\n                  single: chart.chartType === 'S',\r\n                  singlep: chart.chartType === 'SP',\r\n                  doublep: chart.chartType === 'DP',\r\n                  double: chart.chartType === 'D',\r\n                  coop: chart.chartType === 'COOP',\r\n                })}\r\n              >\r\n                <span className=\"chart-letter\">{chart.chartType}</span>\r\n                <span className=\"chart-number\">{chart.chartLevel}</span>\r\n              </div>\r\n              <div className=\"song-name\">\r\n                <NavLink\r\n                  exact\r\n                  to={routes.leaderboard.sharedChart.getPath({\r\n                    sharedChartId: chart.sharedChartId,\r\n                  })}\r\n                >\r\n                  {chart.song}\r\n                </NavLink>\r\n              </div>\r\n              <div className=\"date\">\r\n                {item.latestDate ? getTimeAgo(parseDate(item.latestDate)) : null}\r\n              </div>\r\n              <div className=\"playcount\">\r\n                <FaPlay />\r\n                <span>{item.count}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        {limit === _.size(data) && (\r\n          <button\r\n            className=\"show-more btn btn-sm btn-dark btn-icon\"\r\n            onClick={() => setLimit(limit + 10)}\r\n          >\r\n            <MdExpandMore /> больше\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React from 'react';\r\n\r\nimport { ranks, getRankImg } from 'utils/exp';\r\n\r\nexport default function ExpFaq() {\r\n  return (\r\n    <div className=\"faq-exp\">\r\n      <div className=\"faq-header\">\r\n        <strong>Опыт</strong> игрока основывается на количестве сыгранных песен и чартов.\r\n        <br />\r\n        Чем выше уровень чарта и чем лучше оценка на чарте, тем больше опыта он даёт.\r\n        <br />\r\n        Повторные попытки на тех же чартах не дают больше опыта. Чтобы поднимать свой уровень, играй\r\n        новые треки и чарты.\r\n      </div>\r\n      <div className=\"faq-header\">Список уровней и необходимый опыт для их получения:</div>\r\n      <div className=\"ranks-list\">\r\n        {ranks.map(rank => (\r\n          <div key={rank.threshold} className=\"rank\">\r\n            <div className=\"exp-rank\">{getRankImg(rank)}</div>\r\n            <div className=\"threshold\">{rank.threshold}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const SET_FILTER = `PROFILES/SET_FILTER`;\r\nconst RESET_FILTER = `PROFILES/RESET_FILTER`;\r\n\r\nexport const defaultFilter = {};\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  filter: defaultFilter,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setProfilesFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\n\r\nexport const resetProfilesFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n","import _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport moment from 'moment';\r\n\r\nconst cutRange = (array, range) => {\r\n  const startIndex = _.findIndex(item => item.date > range[0], array);\r\n  const endIndex = _.findLastIndex(item => item.date < range[1], array);\r\n  let firstElement =\r\n    startIndex > 0 ? array[startIndex - 1] : startIndex === 0 ? array[startIndex] : _.last(array);\r\n  let lastElement = endIndex > -1 ? array[endIndex] : _.first(array);\r\n  firstElement = { ...firstElement, date: range[0] };\r\n  lastElement = { ...lastElement, date: range[1] };\r\n  const middleElements =\r\n    startIndex > -1 && endIndex > -1 ? array.slice(startIndex, endIndex + 1) : [];\r\n\r\n  return [firstElement, ...middleElements, lastElement];\r\n};\r\n\r\nconst defaultGradesDistribution = {\r\n  SSS: 0,\r\n  SS: 0,\r\n  S: 0,\r\n  'A+': 0,\r\n  A: 0,\r\n  B: 0,\r\n  C: 0,\r\n  D: 0,\r\n  F: 0,\r\n};\r\nconst defaultGradesWithLevelsDistribution = _.flow(\r\n  _.flatMap(type => {\r\n    return _.flow(\r\n      _.toPairs,\r\n      _.map(([grade, value]) => [`${type}-${grade}`, value])\r\n    )(defaultGradesDistribution);\r\n  }),\r\n  _.fromPairs\r\n)(['S', 'D']);\r\n\r\nexport const profileSelectorCreator = idParamName =>\r\n  createSelector(\r\n    (state, props) => _.toInteger(props.match.params[idParamName]),\r\n    state => state.results.isLoading || state.results.isLoadingRanking,\r\n    state => state.results.profiles,\r\n    state => state.profiles.filter,\r\n    state => state.tracklist.data,\r\n    (id, isLoading, profiles, filter, tracklist) => {\r\n      const profile = profiles[id];\r\n      if (_.isEmpty(profile) || isLoading) {\r\n        return null;\r\n      }\r\n      const levelsDistribution = _.flow(\r\n        _.get('resultsByLevel'),\r\n        _.toPairs,\r\n        _.map(([x, y]) => ({\r\n          x: _.toInteger(x),\r\n          S:\r\n            (_.size(\r\n              _.filter(res => res.chart.chartType === 'S' || res.chart.chartType === 'SP', y)\r\n            ) /\r\n              tracklist.singlesLevels[x]) *\r\n            100,\r\n          D:\r\n            (-_.size(\r\n              _.filter(res => res.chart.chartType === 'D' || res.chart.chartType === 'DP', y)\r\n            ) /\r\n              tracklist.doublesLevels[x]) *\r\n            100,\r\n        }))\r\n      )(profile);\r\n      const gradesData = _.flow(\r\n        _.get('resultsByLevel'),\r\n        _.toPairs,\r\n        _.map(\r\n          _.update('[1].result.grade', grade =>\r\n            grade && grade.includes('+') && grade !== 'A+' ? grade.replace('+', '') : grade\r\n          )\r\n        )\r\n      )(profile);\r\n      const gradesDistribution = _.flow(\r\n        _.map(([x, y]) => ({\r\n          x: _.toInteger(x),\r\n          ...defaultGradesDistribution,\r\n          ..._.omit('?', _.mapValues(_.size, _.groupBy('result.grade', y))),\r\n        })),\r\n        _.map(item => {\r\n          const grades = _.pick(Object.keys(defaultGradesDistribution), item);\r\n          const sum = _.sum(_.values(grades));\r\n          return {\r\n            ...item,\r\n            gradesValues: grades,\r\n            ...(sum === 0 ? grades : _.mapValues(value => (100 * value) / sum, grades)),\r\n          };\r\n        })\r\n      )(gradesData);\r\n      const gradesAndLevelsDistribution = _.flow(\r\n        _.map(([x, y]) => {\r\n          const groupedResults = _.groupBy('result.grade', y);\r\n          const counts = _.omit(\r\n            '?',\r\n            _.mapValues(\r\n              _.countBy(res => {\r\n                return res.chart.chartType === 'S' || res.chart.chartType === 'SP'\r\n                  ? 'S'\r\n                  : res.chart.chartType === 'D' || res.chart.chartType === 'DP'\r\n                  ? 'D'\r\n                  : 'Other';\r\n              }),\r\n              groupedResults\r\n            )\r\n          );\r\n          const reduced = _.reduce(\r\n            (acc, [grade, levelsData]) => {\r\n              const accData = _.flow(\r\n                _.toPairs,\r\n                _.map(([type, count]) => [\r\n                  `${type}-${grade}`,\r\n                  type === 'S'\r\n                    ? (count / tracklist.singlesLevels[x]) * 100\r\n                    : (-count / tracklist.doublesLevels[x]) * 100,\r\n                ]),\r\n                _.fromPairs\r\n              )(levelsData);\r\n              return { ...acc, ...accData };\r\n            },\r\n            {},\r\n            _.toPairs(counts)\r\n          );\r\n\r\n          return {\r\n            x: _.toInteger(x),\r\n            ...defaultGradesWithLevelsDistribution,\r\n            ...reduced,\r\n          };\r\n        })\r\n      )(gradesData);\r\n\r\n      const lastTickRating = _.last(profile.ratingHistory).date;\r\n      const lastTickRanking = _.last(profile.rankingHistory).date;\r\n      const lastTick = lastTickRating > lastTickRanking ? lastTickRating : lastTickRanking; // End graph at either point\r\n      const firstTick = _.first(profile.ratingHistory).date; // Start graph from the first battle of this player\r\n      const lastDay = moment(lastTick).endOf('day');\r\n      const firstDay = moment(firstTick).startOf('day');\r\n      const minMaxRange = [firstDay / 1000 / 60 / 60 / 24, lastDay / 1000 / 60 / 60 / 24];\r\n\r\n      const filterRange = filter.dayRange || [\r\n        Math.max(minMaxRange[0], minMaxRange[1] - 30),\r\n        minMaxRange[1],\r\n      ];\r\n      const dayRangeMs = [\r\n        +moment(filterRange[0] * 1000 * 60 * 60 * 24).startOf('day'),\r\n        +moment(filterRange[1] * 1000 * 60 * 60 * 24).endOf('day'),\r\n      ];\r\n      const placesChanges = cutRange(profile.rankingHistory, dayRangeMs);\r\n      const ratingChanges = cutRange(profile.ratingHistory, dayRangeMs);\r\n\r\n      const rank = 1 + _.findIndex({ id }, _.orderBy(['ratingRaw'], ['desc'], _.values(profiles)));\r\n\r\n      return {\r\n        ...profile,\r\n        rank,\r\n        minMaxRange,\r\n        filterRange,\r\n        levelsDistribution,\r\n        gradesDistribution,\r\n        gradesAndLevelsDistribution,\r\n        placesChanges,\r\n        ratingChanges,\r\n      };\r\n    }\r\n  );\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle, FaTimes, FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport ReactModal from 'react-modal';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport Select from 'react-select';\r\nimport moment from 'moment';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as RechartsTooltip,\r\n  ReferenceLine,\r\n  CartesianGrid,\r\n  Line,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Label,\r\n  Scatter,\r\n  ScatterChart,\r\n} from 'recharts';\r\nimport _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\n\r\n// styles\r\nimport './profile.scss';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\nimport { DEBUG } from 'constants/env';\r\n\r\n// components\r\nimport Range from 'components/Shared/Range';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport MostPlayed from './MostPlayed';\r\nimport ExpFaq from './ExpFaq';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\nimport { setProfilesFilter, resetProfilesFilter } from 'reducers/profiles';\r\n\r\n// utils\r\nimport { profileSelectorCreator } from 'utils/profiles';\r\nimport { parseDate } from 'utils/date';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { achievements } from 'utils/achievements';\r\nimport { getRankImg } from 'utils/exp';\r\n\r\n// code\r\nconst MIN_GRAPH_HEIGHT = undefined;\r\n\r\nconst profileSelector = profileSelectorCreator('id');\r\n\r\nexport const otherPlayersSelector = createSelector(\r\n  (state) => state.results.players,\r\n  (state, props) => _.toNumber(props.match.params.id),\r\n  (players, id) =>\r\n    _.flow(\r\n      _.toPairs,\r\n      _.map(([ind, { nickname, arcade_name, id }]) => ({\r\n        label: `${nickname} (${arcade_name})`,\r\n        value: nickname,\r\n        id: _.toNumber(id),\r\n      })),\r\n      _.remove((it) => it.id === id),\r\n      _.sortBy((it) => _.toLower(it.label))\r\n    )(players)\r\n);\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    profile: profileSelector(state, props),\r\n    otherPlayers: otherPlayersSelector(state, props),\r\n    tracklist: state.tracklist.data,\r\n    filter: state.profiles.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    sharedCharts: state.results.sharedCharts,\r\n    isLoading:\r\n      state.results.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setProfilesFilter,\r\n  resetProfilesFilter,\r\n};\r\n\r\nclass Profile extends Component {\r\n  static propTypes = {\r\n    profile: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    profile: {},\r\n  };\r\n\r\n  state = {\r\n    isLevelGraphCombined: true,\r\n    showFaq: false,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetProfilesFilter();\r\n  }\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onChangeDayRange = (range) => {\r\n    const { filter } = this.props;\r\n    this.props.setProfilesFilter({\r\n      ...filter,\r\n      dayRange: range,\r\n    });\r\n  };\r\n\r\n  onShowFaq = () => {\r\n    this.setState({ showFaq: true });\r\n  };\r\n\r\n  onHideFaq = () => {\r\n    this.setState({ showFaq: false });\r\n  };\r\n\r\n  renderRankingHistory() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={profile.ratingChanges} margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={(value) => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={['dataMin - 100', 'dataMax + 100']}\r\n            tickFormatter={Math.round}\r\n            width={40}\r\n          />\r\n          <ReferenceLine y={1000} stroke=\"white\" />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Rating: {Math.round(payload[0].value)}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  circleShape = (args) => (\r\n    <circle key={args.key} cx={args.cx} cy={args.cy} r={4} fill={args.fill}></circle>\r\n  );\r\n  renderAccuracyPoints(interpolated = false) {\r\n    const { profile, sharedCharts } = this.props;\r\n    const pointsByType = _.groupBy(([, , chartId]) => {\r\n      const type = sharedCharts[chartId].chartType;\r\n      return type === 'D' || type === 'DP';\r\n    }, profile.accuracyPointsRaw);\r\n    if (!interpolated) {\r\n      return (\r\n        <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n          <ScatterChart margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis\r\n              dataKey=\"[0]\"\r\n              type=\"number\"\r\n              domain={[1, 28]}\r\n              tickFormatter={(value) => Math.round(value)}\r\n              ticks={[1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27]}\r\n            />\r\n            <YAxis\r\n              dataKey=\"[1]\"\r\n              type=\"number\"\r\n              domain={[0, 100]}\r\n              width={40}\r\n              tickFormatter={(value) => Math.round(value) + '%'}\r\n            />\r\n            <Scatter data={pointsByType.true} shape={this.circleShape} fill=\"#169c16\" />\r\n            <Scatter data={pointsByType.false} shape={this.circleShape} fill=\"#af2928\" />\r\n            <RechartsTooltip\r\n              isAnimationActive={false}\r\n              content={({ active, payload, label }) => {\r\n                if (!payload || !payload[0] || !payload[1]) {\r\n                  return null;\r\n                }\r\n                const chart = payload[0].payload[2] && sharedCharts[payload[0].payload[2]];\r\n                return (\r\n                  <div className=\"history-tooltip\">\r\n                    <div>Level: {payload[0].value}</div>\r\n                    <div>Accuracy: {payload[1].value}%</div>\r\n                    {chart && (\r\n                      <div>\r\n                        {chart.song} {chart.chartLabel} ({chart.interpolatedDifficulty.toFixed(1)})\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                );\r\n              }}\r\n            />\r\n          </ScatterChart>\r\n        </ResponsiveContainer>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"[0]\"\r\n            type=\"number\"\r\n            domain={[1, 28]}\r\n            tickFormatter={(value) => Math.round(value)}\r\n          />\r\n          <YAxis domain={[0, 100]} width={40} />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{payload[0].payload[0]}</div>\r\n                  {payload && payload[0] && <div>Acc: #{payload[0].value}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            data={profile.accuracyPointsInterpolated}\r\n            isAnimationActive={false}\r\n            dataKey=\"[1]\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderPlaceHistory() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={profile.placesChanges} margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={(value) => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={[1, (dataMax) => (dataMax < 3 ? dataMax + 2 : dataMax + 1)]}\r\n            interval={0}\r\n            reversed\r\n            width={40}\r\n          />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Place: #{payload[0].value}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGrades() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <BarChart\r\n          data={profile.gradesDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {_.filter((item) => item.value > 0, payload).map((item) => (\r\n                    <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                      {item.name}: {payload[0].payload.gradesValues[item.name]}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            domain={[0, 100]}\r\n            ticks={[0, 50, 100]}\r\n            tickFormatter={(x) => `${Math.round(x)}%`}\r\n            width={40}\r\n          />\r\n          <Legend />\r\n          <Bar dataKey=\"SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"F\" fill=\"#774949\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradesWithLevels() {\r\n    const { profile, tracklist } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={0.74}>\r\n        <BarChart\r\n          data={profile.gradesAndLevelsDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n          stackOffset=\"sign\"\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              const doubleItems = _.filter(\r\n                (item) => item.value !== 0 && item.dataKey.startsWith('D'),\r\n                payload\r\n              );\r\n              const singleItems = _.filter(\r\n                (item) => item.value !== 0 && item.dataKey.startsWith('S'),\r\n                payload\r\n              );\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {!!singleItems.length && (\r\n                    <>\r\n                      <div>Single:</div>\r\n                      {singleItems.map((item) => (\r\n                        <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                          {item.name.slice(2)}: {Math.round(Math.abs(item.value))}% (\r\n                          {Math.round((tracklist.singlesLevels[item.payload.x] * item.value) / 100)}\r\n                          /{tracklist.singlesLevels[item.payload.x]})\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                  {!!doubleItems.length && (\r\n                    <>\r\n                      <div>Double:</div>\r\n                      {doubleItems.map((item) => (\r\n                        <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                          {item.name.slice(2)}: {Math.round(Math.abs(item.value))}% (\r\n                          {Math.round(\r\n                            (tracklist.doublesLevels[item.payload.x] * -item.value) / 100\r\n                          )}\r\n                          /{tracklist.doublesLevels[item.payload.x]})\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            tickFormatter={(x) => `${Math.round(Math.abs(x))}%`}\r\n            width={40}\r\n            domain={[(dataMin) => Math.min(dataMin, -10), (dataMax) => Math.max(10, dataMax)]}\r\n          />\r\n          <Bar dataKey=\"S-SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Label value=\"Double\" offset={0} position=\"insideBottomLeft\" />\r\n          <Label value=\"Single\" offset={0} position=\"insideTopLeft\" />\r\n          <ReferenceLine y={0} stroke=\"#bbb\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderLevels() {\r\n    const { profile, tracklist } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <BarChart\r\n          data={profile.levelsDistribution}\r\n          stackOffset=\"sign\"\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              const totalD = tracklist.doublesLevels[payload[0].payload.x];\r\n              const totalS = tracklist.singlesLevels[payload[0].payload.x];\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {totalS > 0 && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n                      Single: {Math.abs(payload[1].value).toFixed(1)}% (\r\n                      {Math.round((payload[1].value * totalS) / 100)}/{totalS})\r\n                    </div>\r\n                  )}\r\n                  {totalD > 0 && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n                      Double: {Math.abs(payload[0].value).toFixed(1)}% (\r\n                      {Math.round((Math.abs(payload[0].value) * totalD) / 100)}/{totalD})\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            tickFormatter={(x) => Math.round(Math.abs(x)) + '%'}\r\n            width={40}\r\n            domain={[(dataMin) => Math.min(dataMin, -10), (dataMax) => Math.max(10, dataMax)]}\r\n          />\r\n          <RechartsTooltip />\r\n          <ReferenceLine y={0} stroke=\"#555\" />\r\n          <Legend />\r\n          <Bar dataKey=\"D\" fill=\"#169c16\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#af2928\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradeBlock(type, grade) {\r\n    const { profile } = this.props;\r\n    const obj = profile.progress[type];\r\n    const typeLetter = type === 'double' ? 'D' : 'S';\r\n    const progr = Math.floor((obj[`${grade}-bonus-level-coef`] || 0) * 100);\r\n    const minNumber = obj[`${grade}-bonus-level-min-number`];\r\n    const currentNumber = obj[`${grade}-bonus-level-achieved-number`];\r\n    const levelString = obj[`${grade}-bonus-level`]\r\n      ? `${typeLetter}${obj[`${grade}-bonus-level`]}`\r\n      : '?';\r\n    return (\r\n      <div className=\"grade-block\">\r\n        <div className=\"grade-letter\">\r\n          <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n        </div>\r\n        <div className=\"grade-level\">{levelString}</div>\r\n        <div className=\"grade-progress\">\r\n          {progr}% ({progr === 100 ? minNumber : currentNumber}/{minNumber})\r\n        </div>\r\n        <div\r\n          className={classNames('progress-background', {\r\n            complete: progr === 100,\r\n            zero: progr === 0,\r\n          })}\r\n          style={{\r\n            height: `${progr}%`,\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderAchievement(achName, achievement) {\r\n    const Icon = achievements[achName].icon;\r\n    const description = achievements[achName].description;\r\n    return (\r\n      <Tooltip\r\n        key={achName}\r\n        content={<div>{description}</div>}\r\n        tooltipClassName=\"pumpking-tooltip achievement-tooltip\"\r\n      >\r\n        <div className=\"ach-block\">\r\n          {Icon && (\r\n            <div className=\"ach-icon\">\r\n              <Icon />\r\n            </div>\r\n          )}\r\n          <div className=\"ach-name\">{achName}</div>\r\n          <div\r\n            className={classNames('progress-background', {\r\n              complete: achievement.progress === 100,\r\n              zero: achievement.progress === 0,\r\n            })}\r\n            style={{\r\n              height: `${Math.round(achievement.progress)}%`,\r\n            }}\r\n          />\r\n        </div>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  renderProfile() {\r\n    const { profile, otherPlayers, filter } = this.props;\r\n    const { isLevelGraphCombined } = this.state;\r\n    const expProgress = profile.expRankNext\r\n      ? (profile.exp - profile.expRank.threshold) /\r\n        (profile.expRankNext.threshold - profile.expRank.threshold)\r\n      : 100;\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"profile-header\">\r\n          <div className=\"profile-name text-with-header\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile.lastResultDate ? getTimeAgo(profile.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n          <div className=\"_flex-fill\"></div>\r\n          <div className=\"text-with-header -select\">\r\n            <div className=\"text-header\">сравнить с</div>\r\n            <div>\r\n              <Select\r\n                closeMenuOnSelect\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                options={otherPlayers}\r\n                onChange={(value) => {\r\n                  this.props.history.push(\r\n                    routes.profile.compare.getPath({ id: profile.id, compareToId: value.id })\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header _flex-row _align-center\">\r\n            <span>опыт</span>\r\n            <div className=\"_flex-fill\" />\r\n            <div onClick={this.onShowFaq} className=\"_clickable\">\r\n              <FaQuestionCircle onClick={this.onShowFaq} />\r\n            </div>\r\n            <ReactModal\r\n              ariaHideApp={false}\r\n              className=\"Modal faq-modal\"\r\n              overlayClassName=\"Overlay\"\r\n              isOpen={this.state.showFaq}\r\n              onRequestClose={this.onHideFaq}\r\n            >\r\n              <div className=\"close-btn\" onClick={this.onHideFaq}>\r\n                <FaTimes />\r\n              </div>{' '}\r\n              <ExpFaq />\r\n            </ReactModal>\r\n          </div>\r\n          <div className=\"exp-range\">\r\n            <div className=\"rank exp-rank\">\r\n              {getRankImg(profile.expRank)}\r\n              {profile.expRank && <div>{profile.expRank.threshold}</div>}\r\n            </div>\r\n            <div className=\"exp-line-with-label\">\r\n              <div className=\"exp-label\">\r\n                {profile.expRankNext ? (\r\n                  <>\r\n                    <span className=\"taken-num\">\r\n                      {Math.round(profile.exp - profile.expRank.threshold)}\r\n                    </span>\r\n                    {` / ${profile.expRankNext.threshold - profile.expRank.threshold}`}\r\n                  </>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"exp-line\">\r\n                <div className=\"taken\" style={{ width: Math.floor(100 * expProgress) + '%' }}></div>\r\n                <div\r\n                  className=\"rest\"\r\n                  style={{ width: 100 - Math.ceil(100 * expProgress) + '%' }}\r\n                ></div>\r\n              </div>\r\n              <div className=\"exp-label\">\r\n                total: <span className=\"taken-num\">{Math.round(profile.exp)}</span>\r\n              </div>\r\n            </div>\r\n            {profile.expRankNext && (\r\n              <div className=\"rank exp-rank\">\r\n                {getRankImg(profile.expRankNext)}\r\n                {profile.expRankNext && <div>{profile.expRankNext.threshold}</div>}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              {!isLevelGraphCombined ? (\r\n                <>\r\n                  <div className=\"profile-section-2\">\r\n                    <div className=\"profile-sm-section-header flex\">\r\n                      <span>уровни</span>\r\n                      <div className=\"toggle-holder\">\r\n                        <Toggle\r\n                          className=\"combine-toggle\"\r\n                          checked={isLevelGraphCombined}\r\n                          onChange={() =>\r\n                            this.setState((state) => ({\r\n                              isLevelGraphCombined: !state.isLevelGraphCombined,\r\n                            }))\r\n                          }\r\n                        >\r\n                          объединить графики\r\n                        </Toggle>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"chart-container\">{this.renderLevels()}</div>\r\n                  </div>\r\n                  <div className=\"profile-section-2\">\r\n                    <div className=\"profile-sm-section-header\">\r\n                      <span>оценки</span>\r\n                    </div>\r\n                    <div className=\"chart-container\">{this.renderGrades()}</div>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div className=\"profile-section-2\">\r\n                  <div className=\"profile-sm-section-header flex\">\r\n                    <span>оценки</span>\r\n                    <div className=\"toggle-holder\">\r\n                      <Toggle\r\n                        className=\"combine-toggle\"\r\n                        checked={isLevelGraphCombined}\r\n                        onChange={() =>\r\n                          this.setState((state) => ({\r\n                            isLevelGraphCombined: !state.isLevelGraphCombined,\r\n                          }))\r\n                        }\r\n                      >\r\n                        объединить графики\r\n                      </Toggle>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"chart-container single-double-labels\">\r\n                    {this.renderGradesWithLevels()}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>эло</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderRankingHistory()}</div>\r\n                {/* <div className=\"chart-container\">{this.renderAccuracyPoints()}</div> */}\r\n              </div>\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>место в топе</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderPlaceHistory()}</div>\r\n                {/* <div className=\"chart-container\">{this.renderAccuracyPoints(true)}</div> */}\r\n              </div>\r\n            </div>\r\n            {(() => {\r\n              const currentRange = filter.dayRange || profile.filterRange;\r\n              const dateL = moment(currentRange[0] * 1000 * 60 * 60 * 24).format('L');\r\n              const dateR = moment(currentRange[1] * 1000 * 60 * 60 * 24).format('L');\r\n              const l1 = Math.max(currentRange[0] - 1, profile.minMaxRange[0]);\r\n              const l2 = Math.min(currentRange[0] + 1, currentRange[1]);\r\n              const r1 = Math.max(currentRange[1] - 1, currentRange[0]);\r\n              const r2 = Math.min(currentRange[1] + 1, profile.minMaxRange[1]);\r\n              return (\r\n                <div className=\"range-container\">\r\n                  <Range\r\n                    range={currentRange}\r\n                    min={profile.minMaxRange[0]}\r\n                    max={profile.minMaxRange[1]}\r\n                    onChange={this.onChangeDayRange}\r\n                  />\r\n                  <div className=\"range-controls _flex-row\">\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l1, currentRange[1]])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateL}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l2, currentRange[1]])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                    <div className=\"_flex-fill\"></div>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r1])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateR}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r2])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })()}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>точность по уровням</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderAccuracyPoints()}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\"></div>\r\n        </div>\r\n        <div className=\"profile-section progress-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>достижения по уровням</span>\r\n          </div>\r\n          <div className=\"progress-blocks-single-double\">\r\n            <div className=\"progress-block\">\r\n              <div className=\"achievements-grades single\">\r\n                {this.renderGradeBlock('single', 'A')}\r\n                {this.renderGradeBlock('single', 'A+')}\r\n                {this.renderGradeBlock('single', 'S')}\r\n                {this.renderGradeBlock('single', 'SS')}\r\n              </div>\r\n            </div>\r\n            <div className=\"progress-block\">\r\n              <div className=\"achievements-grades double\">\r\n                {this.renderGradeBlock('double', 'A')}\r\n                {this.renderGradeBlock('double', 'A+')}\r\n                {this.renderGradeBlock('double', 'S')}\r\n                {this.renderGradeBlock('double', 'SS')}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"bonus-faq\">\r\n            * для получения ачивки нужно сыграть около 10% всех чартов данного левела на нужный\r\n            грейд\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>достижения</span>\r\n          </div>\r\n          <div className=\"achievements\">\r\n            {_.keys(profile.achievements).map((achName) =>\r\n              this.renderAchievement(achName, profile.achievements[achName])\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>часто играемые чарты</span>\r\n          </div>\r\n          <MostPlayed playerId={profile.id} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, profile, error } = this.props;\r\n    DEBUG && console.log('profile:', profile);\r\n    return (\r\n      <div className=\"profile-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"btn btn-sm btn-dark btn-icon\"\r\n              onClick={this.onRefresh}\r\n            >\r\n              <FaSearch /> обновить\r\n            </button>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!isLoading && _.isEmpty(profile) && <div className=\"profile\">Profile not found</div>}\r\n          {!isLoading && !_.isEmpty(profile) && this.renderProfile()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Profile));\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport Select from 'react-select';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as RechartsTooltip,\r\n  ReferenceLine,\r\n  CartesianGrid,\r\n  Line,\r\n  ResponsiveContainer,\r\n  ScatterChart,\r\n  Scatter,\r\n} from 'recharts';\r\nimport _ from 'lodash/fp';\r\nimport memoize from 'lru-memoize';\r\n\r\n// styles\r\nimport './profile-compare.scss';\r\n\r\n// constants\r\nimport { DEBUG } from 'constants/env';\r\nimport { routes } from 'constants/routes';\r\n\r\n// components\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Range from 'components/Shared/Range';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\nimport { setProfilesFilter, resetProfilesFilter } from 'reducers/profiles';\r\n\r\n// utils\r\nimport { profileSelectorCreator } from 'utils/profiles';\r\nimport { parseDate } from 'utils/date';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { otherPlayersSelector } from 'components/Profile/Profile';\r\n\r\n// code\r\nconst BARS_MODES = {\r\n  SINGLE_TWO: 'SINGLE_TWO',\r\n  SINGLE_FIVE: 'SINGLE_FIVE',\r\n  DOUBLE_TWO: 'DOUBLE_TWO',\r\n  DOUBLE_FIVE: 'DOUBLE_FIVE',\r\n  BOTH_TWO: 'BOTH_TWO',\r\n  BOTH_FIVE: 'BOTH_FIVE',\r\n};\r\nconst getCompareBars = (mode) => {\r\n  switch (mode) {\r\n    case BARS_MODES.SINGLE_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"single.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"single.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.SINGLE_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"single.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar\r\n          key=\"2\"\r\n          dataKey=\"single.p2notPlayed\"\r\n          fill=\"#899db3\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"3\"\r\n          dataKey=\"single.notPlayed\"\r\n          fill=\"#70707060\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"4\"\r\n          dataKey=\"single.p1notPlayed\"\r\n          fill=\"#bfa988\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar key=\"5\" dataKey=\"single.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    case BARS_MODES.DOUBLE_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"double.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"double.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.DOUBLE_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"double.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar\r\n          key=\"2\"\r\n          dataKey=\"double.p2notPlayed\"\r\n          fill=\"#899db3\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"3\"\r\n          dataKey=\"double.notPlayed\"\r\n          fill=\"#70707060\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"4\"\r\n          dataKey=\"double.p1notPlayed\"\r\n          fill=\"#bfa988\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar key=\"5\" dataKey=\"double.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    case BARS_MODES.BOTH_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"all.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"all.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.BOTH_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"all.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"2\" dataKey=\"all.p2notPlayed\" fill=\"#899db3\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"3\" dataKey=\"all.notPlayed\" fill=\"#70707060\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"4\" dataKey=\"all.p1notPlayed\" fill=\"#bfa988\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"5\" dataKey=\"all.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst MIN_GRAPH_HEIGHT = undefined;\r\n\r\nconst profile1Selector = profileSelectorCreator('id');\r\nconst profile2Selector = profileSelectorCreator('compareToId');\r\n\r\nconst getCombinedData = memoize()((p1, p2, tracklist) => {\r\n  if (!p1 || !p2) {\r\n    return {};\r\n  }\r\n  let rc1 = p1.ratingChanges[0].rating;\r\n  let rc2 = p2.ratingChanges[0].rating;\r\n  const allRC = _.flow(\r\n    _.sortBy('date'),\r\n    _.map((item) => {\r\n      if (item.rating) {\r\n        rc1 = item.rating;\r\n      }\r\n      if (item.rating2) {\r\n        rc2 = item.rating2;\r\n      }\r\n      return {\r\n        rating1: rc1,\r\n        rating2: rc2,\r\n        date: item.date,\r\n      };\r\n    }),\r\n    _.sortedUniqBy('date')\r\n  )([\r\n    ...p1.ratingChanges,\r\n    ...p2.ratingChanges.map((it) => ({ date: it.date, rating2: it.rating })),\r\n  ]);\r\n\r\n  rc1 = p1.placesChanges[0].place;\r\n  rc2 = p2.placesChanges[0].place;\r\n  const allPC = _.flow(\r\n    _.sortBy('date'),\r\n    _.map((item) => {\r\n      if (item.place) {\r\n        rc1 = item.place;\r\n      }\r\n      if (item.place2) {\r\n        rc2 = item.place2;\r\n      }\r\n      return {\r\n        place1: rc1,\r\n        place2: rc2,\r\n        date: item.date,\r\n      };\r\n    })\r\n  )([...p1.placesChanges, ...p2.placesChanges.map((it) => ({ date: it.date, place2: it.place }))]);\r\n\r\n  const perLevelComparison = _.fromPairs(Array.from({ length: 28 }).map((x, i) => [i + 1, {}]));\r\n  _.keys(perLevelComparison).forEach((level) => {\r\n    const charts = _.flow(\r\n      _.map('chart'),\r\n      _.uniqBy('sharedChartId')\r\n    )([...p1.resultsByLevel[level], ...p2.resultsByLevel[level]]);\r\n    const data = {\r\n      x: level,\r\n      all: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        // notPlayedHalf: 0,\r\n        twoBars: {},\r\n      },\r\n      double: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        twoBars: {},\r\n      },\r\n      single: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        twoBars: {},\r\n      },\r\n    };\r\n    charts.forEach((chart) => {\r\n      const p1index = chart.results.findIndex((r) => r.playerId === p1.id);\r\n      const p2index = chart.results.findIndex((r) => r.playerId === p2.id);\r\n      const perType = chart.chartType.startsWith('D') ? data.double : data.single;\r\n      if (p1index < 0 && p2index < 0) {\r\n        console.log('wtf?');\r\n      } else if (p1index < 0) {\r\n        data.all.p1notPlayed++;\r\n        perType.p1notPlayed++;\r\n      } else if (p2index < 0) {\r\n        data.all.p2notPlayed++;\r\n        perType.p2notPlayed++;\r\n      } else if (p1index < p2index) {\r\n        data.all.p1win++;\r\n        perType.p1win++;\r\n      } else if (p2index < p1index) {\r\n        data.all.p2win++;\r\n        perType.p2win++;\r\n      }\r\n    });\r\n\r\n    const normalizeTwo = (dataObj) => {\r\n      const totalPlayed = dataObj.p1win + dataObj.p2win || 1; // in case of divide by 0\r\n      dataObj.twoBars.p1win = dataObj.p1win / totalPlayed;\r\n      dataObj.twoBars.p2win = dataObj.p2win / totalPlayed;\r\n    };\r\n    normalizeTwo(data.all);\r\n    normalizeTwo(data.single);\r\n    normalizeTwo(data.double);\r\n\r\n    const normalizeFive = (dataObj, total) => {\r\n      dataObj.p1win = dataObj.p1win / total;\r\n      dataObj.p1notPlayed = dataObj.p1notPlayed / total;\r\n      dataObj.p2win = dataObj.p2win / total;\r\n      dataObj.p2notPlayed = dataObj.p2notPlayed / total;\r\n      dataObj.notPlayed =\r\n        1 - dataObj.p1win - dataObj.p1notPlayed - dataObj.p2win - dataObj.p2notPlayed;\r\n      // dataObj.notPlayedHalf = dataObj.notPlayed / 2;\r\n    };\r\n    normalizeFive(data.all, tracklist.chartLevels[level]);\r\n    normalizeFive(data.double, tracklist.doublesLevels[level]);\r\n    normalizeFive(data.single, tracklist.singlesLevels[level]);\r\n\r\n    perLevelComparison[level] = data;\r\n  });\r\n\r\n  return {\r\n    ratingChanges: allRC,\r\n    placesChanges: allPC,\r\n    perLevelComparison: _.values(perLevelComparison),\r\n  };\r\n});\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const profile1 = profile1Selector(state, props);\r\n  const profile2 = profile2Selector(state, props);\r\n  return {\r\n    profile: profile1,\r\n    profile2,\r\n    otherPlayers: otherPlayersSelector(state, props),\r\n    combinedData: getCombinedData(profile1, profile2, state.tracklist.data),\r\n    tracklist: state.tracklist.data,\r\n    filter: state.profiles.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading:\r\n      state.results.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setProfilesFilter,\r\n  resetProfilesFilter,\r\n};\r\n\r\nclass ProfileCompare extends Component {\r\n  static propTypes = {\r\n    profile: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    profile: {},\r\n    profile2: {},\r\n    combinedData: {},\r\n  };\r\n\r\n  state = {\r\n    isLevelGraphCombined: true,\r\n    compareBarsMode: BARS_MODES.BOTH_TWO,\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onChangeDayRange = (range) => {\r\n    const { filter } = this.props;\r\n    this.props.setProfilesFilter({\r\n      ...filter,\r\n      dayRange: range,\r\n    });\r\n  };\r\n\r\n  rhMargin = { top: 5, bottom: 5, right: 5, left: 0 };\r\n  rhXDomain = ['dataMin', 'dataMax'];\r\n  rhYDomain = ['dataMin - 100', 'dataMax + 100'];\r\n  rhXTickFormatter = (value) => parseDate(value).toLocaleDateString();\r\n  rhTooltip = ({ active, payload, label }) => {\r\n    const { profile, profile2 } = this.props;\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n    if (!payload || !payload[0]) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"history-tooltip\">\r\n        <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n        {payload[1] && (\r\n          <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n            {p1Name}: {Math.round(payload[1].value)}\r\n          </div>\r\n        )}\r\n        {payload[0] && (\r\n          <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n            {p2Name}: {Math.round(payload[0].value)}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderRankingHistory() {\r\n    const { combinedData } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={combinedData.ratingChanges} margin={this.rhMargin}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={this.rhXDomain}\r\n            tickFormatter={this.rhXTickFormatter}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={this.rhYDomain}\r\n            tickFormatter={Math.round}\r\n            width={40}\r\n          />\r\n          <ReferenceLine y={1000} stroke=\"white\" />\r\n          <RechartsTooltip isAnimationActive={false} content={this.rhTooltip} />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating2\"\r\n            stroke=\"#ffd388\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating1\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  circleShape = (args) => (\r\n    <circle key={args.key} cx={args.cx} cy={args.cy} r={4} fill={args.fill}></circle>\r\n  );\r\n  renderAccuracyPoints(useProfile2 = false) {\r\n    const { profile, profile2 } = this.props;\r\n\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <ScatterChart margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"[0]\"\r\n            type=\"number\"\r\n            domain={[1, 28]}\r\n            tickFormatter={(value) => Math.round(value)}\r\n            ticks={[1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27]}\r\n          />\r\n          <YAxis\r\n            dataKey=\"[1]\"\r\n            type=\"number\"\r\n            domain={[0, 100]}\r\n            width={40}\r\n            tickFormatter={(value) => Math.round(value) + '%'}\r\n          />\r\n          <Scatter\r\n            shape={this.circleShape}\r\n            data={(useProfile2 ? profile2 : profile).accuracyPointsRaw}\r\n            fill={useProfile2 ? '#ffd388' : '#88d3ff'}\r\n          />\r\n        </ScatterChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderPlaceHistory() {\r\n    const { combinedData, profile, profile2 } = this.props;\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart\r\n          data={combinedData.placesChanges}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={(value) => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={[1, (dataMax) => (dataMax < 3 ? dataMax + 2 : dataMax + 1)]}\r\n            interval={0}\r\n            reversed\r\n            width={40}\r\n          />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload[1] && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n                      {p1Name}: #{payload[1].value}\r\n                    </div>\r\n                  )}\r\n                  {payload[0] && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n                      {p2Name}: #{payload[0].value}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place2\"\r\n            stroke=\"#ffd388\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place1\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  plcMargin = { top: 5, bottom: 5, right: 5, left: 0 };\r\n  plcTooltip = ({ active, payload, label }) => {\r\n    const { profile, profile2 } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n    const isTwo = [BARS_MODES.SINGLE_TWO, BARS_MODES.DOUBLE_TWO, BARS_MODES.BOTH_TWO].includes(\r\n      compareBarsMode\r\n    );\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n\r\n    if (!payload || !payload[0]) {\r\n      return null;\r\n    }\r\n    const renderLegendItem = (item, label) => (\r\n      <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n        {label}: {Math.round(_.get(item.dataKey, item.payload) * 100)}%\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"history-tooltip\">\r\n        <div>Level: {payload[0].payload.x}</div>\r\n        {renderLegendItem(payload[0], `${p1Name} wins`)}\r\n        {!isTwo && renderLegendItem(payload[1], `${p2Name} has no score`)}\r\n        {!isTwo && renderLegendItem(payload[2], `Both have no score`)}\r\n        {!isTwo && renderLegendItem(payload[3], `${p1Name} has no score`)}\r\n        {renderLegendItem(isTwo ? payload[1] : payload[4], `${p2Name} wins`)}\r\n      </div>\r\n    );\r\n  };\r\n  plcXDomain = [0, 1];\r\n  plcXTicks = [0, 0.5, 1];\r\n  plcXFormatter = (x) => `${Math.round(x * 100)}%`;\r\n\r\n  renderPerLevelComparison() {\r\n    const { combinedData } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" aspect={0.7}>\r\n        <BarChart\r\n          layout=\"vertical\"\r\n          data={[...combinedData.perLevelComparison]}\r\n          margin={this.plcMargin}\r\n        >\r\n          <RechartsTooltip isAnimationActive={false} content={this.plcTooltip} />\r\n          <YAxis reversed dataKey=\"x\" type=\"category\" width={23} />\r\n          <XAxis\r\n            type=\"number\"\r\n            domain={this.plcXDomain}\r\n            ticks={this.plcXTicks}\r\n            tickFormatter={this.plcXFormatter}\r\n          />\r\n          <ReferenceLine x={0.5} stroke=\"#666\" />\r\n          {getCompareBars(compareBarsMode)}\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderProfile() {\r\n    const { profile, profile2, filter, otherPlayers } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"profile-header\">\r\n          <div className=\"profile-name text-with-header blue\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile.lastResultDate ? getTimeAgo(profile.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n          <div className=\"_flex-fill\"></div>\r\n          <div className=\"text-with-header -select\">\r\n            <div className=\"text-header\">сравнить с</div>\r\n            <div>\r\n              <Select\r\n                closeMenuOnSelect\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                options={otherPlayers}\r\n                onChange={(value) => {\r\n                  this.props.history.push(\r\n                    routes.profile.compare.getPath({ id: profile.id, compareToId: value.id })\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-header right-align\">\r\n          <div className=\"profile-name text-with-header orange\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile2.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile2.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile2.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile2.lastResultDate ? getTimeAgo(profile2.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header flex\">\r\n                  <span>победы по уровням</span>\r\n                </div>\r\n                <div className=\"profile-sm-section-header flex\">\r\n                  {(() => {\r\n                    const isTwo = [\r\n                      BARS_MODES.SINGLE_TWO,\r\n                      BARS_MODES.DOUBLE_TWO,\r\n                      BARS_MODES.BOTH_TWO,\r\n                    ].includes(compareBarsMode);\r\n                    return (\r\n                      <div className=\"toggle-holder\">\r\n                        <Toggle\r\n                          className=\"combine-toggle\"\r\n                          checked={!isTwo}\r\n                          onChange={() =>\r\n                            this.setState((state) => ({\r\n                              compareBarsMode: {\r\n                                [BARS_MODES.SINGLE_TWO]: BARS_MODES.SINGLE_FIVE,\r\n                                [BARS_MODES.DOUBLE_TWO]: BARS_MODES.DOUBLE_FIVE,\r\n                                [BARS_MODES.BOTH_TWO]: BARS_MODES.BOTH_FIVE,\r\n                                [BARS_MODES.SINGLE_FIVE]: BARS_MODES.SINGLE_TWO,\r\n                                [BARS_MODES.DOUBLE_FIVE]: BARS_MODES.DOUBLE_TWO,\r\n                                [BARS_MODES.BOTH_FIVE]: BARS_MODES.BOTH_TWO,\r\n                              }[state.compareBarsMode],\r\n                            }))\r\n                          }\r\n                        >\r\n                          подробно\r\n                        </Toggle>\r\n                        <div className=\"tabs-holder\">\r\n                          <ToggleButton\r\n                            text=\"все\"\r\n                            active={[BARS_MODES.BOTH_TWO, BARS_MODES.BOTH_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={() => {\r\n                              this.setState((state) => ({\r\n                                compareBarsMode: isTwo ? BARS_MODES.BOTH_TWO : BARS_MODES.BOTH_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                          <ToggleButton\r\n                            text=\"синглы\"\r\n                            active={[BARS_MODES.SINGLE_TWO, BARS_MODES.SINGLE_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={(active) => {\r\n                              this.setState((state) => ({\r\n                                compareBarsMode: isTwo\r\n                                  ? BARS_MODES.SINGLE_TWO\r\n                                  : BARS_MODES.SINGLE_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                          <ToggleButton\r\n                            text=\"даблы\"\r\n                            active={[BARS_MODES.DOUBLE_TWO, BARS_MODES.DOUBLE_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={(active) => {\r\n                              this.setState((state) => ({\r\n                                compareBarsMode: isTwo\r\n                                  ? BARS_MODES.DOUBLE_TWO\r\n                                  : BARS_MODES.DOUBLE_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })()}\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderPerLevelComparison()}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>эло</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderRankingHistory()}</div>\r\n              </div>\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>место в топе</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderPlaceHistory()}</div>\r\n              </div>\r\n            </div>\r\n            {(() => {\r\n              const currentRange = filter.dayRange || profile.filterRange;\r\n              const dateL = moment(currentRange[0] * 1000 * 60 * 60 * 24).format('L');\r\n              const dateR = moment(currentRange[1] * 1000 * 60 * 60 * 24).format('L');\r\n              const l1 = Math.max(currentRange[0] - 1, profile.minMaxRange[0]);\r\n              const l2 = Math.min(currentRange[0] + 1, currentRange[1]);\r\n              const r1 = Math.max(currentRange[1] - 1, currentRange[0]);\r\n              const r2 = Math.min(currentRange[1] + 1, profile.minMaxRange[1]);\r\n              return (\r\n                <div className=\"range-container\">\r\n                  <Range\r\n                    range={currentRange}\r\n                    min={profile.minMaxRange[0]}\r\n                    max={profile.minMaxRange[1]}\r\n                    onChange={this.onChangeDayRange}\r\n                  />\r\n                  <div className=\"range-controls _flex-row\">\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l1, currentRange[1]])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateL}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l2, currentRange[1]])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                    <div className=\"_flex-fill\"></div>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r1])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateR}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r2])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })()}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>точность по уровням</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderAccuracyPoints()}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>точность по уровням</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderAccuracyPoints(true)}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, profile, error } = this.props;\r\n    DEBUG && console.log('profile:', profile);\r\n    return (\r\n      <div className=\"profile-compare-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"btn btn-sm btn-dark btn-icon\"\r\n              onClick={this.onRefresh}\r\n            >\r\n              <FaSearch /> обновить\r\n            </button>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!isLoading && _.isEmpty(profile) && <div className=\"profile\">Profile not found</div>}\r\n          {!isLoading && !_.isEmpty(profile) && this.renderProfile()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProfileCompare));\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\nimport { RESET } from './resetAction';\r\n\r\nconst LOADING = `USER/LOADING`;\r\nconst SUCCESS = `USER/SUCCESS`;\r\nconst ERROR = `USER/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        data: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: null,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    case RESET:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchUser = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/profile` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport { resetUser } from './resetAction';\r\n","import cookies from 'browser-cookies';\r\n\r\nimport { postJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport { fetchUser, resetUser } from 'reducers/user';\r\n\r\nconst LOADING = `LOGIN/LOADING`;\r\nconst SUCCESS = `LOGIN/SUCCESS`;\r\nconst ERROR = `LOGIN/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n  error: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        data: null,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: null,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const login = googleResponse => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        postJson({\r\n          url: `${HOST}/login/google`,\r\n          body: { token: googleResponse.tokenId },\r\n        })\r\n      );\r\n      cookies.set('session', data.session, { expires: 30 });\r\n      dispatch({ type: SUCCESS, data });\r\n      dispatch(fetchUser());\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    dispatch(resetUser());\r\n    try {\r\n      const data = await dispatch(\r\n        postJson({\r\n          url: `${HOST}/logout`,\r\n        })\r\n      );\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './top-bar.scss';\r\n\r\n// routes\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport * as loginACs from 'reducers/login';\r\n\r\n// redux\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoadingLogin: state.login.isLoading,\r\n    isLoadingUser: state.user.isLoading,\r\n    user: state.user.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login: loginACs.login,\r\n  logout: loginACs.logout,\r\n};\r\n\r\nfunction TopBar({ isLoadingLogin, isLoadingUser, user, login, logout }) {\r\n  return (\r\n    <header className=\"top-bar\">\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <NavLink exact to={routes.leaderboard.path}>\r\n              leaderboards\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact to={routes.ranking.path}>\r\n              ranking\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact to={routes.songs.path}>\r\n              songs\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div className=\"_flex-fill\" />\r\n      <div className=\"login-container\">\r\n        <NavLink\r\n          className=\"player-info\"\r\n          exact\r\n          to={routes.profile.getPath({ id: _.get('player.id', user) })}\r\n        >\r\n          {_.getOr('', 'player.nickname', user)}\r\n        </NavLink>\r\n        <button\r\n          className=\"btn btn-dark btn-icon btn-sm\"\r\n          onClick={logout}\r\n          disabled={isLoadingLogin || isLoadingUser}\r\n        >\r\n          <span> logout</span>\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { FaGoogle } from 'react-icons/fa';\r\nimport Emoji from 'react-emoji-render';\r\n\r\nimport './login-screen.scss';\r\n\r\n// reducers\r\nimport * as loginACs from 'reducers/login';\r\n\r\n// redux\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoading: state.login.isLoading,\r\n    error: state.login.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login: loginACs.login,\r\n};\r\n\r\nfunction LoginScreen({ isLoading, error, login }) {\r\n  const [isClown, setClown] = useState(false);\r\n  const onGoogleResponse = res => {\r\n    if (res.error) {\r\n      console.log('Google login response error:', res);\r\n    } else {\r\n      login(res);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <div className=\"site-name\">pumpking</div>\r\n      <div className=\"login-button\">\r\n        <GoogleLogin\r\n          clientId=\"197132042723-cmibep21qf6dald9l2l01rif7l5dtd4s.apps.googleusercontent.com\"\r\n          buttonText=\"Login\"\r\n          onSuccess={onGoogleResponse}\r\n          onFailure={onGoogleResponse}\r\n          cookiePolicy={'single_host_origin'}\r\n          render={({ onClick, disabled }) => (\r\n            <button\r\n              className=\"btn btn-dark btn-icon btn-sm\"\r\n              onClick={onClick}\r\n              disabled={disabled || isLoading}\r\n            >\r\n              <FaGoogle />\r\n              <span> login</span>\r\n            </button>\r\n          )}\r\n        />\r\n      </div>\r\n      {error && <div className=\"error\">{error.message}</div>}\r\n      <div className=\"footer\">\r\n        By logging in, you agree to our{' '}\r\n        {isClown ? (\r\n          <Emoji text=\"🤡\" className=\"clown\" />\r\n        ) : (\r\n          <span onClick={() => setClown(true)} className=\"link-style\">\r\n            Privacy Policy\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginScreen);\r\n","export const TYPES = {\r\n  ACHIEVEMENT: 'ACHIEVEMENT',\r\n  RANK_UP: 'RANK_UP',\r\n};\r\n","import _ from 'lodash/fp';\r\n\r\nconst ADD_POPUP = `POPUPS/ADD`;\r\nconst REMOVE_POPUP = `POPUPS/REMOVE`;\r\n\r\nconst ID_PREFIX = 'popup';\r\n\r\nconst initialState = {\r\n  popups: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_POPUP:\r\n      const id = _.uniqueId(ID_PREFIX);\r\n      return {\r\n        ...state,\r\n        popups: [\r\n          ...state.popups,\r\n          {\r\n            id,\r\n            type: action.popupType,\r\n            ..._.pick(['parameters', 'fadeIn', 'fadeOut', 'timeout', 'persistent'], action),\r\n          },\r\n        ],\r\n      };\r\n    case REMOVE_POPUP:\r\n      return {\r\n        ...state,\r\n        popups: _.remove({ id: action.id }, state.popups),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addPopup = ({ type, parameters, fadeIn, fadeOut, timeout, persistent }) => {\r\n  return { type: ADD_POPUP, popupType: type, parameters, fadeIn, fadeOut, timeout, persistent };\r\n};\r\n\r\nexport const removePopup = ({ id }) => {\r\n  return { type: REMOVE_POPUP, id };\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { GiAchievement } from 'react-icons/gi';\r\nimport classNames from 'classnames';\r\n\r\nimport { achievements } from 'utils/achievements';\r\n\r\nconst renderAchievement = (achName, progress) => {\r\n  const Icon = achievements[achName].icon;\r\n  return (\r\n    <div className=\"ach-block\">\r\n      {Icon && (\r\n        <div className=\"ach-icon\">\r\n          <Icon />\r\n        </div>\r\n      )}\r\n      <div className=\"ach-name\">{achName}</div>\r\n      <div\r\n        className={classNames('progress-background', {\r\n          complete: progress === 100,\r\n          zero: progress === 0,\r\n        })}\r\n        style={{\r\n          height: `${Math.round(progress)}%`,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AchievementPopup = ({ playerName, achievementName, progress }) => {\r\n  const [progressNumber, setProgressNumber] = useState(progress[0]);\r\n\r\n  useEffect(() => {\r\n    setProgressNumber(progress[1]);\r\n  }, []); // eslint-disable-line\r\n\r\n  return (\r\n    <div className=\"achievement-popup popup\">\r\n      <div className=\"player\">\r\n        <GiAchievement />\r\n        <span>{playerName}</span>\r\n        <GiAchievement />\r\n      </div>\r\n      <div className=\"ach-holder\">{renderAchievement(achievementName, progressNumber)}</div>\r\n      <div className=\"description\">{achievements[achievementName].description}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AchievementPopup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { GiAchievement } from 'react-icons/gi';\r\nimport _ from 'lodash/fp';\r\nimport FlipMove from 'react-flip-move';\r\nimport classNames from 'classnames';\r\n\r\nconst renderPlayerLine = (pl, isCurrentPlayer) => {\r\n  return (\r\n    <div className={`closest-player ${isCurrentPlayer ? 'current-player' : ''}`}>\r\n      <div className=\"place\">#{pl.place}</div>\r\n      <div className=\"name\">{pl.name}</div>\r\n      <div className=\"elo\">{pl.rating}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RankUpPopup = ({ playerName, place: [prevPlace, currPlace], list: [prevList, currList] }) => {\r\n  const [place, setPlace] = useState(prevPlace);\r\n  const [list, setList] = useState(prevList);\r\n\r\n  useEffect(() => {\r\n    setList(currList);\r\n    setPlace(currPlace);\r\n  }, []); // eslint-disable-line\r\n\r\n  const listTop = Math.min(0, Math.max(-60 * (_.size(list) - 7), -60 * (place - 4)));\r\n  return (\r\n    <div className=\"rank-up-popup popup\">\r\n      <div className=\"player\">\r\n        <GiAchievement />\r\n        <span>{playerName}</span>\r\n        <GiAchievement />\r\n      </div>\r\n      <div className=\"ranking-holder\">\r\n        <div className=\"moving-list\" style={{ top: listTop }}>\r\n          <FlipMove duration={4500} delay={2000} maintainContainerHeight>\r\n            {list.map((pl, index) => {\r\n              return (\r\n                <div\r\n                  key={pl.id}\r\n                  className={classNames('player-block', { current: index === place - 1 })}\r\n                >\r\n                  {renderPlayerLine(pl, index === place - 1)}\r\n                </div>\r\n              );\r\n            })}\r\n          </FlipMove>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankUpPopup;\r\n","import React, { useEffect, useCallback, useState, useRef } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport ReactModal from 'react-modal';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './popups.scss';\r\n\r\nimport { TYPES } from 'constants/popups';\r\n\r\nimport { removePopup } from 'reducers/popups';\r\n\r\nimport AchievementPopup from './AchievementPopup';\r\nimport RankUpPopup from './RankUpPopup';\r\n\r\nconst popupByType = {\r\n  [TYPES.ACHIEVEMENT]: AchievementPopup,\r\n  [TYPES.RANK_UP]: RankUpPopup,\r\n};\r\n\r\nconst popupStyles = {\r\n  overlay: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0.1)',\r\n  },\r\n  content: {\r\n    top: null,\r\n    bottom: null,\r\n    left: null,\r\n    right: null,\r\n    position: null,\r\n    borderRadius: null,\r\n    padding: null,\r\n    background: null,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    height: '100%',\r\n    transition: '2.5s opacity ease',\r\n    opacity: 1,\r\n  },\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    popups: state.popups.popups,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  removePopup,\r\n};\r\n\r\nconst Popups = ({ popups, removePopup }) => {\r\n  const [visiblePopup, setVisiblePopup] = useState(null);\r\n  const contentRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (popups.length > 0) {\r\n      const popup = popups[0];\r\n      setVisiblePopup(popup);\r\n      if (!popup.persistent) {\r\n        setTimeout(() => {\r\n          if (popup && popup.fadeOut) {\r\n            contentRef.current.style.opacity = 0;\r\n            setTimeout(() => {\r\n              setVisiblePopup(null);\r\n              removePopup(popup);\r\n            }, 2500);\r\n          } else {\r\n            setVisiblePopup(null);\r\n            removePopup(popup);\r\n          }\r\n        }, popup.timeout || 6000);\r\n      }\r\n    } else {\r\n      setVisiblePopup(null);\r\n    }\r\n  }, [popups, removePopup]);\r\n\r\n  const onAfterOpen = useCallback(() => {\r\n    if (visiblePopup && visiblePopup.fadeIn) {\r\n      contentRef.current.style.opacity = 1;\r\n    }\r\n  }, [visiblePopup]);\r\n\r\n  let style = popupStyles;\r\n  let popupBody = null;\r\n  if (visiblePopup) {\r\n    const PopupComponent = popupByType[visiblePopup.type];\r\n    popupBody = PopupComponent ? (\r\n      <PopupComponent {...visiblePopup.parameters} />\r\n    ) : (\r\n      <div>{JSON.stringify(visiblePopup)}</div>\r\n    );\r\n\r\n    if (visiblePopup.fadeIn) {\r\n      style = _.set('content.opacity', 0, popupStyles);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"popups-holder\">\r\n      <ReactModal\r\n        isOpen={!!visiblePopup}\r\n        contentRef={(ref) => (contentRef.current = ref)}\r\n        onAfterOpen={onAfterOpen}\r\n        style={style}\r\n      >\r\n        {popupBody}\r\n      </ReactModal>\r\n    </div>\r\n  );\r\n};\r\nPopups.propTypes = {\r\n  popups: toBe.array,\r\n  removePopup: toBe.func,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Popups);\r\n","import { fetchJson } from 'utils/fetch';\r\nimport queryString from 'query-string';\r\nimport _ from 'lodash/fp';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport { preprocessData } from 'components/SocketTracker/helpers';\r\n\r\nconst LOADING = `TOP_PER_SONG/LOADING`;\r\nconst SUCCESS = `TOP_PER_SONG/SUCCESS`;\r\nconst ERROR = `TOP_PER_SONG/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n  error: null,\r\n  fetchingParams: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        fetchingParams: action.fetchingParams,\r\n        data: null,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return action.fetchingParams === state.fetchingParams\r\n        ? {\r\n            ...state,\r\n            isLoading: false,\r\n            error: action.error,\r\n            data: null,\r\n            fetchingParams: null,\r\n          }\r\n        : state;\r\n    case SUCCESS:\r\n      return action.fetchingParams === state.fetchingParams\r\n        ? {\r\n            ...state,\r\n            isLoading: false,\r\n            data: action.data,\r\n            fetchingParams: null,\r\n          }\r\n        : state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTopPerSong = (songName, leftLabel, rightLabel) => {\r\n  const fetchingParams = queryString.stringify({\r\n    song_name: songName,\r\n    charts: _.compact(_.uniq([leftLabel, rightLabel])).join(','),\r\n  });\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING, fetchingParams });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/topPerSong?${fetchingParams}` }));\r\n      const processedData = _.flow(preprocessData, _.get('results'))(data);\r\n      dispatch({ type: SUCCESS, data: processedData, fetchingParams });\r\n      return processedData;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error, fetchingParams });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React, { useCallback } from 'react';\r\nimport _ from 'lodash/fp';\r\n\r\nimport { TYPES } from 'constants/popups';\r\n\r\nimport ChartLabel from 'components/Leaderboard/ChartLabel';\r\n\r\nimport { getRankImg } from 'utils/exp';\r\nimport { useTrackedEx } from './helpers';\r\n\r\nexport const PlayerCard = ({\r\n  player,\r\n  profile,\r\n  label,\r\n  trackedData,\r\n  isLeft = false,\r\n  preferences,\r\n  topPlayersList,\r\n  addPopup,\r\n}) => {\r\n  const playersHiddenStatus = _.getOr({}, 'playersHiddenStatus', preferences);\r\n\r\n  const renderDeltaText = (n, prevN) => {\r\n    if (!prevN || prevN === n) {\r\n      return null;\r\n    }\r\n    const delta = n - prevN;\r\n    return (\r\n      <span className={`change ${delta >= 0 ? 'pos' : 'neg'}`}>\r\n        {delta < 0 ? delta.toFixed(1) : `+${delta.toFixed(1)}`}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const renderExpLine = () => {\r\n    if (!profile.expRank || !profile.exp) {\r\n      return null;\r\n    }\r\n\r\n    let takenWidth = profile.expRankNext\r\n      ? (profile.exp - profile.expRank.threshold) /\r\n        (profile.expRankNext.threshold - profile.expRank.threshold)\r\n      : 1;\r\n    const emptyWidth = 1 - takenWidth;\r\n    let diffWidth = 0;\r\n\r\n    if (trackedData.exp[1]) {\r\n      takenWidth = profile.expRankNext\r\n        ? (trackedData.exp[1] - profile.expRank.threshold) /\r\n          (profile.expRankNext.threshold - profile.expRank.threshold)\r\n        : 1;\r\n      diffWidth = 1 - emptyWidth - takenWidth;\r\n    }\r\n    return (\r\n      <div className=\"exp-line\">\r\n        <div className=\"taken\" style={{ width: Math.floor(100 * takenWidth) + '%' }}></div>\r\n        <div className=\"diff\" style={{ width: Math.ceil(100 * diffWidth) + '%' }}></div>\r\n        <div className=\"rest\" style={{ width: Math.ceil(100 * emptyWidth) + '%' }}></div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const rivals = topPlayersList.filter((pl) => !playersHiddenStatus[pl.id]);\r\n  const playerIndex = _.findIndex({ id: profile.id }, rivals);\r\n  const closestPlayers =\r\n    playerIndex < 0\r\n      ? []\r\n      : rivals.slice(Math.max(0, playerIndex - 2), Math.min(playerIndex + 3, rivals.length));\r\n\r\n  useTrackedEx({\r\n    data: topPlayersList,\r\n    resetData: profile.name,\r\n    isDataValid: useCallback(_.get('[0].rating'), []), // top list is only valid when rating is calculated\r\n    onChange: useCallback(\r\n      (prevList, currList) => {\r\n        const prevPlace = _.get('place', _.find({ id: profile.id }, prevList));\r\n        const currPlace = _.get('place', _.find({ id: profile.id }, currList));\r\n        // console.log('List update:', prevList, currList, prevPlace, currPlace);\r\n        if (prevPlace && currPlace && prevPlace > currPlace) {\r\n          // console.log('Place update:', profile.name, prevPlace, currPlace);\r\n          addPopup({\r\n            type: TYPES.RANK_UP,\r\n            fadeIn: true,\r\n            fadeOut: true,\r\n            timeout: 7500,\r\n            parameters: {\r\n              playerName: profile.name,\r\n              place: [prevPlace, currPlace],\r\n              list: [prevList, currList],\r\n            },\r\n          });\r\n        }\r\n      },\r\n      [addPopup, profile.id, profile.name]\r\n    ),\r\n  });\r\n\r\n  const [type, level] = label ? label.match(/(\\D+)|(\\d+)/g) : [];\r\n\r\n  return (\r\n    <div className={`player-container ${isLeft ? 'left' : 'right'}`}>\r\n      {player && (\r\n        <>\r\n          {/* <div className=\"title-header\">player {isLeft ? 1 : 2}:</div> */}\r\n          <div className=\"name-with-label\">\r\n            <div className=\"name\">{profile.name || player}</div>\r\n            <div className=\"chart-label\">\r\n              <ChartLabel type={type} level={level} />\r\n            </div>\r\n          </div>\r\n          {profile.exp && profile.expRank && (\r\n            <div className=\"exp exp-rank\">\r\n              {getRankImg(profile.expRank)}\r\n              {renderExpLine()}\r\n            </div>\r\n          )}\r\n          {trackedData.exp[0] && (\r\n            <div className=\"exp-text\">\r\n              <span className=\"_grey-text\">exp:</span>\r\n              <span>{Math.round(trackedData.exp[0])}</span>\r\n              {renderDeltaText(trackedData.exp[0], trackedData.exp[1])}\r\n            </div>\r\n          )}\r\n          {trackedData.elo[0] && (\r\n            <div className=\"rating\">\r\n              <span className=\"_grey-text\">elo:</span>\r\n              <span>{Math.round(trackedData.elo[0])}</span>\r\n              {renderDeltaText(trackedData.elo[0], trackedData.elo[1])}\r\n            </div>\r\n          )}\r\n          {trackedData.pp[0] && (\r\n            <div className=\"rating\">\r\n              <span className=\"_grey-text\">pp:</span>\r\n              <span>{Math.round(trackedData.pp[0])}</span>\r\n              {renderDeltaText(trackedData.pp[0], trackedData.pp[1])}\r\n            </div>\r\n          )}\r\n          <div className=\"closest-players\">\r\n            {_.map((pl) => {\r\n              return (\r\n                <div className={`closest-player ${profile.id === pl.id ? 'current-player' : ''}`}>\r\n                  <div className=\"place\">#{pl.place}</div>\r\n                  <div className=\"name\">{pl.name}</div>\r\n                  <div className=\"elo\">{pl.rating}</div>\r\n                </div>\r\n              );\r\n            }, closestPlayers)}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState, useRef, useCallback, useMemo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport lev from 'fast-levenshtein';\r\n\r\nimport './socket.scss';\r\n\r\nimport { SOCKET_SERVER_IP } from 'constants/backend';\r\n\r\nimport Popups from 'components/Shared/Popups';\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nimport { appendNewResults } from 'reducers/results';\r\nimport { fetchTopPerSong } from 'reducers/topPerSong';\r\nimport { fetchUserPreferences } from 'reducers/preferences';\r\nimport { addPopup } from 'reducers/popups';\r\n\r\nimport { useTracked, useResetTrackedObject } from './helpers';\r\n\r\nimport { PlayerCard } from './PlayerCard';\r\nimport Chart from 'components/Leaderboard/Chart';\r\nimport { TYPES } from 'constants/popups';\r\n\r\n// code\r\nconst STATE_RESET_TIMEOUT_SEC = 5 * 60 + 10; // 5 minutes 10 seconds\r\n\r\nconst topPlayersListSelector = createSelector(\r\n  (state) => state.results.profiles,\r\n  _.flow(_.values, _.orderBy('ratingRaw', 'desc'), (items) =>\r\n    items.map((it, index) => ({ place: index + 1, ..._.pick(['id', 'name', 'rating'], it) }))\r\n  )\r\n);\r\n\r\n// redux\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.topPerSong.isLoading,\r\n    songTopData: state.topPerSong.data,\r\n    error: state.topPerSong.error,\r\n    profiles: state.results.profiles,\r\n    topPlayersList: topPlayersListSelector(state),\r\n    sharedCharts: state.results.sharedCharts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopPerSong,\r\n  appendNewResults,\r\n  addPopup,\r\n  fetchUserPreferences,\r\n};\r\n\r\nfunction TrackerApp({\r\n  isLoading,\r\n  fetchTopPerSong,\r\n  fetchUserPreferences,\r\n  appendNewResults,\r\n  songTopData,\r\n  error,\r\n  profiles,\r\n  topPlayersList,\r\n  sharedCharts = {},\r\n  addPopup,\r\n}) {\r\n  // useEffect(() => {\r\n  //   addPopup({\r\n  //     type: TYPES.ACHIEVEMENT,\r\n  //     fadeIn: true,\r\n  //     fadeOut: true,\r\n  //     // persistent: true,\r\n  //     parameters: {\r\n  //       playerName: 'grumd',\r\n  //       achievementName: 'Падовый мисс',\r\n  //       progress: [0, 100],\r\n  //     },\r\n  //   });\r\n  //   addPopup({\r\n  //     type: TYPES.ACHIEVEMENT,\r\n  //     fadeIn: true,\r\n  //     fadeOut: true,\r\n  //     parameters: {\r\n  //       playerName: 'Dino',\r\n  //       achievementName: 'Мастер фингеринга',\r\n  //       progress: [33, 66],\r\n  //     },\r\n  //   });\r\n  // }, [addPopup]);\r\n  // useEffect(() => {\r\n  //   if (_.get('[0].rating', topPlayersList)) {\r\n  //     const prevList = [...topPlayersList];\r\n  //     const p = 30,\r\n  //       c = 26;\r\n  //     const currList = _.pullAt(p - 1, topPlayersList);\r\n  //     currList.splice(c - 1, 0, topPlayersList[p - 1]);\r\n  //     addPopup({\r\n  //       type: TYPES.RANK_UP,\r\n  //       fadeIn: true,\r\n  //       fadeOut: true,\r\n  //       persistent: true,\r\n  //       parameters: {\r\n  //         playerName: 'grumd',\r\n  //         place: [p, c],\r\n  //         list: [prevList, currList],\r\n  //       },\r\n  //     });\r\n  //   }\r\n  // }, [addPopup, topPlayersList]);\r\n\r\n  // Setup\r\n  const [message, setMessage] = useState('');\r\n  const [socketErrorMessage, setSocketErrorMessage] = useState('');\r\n  const [isSocketReady, setSocketReady] = useState(false);\r\n  const [isAlive, setAlive] = useState(null);\r\n  const [leftLabel, setLeftLabel] = useState(null);\r\n  const [rightLabel, setRightLabel] = useState(null);\r\n  const [leftPlayer, setLeftPlayer] = useState(null);\r\n  const [rightPlayer, setRightPlayer] = useState(null);\r\n  const [recognizedSongName, setRecognizedSongName] = useState('');\r\n  const [leftPreferences, setLeftPreferences] = useState(null);\r\n  const [rightPreferences, setRightPreferences] = useState(null);\r\n\r\n  const resultsContainerRef = useRef(null);\r\n  const leftResultRef = useRef(null);\r\n  const rightResultRef = useRef(null);\r\n\r\n  const socketRef = useRef(null);\r\n  const timeoutResetTokenRef = useRef(null);\r\n\r\n  // Get profile objects from player names\r\n  const leftProfile = useMemo(() => {\r\n    if (!leftPlayer || _.isEmpty(profiles)) return {};\r\n    return _.minBy((p) => lev.get(p.nameArcade, leftPlayer), _.values(profiles)) || {};\r\n  }, [leftPlayer, profiles]);\r\n  const rightProfile = useMemo(() => {\r\n    if (!rightPlayer || _.isEmpty(profiles)) return {};\r\n    return _.minBy((p) => lev.get(p.nameArcade, rightPlayer), _.values(profiles)) || {};\r\n  }, [rightPlayer, profiles]);\r\n\r\n  const onChangeAchievements = (playerName) => (prevAchievement, currAchievement) => {\r\n    _.keys(prevAchievement).forEach((achievementName) => {\r\n      if (prevAchievement[achievementName].progress !== currAchievement[achievementName].progress) {\r\n        addPopup({\r\n          type: TYPES.ACHIEVEMENT,\r\n          fadeIn: true,\r\n          fadeOut: true,\r\n          parameters: {\r\n            playerName,\r\n            achievementName,\r\n            progress: [\r\n              prevAchievement[achievementName].progress,\r\n              currAchievement[achievementName].progress,\r\n            ],\r\n          },\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  // Track changes in profiles\r\n  const leftTracked = {\r\n    pp: useTracked(_.get('pp.pp', leftProfile), leftProfile.name),\r\n    elo: useTracked(leftProfile.ratingRaw, leftProfile.name),\r\n    exp: useTracked(leftProfile.exp, leftProfile.name),\r\n    expRank: useTracked(leftProfile.expRank, leftProfile.name),\r\n    achievements: useTracked(\r\n      leftProfile.achievements,\r\n      leftProfile.name,\r\n      onChangeAchievements(leftProfile.name)\r\n    ),\r\n  };\r\n  const resetLeftTracked = useResetTrackedObject(leftTracked);\r\n  const rightTracked = {\r\n    pp: useTracked(_.get('pp.pp', rightProfile), rightProfile.name),\r\n    elo: useTracked(rightProfile.ratingRaw, rightProfile.name),\r\n    exp: useTracked(rightProfile.exp, rightProfile.name),\r\n    expRank: useTracked(rightProfile.expRank, rightProfile.name),\r\n    achievements: useTracked(\r\n      rightProfile.achievements,\r\n      rightProfile.name,\r\n      onChangeAchievements(rightProfile.name)\r\n    ),\r\n  };\r\n  const resetRightTracked = useResetTrackedObject(rightTracked);\r\n\r\n  // Fetch preferences when player id changes\r\n  useEffect(() => {\r\n    if (leftProfile.id) {\r\n      fetchUserPreferences(leftProfile.id).then((response) => {\r\n        setLeftPreferences(response.preferences);\r\n      });\r\n    }\r\n  }, [leftProfile.id, fetchUserPreferences]);\r\n  useEffect(() => {\r\n    if (rightProfile.id) {\r\n      fetchUserPreferences(rightProfile.id).then((response) => {\r\n        setRightPreferences(response.preferences);\r\n      });\r\n    }\r\n  }, [rightProfile.id, fetchUserPreferences]);\r\n\r\n  // Reset the page when sockets didn't receive any messages for a long time\r\n  const restartTimeout = useCallback(() => {\r\n    setAlive(true);\r\n    if (timeoutResetTokenRef.current) {\r\n      clearTimeout(timeoutResetTokenRef.current);\r\n    }\r\n    timeoutResetTokenRef.current = setTimeout(() => {\r\n      // TODO: reset page\r\n      setAlive(false);\r\n      setLeftPlayer(null);\r\n      setRightPlayer(null);\r\n      setLeftLabel(null);\r\n      setRightLabel(null);\r\n      setRecognizedSongName('');\r\n      setLeftPreferences(null);\r\n      setRightPreferences(null);\r\n    }, STATE_RESET_TIMEOUT_SEC * 1000);\r\n  }, []);\r\n\r\n  // Start websockets\r\n  useEffect(() => {\r\n    socketRef.current = new WebSocket(SOCKET_SERVER_IP);\r\n    socketRef.current.onerror = () => {\r\n      setMessage(`Cannot connect to websocket server, please reload the page`);\r\n    };\r\n    socketRef.current.onopen = (e) => {\r\n      setSocketReady(true);\r\n    };\r\n  }, []);\r\n\r\n  // Set the onmessage callback\r\n  useEffect(() => {\r\n    socketRef.current.onmessage = (event) => {\r\n      restartTimeout();\r\n      try {\r\n        const data = event && event.data && JSON.parse(event.data);\r\n        console.log(data);\r\n\r\n        if (data.type === 'result_screen') {\r\n          console.log('Resetting tracking because received result screen');\r\n          resetLeftTracked();\r\n          resetRightTracked();\r\n          const songName = data.data.track_name;\r\n          const leftLabel = _.get('left.chart_label', data.data);\r\n          const rightLabel = _.get('right.chart_label', data.data);\r\n          const leftPlayer = _.get('left.result.player_name', data.data);\r\n          const rightPlayer = _.get('right.result.player_name', data.data);\r\n          setLeftPlayer(leftPlayer);\r\n          setRightPlayer(rightPlayer);\r\n          setLeftLabel(leftLabel);\r\n          setRightLabel(rightLabel);\r\n          setRecognizedSongName(songName);\r\n          appendNewResults(data.data.gained); // Fetch results that we don't have here yet (to calculate elo)\r\n          fetchTopPerSong(songName, leftLabel, rightLabel);\r\n        } else if (data.type === 'chart_selected') {\r\n          setSocketErrorMessage(data.data.error || '');\r\n          if (data.data.leftPlayer || data.data.rightPlayer) {\r\n            setLeftPlayer(data.data.leftPlayer);\r\n            setRightPlayer(data.data.rightPlayer);\r\n          }\r\n          if (data.data.leftLabel || data.data.rightLabel) {\r\n            setLeftLabel(data.data.leftLabel);\r\n            setRightLabel(data.data.rightLabel);\r\n            if (data.data.text) {\r\n              // If we have full info, try to fetch if needed\r\n              const newSongName = data.data.text;\r\n              setRecognizedSongName(newSongName);\r\n              console.log('song name', newSongName, recognizedSongName);\r\n              if (recognizedSongName !== newSongName) {\r\n                fetchTopPerSong(newSongName, data.data.leftLabel, data.data.rightLabel);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.log('on message error', e);\r\n        setMessage(`Error: ${e.message}`);\r\n      }\r\n    };\r\n  }, [\r\n    recognizedSongName,\r\n    fetchTopPerSong,\r\n    restartTimeout,\r\n    appendNewResults,\r\n    resetLeftTracked,\r\n    resetRightTracked,\r\n  ]);\r\n\r\n  // FOR DEBUG\r\n  // useEffect(() => {\r\n  //   if (!_.isEmpty(profiles) && !leftPlayer && !rightPlayer) {\r\n  //     socketRef.current.onmessage({\r\n  //       data:\r\n  //         '{\"type\": \"chart_selected\", \"data\": {\"text\": \"Iolite Sky\", \"leftLabel\": \"D17\", \"rightLabel\": \"S16\", \"leftPlayer\": \"GRUMD\", \"rightPlayer\": \"DINO\"}}',\r\n  //     });\r\n  //   }\r\n  // }, [profiles, leftPlayer, rightPlayer]);\r\n\r\n  // Resize the results blocks to fill the most space on the page\r\n  useEffect(() => {\r\n    // return;\r\n    if (resultsContainerRef.current && leftResultRef.current) {\r\n      if (rightResultRef.current) {\r\n        // Both refs\r\n        const left = leftResultRef.current;\r\n        const right = rightResultRef.current;\r\n        const totalSize = {\r\n          w: resultsContainerRef.current.clientWidth,\r\n          h: resultsContainerRef.current.clientHeight,\r\n        };\r\n        const scaleHH = totalSize.w / (left.offsetWidth + right.offsetWidth);\r\n        const scaleHW = totalSize.h / Math.max(left.offsetHeight, right.offsetHeight);\r\n        const scaleWH = totalSize.w / Math.max(left.offsetWidth, right.offsetWidth);\r\n        const scaleWW = totalSize.h / (left.offsetHeight + right.offsetHeight);\r\n        // console.log(scaleHH, scaleHW, scaleWH, scaleWW);\r\n        if (Math.min(scaleHH, scaleHW) > Math.min(scaleWH, scaleWW)) {\r\n          resultsContainerRef.current.style.flexDirection = 'row';\r\n          resultsContainerRef.current.style.alignItems = 'center';\r\n          if (scaleHH > scaleHW) {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleHW})`;\r\n          } else {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleHH})`;\r\n          }\r\n        } else {\r\n          resultsContainerRef.current.style.flexDirection = 'column';\r\n          resultsContainerRef.current.style.alignItems = 'center';\r\n          if (scaleWH > scaleWW) {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleWW})`;\r\n          } else {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleWH})`;\r\n          }\r\n        }\r\n      } else {\r\n        // One ref\r\n        const left = leftResultRef.current;\r\n        const totalSize = {\r\n          w: resultsContainerRef.current.clientWidth,\r\n          h: resultsContainerRef.current.clientHeight,\r\n        };\r\n        const scaleW = totalSize.w / left.offsetWidth;\r\n        const scaleH = totalSize.h / left.offsetHeight;\r\n        if (scaleW < scaleH) {\r\n          resultsContainerRef.current.style.transform = `scale(${0.98 * scaleW})`;\r\n        } else {\r\n          resultsContainerRef.current.style.transform = `scale(${0.98 * scaleH})`;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  const leftChart = _.find({ chartLabel: leftLabel }, songTopData);\r\n  const rightChart = _.find({ chartLabel: rightLabel }, songTopData);\r\n  const chartsToShow = _.uniq(_.compact([leftChart, rightChart]));\r\n\r\n  return (\r\n    <div className=\"tracker-container\">\r\n      <Popups />\r\n      <div className=\"sidebar\">\r\n        <PlayerCard\r\n          player={leftPlayer}\r\n          profile={leftProfile}\r\n          label={leftLabel}\r\n          trackedData={leftTracked}\r\n          preferences={leftPreferences}\r\n          topPlayersList={topPlayersList}\r\n          isLeft\r\n          addPopup={addPopup}\r\n        />\r\n        <PlayerCard\r\n          player={rightPlayer}\r\n          profile={rightProfile}\r\n          label={rightLabel}\r\n          trackedData={rightTracked}\r\n          preferences={rightPreferences}\r\n          topPlayersList={topPlayersList}\r\n          addPopup={addPopup}\r\n        />\r\n      </div>\r\n      <div className=\"results\" ref={resultsContainerRef}>\r\n        {(error || message) && (\r\n          <div className=\"error\">\r\n            {message}\r\n            <br />\r\n            {error && error.message}\r\n          </div>\r\n        )}\r\n        {isSocketReady &&\r\n          !leftPlayer &&\r\n          !rightPlayer &&\r\n          !socketErrorMessage &&\r\n          !isLoading &&\r\n          _.isEmpty(chartsToShow) &&\r\n          (isAlive === null ? (\r\n            <div className=\"msg\">Waiting for recognizer...</div>\r\n          ) : isAlive ? (\r\n            <div className=\"msg\">Waiting for chart select...</div>\r\n          ) : (\r\n            <div className=\"offline msg\">Recognizer is offline</div>\r\n          ))}\r\n        {isSocketReady &&\r\n          (leftLabel || rightLabel) &&\r\n          !socketErrorMessage &&\r\n          !isLoading &&\r\n          _.isEmpty(chartsToShow) &&\r\n          'No results for this chart'}\r\n        {isLoading && <Loader />}\r\n        {!isLoading &&\r\n          chartsToShow.map((chart, chartIndex) => {\r\n            const leftPlayersHiddenStatus = _.omitBy(\r\n              (v) => !v,\r\n              _.getOr({}, 'playersHiddenStatus', leftPreferences)\r\n            );\r\n            const rightPlayersHiddenStatus = _.omitBy(\r\n              (v) => !v,\r\n              _.getOr({}, 'playersHiddenStatus', rightPreferences)\r\n            );\r\n\r\n            const isHiddenInBoth = Object.keys(leftPlayersHiddenStatus).reduce(\r\n              (obj, key) => ({\r\n                ...obj,\r\n                [key]: leftPlayersHiddenStatus[key] && rightPlayersHiddenStatus[key],\r\n              }),\r\n              {}\r\n            );\r\n            return (\r\n              <Chart\r\n                ref={chartIndex === 0 ? leftResultRef : rightResultRef}\r\n                playersHiddenStatus={isHiddenInBoth}\r\n                key={chart.sharedChartId}\r\n                chart={chart}\r\n                leftProfile={leftProfile}\r\n                rightProfile={rightProfile}\r\n                isSocketView\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TrackerApp);\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TRACKLIST/LOADING`;\r\nconst SUCCESS = `TRACKLIST/SUCCESS`;\r\nconst ERROR = `TRACKLIST/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTracklist = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/tracklist/stats/XX` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport localForage from 'localforage';\r\nimport ReactModal from 'react-modal';\r\nimport _ from 'lodash/fp';\r\n\r\nimport 'react-responsive-ui/style.css';\r\nimport './App.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\nimport { CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nimport SongsTop from 'components/SongsTop/SongsTop';\r\nimport Leaderboard from 'components/Leaderboard/Leaderboard';\r\nimport Ranking from 'components/Ranking/Ranking';\r\nimport Profile from 'components/Profile/Profile';\r\nimport ProfileCompare from 'components/ProfileCompare/ProfileCompare';\r\nimport TopBar from 'components/Shared/TopBar/TopBar';\r\nimport Loader from 'components/Shared/Loader';\r\nimport LoginScreen from 'components/LoginScreen/LoginScreen';\r\nimport SocketTracker from 'components/SocketTracker/SocketTracker';\r\n\r\nimport { fetchResults, setFilter } from 'reducers/results';\r\nimport { fetchTracklist } from 'reducers/tracklist';\r\nimport { fetchUser } from 'reducers/user';\r\nimport { fetchPreferences } from 'reducers/preferences';\r\n\r\nReactModal.setAppElement('#root');\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userData: state.user.data,\r\n    isLoading: state.user.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setFilter,\r\n  fetchResults,\r\n  fetchTracklist,\r\n  fetchUser,\r\n  fetchPreferences,\r\n};\r\n\r\nfunction App({\r\n  fetchUser,\r\n  fetchTracklist,\r\n  fetchResults,\r\n  fetchPreferences,\r\n  setFilter,\r\n  userData,\r\n  isLoading,\r\n}) {\r\n  useEffect(() => {\r\n    if (!process.env.REACT_APP_SOCKET) {\r\n      fetchUser();\r\n      localForage\r\n        .getItem('filter')\r\n        .then((filter) => {\r\n          if (filter) {\r\n            setFilter({\r\n              ..._.omit('song', filter),\r\n              chartRange: filter.chartRange && {\r\n                ...filter.chartRange,\r\n                range: _.every(\r\n                  (r) => r >= CHART_MIN_MAX[0] && r <= CHART_MIN_MAX[1],\r\n                  filter.chartRange.range\r\n                )\r\n                  ? filter.chartRange.range\r\n                  : CHART_MIN_MAX,\r\n              },\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => console.error('Cannot get filter from local storage', error));\r\n    }\r\n  }, [fetchUser, fetchTracklist, fetchResults, setFilter]);\r\n\r\n  useEffect(() => {\r\n    if (!process.env.REACT_APP_SOCKET && userData && userData.player) {\r\n      Promise.all([fetchTracklist(), fetchPreferences()]).then(() => {\r\n        fetchResults();\r\n      });\r\n    }\r\n  }, [userData, fetchPreferences, fetchResults, fetchTracklist]);\r\n\r\n  useEffect(() => {\r\n    if (process.env.REACT_APP_SOCKET) {\r\n      fetchTracklist().then(() => {\r\n        fetchResults();\r\n      });\r\n    }\r\n  }, [fetchResults, fetchTracklist]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <Loader />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (process.env.REACT_APP_SOCKET) {\r\n    return <SocketTracker />;\r\n  }\r\n\r\n  if (!userData || !userData.player) {\r\n    return <LoginScreen />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TopBar />\r\n      <Route exact path=\"/\" render={() => <Redirect to={routes.leaderboard.path} />} />\r\n      <Route exact path={routes.leaderboard.path} component={Leaderboard} />\r\n      <Route exact path={routes.leaderboard.sharedChart.path} component={Leaderboard} />\r\n      <Route path={routes.ranking.path} component={Ranking} />\r\n      <Route path={routes.profile.path}>\r\n        <Switch>\r\n          <Route path={routes.profile.path} exact component={Profile} />\r\n          <Route path={routes.profile.compare.path} exact component={ProfileCompare} />\r\n        </Switch>\r\n      </Route>\r\n      <Route path={routes.songs.path} component={SongsTop} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { combineReducers } from 'redux';\r\n\r\nimport mostPlayed from './mostPlayed';\r\nimport mostPlayedMonth from './mostPlayedMonth';\r\nimport leastPlayed from './leastPlayed';\r\n\r\nexport default combineReducers({\r\n  mostPlayed,\r\n  mostPlayedMonth,\r\n  leastPlayed,\r\n});\r\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport _ from 'lodash/fp';\r\n\r\nimport tracklist from 'reducers/tracklist';\r\nimport trackStats from 'reducers/trackStats';\r\nimport popups from 'reducers/popups';\r\nimport profiles from 'reducers/profiles';\r\nimport preferences from 'reducers/preferences';\r\nimport presets from 'reducers/presets';\r\nimport results from 'reducers/results';\r\nimport user from 'reducers/user';\r\nimport login from 'reducers/login';\r\nimport topPerSong from 'reducers/topPerSong';\r\n\r\nconst rootReducer = combineReducers({\r\n  topPerSong,\r\n  login,\r\n  popups,\r\n  preferences,\r\n  presets,\r\n  profiles,\r\n  results,\r\n  trackStats,\r\n  tracklist,\r\n  user,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && process.env.NODE_ENV === 'development'\r\n    ? compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__({\r\n          stateSanitizer: (state) => ({\r\n            ...state,\r\n            results: {\r\n              ...state.results,\r\n              data: `big array, ${_.size(state.results.data)}`,\r\n              results: `big array, ${_.size(state.results.results)}`,\r\n              sharedCharts: 'big object',\r\n              originalData: 'big object',\r\n              resultInfo: 'big object',\r\n              profiles: _.mapValues(\r\n                (pl) => ({\r\n                  ...pl,\r\n                  resultsByGrade: '...',\r\n                  resultsByLevel: '...',\r\n                  rankingHistory: '...',\r\n                  ratingHistory: '...',\r\n                  pp: {\r\n                    pp: pl.pp && pl.pp.pp,\r\n                    scores: '...',\r\n                  },\r\n                }),\r\n                state.results.profiles\r\n              ),\r\n            },\r\n          }),\r\n        })\r\n      )\r\n    : applyMiddleware(thunk)\r\n);\r\n","import 'promise-polyfill';\r\nimport 'whatwg-fetch';\r\nimport 'utils/polyfills';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.scss';\r\nimport App from 'components/App';\r\n\r\nimport { store } from 'reducers';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}