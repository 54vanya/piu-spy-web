{"version":3,"sources":["constants/routes.js","components/Shared/Loader/index.js","components/Shared/Input/Input.js","components/Shared/Toggle/Toggle.js","components/Shared/CollapsibleBar/index.js","components/Shared/Overlay/Overlay.js","components/Shared/ToggleButton/ToggleButton.js","constants/leaderboard.js","components/Leaderboard/ChartFilter.js","constants/env.js","utils/fetch.js","reducers/top.js","constants/backend.js","utils/leaderboards.js","utils/colors.js","components/Leaderboard/selectors.js","components/Leaderboard/Leaderboard.js","components/Ranking/RankingList.js","components/Ranking/RankingFaq.js","components/Ranking/Ranking.js","components/Shared/TopBar/TopBar.js","components/App.js","reducers/index.js","index.js","utils/polyfills.js"],"names":["routes","path","faq","Loader","className","width","height","viewBox","xmlns","fill","cx","cy","r","attributeName","from","to","begin","dur","values","calcMode","repeatCount","fillOpacity","Input","props","state","value","_","isNil","defaultValue","bindAll","prevProps","this","setState","e","newValue","target","onChange","type","numericValue","Number","min","max","onBlur","omit","classNames","handleBlur","onInput","handleChange","React","Component","defaultProps","noop","Toggle","checked","id","uniqueId","htmlFor","children","CollapsibleBar","open","defaultOpen","title","onClick","PureComponent","POPPER_MODIFIERS","preventOverflow","enabled","padding","boundariesElement","PLACEMENT_ARROW_MAPPING","right","left","top","bottom","getArrowPlacement","placement","split","Overlay","isVisible","containerItemRef","createRef","renderPopper","bind","toggleOverlayVisibility","event","closest","hideOverlay","ref","style","arrowProps","outOfBoundaries","scheduleUpdate","hideWhenOutOfBounds","data-placement","overlayClassName","overlayItem","Fragment","ReactDOM","createPortal","container","document","body","modifiers","referenceElement","current","defaultTypes","listensToClickOutside","ToggleButton","active","onToggle","text","SORT","DEFAULT","PROTAGONIST","RANK_ASC","RANK_DESC","CHART_MIN_MAX","ChartFilter","filterValue","range","getOr","buttonText","t","step","renderTrack","onMouseDown","onTouchStart","display","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","justifyContent","alignItems","boxShadow","Math","newMin","newMax","localStorage","window","debugOn","setItem","debugOff","removeItem","DEBUG","getItem","fetchJson","a","url","fetch","response","status","json","data","Error","console","error","Promise","reject","LOADING","SUCCESS","ERROR","SET_FILTER","RESET_FILTER","RANKING_CHANGE_SET","defaultFilter","showRank","initialState","isLoading","filter","transformBackendData","flow","get","map","item","song","track","chartLabel","chart_label","chartLevel","slice","chartType","mix","results","res","index","perfects","sqrt","toInteger","acc","floor","greats","goods","misses","bads","nickname","date","gained","dateObject","Date","grade","isExactDate","exact_gain_date","score","perfect","great","good","bad","miss","combo","max_combo","mods","mods_list","isRank","rank_mode","accuracy","latestScoreDate","reduce","latest","hasRankScore","some","orderBy","defaultInfo","count","battleCount","countAcc","rating","grades","F","D","C","B","A","S","SS","SSS","totalScore","sumAccuracy","playerInfo","battles","forEach","validResults","includes","push","cloneDeep","replace","isInteger","isFullScore","maxScore","maxCombo","getMaxScore","scoreIndex","length","enemyScore","sortBy","s1","s2","getTime","scoreMultiplier","startingRating","S1","S2","r1","r2","R1","R2","E1","E2","kRatingDiff","abs","kRating1","kRating2","maxK1","maxK2","K1","K2","dr1","dr2","ratingDiff","ratingDiffLast","log","toFixed","arr","Object","keys","key","name","round","ranking","remove","i","localForage","fetchTopScores","dispatch","calculateRankingChanges","setFilter","getListOfNames","getState","all","lastChangedRanking","lastFetchedRanking","listNow","listLastFetched","listLastChanged","isEqual","listPrev","warn","TimeAgo","addLocale","ru","timeAgo","timeStyle","flavour","gradation","convenient","units","tooltipFormatterForBests","flexDirection","toLocaleDateString","nowDate","colorsArray","playersSelector","createSelector","flatMap","uniq","toLower","label","filteredDataSelector","names","players","namesOr","playersOr","namesNot","playersNot","sortingType","protagonist","excludeAntagonists","defaultSorting","protagonistSorting","row","protIndex","findIndex","protScore","enemies","take","uniqBy","distanceFromProtagonist","dist","enemy","getScoreSorting","direction","Infinity","find","sortingFunctions","compact","chartRange","items","rows","filterCharts","showOnlyRank","showRankAndNorank","occuredNames","alreadyOccured","rowNames","every","size","matchSorter","topPlace","occuredNicknames","isSecondOccurenceInResults","sortingOptions","mapDispatchToProps","resetFilter","Leaderboard","showItemsCount","curry","onRefresh","placeholder","disabled","closeMenuOnSelect","classNamePrefix","isMulti","options","clearable","filteredData","canShowMore","visibleData","uniqueSelectedNames","message","renderSimpleSearch","renderFilters","renderSortings","isEmpty","chart","chartIndex","single","href","rel","nameIndex","indexOf","empty","fontWeight","color","vj","content","tooltipClassName","numeral","format","src","process","alt","strTimeAgo","dayDiff","moment","startOf","diff","getTimeAgo","connect","getGradeImg","RankingList","player","playerIndex","change","isString","RankingFaq","Ranking","exact","render","component","withRouter","TopBar","App","rootReducer","combineReducers","action","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","thunk","stateSanitizer","then","catch","getElementById","isNaN","sign","x","Array","prototype","defineProperty","predicate","TypeError","o","len","thisArg","arguments","k","kValue","call","configurable","writable"],"mappings":"kVAAaA,G,MACE,CACXC,KAAK,iBAFID,EAIF,CACPC,KAAK,WACLC,IAAK,CACHD,KAAM,iB,6FCHG,SAASE,IACtB,OACE,yBAAKC,UAAU,UACb,yBACEC,MAAM,KACNC,OAAO,KACPC,QAAQ,aACRC,MAAM,6BACNC,KAAK,QAEL,4BAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,MACxB,6BACEC,cAAc,IACdC,KAAK,KACLC,GAAG,KACHC,MAAM,KACNC,IAAI,OACJC,OAAO,UACPC,SAAS,SACTC,YAAY,eAEd,6BACEP,cAAc,eACdC,KAAK,IACLC,GAAG,IACHC,MAAM,KACNC,IAAI,OACJC,OAAO,SACPC,SAAS,SACTC,YAAY,gBAGhB,4BAAQV,GAAG,KAAKC,GAAG,KAAKC,EAAE,IAAIS,YAAY,OACxC,6BACER,cAAc,IACdC,KAAK,IACLC,GAAG,IACHC,MAAM,KACNC,IAAI,OACJC,OAAO,SACPC,SAAS,SACTC,YAAY,eAEd,6BACEP,cAAc,eACdC,KAAK,MACLC,GAAG,MACHC,MAAM,KACNC,IAAI,OACJC,OAAO,UACPC,SAAS,SACTC,YAAY,gBAGhB,4BAAQV,GAAG,MAAMC,GAAG,KAAKC,EAAE,MACzB,6BACEC,cAAc,IACdC,KAAK,KACLC,GAAG,KACHC,MAAM,KACNC,IAAI,OACJC,OAAO,UACPC,SAAS,SACTC,YAAY,eAEd,6BACEP,cAAc,eACdC,KAAK,IACLC,GAAG,IACHC,MAAM,KACNC,IAAI,OACJC,OAAO,SACPC,SAAS,SACTC,YAAY,kB,WCrEHE,E,YAkBnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,OAASC,IAAEC,MAAMJ,EAAME,OAAuBF,EAAMK,aAApBL,EAAME,QAA+B,IAEvEC,IAAEG,QAAQ,CAAC,eAAgB,cAA3B,gBALiB,E,gFAQAC,GACbA,EAAUL,QAAUM,KAAKR,MAAME,OACjCM,KAAKC,SAAS,CAAEP,MAAOM,KAAKR,MAAME,U,mCAIzBQ,GAAI,IAAD,OACRC,EAAWD,EAAEE,OAAOV,MAC1BM,KAAKC,SAAS,CAAEP,MAAOS,GAAY,kBAAM,EAAKX,MAAMa,SAASF,O,iCAGpDD,GAAI,IACLI,EAASN,KAAKR,MAAdc,KACAZ,EAAUM,KAAKP,MAAfC,MACR,GAAa,WAATY,EAAmB,CACrB,IAAMC,EAAeC,OAAOd,GACxBa,GAAgBC,OAAON,EAAEE,OAAOK,MAAQF,GAAgBC,OAAON,EAAEE,OAAOM,KAC1EV,KAAKR,MAAMmB,OAAOJ,EAAcL,IAEhCF,KAAKC,SAAS,CAAEP,MAAOM,KAAKR,MAAME,QAClCM,KAAKR,MAAMmB,OAAOX,KAAKR,MAAME,MAAOQ,O,+BAKhC,IACA7B,EAAc2B,KAAKR,MAAnBnB,UAMR,OACE,2CACMsB,IAAEiB,KAAK,CAAC,eAAgB,YAAaZ,KAAKR,OADhD,CAEEnB,UAAWwC,IAAWxC,EAAW,cACjCqB,MAAOM,KAAKP,MAAMC,MAClBiB,OAAQX,KAAKc,WACbC,QAASf,KAAKgB,oB,GAhEaC,IAAMC,WAApB3B,EAWZ4B,aAAe,CACpBzB,MAAO,KACPY,KAAM,OACND,SAAUV,IAAEyB,KACZT,OAAQhB,IAAEyB,M,UCjBOC,E,YACnB,aAAe,IAAD,8BACZ,+CAIFhB,SAAW,SAAAH,GACT,EAAKV,MAAMa,SAASH,EAAEE,OAAOkB,UAJ7B,EAAKC,GAAK5B,IAAE6B,WAFA,E,sEAUZ,OACE,yBAAKnD,UAAU,mBACb,2BACEiC,KAAK,WACLjC,UAAU,qBACVkD,GAAIvB,KAAKuB,GACTlB,SAAUL,KAAKK,SACfiB,QAAStB,KAAKR,MAAM8B,UAEtB,2BAAOG,QAASzB,KAAKuB,GAAIlD,UAAU,UACjC,gCAEF,2BAAOoD,QAASzB,KAAKuB,GAAIlD,UAAU,cAChC2B,KAAKR,MAAMkC,e,GAxBcT,IAAMC,WCCrBS,G,kBAQnB,WAAYnC,GAAQ,IAAD,8BACjB,+CACKC,MAAQ,CAAEmC,KAAMpC,EAAMqC,cAAe,GAFzB,E,sEAKT,IAAD,SACgC7B,KAAKR,MAApCkC,EADD,EACCA,SAAUI,EADX,EACWA,MAAOzD,EADlB,EACkBA,UACjBuD,EAAS5B,KAAKP,MAAdmC,KAER,OACE,yBAAKvD,UAAWwC,IAAW,kBAAmBxC,EAAW,CAAEuD,UACzD,yBAAKvD,UAAU,SAAS0D,QAAS,kBAAM,EAAK9B,SAAS,SAAAR,GAAK,MAAK,CAAEmC,MAAOnC,EAAMmC,UAC5E,yBAAKvD,UAAU,mBACb,kBAAC,IAAD,OAEF,yBAAKA,UAAU,SAASyD,IAEzBJ,GAAY,yBAAKrD,UAAU,wBAAwBqD,Q,GAzBhBM,kB,wBCEtCC,G,MAAmB,CACvBC,gBAAiB,CACfC,SAAS,EACTC,QAAS,GACTC,kBAAmB,cAIjBC,EAA0B,CAC9BC,MAAO,OACPC,KAAM,QACNC,IAAK,SACLC,OAAQ,OAGJC,EAAoB,SAAAC,GACxB,OAAOA,GAAaN,EAAwBM,EAAUC,MAAM,KAAK,KAG7DC,E,YAWJ,aAAe,IAAD,8BACZ,+CACKrD,MAAQ,CACXsD,WAAW,GAEb,EAAKC,iBAAmB/B,IAAMgC,YAC9B,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,wBAA0B,EAAKA,wBAAwBD,KAA7B,gBAPnB,E,2EAWZnD,KAAKC,SAAS,CACZ8C,WAAW,M,gDAKb/C,KAAKC,SAAS,CACZ8C,WAAY/C,KAAKP,MAAMsD,c,yCAIRM,GACKA,GAASA,EAAMjD,OAAOkD,QAAQ,0BAGlDtD,KAAKuD,gB,sCAI6E,IAAvEC,EAAsE,EAAtEA,IAAKC,EAAiE,EAAjEA,MAAOb,EAA0D,EAA1DA,UAAWc,EAA+C,EAA/CA,WAA4BC,GAAmB,EAAnCC,eAAmC,EAAnBD,iBAAmB,EACzC3D,KAAKR,MAAvCkC,EAD2E,EAC3EA,SAAUmC,EADiE,EACjEA,oBAClB,OACE,yBACEL,IAAKA,EACLC,MAAOA,EACPK,iBAAgBlB,EAChBvE,UAAWwC,IACT,uBADmB,gBAEV8B,EAAkBC,IAC3B5C,KAAKR,MAAMuE,iBACX,CAAE,gBAAiBJ,GAAmBE,KAGxC,yBAAKxF,UAAU,eACb,yBAAKA,UAAU,QAAQmF,IAAKE,EAAWF,IAAKC,MAAOC,EAAWD,SAEhE,yBACEpF,UAAU,wBAGTqD,M,+BAMC,IAAD,EAC4B1B,KAAKR,MAAhCoD,EADD,EACCA,UAAWoB,EADZ,EACYA,YACXjB,EAAc/C,KAAKP,MAAnBsD,UACR,OACE,kBAAC,IAAMkB,SAAP,KACE,yBACE5F,UAAU,eACVmF,IAAKxD,KAAKgD,iBACVjB,QAAS/B,KAAKoD,yBAEbY,GAEFjB,GACCmB,IAASC,aACP,kBAAC,IAAD,CACEC,UAAWC,SAASC,KACpBC,UAAWtC,EACXW,UAAWA,EACX4B,iBAAkBxE,KAAKgD,iBAAiByB,SAEvCzE,KAAKkD,cAERmB,SAASC,W,GA1FCrD,IAAMe,eAAtBc,EAOG4B,aAAe,CACpB9B,UAAW,UAyFA+B,kBAAsB7B,GCvHhB8B,G,uLAOT,IAAD,EAC4B5E,KAAKR,MAAhCqF,EADD,EACCA,OAAQC,EADT,EACSA,SAAUC,EADnB,EACmBA,KAC1B,OACE,yBACE1G,UAAWwC,IAAW,gBAAiB,CAAEgE,OAAQA,IACjD9C,QAAS,kBAAM+C,GAAUD,KAExBE,O,GAdiC9D,IAAMe,gBCNnCgD,EAAO,CAClBC,QAAS,UACTC,YAAa,cACbC,SAAU,UACVC,UAAW,YAGAC,EAAgB,CAAC,EAAG,I,mjBCIlB,SAASC,EAAT,GAAiD,IAA1BC,EAAyB,EAAzBA,YAAalF,EAAY,EAAZA,SAC3CmF,EAAQ7F,IAAE8F,MAAMJ,EAAe,QAASE,GACxCjF,EAAOX,IAAE8F,MAAM,KAAM,OAAQF,GAC/BG,EAAa,4EACjB,GAAIH,EAAa,CACf,IAAMI,EAAIrF,GAAQ,GAElBoF,EAAa,oCADbA,EAAaF,EAAM,KAAOA,EAAM,GAAnB,UAA2BG,GAA3B,OAA+BH,EAAM,IAArC,UAA+CG,GAA/C,OAAmDH,EAAM,GAAzD,cAAiEG,GAAjE,OAAqEH,EAAM,KAI1F,OACE,6BACE,kBAAC,EAAD,CACEzB,iBAAiB,4BACjBC,YACE,4BAAQ3F,UAAU,4CAA4CqH,IAGhE,yBAAKrH,UAAU,uBACb,yBAAKA,UAAU,WACb,kBAAC,EAAD,CACE0G,KAAK,IACLF,QAASvE,GAAiB,MAATA,EACjBwE,SAAU,SAAAD,GACRxE,EAAS,CACPmF,QACAlF,KAAOuE,EAAe,KAAN,SAItB,kBAAC,EAAD,CACEE,KAAK,IACLF,QAASvE,GAAiB,MAATA,EACjBwE,SAAU,SAAAD,GACRxE,EAAS,CACPmF,QACAlF,KAAOuE,EAAe,KAAN,UAKxB,kBAAC,QAAD,CACE1F,OAAQqG,EACRI,KAAM,EACNnF,IAAK4E,EAAc,GACnB3E,IAAK2E,EAAc,GACnBhF,SAAU,SAAAxB,GAAC,OAAIwB,EAAS,CAAEC,OAAMkF,MAAO3G,KACvCgH,YAAa,gBAAGrG,EAAH,EAAGA,MAAOkC,EAAV,EAAUA,SAAV,OACX,yBACEoE,YAAatG,EAAMsG,YACnBC,aAAcvG,EAAMuG,aACpBtC,MAAK,KACAjE,EAAMiE,MADN,CAEHlF,OAAQ,OACRyH,QAAS,OACT1H,MAAO,UAGT,yBACEkF,IAAKhE,EAAMgE,IACXC,MAAO,CACLlF,OAAQ,MACRD,MAAO,OACP2H,aAAc,MACdC,WAAYC,6BAAmB,CAC7BhH,OAAQqG,EACRY,OAAQ,CAAC,OAAQ,UAAW,QAC5B3F,IAAK4E,EAAc,GACnB3E,IAAK2E,EAAc,KAErBgB,UAAW,WAGZ3E,KAIP4E,YAAa,gBAAG9G,EAAH,EAAGA,MAAO+G,EAAV,EAAUA,UAAV,OACX,yCACM/G,EADN,CAEEiE,MAAK,KACAjE,EAAMiE,MADN,CAEHlF,OAAQ,OACRD,MAAO,OACP2H,aAAc,MACdO,gBAAiB,OACjBR,QAAS,OACTS,eAAgB,SAChBC,WAAY,SACZC,UAAW,uBAGb,yBACElD,MAAO,CACLlF,OAAQ,MACRD,MAAO,MACP2H,aAAc,MACdO,gBAAiBD,EAAY,UAAY,cAMnD,yBAAKlI,UAAU,UACb,4BACEA,UAAU,sBACV0D,QAAS,kBACP1B,EAAS,CACPC,OACAkF,MAAO,CAACoB,KAAKlG,IAAI8E,EAAM,GAAK,EAAGH,EAAc,IAAKG,EAAM,QAI5D,kBAAC,IAAD,OAEF,kBAAC,EAAD,CACElF,KAAK,SACLjC,UAAU,eACVoC,IAAK4E,EAAc,GACnB3E,IAAKkG,KAAKnG,IAAI4E,EAAc,GAAIG,EAAM,IACtC9F,MAAO8F,EAAM,GACb7E,OAAQ,SAAAjB,GACNW,EAAS,CAAEC,OAAMkF,MAAO,CAAC9F,EAAO8F,EAAM,SAG1C,4BACEnH,UAAU,sBACV0D,QAAS,WACP,IAAM8E,EAASD,KAAKnG,IAAI+E,EAAM,GAAK,EAAGH,EAAc,IACpDhF,EAAS,CACPC,OACAkF,MAAO,CAACqB,EAAQrB,EAAM,GAAKqB,EAASA,EAASrB,EAAM,QAIvD,kBAAC,IAAD,OAEF,yBAAKnH,UAAU,eACf,4BACEA,UAAU,sBACV0D,QAAS,WACP,IAAM+E,EAASF,KAAKlG,IAAI8E,EAAM,GAAK,EAAGH,EAAc,IACpDhF,EAAS,CACPC,OACAkF,MAAO,CAACA,EAAM,GAAKsB,EAASA,EAAStB,EAAM,GAAIsB,OAInD,kBAAC,IAAD,OAEF,kBAAC,EAAD,CACExG,KAAK,SACLjC,UAAU,eACVoC,IAAKmG,KAAKlG,IAAI2E,EAAc,GAAIG,EAAM,IACtC9E,IAAK2E,EAAc,GACnB3F,MAAO8F,EAAM,GACb7E,OAAQ,SAAAjB,GAAK,OAAIW,EAAS,CAAEC,OAAMkF,MAAO,CAACA,EAAM,GAAI9F,QAEtD,4BACErB,UAAU,sBACV0D,QAAS,kBACP1B,EAAS,CACPC,OACAkF,MAAO,CAACA,EAAM,GAAIoB,KAAKnG,IAAI+E,EAAM,GAAK,EAAGH,EAAc,SAI3D,kBAAC,IAAD,WClLV0B,eACFC,OAAOC,QAAU,WACfF,aAAaG,QAAQ,QAAS,IAEhCF,OAAOG,SAAW,WAChBJ,aAAaK,WAAW,WAIrB,IAAMC,EAAQN,cAAgBA,aAAaO,QAAQ,S,kCCT7CC,GAAS,sCAAG,iCAAAC,EAAA,4DAASC,EAAT,EAASA,IAAT,kBAEEC,MAAMD,GAFR,aAEfE,EAFe,QAGRC,QAAU,KAAOD,EAASC,OAAS,KAH3B,iCAIAD,EAASE,OAJT,cAIbC,EAJa,yBAKZA,GALY,cAObC,MAAM,eAAiBJ,EAASC,QAPnB,iEAUrBI,QAAQC,MAAR,MAVqB,kBAWdC,QAAQC,OAAR,OAXc,wDAAH,sD,ujBCQtB,IAAMC,GAAO,cACPC,GAAO,cACPC,GAAK,YACLC,GAAU,iBACVC,GAAY,mBACZC,GAAkB,yBA0BXC,GAAgB,CAAEC,UAAU,GAEnCC,GAAe,CACnBC,WAAW,EACXf,KAAM,GACNgB,OAAQJ,IAGJK,GAAuBpJ,IAAEqJ,KAC7BrJ,IAAEsJ,IAAI,OACNtJ,IAAER,OACFQ,IAAEuJ,IAAI,SAAAC,GAAI,MAAK,CACbC,KAAMD,EAAKE,MACXC,WAAYH,EAAKI,YACjBC,WAAYL,EAAKI,YAAYE,MAAM,GACnCC,UAAWP,EAAKI,YAAYE,MAAM,EAAG,GACrCE,IAAKR,EAAKQ,IACVC,QAAST,EAAKS,QAAQV,IAAI,SAACW,EAAKC,GAC9B,IAAMC,EAAYnD,KAAKoD,KAAKH,EAAIE,UAAYpK,IAAEsK,UAAUd,EAAKI,YAAYE,MAAM,IAAO,EAChFS,EAAMH,EACRnD,KAAKuD,OACU,IAAXJ,EAA8B,GAAbF,EAAIO,OAA0B,GAAZP,EAAIQ,OAA2B,GAAdR,EAAIS,SACvDP,EAAWF,EAAIO,OAASP,EAAIQ,MAAQR,EAAIU,KAAOV,EAAIS,QACpD,KACA,IACJ,KACJ,MAAO,CACLE,SAAUX,EAAIW,SACdC,KAAMZ,EAAIa,OACVC,WAAY,IAAIC,KAAKf,EAAIa,QACzBG,MAAOhB,EAAIgB,MACXC,cAAejB,EAAIkB,gBACnBC,MAAOnB,EAAImB,MACXC,QAASpB,EAAIE,SACbmB,MAAOrB,EAAIO,OACXe,KAAMtB,EAAIQ,MACVe,IAAKvB,EAAIU,KACTc,KAAMxB,EAAIS,OACVgB,MAAOzB,EAAI0B,UACXC,KAAM3B,EAAI4B,UACVC,SAAU7B,EAAI8B,UACdC,SAAU1B,EAAM,EAAI,EAAIA,QAI9BvK,IAAEuJ,IAAI,SAAAE,GACJ,OAAO,MACFA,EADL,CAEEyC,gBAAiBzC,EAAKQ,QAAQkC,OAC5B,SAACC,EAAQtH,GAAT,OAAsBA,EAAQgG,KAAOsB,EAAStH,EAAQgG,KAAOsB,GAC7D3C,EAAKQ,QAAQ,GAAGa,MAElBb,QAASR,EAAKQ,QAAQV,IAAI,SAAAW,GAAG,aACxBA,EADwB,CAE3BmC,aAAcrM,IAAEsM,KAAK,CAAEzB,SAAUX,EAAIW,SAAUkB,QAAQ,GAAQtC,EAAKQ,iBAI1EjK,IAAEuM,QAAQ,CAAC,kBAAmB,OAAQ,cAAe,CAAC,OAAQ,MAAO,SACrE,SAAApE,GACE,IAAMqE,EAAc,CAClBC,MAAO,EACPC,YAAa,EACbC,SAAU,EACVC,OAAQ,IACRC,OAAQ,CAAEC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,GAAI,EAAGC,IAAK,GAC1DC,WAAY,CAAEH,EAAG,EAAGJ,EAAG,GACvBQ,YAAa,GAETC,EAAa,GACbC,EAAU,GAChBtF,EAAKuF,QAAQ,SAAAjE,GACX,IAAMkE,EAAe,GACrB3N,IAAEuM,QAAQ,CAAC,SAAU,CAAC,QAAS9C,EAAKQ,SAASyD,QAAQ,SAAArC,GAC9CA,EAAMR,SAAS+C,SAAS,SAC3BD,EAAaE,KAAKxC,GAEbmC,EAAWnC,EAAMR,YACpB2C,EAAWnC,EAAMR,UAAY7K,IAAE8N,UAAUtB,IAG3CgB,EAAWnC,EAAMR,UAAU4B,QACvBpB,EAAMY,WACRuB,EAAWnC,EAAMR,UAAU8B,WAC3Ba,EAAWnC,EAAMR,UAAU0C,aAAelC,EAAMY,UAElDuB,EAAWnC,EAAMR,UAAUyC,WAAW7D,EAAKM,YAAcsB,EAAMA,MAC/DmC,EAAWnC,EAAMR,UAAUgC,OAAOxB,EAAMH,MAAM6C,QAAQ,IAAK,QA/GjD,SAAA1C,GAClB,OACErL,IAAEgO,UAAU3C,EAAMC,UAClBtL,IAAEgO,UAAU3C,EAAME,QAClBvL,IAAEgO,UAAU3C,EAAMG,OAClBxL,IAAEgO,UAAU3C,EAAMI,MAClBzL,IAAEgO,UAAU3C,EAAMK,OAClB1L,IAAEgO,UAAU3C,EAAMA,OA0GV4C,CAAY5C,KACd5B,EAAKyE,SAvGK,SAAC7C,EAAO5B,GAC1B,IAAM0E,EAAW9C,EAAMC,QAAUD,EAAME,MAAQF,EAAMG,KAAOH,EAAMI,IAAMJ,EAAMK,KAC1EwC,EAAsB,IAAXC,EAAoC,KAAjBA,EAAW,IAQ7C,OAPI1E,EAAKI,WAAa,KACpBqE,GAAYzE,EAAKI,WAAa,IAET,MAAnBJ,EAAKM,YACPmE,GAAY,KAEdA,GAAY,IA8FYE,CAAY/C,EAAO5B,MAIvCkE,EAAaD,QAAQ,SAACrC,EAAOgD,IACPV,EAAaW,OAAS,EAAIX,EAAa7D,MAAMuE,EAAa,GAAK,IAEvEX,QAAQ,SAAAa,GACdlD,EAAMU,SAAWwC,EAAWxC,QAAUV,EAAMR,WAAa0D,EAAW1D,UACtE4C,EAAQI,KAAK,CAACxC,EAAOkD,EAAY9E,UAKzCzJ,IAAEqJ,KAAK,CAELrJ,IAAEwO,OAAO,oCAAEC,EAAF,KAAMC,EAAN,YAAczH,KAAKlG,IAAI0N,EAAGzD,WAAW2D,UAAWD,EAAG1D,WAAW2D,aACvE3O,IAAE0N,QAAQ,YAAgC,IAAD,oBAA7BrC,EAA6B,KAAtBkD,EAAsB,KAAV9E,EAAU,KAClC+D,EAAWe,EAAW1D,YACzB2C,EAAWe,EAAW1D,UAAY7K,IAAE8N,UAAUtB,IAGhD,IAAMoC,EAAkBvD,EAAMU,OAAS,IAAM,EACzCmC,EAAW,KACXzE,EAAKyE,WACPA,EAAWzE,EAAKyE,SAAWU,EAEzB3H,KAAKlG,IAAImN,EAAU7C,EAAMA,MAAOkD,EAAWlD,SAAW6C,GACrD7C,EAAMU,QACLV,EAAMF,aAAgBoD,EAAWpD,cAEnC+C,GAAY,KAIVjH,KAAKlG,IAAImN,EAAU7C,EAAMA,MAAOkD,EAAWlD,SAAW6C,IAExDA,EAAWjH,KAAKlG,IAAL,MAAAkG,KAAI,YAAQjH,IAAEuJ,IAAI,QAASE,EAAKQ,aAK/CoB,EAAMwD,eAAiBrB,EAAWnC,EAAMR,UAAU+B,OAClD2B,EAAWM,eAAiBrB,EAAWe,EAAW1D,UAAU+B,OAE5DY,EAAWnC,EAAMR,UAAU6B,cAC3Bc,EAAWe,EAAW1D,UAAU6B,cAIhC,IAkBIoC,EAAIC,EAlBFC,EAAKxB,EAAWnC,EAAMR,UAAU+B,OAChCqC,EAAKzB,EAAWe,EAAW1D,UAAU+B,OACrCsC,EAAE,SAAG,GAAOF,EAAK,KACjBG,EAAE,SAAG,GAAOF,EAAK,KACjBG,EAAKF,GAAMA,EAAKC,GAChBE,EAAKF,GAAMD,EAAKC,GASlBjC,EAAI7B,EAAMA,MACV4B,EAAIsB,EAAWlD,MAIf6B,IAAMD,EACR6B,EAAKC,EAAK,GACDb,GAAkB,IAANhB,GAAiB,IAAND,GAGhC6B,EAA2B,IAD3B7B,EAAIiB,EAAWjB,EAAI,KADnBC,EAAIgB,EAAWhB,EAAI,GAEJD,GAAK,IAAW,GAC/B8B,EAA2B,GAArB7B,GAAKA,EAAID,GAAK,IAAW,IAI/B8B,EAAK,GADLD,EAAK5B,EAAID,EAAI,EAAIA,EAAIC,EAAI,EAAI,IAK/B4B,EAAK7H,KAAKlG,IAAI,EAAGkG,KAAKnG,IAAI,EAAGgO,IAC7BC,EAAK9H,KAAKlG,IAAI,EAAGkG,KAAKnG,IAAI,EAAGiO,IAS7B,IAAIO,EAAcrI,KAAKsI,IAAIH,EAAKC,GAAM,GAEjCP,EAAKM,EAAK,IAAQA,EAAK,KAC1BE,GAAe,IAEjB,IAAME,EAAWvI,KAAKlG,IAAI,EAAGkG,KAAKnG,IAAI,GAAIkO,EAAK,KAAO,MAChDS,EAAWxI,KAAKlG,IAAI,EAAGkG,KAAKnG,IAAI,GAAImO,EAAK,KAAO,MAChDS,EAAQ,GAAK,GAAKF,EAClBG,EAAQ,GAAK,GAAKF,EAUlBG,EATU3I,KAAKlG,IACnB,EACAkG,KAAKnG,IAAI4O,EAAO,SAACjG,EAAKI,WAAa,GAA2B,GAAlB2F,EAAW,IAAW,KAAOE,IAOtDJ,EACfO,EANU5I,KAAKlG,IACnB,EACAkG,KAAKnG,IAAI6O,EAAO,SAAClG,EAAKI,WAAa,GAA2B,GAAlB4F,EAAW,IAAW,KAAOE,IAItDL,EAOjBQ,EAAMF,GAAMd,EAAKM,GACjBW,EAAMF,GAAMd,EAAKM,GAErBS,EAAMA,EAAM,GAAqB,QAAhBzE,EAAMH,MAAkB,EAAI4E,EAC7CC,EAAMA,EAAM,GAA0B,QAArBxB,EAAWrD,MAAkB,EAAI6E,EAElD1E,EAAM2E,YAAc3E,EAAM2E,YAAc,GAAKF,EAC7CvB,EAAWyB,YAAczB,EAAWyB,YAAc,GAAKD,EACvD1E,EAAM4E,eAAiBH,EACvBvB,EAAW0B,eAAiBF,EAExBrI,IAIFW,QAAQ6H,IAAR,UACKzG,EAAKE,WADV,cAC0B0B,EAAMR,SADhC,cAC8C0D,EAAW1D,SADzD,cACuEpB,EAAKA,OAE5EpB,QAAQ6H,IAAR,YACO7E,EAAMA,MADb,cACwBkD,EAAWlD,MADnC,aAC6C6C,EAD7C,iBAC8DY,EAAGqB,QAAQ,GADzE,YAC+EpB,EAAGoB,QAC9E,GAFJ,cAGSf,EAAGe,QAAQ,GAHpB,cAG4Bd,EAAGc,QAAQ,KAGvC9H,QAAQ6H,IAAR,mBACclB,EAAGmB,QAAQ,GADzB,cACiClB,EAAGkB,QAAQ,GAD5C,cACoDL,EAAIK,QAAQ,GADhE,cACwEJ,EAAII,QACxE,GAFJ,gBAGWP,EAAGO,QAAQ,GAHtB,YAG4BN,EAAGM,QAAQ,GAHvC,eAGgDb,EAAYa,QAAQ,MAMtE3C,EAAWnC,EAAMR,UAAU+B,OAASoC,EAAKc,EACzCtC,EAAWe,EAAW1D,UAAU+B,OAASqC,EAAKc,EAE9CvC,EAAWnC,EAAMR,UAAU+B,OAAS3F,KAAKlG,IAAI,IAAKyM,EAAWnC,EAAMR,UAAU+B,QAC7EY,EAAWe,EAAW1D,UAAU+B,OAAS3F,KAAKlG,IAC5C,IACAyM,EAAWe,EAAW1D,UAAU+B,WAhJtC5M,CAmJGyN,GAEH,IAAM2C,EAAMC,OAAOC,KAAK9C,GAAYjE,IAAI,SAAAgH,GAAG,aACtCvQ,IAAEiB,KAAK,CAAC,WAAY,eAAgBuM,EAAW+C,IADT,CAEzCC,KAAMD,EACNtE,SACEuB,EAAW+C,GAAK5D,SAAW,EACvB1F,KAAKwJ,MAAOjD,EAAW+C,GAAKhD,YAAcC,EAAW+C,GAAK5D,SAAY,KAAO,IAC7E,KACNC,OAAQ3F,KAAKwJ,MAAMjD,EAAW+C,GAAK3D,YAE/B8D,EAAU1Q,IAAEuM,QAAQ,CAAC,UAAW,CAAC,QAASvM,IAAE2Q,OAAO,SAAAC,GAAC,OAAIA,EAAElE,YAAc,IAAI0D,IAIlF,OADAS,IAAYtJ,QAAQ,qBAAsBmJ,GACnC,CAAEvI,OAAMuI,aA0DZ,IAAMI,GAAiB,WAC5B,6CAAO,WAAMC,GAAN,eAAAlJ,EAAA,4DACLkJ,EAAS,CAAEpQ,KAAM8H,KADZ,kBAGgBb,GAAU,CAC3BE,IAAI,GAAD,OChXS,iCDgXT,UAJF,cAGGK,EAHH,OAMH4I,EAAS,CAAEpQ,KAAM+H,GAASP,SAC1B4I,EAASC,MAPN,kBAQI7I,GARJ,kCAUH4I,EAAS,CAAEpQ,KAAMgI,GAAOL,MAAK,OAV1B,wDAAP,mDAAM,IAeK2I,GAAY,SAAA9H,GAAM,MAAK,CAClCxI,KAAMiI,GACNO,WAMI+H,GAAiBlR,IAAEuJ,IAAI,QAChByH,GAA0B,WACrC,6CAAO,WAAOD,EAAUI,GAAjB,6BAAAtJ,EAAA,4DACG6I,EAAYS,IAAWrO,IAAvB4N,QADH,kBAIoDnI,QAAQ6I,IAAI,CACjEP,IAAYlJ,QAAQ,sBACpBkJ,IAAYlJ,QAAQ,wBANnB,oCAII0J,EAJJ,KAIwBC,EAJxB,KAQGC,EAAUL,GAAeR,GACzBc,EAAkBN,GAAeI,GACjCG,EAAkBP,GAAeG,GAClCrR,IAAE0R,QAAQH,EAASC,GAMtBT,EAAS,CAAEpQ,KAAMmI,GAAoByI,UAASI,SAAUF,KAJxDpJ,QAAQ6H,IAAI,wCACZW,IAAYtJ,QAAQ,qBAAsB+J,GAC1CP,EAAS,CAAEpQ,KAAMmI,GAAoByI,UAASI,SAAUH,KAfvD,kDAqBHnJ,QAAQuJ,KAAK,wCAAb,MArBG,wDAAP,qDAAM,I,4DE/XRC,KAAQC,UAAUC,MAClB,IAAMC,GAAU,IAAIH,KAAQ,SAEtBI,GAAY,CAChBC,QAAS,OACTC,UAAWC,KACXC,MAAO,CAAC,MAAO,OAAQ,UAGZC,GAA2B,SAAAxH,GAAI,OAC1C,yBAAKhH,MAAO,CAAEuC,QAAS,OAAQU,WAAY,SAAUwL,cAAe,WAClE,gMACA,sKACA,+FAAmBzH,EAAK0H,wBAItBC,GAAU,IAAIxH,KCvBPyH,GAAc,CACzB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,W,ykBCzCK,IAAMC,GAAkBC,aAC7B,SAAA9S,GAAK,OAAIA,EAAMgD,IAAIqF,MACnBnI,IAAEqJ,KACArJ,IAAE6S,QAAQ7S,IAAEsJ,IAAI,YAChBtJ,IAAEuJ,IAAI,YACNvJ,IAAE8S,KACF9S,IAAEwO,OAAOxO,IAAE+S,SACX/S,IAAEuJ,IAAI,SAAAiH,GAAI,MAAK,CAAEwC,MAAOxC,EAAMzQ,MAAOyQ,OAsI5ByC,GAAuBL,aAClC,SAAA9S,GAAK,OAAIA,EAAMgD,IAAIqF,MACnB,SAAArI,GAAK,OAAIA,EAAMgD,IAAIqG,QApHG,SAAChB,EAAMgB,GAAY,IAAD,EAClC+J,EAAQlT,IAAEuJ,IAAI,QAASJ,EAAOgK,SAC9BC,EAAUpT,IAAEuJ,IAAI,QAASJ,EAAOkK,WAChCC,EAAWtT,IAAEuJ,IAAI,QAASJ,EAAOoK,YACjCC,EAAcxT,IAAEsJ,IAAI,QAASH,EAAOqK,aACpCC,EAAczT,IAAEsJ,IAAI,QAASH,EAAOsK,aACpCC,EAAqB1T,IAAEuJ,IAAI,QAASJ,EAAOuK,oBAE3CC,EAAiB,CAAC3T,IAAEuM,QAAQ,CAAC,mBAAoB,CAAC,UAClDqH,EAAqB,CACzB5T,IAAEmJ,OAAO,SAAA0K,GAAG,OAAI7T,IAAEuJ,IAAI,WAAYsK,EAAI5J,SAAS2D,SAAS6F,KACxDzT,IAAEuJ,IAAI,SAAAsK,GACJ,IAAMC,EAAY9T,IAAE+T,UAAU,CAAElJ,SAAU4I,GAAeI,EAAI5J,SACvD+J,EAAYH,EAAI5J,QAAQ6J,GAAWzI,MACnC4I,EAAUjU,IAAEqJ,KAAK,CACrBrJ,IAAEkU,KAAKJ,GACP9T,IAAEmU,OAAO,YACTnU,IAAE2Q,OAAO,SAAAzG,GAAG,OAAIwJ,EAAmB9F,SAAS1D,EAAIW,WAAaX,EAAImB,QAAU2I,KAH7DhU,CAIb6T,EAAI5J,SAIP,OAAO,MACF4J,EADL,CAEEO,wBALenN,KAAKoD,KACpBrK,IAAEmM,OAAO,SAACkI,EAAMC,GAAP,OAAiBD,EAAI,SAAIC,EAAMjJ,MAAQ2I,EAAY,IAAS,IAAG,EAAGC,QAO/EjU,IAAEuM,QAAQ,CAAC,2BAA4B,CAAC,UAEpCgI,EAAkB,SAAAC,GAAS,MAAI,CACnCxU,IAAEmJ,OAAO,SAAA0K,GAAG,OAAI7T,IAAEuJ,IAAI,WAAYsK,EAAI5J,SAAS2D,SAAS6F,KACxDzT,IAAEuM,QACA,CACE,SAAAsH,GACE,OAAO7T,IAAE8F,MACO,QAAd0O,EAAsBC,KAAYA,IAClC,aACAzU,IAAE0U,KAAK,CAAE7J,SAAU4I,GAAeI,EAAI5J,YAI5C,CAACuK,MAGCG,GACJ,mBACGtP,EAAKC,QAAUqO,GADlB,cAEGtO,EAAKE,YAAcqO,GAFtB,cAGGvO,EAAKG,SAAW+O,EAAgB,QAHnC,cAIGlP,EAAKI,UAAY8O,EAAgB,SAJpC,GAKEf,IAAgBG,EAEpB,OAAO3T,IAAEqJ,KACPrJ,IAAE4U,QAAF,CACEzL,EAAO0L,YAAe,SAAAC,GAAK,OAtEZ,SAAC3L,EAAQ4L,GAC5B,IAAMlP,EAAQ7F,IAAE8F,MAAMJ,EAAe,QAASyD,GACxCxI,EAAOX,IAAE8F,MAAM,KAAM,OAAQqD,GAWnC,OATiBnJ,IAAEqJ,KACjBrJ,IAAEmJ,OAAO,SAAA0K,GACP,OACEA,EAAIhK,YAAchE,EAAM,IACxBgO,EAAIhK,YAAchE,EAAM,MACtBlF,GAAQA,IAASkT,EAAI9J,aALZ/J,CAQf+U,GA0DiCC,CAAa7L,EAAO0L,WAAYC,KAC9D3L,EAAOH,UACNhJ,IAAEuJ,IAAI,SAAAsK,GAAG,aAAUA,EAAV,CAAe5J,QAASjK,IAAEmJ,OAAO,SAAAe,GAAG,OAAKA,EAAI6B,QAAQ8H,EAAI5J,aACpEd,EAAOH,UACLG,EAAO8L,cACPjV,IAAEuJ,IAAI,SAAAsK,GAAG,aAAUA,EAAV,CAAe5J,QAASjK,IAAEmJ,OAAO,SAAAe,GAAG,OAAIA,EAAI6B,QAAQ8H,EAAI5J,aACnEd,EAAOH,WACJG,EAAO8L,eACP9L,EAAO+L,mBACRlV,IAAEuJ,IAAI,SAAAsK,GACJ,IAAMsB,EAAe,GACrB,OAAO,MACFtB,EADL,CAEE5J,QAASjK,IAAEmJ,OAAO,SAAAe,GAChB,IAAMkL,EAAiBD,EAAavH,SAAS1D,EAAIW,UAEjD,OADAsK,EAAatH,KAAK3D,EAAIW,WACduK,GACPvB,EAAI5J,cAGZiJ,EAAM5E,QAAU8E,EAAQ9E,QAAUgF,EAAShF,SAC1CtO,IAAEmJ,OAAO,SAAA0K,GACP,IAAMwB,EAAWrV,IAAEuJ,IAAI,WAAYsK,EAAI5J,SACvC,QACIiJ,EAAM5E,QAAUtO,IAAEsV,MAAM,SAAA9E,GAAI,OAAI6E,EAASzH,SAAS4C,IAAO0C,OACzDE,EAAQ9E,QAAUtO,IAAEsM,KAAK,SAAAkE,GAAI,OAAI6E,EAASzH,SAAS4C,IAAO4C,OAC1DE,EAAShF,SAAWtO,IAAEsM,KAAK,SAAAkE,GAAI,OAAI6E,EAASzH,SAAS4C,IAAO8C,MAGpEtT,IAAEmJ,OAAO,SAAA0K,GAAG,OAAI7T,IAAEuV,KAAK1B,EAAI5J,YA9B7B,mBA+BK0K,GA/BL,CAgCExL,EAAOM,MAAS,SAAAqL,GAAK,OAAIU,aAAYV,EAAO3L,EAAOM,KAAM,CAAE6G,KAAM,CAAC,WAClEtQ,IAAEuJ,IAAI,SAAAE,GACJ,IAAIgM,EAAW,EACTC,EAAmB,GACzB,OAAO,MACFjM,EADL,CAEEQ,QAASR,EAAKQ,QAAQV,IAAI,SAACW,EAAKC,GAC9B,IAAMwL,EAA6BD,EAAiB9H,SAAS1D,EAAIW,UAUjE,OATA6K,EAAiB7H,KAAK3D,EAAIW,UACZ,IAAVV,EACFsL,EAAW,EAEVE,GACDzL,EAAImB,QAAUrL,IAAEsJ,IAAI,CAACa,EAAQ,EAAG,SAAUV,EAAKQ,WAE/CwL,GAAY,GAEP,MACFvL,EADL,CAEEuL,WACAE,wCArDL3V,CA2DLmI,K,6NC7GJ,IAAMyN,GAAc,CAClB,CACE5C,MAAO,kFACPjT,MAAOsF,EAAKC,SAEd,CACE0N,MAAO,mIACPjT,MAAOsF,EAAKE,cAPI,mBASdmC,EACA,CACE,CACEsL,MAAO,uHACPjT,MAAOsF,EAAKG,UAEd,CACEwN,MAAO,uHACPjT,MAAOsF,EAAKI,YAGhB,KAcAoQ,GAAqB,CACzB/E,kBACAG,aACA6E,YLuTyB,iBAAO,CAChCnV,KAAMkI,MKrTFkN,G,2MAQJjW,MAAQ,CAAEkW,eAAgB,I,EAE1B/E,UAAYjR,IAAEiW,MAAM,SAACzF,EAAMzQ,GACzB,IAAMoJ,E,uVAAM,IAAQ,EAAKtJ,MAAMsJ,OAAnB,eAA4BqH,EAAOzQ,IAC/C,EAAKF,MAAMoR,UAAU9H,GACrB0H,IAAYtJ,QAAQ,SAAU4B,K,EAGhC2M,YAAc,WACZ,EAAKjW,MAAMiW,cACXjF,IAAYtJ,QAAQ,SAAUwB,K,EAGhCmN,UAAY,YACY,EAAKrW,MAAnBqJ,WACM,EAAKrJ,MAAMiR,kB,oFAGL,IAAD,EACWzQ,KAAKR,MAA3BqJ,EADW,EACXA,UAAWC,EADA,EACAA,OACnB,OACE,yBAAKzK,UAAU,iBACb,yBAAKA,UAAU,0CACb,kBAAC,EAAD,CACEqB,MAAOoJ,EAAOM,MAAQ,GACtB0M,YAAY,qFACZzX,UAAU,eACVgC,SAAUL,KAAK4Q,UAAU,WAG7B,yBAAKvS,UAAU,4CACb,kBAACiH,EAAD,CAAaC,YAAauD,EAAO0L,WAAYnU,SAAUL,KAAK4Q,UAAU,iBAExE,yBAAKvS,UAAU,eACf,yBAAKA,UAAU,4BACb,4BAAQA,UAAU,6CAA6C0D,QAAS/B,KAAKyV,aAC3E,kBAAC,IAAD,MADF,gGAGA,4BACEM,SAAUlN,EACVxK,UAAU,+BACV0D,QAAS/B,KAAK6V,WAEd,kBAAC,IAAD,MALF,yD,sCAYS,IAAD,SACc7V,KAAKR,MAAzBsT,EADM,EACNA,QAAShK,EADH,EACGA,OAEjB,OACE,yBAAKzK,UAAU,WACb,yBAAKA,UAAU,kBACb,2BAAOA,UAAU,SAAjB,iLACA,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,iBACb,2BAAOA,UAAU,SAAjB,8EACA,kBAAC,IAAD,CACE2X,mBAAmB,EACnB3X,UAAU,iBACV4X,gBAAgB,SAChBH,YAAY,0CACZI,SAAO,EACPC,QAASrD,EACTpT,MAAOC,IAAE8F,MAAM,KAAM,UAAWqD,GAChCzI,SAAUL,KAAK4Q,UAAU,cAG7B,yBAAKvS,UAAU,iBACb,2BAAOA,UAAU,SAAjB,kGACA,kBAAC,IAAD,CACE2X,mBAAmB,EACnB3X,UAAU,iBACV4X,gBAAgB,SAChBH,YAAY,0CACZI,SAAO,EACPC,QAASrD,EACTpT,MAAOC,IAAE8F,MAAM,KAAM,YAAaqD,GAClCzI,SAAUL,KAAK4Q,UAAU,gBAG7B,yBAAKvS,UAAU,iBACb,2BAAOA,UAAU,SAAjB,+EACA,kBAAC,IAAD,CACE2X,mBAAmB,EACnB3X,UAAU,iBACV4X,gBAAgB,SAChBH,YAAY,0CACZI,SAAO,EACPC,QAASrD,EACTpT,MAAOC,IAAE8F,MAAM,KAAM,aAAcqD,GACnCzI,SAAUL,KAAK4Q,UAAU,mBAKjC,6BACE,kBAAC,EAAD,CACEtP,QAAS3B,IAAE8F,OAAM,EAAO,WAAYqD,GACpCzI,SAAUL,KAAK4Q,UAAU,aAF3B,4IAODjR,IAAEsJ,IAAI,WAAYH,IACjB,oCACE,6BACE,kBAAC,EAAD,CACExH,QAAS3B,IAAE8F,OAAM,EAAO,eAAgBqD,GACxCzI,SAAU,SAAAX,GACR,EAAKkR,UAAU,eAAgBlR,GAC3BC,IAAEsJ,IAAI,oBAAqBH,IAC7B,EAAK8H,UAAU,qBAAqB,KAIxC,wEATF,iDAYF,6BACE,kBAAC,EAAD,CACEtP,QAAS3B,IAAE8F,OAAM,EAAO,oBAAqBqD,GAC7CzI,SAAU,SAAAX,GACR,EAAKkR,UAAU,oBAAqBlR,GAChCC,IAAEsJ,IAAI,eAAgBH,IACxB,EAAK8H,UAAU,gBAAgB,KALrC,+M,uCAkBM,IAAD,EACa5Q,KAAKR,MAAzBsT,EADO,EACPA,QAAShK,EADF,EACEA,OACjB,OACE,yBAAKzK,UAAU,YACb,6BACE,2BAAOA,UAAU,SAAjB,mFACA,kBAAC,IAAD,CACEyX,YAAY,gHACZzX,UAAU,SACV4X,gBAAgB,SAChBG,WAAW,EACXD,QAASZ,GACT7V,MAAOC,IAAE8F,MAAM8P,GAAe,GAAI,cAAezM,GACjDzI,SAAUL,KAAK4Q,UAAU,kBAG5B,CAAC5L,EAAKE,YAAaF,EAAKG,SAAUH,EAAKI,WAAWmI,SACjD5N,IAAEsJ,IAAI,oBAAqBH,KAE3B,6BACE,2BAAOzK,UAAU,SAAjB,mOACA,kBAAC,IAAD,CACEA,UAAWwC,IAAW,iBAAkB,CACtC,cAAelB,IAAEsJ,IAAI,cAAeH,KAEtCmN,gBAAgB,SAChBH,YAAY,0CACZK,QAASrD,EACTpT,MAAOC,IAAE8F,MAAM,KAAM,cAAeqD,GACpCzI,SAAUL,KAAK4Q,UAAU,kBAI9B,CAAC5L,EAAKE,aAAaqI,SAAS5N,IAAEsJ,IAAI,oBAAqBH,KACtD,6BACE,2BAAOzK,UAAU,SAAjB,sIACA,kBAAC,IAAD,CACE2X,mBAAmB,EACnB3X,UAAU,iBACV4X,gBAAgB,SAChBH,YAAY,0CACZK,QAASrD,EACToD,SAAO,EACPxW,MAAOC,IAAE8F,MAAM,GAAI,qBAAsBqD,GACzCzI,SAAUL,KAAK4Q,UAAU,4B,+BAQ3B,IAAD,SAC4C5Q,KAAKR,MAAhDqJ,EADD,EACCA,UAAWwN,EADZ,EACYA,aAAcpO,EAD1B,EAC0BA,MAAOa,EADjC,EACiCA,OAChC6M,EAAmB3V,KAAKP,MAAxBkW,eACFW,EAAcD,EAAapI,OAAS0H,EACpCY,EAAc5W,IAAE8J,MAAM,EAAGkM,EAAgBU,GAEzCG,EAAsB7W,IAAE8J,MAC5B,EACA4I,GAAYpE,OACZtO,IAAE8S,KACA9S,IAAE4U,QAAF,CACE5U,IAAEsJ,IAAI,oBAAqBH,KAAY9D,EAAKE,aAC1CvF,IAAEsJ,IAAI,oBAAqBH,IAF/B,mBAGKnJ,IAAEuJ,IAAI,QAASJ,EAAOgK,UAH3B,YAIKnT,IAAEuJ,IAAI,QAASJ,EAAOkK,gBAK/B,OACE,yBAAK3U,UAAU,oBACb,yBAAKA,UAAU,WACZ4J,GAASA,EAAMwO,QAChB,yBAAKpY,UAAU,gBACZ2B,KAAK0W,qBACN,kBAAC,EAAD,CAAgB5U,MAAM,8CAAW9B,KAAK2W,iBACtC,kBAAC,EAAD,CAAgB7U,MAAM,gEAAc9B,KAAK4W,mBAE1C/N,GAAa,kBAACzK,EAAD,MACd,yBAAKC,UAAU,YACZsB,IAAEkX,QAAQR,KAAkBxN,GAAa,gGACxCA,GACA0N,EAAYrN,IAAI,SAAC4N,EAAOC,GACtB,OACE,yBAAK1Y,UAAU,aAAa6R,IAAK4G,EAAM1N,KAAO0N,EAAMxN,YAClD,yBAAKjL,UAAU,aACb,yBACEA,UAAWwC,IAAW,aAAc,CAClCmW,OAA4B,MAApBF,EAAMpN,aAGhB,0BAAMrL,UAAU,gBAAgByY,EAAMpN,WACtC,0BAAMrL,UAAU,gBAAgByY,EAAMtN,aAExC,6BAAMsN,EAAM1N,MACZ,yBAAK/K,UAAU,gBACb,uBACE4Y,KAAI,mDAA8CH,EAAM1N,KAAKsE,QAC3D,KACA,KAFE,YAGCoJ,EAAMxN,YACXlJ,OAAO,SACP8W,IAAI,uBAEJ,kBAAC,IAAD,SAIN,yBAAK7Y,UAAU,UACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,WACb,+BACkB,IAAf0Y,GACC,+BACE,4BACE,wBAAI1Y,UAAU,UACd,wBAAIA,UAAU,aACd,wBAAIA,UAAU,SACd,wBAAIA,UAAU,SAAd,SACA,wBAAIA,UAAU,UACd,wBAAIA,UAAU,UAAd,QACA,wBAAIA,UAAU,UAAd,OACA,wBAAIA,UAAU,UAAd,QACA,wBAAIA,UAAU,UAAd,SACA,wBAAIA,UAAU,UAAd,WACA,wBAAIA,UAAU,SAAd,SACA,wBAAIA,UAAU,YAAd,YACA,wBAAIA,UAAU,WAIpB,+BACGyY,EAAMlN,QAAQV,IAAI,SAAAW,GACjB,IHzVAY,EGyVM0M,EAAYX,EAAoBY,QAAQvN,EAAIW,UAClD,OACE,wBACE0F,IAAKrG,EAAImB,MAAQnB,EAAIW,SACrBnM,UAAWwC,IAAW,CACpBwW,OAAQxN,EAAIiB,YACZiB,OAAQlC,EAAIY,OAASqM,EAAMjL,mBAG7B,wBAAIxN,UAAU,SACXwL,EAAIyL,2BAA6B,GAAjC,WAA0CzL,EAAIuL,WAEjD,wBACE/W,UAAU,WACVoF,MACE0T,GAAa,EACT,CAAEG,WAAY,OAAQC,MAAOlF,GAAY8E,IACzC,IAGLtN,EAAIW,SAEJnD,GACC,8BACG,IACAwC,EAAI2E,gBACH5H,KAAKwJ,MAAMvG,EAAI2E,gBAAiB,IACjC3E,EAAI8F,YAAc/I,KAAKwJ,MAAMvG,EAAI8F,YAAa,IAC9C9F,EAAI+F,gBAAkBhJ,KAAKwJ,MAAMvG,EAAI+F,iBAIzCjQ,IAAEsJ,IAAI,oBAAqBH,KAAY9D,EAAKE,aAC3C2E,EAAIW,WAAa7K,IAAEsJ,IAAI,oBAAqBH,IAC5CgO,EAAM/C,wBAA0B,GAC9B,0BAAM1V,UAAU,oBACb,IADH,KAEqC,IAAhCyY,EAAM/C,yBAA+BjE,QAAQ,GAFlD,MAMN,wBAAIzR,UAAWwC,IAAW,OAAQ,CAAE2W,GAAI3N,EAAI6B,UACzC7B,EAAI6B,SACF7B,EAAIiB,YACH,KAEA,kBAAC,IAAD,CACE2M,QACE,oCACE,kYAMJC,iBAAiB,mBATnB,SAeN,wBAAIrZ,UAAU,SAASsZ,IAAQ9N,EAAImB,OAAO4M,OAAO,QACjD,wBAAIvZ,UAAU,SACZ,yBAAKA,UAAU,cACZwL,EAAIgB,OAAuB,MAAdhB,EAAIgB,OAChB,yBACEgN,IAAG,UAAKC,eAAL,mBAAsCjO,EAAIgB,MAA1C,QACHkN,IAAKlO,EAAIgB,QAGE,MAAdhB,EAAIgB,OAAiB,OAG1B,wBAAIxM,UAAU,eAAewL,EAAIwB,MACjC,wBAAIhN,UAAU,cAAcwL,EAAIuB,KAChC,wBAAI/M,UAAU,eAAewL,EAAIsB,MACjC,wBAAI9M,UAAU,gBAAgBwL,EAAIqB,OAClC,wBAAI7M,UAAU,kBAAkBwL,EAAIoB,SACpC,wBAAI5M,UAAU,SACXwL,EAAIyB,MACJzB,EAAIyB,MAAQ,IAAM,IAErB,wBAAIjN,UAAU,YACXwL,EAAI+B,SACJ/B,EAAI+B,SAAW,IAAM,IAExB,wBACEvN,UAAWwC,IAAW,OAAQ,CAC5BkL,OAAQlC,EAAIY,OAASqM,EAAMjL,mBAG7B,kBAAC,IAAD,CACE4L,QACE5N,EAAIiB,aHtbdL,EGub+BZ,EAAIc,WHvb3BF,EAAK0H,sBGwbCF,GAAyBpI,EAAIc,YAEnC+M,iBAAiB,mBHhb/B,SAAAjN,GACxB,IAAMuN,EAAarG,GAAQiG,OAAOnN,EAAMmH,IACxC,GAAKoG,EAMH,OAAOA,EALP,IAAMC,EAAUC,KAAO9F,IACpB+F,QAAQ,OACRC,KAAKF,KAAOzN,GAAM0N,QAAQ,OAAQ,QACrC,OAAmB,IAAZF,EAAgB,6CAAwB,IAAZA,EAAgB,iCAAU,GG4axBI,CAAWxO,EAAIc,YACfd,EAAIiB,YAAc,GAAK,kBAclDjC,GAAayN,GACb,4BACEjY,UAAU,yBACV0D,QAAS,kBACP,EAAK9B,SAAS,SAAAR,GAAK,MAAK,CAAEkW,eAAgBlW,EAAMkW,eAAiB,QAHrE,uB,GA/YYzU,aA+ZXoX,eAhbS,SAAA7Y,GACtB,MAAO,CACLqT,QAASR,GAAgB7S,GACzB4W,aAAczD,GAAqBnT,GACnCqI,KAAMrI,EAAMgD,IAAIqF,KAChBgB,OAAQrJ,EAAMgD,IAAIqG,OAClBb,MAAOxI,EAAMgD,IAAIwF,MACjBY,UAAWpJ,EAAMgD,IAAIoG,YA2avB2M,GAFa8C,CAGb5C,I,kBCreI6C,GAAc,SAAA1N,GAAK,OACvB,yBAAKgN,IAAG,UAAKC,eAAL,mBAAsCjN,EAAtC,QAAmDkN,IAAKlN,KAGnD,SAAS2N,GAAT,GAA8C,IAAvBnI,EAAsB,EAAtBA,QAASxH,EAAa,EAAbA,UAC7C,OACE,yBAAKxK,UAAU,gBACZsB,IAAEkX,QAAQxG,KAAaxH,GAAa,+FACpCA,GAAa,kBAACzK,EAAD,OACZyK,GACA,+BACE,+BACE,4BACE,wBAAIxK,UAAU,UACd,wBAAIA,UAAU,WACd,wBAAIA,UAAU,QAAd,QACA,wBAAIA,UAAU,UAAd,OACA,wBAAIA,UAAU,eAAd,eACA,wBAAIA,UAAU,cAAcka,GAAY,QACxC,wBAAIla,UAAU,aAAaka,GAAY,OACvC,wBAAIla,UAAU,YAAYka,GAAY,MACtC,wBAAIla,UAAU,YAAYka,GAAY,OACtC,wBAAIla,UAAU,YAAYka,GAAY,MACtC,wBAAIla,UAAU,YAAYka,GAAY,MACtC,wBAAIla,UAAU,YAAYka,GAAY,MACtC,wBAAIla,UAAU,YAAYka,GAAY,MACtC,wBAAIla,UAAU,aAAd,UACA,wBAAIA,UAAU,YAAd,cAGJ,+BACGgS,EAAQnH,IAAI,SAACuP,EAAQC,GACpB,OACE,wBAAIra,UAAU,SAAS6R,IAAKuI,EAAOtI,MACjC,wBAAI9R,UAAU,SACK,IAAhBqa,EAAoB,kBAAC,KAAD,MAApB,WAA2CA,EAAc,IAE5D,wBAAIra,UAAU,UACXoa,EAAOE,OAAS,GACf,yBAAKta,UAAU,oBACb,8BAAOoa,EAAOE,QACd,kBAAC,IAAD,OAGHF,EAAOE,OAAS,GACf,yBAAKta,UAAU,sBACb,+BAAQoa,EAAOE,QACf,kBAAC,IAAD,SAGDF,EAAOE,QAAUhZ,IAAEiZ,SAASH,EAAOE,SACpC,yBAAKta,UAAU,sBACb,8BAAOoa,EAAOE,UAIpB,wBAAIta,UAAU,QAAQoa,EAAOtI,MAC7B,wBAAI9R,UAAU,UAAUoa,EAAOlM,QAC/B,wBAAIlO,UAAU,eACZ,mCAASsZ,IAAQc,EAAOxL,WAAWH,GAAG8K,OAAO,QAC7C,mCAASD,IAAQc,EAAOxL,WAAWP,GAAGkL,OAAO,SAE/C,wBAAIvZ,UAAU,cAAcoa,EAAOjM,OAAOQ,KAC1C,wBAAI3O,UAAU,aAAaoa,EAAOjM,OAAOO,IACzC,wBAAI1O,UAAU,YAAYoa,EAAOjM,OAAOM,GACxC,wBAAIzO,UAAU,YAAYoa,EAAOjM,OAAOK,GACxC,wBAAIxO,UAAU,YAAYoa,EAAOjM,OAAOI,GACxC,wBAAIvO,UAAU,YAAYoa,EAAOjM,OAAOG,GACxC,wBAAItO,UAAU,YAAYoa,EAAOjM,OAAOE,GACxC,wBAAIrO,UAAU,YAAYoa,EAAOjM,OAAOC,GACxC,wBAAIpO,UAAU,aAAaoa,EAAOrM,OAClC,wBAAI/N,UAAU,YAAYoa,EAAO7M,SAAP,UAAqB6M,EAAO7M,SAA5B,KAA0C,UC7EvE,SAASiN,KACtB,OACE,yBAAKxa,UAAU,OACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,YAAf,4HACA,yBAAKA,UAAU,UAAf,+EACkB,uBAAG4Y,KAAK,mDAAR,iEADlB,uoDAQF,yBAAK5Y,UAAU,mBACb,yBAAKA,UAAU,YAAf,+iBAIA,yBAAKA,UAAU,UAAf,glBAKF,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,YAAf,sOACA,yBAAKA,UAAU,UAAf,2iCAMF,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,YAAf,gJACA,yBAAKA,UAAU,UAAf,ynBAKF,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,YAAf,6ZAGA,yBAAKA,UAAU,UAAf,sOAEF,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,YAAf,8jBAIA,yBAAKA,UAAU,UAAf,unBAKF,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,YAAf,+IACA,yBAAKA,UAAU,UAAf,+JClCR,IAQMmX,GAAqB,CACzB/E,mBAGIqI,G,2MAWJjD,UAAY,YACY,EAAKrW,MAAnBqJ,WACM,EAAKrJ,MAAMiR,kB,wEAGjB,IAAD,SAC+BzQ,KAAKR,MAAnCqJ,EADD,EACCA,UAAWwH,EADZ,EACYA,QAASpI,EADrB,EACqBA,MAE5B,OACE,yBAAK5J,UAAU,gBACb,yBAAKA,UAAU,WACZ4J,GAASA,EAAMwO,QAChB,yBAAKpY,UAAU,gBACb,yBAAKA,UAAU,eACf,kBAAC,IAAD,CACE0a,OAAK,EACL7a,KAAMD,EAAeC,KACrB8a,OAAQ,kBACN,oCACE,kBAAC,IAAD,CAAMha,GAAIf,EAAeE,IAAID,MAC3B,4BAAQG,UAAU,8CAChB,kBAAC,IAAD,MADF,SAIF,4BACE0X,SAAUlN,EACVxK,UAAU,+BACV0D,QAAS,EAAK8T,WAEd,kBAAC,IAAD,MALF,yDAUN,kBAAC,IAAD,CACEkD,OAAK,EACL7a,KAAMD,EAAeE,IAAID,KACzB8a,OAAQ,kBACN,kBAAC,IAAD,CAAMha,GAAIf,EAAeC,MACvB,4BAAQG,UAAU,gCAAlB,uCAKR,kBAAC,IAAD,CACE0a,OAAK,EACL7a,KAAMD,EAAeC,KACrB8a,OAAQ,kBAAM,kBAACR,GAAD,CAAanI,QAASA,EAASxH,UAAWA,OAE1D,kBAAC,IAAD,CAAOkQ,OAAK,EAAC7a,KAAMD,EAAeE,IAAID,KAAM+a,UAAWJ,W,GA5D3C3X,aAAhB4X,GAOG3X,aAAe,CACpBkP,QAAS,IA2DEiI,mBA/ES,SAAA7Y,GACtB,MAAO,CACL4Q,QAAS5Q,EAAMgD,IAAI4N,QACnBpI,MAAOxI,EAAMgD,IAAIwF,MACjBY,UAAWpJ,EAAMgD,IAAIoG,YA6EvB2M,GAFa8C,CAGbY,YAAWJ,KCxEEK,I,wLArBX,OACE,4BAAQ9a,UAAU,WAChB,6BACE,4BACE,4BACE,kBAAC,IAAD,CAAS0a,OAAK,EAAC/Z,GAAIf,EAAmBC,MAAtC,gBAIF,4BACE,kBAAC,IAAD,CAAS6a,OAAK,EAAC/Z,GAAIf,EAAeC,MAAlC,mB,GAdOgD,cCeNkY,G,iLAXX,OACE,yBAAK/a,UAAU,aACb,kBAAC,GAAD,MACA,kBAAC,IAAD,CAAO0a,OAAK,EAAC7a,KAAK,IAAI8a,OAAQ,kBAAM,kBAAC,IAAD,CAAUha,GAAIf,EAAmBC,UACrE,kBAAC,IAAD,CAAOA,KAAMD,EAAmBC,KAAM+a,UAAWvD,KACjD,kBAAC,IAAD,CAAOxX,KAAMD,EAAeC,KAAM+a,UAAWH,U,GAPnC5X,a,+OCNlB,IAAMmY,GAAcC,aAAgB,CAClC7W,IX+Sa,WAAgD,IAA/BhD,EAA8B,uDAAtBmJ,GAAc2Q,EAAQ,uCAC5D,OAAQA,EAAOjZ,MACb,KAAK8H,GACH,OAAO,MACF3I,EADL,CAEEoJ,WAAW,IAEf,KAAKP,GACH,OAAO,MACF7I,EADL,CAEEoJ,WAAW,EACXZ,MAAOsR,EAAOtR,QAElB,KAAKI,GACH,OAAO,MACF5I,EADL,CAEEoJ,WAAW,GACRE,GAAqBwQ,EAAOzR,OAEnC,KAAKS,GACH,OAAO,MACF9I,EADL,CAEEqJ,OAAQyQ,EAAOzQ,SAEnB,KAAKN,GACH,OAAO,MACF/I,EADL,CAEEqJ,OAAQJ,KAEZ,KAAKD,GACH,OAAI9I,IAAEkX,QAAQ0C,EAAOjI,UACZ7R,EAEF,MACFA,EADL,CAEE4Q,QAAS1Q,IAAEuJ,IAAI,SAAAuP,GACb,OAAKc,EAAOjI,SAAS/D,SAASkL,EAAOtI,MAEzBoJ,EAAOrI,QAAQ3D,SAASkL,EAAOtI,MAIlC,MACFsI,EADL,CAEEE,OAAQY,EAAOjI,SAAS8F,QAAQqB,EAAOtI,MAAQoJ,EAAOrI,QAAQkG,QAAQqB,EAAOtI,QAJxE,MAAKsI,EAAZ,CAAoBE,OAAQ,MAHrB,MAAKF,EAAZ,CAAoBE,OAAQ,SAU7BlZ,EAAM4Q,WAEb,QACE,OAAO5Q,MW9VA+Z,GAAQC,aACnBJ,GACArS,OAAO0S,6BACHC,aACEC,aAAgBC,MAChB7S,OAAO0S,6BAA6B,CAClCI,eAAgB,SAAAra,GAAK,O,uVAAA,IAChBA,OAITma,aAAgBC,O,ujBCDtBrJ,IACGlJ,QAAQ,UACRyS,KAAK,SAAAjR,GACAA,GACF0Q,GAAM9I,SACJE,GAAU,MACL9H,EADI,CAEP0L,WAAY1L,EAAO0L,YAAP,MACP1L,EAAO0L,WADA,CAEVhP,MAAO7F,IAAEsV,MACP,SAAApW,GAAC,OAAIA,GAAKwG,EAAc,IAAMxG,GAAKwG,EAAc,IACjDyD,EAAO0L,WAAWhP,OAEhBsD,EAAO0L,WAAWhP,MAClBH,UAMb2U,MAAM,SAAA/R,GAAK,OAAID,QAAQC,MAAM,uCAAwCA,KAExEuR,GAAM9I,SAASD,MAEfvM,IAAS8U,OACP,kBAAC,IAAD,CAAUQ,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJnV,SAAS4V,eAAe,U,sDC9C1BzZ,OAAO0Z,MACL1Z,OAAO0Z,OACP,SAASxa,GACP,OAAOA,IAAUA,GAGI,qBAAdkH,KAAKuT,OACdvT,KAAKuT,KAAO,SAASC,GACnB,OAAOA,EAAI,EAAI,EAAIA,EAAI,GAAK,EAAIA,IAK/BC,MAAMC,UAAU5G,WACnB1D,OAAOuK,eAAeF,MAAMC,UAAW,YAAa,CAClD5a,MAAO,SAAS8a,GAEd,GAAY,MAARxa,KACF,MAAM,IAAIya,UAAU,iCAGtB,IAAIC,EAAI1K,OAAOhQ,MAGX2a,EAAMD,EAAEzM,SAAW,EAGvB,GAAyB,oBAAduM,EACT,MAAM,IAAIC,UAAU,gCAUtB,IANA,IAAIG,EAAUC,UAAU,GAGpBC,EAAI,EAGDA,EAAIH,GAAK,CAKd,IAAII,EAASL,EAAEI,GACf,GAAIN,EAAUQ,KAAKJ,EAASG,EAAQD,EAAGJ,GACrC,OAAOI,EAGTA,IAIF,OAAQ,GAEVG,cAAc,EACdC,UAAU,K","file":"static/js/main.b42f3567.chunk.js","sourcesContent":["export const routes = {\r\n  leaderboard: {\r\n    path: `/leaderboard`,\r\n  },\r\n  ranking: {\r\n    path: `/ranking`,\r\n    faq: {\r\n      path: '/ranking/faq',\r\n    },\r\n  },\r\n};\r\n","import React from 'react';\r\n\r\nimport './loader.scss';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"loader\">\r\n      <svg\r\n        width=\"40\"\r\n        height=\"12\"\r\n        viewBox=\"0 0 120 30\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"#eee\"\r\n      >\r\n        <circle cx=\"15\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"60\" cy=\"15\" r=\"9\" fillOpacity=\"0.3\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"9\"\r\n            to=\"9\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"9;15;9\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"0.5\"\r\n            to=\"0.5\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\".5;1;.5\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"105\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react/no-deprecated */\r\n// imports from vendor deps\r\nimport React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\n\r\n// imports from styles\r\nexport default class Input extends React.Component {\r\n  static propTypes = {\r\n    value: toBe.any,\r\n    defaultValue: toBe.any,\r\n    onChange: toBe.func,\r\n    onBlur: toBe.func,\r\n    type: toBe.string,\r\n    className: toBe.string,\r\n    trimOnBlur: toBe.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    value: null,\r\n    type: 'text',\r\n    onChange: _.noop,\r\n    onBlur: _.noop,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: (!_.isNil(props.value) ? props.value : props.defaultValue) || '',\r\n    };\r\n    _.bindAll(['handleChange', 'handleBlur'], this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.value !== this.props.value) {\r\n      this.setState({ value: this.props.value });\r\n    }\r\n  }\r\n\r\n  handleChange(e) {\r\n    const newValue = e.target.value;\r\n    this.setState({ value: newValue }, () => this.props.onChange(newValue));\r\n  }\r\n\r\n  handleBlur(e) {\r\n    const { type } = this.props;\r\n    const { value } = this.state;\r\n    if (type === 'number') {\r\n      const numericValue = Number(value);\r\n      if (numericValue >= Number(e.target.min) && numericValue <= Number(e.target.max)) {\r\n        this.props.onBlur(numericValue, e);\r\n      } else {\r\n        this.setState({ value: this.props.value });\r\n        this.props.onBlur(this.props.value, e);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props;\r\n\r\n    // HACK: This component uses onInput instead of onChange\r\n    // because IE11 fails to call onChange events when you paste/cut using context menu (RMB)\r\n    // We're using onInput because it works fine, and because for text input\r\n    // there's no difference between how onChange and onInput work\r\n    return (\r\n      <input\r\n        {..._.omit(['defaultValue', 'onChange'], this.props)}\r\n        className={classNames(className, 'text-input')}\r\n        value={this.state.value}\r\n        onBlur={this.handleBlur}\r\n        onInput={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './toggle.scss';\r\n\r\n// imports from styles\r\nexport default class Toggle extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.id = _.uniqueId();\r\n  }\r\n\r\n  onChange = e => {\r\n    this.props.onChange(e.target.checked);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"toggle-checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle-checkbox-cb\"\r\n          id={this.id}\r\n          onChange={this.onChange}\r\n          checked={this.props.checked}\r\n        />\r\n        <label htmlFor={this.id} className=\"toggle\">\r\n          <span></span>\r\n        </label>\r\n        <label htmlFor={this.id} className=\"text-label\">\r\n          {this.props.children}\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\nimport './styles.scss';\r\n\r\nexport default class CollapsibleBar extends PureComponent {\r\n  static propTypes = {\r\n    className: toBe.string,\r\n    children: toBe.any,\r\n    title: toBe.any,\r\n    defaultOpen: toBe.bool,\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = { open: props.defaultOpen || false };\r\n  }\r\n\r\n  render() {\r\n    const { children, title, className } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classNames('collapsible-bar', className, { open })}>\r\n        <div className=\"header\" onClick={() => this.setState(state => ({ open: !state.open }))}>\r\n          <div className=\"collapse-button\">\r\n            <FaChevronRight />\r\n          </div>\r\n          <div className=\"title\">{title}</div>\r\n        </div>\r\n        {children && <div className=\"collapsible-children\">{children}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport toBe from 'prop-types';\r\nimport { Popper } from 'react-popper';\r\nimport classNames from 'classnames';\r\nimport listensToClickOutside from 'react-onclickoutside';\r\n\r\nimport './overlay.scss';\r\n\r\nconst POPPER_MODIFIERS = {\r\n  preventOverflow: {\r\n    enabled: true,\r\n    padding: 10,\r\n    boundariesElement: 'viewport',\r\n  },\r\n};\r\n\r\nconst PLACEMENT_ARROW_MAPPING = {\r\n  right: 'left',\r\n  left: 'right',\r\n  top: 'bottom',\r\n  bottom: 'top',\r\n};\r\n\r\nconst getArrowPlacement = placement => {\r\n  return placement && PLACEMENT_ARROW_MAPPING[placement.split('-')[0]];\r\n};\r\n\r\nclass Overlay extends React.PureComponent {\r\n  static propTypes = {\r\n    placement: toBe.string,\r\n    overlayItem: toBe.any,\r\n    hideWhenOutOfBounds: toBe.bool,\r\n  };\r\n\r\n  static defaultTypes = {\r\n    placement: 'bottom',\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isVisible: false,\r\n    };\r\n    this.containerItemRef = React.createRef();\r\n    this.renderPopper = this.renderPopper.bind(this);\r\n    this.toggleOverlayVisibility = this.toggleOverlayVisibility.bind(this);\r\n  }\r\n\r\n  hideOverlay() {\r\n    this.setState({\r\n      isVisible: false,\r\n    });\r\n  }\r\n\r\n  toggleOverlayVisibility() {\r\n    this.setState({\r\n      isVisible: !this.state.isVisible,\r\n    });\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    const preventHiding = event && event.target.closest('.inner-popper-overlay'); // prevent overlays from hiding when a modal is opened within overlay\r\n\r\n    if (!preventHiding) {\r\n      this.hideOverlay();\r\n    }\r\n  }\r\n\r\n  renderPopper({ ref, style, placement, arrowProps, scheduleUpdate, outOfBoundaries }) {\r\n    const { children, hideWhenOutOfBounds } = this.props;\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        data-placement={placement}\r\n        className={classNames(\r\n          'inner-popper-overlay',\r\n          `arrow-${getArrowPlacement(placement)}`,\r\n          this.props.overlayClassName,\r\n          { 'out-of-bounds': outOfBoundaries && hideWhenOutOfBounds }\r\n        )}\r\n      >\r\n        <div className=\"arrow-hider\">\r\n          <div className=\"arrow\" ref={arrowProps.ref} style={arrowProps.style} />\r\n        </div>\r\n        <div\r\n          className=\"inner-popper-content\"\r\n          // ref={ref => this.setupPopperContentRef(scheduleUpdate, ref)}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { placement, overlayItem } = this.props;\r\n    const { isVisible } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"overlay-item\"\r\n          ref={this.containerItemRef}\r\n          onClick={this.toggleOverlayVisibility}\r\n        >\r\n          {overlayItem}\r\n        </div>\r\n        {isVisible &&\r\n          ReactDOM.createPortal(\r\n            <Popper\r\n              container={document.body}\r\n              modifiers={POPPER_MODIFIERS}\r\n              placement={placement}\r\n              referenceElement={this.containerItemRef.current}\r\n            >\r\n              {this.renderPopper}\r\n            </Popper>,\r\n            document.body\r\n          )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default listensToClickOutside(Overlay);\r\n","import React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './toggle-button.scss';\r\n\r\nexport default class ToggleButton extends React.PureComponent {\r\n  static propTypes = {\r\n    text: toBe.string,\r\n    onToggle: toBe.func,\r\n    active: toBe.bool,\r\n  };\r\n\r\n  render() {\r\n    const { active, onToggle, text } = this.props;\r\n    return (\r\n      <div\r\n        className={classNames('toggle-button', { active: active })}\r\n        onClick={() => onToggle(!active)}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const SORT = {\r\n  DEFAULT: 'default',\r\n  PROTAGONIST: 'protagonist',\r\n  RANK_ASC: 'rankAsc',\r\n  RANK_DESC: 'rankDesc',\r\n};\r\n\r\nexport const CHART_MIN_MAX = [1, 28];\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\nimport { FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\nimport { Range, getTrackBackground } from 'react-range';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Input from 'components/Shared/Input/Input';\r\n\r\nimport { CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nexport default function ChartFilter({ filterValue, onChange }) {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filterValue);\r\n  const type = _.getOr(null, 'type', filterValue);\r\n  let buttonText = 'фильтр чартов';\r\n  if (filterValue) {\r\n    const t = type || '';\r\n    buttonText = range[0] === range[1] ? `${t}${range[0]}` : `${t}${range[0]} - ${t}${range[1]}`;\r\n    buttonText = 'чарты: ' + buttonText;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Overlay\r\n        overlayClassName=\"chart-range-overlay-outer\"\r\n        overlayItem={\r\n          <button className=\"filter-charts-button btn btn-sm btn-dark\">{buttonText}</button>\r\n        }\r\n      >\r\n        <div className=\"chart-range-overlay\">\r\n          <div className=\"buttons\">\r\n            <ToggleButton\r\n              text=\"S\"\r\n              active={!type || type === 'S'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  range,\r\n                  type: !active ? 'D' : null,\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"D\"\r\n              active={!type || type === 'D'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  range,\r\n                  type: !active ? 'S' : null,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <Range\r\n            values={range}\r\n            step={1}\r\n            min={CHART_MIN_MAX[0]}\r\n            max={CHART_MIN_MAX[1]}\r\n            onChange={r => onChange({ type, range: r })}\r\n            renderTrack={({ props, children }) => (\r\n              <div\r\n                onMouseDown={props.onMouseDown}\r\n                onTouchStart={props.onTouchStart}\r\n                style={{\r\n                  ...props.style,\r\n                  height: '10px',\r\n                  display: 'flex',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <div\r\n                  ref={props.ref}\r\n                  style={{\r\n                    height: '6px',\r\n                    width: '100%',\r\n                    borderRadius: '3px',\r\n                    background: getTrackBackground({\r\n                      values: range,\r\n                      colors: ['#ccc', '#337ab7', '#ccc'],\r\n                      min: CHART_MIN_MAX[0],\r\n                      max: CHART_MIN_MAX[1],\r\n                    }),\r\n                    alignSelf: 'center',\r\n                  }}\r\n                >\r\n                  {children}\r\n                </div>\r\n              </div>\r\n            )}\r\n            renderThumb={({ props, isDragged }) => (\r\n              <div\r\n                {...props}\r\n                style={{\r\n                  ...props.style,\r\n                  height: '12px',\r\n                  width: '12px',\r\n                  borderRadius: '6px',\r\n                  backgroundColor: '#FFF',\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  boxShadow: '0px 2px 3px #AAA',\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    height: '6px',\r\n                    width: '6px',\r\n                    borderRadius: '3px',\r\n                    backgroundColor: isDragged ? '#337ab7' : '#CCC',\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n          />\r\n          <div className=\"inputs\">\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  type,\r\n                  range: [Math.max(range[0] - 1, CHART_MIN_MAX[0]), range[1]],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={CHART_MIN_MAX[0]}\r\n              max={Math.min(CHART_MIN_MAX[1], range[1])}\r\n              value={range[0]}\r\n              onBlur={value => {\r\n                onChange({ type, range: [value, range[1]] });\r\n              }}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMin = Math.min(range[0] + 1, CHART_MIN_MAX[1]);\r\n                onChange({\r\n                  type,\r\n                  range: [newMin, range[1] < newMin ? newMin : range[1]],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMax = Math.max(range[1] - 1, CHART_MIN_MAX[0]);\r\n                onChange({\r\n                  type,\r\n                  range: [range[0] > newMax ? newMax : range[0], newMax],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={Math.max(CHART_MIN_MAX[0], range[0])}\r\n              max={CHART_MIN_MAX[1]}\r\n              value={range[1]}\r\n              onBlur={value => onChange({ type, range: [range[0], value] })}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  type,\r\n                  range: [range[0], Math.min(range[1] + 1, CHART_MIN_MAX[1])],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Overlay>\r\n    </div>\r\n  );\r\n}\r\n","if (localStorage) {\r\n  window.debugOn = () => {\r\n    localStorage.setItem('debug', 1);\r\n  };\r\n  window.debugOff = () => {\r\n    localStorage.removeItem('debug');\r\n  };\r\n}\r\n\r\nexport const DEBUG = localStorage && localStorage.getItem('debug');\r\n","export const fetchJson = async ({ url }) => {\r\n  try {\r\n    const response = await fetch(url);\r\n    if (response.status >= 200 && response.status < 300) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      throw Error('HTTP Status ' + response.status);\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\nimport { DEBUG } from 'constants/env';\r\n\r\nconst LOADING = `TOP/LOADING`;\r\nconst SUCCESS = `TOP/SUCCESS`;\r\nconst ERROR = `TOP/ERROR`;\r\nconst SET_FILTER = `TOP/SET_FILTER`;\r\nconst RESET_FILTER = `TOP/RESET_FILTER`;\r\nconst RANKING_CHANGE_SET = `TOP/RANKING_CHANGE_SET`;\r\n\r\nconst isFullScore = score => {\r\n  return (\r\n    _.isInteger(score.perfect) &&\r\n    _.isInteger(score.great) &&\r\n    _.isInteger(score.good) &&\r\n    _.isInteger(score.bad) &&\r\n    _.isInteger(score.miss) &&\r\n    _.isInteger(score.score)\r\n  );\r\n};\r\n\r\nconst getMaxScore = (score, song) => {\r\n  const maxCombo = score.perfect + score.great + score.good + score.bad + score.miss;\r\n  let maxScore = maxCombo * 1000 + (maxCombo - 50) * 1000; // all perfects + 51 combo bonus\r\n  if (song.chartLevel > 10) {\r\n    maxScore *= song.chartLevel / 10; // Level multiplier\r\n  }\r\n  if (song.chartType === 'D') {\r\n    maxScore *= 1.2; // Double multiplier\r\n  }\r\n  maxScore += 300000; // SSS bonus\r\n  return maxScore;\r\n};\r\n\r\nexport const defaultFilter = { showRank: true };\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n  filter: defaultFilter,\r\n};\r\n\r\nconst transformBackendData = _.flow(\r\n  _.get('top'),\r\n  _.values,\r\n  _.map(item => ({\r\n    song: item.track,\r\n    chartLabel: item.chart_label,\r\n    chartLevel: item.chart_label.slice(1),\r\n    chartType: item.chart_label.slice(0, 1),\r\n    mix: item.mix,\r\n    results: item.results.map((res, index) => {\r\n      const perfects = (Math.sqrt(res.perfects) * _.toInteger(item.chart_label.slice(1))) / 2;\r\n      const acc = perfects\r\n        ? Math.floor(\r\n            ((perfects * 100 + res.greats * 60 + res.goods * 30 + res.misses * -20) /\r\n              (perfects + res.greats + res.goods + res.bads + res.misses)) *\r\n              100\r\n          ) / 100\r\n        : null;\r\n      return {\r\n        nickname: res.nickname,\r\n        date: res.gained,\r\n        dateObject: new Date(res.gained),\r\n        grade: res.grade,\r\n        isExactDate: !!res.exact_gain_date,\r\n        score: res.score,\r\n        perfect: res.perfects,\r\n        great: res.greats,\r\n        good: res.goods,\r\n        bad: res.bads,\r\n        miss: res.misses,\r\n        combo: res.max_combo,\r\n        mods: res.mods_list,\r\n        isRank: !!res.rank_mode,\r\n        accuracy: acc < 0 ? 0 : acc,\r\n      };\r\n    }),\r\n  })),\r\n  _.map(song => {\r\n    return {\r\n      ...song,\r\n      latestScoreDate: song.results.reduce(\r\n        (latest, current) => (current.date > latest ? current.date : latest),\r\n        song.results[0].date\r\n      ),\r\n      results: song.results.map(res => ({\r\n        ...res,\r\n        hasRankScore: _.some({ nickname: res.nickname, isRank: true }, song.results),\r\n      })),\r\n    };\r\n  }),\r\n  _.orderBy(['latestScoreDate', 'song', 'chartLevel'], ['desc', 'asc', 'desc']),\r\n  data => {\r\n    const defaultInfo = {\r\n      count: 0,\r\n      battleCount: 0,\r\n      countAcc: 0,\r\n      rating: 1000,\r\n      grades: { F: 0, D: 0, C: 0, B: 0, A: 0, S: 0, SS: 0, SSS: 0 },\r\n      totalScore: { S: 0, D: 0 },\r\n      sumAccuracy: 0,\r\n    };\r\n    const playerInfo = {};\r\n    const battles = [];\r\n    data.forEach(song => {\r\n      const validResults = [];\r\n      _.orderBy(['score'], ['desc'], song.results).forEach(score => {\r\n        if (!score.nickname.includes('???')) {\r\n          validResults.push(score);\r\n\r\n          if (!playerInfo[score.nickname]) {\r\n            playerInfo[score.nickname] = _.cloneDeep(defaultInfo);\r\n          }\r\n\r\n          playerInfo[score.nickname].count++;\r\n          if (score.accuracy) {\r\n            playerInfo[score.nickname].countAcc++;\r\n            playerInfo[score.nickname].sumAccuracy += score.accuracy;\r\n          }\r\n          playerInfo[score.nickname].totalScore[song.chartType] += score.score;\r\n          playerInfo[score.nickname].grades[score.grade.replace('+', '')]++;\r\n        }\r\n        if (isFullScore(score)) {\r\n          song.maxScore = getMaxScore(score, song);\r\n        }\r\n      });\r\n\r\n      validResults.forEach((score, scoreIndex) => {\r\n        const enemyScores = validResults.length > 1 ? validResults.slice(scoreIndex + 1) : [];\r\n\r\n        enemyScores.forEach(enemyScore => {\r\n          if (score.isRank === enemyScore.isRank && score.nickname !== enemyScore.nickname) {\r\n            battles.push([score, enemyScore, song]);\r\n          }\r\n        });\r\n      });\r\n    });\r\n    _.flow([\r\n      // Apply battles chronologically instead of randomly\r\n      _.sortBy(([s1, s2]) => Math.max(s1.dateObject.getTime(), s2.dateObject.getTime())),\r\n      _.forEach(([score, enemyScore, song]) => {\r\n        if (!playerInfo[enemyScore.nickname]) {\r\n          playerInfo[enemyScore.nickname] = _.cloneDeep(defaultInfo);\r\n        }\r\n\r\n        const scoreMultiplier = score.isRank ? 1.2 : 1;\r\n        let maxScore = null;\r\n        if (song.maxScore) {\r\n          maxScore = song.maxScore * scoreMultiplier;\r\n          if (\r\n            Math.max(maxScore, score.score, enemyScore.score) !== maxScore &&\r\n            !score.isRank &&\r\n            (!score.isExactDate || !enemyScore.isExactDate)\r\n          ) {\r\n            maxScore *= 1.2;\r\n            // Rank from machine best wasn't recognized most likely.\r\n            // Increasing max score by 20% is fine\r\n          }\r\n          if (Math.max(maxScore, score.score, enemyScore.score) !== maxScore) {\r\n            // If calculated max score isn't max score anyway, use current scores as max + cherry on top\r\n            maxScore = Math.max(..._.map('score', song.results));\r\n          }\r\n        }\r\n        // console.log(song.maxScore * scoreMultiplier, score.score, enemyScore.score);\r\n        // Rating at the start of battle for this score\r\n        score.startingRating = playerInfo[score.nickname].rating;\r\n        enemyScore.startingRating = playerInfo[enemyScore.nickname].rating;\r\n        // Counting the number of battles\r\n        playerInfo[score.nickname].battleCount++;\r\n        playerInfo[enemyScore.nickname].battleCount++;\r\n\r\n        // This is one match between two players\r\n        //// Elo formula\r\n        const r1 = playerInfo[score.nickname].rating;\r\n        const r2 = playerInfo[enemyScore.nickname].rating;\r\n        const R1 = 10 ** (r1 / 400);\r\n        const R2 = 10 ** (r2 / 400);\r\n        const E1 = R1 / (R1 + R2);\r\n        const E2 = R2 / (R1 + R2);\r\n        // S1/S2 is the factor of winning\r\n        // S1 = 1  S2 = 0  -- player 1 wins\r\n        // S1 = 0.5  S2 = 0.5  -- draw\r\n        // I'm using difference in score to get this value, it ranges from 0 from 1\r\n        // Current formula assigns 100% win if you have at least ~15% more score than the other player\r\n        // 3.000 vs 3.500 score -- 0 / 1 win percentage -- clear win for player 2\r\n        // 3.000 vs 3.300 score -- 0.17 / 0.83 win percentage -- ranking is not affected as strongly as 0 / 1\r\n        // 3.000 vs 3.100 score -- 0.38 / 0.62 win percentage -- almost draw\r\n        let A = score.score;\r\n        let B = enemyScore.score;\r\n        // let S1old = (A / (A + B) - 0.5) * 10 + 0.5;\r\n        // let S2old = (B / (A + B) - 0.5) * 10 + 0.5;\r\n        let S1, S2;\r\n        if (A === B) {\r\n          S1 = S2 = 0.5;\r\n        } else if (maxScore && A !== 0 && B !== 0) {\r\n          A = maxScore / A - 1;\r\n          B = maxScore / B - 1;\r\n          S1 = (B / (A + B) - 0.5) * 3 + 0.5;\r\n          S2 = (A / (A + B) - 0.5) * 3 + 0.5;\r\n        } else {\r\n          // console.log('////////// NO MAX SCORE /////////////');\r\n          S1 = A > B ? 1 : B < A ? 0 : 0.5;\r\n          S2 = 1 - S1;\r\n        }\r\n        // S1 = A > B ? 1 : B < A ? 0 : 0.5;\r\n        // S2 = 1 - S1;\r\n        S1 = Math.max(0, Math.min(1, S1)); // Set strict boundaries to [0, 1]\r\n        S2 = Math.max(0, Math.min(1, S2));\r\n        // S1old = Math.max(0, Math.min(1, S1old)); // Set strict boundaries to [0, 1]\r\n        // S2old = Math.max(0, Math.min(1, S2old));\r\n        // K is the coeficient that decides how strongly this match affects rating\r\n        // Higher level -- affects more\r\n        // More playcount -- affects less (just to make first matches place people faster)\r\n        // const k1pow = Math.min(1, playerInfo[score.nickname].battleCount / 100) * 0.3; // battlecount 0 -> 150 => results in 0 -> 0.5 value here\r\n        // const k2pow = Math.min(1, playerInfo[enemyScore.nickname].battleCount / 100) * 0.3; // battlecount 0 -> 150 => results in 0 -> 0.5 value here\r\n\r\n        let kRatingDiff = Math.abs(E1 - E2) + 0.6;\r\n        // prettier-ignore\r\n        if ((S1 - E1 > 0) === (E1 < 0.5)) {\r\n          kRatingDiff *= 0.6; // When someone with lower rank wins against someone with higher rank\r\n        }\r\n        const kRating1 = Math.max(0, Math.min(1, (r1 - 500) / 1000));\r\n        const kRating2 = Math.max(0, Math.min(1, (r2 - 500) / 1000));\r\n        const maxK1 = 50 + 40 * kRating1;\r\n        const maxK2 = 50 + 40 * kRating2;\r\n        const kLevel1 = Math.max(\r\n          1,\r\n          Math.min(maxK1, (song.chartLevel / 25) ** ((kRating1 - 0.5) * 5 + 2.5) * maxK1)\r\n        );\r\n        const kLevel2 = Math.max(\r\n          1,\r\n          Math.min(maxK2, (song.chartLevel / 25) ** ((kRating2 - 0.5) * 5 + 2.5) * maxK2)\r\n        );\r\n\r\n        const K1 = kLevel1 / kRatingDiff;\r\n        const K2 = kLevel2 / kRatingDiff;\r\n        // const K1 = (kLevel + (1 - kRating1) * (maxK - kLevel)) / kRatingDiff;\r\n        // const K2 = (kLevel + (1 - kRating2) * (maxK - kLevel)) / kRatingDiff;\r\n        // const K1D = (Math.max(r1 - 600, 0) / 1500 + 1) ** 3 / 2;\r\n        // const K2D = (Math.max(r2 - 600, 0) / 1500 + 1) ** 3 / 2;\r\n        // const K1 = Math.min(20, Math.max(4, song.chartLevel - 4)) ** (2 - k1pow) / K1D / RD;\r\n        // const K2 = Math.min(20, Math.max(4, song.chartLevel - 4)) ** (2 - k2pow) / K2D / RD;\r\n        let dr1 = K1 * (S1 - E1);\r\n        let dr2 = K2 * (S2 - E2);\r\n        // Do not decrease rating if you have SSS - RIP zero-sum algorithm\r\n        dr1 = dr1 < 0 && score.grade === 'SSS' ? 0 : dr1;\r\n        dr2 = dr2 < 0 && enemyScore.grade === 'SSS' ? 0 : dr2;\r\n        // Recording this value for display\r\n        score.ratingDiff = (score.ratingDiff || 0) + dr1;\r\n        enemyScore.ratingDiff = (enemyScore.ratingDiff || 0) + dr2;\r\n        score.ratingDiffLast = dr1;\r\n        enemyScore.ratingDiffLast = dr2;\r\n\r\n        if (DEBUG) {\r\n          // if (song.song === 'Club Night') {\r\n          // if (score.nickname === 'Beamer' || enemyScore.nickname === 'Beamer')\r\n          // if (!song.maxScore) {\r\n          console.log(\r\n            `${song.chartLabel} - ${score.nickname} / ${enemyScore.nickname} - ${song.song}`\r\n          );\r\n          console.log(\r\n            `- ${score.score} / ${enemyScore.score} (${maxScore}) - R ${S1.toFixed(2)}/${S2.toFixed(\r\n              2\r\n            )} E ${E1.toFixed(2)} / ${E2.toFixed(2)}`\r\n          );\r\n          // console.log(`- old R ${S1old.toFixed(2)}/${S2old.toFixed(2)}`);\r\n          console.log(\r\n            `- Rating ${r1.toFixed(2)} / ${r2.toFixed(2)} - ${dr1.toFixed(2)} / ${dr2.toFixed(\r\n              2\r\n            )} - K ${K1.toFixed(2)} ${K2.toFixed(2)} RD ${kRatingDiff.toFixed(1)}`\r\n          );\r\n          // }\r\n        }\r\n\r\n        // Change rating as a result of this battle\r\n        playerInfo[score.nickname].rating = r1 + dr1;\r\n        playerInfo[enemyScore.nickname].rating = r2 + dr2;\r\n        // Rating floor\r\n        playerInfo[score.nickname].rating = Math.max(100, playerInfo[score.nickname].rating);\r\n        playerInfo[enemyScore.nickname].rating = Math.max(\r\n          100,\r\n          playerInfo[enemyScore.nickname].rating\r\n        );\r\n      }),\r\n    ])(battles);\r\n    //\r\n    const arr = Object.keys(playerInfo).map(key => ({\r\n      ..._.omit(['countAcc', 'sumAccuracy'], playerInfo[key]),\r\n      name: key,\r\n      accuracy:\r\n        playerInfo[key].countAcc > 0\r\n          ? Math.round((playerInfo[key].sumAccuracy / playerInfo[key].countAcc) * 100) / 100\r\n          : null,\r\n      rating: Math.round(playerInfo[key].rating),\r\n    }));\r\n    const ranking = _.orderBy(['rating'], ['desc'], _.remove(i => i.battleCount < 20, arr));\r\n    // console.log(ranking);\r\n\r\n    localForage.setItem('lastFetchedRanking', ranking);\r\n    return { data, ranking };\r\n  }\r\n);\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        ...transformBackendData(action.data),\r\n      };\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    case RANKING_CHANGE_SET:\r\n      if (_.isEmpty(action.listPrev)) {\r\n        return state; // First time opening this thing and we didn't have any previous data\r\n      }\r\n      return {\r\n        ...state,\r\n        ranking: _.map(player => {\r\n          if (!action.listPrev.includes(player.name)) {\r\n            return { ...player, change: 'NEW' };\r\n          } else if (!action.listNow.includes(player.name)) {\r\n            // Should NEVER happen, idk if this is possible\r\n            return { ...player, change: '?' };\r\n          } else {\r\n            return {\r\n              ...player,\r\n              change: action.listPrev.indexOf(player.name) - action.listNow.indexOf(player.name),\r\n            };\r\n          }\r\n        }, state.ranking),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTopScores = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await fetchJson({\r\n        url: `${HOST}/top`,\r\n      });\r\n      dispatch({ type: SUCCESS, data });\r\n      dispatch(calculateRankingChanges());\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\nexport const resetFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n\r\nconst getListOfNames = _.map('name');\r\nexport const calculateRankingChanges = () => {\r\n  return async (dispatch, getState) => {\r\n    const { ranking } = getState().top;\r\n\r\n    try {\r\n      const [lastChangedRanking, lastFetchedRanking] = await Promise.all([\r\n        localForage.getItem('lastChangedRanking'),\r\n        localForage.getItem('lastFetchedRanking'),\r\n      ]);\r\n      const listNow = getListOfNames(ranking);\r\n      const listLastFetched = getListOfNames(lastFetchedRanking);\r\n      const listLastChanged = getListOfNames(lastChangedRanking);\r\n      if (!_.isEqual(listNow, listLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        console.log('Ranking has changed, saving last one');\r\n        localForage.setItem('lastChangedRanking', lastFetchedRanking);\r\n        dispatch({ type: RANKING_CHANGE_SET, listNow, listPrev: listLastFetched });\r\n      } else {\r\n        dispatch({ type: RANKING_CHANGE_SET, listNow, listPrev: listLastChanged });\r\n      }\r\n      // console.log(listNow, listLastFetched, listLastChanged);\r\n    } catch (error) {\r\n      console.warn('Cannot get ranking from local storage', error);\r\n    }\r\n  };\r\n};\r\n","export const HOST = 'https://vps720616.ovh.net:5000';\r\n","import React from 'react';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport moment from 'moment';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\n\r\nconst timeStyle = {\r\n  flavour: 'long',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nexport const tooltipFormatter = date => date.toLocaleDateString();\r\nexport const tooltipFormatterForBests = date => (\r\n  <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n    <div>точная дата взятия неизвестна</div>\r\n    <div>скор был записан с my best или machine best</div>\r\n    <div>дата записи: {date.toLocaleDateString()}</div>\r\n  </div>\r\n);\r\n\r\nconst nowDate = new Date();\r\nexport const getTimeAgo = date => {\r\n  const strTimeAgo = timeAgo.format(date, timeStyle);\r\n  if (!strTimeAgo) {\r\n    const dayDiff = moment(nowDate)\r\n      .startOf('day')\r\n      .diff(moment(date).startOf('day'), 'days');\r\n    return dayDiff === 0 ? 'сегодня' : dayDiff === 1 ? 'вчера' : '';\r\n  } else {\r\n    return strTimeAgo;\r\n  }\r\n};\r\n","export const colorsArray = [\r\n  '#FF6633',\r\n  '#66991A',\r\n  '#6666FF',\r\n  '#E6B333',\r\n  '#CC80CC',\r\n  '#E64D66',\r\n  '#4DB3FF',\r\n  '#99E6E6',\r\n  '#99FF99',\r\n  '#FFFF99',\r\n  '#FFB399',\r\n  '#809900',\r\n  '#00B3E6',\r\n  '#3366E6',\r\n  '#999966',\r\n  '#B34D4D',\r\n  '#80B300',\r\n  '#E6B3B3',\r\n  '#6680B3',\r\n  '#66664D',\r\n  '#FF99E6',\r\n  '#CCFF1A',\r\n  '#FF1A66',\r\n  '#33FFCC',\r\n  '#4D8000',\r\n  '#B33300',\r\n  '#991AFF',\r\n  '#E666FF',\r\n  '#1AB399',\r\n  '#E666B3',\r\n  '#33991A',\r\n  '#4D8066',\r\n  '#CC9999',\r\n  '#B3B31A',\r\n  '#00E680',\r\n  '#E6331A',\r\n  '#809980',\r\n  '#E6FF80',\r\n  '#1AFF33',\r\n  '#999933',\r\n  '#FF3380',\r\n  '#CCCC00',\r\n  '#66E64D',\r\n  '#4D80CC',\r\n  '#9900B3',\r\n  '#4DB380',\r\n  '#FF4D4D',\r\n];\r\n","import _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport matchSorter from 'match-sorter';\r\n\r\nimport { SORT, CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nexport const playersSelector = createSelector(\r\n  state => state.top.data,\r\n  _.flow(\r\n    _.flatMap(_.get('results')),\r\n    _.map('nickname'),\r\n    _.uniq,\r\n    _.sortBy(_.toLower),\r\n    _.map(name => ({ label: name, value: name }))\r\n  )\r\n);\r\n\r\nconst filterCharts = (filter, rows) => {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filter);\r\n  const type = _.getOr(null, 'type', filter);\r\n\r\n  const filtered = _.flow(\r\n    _.filter(row => {\r\n      return (\r\n        row.chartLevel >= range[0] &&\r\n        row.chartLevel <= range[1] &&\r\n        (!type || type === row.chartType)\r\n      );\r\n    })\r\n  )(rows);\r\n  return filtered;\r\n};\r\n\r\nconst getFilteredData = (data, filter) => {\r\n  const names = _.map('value', filter.players);\r\n  const namesOr = _.map('value', filter.playersOr);\r\n  const namesNot = _.map('value', filter.playersNot);\r\n  const sortingType = _.get('value', filter.sortingType);\r\n  const protagonist = _.get('value', filter.protagonist);\r\n  const excludeAntagonists = _.map('value', filter.excludeAntagonists);\r\n\r\n  const defaultSorting = [_.orderBy(['latestScoreDate'], ['desc'])];\r\n  const protagonistSorting = [\r\n    _.filter(row => _.map('nickname', row.results).includes(protagonist)),\r\n    _.map(row => {\r\n      const protIndex = _.findIndex({ nickname: protagonist }, row.results);\r\n      const protScore = row.results[protIndex].score;\r\n      const enemies = _.flow([\r\n        _.take(protIndex),\r\n        _.uniqBy('nickname'),\r\n        _.remove(res => excludeAntagonists.includes(res.nickname) || res.score === protScore),\r\n      ])(row.results);\r\n      const distance = Math.sqrt(\r\n        _.reduce((dist, enemy) => dist + (enemy.score / protScore - 0.99) ** 2, 0, enemies)\r\n      );\r\n      return {\r\n        ...row,\r\n        distanceFromProtagonist: distance,\r\n      };\r\n    }),\r\n    _.orderBy(['distanceFromProtagonist'], ['desc']),\r\n  ];\r\n  const getScoreSorting = direction => [\r\n    _.filter(row => _.map('nickname', row.results).includes(protagonist)),\r\n    _.orderBy(\r\n      [\r\n        row => {\r\n          return _.getOr(\r\n            direction === 'asc' ? Infinity : -Infinity,\r\n            'ratingDiff',\r\n            _.find({ nickname: protagonist }, row.results)\r\n          );\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const sortingFunctions =\r\n    {\r\n      [SORT.DEFAULT]: defaultSorting,\r\n      [SORT.PROTAGONIST]: protagonistSorting,\r\n      [SORT.RANK_ASC]: getScoreSorting('asc'),\r\n      [SORT.RANK_DESC]: getScoreSorting('desc'),\r\n    }[sortingType] || defaultSorting;\r\n\r\n  return _.flow(\r\n    _.compact([\r\n      filter.chartRange && (items => filterCharts(filter.chartRange, items)),\r\n      !filter.showRank &&\r\n        _.map(row => ({ ...row, results: _.filter(res => !res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        filter.showOnlyRank &&\r\n        _.map(row => ({ ...row, results: _.filter(res => res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        !filter.showOnlyRank &&\r\n        !filter.showRankAndNorank &&\r\n        _.map(row => {\r\n          const occuredNames = [];\r\n          return {\r\n            ...row,\r\n            results: _.filter(res => {\r\n              const alreadyOccured = occuredNames.includes(res.nickname);\r\n              occuredNames.push(res.nickname);\r\n              return !alreadyOccured;\r\n            }, row.results),\r\n          };\r\n        }),\r\n      (names.length || namesOr.length || namesNot.length) &&\r\n        _.filter(row => {\r\n          const rowNames = _.map('nickname', row.results);\r\n          return (\r\n            (!names.length || _.every(name => rowNames.includes(name), names)) &&\r\n            (!namesOr.length || _.some(name => rowNames.includes(name), namesOr)) &&\r\n            (!namesNot.length || !_.some(name => rowNames.includes(name), namesNot))\r\n          );\r\n        }),\r\n      _.filter(row => _.size(row.results)),\r\n      ...sortingFunctions,\r\n      filter.song && (items => matchSorter(items, filter.song, { keys: ['song'] })),\r\n      _.map(song => {\r\n        let topPlace = 1;\r\n        const occuredNicknames = [];\r\n        return {\r\n          ...song,\r\n          results: song.results.map((res, index) => {\r\n            const isSecondOccurenceInResults = occuredNicknames.includes(res.nickname);\r\n            occuredNicknames.push(res.nickname);\r\n            if (index === 0) {\r\n              topPlace = 1;\r\n            } else if (\r\n              !isSecondOccurenceInResults &&\r\n              res.score !== _.get([index - 1, 'score'], song.results)\r\n            ) {\r\n              topPlace += 1;\r\n            }\r\n            return {\r\n              ...res,\r\n              topPlace,\r\n              isSecondOccurenceInResults,\r\n            };\r\n          }),\r\n        };\r\n      }),\r\n    ])\r\n  )(data);\r\n};\r\n\r\nexport const filteredDataSelector = createSelector(\r\n  state => state.top.data,\r\n  state => state.top.filter,\r\n  getFilteredData\r\n);\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash/fp';\r\nimport Select from 'react-select';\r\nimport classNames from 'classnames';\r\nimport numeral from 'numeral';\r\nimport localForage from 'localforage';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport { FaRedoAlt, FaSearch, FaYoutube } from 'react-icons/fa';\r\n\r\n// styles\r\nimport 'react-responsive-ui/style.css';\r\nimport './leaderboard.scss';\r\n\r\n// components\r\nimport Loader from 'components/Shared/Loader';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport CollapsibleBar from 'components/Shared/CollapsibleBar';\r\nimport ChartFilter from './ChartFilter';\r\n\r\n// constants\r\nimport { SORT } from 'constants/leaderboard';\r\nimport { DEBUG } from 'constants/env';\r\n\r\n// reducers\r\nimport { fetchTopScores, setFilter, resetFilter, defaultFilter } from 'reducers/top';\r\n\r\n// utils\r\nimport { tooltipFormatter, tooltipFormatterForBests, getTimeAgo } from 'utils/leaderboards';\r\nimport { colorsArray } from 'utils/colors';\r\nimport { playersSelector, filteredDataSelector } from './selectors';\r\n\r\n// code\r\nconst sortingOptions = [\r\n  {\r\n    label: 'новизне скоров',\r\n    value: SORT.DEFAULT,\r\n  },\r\n  {\r\n    label: 'отставанию от остальных',\r\n    value: SORT.PROTAGONIST,\r\n  },\r\n  ...(DEBUG\r\n    ? [\r\n        {\r\n          label: 'от худших результатов',\r\n          value: SORT.RANK_ASC,\r\n        },\r\n        {\r\n          label: 'от лучших результатов',\r\n          value: SORT.RANK_DESC,\r\n        },\r\n      ]\r\n    : []),\r\n];\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    players: playersSelector(state),\r\n    filteredData: filteredDataSelector(state),\r\n    data: state.top.data,\r\n    filter: state.top.filter,\r\n    error: state.top.error,\r\n    isLoading: state.top.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopScores,\r\n  setFilter,\r\n  resetFilter,\r\n};\r\n\r\nclass Leaderboard extends Component {\r\n  static propTypes = {\r\n    match: toBe.object,\r\n    data: toBe.array,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  state = { showItemsCount: 20 };\r\n\r\n  setFilter = _.curry((name, value) => {\r\n    const filter = { ...this.props.filter, [name]: value };\r\n    this.props.setFilter(filter);\r\n    localForage.setItem('filter', filter);\r\n  });\r\n\r\n  resetFilter = () => {\r\n    this.props.resetFilter();\r\n    localForage.setItem('filter', defaultFilter);\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchTopScores();\r\n  };\r\n\r\n  renderSimpleSearch() {\r\n    const { isLoading, filter } = this.props;\r\n    return (\r\n      <div className=\"simple-search\">\r\n        <div className=\"song-name _margin-right _margin-bottom\">\r\n          <Input\r\n            value={filter.song || ''}\r\n            placeholder=\"название песни...\"\r\n            className=\"form-control\"\r\n            onChange={this.setFilter('song')}\r\n          />\r\n        </div>\r\n        <div className=\"chart-range _margin-right _margin-bottom\">\r\n          <ChartFilter filterValue={filter.chartRange} onChange={this.setFilter('chartRange')} />\r\n        </div>\r\n        <div className=\"_flex-fill\" />\r\n        <div className=\"_flex-row _margin-bottom\">\r\n          <button className=\"btn btn-sm btn-dark btn-icon _margin-right\" onClick={this.resetFilter}>\r\n            <FaRedoAlt /> сбросить фильтры\r\n          </button>\r\n          <button\r\n            disabled={isLoading}\r\n            className=\"btn btn-sm btn-dark btn-icon\"\r\n            onClick={this.onRefresh}\r\n          >\r\n            <FaSearch /> обновить\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFilters() {\r\n    const { players, filter } = this.props;\r\n\r\n    return (\r\n      <div className=\"filters\">\r\n        <div className=\"people-filters\">\r\n          <label className=\"label\">показывать чарты, которые сыграл:</label>\r\n          <div className=\"players-block\">\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">каждый из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'players', filter)}\r\n                onChange={this.setFilter('players')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и хоть один из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersOr', filter)}\r\n                onChange={this.setFilter('playersOr')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и никто из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersNot', filter)}\r\n                onChange={this.setFilter('playersNot')}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Toggle\r\n            checked={_.getOr(false, 'showRank', filter)}\r\n            onChange={this.setFilter('showRank')}\r\n          >\r\n            показывать скоры на ранке\r\n          </Toggle>\r\n        </div>\r\n        {_.get('showRank', filter) && (\r\n          <>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showOnlyRank', filter)}\r\n                onChange={value => {\r\n                  this.setFilter('showOnlyRank', value);\r\n                  if (_.get('showRankAndNorank', filter)) {\r\n                    this.setFilter('showRankAndNorank', false);\r\n                  }\r\n                }}\r\n              >\r\n                <strong>только</strong> на ранке\r\n              </Toggle>\r\n            </div>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showRankAndNorank', filter)}\r\n                onChange={value => {\r\n                  this.setFilter('showRankAndNorank', value);\r\n                  if (_.get('showOnlyRank', filter)) {\r\n                    this.setFilter('showOnlyRank', false);\r\n                  }\r\n                }}\r\n              >\r\n                показывать лучшие скоры с ранком и без\r\n              </Toggle>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSortings() {\r\n    const { players, filter } = this.props;\r\n    return (\r\n      <div className=\"sortings\">\r\n        <div>\r\n          <label className=\"label\">сортировать по</label>\r\n          <Select\r\n            placeholder=\"выберите сортировку\"\r\n            className=\"select\"\r\n            classNamePrefix=\"select\"\r\n            clearable={false}\r\n            options={sortingOptions}\r\n            value={_.getOr(sortingOptions[0], 'sortingType', filter)}\r\n            onChange={this.setFilter('sortingType')}\r\n          />\r\n        </div>\r\n        {[SORT.PROTAGONIST, SORT.RANK_ASC, SORT.RANK_DESC].includes(\r\n          _.get('sortingType.value', filter)\r\n        ) && (\r\n          <div>\r\n            <label className=\"label\">протагонист (кого сравнивать с остальными):</label>\r\n            <Select\r\n              className={classNames('select players', {\r\n                'red-border': !_.get('protagonist', filter),\r\n              })}\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              value={_.getOr(null, 'protagonist', filter)}\r\n              onChange={this.setFilter('protagonist')}\r\n            />\r\n          </div>\r\n        )}\r\n        {[SORT.PROTAGONIST].includes(_.get('sortingType.value', filter)) && (\r\n          <div>\r\n            <label className=\"label\">не учитывать в сравнении:</label>\r\n            <Select\r\n              closeMenuOnSelect={false}\r\n              className=\"select players\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              isMulti\r\n              value={_.getOr([], 'excludeAntagonists', filter)}\r\n              onChange={this.setFilter('excludeAntagonists')}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, filteredData, error, filter } = this.props;\r\n    const { showItemsCount } = this.state;\r\n    const canShowMore = filteredData.length > showItemsCount;\r\n    const visibleData = _.slice(0, showItemsCount, filteredData);\r\n\r\n    const uniqueSelectedNames = _.slice(\r\n      0,\r\n      colorsArray.length,\r\n      _.uniq(\r\n        _.compact([\r\n          _.get('sortingType.value', filter) === SORT.PROTAGONIST &&\r\n            _.get('protagonist.value', filter),\r\n          ..._.map('value', filter.players),\r\n          ..._.map('value', filter.playersOr),\r\n        ])\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div className=\"leaderboard-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"search-block\">\r\n            {this.renderSimpleSearch()}\r\n            <CollapsibleBar title=\"фильтры\">{this.renderFilters()}</CollapsibleBar>\r\n            <CollapsibleBar title=\"сортировка\">{this.renderSortings()}</CollapsibleBar>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          <div className=\"top-list\">\r\n            {_.isEmpty(filteredData) && !isLoading && 'ничего не найдено'}\r\n            {!isLoading &&\r\n              visibleData.map((chart, chartIndex) => {\r\n                return (\r\n                  <div className=\"song-block\" key={chart.song + chart.chartLabel}>\r\n                    <div className=\"song-name\">\r\n                      <div\r\n                        className={classNames('chart-name', {\r\n                          single: chart.chartType === 'S',\r\n                        })}\r\n                      >\r\n                        <span className=\"chart-letter\">{chart.chartType}</span>\r\n                        <span className=\"chart-number\">{chart.chartLevel}</span>\r\n                      </div>\r\n                      <div>{chart.song}</div>\r\n                      <div className=\"youtube-link\">\r\n                        <a\r\n                          href={`https://youtube.com/results?search_query=${chart.song.replace(\r\n                            / /g,\r\n                            '+'\r\n                          )}+${chart.chartLabel}`}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          <FaYoutube />\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"charts\">\r\n                      <div className=\"chart\">\r\n                        <div className=\"results\">\r\n                          <table>\r\n                            {chartIndex === 0 && (\r\n                              <thead>\r\n                                <tr>\r\n                                  <th className=\"place\"></th>\r\n                                  <th className=\"nickname\"></th>\r\n                                  <th className=\"rank\"></th>\r\n                                  <th className=\"score\">score</th>\r\n                                  <th className=\"grade\"></th>\r\n                                  <th className=\"number\">miss</th>\r\n                                  <th className=\"number\">bad</th>\r\n                                  <th className=\"number\">good</th>\r\n                                  <th className=\"number\">great</th>\r\n                                  <th className=\"number\">perfect</th>\r\n                                  <th className=\"combo\">combo</th>\r\n                                  <th className=\"accuracy\">accuracy</th>\r\n                                  <th className=\"date\"></th>\r\n                                </tr>\r\n                              </thead>\r\n                            )}\r\n                            <tbody>\r\n                              {chart.results.map(res => {\r\n                                const nameIndex = uniqueSelectedNames.indexOf(res.nickname);\r\n                                return (\r\n                                  <tr\r\n                                    key={res.score + res.nickname}\r\n                                    className={classNames({\r\n                                      empty: !res.isExactDate,\r\n                                      latest: res.date === chart.latestScoreDate,\r\n                                    })}\r\n                                  >\r\n                                    <td className=\"place\">\r\n                                      {res.isSecondOccurenceInResults ? '' : `#${res.topPlace}`}\r\n                                    </td>\r\n                                    <td\r\n                                      className=\"nickname\"\r\n                                      style={\r\n                                        nameIndex > -1\r\n                                          ? { fontWeight: 'bold', color: colorsArray[nameIndex] }\r\n                                          : {}\r\n                                      }\r\n                                    >\r\n                                      {res.nickname}\r\n\r\n                                      {DEBUG && (\r\n                                        <span>\r\n                                          {' '}\r\n                                          {res.startingRating &&\r\n                                            Math.round(res.startingRating)}{' '}\r\n                                          {res.ratingDiff && Math.round(res.ratingDiff)}{' '}\r\n                                          {res.ratingDiffLast && Math.round(res.ratingDiffLast)}\r\n                                        </span>\r\n                                      )}\r\n\r\n                                      {_.get('sortingType.value', filter) === SORT.PROTAGONIST &&\r\n                                        res.nickname === _.get('protagonist.value', filter) &&\r\n                                        chart.distanceFromProtagonist > 0 && (\r\n                                          <span className=\"protagonist-diff\">\r\n                                            {' '}\r\n                                            -{(chart.distanceFromProtagonist * 100).toFixed(1)}%\r\n                                          </span>\r\n                                        )}\r\n                                    </td>\r\n                                    <td className={classNames('rank', { vj: res.isRank })}>\r\n                                      {res.isRank &&\r\n                                        (res.isExactDate ? (\r\n                                          'VJ'\r\n                                        ) : (\r\n                                          <Tooltip\r\n                                            content={\r\n                                              <>\r\n                                                <div>\r\n                                                  наличие ранка на этом результате было угадано,\r\n                                                  основываясь на скоре\r\n                                                </div>\r\n                                              </>\r\n                                            }\r\n                                            tooltipClassName=\"timeago-tooltip\"\r\n                                          >\r\n                                            VJ?\r\n                                          </Tooltip>\r\n                                        ))}\r\n                                    </td>\r\n                                    <td className=\"score\">{numeral(res.score).format('0,0')}</td>\r\n                                    <td className=\"grade\">\r\n                                      <div className=\"img-holder\">\r\n                                        {res.grade && res.grade !== '?' && (\r\n                                          <img\r\n                                            src={`${process.env.PUBLIC_URL}/grades/${res.grade}.png`}\r\n                                            alt={res.grade}\r\n                                          />\r\n                                        )}\r\n                                        {res.grade === '?' && null}\r\n                                      </div>\r\n                                    </td>\r\n                                    <td className=\"number miss\">{res.miss}</td>\r\n                                    <td className=\"number bad\">{res.bad}</td>\r\n                                    <td className=\"number good\">{res.good}</td>\r\n                                    <td className=\"number great\">{res.great}</td>\r\n                                    <td className=\"number perfect\">{res.perfect}</td>\r\n                                    <td className=\"combo\">\r\n                                      {res.combo}\r\n                                      {res.combo ? 'x' : ''}\r\n                                    </td>\r\n                                    <td className=\"accuracy\">\r\n                                      {res.accuracy}\r\n                                      {res.accuracy ? '%' : ''}\r\n                                    </td>\r\n                                    <td\r\n                                      className={classNames('date', {\r\n                                        latest: res.date === chart.latestScoreDate,\r\n                                      })}\r\n                                    >\r\n                                      <Tooltip\r\n                                        content={\r\n                                          res.isExactDate\r\n                                            ? tooltipFormatter(res.dateObject)\r\n                                            : tooltipFormatterForBests(res.dateObject)\r\n                                        }\r\n                                        tooltipClassName=\"timeago-tooltip\"\r\n                                      >\r\n                                        {getTimeAgo(res.dateObject)}\r\n                                        {res.isExactDate ? '' : '?'}\r\n                                      </Tooltip>\r\n                                    </td>\r\n                                  </tr>\r\n                                );\r\n                              })}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            {!isLoading && canShowMore && (\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() =>\r\n                  this.setState(state => ({ showItemsCount: state.showItemsCount + 10 }))\r\n                }\r\n              >\r\n                show more...\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Leaderboard);\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\nimport numeral from 'numeral';\r\nimport { GiQueenCrown } from 'react-icons/gi';\r\nimport { FaAngleDoubleUp, FaAngleDoubleDown } from 'react-icons/fa';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nconst getGradeImg = grade => (\r\n  <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n);\r\n\r\nexport default function RankingList({ ranking, isLoading }) {\r\n  return (\r\n    <div className=\"ranking-list\">\r\n      {_.isEmpty(ranking) && !isLoading && 'ничего не найдено'}\r\n      {isLoading && <Loader />}\r\n      {!isLoading && (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"place\"></th>\r\n              <th className=\"change\"></th>\r\n              <th className=\"name\">name</th>\r\n              <th className=\"rating\">elo</th>\r\n              <th className=\"total-score\">total score</th>\r\n              <th className=\"grades sss\">{getGradeImg('SSS')}</th>\r\n              <th className=\"grades ss\">{getGradeImg('SS')}</th>\r\n              <th className=\"grades s\">{getGradeImg('S')}</th>\r\n              <th className=\"grades a\">{getGradeImg('A+')}</th>\r\n              <th className=\"grades b\">{getGradeImg('B')}</th>\r\n              <th className=\"grades c\">{getGradeImg('C')}</th>\r\n              <th className=\"grades d\">{getGradeImg('D')}</th>\r\n              <th className=\"grades f\">{getGradeImg('F')}</th>\r\n              <th className=\"playcount\">scores</th>\r\n              <th className=\"accuracy\">accuracy</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {ranking.map((player, playerIndex) => {\r\n              return (\r\n                <tr className=\"player\" key={player.name}>\r\n                  <td className=\"place\">\r\n                    {playerIndex === 0 ? <GiQueenCrown /> : `#${playerIndex + 1}`}\r\n                  </td>\r\n                  <td className=\"change\">\r\n                    {player.change > 0 && (\r\n                      <div className=\"change-holder up\">\r\n                        <span>{player.change}</span>\r\n                        <FaAngleDoubleUp />\r\n                      </div>\r\n                    )}\r\n                    {player.change < 0 && (\r\n                      <div className=\"change-holder down\">\r\n                        <span>{-player.change}</span>\r\n                        <FaAngleDoubleDown />\r\n                      </div>\r\n                    )}\r\n                    {!!player.change && _.isString(player.change) && (\r\n                      <div className=\"change-holder text\">\r\n                        <span>{player.change}</span>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"name\">{player.name}</td>\r\n                  <td className=\"rating\">{player.rating}</td>\r\n                  <td className=\"total-score\">\r\n                    <div>S: {numeral(player.totalScore.S).format('0,0')}</div>\r\n                    <div>D: {numeral(player.totalScore.D).format('0,0')}</div>\r\n                  </td>\r\n                  <td className=\"grades sss\">{player.grades.SSS}</td>\r\n                  <td className=\"grades ss\">{player.grades.SS}</td>\r\n                  <td className=\"grades s\">{player.grades.S}</td>\r\n                  <td className=\"grades a\">{player.grades.A}</td>\r\n                  <td className=\"grades b\">{player.grades.B}</td>\r\n                  <td className=\"grades c\">{player.grades.C}</td>\r\n                  <td className=\"grades d\">{player.grades.D}</td>\r\n                  <td className=\"grades f\">{player.grades.F}</td>\r\n                  <td className=\"playcount\">{player.count}</td>\r\n                  <td className=\"accuracy\">{player.accuracy ? `${player.accuracy}%` : ''}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function RankingFaq() {\r\n  return (\r\n    <div className=\"faq\">\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Как считается рейтинг?</div>\r\n        <div className=\"answer\">\r\n          A: Используется <a href=\"https://en.wikipedia.org/wiki/Elo_rating_system\">рейтинг Эло</a>,\r\n          широко используемый в шахматах и других играх, слегка модицированный под условия игры на\r\n          пампе. Средний рейтинг - 1000. Коэффициент К зависит от уровня чарта (более сложные чарты\r\n          сильнее влияют на рейтинг). Количество очков влияет на заработанный рейтинг (маленький\r\n          отрыв от противника не даст так много очков как большой отрыв).\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Система Эло используется для игр 1 на 1, как она используется на пампе, где на одном\r\n          чарте играет много игроков?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: Рекорды на одном чарте делятся на несколько игр 1 на 1. Если есть 3 игрока: A, B, C; то\r\n          считается, что было 3 отдельные игры: A vs B, A vs C, B vs C.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Учитываются ли рекорды на ранке в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: Да. Как минимум потому что у нас есть много рекордов, взятых с машин бестов, и мы не\r\n          знаем наверняка, на ранке они или нет. Если у игрока в топе есть два скора - на ранке и\r\n          без ранка, используется тот, где больше очков.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Почему меня нет в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: В таблицу попадают только те, у кого есть хотя бы 20 игр 1 на 1. Первые 20 игр\r\n          используются для определения изначального рейтинга.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Почему суммарное количество оценок S-A-B не совпадает с общим количеством скоров?\r\n        </div>\r\n        <div className=\"answer\">A: Не для каждого результата известна оценка.</div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Если у меня есть несколько рекордов на А, несколько на А+, как считается суммарное\r\n          количество грейдов в таблице?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: В каждой колонке учитываются обе буквы - и треснутые, и с удержанным лайфом. То есть и\r\n          А, и А+ идут в колонку А. Точно так же для B, C, D.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Убери аккураси из таблицы!</div>\r\n        <div className=\"answer\">A: Грем, это секция для вопросов.</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle } from 'react-icons/fa';\r\nimport { Link, Route, withRouter } from 'react-router-dom';\r\n\r\n// styles\r\nimport 'react-responsive-ui/style.css';\r\nimport './ranking.scss';\r\n\r\n// components\r\nimport RankingList from './RankingList';\r\nimport RankingFaq from './RankingFaq';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport { fetchTopScores } from 'reducers/top';\r\n\r\n// utils\r\n\r\n// code\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ranking: state.top.ranking,\r\n    error: state.top.error,\r\n    isLoading: state.top.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopScores,\r\n};\r\n\r\nclass Ranking extends Component {\r\n  static propTypes = {\r\n    ranking: toBe.array,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    ranking: [],\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchTopScores();\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, ranking, error } = this.props;\r\n\r\n    return (\r\n      <div className=\"ranking-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.path}\r\n              render={() => (\r\n                <>\r\n                  <Link to={routes.ranking.faq.path}>\r\n                    <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n                      <FaQuestionCircle /> faq\r\n                    </button>\r\n                  </Link>\r\n                  <button\r\n                    disabled={isLoading}\r\n                    className=\"btn btn-sm btn-dark btn-icon\"\r\n                    onClick={this.onRefresh}\r\n                  >\r\n                    <FaSearch /> обновить\r\n                  </button>\r\n                </>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.faq.path}\r\n              render={() => (\r\n                <Link to={routes.ranking.path}>\r\n                  <button className=\"btn btn-sm btn-dark btn-icon\">назад</button>\r\n                </Link>\r\n              )}\r\n            />\r\n          </div>\r\n          <Route\r\n            exact\r\n            path={routes.ranking.path}\r\n            render={() => <RankingList ranking={ranking} isLoading={isLoading} />}\r\n          />\r\n          <Route exact path={routes.ranking.faq.path} component={RankingFaq} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Ranking));\r\n","import React, { Component } from 'react';\r\n// import toBe from 'prop-types';\r\n// import classNames from 'classnames';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './top-bar.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nclass TopBar extends Component {\r\n  static propTypes = {};\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"top-bar\">\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <NavLink exact to={routes.leaderboard.path}>\r\n                leaderboard\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink exact to={routes.ranking.path}>\r\n                ranking\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopBar;\r\n","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport './App.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport Leaderboard from 'components/Leaderboard/Leaderboard';\r\nimport Ranking from 'components/Ranking/Ranking';\r\nimport TopBar from 'components/Shared/TopBar/TopBar';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <TopBar />\r\n        <Route exact path=\"/\" render={() => <Redirect to={routes.leaderboard.path} />} />\r\n        <Route path={routes.leaderboard.path} component={Leaderboard} />\r\n        <Route path={routes.ranking.path} component={Ranking} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport top from 'reducers/top';\r\n\r\nconst rootReducer = combineReducers({\r\n  top,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__\r\n    ? compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__({\r\n          stateSanitizer: state => ({\r\n            ...state,\r\n          }),\r\n        })\r\n      )\r\n    : applyMiddleware(thunk)\r\n);\r\n","import 'promise-polyfill';\r\nimport 'whatwg-fetch';\r\nimport 'utils/polyfills';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport localForage from 'localforage';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './index.scss';\r\nimport App from 'components/App';\r\n\r\nimport { CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nimport { store } from 'reducers';\r\nimport { fetchTopScores, setFilter } from 'reducers/top';\r\n\r\nlocalForage\r\n  .getItem('filter')\r\n  .then(filter => {\r\n    if (filter) {\r\n      store.dispatch(\r\n        setFilter({\r\n          ...filter,\r\n          chartRange: filter.chartRange && {\r\n            ...filter.chartRange,\r\n            range: _.every(\r\n              r => r >= CHART_MIN_MAX[0] && r <= CHART_MIN_MAX[1],\r\n              filter.chartRange.range\r\n            )\r\n              ? filter.chartRange.range\r\n              : CHART_MIN_MAX,\r\n          },\r\n        })\r\n      );\r\n    }\r\n  })\r\n  .catch(error => console.error('Cannot get filter from local storage', error));\r\n\r\nstore.dispatch(fetchTopScores());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","/* eslint-disable */\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\r\nNumber.isNaN =\r\n  Number.isNaN ||\r\n  function(value) {\r\n    return value !== value;\r\n  };\r\n\r\nif (typeof Math.sign === 'undefined') {\r\n  Math.sign = function(x) {\r\n    return x > 0 ? 1 : x < 0 ? -1 : x;\r\n  };\r\n}\r\n\r\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\r\nif (!Array.prototype.findIndex) {\r\n  Object.defineProperty(Array.prototype, 'findIndex', {\r\n    value: function(predicate) {\r\n      // 1. Let O be ? ToObject(this value).\r\n      if (this == null) {\r\n        throw new TypeError('\"this\" is null or not defined');\r\n      }\r\n\r\n      var o = Object(this);\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('predicate must be a function');\r\n      }\r\n\r\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n      var thisArg = arguments[1];\r\n\r\n      // 5. Let k be 0.\r\n      var k = 0;\r\n\r\n      // 6. Repeat, while k < len\r\n      while (k < len) {\r\n        // a. Let Pk be ! ToString(k).\r\n        // b. Let kValue be ? Get(O, Pk).\r\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n        // d. If testResult is true, return k.\r\n        var kValue = o[k];\r\n        if (predicate.call(thisArg, kValue, k, o)) {\r\n          return k;\r\n        }\r\n        // e. Increase k by 1.\r\n        k++;\r\n      }\r\n\r\n      // 7. Return -1.\r\n      return -1;\r\n    },\r\n    configurable: true,\r\n    writable: true,\r\n  });\r\n}\r\n"],"sourceRoot":""}