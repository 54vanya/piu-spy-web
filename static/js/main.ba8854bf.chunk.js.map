{"version":3,"sources":["utils/polyfills.js","constants/routes.js","components/Shared/Overlay/Overlay.js","components/Shared/ToggleButton/ToggleButton.js","components/Shared/Loader/index.js","components/Shared/Input/Input.js","components/Shared/Toggle/Toggle.js","components/Shared/CollapsibleBar/index.js","components/Shared/Range/index.js","constants/leaderboard.js","components/Leaderboard/ChartFilter.js","utils/fetch.js","constants/env.js","reducers/ranking.js","constants/grades.js","reducers/profiles.js","constants/backend.js","reducers/top.js","reducers/presets.js","components/Leaderboard/PresetsControl.js","utils/leaderboards.js","utils/colors.js","reducers/selectors.js","components/Leaderboard/Leaderboard.js","components/Ranking/RankingList.js","components/Ranking/RankingFaq.js","components/Ranking/Ranking.js","components/Profile/Profile.js","components/Shared/TopBar/TopBar.js","components/App.js","reducers/tracklist.js","reducers/index.js","index.js"],"names":["Number","isNaN","value","Math","sign","x","Array","prototype","findIndex","Object","defineProperty","predicate","this","TypeError","o","len","length","thisArg","arguments","k","kValue","call","configurable","writable","routes","leaderboard","path","ranking","faq","profile","getPath","params","id","POPPER_MODIFIERS","preventOverflow","enabled","padding","boundariesElement","PLACEMENT_ARROW_MAPPING","right","left","top","bottom","getArrowPlacement","placement","split","Overlay","state","isVisible","containerItemRef","React","createRef","renderPopper","bind","toggleOverlayVisibility","setState","event","target","closest","hideOverlay","ref","style","arrowProps","outOfBoundaries","scheduleUpdate","props","children","hideWhenOutOfBounds","data-placement","className","classNames","overlayClassName","overlayItem","Fragment","onClick","ReactDOM","createPortal","container","document","body","modifiers","referenceElement","current","PureComponent","defaultTypes","listensToClickOutside","ToggleButton","active","onToggle","text","Loader","width","height","viewBox","xmlns","fill","cx","cy","r","attributeName","from","to","begin","dur","values","calcMode","repeatCount","fillOpacity","Input","_","isNil","defaultValue","bindAll","prevProps","e","newValue","onChange","type","numericValue","min","max","onBlur","omit","handleBlur","onInput","handleChange","Component","defaultProps","noop","Toggle","checked","uniqueId","htmlFor","CollapsibleBar","open","defaultOpen","title","Range","range","step","renderTrack","onMouseDown","onTouchStart","position","display","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","justifyContent","alignItems","boxShadow","SORT","DEFAULT","PROTAGONIST","RANK_ASC","RANK_DESC","NEW_SCORES_PLAYER","CHART_MIN_MAX","ChartFilter","filterValue","getOr","buttonText","t","newMin","newMax","fetchJson","a","url","fetch","response","status","json","data","Error","console","error","Promise","reject","localStorage","window","debugOn","setItem","debugOff","removeItem","DEBUG","getItem","SET_RANKINGS","RANKING_CHANGE_SET","getRankings","profiles","players","defaultInfo","count","battleCount","countAcc","grades","F","D","C","B","A","S","SS","SSS","totalScore","calories","sumAccuracy","history","ratingHistory","lastPlace","lastBattleDate","setupDefaultInfo","cloneDeep","rating","progress","bonus","playerInfo","battles","forEach","song","validResults","orderBy","results","score","nickname","includes","push","playerId","p1","accuracy","chartType","grade","replace","maxScore","isInteger","perfect","great","good","bad","miss","isFullScore","accuracyRaw","isRank","getMaxScore","scoreIndex","slice","enemyScore","flow","sortBy","s1","s2","dateObject","getTime","p2","scoreMultiplier","isExactDate","map","startingRating","S1","S2","r1","r2","R1","R2","E1","E2","kRating1","kRating2","maxK1","maxK2","kLevel1","chartLevel","kLevel2","kLevel","K1","K2","dr1","dr2","ratingDiff","ratingDiffLast","log","chartLabel","toFixed","playersSorted","keys","battleDate","player","index","place","date","p1LastRating","last","p2LastRating","key","toInteger","name","nameArcade","arcade_name","round","ratingRaw","remove","i","setRankingsAction","getListOfNames","getMapOfRatings","q","fromPairs","setRankings","dispatch","getState","all","localForage","lastChangedRanking","lastChangedRankingPoints","lastFetchedRanking","listNow","listLastFetched","listLastChanged","mapPointsNow","mapPointsLastFetched","mapPointsLastChanged","rankingsPointsMap","isEqual","listPrev","warn","GRADES","SET_PROFILES","SET_FILTER","RESET_FILTER","defaultFilter","initialState","isLoading","filter","getProfiles","mapValues","resultsByGrade","result","find","get","rankingHistory","Date","now","getInitialProfiles","tracklist","addResultData","chart","resultsByLevel","lastResultDate","initializeProfile","resultsOfThisPlayer","bestGradeResult","sort","b","indexOf","neededGrades","double","single","gradeIncrementMap","level","res","thisGrade","thisPlayerId","otherResults","gradeIncArray","gradeInc","l","g","isS","prog","incrementLevel","number","minimumNumber","totalCharts","sqrt","getMinimumNumber","bonusCoefficientNumber","getBonusForLevel","setProfiles","HOST","LOADING","SUCCESS","ERROR","showRank","showRankAndNorank","preprocessData","item","fullRes","every","isNumber","perfects","greats","goods","bads","misses","stepSum","reduce","sum","n","track","chart_label","mix","resultInfoOverrides","infos","fixableIndex","localStepSum","numb","nicknameArcade","originalChartMix","originalChartLabel","originalScore","gained","exact_gain_date","scoreIncrease","score_increase","combo","max_combo","mods","mods_list","rank_mode","isHJ","latestScoreDate","latest","acc","floor","accRaw","hasRankScore","some","fetchTopScores","processedData","initialProfiles","rankings","toPairs","setFilter","SELECT_PRESET","LOAD_PRESETS","LOADING_START","LOADING_END","presets","currentPreset","itemToOption","label","reloadPresets","startLoading","endLoading","selectPreset","openPreset","then","noPresetsMessage","mapDispatchToProps","loadPresets","savePreset","newPreset","confirm","withoutOldPreset","newPresets","deletePreset","PresetsControl","onChangeSelection","selected","onRewritePreset","onSavePreset","isAddingNew","classNamePrefix","placeholder","options","noOptionsMessage","disabled","connect","TimeAgo","addLocale","ru","timeAgo","timeStyle","flavour","gradation","convenient","units","tooltipFormatterForBests","flexDirection","toLocaleDateString","getTimeAgo","dayDiff","moment","startOf","diff","format","colorsArray","playersSelector","createSelector","it","toLower","filteredDataSelector","names","namesOr","playersOr","namesNot","playersNot","sortingType","protagonist","excludeAntagonists","defaultSorting","newScoresProtagonistSorting","protagonistSorting","row","protIndex","protScore","enemies","take","uniqBy","distanceFromProtagonist","dist","enemy","getScoreSorting","direction","Infinity","sortingFunctions","compact","chartRange","items","rows","filterCharts","showOnlyRank","occuredNames","alreadyOccured","rowNames","size","matchSorter","sortingOptions","resetFilter","Leaderboard","showItemsCount","curry","onRefresh","closeMenuOnSelect","isMulti","isClearable","filteredData","canShowMore","visibleData","showProtagonistRatingChange","highlightProtagonist","protagonistName","uniqueSelectedNames","uniq","renderSimpleSearch","renderFilters","renderSortings","preset","isEmpty","message","chartIndex","topPlace","occuredNicknames","isSecondOccurenceInResults","href","rel","placeDifference","nameIndex","prevScore","findLastIndex","empty","fontWeight","color","vj","hj","content","tooltipClassName","numeral","exact","src","process","alt","getGradeImg","RankingList","playerIndex","change","isString","prevRating","down","up","RankingFaq","Ranking","render","component","withRouter","defaultGradesDistribution","defaultGradesWithLevelsDistribution","flatMap","cutRange","array","startIndex","endIndex","firstElement","lastElement","first","middleElements","profileSelector","match","levelsDistribution","y","singlesLevels","doublesLevels","gradesData","update","gradesDistribution","groupBy","pick","gradesValues","gradesAndLevelsDistribution","groupedResults","counts","countBy","reduced","levelsData","lastTickRating","lastTickRanking","lastTick","minMaxRange","filterRange","dayRange","dayRangeMs","placesChanges","ratingChanges","rankingIndex","rank","setProfilesFilter","resetProfilesFilter","Profile","isLevelGraphCombined","onChangeDayRange","minHeight","undefined","aspect","margin","strokeDasharray","dataKey","domain","tickFormatter","allowDecimals","stroke","isAnimationActive","payload","strokeWidth","dot","dataMax","interval","reversed","ticks","stackId","stackOffset","doubleItems","startsWith","singleItems","abs","offset","totalD","totalS","obj","typeLetter","progr","minNumber","currentNumber","levelString","complete","zero","renderGradesWithLevels","renderLevels","renderGrades","renderRankingHistory","renderPlaceHistory","renderGradeBlock","TopBar","App","rootReducer","combineReducers","action","hasPrevList","playerOriginal","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","catch","getElementById"],"mappings":"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","file":"static/js/main.ba8854bf.chunk.js","sourcesContent":["/* eslint-disable */\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\r\nNumber.isNaN =\r\n  Number.isNaN ||\r\n  function(value) {\r\n    return value !== value;\r\n  };\r\n\r\nif (typeof Math.sign === 'undefined') {\r\n  Math.sign = function(x) {\r\n    return x > 0 ? 1 : x < 0 ? -1 : x;\r\n  };\r\n}\r\n\r\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\r\nif (!Array.prototype.findIndex) {\r\n  Object.defineProperty(Array.prototype, 'findIndex', {\r\n    value: function(predicate) {\r\n      // 1. Let O be ? ToObject(this value).\r\n      if (this == null) {\r\n        throw new TypeError('\"this\" is null or not defined');\r\n      }\r\n\r\n      var o = Object(this);\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('predicate must be a function');\r\n      }\r\n\r\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n      var thisArg = arguments[1];\r\n\r\n      // 5. Let k be 0.\r\n      var k = 0;\r\n\r\n      // 6. Repeat, while k < len\r\n      while (k < len) {\r\n        // a. Let Pk be ! ToString(k).\r\n        // b. Let kValue be ? Get(O, Pk).\r\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n        // d. If testResult is true, return k.\r\n        var kValue = o[k];\r\n        if (predicate.call(thisArg, kValue, k, o)) {\r\n          return k;\r\n        }\r\n        // e. Increase k by 1.\r\n        k++;\r\n      }\r\n\r\n      // 7. Return -1.\r\n      return -1;\r\n    },\r\n    configurable: true,\r\n    writable: true,\r\n  });\r\n}\r\n","export const routes = {\r\n  leaderboard: {\r\n    path: `/leaderboard`,\r\n  },\r\n  ranking: {\r\n    path: `/ranking`,\r\n    faq: {\r\n      path: '/ranking/faq',\r\n    },\r\n  },\r\n  profile: {\r\n    path: `/profiles/:id`,\r\n    getPath: params => `/profiles/${params.id}`,\r\n  },\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport toBe from 'prop-types';\r\nimport { Popper } from 'react-popper';\r\nimport classNames from 'classnames';\r\nimport listensToClickOutside from 'react-onclickoutside';\r\n\r\nimport './overlay.scss';\r\n\r\nconst POPPER_MODIFIERS = {\r\n  preventOverflow: {\r\n    enabled: true,\r\n    padding: 10,\r\n    boundariesElement: 'viewport',\r\n  },\r\n};\r\n\r\nconst PLACEMENT_ARROW_MAPPING = {\r\n  right: 'left',\r\n  left: 'right',\r\n  top: 'bottom',\r\n  bottom: 'top',\r\n};\r\n\r\nconst getArrowPlacement = placement => {\r\n  return placement && PLACEMENT_ARROW_MAPPING[placement.split('-')[0]];\r\n};\r\n\r\nclass Overlay extends React.PureComponent {\r\n  static propTypes = {\r\n    placement: toBe.string,\r\n    overlayItem: toBe.any,\r\n    hideWhenOutOfBounds: toBe.bool,\r\n  };\r\n\r\n  static defaultTypes = {\r\n    placement: 'bottom',\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isVisible: false,\r\n    };\r\n    this.containerItemRef = React.createRef();\r\n    this.renderPopper = this.renderPopper.bind(this);\r\n    this.toggleOverlayVisibility = this.toggleOverlayVisibility.bind(this);\r\n  }\r\n\r\n  hideOverlay() {\r\n    this.setState({\r\n      isVisible: false,\r\n    });\r\n  }\r\n\r\n  toggleOverlayVisibility() {\r\n    this.setState({\r\n      isVisible: !this.state.isVisible,\r\n    });\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    const preventHiding = event && event.target.closest('.inner-popper-overlay'); // prevent overlays from hiding when a modal is opened within overlay\r\n\r\n    if (!preventHiding) {\r\n      this.hideOverlay();\r\n    }\r\n  }\r\n\r\n  renderPopper({ ref, style, placement, arrowProps, scheduleUpdate, outOfBoundaries }) {\r\n    const { children, hideWhenOutOfBounds } = this.props;\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        data-placement={placement}\r\n        className={classNames(\r\n          'inner-popper-overlay',\r\n          `arrow-${getArrowPlacement(placement)}`,\r\n          this.props.overlayClassName,\r\n          { 'out-of-bounds': outOfBoundaries && hideWhenOutOfBounds }\r\n        )}\r\n      >\r\n        <div className=\"arrow-hider\">\r\n          <div className=\"arrow\" ref={arrowProps.ref} style={arrowProps.style} />\r\n        </div>\r\n        <div\r\n          className=\"inner-popper-content\"\r\n          // ref={ref => this.setupPopperContentRef(scheduleUpdate, ref)}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { placement, overlayItem } = this.props;\r\n    const { isVisible } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"overlay-item\"\r\n          ref={this.containerItemRef}\r\n          onClick={this.toggleOverlayVisibility}\r\n        >\r\n          {overlayItem}\r\n        </div>\r\n        {isVisible &&\r\n          ReactDOM.createPortal(\r\n            <Popper\r\n              container={document.body}\r\n              modifiers={POPPER_MODIFIERS}\r\n              placement={placement}\r\n              referenceElement={this.containerItemRef.current}\r\n            >\r\n              {this.renderPopper}\r\n            </Popper>,\r\n            document.body\r\n          )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default listensToClickOutside(Overlay);\r\n","import React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './toggle-button.scss';\r\n\r\nexport default class ToggleButton extends React.PureComponent {\r\n  static propTypes = {\r\n    text: toBe.string,\r\n    onToggle: toBe.func,\r\n    active: toBe.bool,\r\n  };\r\n\r\n  render() {\r\n    const { active, onToggle, text } = this.props;\r\n    return (\r\n      <div\r\n        className={classNames('toggle-button', { active: active })}\r\n        onClick={() => onToggle(!active)}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport './loader.scss';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"loader\">\r\n      <svg\r\n        width=\"40\"\r\n        height=\"12\"\r\n        viewBox=\"0 0 120 30\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"#eee\"\r\n      >\r\n        <circle cx=\"15\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"60\" cy=\"15\" r=\"9\" fillOpacity=\"0.3\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"9\"\r\n            to=\"9\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"9;15;9\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"0.5\"\r\n            to=\"0.5\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\".5;1;.5\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"105\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react/no-deprecated */\r\n// imports from vendor deps\r\nimport React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\n\r\n// imports from styles\r\nexport default class Input extends React.Component {\r\n  static propTypes = {\r\n    value: toBe.any,\r\n    defaultValue: toBe.any,\r\n    onChange: toBe.func,\r\n    onBlur: toBe.func,\r\n    type: toBe.string,\r\n    className: toBe.string,\r\n    trimOnBlur: toBe.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    value: null,\r\n    type: 'text',\r\n    onChange: _.noop,\r\n    onBlur: _.noop,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: (!_.isNil(props.value) ? props.value : props.defaultValue) || '',\r\n    };\r\n    _.bindAll(['handleChange', 'handleBlur'], this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.value !== this.props.value) {\r\n      this.setState({ value: this.props.value });\r\n    }\r\n  }\r\n\r\n  handleChange(e) {\r\n    const newValue = e.target.value;\r\n    this.setState({ value: newValue }, () => this.props.onChange(newValue));\r\n  }\r\n\r\n  handleBlur(e) {\r\n    const { type } = this.props;\r\n    const { value } = this.state;\r\n    if (type === 'number') {\r\n      const numericValue = Number(value);\r\n      if (numericValue >= Number(e.target.min) && numericValue <= Number(e.target.max)) {\r\n        this.props.onBlur(numericValue, e);\r\n      } else {\r\n        this.setState({ value: this.props.value });\r\n        this.props.onBlur(this.props.value, e);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props;\r\n\r\n    // HACK: This component uses onInput instead of onChange\r\n    // because IE11 fails to call onChange events when you paste/cut using context menu (RMB)\r\n    // We're using onInput because it works fine, and because for text input\r\n    // there's no difference between how onChange and onInput work\r\n    return (\r\n      <input\r\n        {..._.omit(['defaultValue', 'onChange'], this.props)}\r\n        className={classNames(className, 'text-input')}\r\n        value={this.state.value}\r\n        onBlur={this.handleBlur}\r\n        onInput={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './toggle.scss';\r\n\r\n// imports from styles\r\nexport default class Toggle extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.id = _.uniqueId();\r\n  }\r\n\r\n  onChange = e => {\r\n    this.props.onChange(e.target.checked);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"toggle-checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle-checkbox-cb\"\r\n          id={this.id}\r\n          onChange={this.onChange}\r\n          checked={this.props.checked}\r\n        />\r\n        <label htmlFor={this.id} className=\"toggle\">\r\n          <span></span>\r\n        </label>\r\n        <label htmlFor={this.id} className=\"text-label\">\r\n          {this.props.children}\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\nimport './styles.scss';\r\n\r\nexport default class CollapsibleBar extends PureComponent {\r\n  static propTypes = {\r\n    className: toBe.string,\r\n    children: toBe.any,\r\n    title: toBe.any,\r\n    defaultOpen: toBe.bool,\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = { open: props.defaultOpen || false };\r\n  }\r\n\r\n  render() {\r\n    const { children, title, className } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classNames('collapsible-bar', className, { open })}>\r\n        <div className=\"header\" onClick={() => this.setState(state => ({ open: !state.open }))}>\r\n          <div className=\"collapse-button\">\r\n            <FaChevronRight />\r\n          </div>\r\n          <div className=\"title\">{title}</div>\r\n        </div>\r\n        {children && <div className=\"collapsible-children\">{children}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Range as ReactRange, getTrackBackground } from 'react-range';\r\n\r\nexport default function Range({ range, min, max, onChange }) {\r\n  return (\r\n    <ReactRange\r\n      values={range}\r\n      step={1}\r\n      min={min}\r\n      max={max}\r\n      onChange={onChange}\r\n      renderTrack={({ props, children }) => (\r\n        <div\r\n          onMouseDown={props.onMouseDown}\r\n          onTouchStart={props.onTouchStart}\r\n          style={{\r\n            ...props.style,\r\n            position: 'relative',\r\n            height: '10px',\r\n            display: 'flex',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <div\r\n            ref={props.ref}\r\n            style={{\r\n              height: '6px',\r\n              width: '100%',\r\n              borderRadius: '3px',\r\n              background: getTrackBackground({\r\n                values: range,\r\n                colors: ['#ccc', '#337ab7', '#ccc'],\r\n                min,\r\n                max,\r\n              }),\r\n              alignSelf: 'center',\r\n            }}\r\n          >\r\n            {children}\r\n          </div>\r\n        </div>\r\n      )}\r\n      renderThumb={({ props, isDragged }) => (\r\n        <div\r\n          {...props}\r\n          style={{\r\n            ...props.style,\r\n            height: '12px',\r\n            width: '12px',\r\n            borderRadius: '6px',\r\n            backgroundColor: '#FFF',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            boxShadow: '0px 2px 3px #AAA',\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              height: '6px',\r\n              width: '6px',\r\n              borderRadius: '3px',\r\n              backgroundColor: isDragged ? '#337ab7' : '#CCC',\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","export const SORT = {\r\n  DEFAULT: 'default',\r\n  PROTAGONIST: 'protagonist',\r\n  RANK_ASC: 'rankAsc',\r\n  RANK_DESC: 'rankDesc',\r\n  NEW_SCORES_PLAYER: 'newScoresPlayer',\r\n};\r\n\r\nexport const CHART_MIN_MAX = [1, 28];\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\nimport { FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Range from 'components/Shared/Range';\r\n\r\nimport { CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nexport default function ChartFilter({ filterValue, onChange }) {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filterValue);\r\n  const type = _.getOr(null, 'type', filterValue);\r\n  let buttonText = 'фильтр чартов';\r\n  if (filterValue) {\r\n    const t = type || '';\r\n    buttonText = range[0] === range[1] ? `${t}${range[0]}` : `${t}${range[0]} - ${t}${range[1]}`;\r\n    buttonText = 'чарты: ' + buttonText;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Overlay\r\n        overlayClassName=\"chart-range-overlay-outer\"\r\n        overlayItem={\r\n          <button className=\"filter-charts-button btn btn-sm btn-dark\">{buttonText}</button>\r\n        }\r\n      >\r\n        <div className=\"chart-range-overlay\">\r\n          <div className=\"buttons\">\r\n            <ToggleButton\r\n              text=\"S\"\r\n              active={!type || type === 'S'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  range,\r\n                  type: !active ? 'D' : null,\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"D\"\r\n              active={!type || type === 'D'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  range,\r\n                  type: !active ? 'S' : null,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <Range\r\n            range={range}\r\n            min={CHART_MIN_MAX[0]}\r\n            max={CHART_MIN_MAX[1]}\r\n            onChange={r => onChange({ type, range: r })}\r\n          />\r\n          <div className=\"inputs\">\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  type,\r\n                  range: [Math.max(range[0] - 1, CHART_MIN_MAX[0]), range[1]],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={CHART_MIN_MAX[0]}\r\n              max={Math.min(CHART_MIN_MAX[1], range[1])}\r\n              value={range[0]}\r\n              onBlur={value => {\r\n                onChange({ type, range: [value, range[1]] });\r\n              }}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMin = Math.min(range[0] + 1, CHART_MIN_MAX[1]);\r\n                onChange({\r\n                  type,\r\n                  range: [newMin, range[1] < newMin ? newMin : range[1]],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMax = Math.max(range[1] - 1, CHART_MIN_MAX[0]);\r\n                onChange({\r\n                  type,\r\n                  range: [range[0] > newMax ? newMax : range[0], newMax],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={Math.max(CHART_MIN_MAX[0], range[0])}\r\n              max={CHART_MIN_MAX[1]}\r\n              value={range[1]}\r\n              onBlur={value => onChange({ type, range: [range[0], value] })}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  type,\r\n                  range: [range[0], Math.min(range[1] + 1, CHART_MIN_MAX[1])],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Overlay>\r\n    </div>\r\n  );\r\n}\r\n","export const fetchJson = async ({ url }) => {\r\n  try {\r\n    const response = await fetch(url);\r\n    if (response.status >= 200 && response.status < 300) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      throw Error('HTTP Status ' + response.status);\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n","if (localStorage) {\r\n  window.debugOn = () => {\r\n    localStorage.setItem('debug', 1);\r\n  };\r\n  window.debugOff = () => {\r\n    localStorage.removeItem('debug');\r\n  };\r\n}\r\n\r\nexport const DEBUG = localStorage && localStorage.getItem('debug');\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\n\r\nimport { DEBUG } from 'constants/env';\r\n\r\nconst SET_RANKINGS = `RANKINGS/SET_RANKINGS`;\r\nconst RANKING_CHANGE_SET = `RANKINGS/RANKING_CHANGE_SET`;\r\n\r\nconst isFullScore = score => {\r\n  return (\r\n    _.isInteger(score.perfect) &&\r\n    _.isInteger(score.great) &&\r\n    _.isInteger(score.good) &&\r\n    _.isInteger(score.bad) &&\r\n    _.isInteger(score.miss) &&\r\n    _.isInteger(score.score)\r\n  );\r\n};\r\n\r\nconst getMaxScore = score => {\r\n  const maxScoreAccuracy = ((score.score / score.accuracyRaw) * 100) / (score.isRank ? 1.2 : 1);\r\n\r\n  return maxScoreAccuracy;\r\n};\r\n\r\nexport default function reducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case SET_RANKINGS:\r\n      return {\r\n        ...state,\r\n        data: action.ranking,\r\n      };\r\n    case RANKING_CHANGE_SET:\r\n      const hasPrevList = !_.isEmpty(action.listPrev);\r\n      return {\r\n        ...state,\r\n        data: _.map(playerOriginal => {\r\n          const player = {\r\n            ...playerOriginal,\r\n            prevRating: _.get(playerOriginal.name, action.rankingsPointsMap),\r\n          };\r\n          if (!hasPrevList) {\r\n            return player; // First time opening this thing and we didn't have any previous data\r\n          }\r\n          if (!_.includes(player.name, action.listPrev)) {\r\n            return { ...player, change: 'NEW' };\r\n          } else if (!_.includes(player.name, action.listNow)) {\r\n            // Should NEVER happen, idk if this is possible\r\n            return { ...player, change: '?' };\r\n          } else {\r\n            return {\r\n              ...player,\r\n              change:\r\n                _.indexOf(player.name, action.listPrev) - _.indexOf(player.name, action.listNow),\r\n            };\r\n          }\r\n        }, state.data),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getRankings = (data, { players }, profiles) => {\r\n  const defaultInfo = {\r\n    count: 0,\r\n    battleCount: 0,\r\n    countAcc: 0,\r\n    // rating: 1000,\r\n    grades: { F: 0, D: 0, C: 0, B: 0, A: 0, S: 0, SS: 0, SSS: 0 },\r\n    totalScore: { S: 0, D: 0, calories: 0 },\r\n    sumAccuracy: 0,\r\n    history: [],\r\n    ratingHistory: [],\r\n    lastPlace: null,\r\n    lastBattleDate: 0,\r\n  };\r\n  const setupDefaultInfo = id => {\r\n    return {\r\n      ..._.cloneDeep(defaultInfo),\r\n      rating: 850 + profiles[id].progress.bonus,\r\n    };\r\n  };\r\n  const playerInfo = {};\r\n  const battles = [];\r\n  data.forEach(song => {\r\n    const validResults = [];\r\n    _.orderBy(['score'], ['desc'], song.results).forEach(score => {\r\n      if (!score.nickname.includes('???')) {\r\n        validResults.push(score);\r\n\r\n        if (!playerInfo[score.playerId]) {\r\n          playerInfo[score.playerId] = setupDefaultInfo(score.playerId);\r\n        }\r\n        const p1 = playerInfo[score.playerId];\r\n        p1.count++;\r\n        if (score.accuracy) {\r\n          p1.countAcc++;\r\n          p1.sumAccuracy += score.accuracy;\r\n        }\r\n        p1.totalScore[song.chartType] += score.score;\r\n        score.calories && (p1.totalScore.calories += score.calories);\r\n        p1.grades[score.grade.replace('+', '')]++;\r\n      }\r\n      if (!song.maxScore && isFullScore(score)) {\r\n        song.maxScore = getMaxScore(score, song);\r\n      }\r\n    });\r\n\r\n    validResults.forEach((score, scoreIndex) => {\r\n      const enemyScores = validResults.length > 1 ? validResults.slice(scoreIndex + 1) : [];\r\n\r\n      enemyScores.forEach(enemyScore => {\r\n        if (score.isRank === enemyScore.isRank && score.playerId !== enemyScore.playerId) {\r\n          battles.push([score, enemyScore, song]);\r\n        }\r\n      });\r\n    });\r\n  });\r\n  _.flow([\r\n    // Apply battles chronologically instead of randomly\r\n    _.sortBy(([s1, s2]) => Math.max(s1.dateObject.getTime(), s2.dateObject.getTime())),\r\n    _.forEach(([score, enemyScore, song]) => {\r\n      // For each battle\r\n      if (!playerInfo[enemyScore.playerId]) {\r\n        playerInfo[enemyScore.playerId] = setupDefaultInfo(enemyScore.playerId);\r\n      }\r\n      const p1 = playerInfo[score.playerId];\r\n      const p2 = playerInfo[enemyScore.playerId];\r\n\r\n      const scoreMultiplier = score.isRank ? 1.2 : 1;\r\n      let maxScore = null;\r\n      if (song.maxScore) {\r\n        maxScore = song.maxScore * scoreMultiplier;\r\n        if (\r\n          Math.max(maxScore, score.score, enemyScore.score) !== maxScore &&\r\n          !score.isRank &&\r\n          (!score.isExactDate || !enemyScore.isExactDate)\r\n        ) {\r\n          maxScore *= 1.2;\r\n          // Rank from machine best wasn't recognized most likely.\r\n          // Increasing max score by 20% is fine\r\n        }\r\n        if (Math.max(maxScore, score.score, enemyScore.score) !== maxScore) {\r\n          // If calculated max score isn't max score anyway, use current scores as max + cherry on top\r\n          maxScore = Math.max(..._.map('score', song.results));\r\n        }\r\n      }\r\n      // Rating at the start of battle for this score\r\n      score.startingRating = p1.rating;\r\n      enemyScore.startingRating = p2.rating;\r\n      // Counting the number of battles\r\n      p1.battleCount++;\r\n      p2.battleCount++;\r\n\r\n      // This is one match between two players\r\n      //// Elo formula\r\n      const r1 = p1.rating;\r\n      const r2 = p2.rating;\r\n      const R1 = 10 ** (r1 / 400);\r\n      const R2 = 10 ** (r2 / 400);\r\n      const E1 = R1 / (R1 + R2);\r\n      const E2 = R2 / (R1 + R2);\r\n      let A = score.score;\r\n      let B = enemyScore.score;\r\n      let S1, S2;\r\n      if (A === B) {\r\n        S1 = S2 = 0.5;\r\n      } else if (maxScore && A !== 0 && B !== 0) {\r\n        A = maxScore / A - 1;\r\n        B = maxScore / B - 1;\r\n        S1 = (B / (A + B) - 0.5) * 5 + 0.5;\r\n        S2 = (A / (A + B) - 0.5) * 5 + 0.5;\r\n      } else {\r\n        S1 = A > B ? 1 : B < A ? 0 : 0.5;\r\n        S2 = 1 - S1;\r\n      }\r\n      S1 = Math.max(0, Math.min(1, S1)); // Set strict boundaries to [0, 1]\r\n      S2 = Math.max(0, Math.min(1, S2));\r\n\r\n      const kRating1 = Math.max(0, Math.min(1, (r1 - 700) / 800));\r\n      const kRating2 = Math.max(0, Math.min(1, (r2 - 700) / 800));\r\n      const maxK1 = 30 + 20 * kRating1;\r\n      const maxK2 = 30 + 20 * kRating2;\r\n      const kLevel1 = Math.max(\r\n        1,\r\n        Math.min(maxK1, (song.chartLevel / 25) ** ((kRating1 - 0.5) * 5 + 2.5) * maxK1)\r\n      );\r\n      const kLevel2 = Math.max(\r\n        1,\r\n        Math.min(maxK2, (song.chartLevel / 25) ** ((kRating2 - 0.5) * 5 + 2.5) * maxK2)\r\n      );\r\n      const kLevel = Math.min(kLevel1, kLevel2);\r\n\r\n      const K1 = kLevel;\r\n      const K2 = kLevel;\r\n      let dr1 = K1 * (S1 - E1);\r\n      let dr2 = K2 * (S2 - E2);\r\n      // Do not decrease rating if you have SSS - RIP zero-sum algorithm\r\n      dr1 = dr1 < 0 && score.grade === 'SSS' ? 0 : dr1;\r\n      dr2 = dr2 < 0 && enemyScore.grade === 'SSS' ? 0 : dr2;\r\n      // Recording this value for display\r\n      score.ratingDiff = (score.ratingDiff || 0) + dr1;\r\n      enemyScore.ratingDiff = (enemyScore.ratingDiff || 0) + dr2;\r\n      score.ratingDiffLast = dr1;\r\n      enemyScore.ratingDiffLast = dr2;\r\n\r\n      if (DEBUG) {\r\n        // if (song.song === 'Club Night') {\r\n        // if (score.nickname === 'Liza' || enemyScore.nickname === 'Liza') {\r\n        // if (!song.maxScore) {\r\n        console.log(\r\n          `${song.chartLabel} - ${score.nickname} / ${enemyScore.nickname} - ${song.song}`\r\n        );\r\n        console.log(\r\n          `- ${score.score} / ${enemyScore.score} (${maxScore}) - R ${S1.toFixed(2)}/${S2.toFixed(\r\n            2\r\n          )} E ${E1.toFixed(2)} / ${E2.toFixed(2)}`\r\n        );\r\n        // console.log(`- old R ${S1old.toFixed(2)}/${S2old.toFixed(2)}`);\r\n        console.log(\r\n          `- Rating ${r1.toFixed(2)} / ${r2.toFixed(2)} - ${dr1.toFixed(2)} / ${dr2.toFixed(\r\n            2\r\n          )} - K ${K1.toFixed(2)} ${K2.toFixed(2)}`\r\n        );\r\n        // }\r\n      }\r\n\r\n      // Change rating as a result of this battle\r\n      p1.rating = r1 + dr1;\r\n      p2.rating = r2 + dr2;\r\n      // Rating floor\r\n      p1.rating = Math.max(100, p1.rating);\r\n      p2.rating = Math.max(100, p2.rating);\r\n\r\n      const playersSorted = _.flow(\r\n        _.keys,\r\n        _.map(id => ({ id, rating: playerInfo[id].rating })),\r\n        _.orderBy(['rating'], ['desc'])\r\n      )(playerInfo);\r\n      const battleDate =\r\n        score.dateObject > enemyScore.dateObject ? score.dateObject : enemyScore.dateObject;\r\n      playersSorted.forEach((player, index) => {\r\n        const lastPlace = playerInfo[player.id].lastPlace;\r\n        if (lastPlace !== index + 1) {\r\n          playerInfo[player.id].history.push({\r\n            place: index + 1,\r\n            date: battleDate.getTime(),\r\n          });\r\n          playerInfo[player.id].lastPlace = index + 1;\r\n        }\r\n      });\r\n\r\n      const p1LastRating = _.last(p1.ratingHistory);\r\n      const p2LastRating = _.last(p2.ratingHistory);\r\n      if (p1LastRating !== p1.rating) {\r\n        p1.ratingHistory.push({\r\n          rating: p1.rating,\r\n          date: battleDate.getTime(),\r\n        });\r\n      }\r\n      if (p2LastRating !== p2.rating) {\r\n        p2.ratingHistory.push({\r\n          rating: p2.rating,\r\n          date: battleDate.getTime(),\r\n        });\r\n      }\r\n    }),\r\n  ])(battles);\r\n\r\n  const ranking = _.flow(\r\n    _.keys,\r\n    _.map(key => ({\r\n      ..._.omit(['countAcc', 'sumAccuracy'], playerInfo[key]),\r\n      id: _.toInteger(key),\r\n      name: players[key].nickname,\r\n      nameArcade: players[key].arcade_name,\r\n      accuracy:\r\n        playerInfo[key].countAcc > 0\r\n          ? Math.round((playerInfo[key].sumAccuracy / playerInfo[key].countAcc) * 100) / 100\r\n          : null,\r\n      rating: Math.round(playerInfo[key].rating),\r\n      ratingRaw: playerInfo[key].rating,\r\n    })),\r\n    _.remove(i => i.battleCount < 20),\r\n    _.orderBy(['ratingRaw'], ['desc'])\r\n  )(playerInfo);\r\n  return ranking;\r\n};\r\n\r\nexport const setRankingsAction = ranking => ({\r\n  type: SET_RANKINGS,\r\n  ranking,\r\n});\r\n\r\nconst getListOfNames = _.map('name');\r\nconst getMapOfRatings = _.flow(\r\n  _.map(q => [q.name, q.rating]),\r\n  _.fromPairs\r\n);\r\nexport const setRankings = ranking => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(setRankingsAction(ranking));\r\n    try {\r\n      const [lastChangedRanking, lastChangedRankingPoints, lastFetchedRanking] = await Promise.all([\r\n        localForage.getItem('lastChangedRanking_v2'),\r\n        localForage.getItem('lastChangedRankingPoints_v2'),\r\n        localForage.getItem('lastFetchedRanking_v2'),\r\n      ]);\r\n      // console.log(ranking);\r\n      const listNow = getListOfNames(ranking);\r\n      const listLastFetched = getListOfNames(lastFetchedRanking);\r\n      const listLastChanged = getListOfNames(lastChangedRanking);\r\n      const mapPointsNow = getMapOfRatings(ranking);\r\n      const mapPointsLastFetched = getMapOfRatings(lastFetchedRanking);\r\n      const mapPointsLastChanged = getMapOfRatings(lastChangedRankingPoints);\r\n      let rankingsPointsMap = mapPointsLastChanged;\r\n      // console.log(mapPointsNow, mapPointsLastFetched, mapPointsLastChanged);\r\n      if (!_.isEqual(mapPointsNow, mapPointsLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRankingPoints_v2', lastFetchedRanking);\r\n        rankingsPointsMap = mapPointsLastFetched;\r\n      }\r\n      let listPrev = listLastChanged;\r\n      if (!_.isEqual(listNow, listLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRanking_v2', lastFetchedRanking);\r\n        listPrev = listLastFetched;\r\n      }\r\n      dispatch({\r\n        type: RANKING_CHANGE_SET,\r\n        listNow,\r\n        listPrev,\r\n        rankingsPointsMap,\r\n      });\r\n      localForage.setItem('lastFetchedRanking_v2', ranking);\r\n      // console.log(listNow, listLastFetched, listLastChanged);\r\n    } catch (error) {\r\n      console.warn('Cannot get ranking from local storage', error);\r\n    }\r\n  };\r\n};\r\n","export const GRADES = ['F', 'F+', 'D', 'D+', 'C', 'C+', 'B', 'B+', 'A', 'A+', 'S', 'SS', 'SSS'];\r\n","import _ from 'lodash/fp';\r\n// import localForage from 'localforage';\r\n//\r\nimport { GRADES } from 'constants/grades';\r\n\r\nconst SET_PROFILES = `PROFILES/SET_PROFILES`;\r\nconst SET_FILTER = `PROFILES/SET_FILTER`;\r\nconst RESET_FILTER = `PROFILES/RESET_FILTER`;\r\n\r\nexport const defaultFilter = {};\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n  filter: defaultFilter,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_PROFILES:\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n      };\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getProfiles = (profiles, data, ranking) => {\r\n  const addHistoryData = profile => {\r\n    const id = _.values(profile.resultsByGrade)[0][0].result.playerId;\r\n    profile.ratingHistory =\r\n      _.flow(\r\n        _.find({ id }),\r\n        _.get('ratingHistory')\r\n      )(ranking) || [];\r\n    profile.rankingHistory =\r\n      _.flow(\r\n        _.find({ id }),\r\n        _.get('history'),\r\n        history =>\r\n          history && [...history, { place: _.get('place', _.last(history)), date: Date.now() }]\r\n      )(ranking) || [];\r\n    return profile;\r\n  };\r\n  return _.mapValues(addHistoryData, profiles);\r\n};\r\n\r\nexport const getInitialProfiles = (data, tracklist) => {\r\n  // console.log(tracklist);\r\n  let profiles = {};\r\n  const initializeProfile = id => {\r\n    const resultsByLevel = _.fromPairs(Array.from({ length: 28 }).map((x, i) => [i + 1, []]));\r\n    profiles[id] = { resultsByGrade: {}, resultsByLevel, lastResultDate: null };\r\n  };\r\n  const addResultData = (chart, result) => {\r\n    if (!profiles[result.playerId]) {\r\n      initializeProfile(result.playerId);\r\n    }\r\n    const profile = profiles[result.playerId];\r\n    profile.resultsByGrade[result.grade] = [\r\n      ...(profile.resultsByGrade[result.grade] || []),\r\n      { result, chart },\r\n    ];\r\n    const resultsOfThisPlayer = _.filter({ playerId: result.playerId }, chart.results);\r\n    if (resultsOfThisPlayer[0] === result) {\r\n      // Only apply one result\r\n      let bestGradeResult = result;\r\n      if (resultsOfThisPlayer.length > 1) {\r\n        bestGradeResult = resultsOfThisPlayer.sort(\r\n          (a, b) => GRADES.indexOf(b.grade) - GRADES.indexOf(a.grade)\r\n        )[0];\r\n      }\r\n      profile.resultsByLevel[chart.chartLevel] = [\r\n        ...(profile.resultsByLevel[chart.chartLevel] || []),\r\n        { result: bestGradeResult, chart },\r\n      ];\r\n    }\r\n    if (result.isExactDate && profile.lastResultDate < result.dateObject) {\r\n      profile.lastResultDate = result.dateObject;\r\n    }\r\n  };\r\n  data.forEach(chart => {\r\n    chart.results.forEach(result => {\r\n      addResultData(chart, result);\r\n    });\r\n  });\r\n\r\n  const getBonusForLevel = level => (30 * (1 + 2 ** (level / 4))) / 11;\r\n  const getMinimumNumber = totalCharts =>\r\n    Math.round(\r\n      Math.min(totalCharts, 1 + totalCharts / 20 + Math.sqrt(Math.max(totalCharts - 1, 0)) * 0.7)\r\n    );\r\n\r\n  profiles = _.mapValues(profile => {\r\n    const neededGrades = ['A', 'A+', 'S', 'SS', 'SSS'];\r\n    profile.progress = {\r\n      double: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n      single: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n    };\r\n    const gradeIncrementMap = {\r\n      SSS: ['SS', 'S', 'A+', 'A'],\r\n      SS: ['SS', 'S', 'A+', 'A'],\r\n      S: ['S', 'A+', 'A'],\r\n      'A+': ['A+', 'A'],\r\n      A: ['A'],\r\n    };\r\n    const incrementLevel = (l, g, isS) => {\r\n      const prog = isS ? profile.progress.single : profile.progress.double;\r\n      prog[g][l] = prog[g][l] ? prog[g][l] + 1 : 1;\r\n    };\r\n    _.keys(profile.resultsByLevel).forEach(level => {\r\n      profile.resultsByLevel[level].forEach(res => {\r\n        const thisGrade = res.result.grade;\r\n        const thisPlayerId = res.result.playerId;\r\n        const otherResults = res.chart.results.filter(r => r.playerId === thisPlayerId);\r\n        if (otherResults.length > 1) {\r\n          const sortedResults = otherResults.sort(\r\n            (a, b) => neededGrades.indexOf(b.grade) - neededGrades.indexOf(a.grade)\r\n          );\r\n          if (sortedResults[0].grade !== thisGrade) {\r\n            return; // Don't do anything when we have a different result with better grade\r\n          }\r\n        }\r\n        const gradeIncArray = gradeIncrementMap[thisGrade];\r\n        if (gradeIncArray) {\r\n          gradeIncArray.forEach(gradeInc => {\r\n            incrementLevel(level, gradeInc, res.chart.chartType === 'S');\r\n          });\r\n        }\r\n      });\r\n    });\r\n    // console.log(profile.progress);\r\n    ['single', 'double'].forEach(chartType => {\r\n      profile.progress[`${chartType}-bonus`] = 0;\r\n      _.keys(profile.progress[chartType]).forEach(grade => {\r\n        profile.progress[chartType][`${grade}-bonus`] = 0;\r\n        _.keys(profile.progress[chartType][grade]).forEach(level => {\r\n          const number = profile.progress[chartType][grade][level];\r\n          const totalCharts = tracklist.data[`${chartType}sLevels`][level];\r\n          const minimumNumber = getMinimumNumber(totalCharts);\r\n          const bonusCoefficientNumber = Math.min(1, number / minimumNumber);\r\n          const rawBonus = getBonusForLevel(level);\r\n          const bonus = rawBonus * bonusCoefficientNumber;\r\n          profile.progress[chartType][grade][`${level}-bonus`] = bonus;\r\n          profile.progress[chartType][grade][`${level}-bonus-coef`] = bonusCoefficientNumber;\r\n          profile.progress[chartType][grade][`${level}-min-number`] = minimumNumber;\r\n          profile.progress[chartType][grade][`${level}-achieved-number`] = number;\r\n          if (bonus >= profile.progress[chartType][`${grade}-bonus`]) {\r\n            profile.progress[chartType][`${grade}-bonus`] = bonus;\r\n            profile.progress[chartType][`${grade}-bonus-level`] = level;\r\n            profile.progress[chartType][`${grade}-bonus-level-coef`] = bonusCoefficientNumber;\r\n            profile.progress[chartType][`${grade}-bonus-level-min-number`] = minimumNumber;\r\n            profile.progress[chartType][`${grade}-bonus-level-achieved-number`] = number;\r\n          }\r\n        });\r\n        profile.progress[`${chartType}-bonus`] += profile.progress[chartType][`${grade}-bonus`];\r\n      });\r\n    });\r\n    profile.progress.bonus = profile.progress['double-bonus'] + profile.progress['single-bonus'];\r\n    // console.log(profile.progress);\r\n    return profile;\r\n  }, profiles);\r\n  // const formatProfile = profile => {\r\n  //   // console.log(profile);\r\n  //   // const id = _.values(profile.resultsByGrade)[0][0].result.playerId;\r\n  //   const name = _.values(profile.resultsByGrade)[0][0].result.nickname;\r\n  //   return `${name} - ${profile.progress.bonus}\r\n  // S: A (${profile.progress.single['A-bonus'].toFixed(1)}) A+ (${profile.progress.single[\r\n  //     'A+-bonus'\r\n  //   ].toFixed(1)}) S (${profile.progress.single['S-bonus'].toFixed(\r\n  //     1\r\n  //   )}) SS (${profile.progress.single['SS-bonus'].toFixed(1)})\r\n  // D: A (${profile.progress.double['A-bonus'].toFixed(1)}) A+ (${profile.progress.double[\r\n  //     'A+-bonus'\r\n  //   ].toFixed(1)}) S (${profile.progress.double['S-bonus'].toFixed(\r\n  //     1\r\n  //   )}) SS (${profile.progress.double['SS-bonus'].toFixed(1)})`;\r\n  // };\r\n  // console.log(\r\n  //   _.join(\r\n  //     '\\n',\r\n  //     _.map(formatProfile, _.values(profiles).sort((a, b) => b.progress.bonus - a.progress.bonus))\r\n  //   )\r\n  // );\r\n  return profiles;\r\n};\r\n\r\nexport const setProfiles = data => ({\r\n  type: SET_PROFILES,\r\n  data,\r\n});\r\n\r\nexport const setProfilesFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\n\r\nexport const resetProfilesFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n\r\nexport const calculateProfileData = profileId => (dispatch, getState) => {};\r\n","export const HOST = 'https://vps720616.ovh.net:5000';\r\n","import _ from 'lodash/fp';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\n\r\nimport { getRankings, setRankings } from './ranking';\r\nimport { getProfiles, getInitialProfiles, setProfiles } from './profiles';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TOP/LOADING`;\r\nconst SUCCESS = `TOP/SUCCESS`;\r\nconst ERROR = `TOP/ERROR`;\r\nconst SET_FILTER = `TOP/SET_FILTER`;\r\nconst RESET_FILTER = `TOP/RESET_FILTER`;\r\n\r\nexport const defaultFilter = { showRank: true, showRankAndNorank: true };\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n  filter: defaultFilter,\r\n};\r\n\r\nconst preprocessData = data =>\r\n  _.flow(\r\n    _.get('top'),\r\n    _.values,\r\n    _.map(item => {\r\n      const fullRes = _.find(\r\n        r => _.every(_.isNumber, [r.perfects, r.greats, r.goods, r.bads, r.misses]),\r\n        item.results\r\n      );\r\n      const stepSum =\r\n        fullRes &&\r\n        [fullRes.perfects, fullRes.greats, fullRes.goods, fullRes.bads, fullRes.misses].reduce(\r\n          (sum, n) => sum + n,\r\n          0\r\n        );\r\n\r\n      return {\r\n        song: item.track,\r\n        chartLabel: item.chart_label,\r\n        chartLevel: item.chart_label.slice(1),\r\n        chartType: item.chart_label.slice(0, 1),\r\n        mix: item.mix,\r\n        results: item.results.map((res, index) => {\r\n          let resultInfoOverrides = {};\r\n          if (stepSum) {\r\n            const infos = [res.perfects, res.greats, res.goods, res.bads, res.misses];\r\n            let fixableIndex = -1;\r\n            let localStepSum = 0;\r\n            const canFix =\r\n              infos.filter((numb, index) => {\r\n                if (!_.isNumber(numb)) {\r\n                  fixableIndex = index;\r\n                  return true;\r\n                }\r\n                localStepSum += numb;\r\n                return false;\r\n              }).length === 1;\r\n            if (canFix) {\r\n              resultInfoOverrides[['perfect', 'great', 'good', 'bad', 'miss'][fixableIndex]] =\r\n                stepSum - localStepSum;\r\n            }\r\n          }\r\n          return {\r\n            playerId: res.player,\r\n            nickname: data.players[res.player].nickname,\r\n            nicknameArcade: data.players[res.player].arcade_name,\r\n            originalChartMix: res.originalChartMix,\r\n            originalChartLabel: res.originalChartLabel,\r\n            originalScore: res.originalScore,\r\n            date: res.gained,\r\n            dateObject: new Date(res.gained),\r\n            grade: res.grade,\r\n            isExactDate: !!res.exact_gain_date,\r\n            score: res.score,\r\n            scoreIncrease: res.score_increase,\r\n            calories: res.calories && res.calories / 1000,\r\n            perfect: res.perfects,\r\n            great: res.greats,\r\n            good: res.goods,\r\n            bad: res.bads,\r\n            miss: res.misses,\r\n            combo: res.max_combo,\r\n            mods: res.mods_list,\r\n            isRank: !!res.rank_mode,\r\n            isHJ: (res.mods_list || '').split(' ').includes('HJ'),\r\n            ...resultInfoOverrides,\r\n          };\r\n        }),\r\n      };\r\n    }),\r\n    _.map(song => {\r\n      return {\r\n        ...song,\r\n        latestScoreDate: song.results.reduce(\r\n          (latest, current) => (current.date > latest ? current.date : latest),\r\n          song.results[0].date\r\n        ),\r\n        results: song.results.map(res => {\r\n          const perfects = (Math.sqrt(res.perfect) * _.toInteger(song.chartLevel)) / 2;\r\n          const acc = perfects\r\n            ? Math.floor(\r\n                ((perfects * 100 + res.great * 60 + res.good * 30 + res.miss * -20) /\r\n                  (perfects + res.great + res.good + res.bad + res.miss)) *\r\n                  100\r\n              ) / 100\r\n            : null;\r\n          const accRaw = res.perfect\r\n            ? Math.floor(\r\n                ((res.perfect * 100 + res.great * 60 + res.good * 30 + res.miss * -20) /\r\n                  (res.perfect + res.great + res.good + res.bad + res.miss)) *\r\n                  100\r\n              ) / 100\r\n            : null;\r\n          return {\r\n            ...res,\r\n            accuracy: acc < 0 ? 0 : acc === 100 ? acc : acc && +acc.toFixed(2),\r\n            accuracyRaw: accRaw,\r\n            hasRankScore: _.some({ playerId: res.playerId, isRank: true }, song.results),\r\n          };\r\n        }),\r\n      };\r\n    }),\r\n    _.orderBy(['latestScoreDate', 'song', 'chartLevel'], ['desc', 'asc', 'desc'])\r\n  )(data);\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n        players: action.players,\r\n      };\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTopScores = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await fetchJson({\r\n        url: `${HOST}/top/v2`,\r\n      });\r\n      // const data = jsonData;\r\n      const processedData = preprocessData(data);\r\n      const initialProfiles = getInitialProfiles(processedData, getState().tracklist);\r\n      const rankings = getRankings(processedData, data, initialProfiles);\r\n      dispatch({\r\n        type: SUCCESS,\r\n        data: processedData,\r\n        players: _.flow(\r\n          _.toPairs,\r\n          _.map(([id, player]) => ({ ...player, id: _.toInteger(id) }))\r\n        )(data.players),\r\n      });\r\n      dispatch(setRankings(rankings));\r\n      const profiles = getProfiles(initialProfiles, processedData, rankings);\r\n      dispatch(setProfiles(profiles));\r\n      return processedData;\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\nexport const resetFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\n\r\nimport { setFilter } from 'reducers/top';\r\n\r\nconst SELECT_PRESET = `PRESETS/SELECT_PRESET`;\r\nconst LOAD_PRESETS = `PRESETS/LOAD_PRESETS`;\r\nconst LOADING_START = `PRESETS/LOADING_START`;\r\nconst LOADING_END = `PRESETS/LOADING_END`;\r\n\r\nconst initialState = {\r\n  presets: [],\r\n  currentPreset: null,\r\n  isLoading: false,\r\n};\r\n\r\nconst itemToOption = item =>\r\n  item && {\r\n    ...item,\r\n    label: item.name,\r\n    value: item.name,\r\n  };\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_PRESETS:\r\n      const currentPreset = _.find({ name: _.get('name', state.currentPreset) }, action.presets);\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(currentPreset) || null,\r\n        presets: _.map(itemToOption, action.presets),\r\n      };\r\n    case SELECT_PRESET:\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(action.currentPreset),\r\n      };\r\n    case LOADING_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case LOADING_END:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst reloadPresets = presets => ({ type: LOAD_PRESETS, presets: presets || [] });\r\n\r\nconst startLoading = () => ({\r\n  type: LOADING_START,\r\n});\r\n\r\nconst endLoading = () => ({\r\n  type: LOADING_END,\r\n});\r\n\r\nexport const selectPreset = currentPreset => ({\r\n  type: SELECT_PRESET,\r\n  currentPreset,\r\n});\r\n\r\nexport const loadPresets = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    dispatch(reloadPresets(presets));\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const savePreset = name => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const { filter } = getState().top;\r\n    const newPreset = { name, filter };\r\n    if (!_.some({ name }, presets)) {\r\n      const newPresets = [...(presets || []), newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      dispatch(selectPreset(newPreset));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    } else if (window.confirm('Preset with this name already exists, replace it?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      const newPresets = [...withoutOldPreset, newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const openPreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const currentPreset = getState().presets.currentPreset;\r\n  const name = _.get('name', currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = name && _.find({ name }, presets);\r\n    if (preset) {\r\n      dispatch(selectPreset(currentPreset));\r\n      dispatch(setFilter(currentPreset.filter));\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const deletePreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const name = _.get('name', getState().presets.currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = _.find({ name }, presets);\r\n    if (preset && window.confirm('Are you sure you want to delete selected preset?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      dispatch(reloadPresets(withoutOldPreset));\r\n      localForage.setItem('filterPresets', withoutOldPreset);\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaLayerGroup, FaFolderOpen, FaSave, FaPlus, FaTrashAlt } from 'react-icons/fa';\r\nimport Select from 'react-select';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport Input from 'components/Shared/Input/Input';\r\n\r\nimport { loadPresets, savePreset, selectPreset, openPreset, deletePreset } from 'reducers/presets';\r\n\r\nconst overlayItem = (\r\n  <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n    <FaLayerGroup />\r\n    пресеты\r\n  </button>\r\n);\r\n\r\nconst noPresetsMessage = () => 'пусто';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ...state.presets,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  loadPresets,\r\n  savePreset,\r\n  openPreset,\r\n  deletePreset,\r\n  selectPreset,\r\n};\r\n\r\nclass PresetsControl extends React.Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    this.props.loadPresets();\r\n  }\r\n\r\n  onChangeSelection = selected => {\r\n    this.props.selectPreset(selected.name);\r\n  };\r\n\r\n  onRewritePreset = () => {\r\n    const { currentPreset } = this.props;\r\n    this.props.savePreset(currentPreset.name);\r\n  };\r\n\r\n  onSavePreset = () => {\r\n    const { name } = this.state;\r\n    this.props.savePreset(name);\r\n    this.setState({ isAddingNew: false });\r\n  };\r\n\r\n  render() {\r\n    const { presets, currentPreset, isLoading } = this.props;\r\n    const { name, isAddingNew } = this.state;\r\n    return (\r\n      <div>\r\n        <Overlay overlayItem={overlayItem}>\r\n          <div className=\"presets-control-overlay\">\r\n            <Select\r\n              className=\"select _margin-bottom\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"пресеты...\"\r\n              options={presets}\r\n              value={currentPreset}\r\n              onChange={this.props.selectPreset}\r\n              noOptionsMessage={noPresetsMessage}\r\n            />\r\n            {currentPreset && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.props.openPreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaFolderOpen /> открыть\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.onRewritePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaSave /> перезаписать\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon\"\r\n                  onClick={this.props.deletePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaTrashAlt /> удалить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {!isAddingNew && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left _self-align-end\"\r\n                  onClick={() => this.setState({ isAddingNew: true })}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaPlus /> добавить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {isAddingNew && (\r\n              <div className=\"adding-new _margin-bottom\">\r\n                <Input\r\n                  value={name}\r\n                  placeholder=\"имя пресета...\"\r\n                  className=\"form-control\"\r\n                  onChange={name => this.setState({ name })}\r\n                />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={this.onSavePreset}\r\n                  disabled={!name || isLoading}\r\n                >\r\n                  <FaSave /> сохранить\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={() => this.setState({ isAddingNew: false })}\r\n                  disabled={isLoading}\r\n                >\r\n                  отмена\r\n                </button>\r\n              </div>\r\n            )}\r\n            {/* <div>\r\n              <Toggle\r\n                checked={false}\r\n                onToggle={active => {\r\n                  localForage.setItem('showTabs', active);\r\n                }}\r\n              >\r\n                показывать табы с пресетами\r\n              </Toggle>\r\n            </div> */}\r\n          </div>\r\n        </Overlay>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PresetsControl);\r\n","import React from 'react';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport moment from 'moment';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\n\r\nconst timeStyle = {\r\n  flavour: 'long',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nexport const tooltipFormatter = date => date.toLocaleDateString();\r\nexport const tooltipFormatterForBests = date => (\r\n  <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n    <div>точная дата взятия неизвестна</div>\r\n    <div>скор был записан с my best или machine best</div>\r\n    <div>дата записи: {date.toLocaleDateString()}</div>\r\n  </div>\r\n);\r\n\r\nexport const getTimeAgo = date => {\r\n  const dayDiff = moment()\r\n    .startOf('day')\r\n    .diff(moment(date).startOf('day'), 'days');\r\n  return dayDiff === 0 ? 'сегодня' : dayDiff === 1 ? 'вчера' : timeAgo.format(date, timeStyle);\r\n};\r\n","export const colorsArray = [\r\n  '#4DB3FF',\r\n  '#80B300',\r\n  '#FF6655',\r\n  '#FF99E6',\r\n  '#33FFCC',\r\n  '#e633c8',\r\n  '#dbe812',\r\n  '#FF1A66',\r\n  '#991AFF',\r\n  '#E6B333',\r\n  '#1AB399',\r\n  '#4D8066',\r\n  '#CC9999',\r\n  '#00E680',\r\n  '#809980',\r\n  '#E6FF80',\r\n  '#1AFF33',\r\n  '#999933',\r\n  '#E6331A',\r\n  '#CCCC00',\r\n  '#66E64D',\r\n  '#4D80CC',\r\n  '#9900B3',\r\n  '#4DB380',\r\n  '#FF4D4D',\r\n];\r\n","import _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport matchSorter from 'match-sorter';\r\n\r\nimport { SORT, CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nexport const playersSelector = createSelector(\r\n  state => state.top.players,\r\n  _.flow(\r\n    _.toPairs,\r\n    _.map(([id, { nickname, arcade_name }]) => ({\r\n      label: `${nickname} (${arcade_name})`,\r\n      value: nickname,\r\n    })),\r\n    _.sortBy(it => _.toLower(it.label))\r\n  )\r\n);\r\n\r\nconst filterCharts = (filter, rows) => {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filter);\r\n  const type = _.getOr(null, 'type', filter);\r\n\r\n  const filtered = _.flow(\r\n    _.filter(row => {\r\n      return (\r\n        row.chartLevel >= range[0] &&\r\n        row.chartLevel <= range[1] &&\r\n        (!type || type === row.chartType)\r\n      );\r\n    })\r\n  )(rows);\r\n  return filtered;\r\n};\r\n\r\nconst getFilteredData = (data, filter) => {\r\n  // const start = performance.now();\r\n  const names = _.map('value', filter.players);\r\n  const namesOr = _.map('value', filter.playersOr);\r\n  const namesNot = _.map('value', filter.playersNot);\r\n  const sortingType = _.get('value', filter.sortingType);\r\n  const protagonist = _.get('value', filter.protagonist);\r\n  const excludeAntagonists = _.map('value', filter.excludeAntagonists);\r\n\r\n  const defaultSorting = [_.orderBy(['latestScoreDate'], ['desc'])];\r\n  const newScoresProtagonistSorting = !protagonist\r\n    ? defaultSorting\r\n    : [\r\n        _.orderBy(\r\n          [\r\n            song =>\r\n              _.max(\r\n                _.map(\r\n                  res => (res.nickname === protagonist ? res.dateObject.getTime() : 0),\r\n                  song.results\r\n                )\r\n              ),\r\n          ],\r\n          ['desc']\r\n        ),\r\n      ];\r\n  const protagonistSorting = [\r\n    _.filter(row => _.map('nickname', row.results).includes(protagonist)),\r\n    _.map(row => {\r\n      const protIndex = _.findIndex({ nickname: protagonist }, row.results);\r\n      const protScore = row.results[protIndex].score;\r\n      const enemies = _.flow([\r\n        _.take(protIndex),\r\n        _.uniqBy('nickname'),\r\n        _.remove(res => excludeAntagonists.includes(res.nickname) || res.score === protScore),\r\n      ])(row.results);\r\n      const distance = Math.sqrt(\r\n        _.reduce((dist, enemy) => dist + (enemy.score / protScore - 0.99) ** 2, 0, enemies)\r\n      );\r\n      return {\r\n        ...row,\r\n        distanceFromProtagonist: distance,\r\n      };\r\n    }),\r\n    _.orderBy(['distanceFromProtagonist'], ['desc']),\r\n  ];\r\n  const getScoreSorting = direction => [\r\n    _.filter(row => _.map('nickname', row.results).includes(protagonist)),\r\n    _.orderBy(\r\n      [\r\n        row => {\r\n          return _.getOr(\r\n            direction === 'asc' ? Infinity : -Infinity,\r\n            'ratingDiff',\r\n            _.find({ nickname: protagonist }, row.results)\r\n          );\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const sortingFunctions =\r\n    {\r\n      [SORT.DEFAULT]: defaultSorting,\r\n      [SORT.NEW_SCORES_PLAYER]: newScoresProtagonistSorting,\r\n      [SORT.PROTAGONIST]: protagonistSorting,\r\n      [SORT.RANK_ASC]: getScoreSorting('asc'),\r\n      [SORT.RANK_DESC]: getScoreSorting('desc'),\r\n    }[sortingType] || defaultSorting;\r\n\r\n  const result = _.flow(\r\n    _.compact([\r\n      filter.chartRange && (items => filterCharts(filter.chartRange, items)),\r\n      !filter.showRank &&\r\n        _.map(row => ({ ...row, results: _.filter(res => !res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        filter.showOnlyRank &&\r\n        _.map(row => ({ ...row, results: _.filter(res => res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        !filter.showOnlyRank &&\r\n        !filter.showRankAndNorank &&\r\n        _.map(row => {\r\n          const occuredNames = [];\r\n          return {\r\n            ...row,\r\n            results: _.filter(res => {\r\n              const alreadyOccured = occuredNames.includes(res.nickname);\r\n              occuredNames.push(res.nickname);\r\n              return !alreadyOccured;\r\n            }, row.results),\r\n          };\r\n        }),\r\n      (names.length || namesOr.length || namesNot.length) &&\r\n        _.filter(row => {\r\n          const rowNames = _.map('nickname', row.results);\r\n          return (\r\n            (!names.length || _.every(name => rowNames.includes(name), names)) &&\r\n            (!namesOr.length || _.some(name => rowNames.includes(name), namesOr)) &&\r\n            (!namesNot.length || !_.some(name => rowNames.includes(name), namesNot))\r\n          );\r\n        }),\r\n      _.filter(row => _.size(row.results)),\r\n      ...sortingFunctions,\r\n      filter.song && (items => matchSorter(items, filter.song, { keys: ['song'] })),\r\n    ])\r\n  )(data);\r\n  // console.log('Elapsed:', performance.now() - start);\r\n  return result;\r\n};\r\n\r\nexport const filteredDataSelector = createSelector(\r\n  state => state.top.data,\r\n  state => state.top.filter,\r\n  getFilteredData\r\n);\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash/fp';\r\nimport Select from 'react-select';\r\nimport classNames from 'classnames';\r\nimport numeral from 'numeral';\r\nimport localForage from 'localforage';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport {\r\n  FaRedoAlt,\r\n  FaExclamationTriangle,\r\n  FaSearch,\r\n  FaYoutube,\r\n  FaAngleDoubleUp,\r\n} from 'react-icons/fa';\r\n\r\n// styles\r\nimport 'react-responsive-ui/style.css';\r\nimport './leaderboard.scss';\r\n\r\n// components\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport CollapsibleBar from 'components/Shared/CollapsibleBar';\r\nimport ChartFilter from './ChartFilter';\r\nimport PresetsControl from './PresetsControl';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\nimport { SORT } from 'constants/leaderboard';\r\nimport { DEBUG } from 'constants/env';\r\n\r\n// reducers\r\nimport { fetchTopScores, setFilter, resetFilter, defaultFilter } from 'reducers/top';\r\nimport { selectPreset, openPreset } from 'reducers/presets';\r\n\r\n// utils\r\nimport { tooltipFormatter, tooltipFormatterForBests, getTimeAgo } from 'utils/leaderboards';\r\nimport { colorsArray } from 'utils/colors';\r\nimport { playersSelector, filteredDataSelector } from 'reducers/selectors';\r\n\r\n// code\r\nconst sortingOptions = [\r\n  {\r\n    label: 'от новых скоров',\r\n    value: SORT.DEFAULT,\r\n  },\r\n  {\r\n    label: 'от новых скоров конкретного игрока',\r\n    value: SORT.NEW_SCORES_PLAYER,\r\n  },\r\n  // {\r\n  //   label: 'отставанию от остальных',\r\n  //   value: SORT.PROTAGONIST,\r\n  // },\r\n  // ...(DEBUG\r\n  //   ? [\r\n  {\r\n    label: 'от худших результатов',\r\n    value: SORT.RANK_ASC,\r\n  },\r\n  {\r\n    label: 'от лучших результатов',\r\n    value: SORT.RANK_DESC,\r\n  },\r\n  //   ]\r\n  // : []),\r\n];\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    players: playersSelector(state),\r\n    filteredData: filteredDataSelector(state),\r\n    data: state.top.data,\r\n    filter: state.top.filter,\r\n    error: state.top.error,\r\n    isLoading: state.top.isLoading,\r\n    presets: state.presets.presets,\r\n    currentPreset: state.presets.currentPreset,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopScores,\r\n  setFilter,\r\n  resetFilter,\r\n  selectPreset,\r\n  openPreset,\r\n};\r\n\r\nclass Leaderboard extends Component {\r\n  static propTypes = {\r\n    match: toBe.object,\r\n    data: toBe.array,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  state = { showItemsCount: 20 };\r\n\r\n  setFilter = _.curry((name, value) => {\r\n    const filter = { ...this.props.filter, [name]: value };\r\n    this.props.setFilter(filter);\r\n    localForage.setItem('filter', filter);\r\n  });\r\n\r\n  resetFilter = () => {\r\n    this.props.resetFilter();\r\n    localForage.setItem('filter', defaultFilter);\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchTopScores();\r\n  };\r\n\r\n  renderSimpleSearch() {\r\n    const { isLoading, filter } = this.props;\r\n    return (\r\n      <div className=\"simple-search\">\r\n        <div className=\"song-name _margin-right _margin-bottom\">\r\n          <Input\r\n            value={filter.song || ''}\r\n            placeholder=\"название песни...\"\r\n            className=\"form-control\"\r\n            onChange={this.setFilter('song')}\r\n          />\r\n        </div>\r\n        <div className=\"chart-range _margin-right _margin-bottom\">\r\n          <ChartFilter filterValue={filter.chartRange} onChange={this.setFilter('chartRange')} />\r\n        </div>\r\n        <div className=\"_flex-fill\" />\r\n        <div className=\"_flex-row _margin-bottom\">\r\n          <PresetsControl />\r\n          <button className=\"btn btn-sm btn-dark btn-icon _margin-right\" onClick={this.resetFilter}>\r\n            <FaRedoAlt /> сбросить фильтры\r\n          </button>\r\n          <button\r\n            disabled={isLoading}\r\n            className=\"btn btn-sm btn-dark btn-icon\"\r\n            onClick={this.onRefresh}\r\n          >\r\n            <FaSearch /> обновить\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFilters() {\r\n    const { players, filter } = this.props;\r\n\r\n    return (\r\n      <div className=\"filters\">\r\n        <div className=\"people-filters\">\r\n          <label className=\"label\">показывать чарты, которые сыграл:</label>\r\n          <div className=\"players-block\">\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">каждый из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'players', filter)}\r\n                onChange={this.setFilter('players')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и хоть один из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersOr', filter)}\r\n                onChange={this.setFilter('playersOr')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и никто из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersNot', filter)}\r\n                onChange={this.setFilter('playersNot')}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Toggle\r\n            checked={_.getOr(false, 'showRank', filter)}\r\n            onChange={this.setFilter('showRank')}\r\n          >\r\n            показывать скоры на ранке\r\n          </Toggle>\r\n        </div>\r\n        {_.get('showRank', filter) && (\r\n          <>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showOnlyRank', filter)}\r\n                onChange={value => {\r\n                  this.setFilter('showOnlyRank', value);\r\n                  if (_.get('showRankAndNorank', filter)) {\r\n                    this.setFilter('showRankAndNorank', false);\r\n                  }\r\n                }}\r\n              >\r\n                <strong>только</strong> на ранке\r\n              </Toggle>\r\n            </div>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showRankAndNorank', filter)}\r\n                onChange={value => {\r\n                  this.setFilter('showRankAndNorank', value);\r\n                  if (_.get('showOnlyRank', filter)) {\r\n                    this.setFilter('showOnlyRank', false);\r\n                  }\r\n                }}\r\n              >\r\n                показывать лучшие скоры с ранком и без\r\n              </Toggle>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSortings() {\r\n    const { players, filter } = this.props;\r\n    return (\r\n      <div className=\"sortings\">\r\n        <div>\r\n          <label className=\"label\">сортировка:</label>\r\n          <Select\r\n            placeholder=\"выберите сортировку\"\r\n            className=\"select\"\r\n            classNamePrefix=\"select\"\r\n            isClearable={false}\r\n            options={sortingOptions}\r\n            value={_.getOr(sortingOptions[0], 'sortingType', filter)}\r\n            onChange={this.setFilter('sortingType')}\r\n          />\r\n        </div>\r\n        {[SORT.PROTAGONIST, SORT.RANK_ASC, SORT.RANK_DESC, SORT.NEW_SCORES_PLAYER].includes(\r\n          _.get('sortingType.value', filter)\r\n        ) && (\r\n          <div>\r\n            <label className=\"label\">игрок:</label>\r\n            <Select\r\n              className={classNames('select players', {\r\n                'red-border': !_.get('protagonist', filter),\r\n              })}\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              value={_.getOr(null, 'protagonist', filter)}\r\n              onChange={this.setFilter('protagonist')}\r\n            />\r\n          </div>\r\n        )}\r\n        {[SORT.PROTAGONIST].includes(_.get('sortingType.value', filter)) && (\r\n          <div>\r\n            <label className=\"label\">не учитывать в сравнении:</label>\r\n            <Select\r\n              closeMenuOnSelect={false}\r\n              className=\"select players\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              isMulti\r\n              value={_.getOr([], 'excludeAntagonists', filter)}\r\n              onChange={this.setFilter('excludeAntagonists')}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, filteredData, error, filter } = this.props;\r\n    const { showItemsCount } = this.state;\r\n    const canShowMore = filteredData.length > showItemsCount;\r\n    const visibleData = _.slice(0, showItemsCount, filteredData);\r\n\r\n    const showProtagonistRatingChange = [SORT.PROTAGONIST, SORT.RANK_ASC, SORT.RANK_DESC].includes(\r\n      _.get('sortingType.value', filter)\r\n    );\r\n    const highlightProtagonist = [\r\n      SORT.PROTAGONIST,\r\n      SORT.RANK_ASC,\r\n      SORT.RANK_DESC,\r\n      SORT.NEW_SCORES_PLAYER,\r\n    ].includes(_.get('sortingType.value', filter));\r\n    const protagonistName = _.get('protagonist.value', filter);\r\n    const uniqueSelectedNames = _.slice(\r\n      0,\r\n      colorsArray.length,\r\n      _.uniq(\r\n        _.compact([\r\n          highlightProtagonist && protagonistName,\r\n          ..._.map('value', filter.players),\r\n          ..._.map('value', filter.playersOr),\r\n        ])\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div className=\"leaderboard-page\">\r\n        <div className=\"content\">\r\n          <div className=\"search-block\">\r\n            {this.renderSimpleSearch()}\r\n            <CollapsibleBar title=\"фильтры\">{this.renderFilters()}</CollapsibleBar>\r\n            <CollapsibleBar title=\"сортировка\">{this.renderSortings()}</CollapsibleBar>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!!this.props.presets.length && (\r\n            <div className=\"presets-buttons\">\r\n              <span>пресеты:</span>\r\n              {this.props.presets.map(preset => (\r\n                <ToggleButton\r\n                  text={preset.name}\r\n                  className=\"btn btn-sm btn-dark _margin-right\"\r\n                  active={_.get('filter', preset) === this.props.filter}\r\n                  onToggle={() => {\r\n                    this.props.selectPreset(preset);\r\n                    this.props.openPreset();\r\n                  }}\r\n                ></ToggleButton>\r\n              ))}\r\n            </div>\r\n          )}\r\n          <div className=\"top-list\">\r\n            {_.isEmpty(filteredData) && !isLoading && (error ? error.message : 'ничего не найдено')}\r\n            {!isLoading &&\r\n              visibleData.map((chart, chartIndex) => {\r\n                let topPlace = 1;\r\n                const occuredNicknames = [];\r\n                const results = chart.results.map((res, index) => {\r\n                  const isSecondOccurenceInResults = occuredNicknames.includes(res.nickname);\r\n                  occuredNicknames.push(res.nickname);\r\n                  if (index === 0) {\r\n                    topPlace = 1;\r\n                  } else if (\r\n                    !isSecondOccurenceInResults &&\r\n                    res.score !== _.get([index - 1, 'score'], chart.results)\r\n                  ) {\r\n                    topPlace += 1;\r\n                  }\r\n                  return {\r\n                    ...res,\r\n                    topPlace,\r\n                    isSecondOccurenceInResults,\r\n                  };\r\n                });\r\n                return (\r\n                  <div className=\"song-block\" key={chart.song + chart.chartLabel}>\r\n                    <div className=\"song-name\">\r\n                      <div\r\n                        className={classNames('chart-name', {\r\n                          single: chart.chartType === 'S',\r\n                        })}\r\n                      >\r\n                        <span className=\"chart-letter\">{chart.chartType}</span>\r\n                        <span className=\"chart-number\">{chart.chartLevel}</span>\r\n                      </div>\r\n                      <div>{chart.song}</div>\r\n                      <div className=\"youtube-link\">\r\n                        <a\r\n                          href={`https://youtube.com/results?search_query=${chart.song\r\n                            .replace(/ /g, '+')\r\n                            .replace(/-/g, '')}+${chart.chartLabel}`}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          <FaYoutube />\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"charts\">\r\n                      <div className=\"chart\">\r\n                        <div className=\"results\">\r\n                          <table>\r\n                            {chartIndex === 0 && (\r\n                              <thead>\r\n                                <tr>\r\n                                  <th className=\"place\"></th>\r\n                                  <th className=\"nickname\"></th>\r\n                                  <th className=\"rank\"></th>\r\n                                  <th className=\"score\">score</th>\r\n                                  <th className=\"grade\"></th>\r\n                                  <th className=\"number\">miss</th>\r\n                                  <th className=\"number\">bad</th>\r\n                                  <th className=\"number\">good</th>\r\n                                  <th className=\"number\">great</th>\r\n                                  <th className=\"number\">perfect</th>\r\n                                  <th className=\"combo\">combo</th>\r\n                                  <th className=\"accuracy\">accuracy</th>\r\n                                  <th className=\"date\"></th>\r\n                                </tr>\r\n                              </thead>\r\n                            )}\r\n                            <tbody>\r\n                              {results.map((res, index) => {\r\n                                const nameIndex = uniqueSelectedNames.indexOf(res.nickname);\r\n                                let placeDifference, newIndex;\r\n                                if (res.scoreIncrease && res.date === chart.latestScoreDate) {\r\n                                  const prevScore = res.score - res.scoreIncrease;\r\n                                  newIndex = _.findLastIndex(res => res.score > prevScore, results);\r\n                                  placeDifference = newIndex - index;\r\n                                }\r\n                                return (\r\n                                  <tr\r\n                                    key={res.score + res.nickname}\r\n                                    className={classNames({\r\n                                      empty: !res.isExactDate,\r\n                                      latest: res.date === chart.latestScoreDate,\r\n                                    })}\r\n                                  >\r\n                                    <td className=\"place\">\r\n                                      {res.isSecondOccurenceInResults ? '' : `#${res.topPlace}`}\r\n                                    </td>\r\n                                    <td\r\n                                      className=\"nickname\"\r\n                                      style={\r\n                                        nameIndex > -1\r\n                                          ? { fontWeight: 'bold', color: colorsArray[nameIndex] }\r\n                                          : {}\r\n                                      }\r\n                                    >\r\n                                      {res.nickname}\r\n                                      {!!placeDifference && (\r\n                                        <span className=\"change-holder up\">\r\n                                          <span>{placeDifference}</span>\r\n                                          <FaAngleDoubleUp />\r\n                                        </span>\r\n                                      )}\r\n                                      {DEBUG && (\r\n                                        <span>\r\n                                          {' '}\r\n                                          {res.startingRating &&\r\n                                            Math.round(res.startingRating)}{' '}\r\n                                          {res.ratingDiff && Math.round(res.ratingDiff)}{' '}\r\n                                          {res.ratingDiffLast && Math.round(res.ratingDiffLast)}\r\n                                        </span>\r\n                                      )}\r\n                                      {!DEBUG &&\r\n                                        showProtagonistRatingChange &&\r\n                                        res.nickname === protagonistName &&\r\n                                        res.ratingDiff && (\r\n                                          <span>\r\n                                            {` (${res.ratingDiff > 0 ? '+' : ''}${Math.round(\r\n                                              res.ratingDiff\r\n                                            )})`}\r\n                                          </span>\r\n                                        )}\r\n                                      {_.get('sortingType.value', filter) === SORT.PROTAGONIST &&\r\n                                        res.nickname === protagonistName &&\r\n                                        chart.distanceFromProtagonist > 0 && (\r\n                                          <span className=\"protagonist-diff\">\r\n                                            {' '}\r\n                                            -{(chart.distanceFromProtagonist * 100).toFixed(1)}%\r\n                                          </span>\r\n                                        )}\r\n                                    </td>\r\n                                    <td\r\n                                      className={classNames('judge', {\r\n                                        vj: res.isRank,\r\n                                        hj: res.isHJ,\r\n                                      })}\r\n                                    >\r\n                                      {res.isRank && (\r\n                                        <div className=\"inner\">\r\n                                          {res.isExactDate ? (\r\n                                            'VJ'\r\n                                          ) : (\r\n                                            <Tooltip\r\n                                              content={\r\n                                                <div>\r\n                                                  наличие ранка на этом результате было угадано,\r\n                                                  основываясь на скоре\r\n                                                </div>\r\n                                              }\r\n                                              tooltipClassName=\"timeago-tooltip\"\r\n                                            >\r\n                                              VJ?\r\n                                            </Tooltip>\r\n                                          )}\r\n                                        </div>\r\n                                      )}\r\n                                      {res.isHJ && <div className=\"inner\">HJ</div>}\r\n                                    </td>\r\n                                    <td className=\"score\">\r\n                                      <Overlay\r\n                                        overlayClassName=\"score-overlay-outer\"\r\n                                        overlayItem={\r\n                                          <span className=\"score-span\">\r\n                                            {/* {res.scoreIncrease > res.score * 0.8 && <FaPlus />} */}\r\n                                            {res.scoreIncrease > res.score * 0.8 && '*'}\r\n                                            {numeral(res.score).format('0,0')}\r\n                                          </span>\r\n                                        }\r\n                                        placement=\"top\"\r\n                                      >\r\n                                        <div className=\"score-overlay\">\r\n                                          <div>\r\n                                            <span className=\"_grey\">игрок: </span>\r\n                                            <NavLink\r\n                                              exact\r\n                                              to={routes.profile.getPath({ id: res.playerId })}\r\n                                            >\r\n                                              {res.nickname} ({res.nicknameArcade})\r\n                                            </NavLink>\r\n                                          </div>\r\n                                          {!res.isExactDate && (\r\n                                            <div className=\"warning\">\r\n                                              <FaExclamationTriangle />\r\n                                              рекорд взят с my best. часть данных недоступна\r\n                                            </div>\r\n                                          )}\r\n                                          {res.isExactDate && (\r\n                                            <>\r\n                                              {res.mods && (\r\n                                                <div>\r\n                                                  <span className=\"_grey\">моды: </span>\r\n                                                  {res.mods}\r\n                                                </div>\r\n                                              )}\r\n                                              {res.calories && (\r\n                                                <div>\r\n                                                  <span className=\"_grey\">ккал: </span>\r\n                                                  {res.calories}\r\n                                                </div>\r\n                                              )}\r\n                                              {res.scoreIncrease && (\r\n                                                <div>\r\n                                                  <span className=\"_grey\">прирост: </span>+\r\n                                                  {numeral(res.scoreIncrease).format('0,0')}\r\n                                                </div>\r\n                                              )}\r\n                                              {res.originalChartMix && (\r\n                                                <div>\r\n                                                  <div className=\"warning\">\r\n                                                    <FaExclamationTriangle />\r\n                                                    было сыграно на {res.originalChartMix}\r\n                                                  </div>\r\n                                                  {res.originalChartLabel && (\r\n                                                    <div>\r\n                                                      <span className=\"_grey\">\r\n                                                        оригинальный чарт:{' '}\r\n                                                      </span>\r\n                                                      {res.originalChartLabel}\r\n                                                    </div>\r\n                                                  )}\r\n                                                  {res.originalScore && (\r\n                                                    <div>\r\n                                                      <span className=\"_grey\">\r\n                                                        оригинальный скор:{' '}\r\n                                                      </span>\r\n                                                      {res.originalScore}\r\n                                                    </div>\r\n                                                  )}\r\n                                                </div>\r\n                                              )}\r\n                                              {res.scoreIncrease > res.score * 0.8 && '* сайтрид'}\r\n                                            </>\r\n                                          )}\r\n                                        </div>\r\n                                      </Overlay>\r\n                                    </td>\r\n                                    <td className=\"grade\">\r\n                                      <div className=\"img-holder\">\r\n                                        {res.grade && res.grade !== '?' && (\r\n                                          <img\r\n                                            src={`${process.env.PUBLIC_URL}/grades/${res.grade}.png`}\r\n                                            alt={res.grade}\r\n                                          />\r\n                                        )}\r\n                                        {res.grade === '?' && null}\r\n                                      </div>\r\n                                    </td>\r\n                                    <td className=\"number miss\">{res.miss}</td>\r\n                                    <td className=\"number bad\">{res.bad}</td>\r\n                                    <td className=\"number good\">{res.good}</td>\r\n                                    <td className=\"number great\">{res.great}</td>\r\n                                    <td className=\"number perfect\">{res.perfect}</td>\r\n                                    <td className=\"combo\">\r\n                                      {res.combo}\r\n                                      {res.combo ? 'x' : ''}\r\n                                    </td>\r\n                                    <td className=\"accuracy\">\r\n                                      {res.accuracy}\r\n                                      {res.accuracy ? '%' : ''}\r\n                                    </td>\r\n                                    <td\r\n                                      className={classNames('date', {\r\n                                        latest: res.date === chart.latestScoreDate,\r\n                                      })}\r\n                                    >\r\n                                      <Tooltip\r\n                                        content={\r\n                                          res.isExactDate\r\n                                            ? tooltipFormatter(res.dateObject)\r\n                                            : tooltipFormatterForBests(res.dateObject)\r\n                                        }\r\n                                        tooltipClassName=\"timeago-tooltip\"\r\n                                      >\r\n                                        {getTimeAgo(res.dateObject)}\r\n                                        {res.isExactDate ? '' : '?'}\r\n                                      </Tooltip>\r\n                                    </td>\r\n                                  </tr>\r\n                                );\r\n                              })}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            {!isLoading && canShowMore && (\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() =>\r\n                  this.setState(state => ({ showItemsCount: state.showItemsCount + 10 }))\r\n                }\r\n              >\r\n                show more...\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Leaderboard);\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n// import numeral from 'numeral';\r\nimport classNames from 'classnames';\r\nimport { GiQueenCrown } from 'react-icons/gi';\r\nimport { FaAngleDoubleUp, FaAngleDoubleDown } from 'react-icons/fa';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nconst getGradeImg = grade => (\r\n  <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n);\r\n\r\nexport default function RankingList({ ranking, isLoading }) {\r\n  return (\r\n    <div className=\"ranking-list\">\r\n      {_.isEmpty(ranking) && !isLoading && 'ничего не найдено'}\r\n      {isLoading && <Loader />}\r\n      {!isLoading && (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"place\"></th>\r\n              <th className=\"change\"></th>\r\n              <th className=\"name\">name</th>\r\n              <th className=\"name2\">piu name</th>\r\n              <th className=\"rating\">elo</th>\r\n              <th className=\"rating-change-cell\"></th>\r\n              {/* <th className=\"total-score\">total score</th> */}\r\n              <th className=\"grades sss\">{getGradeImg('SSS')}</th>\r\n              <th className=\"grades ss\">{getGradeImg('SS')}</th>\r\n              <th className=\"grades s\">{getGradeImg('S')}</th>\r\n              <th className=\"grades a\">{getGradeImg('A+')}</th>\r\n              <th className=\"grades b\">{getGradeImg('B')}</th>\r\n              <th className=\"grades c\">{getGradeImg('C')}</th>\r\n              <th className=\"grades d\">{getGradeImg('D')}</th>\r\n              <th className=\"grades f\">{getGradeImg('F')}</th>\r\n              <th className=\"playcount\">scores</th>\r\n              {/* <th className=\"calories\">kcal</th> */}\r\n              <th className=\"accuracy\">accuracy</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {ranking.map((player, playerIndex) => {\r\n              return (\r\n                <tr className=\"player\" key={player.name}>\r\n                  <td className=\"place\">\r\n                    {playerIndex === 0 ? <GiQueenCrown /> : `#${playerIndex + 1}`}\r\n                  </td>\r\n                  <td className=\"change\">\r\n                    {player.change > 0 && (\r\n                      <div className=\"change-holder up\">\r\n                        <span>{player.change}</span>\r\n                        <FaAngleDoubleUp />\r\n                      </div>\r\n                    )}\r\n                    {player.change < 0 && (\r\n                      <div className=\"change-holder down\">\r\n                        <span>{-player.change}</span>\r\n                        <FaAngleDoubleDown />\r\n                      </div>\r\n                    )}\r\n                    {!!player.change && _.isString(player.change) && (\r\n                      <div className=\"change-holder text\">\r\n                        <span>{player.change}</span>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"name\">\r\n                    <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                      {player.name}\r\n                    </NavLink>\r\n                  </td>\r\n                  <td className=\"name\">\r\n                    <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                      {player.nameArcade}\r\n                    </NavLink>\r\n                  </td>\r\n                  <td className=\"rating\">{player.rating}</td>\r\n                  <td className=\"rating-change-cell\">\r\n                    {!!player.prevRating && player.prevRating !== player.rating && (\r\n                      <span\r\n                        className={classNames('rating-change', {\r\n                          down: player.prevRating > player.rating,\r\n                          up: player.prevRating < player.rating,\r\n                        })}\r\n                      >\r\n                        {player.prevRating < player.rating ? '+' : ''}\r\n                        {player.rating - player.prevRating}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                  {/* <td className=\"total-score\">\r\n                    <div>S: {numeral(player.totalScore.S).format('0,0')}</div>\r\n                    <div>D: {numeral(player.totalScore.D).format('0,0')}</div>\r\n                  </td> */}\r\n                  <td className=\"grades sss\">{player.grades.SSS}</td>\r\n                  <td className=\"grades ss\">{player.grades.SS}</td>\r\n                  <td className=\"grades s\">{player.grades.S}</td>\r\n                  <td className=\"grades a\">{player.grades.A}</td>\r\n                  <td className=\"grades b\">{player.grades.B}</td>\r\n                  <td className=\"grades c\">{player.grades.C}</td>\r\n                  <td className=\"grades d\">{player.grades.D}</td>\r\n                  <td className=\"grades f\">{player.grades.F}</td>\r\n                  <td className=\"playcount\">{player.count}</td>\r\n                  {/* <td className=\"calories\">{numeral(player.totalScore.calories).format('0,0')}</td> */}\r\n                  <td className=\"accuracy\">\r\n                    {player.accuracy ? `${player.accuracy.toFixed(2)}%` : ''}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function RankingFaq() {\r\n  return (\r\n    <div className=\"faq\">\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Как считается рейтинг?</div>\r\n        <div className=\"answer\">\r\n          A: Используется <a href=\"https://en.wikipedia.org/wiki/Elo_rating_system\">рейтинг Эло</a>,\r\n          широко используемый в шахматах и других играх, слегка модицированный под условия игры на\r\n          пампе. Средний рейтинг - 1000. Коэффициент К зависит от уровня чарта (более сложные чарты\r\n          сильнее влияют на рейтинг). Количество очков влияет на заработанный рейтинг (маленький\r\n          отрыв от противника не даст так много очков как большой отрыв).\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Система Эло используется для игр 1 на 1, как она используется на пампе, где на одном\r\n          чарте играет много игроков?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: Рекорды на одном чарте делятся на несколько игр 1 на 1. Если есть 3 игрока: A, B, C; то\r\n          считается, что было 3 отдельные игры: A vs B, A vs C, B vs C.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Учитываются ли рекорды на ранке в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: Да. Как минимум потому что у нас есть много рекордов, взятых с машин бестов, и мы не\r\n          знаем наверняка, на ранке они или нет. Если у игрока в топе есть два скора - на ранке и\r\n          без ранка, используется тот, где больше очков.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Почему меня нет в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: В таблицу попадают только те, у кого есть хотя бы 20 игр 1 на 1. Первые 20 игр\r\n          используются для определения изначального рейтинга.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Почему суммарное количество оценок S-A-B не совпадает с общим количеством скоров?\r\n        </div>\r\n        <div className=\"answer\">A: Не для каждого результата известна оценка.</div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Если у меня есть несколько рекордов на А, несколько на А+, как считается суммарное\r\n          количество грейдов в таблице?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: В каждой колонке учитываются обе буквы - и треснутые, и с удержанным лайфом. То есть и\r\n          А, и А+ идут в колонку А. Точно так же для B, C, D.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Убери аккураси из таблицы!</div>\r\n        <div className=\"answer\">A: Грем, это секция для вопросов.</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle } from 'react-icons/fa';\r\nimport { Link, Route, withRouter } from 'react-router-dom';\r\n\r\n// styles\r\nimport 'react-responsive-ui/style.css';\r\nimport './ranking.scss';\r\n\r\n// components\r\nimport RankingList from './RankingList';\r\nimport RankingFaq from './RankingFaq';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport { fetchTopScores } from 'reducers/top';\r\n\r\n// utils\r\n\r\n// code\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ranking: state.ranking.data,\r\n    error: state.top.error,\r\n    isLoading: state.top.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopScores,\r\n};\r\n\r\nclass Ranking extends Component {\r\n  static propTypes = {\r\n    ranking: toBe.array,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    ranking: [],\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchTopScores();\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, ranking, error } = this.props;\r\n\r\n    return (\r\n      <div className=\"ranking-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.path}\r\n              render={() => (\r\n                <>\r\n                  <Link to={routes.ranking.faq.path}>\r\n                    <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n                      <FaQuestionCircle /> faq\r\n                    </button>\r\n                  </Link>\r\n                  <button\r\n                    disabled={isLoading}\r\n                    className=\"btn btn-sm btn-dark btn-icon\"\r\n                    onClick={this.onRefresh}\r\n                  >\r\n                    <FaSearch /> обновить\r\n                  </button>\r\n                </>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.faq.path}\r\n              render={() => (\r\n                <Link to={routes.ranking.path}>\r\n                  <button className=\"btn btn-sm btn-dark btn-icon\">назад</button>\r\n                </Link>\r\n              )}\r\n            />\r\n          </div>\r\n          <Route\r\n            exact\r\n            path={routes.ranking.path}\r\n            render={() => <RankingList ranking={ranking} isLoading={isLoading} />}\r\n          />\r\n          <Route exact path={routes.ranking.faq.path} component={RankingFaq} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Ranking));\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ReferenceLine,\r\n  CartesianGrid,\r\n  Line,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Label,\r\n} from 'recharts';\r\nimport { createSelector } from 'reselect';\r\nimport _ from 'lodash/fp';\r\n\r\n// styles\r\nimport 'react-responsive-ui/style.css';\r\nimport './profile.scss';\r\n\r\n// constants\r\n\r\n// components\r\nimport Range from 'components/Shared/Range';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\n\r\n// reducers\r\nimport { fetchTopScores } from 'reducers/top';\r\nimport { setProfilesFilter, resetProfilesFilter } from 'reducers/profiles';\r\n\r\n// utils\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\n\r\n// code\r\nconst MIN_GRAPH_HEIGHT = undefined;\r\nconst defaultGradesDistribution = {\r\n  SSS: 0,\r\n  SS: 0,\r\n  S: 0,\r\n  'A+': 0,\r\n  A: 0,\r\n  B: 0,\r\n  C: 0,\r\n  D: 0,\r\n  F: 0,\r\n};\r\nconst defaultGradesWithLevelsDistribution = _.flow(\r\n  _.flatMap(type => {\r\n    return _.flow(\r\n      _.toPairs,\r\n      _.map(([grade, value]) => [`${type}-${grade}`, value])\r\n    )(defaultGradesDistribution);\r\n  }),\r\n  _.fromPairs\r\n)(['S', 'D']);\r\n\r\nconst cutRange = (array, range) => {\r\n  const startIndex = _.findIndex(item => item.date > range[0], array);\r\n  const endIndex = _.findLastIndex(item => item.date < range[1], array);\r\n  let firstElement =\r\n    startIndex > 0 ? array[startIndex - 1] : startIndex === 0 ? array[startIndex] : _.last(array);\r\n  let lastElement = endIndex > -1 ? array[endIndex] : _.first(array);\r\n  firstElement = { ...firstElement, date: range[0] };\r\n  lastElement = { ...lastElement, date: range[1] };\r\n  const middleElements =\r\n    startIndex > -1 && endIndex > -1 ? array.slice(startIndex, endIndex + 1) : [];\r\n  return [firstElement, ...middleElements, lastElement];\r\n};\r\nconst profileSelector = createSelector(\r\n  (state, props) => _.toInteger(props.match.params.id),\r\n  state => state.profiles.data,\r\n  state => state.profiles.filter,\r\n  state => state.top.players,\r\n  state => state.ranking.data,\r\n  state => state.tracklist.data,\r\n  (id, data, filter, players, ranking, tracklist) => {\r\n    const profile = data[id];\r\n    if (_.isEmpty(profile)) {\r\n      return null;\r\n    }\r\n    const levelsDistribution = _.flow(\r\n      _.get('resultsByLevel'),\r\n      _.toPairs,\r\n      _.map(([x, y]) => ({\r\n        x: _.toInteger(x),\r\n        S:\r\n          (_.size(_.filter(res => res.chart.chartType === 'S', y)) / tracklist.singlesLevels[x]) *\r\n          100,\r\n        D:\r\n          (-_.size(_.filter(res => res.chart.chartType === 'D', y)) / tracklist.doublesLevels[x]) *\r\n          100,\r\n      }))\r\n    )(profile);\r\n    const gradesData = _.flow(\r\n      _.get('resultsByLevel'),\r\n      _.toPairs,\r\n      _.map(\r\n        _.update('[1].result.grade', grade =>\r\n          grade && grade.includes('+') && grade !== 'A+' ? grade.replace('+', '') : grade\r\n        )\r\n      )\r\n    )(profile);\r\n    const gradesDistribution = _.flow(\r\n      _.map(([x, y]) => ({\r\n        x: _.toInteger(x),\r\n        ...defaultGradesDistribution,\r\n        ..._.omit('?', _.mapValues(_.size, _.groupBy('result.grade', y))),\r\n      })),\r\n      _.map(item => {\r\n        const grades = _.pick(Object.keys(defaultGradesDistribution), item);\r\n        const sum = _.sum(_.values(grades));\r\n        return {\r\n          ...item,\r\n          gradesValues: grades,\r\n          ...(sum === 0 ? grades : _.mapValues(value => (100 * value) / sum, grades)),\r\n        };\r\n      })\r\n    )(gradesData);\r\n    const gradesAndLevelsDistribution = _.flow(\r\n      _.map(([x, y]) => {\r\n        const groupedResults = _.groupBy('result.grade', y);\r\n        const counts = _.omit('?', _.mapValues(_.countBy('chart.chartType'), groupedResults));\r\n        const reduced = _.reduce(\r\n          (acc, [grade, levelsData]) => {\r\n            const accData = _.flow(\r\n              _.toPairs,\r\n              _.map(([type, count]) => [\r\n                `${type}-${grade}`,\r\n                type === 'S'\r\n                  ? (count / tracklist.singlesLevels[x]) * 100\r\n                  : (-count / tracklist.doublesLevels[x]) * 100,\r\n              ]),\r\n              _.fromPairs\r\n            )(levelsData);\r\n            return { ...acc, ...accData };\r\n          },\r\n          {},\r\n          _.toPairs(counts)\r\n        );\r\n\r\n        return {\r\n          x: _.toInteger(x),\r\n          ...defaultGradesWithLevelsDistribution,\r\n          ...reduced,\r\n        };\r\n      })\r\n    )(gradesData);\r\n    const lastTickRating = _.last(profile.ratingHistory).date;\r\n    const lastTickRanking = _.last(profile.rankingHistory).date;\r\n    const lastTick = lastTickRating > lastTickRanking ? lastTickRating : lastTickRanking; // End graph at either point\r\n    const firstTick = _.first(profile.ratingHistory).date; // Start graph from the first battle of this player\r\n\r\n    const minMaxRange = [firstTick / 1000 / 60 / 60 / 24, lastTick / 1000 / 60 / 60 / 24];\r\n    const filterRange = filter.dayRange || minMaxRange;\r\n    const dayRangeMs = [filterRange[0] * 1000 * 60 * 60 * 24, filterRange[1] * 1000 * 60 * 60 * 24];\r\n    const placesChanges = cutRange(profile.rankingHistory, dayRangeMs);\r\n    const ratingChanges = cutRange(profile.ratingHistory, dayRangeMs);\r\n    const rankingIndex = _.findIndex({ id }, ranking);\r\n    return {\r\n      ...profile,\r\n      minMaxRange,\r\n      levelsDistribution,\r\n      gradesDistribution,\r\n      gradesAndLevelsDistribution,\r\n      placesChanges,\r\n      ratingChanges,\r\n      player: {\r\n        ..._.find({ id }, players),\r\n        rank: rankingIndex + 1,\r\n        ranking: ranking[rankingIndex],\r\n      },\r\n    };\r\n  }\r\n);\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    profile: profileSelector(state, props),\r\n    tracklist: state.tracklist.data,\r\n    filter: state.profiles.filter,\r\n    error: state.top.error,\r\n    isLoading: state.top.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopScores,\r\n  setProfilesFilter,\r\n  resetProfilesFilter,\r\n};\r\n\r\nclass Profile extends Component {\r\n  static propTypes = {\r\n    profile: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    profile: {},\r\n  };\r\n\r\n  state = {\r\n    isLevelGraphCombined: true,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetProfilesFilter();\r\n  }\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchTopScores();\r\n  };\r\n\r\n  onChangeDayRange = range => {\r\n    const { filter } = this.props;\r\n    this.props.setProfilesFilter({\r\n      ...filter,\r\n      dayRange: range,\r\n    });\r\n  };\r\n\r\n  renderRankingHistory() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={profile.ratingChanges} margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={value => new Date(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={['dataMin - 100', 'dataMax + 100']}\r\n            tickFormatter={Math.round}\r\n            width={40}\r\n          />\r\n          <ReferenceLine y={1000} stroke=\"white\" />\r\n          <Tooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{new Date(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Rating: {Math.round(payload[0].value)}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating\"\r\n            stroke=\"#8884d8\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderPlaceHistory() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={profile.placesChanges} margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={value => new Date(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={[1, dataMax => (dataMax < 3 ? dataMax + 2 : dataMax + 1)]}\r\n            interval={0}\r\n            reversed\r\n            width={40}\r\n          />\r\n          <Tooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{new Date(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Place: #{payload[0].value}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place\"\r\n            stroke=\"#8884d8\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGrades() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <BarChart\r\n          data={profile.gradesDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <Tooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {_.filter(item => item.value > 0, payload).map(item => (\r\n                    <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                      {item.name}: {payload[0].payload.gradesValues[item.name]}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            domain={[0, 100]}\r\n            ticks={[0, 50, 100]}\r\n            tickFormatter={x => `${Math.round(x)}%`}\r\n            width={40}\r\n          />\r\n          <Legend />\r\n          <Bar dataKey=\"SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"F\" fill=\"#774949\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradesWithLevels() {\r\n    const { profile, tracklist } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={0.74}>\r\n        <BarChart\r\n          data={profile.gradesAndLevelsDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n          stackOffset=\"sign\"\r\n        >\r\n          <Tooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              const doubleItems = _.filter(\r\n                item => item.value !== 0 && item.dataKey.startsWith('D'),\r\n                payload\r\n              );\r\n              const singleItems = _.filter(\r\n                item => item.value !== 0 && item.dataKey.startsWith('S'),\r\n                payload\r\n              );\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {!!singleItems.length && (\r\n                    <>\r\n                      <div>Single:</div>\r\n                      {singleItems.map(item => (\r\n                        <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                          {item.name.slice(2)}: {Math.round(Math.abs(item.value))}% (\r\n                          {Math.round((tracklist.singlesLevels[item.payload.x] * item.value) / 100)}\r\n                          /{tracklist.singlesLevels[item.payload.x]})\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                  {!!doubleItems.length && (\r\n                    <>\r\n                      <div>Double:</div>\r\n                      {doubleItems.map(item => (\r\n                        <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                          {item.name.slice(2)}: {Math.round(Math.abs(item.value))}% (\r\n                          {Math.round(\r\n                            (tracklist.doublesLevels[item.payload.x] * -item.value) / 100\r\n                          )}\r\n                          /{tracklist.doublesLevels[item.payload.x]})\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis tickFormatter={x => `${Math.round(x)}%`} width={40} />\r\n          <Bar dataKey=\"S-SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Label value=\"Double\" offset={0} position=\"insideBottomLeft\" />\r\n          <Label value=\"Single\" offset={0} position=\"insideTopLeft\" />\r\n          <ReferenceLine y={0} stroke=\"#bbb\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderLevels() {\r\n    const { profile, tracklist } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <BarChart\r\n          data={profile.levelsDistribution}\r\n          stackOffset=\"sign\"\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <Tooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              const totalD = tracklist.doublesLevels[payload[0].payload.x];\r\n              const totalS = tracklist.singlesLevels[payload[0].payload.x];\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {totalS > 0 && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n                      Single: {Math.abs(payload[1].value).toFixed(1)}% (\r\n                      {Math.round((payload[1].value * totalS) / 100)}/{totalS})\r\n                    </div>\r\n                  )}\r\n                  {totalD > 0 && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n                      Double: {Math.abs(payload[0].value).toFixed(1)}% (\r\n                      {Math.round((Math.abs(payload[0].value) * totalD) / 100)}/{totalD})\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis tickFormatter={x => Math.abs(x) + '%'} width={40} />\r\n          <Tooltip />\r\n          <ReferenceLine y={0} stroke=\"#555\" />\r\n          <Legend />\r\n          <Bar dataKey=\"D\" fill=\"#169c16\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#af2928\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradeBlock(type, grade) {\r\n    const { profile } = this.props;\r\n    const obj = profile.progress[type];\r\n    const typeLetter = type === 'double' ? 'D' : 'S';\r\n    const progr = Math.floor((obj[`${grade}-bonus-level-coef`] || 0) * 100);\r\n    const minNumber = obj[`${grade}-bonus-level-min-number`];\r\n    const currentNumber = obj[`${grade}-bonus-level-achieved-number`];\r\n    const levelString = obj[`${grade}-bonus-level`]\r\n      ? `${typeLetter}${obj[`${grade}-bonus-level`]}`\r\n      : '?';\r\n    return (\r\n      <div className=\"grade-block\">\r\n        <div className=\"grade-letter\">\r\n          <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n        </div>\r\n        <div className=\"grade-level\">{levelString}</div>\r\n        <div className=\"grade-progress\">\r\n          {progr}% ({progr === 100 ? minNumber : currentNumber}/{minNumber})\r\n        </div>\r\n        <div className=\"grade-progress\">бонус: +{Math.floor(obj[`${grade}-bonus`])}</div>\r\n        <div\r\n          className={classNames('progress-background', {\r\n            complete: progr === 100,\r\n            zero: progr === 0,\r\n          })}\r\n          style={{\r\n            height: `${progr}%`,\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, profile, error, filter } = this.props;\r\n    const { isLevelGraphCombined } = this.state;\r\n\r\n    if (_.isEmpty(profile)) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"profile-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            {/* <div className=\"beta\">страница в бета-версии</div> */}\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"btn btn-sm btn-dark btn-icon\"\r\n              onClick={this.onRefresh}\r\n            >\r\n              <FaSearch /> обновить\r\n            </button>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!isLoading && (\r\n            <div className=\"profile\">\r\n              <div className=\"profile-header\">\r\n                <div className=\"profile-name text-with-header\">\r\n                  <div className=\"text-header\">игрок</div>\r\n                  <div>{profile.player.nickname}</div>\r\n                </div>\r\n                <div className=\"text-with-header\">\r\n                  <div className=\"text-header\">ранк</div>\r\n                  <div>#{profile.player.rank}</div>\r\n                </div>\r\n                <div className=\"text-with-header\">\r\n                  <div className=\"text-header\">эло</div>\r\n                  <div>{profile.player.ranking.rating}</div>\r\n                </div>\r\n                <div className=\"text-with-header\">\r\n                  <div className=\"text-header\">последняя игра</div>\r\n                  <div>\r\n                    {profile.lastResultDate ? getTimeAgo(profile.lastResultDate) : 'никогда'}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"profile-section-horizontal-container\">\r\n                <div className=\"profile-section\">\r\n                  <div className=\"profile-section-content\">\r\n                    {!isLevelGraphCombined ? (\r\n                      <>\r\n                        <div className=\"profile-section-2\">\r\n                          <div className=\"profile-sm-section-header flex\">\r\n                            <span>уровни</span>\r\n                            <div className=\"toggle-holder\">\r\n                              <Toggle\r\n                                className=\"combine-toggle\"\r\n                                checked={isLevelGraphCombined}\r\n                                onChange={() =>\r\n                                  this.setState(state => ({\r\n                                    isLevelGraphCombined: !state.isLevelGraphCombined,\r\n                                  }))\r\n                                }\r\n                              >\r\n                                объединить графики\r\n                              </Toggle>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"chart-container\">{this.renderLevels()}</div>\r\n                        </div>\r\n                        <div className=\"profile-section-2\">\r\n                          <div className=\"profile-sm-section-header\">\r\n                            <span>оценки</span>\r\n                          </div>\r\n                          <div className=\"chart-container\">{this.renderGrades()}</div>\r\n                        </div>\r\n                      </>\r\n                    ) : (\r\n                      <div className=\"profile-section-2\">\r\n                        <div className=\"profile-sm-section-header flex\">\r\n                          <span>оценки</span>\r\n                          <div className=\"toggle-holder\">\r\n                            <Toggle\r\n                              className=\"combine-toggle\"\r\n                              checked={isLevelGraphCombined}\r\n                              onChange={() =>\r\n                                this.setState(state => ({\r\n                                  isLevelGraphCombined: !state.isLevelGraphCombined,\r\n                                }))\r\n                              }\r\n                            >\r\n                              объединить графики\r\n                            </Toggle>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"chart-container single-double-labels\">\r\n                          {this.renderGradesWithLevels()}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"profile-section\">\r\n                  <div className=\"profile-section-content\">\r\n                    <div className=\"profile-section-2\">\r\n                      <div className=\"profile-sm-section-header\">\r\n                        <span>эло</span>\r\n                      </div>\r\n                      <div className=\"chart-container\">{this.renderRankingHistory()}</div>\r\n                    </div>\r\n                    <div className=\"profile-section-2\">\r\n                      <div className=\"profile-sm-section-header\">\r\n                        <span>место в топе</span>\r\n                      </div>\r\n                      <div className=\"chart-container\">{this.renderPlaceHistory()}</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"range-container\">\r\n                    <Range\r\n                      range={filter.dayRange || profile.minMaxRange}\r\n                      min={profile.minMaxRange[0]}\r\n                      max={profile.minMaxRange[1]}\r\n                      onChange={this.onChangeDayRange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"profile-section progress-section\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>ачивки по уровням</span>\r\n                </div>\r\n                <div className=\"progress-blocks-single-double\">\r\n                  <div className=\"progress-block\">\r\n                    <div className=\"achievements-grades single\">\r\n                      {this.renderGradeBlock('single', 'A')}\r\n                      {this.renderGradeBlock('single', 'A+')}\r\n                      {this.renderGradeBlock('single', 'S')}\r\n                      {this.renderGradeBlock('single', 'SS')}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"progress-block\">\r\n                    <div className=\"achievements-grades double\">\r\n                      {this.renderGradeBlock('double', 'A')}\r\n                      {this.renderGradeBlock('double', 'A+')}\r\n                      {this.renderGradeBlock('double', 'S')}\r\n                      {this.renderGradeBlock('double', 'SS')}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"bonus-faq\">\r\n                  * суммарный бонус (+{Math.round(profile.progress.bonus)}) добавляется к стартовому\r\n                  Эло\r\n                  <br />* для получения ачивки нужно сыграть около 10% всех чартов данного левела на\r\n                  нужный грейд\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Profile));\r\n","import React, { Component } from 'react';\r\n// import toBe from 'prop-types';\r\n// import classNames from 'classnames';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './top-bar.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nclass TopBar extends Component {\r\n  static propTypes = {};\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"top-bar\">\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <NavLink exact to={routes.leaderboard.path}>\r\n                leaderboard\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink exact to={routes.ranking.path}>\r\n                ranking\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopBar;\r\n","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport './App.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport Leaderboard from 'components/Leaderboard/Leaderboard';\r\nimport Ranking from 'components/Ranking/Ranking';\r\nimport Profile from 'components/Profile/Profile';\r\nimport TopBar from 'components/Shared/TopBar/TopBar';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <TopBar />\r\n        <Route exact path=\"/\" render={() => <Redirect to={routes.leaderboard.path} />} />\r\n        <Route path={routes.leaderboard.path} component={Leaderboard} />\r\n        <Route path={routes.ranking.path} component={Ranking} />\r\n        <Route path={routes.profile.path} component={Profile} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TRACKLIST/LOADING`;\r\nconst SUCCESS = `TRACKLIST/SUCCESS`;\r\nconst ERROR = `TRACKLIST/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTracklist = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await fetchJson({ url: `${HOST}/tracklist/stats/XX` });\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport top from 'reducers/top';\r\nimport tracklist from 'reducers/tracklist';\r\nimport ranking from 'reducers/ranking';\r\nimport profiles from 'reducers/profiles';\r\nimport presets from 'reducers/presets';\r\n\r\nconst rootReducer = combineReducers({\r\n  presets,\r\n  profiles,\r\n  ranking,\r\n  top,\r\n  tracklist,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && process.env.NODE_ENV === 'development'\r\n    ? compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__({\r\n          stateSanitizer: state => ({\r\n            ...state,\r\n          }),\r\n        })\r\n      )\r\n    : applyMiddleware(thunk)\r\n);\r\n","import 'promise-polyfill';\r\nimport 'whatwg-fetch';\r\nimport 'utils/polyfills';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport localForage from 'localforage';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './index.scss';\r\nimport App from 'components/App';\r\n\r\nimport { CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nimport { store } from 'reducers';\r\nimport { fetchTopScores, setFilter } from 'reducers/top';\r\nimport { fetchTracklist } from 'reducers/tracklist';\r\n\r\nlocalForage\r\n  .getItem('filter')\r\n  .then(filter => {\r\n    if (filter) {\r\n      store.dispatch(\r\n        setFilter({\r\n          ...filter,\r\n          chartRange: filter.chartRange && {\r\n            ...filter.chartRange,\r\n            range: _.every(\r\n              r => r >= CHART_MIN_MAX[0] && r <= CHART_MIN_MAX[1],\r\n              filter.chartRange.range\r\n            )\r\n              ? filter.chartRange.range\r\n              : CHART_MIN_MAX,\r\n          },\r\n        })\r\n      );\r\n    }\r\n  })\r\n  .catch(error => console.error('Cannot get filter from local storage', error));\r\n\r\nstore.dispatch(fetchTracklist()).then(() => {\r\n  store.dispatch(fetchTopScores());\r\n});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}