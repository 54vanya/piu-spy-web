{"version":3,"sources":["utils/polyfills.js","constants/routes.js","components/Shared/Overlay/Overlay.js","components/Shared/ToggleButton/ToggleButton.js","components/Shared/Loader/index.js","components/Shared/Input/Input.js","components/Shared/Toggle/Toggle.js","components/Shared/CollapsibleBar/index.js","components/Shared/Range/index.js","constants/leaderboard.js","components/Leaderboard/ChartFilter.js","utils/fetch.js","constants/env.js","reducers/ranking.js","reducers/profiles.js","constants/backend.js","reducers/top.js","reducers/presets.js","components/Leaderboard/PresetsControl.js","utils/leaderboards.js","utils/colors.js","reducers/selectors.js","components/Leaderboard/Leaderboard.js","components/Ranking/RankingList.js","components/Ranking/RankingFaq.js","components/Ranking/Ranking.js","components/Profile/Profile.js","components/Shared/TopBar/TopBar.js","components/App.js","reducers/tracklist.js","reducers/index.js","index.js"],"names":["Number","isNaN","value","Math","sign","x","Array","prototype","findIndex","Object","defineProperty","predicate","this","TypeError","o","len","length","thisArg","arguments","k","kValue","call","configurable","writable","routes","leaderboard","path","ranking","faq","profile","getPath","params","id","POPPER_MODIFIERS","preventOverflow","enabled","padding","boundariesElement","PLACEMENT_ARROW_MAPPING","right","left","top","bottom","getArrowPlacement","placement","split","Overlay","state","isVisible","containerItemRef","React","createRef","renderPopper","bind","toggleOverlayVisibility","setState","event","target","closest","hideOverlay","ref","style","arrowProps","outOfBoundaries","scheduleUpdate","props","children","hideWhenOutOfBounds","data-placement","className","classNames","overlayClassName","overlayItem","Fragment","onClick","ReactDOM","createPortal","container","document","body","modifiers","referenceElement","current","PureComponent","defaultTypes","listensToClickOutside","ToggleButton","active","onToggle","text","Loader","width","height","viewBox","xmlns","fill","cx","cy","r","attributeName","from","to","begin","dur","values","calcMode","repeatCount","fillOpacity","Input","_","isNil","defaultValue","bindAll","prevProps","e","newValue","onChange","type","numericValue","min","max","onBlur","omit","handleBlur","onInput","handleChange","Component","defaultProps","noop","Toggle","checked","uniqueId","htmlFor","CollapsibleBar","open","defaultOpen","title","Range","range","step","renderTrack","onMouseDown","onTouchStart","position","display","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","justifyContent","alignItems","boxShadow","SORT","DEFAULT","PROTAGONIST","RANK_ASC","RANK_DESC","CHART_MIN_MAX","ChartFilter","filterValue","getOr","buttonText","t","newMin","newMax","fetchJson","a","url","fetch","response","status","json","data","Error","console","error","Promise","reject","localStorage","window","debugOn","setItem","debugOff","removeItem","DEBUG","getItem","SET_RANKINGS","RANKING_CHANGE_SET","getRankings","profiles","players","defaultInfo","count","battleCount","countAcc","grades","F","D","C","B","A","S","SS","SSS","totalScore","sumAccuracy","history","ratingHistory","lastPlace","lastBattleDate","setupDefaultInfo","cloneDeep","rating","progress","bonus","playerInfo","battles","forEach","song","validResults","orderBy","results","score","nickname","includes","push","playerId","p1","accuracy","chartType","grade","replace","isInteger","perfect","great","good","bad","miss","isFullScore","maxScore","maxCombo","chartLevel","getMaxScore","scoreIndex","slice","enemyScore","isRank","flow","sortBy","s1","s2","dateObject","getTime","p2","scoreMultiplier","isExactDate","map","startingRating","S1","S2","r1","r2","R1","R2","E1","E2","kRating1","kRating2","maxK1","maxK2","kLevel1","kLevel2","kLevel","K1","K2","dr1","dr2","ratingDiff","ratingDiffLast","log","chartLabel","toFixed","playersSorted","keys","battleDate","player","index","place","date","p1LastRating","last","p2LastRating","key","toInteger","name","nameArcade","arcade_name","round","ratingRaw","remove","i","setRankingsAction","getListOfNames","getMapOfRatings","q","fromPairs","setRankings","dispatch","getState","all","localForage","lastChangedRanking","lastChangedRankingPoints","lastFetchedRanking","listNow","listLastFetched","listLastChanged","mapPointsNow","mapPointsLastFetched","mapPointsLastChanged","rankingsPointsMap","isEqual","listPrev","warn","SET_PROFILES","SET_FILTER","RESET_FILTER","defaultFilter","initialState","isLoading","filter","getProfiles","mapValues","resultsByGrade","result","find","get","rankingHistory","Date","now","getInitialProfiles","tracklist","addResultData","chart","resultsByLevel","lastResultDate","initializeProfile","neededGrades","double","single","gradeIncrementMap","level","res","thisGrade","thisPlayerId","otherResults","sort","b","indexOf","gradeIncArray","gradeInc","l","g","isS","oneChartValue","singlesLevels","doublesLevels","prog","incrementLevel","ratio","minimumRatio","totalCharts","sqrt","getMinimumRatio","bonusCoefficient","getBonusForGrade","setProfiles","HOST","LOADING","SUCCESS","ERROR","showRank","showRankAndNorank","preprocessData","item","fullRes","every","isNumber","perfects","greats","goods","bads","misses","stepSum","reduce","sum","n","track","chart_label","mix","resultInfoOverrides","infos","fixableIndex","localStepSum","numb","nicknameArcade","originalChartMix","originalChartLabel","originalScore","gained","exact_gain_date","scoreIncrease","score_increase","calories","combo","max_combo","mods","mods_list","rank_mode","isHJ","latestScoreDate","latest","acc","floor","hasRankScore","some","fetchTopScores","processedData","initialProfiles","rankings","toPairs","setFilter","SELECT_PRESET","LOAD_PRESETS","LOADING_START","LOADING_END","presets","currentPreset","itemToOption","label","reloadPresets","startLoading","endLoading","selectPreset","openPreset","then","noPresetsMessage","mapDispatchToProps","loadPresets","savePreset","newPreset","confirm","withoutOldPreset","newPresets","deletePreset","PresetsControl","onChangeSelection","selected","onRewritePreset","onSavePreset","isAddingNew","classNamePrefix","placeholder","options","noOptionsMessage","disabled","connect","TimeAgo","addLocale","ru","timeAgo","timeStyle","flavour","gradation","convenient","units","tooltipFormatterForBests","flexDirection","toLocaleDateString","getTimeAgo","dayDiff","moment","startOf","diff","format","colorsArray","playersSelector","createSelector","it","toLower","filteredDataSelector","names","namesOr","playersOr","namesNot","playersNot","sortingType","protagonist","excludeAntagonists","defaultSorting","protagonistSorting","row","protIndex","protScore","enemies","take","uniqBy","distanceFromProtagonist","dist","enemy","getScoreSorting","direction","Infinity","sortingFunctions","compact","chartRange","items","rows","filterCharts","showOnlyRank","occuredNames","alreadyOccured","rowNames","size","matchSorter","sortingOptions","resetFilter","Leaderboard","showItemsCount","curry","onRefresh","closeMenuOnSelect","isMulti","clearable","filteredData","canShowMore","visibleData","hasProtagonist","protagonistName","uniqueSelectedNames","uniq","message","renderSimpleSearch","renderFilters","renderSortings","preset","isEmpty","chartIndex","topPlace","occuredNicknames","isSecondOccurenceInResults","href","rel","nameIndex","empty","fontWeight","color","vj","hj","content","tooltipClassName","numeral","exact","src","process","alt","getGradeImg","RankingList","playerIndex","change","isString","prevRating","down","up","RankingFaq","Ranking","render","component","withRouter","defaultGradesDistribution","cutRange","array","startIndex","endIndex","findLastIndex","firstElement","lastElement","first","middleElements","profileSelector","match","levelsDistribution","y","gradesDistribution","update","groupBy","pick","gradesValues","lastTickRating","lastTickRanking","lastTick","minMaxRange","filterRange","dayRange","dayRangeMs","placesChanges","ratingChanges","rankingIndex","rank","setProfilesFilter","resetProfilesFilter","Profile","onChangeDayRange","aspect","margin","strokeDasharray","dataKey","domain","tickFormatter","allowDecimals","stroke","isAnimationActive","payload","strokeWidth","dot","dataMax","interval","reversed","reverse","ticks","stackId","stackOffset","abs","obj","typeLetter","progr","levelString","complete","zero","renderLevels","renderLevelsGrades","renderRankingHistory","renderPlaceHistory","renderGradeBlock","TopBar","App","rootReducer","combineReducers","action","hasPrevList","playerOriginal","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","catch","getElementById"],"mappings":"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","file":"static/js/main.0788abd7.chunk.js","sourcesContent":["/* eslint-disable */\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\r\nNumber.isNaN =\r\n  Number.isNaN ||\r\n  function(value) {\r\n    return value !== value;\r\n  };\r\n\r\nif (typeof Math.sign === 'undefined') {\r\n  Math.sign = function(x) {\r\n    return x > 0 ? 1 : x < 0 ? -1 : x;\r\n  };\r\n}\r\n\r\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\r\nif (!Array.prototype.findIndex) {\r\n  Object.defineProperty(Array.prototype, 'findIndex', {\r\n    value: function(predicate) {\r\n      // 1. Let O be ? ToObject(this value).\r\n      if (this == null) {\r\n        throw new TypeError('\"this\" is null or not defined');\r\n      }\r\n\r\n      var o = Object(this);\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('predicate must be a function');\r\n      }\r\n\r\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n      var thisArg = arguments[1];\r\n\r\n      // 5. Let k be 0.\r\n      var k = 0;\r\n\r\n      // 6. Repeat, while k < len\r\n      while (k < len) {\r\n        // a. Let Pk be ! ToString(k).\r\n        // b. Let kValue be ? Get(O, Pk).\r\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n        // d. If testResult is true, return k.\r\n        var kValue = o[k];\r\n        if (predicate.call(thisArg, kValue, k, o)) {\r\n          return k;\r\n        }\r\n        // e. Increase k by 1.\r\n        k++;\r\n      }\r\n\r\n      // 7. Return -1.\r\n      return -1;\r\n    },\r\n    configurable: true,\r\n    writable: true,\r\n  });\r\n}\r\n","export const routes = {\r\n  leaderboard: {\r\n    path: `/leaderboard`,\r\n  },\r\n  ranking: {\r\n    path: `/ranking`,\r\n    faq: {\r\n      path: '/ranking/faq',\r\n    },\r\n  },\r\n  profile: {\r\n    path: `/profiles/:id`,\r\n    getPath: params => `/profiles/${params.id}`,\r\n  },\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport toBe from 'prop-types';\r\nimport { Popper } from 'react-popper';\r\nimport classNames from 'classnames';\r\nimport listensToClickOutside from 'react-onclickoutside';\r\n\r\nimport './overlay.scss';\r\n\r\nconst POPPER_MODIFIERS = {\r\n  preventOverflow: {\r\n    enabled: true,\r\n    padding: 10,\r\n    boundariesElement: 'viewport',\r\n  },\r\n};\r\n\r\nconst PLACEMENT_ARROW_MAPPING = {\r\n  right: 'left',\r\n  left: 'right',\r\n  top: 'bottom',\r\n  bottom: 'top',\r\n};\r\n\r\nconst getArrowPlacement = placement => {\r\n  return placement && PLACEMENT_ARROW_MAPPING[placement.split('-')[0]];\r\n};\r\n\r\nclass Overlay extends React.PureComponent {\r\n  static propTypes = {\r\n    placement: toBe.string,\r\n    overlayItem: toBe.any,\r\n    hideWhenOutOfBounds: toBe.bool,\r\n  };\r\n\r\n  static defaultTypes = {\r\n    placement: 'bottom',\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isVisible: false,\r\n    };\r\n    this.containerItemRef = React.createRef();\r\n    this.renderPopper = this.renderPopper.bind(this);\r\n    this.toggleOverlayVisibility = this.toggleOverlayVisibility.bind(this);\r\n  }\r\n\r\n  hideOverlay() {\r\n    this.setState({\r\n      isVisible: false,\r\n    });\r\n  }\r\n\r\n  toggleOverlayVisibility() {\r\n    this.setState({\r\n      isVisible: !this.state.isVisible,\r\n    });\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    const preventHiding = event && event.target.closest('.inner-popper-overlay'); // prevent overlays from hiding when a modal is opened within overlay\r\n\r\n    if (!preventHiding) {\r\n      this.hideOverlay();\r\n    }\r\n  }\r\n\r\n  renderPopper({ ref, style, placement, arrowProps, scheduleUpdate, outOfBoundaries }) {\r\n    const { children, hideWhenOutOfBounds } = this.props;\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        data-placement={placement}\r\n        className={classNames(\r\n          'inner-popper-overlay',\r\n          `arrow-${getArrowPlacement(placement)}`,\r\n          this.props.overlayClassName,\r\n          { 'out-of-bounds': outOfBoundaries && hideWhenOutOfBounds }\r\n        )}\r\n      >\r\n        <div className=\"arrow-hider\">\r\n          <div className=\"arrow\" ref={arrowProps.ref} style={arrowProps.style} />\r\n        </div>\r\n        <div\r\n          className=\"inner-popper-content\"\r\n          // ref={ref => this.setupPopperContentRef(scheduleUpdate, ref)}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { placement, overlayItem } = this.props;\r\n    const { isVisible } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"overlay-item\"\r\n          ref={this.containerItemRef}\r\n          onClick={this.toggleOverlayVisibility}\r\n        >\r\n          {overlayItem}\r\n        </div>\r\n        {isVisible &&\r\n          ReactDOM.createPortal(\r\n            <Popper\r\n              container={document.body}\r\n              modifiers={POPPER_MODIFIERS}\r\n              placement={placement}\r\n              referenceElement={this.containerItemRef.current}\r\n            >\r\n              {this.renderPopper}\r\n            </Popper>,\r\n            document.body\r\n          )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default listensToClickOutside(Overlay);\r\n","import React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './toggle-button.scss';\r\n\r\nexport default class ToggleButton extends React.PureComponent {\r\n  static propTypes = {\r\n    text: toBe.string,\r\n    onToggle: toBe.func,\r\n    active: toBe.bool,\r\n  };\r\n\r\n  render() {\r\n    const { active, onToggle, text } = this.props;\r\n    return (\r\n      <div\r\n        className={classNames('toggle-button', { active: active })}\r\n        onClick={() => onToggle(!active)}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport './loader.scss';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"loader\">\r\n      <svg\r\n        width=\"40\"\r\n        height=\"12\"\r\n        viewBox=\"0 0 120 30\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"#eee\"\r\n      >\r\n        <circle cx=\"15\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"60\" cy=\"15\" r=\"9\" fillOpacity=\"0.3\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"9\"\r\n            to=\"9\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"9;15;9\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"0.5\"\r\n            to=\"0.5\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\".5;1;.5\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"105\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react/no-deprecated */\r\n// imports from vendor deps\r\nimport React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\n\r\n// imports from styles\r\nexport default class Input extends React.Component {\r\n  static propTypes = {\r\n    value: toBe.any,\r\n    defaultValue: toBe.any,\r\n    onChange: toBe.func,\r\n    onBlur: toBe.func,\r\n    type: toBe.string,\r\n    className: toBe.string,\r\n    trimOnBlur: toBe.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    value: null,\r\n    type: 'text',\r\n    onChange: _.noop,\r\n    onBlur: _.noop,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: (!_.isNil(props.value) ? props.value : props.defaultValue) || '',\r\n    };\r\n    _.bindAll(['handleChange', 'handleBlur'], this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.value !== this.props.value) {\r\n      this.setState({ value: this.props.value });\r\n    }\r\n  }\r\n\r\n  handleChange(e) {\r\n    const newValue = e.target.value;\r\n    this.setState({ value: newValue }, () => this.props.onChange(newValue));\r\n  }\r\n\r\n  handleBlur(e) {\r\n    const { type } = this.props;\r\n    const { value } = this.state;\r\n    if (type === 'number') {\r\n      const numericValue = Number(value);\r\n      if (numericValue >= Number(e.target.min) && numericValue <= Number(e.target.max)) {\r\n        this.props.onBlur(numericValue, e);\r\n      } else {\r\n        this.setState({ value: this.props.value });\r\n        this.props.onBlur(this.props.value, e);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props;\r\n\r\n    // HACK: This component uses onInput instead of onChange\r\n    // because IE11 fails to call onChange events when you paste/cut using context menu (RMB)\r\n    // We're using onInput because it works fine, and because for text input\r\n    // there's no difference between how onChange and onInput work\r\n    return (\r\n      <input\r\n        {..._.omit(['defaultValue', 'onChange'], this.props)}\r\n        className={classNames(className, 'text-input')}\r\n        value={this.state.value}\r\n        onBlur={this.handleBlur}\r\n        onInput={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './toggle.scss';\r\n\r\n// imports from styles\r\nexport default class Toggle extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.id = _.uniqueId();\r\n  }\r\n\r\n  onChange = e => {\r\n    this.props.onChange(e.target.checked);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"toggle-checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle-checkbox-cb\"\r\n          id={this.id}\r\n          onChange={this.onChange}\r\n          checked={this.props.checked}\r\n        />\r\n        <label htmlFor={this.id} className=\"toggle\">\r\n          <span></span>\r\n        </label>\r\n        <label htmlFor={this.id} className=\"text-label\">\r\n          {this.props.children}\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\nimport './styles.scss';\r\n\r\nexport default class CollapsibleBar extends PureComponent {\r\n  static propTypes = {\r\n    className: toBe.string,\r\n    children: toBe.any,\r\n    title: toBe.any,\r\n    defaultOpen: toBe.bool,\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = { open: props.defaultOpen || false };\r\n  }\r\n\r\n  render() {\r\n    const { children, title, className } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classNames('collapsible-bar', className, { open })}>\r\n        <div className=\"header\" onClick={() => this.setState(state => ({ open: !state.open }))}>\r\n          <div className=\"collapse-button\">\r\n            <FaChevronRight />\r\n          </div>\r\n          <div className=\"title\">{title}</div>\r\n        </div>\r\n        {children && <div className=\"collapsible-children\">{children}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Range as ReactRange, getTrackBackground } from 'react-range';\r\n\r\nexport default function Range({ range, min, max, onChange }) {\r\n  return (\r\n    <ReactRange\r\n      values={range}\r\n      step={1}\r\n      min={min}\r\n      max={max}\r\n      onChange={onChange}\r\n      renderTrack={({ props, children }) => (\r\n        <div\r\n          onMouseDown={props.onMouseDown}\r\n          onTouchStart={props.onTouchStart}\r\n          style={{\r\n            ...props.style,\r\n            position: 'relative',\r\n            height: '10px',\r\n            display: 'flex',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <div\r\n            ref={props.ref}\r\n            style={{\r\n              height: '6px',\r\n              width: '100%',\r\n              borderRadius: '3px',\r\n              background: getTrackBackground({\r\n                values: range,\r\n                colors: ['#ccc', '#337ab7', '#ccc'],\r\n                min,\r\n                max,\r\n              }),\r\n              alignSelf: 'center',\r\n            }}\r\n          >\r\n            {children}\r\n          </div>\r\n        </div>\r\n      )}\r\n      renderThumb={({ props, isDragged }) => (\r\n        <div\r\n          {...props}\r\n          style={{\r\n            ...props.style,\r\n            height: '12px',\r\n            width: '12px',\r\n            borderRadius: '6px',\r\n            backgroundColor: '#FFF',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            boxShadow: '0px 2px 3px #AAA',\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              height: '6px',\r\n              width: '6px',\r\n              borderRadius: '3px',\r\n              backgroundColor: isDragged ? '#337ab7' : '#CCC',\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","export const SORT = {\r\n  DEFAULT: 'default',\r\n  PROTAGONIST: 'protagonist',\r\n  RANK_ASC: 'rankAsc',\r\n  RANK_DESC: 'rankDesc',\r\n};\r\n\r\nexport const CHART_MIN_MAX = [1, 28];\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\nimport { FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Range from 'components/Shared/Range';\r\n\r\nimport { CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nexport default function ChartFilter({ filterValue, onChange }) {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filterValue);\r\n  const type = _.getOr(null, 'type', filterValue);\r\n  let buttonText = 'фильтр чартов';\r\n  if (filterValue) {\r\n    const t = type || '';\r\n    buttonText = range[0] === range[1] ? `${t}${range[0]}` : `${t}${range[0]} - ${t}${range[1]}`;\r\n    buttonText = 'чарты: ' + buttonText;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Overlay\r\n        overlayClassName=\"chart-range-overlay-outer\"\r\n        overlayItem={\r\n          <button className=\"filter-charts-button btn btn-sm btn-dark\">{buttonText}</button>\r\n        }\r\n      >\r\n        <div className=\"chart-range-overlay\">\r\n          <div className=\"buttons\">\r\n            <ToggleButton\r\n              text=\"S\"\r\n              active={!type || type === 'S'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  range,\r\n                  type: !active ? 'D' : null,\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"D\"\r\n              active={!type || type === 'D'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  range,\r\n                  type: !active ? 'S' : null,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <Range\r\n            range={range}\r\n            min={CHART_MIN_MAX[0]}\r\n            max={CHART_MIN_MAX[1]}\r\n            onChange={r => onChange({ type, range: r })}\r\n          />\r\n          <div className=\"inputs\">\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  type,\r\n                  range: [Math.max(range[0] - 1, CHART_MIN_MAX[0]), range[1]],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={CHART_MIN_MAX[0]}\r\n              max={Math.min(CHART_MIN_MAX[1], range[1])}\r\n              value={range[0]}\r\n              onBlur={value => {\r\n                onChange({ type, range: [value, range[1]] });\r\n              }}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMin = Math.min(range[0] + 1, CHART_MIN_MAX[1]);\r\n                onChange({\r\n                  type,\r\n                  range: [newMin, range[1] < newMin ? newMin : range[1]],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMax = Math.max(range[1] - 1, CHART_MIN_MAX[0]);\r\n                onChange({\r\n                  type,\r\n                  range: [range[0] > newMax ? newMax : range[0], newMax],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={Math.max(CHART_MIN_MAX[0], range[0])}\r\n              max={CHART_MIN_MAX[1]}\r\n              value={range[1]}\r\n              onBlur={value => onChange({ type, range: [range[0], value] })}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  type,\r\n                  range: [range[0], Math.min(range[1] + 1, CHART_MIN_MAX[1])],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Overlay>\r\n    </div>\r\n  );\r\n}\r\n","export const fetchJson = async ({ url }) => {\r\n  try {\r\n    const response = await fetch(url);\r\n    if (response.status >= 200 && response.status < 300) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      throw Error('HTTP Status ' + response.status);\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n","if (localStorage) {\r\n  window.debugOn = () => {\r\n    localStorage.setItem('debug', 1);\r\n  };\r\n  window.debugOff = () => {\r\n    localStorage.removeItem('debug');\r\n  };\r\n}\r\n\r\nexport const DEBUG = localStorage && localStorage.getItem('debug');\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\n\r\nimport { DEBUG } from 'constants/env';\r\n\r\nconst SET_RANKINGS = `RANKINGS/SET_RANKINGS`;\r\nconst RANKING_CHANGE_SET = `RANKINGS/RANKING_CHANGE_SET`;\r\n\r\nconst isFullScore = score => {\r\n  return (\r\n    _.isInteger(score.perfect) &&\r\n    _.isInteger(score.great) &&\r\n    _.isInteger(score.good) &&\r\n    _.isInteger(score.bad) &&\r\n    _.isInteger(score.miss) &&\r\n    _.isInteger(score.score)\r\n  );\r\n};\r\n\r\nconst getMaxScore = (score, song) => {\r\n  const maxCombo = score.perfect + score.great + score.good + score.bad + score.miss;\r\n  let maxScore = maxCombo * 1000 + (maxCombo - 50) * 1000; // all perfects + 51 combo bonus\r\n  if (song.chartLevel > 10) {\r\n    maxScore *= song.chartLevel / 10; // Level multiplier\r\n  }\r\n  if (song.chartType === 'D') {\r\n    maxScore *= 1.2; // Double multiplier\r\n  }\r\n  maxScore += 300000; // SSS bonus\r\n  return maxScore;\r\n};\r\n\r\nexport default function reducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case SET_RANKINGS:\r\n      return {\r\n        ...state,\r\n        data: action.ranking,\r\n      };\r\n    case RANKING_CHANGE_SET:\r\n      const hasPrevList = !_.isEmpty(action.listPrev);\r\n      return {\r\n        ...state,\r\n        data: _.map(playerOriginal => {\r\n          const player = {\r\n            ...playerOriginal,\r\n            prevRating: _.get(playerOriginal.name, action.rankingsPointsMap),\r\n          };\r\n          if (!hasPrevList) {\r\n            return player; // First time opening this thing and we didn't have any previous data\r\n          }\r\n          if (!_.includes(player.name, action.listPrev)) {\r\n            return { ...player, change: 'NEW' };\r\n          } else if (!_.includes(player.name, action.listNow)) {\r\n            // Should NEVER happen, idk if this is possible\r\n            return { ...player, change: '?' };\r\n          } else {\r\n            return {\r\n              ...player,\r\n              change:\r\n                _.indexOf(player.name, action.listPrev) - _.indexOf(player.name, action.listNow),\r\n            };\r\n          }\r\n        }, state.data),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getRankings = (data, { players }, profiles) => {\r\n  const defaultInfo = {\r\n    count: 0,\r\n    battleCount: 0,\r\n    countAcc: 0,\r\n    // rating: 1000,\r\n    grades: { F: 0, D: 0, C: 0, B: 0, A: 0, S: 0, SS: 0, SSS: 0 },\r\n    totalScore: { S: 0, D: 0 },\r\n    sumAccuracy: 0,\r\n    history: [],\r\n    ratingHistory: [],\r\n    lastPlace: null,\r\n    lastBattleDate: 0,\r\n  };\r\n  const setupDefaultInfo = id => {\r\n    return {\r\n      ..._.cloneDeep(defaultInfo),\r\n      rating: 1000 + profiles[id].progress.bonus,\r\n    };\r\n  };\r\n  const playerInfo = {};\r\n  const battles = [];\r\n  data.forEach(song => {\r\n    const validResults = [];\r\n    _.orderBy(['score'], ['desc'], song.results).forEach(score => {\r\n      if (!score.nickname.includes('???')) {\r\n        validResults.push(score);\r\n\r\n        if (!playerInfo[score.playerId]) {\r\n          playerInfo[score.playerId] = setupDefaultInfo(score.playerId);\r\n        }\r\n        const p1 = playerInfo[score.playerId];\r\n        p1.count++;\r\n        if (score.accuracy) {\r\n          p1.countAcc++;\r\n          p1.sumAccuracy += score.accuracy;\r\n        }\r\n        p1.totalScore[song.chartType] += score.score;\r\n        p1.grades[score.grade.replace('+', '')]++;\r\n      }\r\n      if (isFullScore(score)) {\r\n        song.maxScore = getMaxScore(score, song);\r\n      }\r\n    });\r\n\r\n    validResults.forEach((score, scoreIndex) => {\r\n      const enemyScores = validResults.length > 1 ? validResults.slice(scoreIndex + 1) : [];\r\n\r\n      enemyScores.forEach(enemyScore => {\r\n        if (score.isRank === enemyScore.isRank && score.playerId !== enemyScore.playerId) {\r\n          battles.push([score, enemyScore, song]);\r\n        }\r\n      });\r\n    });\r\n  });\r\n  _.flow([\r\n    // Apply battles chronologically instead of randomly\r\n    _.sortBy(([s1, s2]) => Math.max(s1.dateObject.getTime(), s2.dateObject.getTime())),\r\n    _.forEach(([score, enemyScore, song]) => {\r\n      // For each battle\r\n      if (!playerInfo[enemyScore.playerId]) {\r\n        playerInfo[enemyScore.playerId] = setupDefaultInfo(enemyScore.playerId);\r\n      }\r\n      const p1 = playerInfo[score.playerId];\r\n      const p2 = playerInfo[enemyScore.playerId];\r\n\r\n      const scoreMultiplier = score.isRank ? 1.2 : 1;\r\n      let maxScore = null;\r\n      if (song.maxScore) {\r\n        maxScore = song.maxScore * scoreMultiplier;\r\n        if (\r\n          Math.max(maxScore, score.score, enemyScore.score) !== maxScore &&\r\n          !score.isRank &&\r\n          (!score.isExactDate || !enemyScore.isExactDate)\r\n        ) {\r\n          maxScore *= 1.2;\r\n          // Rank from machine best wasn't recognized most likely.\r\n          // Increasing max score by 20% is fine\r\n        }\r\n        if (Math.max(maxScore, score.score, enemyScore.score) !== maxScore) {\r\n          // If calculated max score isn't max score anyway, use current scores as max + cherry on top\r\n          maxScore = Math.max(..._.map('score', song.results));\r\n        }\r\n      }\r\n      // Rating at the start of battle for this score\r\n      score.startingRating = p1.rating;\r\n      enemyScore.startingRating = p2.rating;\r\n      // Counting the number of battles\r\n      p1.battleCount++;\r\n      p2.battleCount++;\r\n\r\n      // This is one match between two players\r\n      //// Elo formula\r\n      const r1 = p1.rating;\r\n      const r2 = p2.rating;\r\n      const R1 = 10 ** (r1 / 400);\r\n      const R2 = 10 ** (r2 / 400);\r\n      const E1 = R1 / (R1 + R2);\r\n      const E2 = R2 / (R1 + R2);\r\n      let A = score.score;\r\n      let B = enemyScore.score;\r\n      let S1, S2;\r\n      if (A === B) {\r\n        S1 = S2 = 0.5;\r\n      } else if (maxScore && A !== 0 && B !== 0) {\r\n        A = maxScore / A - 1;\r\n        B = maxScore / B - 1;\r\n        S1 = (B / (A + B) - 0.5) * 5 + 0.5;\r\n        S2 = (A / (A + B) - 0.5) * 5 + 0.5;\r\n      } else {\r\n        S1 = A > B ? 1 : B < A ? 0 : 0.5;\r\n        S2 = 1 - S1;\r\n      }\r\n      S1 = Math.max(0, Math.min(1, S1)); // Set strict boundaries to [0, 1]\r\n      S2 = Math.max(0, Math.min(1, S2));\r\n\r\n      const kRating1 = Math.max(0, Math.min(1, (r1 - 700) / 800));\r\n      const kRating2 = Math.max(0, Math.min(1, (r2 - 700) / 800));\r\n      const maxK1 = 30 + 20 * kRating1;\r\n      const maxK2 = 30 + 20 * kRating2;\r\n      const kLevel1 = Math.max(\r\n        1,\r\n        Math.min(maxK1, (song.chartLevel / 25) ** ((kRating1 - 0.5) * 5 + 2.5) * maxK1)\r\n      );\r\n      const kLevel2 = Math.max(\r\n        1,\r\n        Math.min(maxK2, (song.chartLevel / 25) ** ((kRating2 - 0.5) * 5 + 2.5) * maxK2)\r\n      );\r\n      const kLevel = Math.min(kLevel1, kLevel2);\r\n\r\n      const K1 = kLevel;\r\n      const K2 = kLevel;\r\n      let dr1 = K1 * (S1 - E1);\r\n      let dr2 = K2 * (S2 - E2);\r\n      // Do not decrease rating if you have SSS - RIP zero-sum algorithm\r\n      dr1 = dr1 < 0 && score.grade === 'SSS' ? 0 : dr1;\r\n      dr2 = dr2 < 0 && enemyScore.grade === 'SSS' ? 0 : dr2;\r\n      // Recording this value for display\r\n      score.ratingDiff = (score.ratingDiff || 0) + dr1;\r\n      enemyScore.ratingDiff = (enemyScore.ratingDiff || 0) + dr2;\r\n      score.ratingDiffLast = dr1;\r\n      enemyScore.ratingDiffLast = dr2;\r\n\r\n      if (DEBUG) {\r\n        // if (song.song === 'Club Night') {\r\n        // if (score.nickname === 'Liza' || enemyScore.nickname === 'Liza') {\r\n        // if (!song.maxScore) {\r\n        console.log(\r\n          `${song.chartLabel} - ${score.nickname} / ${enemyScore.nickname} - ${song.song}`\r\n        );\r\n        console.log(\r\n          `- ${score.score} / ${enemyScore.score} (${maxScore}) - R ${S1.toFixed(2)}/${S2.toFixed(\r\n            2\r\n          )} E ${E1.toFixed(2)} / ${E2.toFixed(2)}`\r\n        );\r\n        // console.log(`- old R ${S1old.toFixed(2)}/${S2old.toFixed(2)}`);\r\n        console.log(\r\n          `- Rating ${r1.toFixed(2)} / ${r2.toFixed(2)} - ${dr1.toFixed(2)} / ${dr2.toFixed(\r\n            2\r\n          )} - K ${K1.toFixed(2)} ${K2.toFixed(2)}`\r\n        );\r\n        // }\r\n      }\r\n\r\n      // Change rating as a result of this battle\r\n      p1.rating = r1 + dr1;\r\n      p2.rating = r2 + dr2;\r\n      // Rating floor\r\n      p1.rating = Math.max(100, p1.rating);\r\n      p2.rating = Math.max(100, p2.rating);\r\n\r\n      const playersSorted = _.flow(\r\n        _.keys,\r\n        _.map(id => ({ id, rating: playerInfo[id].rating })),\r\n        _.orderBy(['rating'], ['desc'])\r\n      )(playerInfo);\r\n      const battleDate =\r\n        score.dateObject > enemyScore.dateObject ? score.dateObject : enemyScore.dateObject;\r\n      playersSorted.forEach((player, index) => {\r\n        const lastPlace = playerInfo[player.id].lastPlace;\r\n        if (lastPlace !== index + 1) {\r\n          playerInfo[player.id].history.push({\r\n            place: index + 1,\r\n            date: battleDate.getTime(),\r\n          });\r\n          playerInfo[player.id].lastPlace = index + 1;\r\n        }\r\n      });\r\n\r\n      const p1LastRating = _.last(p1.ratingHistory);\r\n      const p2LastRating = _.last(p2.ratingHistory);\r\n      if (p1LastRating !== p1.rating) {\r\n        p1.ratingHistory.push({\r\n          rating: p1.rating,\r\n          date: battleDate.getTime(),\r\n        });\r\n      }\r\n      if (p2LastRating !== p2.rating) {\r\n        p2.ratingHistory.push({\r\n          rating: p2.rating,\r\n          date: battleDate.getTime(),\r\n        });\r\n      }\r\n    }),\r\n  ])(battles);\r\n\r\n  const ranking = _.flow(\r\n    _.keys,\r\n    _.map(key => ({\r\n      ..._.omit(['countAcc', 'sumAccuracy'], playerInfo[key]),\r\n      id: _.toInteger(key),\r\n      name: players[key].nickname,\r\n      nameArcade: players[key].arcade_name,\r\n      accuracy:\r\n        playerInfo[key].countAcc > 0\r\n          ? Math.round((playerInfo[key].sumAccuracy / playerInfo[key].countAcc) * 100) / 100\r\n          : null,\r\n      rating: Math.round(playerInfo[key].rating),\r\n      ratingRaw: playerInfo[key].rating,\r\n    })),\r\n    _.remove(i => i.battleCount < 20),\r\n    _.orderBy(['ratingRaw'], ['desc'])\r\n  )(playerInfo);\r\n  return ranking;\r\n};\r\n\r\nexport const setRankingsAction = ranking => ({\r\n  type: SET_RANKINGS,\r\n  ranking,\r\n});\r\n\r\nconst getListOfNames = _.map('name');\r\nconst getMapOfRatings = _.flow(\r\n  _.map(q => [q.name, q.rating]),\r\n  _.fromPairs\r\n);\r\nexport const setRankings = ranking => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(setRankingsAction(ranking));\r\n    try {\r\n      const [lastChangedRanking, lastChangedRankingPoints, lastFetchedRanking] = await Promise.all([\r\n        localForage.getItem('lastChangedRanking_v2'),\r\n        localForage.getItem('lastChangedRankingPoints_v2'),\r\n        localForage.getItem('lastFetchedRanking_v2'),\r\n      ]);\r\n      // console.log(ranking);\r\n      const listNow = getListOfNames(ranking);\r\n      const listLastFetched = getListOfNames(lastFetchedRanking);\r\n      const listLastChanged = getListOfNames(lastChangedRanking);\r\n      const mapPointsNow = getMapOfRatings(ranking);\r\n      const mapPointsLastFetched = getMapOfRatings(lastFetchedRanking);\r\n      const mapPointsLastChanged = getMapOfRatings(lastChangedRankingPoints);\r\n      let rankingsPointsMap = mapPointsLastChanged;\r\n      // console.log(mapPointsNow, mapPointsLastFetched, mapPointsLastChanged);\r\n      if (!_.isEqual(mapPointsNow, mapPointsLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRankingPoints_v2', lastFetchedRanking);\r\n        rankingsPointsMap = mapPointsLastFetched;\r\n      }\r\n      let listPrev = listLastChanged;\r\n      if (!_.isEqual(listNow, listLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRanking_v2', lastFetchedRanking);\r\n        listPrev = listLastFetched;\r\n      }\r\n      dispatch({\r\n        type: RANKING_CHANGE_SET,\r\n        listNow,\r\n        listPrev,\r\n        rankingsPointsMap,\r\n      });\r\n      localForage.setItem('lastFetchedRanking_v2', ranking);\r\n      // console.log(listNow, listLastFetched, listLastChanged);\r\n    } catch (error) {\r\n      console.warn('Cannot get ranking from local storage', error);\r\n    }\r\n  };\r\n};\r\n","import _ from 'lodash/fp';\r\n// import localForage from 'localforage';\r\n//\r\n// import { DEBUG } from 'constants/env';\r\n\r\nconst SET_PROFILES = `PROFILES/SET_PROFILES`;\r\nconst SET_FILTER = `PROFILES/SET_FILTER`;\r\nconst RESET_FILTER = `PROFILES/RESET_FILTER`;\r\n\r\nexport const defaultFilter = {};\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n  filter: defaultFilter,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_PROFILES:\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n      };\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getProfiles = (profiles, data, ranking) => {\r\n  const addHistoryData = profile => {\r\n    const id = _.values(profile.resultsByGrade)[0][0].result.playerId;\r\n    profile.ratingHistory =\r\n      _.flow(\r\n        _.find({ id }),\r\n        _.get('ratingHistory')\r\n      )(ranking) || [];\r\n    profile.rankingHistory =\r\n      _.flow(\r\n        _.find({ id }),\r\n        _.get('history'),\r\n        history =>\r\n          history && [...history, { place: _.get('place', _.last(history)), date: Date.now() }]\r\n      )(ranking) || [];\r\n    return profile;\r\n  };\r\n  return _.mapValues(addHistoryData, profiles);\r\n};\r\n\r\nexport const getInitialProfiles = (data, tracklist) => {\r\n  // console.log(tracklist);\r\n  let profiles = {};\r\n  const initializeProfile = id => {\r\n    const resultsByLevel = _.fromPairs(Array.from({ length: 28 }).map((x, i) => [i + 1, []]));\r\n    profiles[id] = { resultsByGrade: {}, resultsByLevel, lastResultDate: null };\r\n  };\r\n  const addResultData = (chart, result) => {\r\n    if (!profiles[result.playerId]) {\r\n      initializeProfile(result.playerId);\r\n    }\r\n    const profile = profiles[result.playerId];\r\n    profile.resultsByGrade[result.grade] = [\r\n      ...(profile.resultsByGrade[result.grade] || []),\r\n      { result, chart },\r\n    ];\r\n    profile.resultsByLevel[chart.chartLevel] = [\r\n      ...(profile.resultsByLevel[chart.chartLevel] || []),\r\n      { result, chart },\r\n    ];\r\n    if (result.isExactDate && profile.lastResultDate < result.dateObject) {\r\n      profile.lastResultDate = result.dateObject;\r\n    }\r\n  };\r\n  data.forEach(chart => {\r\n    chart.results.forEach(result => {\r\n      addResultData(chart, result);\r\n    });\r\n  });\r\n\r\n  const getBonusForGrade = (grade, level) =>\r\n    (({ A: 30, 'A+': 25, S: 20, SS: 15 }[grade] * (1 + 2 ** (level / 4))) / 15);\r\n  const getMinimumRatio = totalCharts =>\r\n    Math.min(totalCharts, 1 + totalCharts / 20 + Math.sqrt(Math.max(totalCharts - 1, 0)) * 0.7) /\r\n    totalCharts;\r\n\r\n  profiles = _.mapValues(profile => {\r\n    const neededGrades = ['A', 'A+', 'S', 'SS', 'SSS'];\r\n    profile.progress = {\r\n      double: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n      single: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n    };\r\n    const gradeIncrementMap = {\r\n      SSS: ['SS', 'S', 'A+', 'A'],\r\n      SS: ['SS', 'S', 'A+', 'A'],\r\n      S: ['S', 'A+', 'A'],\r\n      'A+': ['A+', 'A'],\r\n      A: ['A'],\r\n    };\r\n    const incrementLevel = (l, g, isS) => {\r\n      const oneChartValue =\r\n        1 / (isS ? tracklist.data.singlesLevels[l] : tracklist.data.doublesLevels[l]);\r\n      const prog = isS ? profile.progress.single : profile.progress.double;\r\n      prog[g][l] = prog[g][l] ? prog[g][l] + oneChartValue : oneChartValue;\r\n    };\r\n    _.keys(profile.resultsByLevel).forEach(level => {\r\n      profile.resultsByLevel[level].forEach(res => {\r\n        const thisGrade = res.result.grade;\r\n        const thisPlayerId = res.result.playerId;\r\n        const otherResults = res.chart.results.filter(r => r.playerId === thisPlayerId);\r\n        if (otherResults.length > 1) {\r\n          const sortedResults = otherResults.sort(\r\n            (a, b) => neededGrades.indexOf(b.grade) - neededGrades.indexOf(a.grade)\r\n          );\r\n          if (sortedResults[0].grade !== thisGrade) {\r\n            return; // Don't do anything when we have a different result with better grade\r\n          }\r\n        }\r\n        const gradeIncArray = gradeIncrementMap[thisGrade];\r\n        if (gradeIncArray) {\r\n          gradeIncArray.forEach(gradeInc => {\r\n            incrementLevel(level, gradeInc, res.chart.chartType === 'S');\r\n          });\r\n        }\r\n      });\r\n    });\r\n    // console.log(profile.progress);\r\n    ['single', 'double'].forEach(chartType => {\r\n      profile.progress[`${chartType}-bonus`] = 0;\r\n      _.keys(profile.progress[chartType]).forEach(grade => {\r\n        profile.progress[chartType][`${grade}-bonus`] = 0;\r\n        _.keys(profile.progress[chartType][grade]).forEach(level => {\r\n          const ratio = profile.progress[chartType][grade][level];\r\n          const totalCharts = tracklist.data[`${chartType}sLevels`][level];\r\n          const minimumRatio = getMinimumRatio(totalCharts);\r\n          const bonusCoefficient = Math.min(1, ratio / minimumRatio);\r\n          const rawBonus = getBonusForGrade(grade, level);\r\n          const bonus = rawBonus * bonusCoefficient;\r\n          profile.progress[chartType][grade][`${level}-bonus`] = bonus;\r\n          profile.progress[chartType][grade][`${level}-bonus-coef`] = bonusCoefficient;\r\n          if (bonus >= profile.progress[chartType][`${grade}-bonus`]) {\r\n            profile.progress[chartType][`${grade}-bonus`] = bonus;\r\n            profile.progress[chartType][`${grade}-bonus-level`] = level;\r\n            profile.progress[chartType][`${grade}-bonus-level-coef`] = bonusCoefficient;\r\n          }\r\n        });\r\n        profile.progress[`${chartType}-bonus`] += profile.progress[chartType][`${grade}-bonus`];\r\n      });\r\n    });\r\n    profile.progress.bonus = profile.progress['double-bonus'] + profile.progress['single-bonus'];\r\n    // console.log(profile.progress);\r\n    return profile;\r\n  }, profiles);\r\n  // const formatProfile = profile => {\r\n  //   // console.log(profile);\r\n  //   // const id = _.values(profile.resultsByGrade)[0][0].result.playerId;\r\n  //   const name = _.values(profile.resultsByGrade)[0][0].result.nickname;\r\n  //   return `${name} - ${profile.progress.bonus}\r\n  // S: A (${profile.progress.single['A-bonus'].toFixed(1)}) A+ (${profile.progress.single[\r\n  //     'A+-bonus'\r\n  //   ].toFixed(1)}) S (${profile.progress.single['S-bonus'].toFixed(\r\n  //     1\r\n  //   )}) SS (${profile.progress.single['SS-bonus'].toFixed(1)})\r\n  // D: A (${profile.progress.double['A-bonus'].toFixed(1)}) A+ (${profile.progress.double[\r\n  //     'A+-bonus'\r\n  //   ].toFixed(1)}) S (${profile.progress.double['S-bonus'].toFixed(\r\n  //     1\r\n  //   )}) SS (${profile.progress.double['SS-bonus'].toFixed(1)})`;\r\n  // };\r\n  // console.log(\r\n  //   _.join(\r\n  //     '\\n',\r\n  //     _.map(formatProfile, _.values(profiles).sort((a, b) => b.progress.bonus - a.progress.bonus))\r\n  //   )\r\n  // );\r\n  return profiles;\r\n};\r\n\r\nexport const setProfiles = data => ({\r\n  type: SET_PROFILES,\r\n  data,\r\n});\r\n\r\nexport const setProfilesFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\n\r\nexport const resetProfilesFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n\r\nexport const calculateProfileData = profileId => (dispatch, getState) => {};\r\n","export const HOST = 'https://vps720616.ovh.net:5000';\r\n","import _ from 'lodash/fp';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\n\r\nimport { getRankings, setRankings } from './ranking';\r\nimport { getProfiles, getInitialProfiles, setProfiles } from './profiles';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TOP/LOADING`;\r\nconst SUCCESS = `TOP/SUCCESS`;\r\nconst ERROR = `TOP/ERROR`;\r\nconst SET_FILTER = `TOP/SET_FILTER`;\r\nconst RESET_FILTER = `TOP/RESET_FILTER`;\r\n\r\nexport const defaultFilter = { showRank: true, showRankAndNorank: true };\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n  filter: defaultFilter,\r\n};\r\n\r\nconst preprocessData = data =>\r\n  _.flow(\r\n    _.get('top'),\r\n    _.values,\r\n    _.map(item => {\r\n      const fullRes = _.find(\r\n        r => _.every(_.isNumber, [r.perfects, r.greats, r.goods, r.bads, r.misses]),\r\n        item.results\r\n      );\r\n      const stepSum =\r\n        fullRes &&\r\n        [fullRes.perfects, fullRes.greats, fullRes.goods, fullRes.bads, fullRes.misses].reduce(\r\n          (sum, n) => sum + n,\r\n          0\r\n        );\r\n\r\n      return {\r\n        song: item.track,\r\n        chartLabel: item.chart_label,\r\n        chartLevel: item.chart_label.slice(1),\r\n        chartType: item.chart_label.slice(0, 1),\r\n        mix: item.mix,\r\n        results: item.results.map((res, index) => {\r\n          let resultInfoOverrides = {};\r\n          if (stepSum) {\r\n            const infos = [res.perfects, res.greats, res.goods, res.bads, res.misses];\r\n            let fixableIndex = -1;\r\n            let localStepSum = 0;\r\n            const canFix =\r\n              infos.filter((numb, index) => {\r\n                if (!_.isNumber(numb)) {\r\n                  fixableIndex = index;\r\n                  return true;\r\n                }\r\n                localStepSum += numb;\r\n                return false;\r\n              }).length === 1;\r\n            if (canFix) {\r\n              resultInfoOverrides[['perfect', 'great', 'good', 'bad', 'miss'][fixableIndex]] =\r\n                stepSum - localStepSum;\r\n            }\r\n          }\r\n          return {\r\n            playerId: res.player,\r\n            nickname: data.players[res.player].nickname,\r\n            nicknameArcade: data.players[res.player].arcade_name,\r\n            originalChartMix: res.originalChartMix,\r\n            originalChartLabel: res.originalChartLabel,\r\n            originalScore: res.originalScore,\r\n            date: res.gained,\r\n            dateObject: new Date(res.gained),\r\n            grade: res.grade,\r\n            isExactDate: !!res.exact_gain_date,\r\n            score: res.score,\r\n            scoreIncrease: res.score_increase,\r\n            calories: res.calories / 1000,\r\n            perfect: res.perfects,\r\n            great: res.greats,\r\n            good: res.goods,\r\n            bad: res.bads,\r\n            miss: res.misses,\r\n            combo: res.max_combo,\r\n            mods: res.mods_list,\r\n            isRank: !!res.rank_mode,\r\n            isHJ: (res.mods_list || '').split(' ').includes('HJ'),\r\n            ...resultInfoOverrides,\r\n          };\r\n        }),\r\n      };\r\n    }),\r\n    _.map(song => {\r\n      return {\r\n        ...song,\r\n        latestScoreDate: song.results.reduce(\r\n          (latest, current) => (current.date > latest ? current.date : latest),\r\n          song.results[0].date\r\n        ),\r\n        results: song.results.map(res => {\r\n          const perfects = (Math.sqrt(res.perfect) * _.toInteger(song.chartLevel)) / 2;\r\n          const acc = perfects\r\n            ? Math.floor(\r\n                ((perfects * 100 + res.great * 60 + res.good * 30 + res.miss * -20) /\r\n                  (perfects + res.great + res.good + res.bad + res.miss)) *\r\n                  100\r\n              ) / 100\r\n            : null;\r\n          return {\r\n            ...res,\r\n            accuracy: acc < 0 ? 0 : acc === 100 ? acc : acc && +acc.toFixed(2),\r\n            hasRankScore: _.some({ playerId: res.playerId, isRank: true }, song.results),\r\n          };\r\n        }),\r\n      };\r\n    }),\r\n    _.orderBy(['latestScoreDate', 'song', 'chartLevel'], ['desc', 'asc', 'desc'])\r\n  )(data);\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n        players: action.players,\r\n      };\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTopScores = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await fetchJson({\r\n        url: `${HOST}/top/v2`,\r\n      });\r\n      // const data = jsonData;\r\n      const processedData = preprocessData(data);\r\n      const initialProfiles = getInitialProfiles(processedData, getState().tracklist);\r\n      const rankings = getRankings(processedData, data, initialProfiles);\r\n      dispatch({\r\n        type: SUCCESS,\r\n        data: processedData,\r\n        players: _.flow(\r\n          _.toPairs,\r\n          _.map(([id, player]) => ({ ...player, id: _.toInteger(id) }))\r\n        )(data.players),\r\n      });\r\n      dispatch(setRankings(rankings));\r\n      const profiles = getProfiles(initialProfiles, processedData, rankings);\r\n      dispatch(setProfiles(profiles));\r\n      return processedData;\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\nexport const resetFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\n\r\nimport { setFilter } from 'reducers/top';\r\n\r\nconst SELECT_PRESET = `PRESETS/SELECT_PRESET`;\r\nconst LOAD_PRESETS = `PRESETS/LOAD_PRESETS`;\r\nconst LOADING_START = `PRESETS/LOADING_START`;\r\nconst LOADING_END = `PRESETS/LOADING_END`;\r\n\r\nconst initialState = {\r\n  presets: [],\r\n  currentPreset: null,\r\n  isLoading: false,\r\n};\r\n\r\nconst itemToOption = item =>\r\n  item && {\r\n    ...item,\r\n    label: item.name,\r\n    value: item.name,\r\n  };\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_PRESETS:\r\n      const currentPreset = _.find({ name: _.get('name', state.currentPreset) }, action.presets);\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(currentPreset) || null,\r\n        presets: _.map(itemToOption, action.presets),\r\n      };\r\n    case SELECT_PRESET:\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(action.currentPreset),\r\n      };\r\n    case LOADING_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case LOADING_END:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst reloadPresets = presets => ({ type: LOAD_PRESETS, presets: presets || [] });\r\n\r\nconst startLoading = () => ({\r\n  type: LOADING_START,\r\n});\r\n\r\nconst endLoading = () => ({\r\n  type: LOADING_END,\r\n});\r\n\r\nexport const selectPreset = currentPreset => ({\r\n  type: SELECT_PRESET,\r\n  currentPreset,\r\n});\r\n\r\nexport const loadPresets = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    dispatch(reloadPresets(presets));\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const savePreset = name => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const { filter } = getState().top;\r\n    const newPreset = { name, filter };\r\n    if (!_.some({ name }, presets)) {\r\n      const newPresets = [...(presets || []), newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      dispatch(selectPreset(newPreset));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    } else if (window.confirm('Preset with this name already exists, replace it?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      const newPresets = [...withoutOldPreset, newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const openPreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const currentPreset = getState().presets.currentPreset;\r\n  const name = _.get('name', currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = name && _.find({ name }, presets);\r\n    if (preset) {\r\n      dispatch(selectPreset(currentPreset));\r\n      dispatch(setFilter(currentPreset.filter));\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const deletePreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const name = _.get('name', getState().presets.currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = _.find({ name }, presets);\r\n    if (preset && window.confirm('Are you sure you want to delete selected preset?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      dispatch(reloadPresets(withoutOldPreset));\r\n      localForage.setItem('filterPresets', withoutOldPreset);\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaLayerGroup, FaFolderOpen, FaSave, FaPlus, FaTrashAlt } from 'react-icons/fa';\r\nimport Select from 'react-select';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport Input from 'components/Shared/Input/Input';\r\n\r\nimport { loadPresets, savePreset, selectPreset, openPreset, deletePreset } from 'reducers/presets';\r\n\r\nconst overlayItem = (\r\n  <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n    <FaLayerGroup />\r\n    пресеты\r\n  </button>\r\n);\r\n\r\nconst noPresetsMessage = () => 'пусто';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ...state.presets,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  loadPresets,\r\n  savePreset,\r\n  openPreset,\r\n  deletePreset,\r\n  selectPreset,\r\n};\r\n\r\nclass PresetsControl extends React.Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    this.props.loadPresets();\r\n  }\r\n\r\n  onChangeSelection = selected => {\r\n    this.props.selectPreset(selected.name);\r\n  };\r\n\r\n  onRewritePreset = () => {\r\n    const { currentPreset } = this.props;\r\n    this.props.savePreset(currentPreset.name);\r\n  };\r\n\r\n  onSavePreset = () => {\r\n    const { name } = this.state;\r\n    this.props.savePreset(name);\r\n    this.setState({ isAddingNew: false });\r\n  };\r\n\r\n  render() {\r\n    const { presets, currentPreset, isLoading } = this.props;\r\n    const { name, isAddingNew } = this.state;\r\n    return (\r\n      <div>\r\n        <Overlay overlayItem={overlayItem}>\r\n          <div className=\"presets-control-overlay\">\r\n            <Select\r\n              className=\"select _margin-bottom\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"пресеты...\"\r\n              options={presets}\r\n              value={currentPreset}\r\n              onChange={this.props.selectPreset}\r\n              noOptionsMessage={noPresetsMessage}\r\n            />\r\n            {currentPreset && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.props.openPreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaFolderOpen /> открыть\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.onRewritePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaSave /> перезаписать\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon\"\r\n                  onClick={this.props.deletePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaTrashAlt /> удалить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {!isAddingNew && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left _self-align-end\"\r\n                  onClick={() => this.setState({ isAddingNew: true })}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaPlus /> добавить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {isAddingNew && (\r\n              <div className=\"adding-new _margin-bottom\">\r\n                <Input\r\n                  value={name}\r\n                  placeholder=\"имя пресета...\"\r\n                  className=\"form-control\"\r\n                  onChange={name => this.setState({ name })}\r\n                />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={this.onSavePreset}\r\n                  disabled={!name || isLoading}\r\n                >\r\n                  <FaSave /> сохранить\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={() => this.setState({ isAddingNew: false })}\r\n                  disabled={isLoading}\r\n                >\r\n                  отмена\r\n                </button>\r\n              </div>\r\n            )}\r\n            {/* <div>\r\n              <Toggle\r\n                checked={false}\r\n                onToggle={active => {\r\n                  localForage.setItem('showTabs', active);\r\n                }}\r\n              >\r\n                показывать табы с пресетами\r\n              </Toggle>\r\n            </div> */}\r\n          </div>\r\n        </Overlay>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PresetsControl);\r\n","import React from 'react';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport moment from 'moment';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\n\r\nconst timeStyle = {\r\n  flavour: 'long',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nexport const tooltipFormatter = date => date.toLocaleDateString();\r\nexport const tooltipFormatterForBests = date => (\r\n  <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n    <div>точная дата взятия неизвестна</div>\r\n    <div>скор был записан с my best или machine best</div>\r\n    <div>дата записи: {date.toLocaleDateString()}</div>\r\n  </div>\r\n);\r\n\r\nexport const getTimeAgo = date => {\r\n  const dayDiff = moment()\r\n    .startOf('day')\r\n    .diff(moment(date).startOf('day'), 'days');\r\n  return dayDiff === 0 ? 'сегодня' : dayDiff === 1 ? 'вчера' : timeAgo.format(date, timeStyle);\r\n};\r\n","export const colorsArray = [\r\n  '#4DB3FF',\r\n  '#80B300',\r\n  '#FF6655',\r\n  '#FF99E6',\r\n  '#33FFCC',\r\n  '#e633c8',\r\n  '#dbe812',\r\n  '#FF1A66',\r\n  '#991AFF',\r\n  '#E6B333',\r\n  '#1AB399',\r\n  '#4D8066',\r\n  '#CC9999',\r\n  '#00E680',\r\n  '#809980',\r\n  '#E6FF80',\r\n  '#1AFF33',\r\n  '#999933',\r\n  '#E6331A',\r\n  '#CCCC00',\r\n  '#66E64D',\r\n  '#4D80CC',\r\n  '#9900B3',\r\n  '#4DB380',\r\n  '#FF4D4D',\r\n];\r\n","import _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport matchSorter from 'match-sorter';\r\n\r\nimport { SORT, CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nexport const playersSelector = createSelector(\r\n  state => state.top.players,\r\n  _.flow(\r\n    _.toPairs,\r\n    _.map(([id, { nickname, arcade_name }]) => ({\r\n      label: `${nickname} (${arcade_name})`,\r\n      value: nickname,\r\n    })),\r\n    _.sortBy(it => _.toLower(it.label))\r\n  )\r\n);\r\n\r\nconst filterCharts = (filter, rows) => {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filter);\r\n  const type = _.getOr(null, 'type', filter);\r\n\r\n  const filtered = _.flow(\r\n    _.filter(row => {\r\n      return (\r\n        row.chartLevel >= range[0] &&\r\n        row.chartLevel <= range[1] &&\r\n        (!type || type === row.chartType)\r\n      );\r\n    })\r\n  )(rows);\r\n  return filtered;\r\n};\r\n\r\nconst getFilteredData = (data, filter) => {\r\n  // const start = performance.now();\r\n  const names = _.map('value', filter.players);\r\n  const namesOr = _.map('value', filter.playersOr);\r\n  const namesNot = _.map('value', filter.playersNot);\r\n  const sortingType = _.get('value', filter.sortingType);\r\n  const protagonist = _.get('value', filter.protagonist);\r\n  const excludeAntagonists = _.map('value', filter.excludeAntagonists);\r\n\r\n  const defaultSorting = [_.orderBy(['latestScoreDate'], ['desc'])];\r\n  const protagonistSorting = [\r\n    _.filter(row => _.map('nickname', row.results).includes(protagonist)),\r\n    _.map(row => {\r\n      const protIndex = _.findIndex({ nickname: protagonist }, row.results);\r\n      const protScore = row.results[protIndex].score;\r\n      const enemies = _.flow([\r\n        _.take(protIndex),\r\n        _.uniqBy('nickname'),\r\n        _.remove(res => excludeAntagonists.includes(res.nickname) || res.score === protScore),\r\n      ])(row.results);\r\n      const distance = Math.sqrt(\r\n        _.reduce((dist, enemy) => dist + (enemy.score / protScore - 0.99) ** 2, 0, enemies)\r\n      );\r\n      return {\r\n        ...row,\r\n        distanceFromProtagonist: distance,\r\n      };\r\n    }),\r\n    _.orderBy(['distanceFromProtagonist'], ['desc']),\r\n  ];\r\n  const getScoreSorting = direction => [\r\n    _.filter(row => _.map('nickname', row.results).includes(protagonist)),\r\n    _.orderBy(\r\n      [\r\n        row => {\r\n          return _.getOr(\r\n            direction === 'asc' ? Infinity : -Infinity,\r\n            'ratingDiff',\r\n            _.find({ nickname: protagonist }, row.results)\r\n          );\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const sortingFunctions =\r\n    {\r\n      [SORT.DEFAULT]: defaultSorting,\r\n      [SORT.PROTAGONIST]: protagonistSorting,\r\n      [SORT.RANK_ASC]: getScoreSorting('asc'),\r\n      [SORT.RANK_DESC]: getScoreSorting('desc'),\r\n    }[sortingType] || defaultSorting;\r\n\r\n  const result = _.flow(\r\n    _.compact([\r\n      filter.chartRange && (items => filterCharts(filter.chartRange, items)),\r\n      !filter.showRank &&\r\n        _.map(row => ({ ...row, results: _.filter(res => !res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        filter.showOnlyRank &&\r\n        _.map(row => ({ ...row, results: _.filter(res => res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        !filter.showOnlyRank &&\r\n        !filter.showRankAndNorank &&\r\n        _.map(row => {\r\n          const occuredNames = [];\r\n          return {\r\n            ...row,\r\n            results: _.filter(res => {\r\n              const alreadyOccured = occuredNames.includes(res.nickname);\r\n              occuredNames.push(res.nickname);\r\n              return !alreadyOccured;\r\n            }, row.results),\r\n          };\r\n        }),\r\n      (names.length || namesOr.length || namesNot.length) &&\r\n        _.filter(row => {\r\n          const rowNames = _.map('nickname', row.results);\r\n          return (\r\n            (!names.length || _.every(name => rowNames.includes(name), names)) &&\r\n            (!namesOr.length || _.some(name => rowNames.includes(name), namesOr)) &&\r\n            (!namesNot.length || !_.some(name => rowNames.includes(name), namesNot))\r\n          );\r\n        }),\r\n      _.filter(row => _.size(row.results)),\r\n      ...sortingFunctions,\r\n      filter.song && (items => matchSorter(items, filter.song, { keys: ['song'] })),\r\n    ])\r\n  )(data);\r\n  // console.log('Elapsed:', performance.now() - start);\r\n  return result;\r\n};\r\n\r\nexport const filteredDataSelector = createSelector(\r\n  state => state.top.data,\r\n  state => state.top.filter,\r\n  getFilteredData\r\n);\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash/fp';\r\nimport Select from 'react-select';\r\nimport classNames from 'classnames';\r\nimport numeral from 'numeral';\r\nimport localForage from 'localforage';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport { FaRedoAlt, FaExclamationTriangle, FaSearch, FaYoutube } from 'react-icons/fa';\r\n\r\n// styles\r\nimport 'react-responsive-ui/style.css';\r\nimport './leaderboard.scss';\r\n\r\n// components\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport CollapsibleBar from 'components/Shared/CollapsibleBar';\r\nimport ChartFilter from './ChartFilter';\r\nimport PresetsControl from './PresetsControl';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\nimport { SORT } from 'constants/leaderboard';\r\nimport { DEBUG } from 'constants/env';\r\n\r\n// reducers\r\nimport { fetchTopScores, setFilter, resetFilter, defaultFilter } from 'reducers/top';\r\nimport { selectPreset, openPreset } from 'reducers/presets';\r\n\r\n// utils\r\nimport { tooltipFormatter, tooltipFormatterForBests, getTimeAgo } from 'utils/leaderboards';\r\nimport { colorsArray } from 'utils/colors';\r\nimport { playersSelector, filteredDataSelector } from 'reducers/selectors';\r\n\r\n// code\r\nconst sortingOptions = [\r\n  {\r\n    label: 'новизне скоров',\r\n    value: SORT.DEFAULT,\r\n  },\r\n  // {\r\n  //   label: 'отставанию от остальных',\r\n  //   value: SORT.PROTAGONIST,\r\n  // },\r\n  // ...(DEBUG\r\n  //   ? [\r\n  {\r\n    label: 'от худших результатов',\r\n    value: SORT.RANK_ASC,\r\n  },\r\n  {\r\n    label: 'от лучших результатов',\r\n    value: SORT.RANK_DESC,\r\n  },\r\n  //   ]\r\n  // : []),\r\n];\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    players: playersSelector(state),\r\n    filteredData: filteredDataSelector(state),\r\n    data: state.top.data,\r\n    filter: state.top.filter,\r\n    error: state.top.error,\r\n    isLoading: state.top.isLoading,\r\n    presets: state.presets.presets,\r\n    currentPreset: state.presets.currentPreset,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopScores,\r\n  setFilter,\r\n  resetFilter,\r\n  selectPreset,\r\n  openPreset,\r\n};\r\n\r\nclass Leaderboard extends Component {\r\n  static propTypes = {\r\n    match: toBe.object,\r\n    data: toBe.array,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  state = { showItemsCount: 20 };\r\n\r\n  setFilter = _.curry((name, value) => {\r\n    const filter = { ...this.props.filter, [name]: value };\r\n    this.props.setFilter(filter);\r\n    localForage.setItem('filter', filter);\r\n  });\r\n\r\n  resetFilter = () => {\r\n    this.props.resetFilter();\r\n    localForage.setItem('filter', defaultFilter);\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchTopScores();\r\n  };\r\n\r\n  renderSimpleSearch() {\r\n    const { isLoading, filter } = this.props;\r\n    return (\r\n      <div className=\"simple-search\">\r\n        <div className=\"song-name _margin-right _margin-bottom\">\r\n          <Input\r\n            value={filter.song || ''}\r\n            placeholder=\"название песни...\"\r\n            className=\"form-control\"\r\n            onChange={this.setFilter('song')}\r\n          />\r\n        </div>\r\n        <div className=\"chart-range _margin-right _margin-bottom\">\r\n          <ChartFilter filterValue={filter.chartRange} onChange={this.setFilter('chartRange')} />\r\n        </div>\r\n        <div className=\"_flex-fill\" />\r\n        <div className=\"_flex-row _margin-bottom\">\r\n          <PresetsControl />\r\n          <button className=\"btn btn-sm btn-dark btn-icon _margin-right\" onClick={this.resetFilter}>\r\n            <FaRedoAlt /> сбросить фильтры\r\n          </button>\r\n          <button\r\n            disabled={isLoading}\r\n            className=\"btn btn-sm btn-dark btn-icon\"\r\n            onClick={this.onRefresh}\r\n          >\r\n            <FaSearch /> обновить\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFilters() {\r\n    const { players, filter } = this.props;\r\n\r\n    return (\r\n      <div className=\"filters\">\r\n        <div className=\"people-filters\">\r\n          <label className=\"label\">показывать чарты, которые сыграл:</label>\r\n          <div className=\"players-block\">\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">каждый из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'players', filter)}\r\n                onChange={this.setFilter('players')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и хоть один из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersOr', filter)}\r\n                onChange={this.setFilter('playersOr')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и никто из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersNot', filter)}\r\n                onChange={this.setFilter('playersNot')}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Toggle\r\n            checked={_.getOr(false, 'showRank', filter)}\r\n            onChange={this.setFilter('showRank')}\r\n          >\r\n            показывать скоры на ранке\r\n          </Toggle>\r\n        </div>\r\n        {_.get('showRank', filter) && (\r\n          <>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showOnlyRank', filter)}\r\n                onChange={value => {\r\n                  this.setFilter('showOnlyRank', value);\r\n                  if (_.get('showRankAndNorank', filter)) {\r\n                    this.setFilter('showRankAndNorank', false);\r\n                  }\r\n                }}\r\n              >\r\n                <strong>только</strong> на ранке\r\n              </Toggle>\r\n            </div>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showRankAndNorank', filter)}\r\n                onChange={value => {\r\n                  this.setFilter('showRankAndNorank', value);\r\n                  if (_.get('showOnlyRank', filter)) {\r\n                    this.setFilter('showOnlyRank', false);\r\n                  }\r\n                }}\r\n              >\r\n                показывать лучшие скоры с ранком и без\r\n              </Toggle>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSortings() {\r\n    const { players, filter } = this.props;\r\n    return (\r\n      <div className=\"sortings\">\r\n        <div>\r\n          <label className=\"label\">сортировать по</label>\r\n          <Select\r\n            placeholder=\"выберите сортировку\"\r\n            className=\"select\"\r\n            classNamePrefix=\"select\"\r\n            clearable={false}\r\n            options={sortingOptions}\r\n            value={_.getOr(sortingOptions[0], 'sortingType', filter)}\r\n            onChange={this.setFilter('sortingType')}\r\n          />\r\n        </div>\r\n        {[SORT.PROTAGONIST, SORT.RANK_ASC, SORT.RANK_DESC].includes(\r\n          _.get('sortingType.value', filter)\r\n        ) && (\r\n          <div>\r\n            <label className=\"label\">протагонист (чьи результаты):</label>\r\n            <Select\r\n              className={classNames('select players', {\r\n                'red-border': !_.get('protagonist', filter),\r\n              })}\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              value={_.getOr(null, 'protagonist', filter)}\r\n              onChange={this.setFilter('protagonist')}\r\n            />\r\n          </div>\r\n        )}\r\n        {[SORT.PROTAGONIST].includes(_.get('sortingType.value', filter)) && (\r\n          <div>\r\n            <label className=\"label\">не учитывать в сравнении:</label>\r\n            <Select\r\n              closeMenuOnSelect={false}\r\n              className=\"select players\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              isMulti\r\n              value={_.getOr([], 'excludeAntagonists', filter)}\r\n              onChange={this.setFilter('excludeAntagonists')}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, filteredData, error, filter } = this.props;\r\n    const { showItemsCount } = this.state;\r\n    const canShowMore = filteredData.length > showItemsCount;\r\n    const visibleData = _.slice(0, showItemsCount, filteredData);\r\n\r\n    const hasProtagonist = [SORT.PROTAGONIST, SORT.RANK_ASC, SORT.RANK_DESC].includes(\r\n      _.get('sortingType.value', filter)\r\n    );\r\n    const protagonistName = _.get('protagonist.value', filter);\r\n    const uniqueSelectedNames = _.slice(\r\n      0,\r\n      colorsArray.length,\r\n      _.uniq(\r\n        _.compact([\r\n          hasProtagonist && protagonistName,\r\n          ..._.map('value', filter.players),\r\n          ..._.map('value', filter.playersOr),\r\n        ])\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div className=\"leaderboard-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"search-block\">\r\n            {this.renderSimpleSearch()}\r\n            <CollapsibleBar title=\"фильтры\">{this.renderFilters()}</CollapsibleBar>\r\n            <CollapsibleBar title=\"сортировка\">{this.renderSortings()}</CollapsibleBar>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!!this.props.presets.length && (\r\n            <div className=\"presets-buttons\">\r\n              <span>пресеты:</span>\r\n              {this.props.presets.map(preset => (\r\n                <ToggleButton\r\n                  text={preset.name}\r\n                  className=\"btn btn-sm btn-dark _margin-right\"\r\n                  active={_.get('filter', preset) === this.props.filter}\r\n                  onToggle={() => {\r\n                    this.props.selectPreset(preset);\r\n                    this.props.openPreset();\r\n                  }}\r\n                ></ToggleButton>\r\n              ))}\r\n            </div>\r\n          )}\r\n          <div className=\"top-list\">\r\n            {_.isEmpty(filteredData) && !isLoading && 'ничего не найдено'}\r\n            {!isLoading &&\r\n              visibleData.map((chart, chartIndex) => {\r\n                let topPlace = 1;\r\n                const occuredNicknames = [];\r\n                const results = chart.results.map((res, index) => {\r\n                  const isSecondOccurenceInResults = occuredNicknames.includes(res.nickname);\r\n                  occuredNicknames.push(res.nickname);\r\n                  if (index === 0) {\r\n                    topPlace = 1;\r\n                  } else if (\r\n                    !isSecondOccurenceInResults &&\r\n                    res.score !== _.get([index - 1, 'score'], chart.results)\r\n                  ) {\r\n                    topPlace += 1;\r\n                  }\r\n                  return {\r\n                    ...res,\r\n                    topPlace,\r\n                    isSecondOccurenceInResults,\r\n                  };\r\n                });\r\n                return (\r\n                  <div className=\"song-block\" key={chart.song + chart.chartLabel}>\r\n                    <div className=\"song-name\">\r\n                      <div\r\n                        className={classNames('chart-name', {\r\n                          single: chart.chartType === 'S',\r\n                        })}\r\n                      >\r\n                        <span className=\"chart-letter\">{chart.chartType}</span>\r\n                        <span className=\"chart-number\">{chart.chartLevel}</span>\r\n                      </div>\r\n                      <div>{chart.song}</div>\r\n                      <div className=\"youtube-link\">\r\n                        <a\r\n                          href={`https://youtube.com/results?search_query=${chart.song\r\n                            .replace(/ /g, '+')\r\n                            .replace(/-/g, '')}+${chart.chartLabel}`}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          <FaYoutube />\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"charts\">\r\n                      <div className=\"chart\">\r\n                        <div className=\"results\">\r\n                          <table>\r\n                            {chartIndex === 0 && (\r\n                              <thead>\r\n                                <tr>\r\n                                  <th className=\"place\"></th>\r\n                                  <th className=\"nickname\"></th>\r\n                                  <th className=\"rank\"></th>\r\n                                  <th className=\"score\">score</th>\r\n                                  <th className=\"grade\"></th>\r\n                                  <th className=\"number\">miss</th>\r\n                                  <th className=\"number\">bad</th>\r\n                                  <th className=\"number\">good</th>\r\n                                  <th className=\"number\">great</th>\r\n                                  <th className=\"number\">perfect</th>\r\n                                  <th className=\"combo\">combo</th>\r\n                                  <th className=\"accuracy\">accuracy</th>\r\n                                  <th className=\"date\"></th>\r\n                                </tr>\r\n                              </thead>\r\n                            )}\r\n                            <tbody>\r\n                              {results.map(res => {\r\n                                const nameIndex = uniqueSelectedNames.indexOf(res.nickname);\r\n                                return (\r\n                                  <tr\r\n                                    key={res.score + res.nickname}\r\n                                    className={classNames({\r\n                                      empty: !res.isExactDate,\r\n                                      latest: res.date === chart.latestScoreDate,\r\n                                    })}\r\n                                  >\r\n                                    <td className=\"place\">\r\n                                      {res.isSecondOccurenceInResults ? '' : `#${res.topPlace}`}\r\n                                    </td>\r\n                                    <td\r\n                                      className=\"nickname\"\r\n                                      style={\r\n                                        nameIndex > -1\r\n                                          ? { fontWeight: 'bold', color: colorsArray[nameIndex] }\r\n                                          : {}\r\n                                      }\r\n                                    >\r\n                                      {res.nickname}\r\n                                      {DEBUG && (\r\n                                        <span>\r\n                                          {' '}\r\n                                          {res.startingRating &&\r\n                                            Math.round(res.startingRating)}{' '}\r\n                                          {res.ratingDiff && Math.round(res.ratingDiff)}{' '}\r\n                                          {res.ratingDiffLast && Math.round(res.ratingDiffLast)}\r\n                                        </span>\r\n                                      )}\r\n                                      {!DEBUG &&\r\n                                        hasProtagonist &&\r\n                                        res.nickname === protagonistName &&\r\n                                        res.ratingDiff && (\r\n                                          <span>\r\n                                            {` (${res.ratingDiff > 0 ? '+' : ''}${Math.round(\r\n                                              res.ratingDiff\r\n                                            )})`}\r\n                                          </span>\r\n                                        )}\r\n                                      {_.get('sortingType.value', filter) === SORT.PROTAGONIST &&\r\n                                        res.nickname === protagonistName &&\r\n                                        chart.distanceFromProtagonist > 0 && (\r\n                                          <span className=\"protagonist-diff\">\r\n                                            {' '}\r\n                                            -{(chart.distanceFromProtagonist * 100).toFixed(1)}%\r\n                                          </span>\r\n                                        )}\r\n                                    </td>\r\n                                    <td\r\n                                      className={classNames('judge', {\r\n                                        vj: res.isRank,\r\n                                        hj: res.isHJ,\r\n                                      })}\r\n                                    >\r\n                                      {res.isRank && (\r\n                                        <div className=\"inner\">\r\n                                          {res.isExactDate ? (\r\n                                            'VJ'\r\n                                          ) : (\r\n                                            <Tooltip\r\n                                              content={\r\n                                                <div>\r\n                                                  наличие ранка на этом результате было угадано,\r\n                                                  основываясь на скоре\r\n                                                </div>\r\n                                              }\r\n                                              tooltipClassName=\"timeago-tooltip\"\r\n                                            >\r\n                                              VJ?\r\n                                            </Tooltip>\r\n                                          )}\r\n                                        </div>\r\n                                      )}\r\n                                      {res.isHJ && <div className=\"inner\">HJ</div>}\r\n                                    </td>\r\n                                    <td className=\"score\">\r\n                                      <Overlay\r\n                                        overlayClassName=\"score-overlay-outer\"\r\n                                        overlayItem={\r\n                                          <span>{numeral(res.score).format('0,0')}</span>\r\n                                        }\r\n                                        placement=\"top\"\r\n                                      >\r\n                                        <div className=\"score-overlay\">\r\n                                          <div>\r\n                                            <span className=\"_grey\">игрок: </span>\r\n                                            <NavLink\r\n                                              exact\r\n                                              to={routes.profile.getPath({ name: res.nickname })}\r\n                                            >\r\n                                              {res.nickname} ({res.nicknameArcade})\r\n                                            </NavLink>\r\n                                          </div>\r\n                                          {!res.isExactDate && (\r\n                                            <div className=\"warning\">\r\n                                              <FaExclamationTriangle />\r\n                                              рекорд взят с my best. часть данных недоступна\r\n                                            </div>\r\n                                          )}\r\n                                          {res.isExactDate && (\r\n                                            <>\r\n                                              <div>\r\n                                                <span className=\"_grey\">моды: </span>\r\n                                                {res.mods || '—'}\r\n                                              </div>\r\n                                              <div>\r\n                                                <span className=\"_grey\">ккал: </span>\r\n                                                {res.calories || '—'}\r\n                                              </div>\r\n                                              {res.originalChartMix && (\r\n                                                <div>\r\n                                                  <div className=\"warning\">\r\n                                                    <FaExclamationTriangle />\r\n                                                    было сыграно на {res.originalChartMix}\r\n                                                  </div>\r\n                                                  {res.originalChartLabel && (\r\n                                                    <div>\r\n                                                      <span className=\"_grey\">\r\n                                                        оригинальный чарт:{' '}\r\n                                                      </span>\r\n                                                      {res.originalChartLabel}\r\n                                                    </div>\r\n                                                  )}\r\n                                                  {res.originalScore && (\r\n                                                    <div>\r\n                                                      <span className=\"_grey\">\r\n                                                        оригинальный скор:{' '}\r\n                                                      </span>\r\n                                                      {res.originalScore}\r\n                                                    </div>\r\n                                                  )}\r\n                                                </div>\r\n                                              )}\r\n                                            </>\r\n                                          )}\r\n                                        </div>\r\n                                      </Overlay>\r\n                                    </td>\r\n                                    <td className=\"grade\">\r\n                                      <div className=\"img-holder\">\r\n                                        {res.grade && res.grade !== '?' && (\r\n                                          <img\r\n                                            src={`${process.env.PUBLIC_URL}/grades/${res.grade}.png`}\r\n                                            alt={res.grade}\r\n                                          />\r\n                                        )}\r\n                                        {res.grade === '?' && null}\r\n                                      </div>\r\n                                    </td>\r\n                                    <td className=\"number miss\">{res.miss}</td>\r\n                                    <td className=\"number bad\">{res.bad}</td>\r\n                                    <td className=\"number good\">{res.good}</td>\r\n                                    <td className=\"number great\">{res.great}</td>\r\n                                    <td className=\"number perfect\">{res.perfect}</td>\r\n                                    <td className=\"combo\">\r\n                                      {res.combo}\r\n                                      {res.combo ? 'x' : ''}\r\n                                    </td>\r\n                                    <td className=\"accuracy\">\r\n                                      {res.accuracy}\r\n                                      {res.accuracy ? '%' : ''}\r\n                                    </td>\r\n                                    <td\r\n                                      className={classNames('date', {\r\n                                        latest: res.date === chart.latestScoreDate,\r\n                                      })}\r\n                                    >\r\n                                      <Tooltip\r\n                                        content={\r\n                                          res.isExactDate\r\n                                            ? tooltipFormatter(res.dateObject)\r\n                                            : tooltipFormatterForBests(res.dateObject)\r\n                                        }\r\n                                        tooltipClassName=\"timeago-tooltip\"\r\n                                      >\r\n                                        {getTimeAgo(res.dateObject)}\r\n                                        {res.isExactDate ? '' : '?'}\r\n                                      </Tooltip>\r\n                                    </td>\r\n                                  </tr>\r\n                                );\r\n                              })}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            {!isLoading && canShowMore && (\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() =>\r\n                  this.setState(state => ({ showItemsCount: state.showItemsCount + 10 }))\r\n                }\r\n              >\r\n                show more...\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Leaderboard);\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\nimport numeral from 'numeral';\r\nimport classNames from 'classnames';\r\nimport { GiQueenCrown } from 'react-icons/gi';\r\nimport { FaAngleDoubleUp, FaAngleDoubleDown } from 'react-icons/fa';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nconst getGradeImg = grade => (\r\n  <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n);\r\n\r\nexport default function RankingList({ ranking, isLoading }) {\r\n  return (\r\n    <div className=\"ranking-list\">\r\n      {_.isEmpty(ranking) && !isLoading && 'ничего не найдено'}\r\n      {isLoading && <Loader />}\r\n      {!isLoading && (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"place\"></th>\r\n              <th className=\"change\"></th>\r\n              <th className=\"name\">name</th>\r\n              <th className=\"name2\">piu name</th>\r\n              <th className=\"rating\">elo</th>\r\n              <th className=\"total-score\">total score</th>\r\n              <th className=\"grades sss\">{getGradeImg('SSS')}</th>\r\n              <th className=\"grades ss\">{getGradeImg('SS')}</th>\r\n              <th className=\"grades s\">{getGradeImg('S')}</th>\r\n              <th className=\"grades a\">{getGradeImg('A+')}</th>\r\n              <th className=\"grades b\">{getGradeImg('B')}</th>\r\n              <th className=\"grades c\">{getGradeImg('C')}</th>\r\n              <th className=\"grades d\">{getGradeImg('D')}</th>\r\n              <th className=\"grades f\">{getGradeImg('F')}</th>\r\n              <th className=\"playcount\">scores</th>\r\n              <th className=\"accuracy\">accuracy</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {ranking.map((player, playerIndex) => {\r\n              return (\r\n                <tr className=\"player\" key={player.name}>\r\n                  <td className=\"place\">\r\n                    {playerIndex === 0 ? <GiQueenCrown /> : `#${playerIndex + 1}`}\r\n                  </td>\r\n                  <td className=\"change\">\r\n                    {player.change > 0 && (\r\n                      <div className=\"change-holder up\">\r\n                        <span>{player.change}</span>\r\n                        <FaAngleDoubleUp />\r\n                      </div>\r\n                    )}\r\n                    {player.change < 0 && (\r\n                      <div className=\"change-holder down\">\r\n                        <span>{-player.change}</span>\r\n                        <FaAngleDoubleDown />\r\n                      </div>\r\n                    )}\r\n                    {!!player.change && _.isString(player.change) && (\r\n                      <div className=\"change-holder text\">\r\n                        <span>{player.change}</span>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"name\">\r\n                    <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                      {player.name}\r\n                    </NavLink>\r\n                  </td>\r\n                  <td className=\"name\">\r\n                    <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                      {player.nameArcade}\r\n                    </NavLink>\r\n                  </td>\r\n                  <td className=\"rating\">\r\n                    {player.rating}{' '}\r\n                    {!!player.prevRating && player.prevRating !== player.rating && (\r\n                      <span\r\n                        className={classNames('rating-change', {\r\n                          down: player.prevRating > player.rating,\r\n                          up: player.prevRating < player.rating,\r\n                        })}\r\n                      >\r\n                        {player.prevRating < player.rating ? '+' : ''}\r\n                        {player.rating - player.prevRating}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"total-score\">\r\n                    <div>S: {numeral(player.totalScore.S).format('0,0')}</div>\r\n                    <div>D: {numeral(player.totalScore.D).format('0,0')}</div>\r\n                  </td>\r\n                  <td className=\"grades sss\">{player.grades.SSS}</td>\r\n                  <td className=\"grades ss\">{player.grades.SS}</td>\r\n                  <td className=\"grades s\">{player.grades.S}</td>\r\n                  <td className=\"grades a\">{player.grades.A}</td>\r\n                  <td className=\"grades b\">{player.grades.B}</td>\r\n                  <td className=\"grades c\">{player.grades.C}</td>\r\n                  <td className=\"grades d\">{player.grades.D}</td>\r\n                  <td className=\"grades f\">{player.grades.F}</td>\r\n                  <td className=\"playcount\">{player.count}</td>\r\n                  <td className=\"accuracy\">{player.accuracy ? `${player.accuracy}%` : ''}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function RankingFaq() {\r\n  return (\r\n    <div className=\"faq\">\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Как считается рейтинг?</div>\r\n        <div className=\"answer\">\r\n          A: Используется <a href=\"https://en.wikipedia.org/wiki/Elo_rating_system\">рейтинг Эло</a>,\r\n          широко используемый в шахматах и других играх, слегка модицированный под условия игры на\r\n          пампе. Средний рейтинг - 1000. Коэффициент К зависит от уровня чарта (более сложные чарты\r\n          сильнее влияют на рейтинг). Количество очков влияет на заработанный рейтинг (маленький\r\n          отрыв от противника не даст так много очков как большой отрыв).\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Система Эло используется для игр 1 на 1, как она используется на пампе, где на одном\r\n          чарте играет много игроков?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: Рекорды на одном чарте делятся на несколько игр 1 на 1. Если есть 3 игрока: A, B, C; то\r\n          считается, что было 3 отдельные игры: A vs B, A vs C, B vs C.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Учитываются ли рекорды на ранке в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: Да. Как минимум потому что у нас есть много рекордов, взятых с машин бестов, и мы не\r\n          знаем наверняка, на ранке они или нет. Если у игрока в топе есть два скора - на ранке и\r\n          без ранка, используется тот, где больше очков.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Почему меня нет в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: В таблицу попадают только те, у кого есть хотя бы 20 игр 1 на 1. Первые 20 игр\r\n          используются для определения изначального рейтинга.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Почему суммарное количество оценок S-A-B не совпадает с общим количеством скоров?\r\n        </div>\r\n        <div className=\"answer\">A: Не для каждого результата известна оценка.</div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Если у меня есть несколько рекордов на А, несколько на А+, как считается суммарное\r\n          количество грейдов в таблице?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: В каждой колонке учитываются обе буквы - и треснутые, и с удержанным лайфом. То есть и\r\n          А, и А+ идут в колонку А. Точно так же для B, C, D.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Убери аккураси из таблицы!</div>\r\n        <div className=\"answer\">A: Грем, это секция для вопросов.</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle } from 'react-icons/fa';\r\nimport { Link, Route, withRouter } from 'react-router-dom';\r\n\r\n// styles\r\nimport 'react-responsive-ui/style.css';\r\nimport './ranking.scss';\r\n\r\n// components\r\nimport RankingList from './RankingList';\r\nimport RankingFaq from './RankingFaq';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport { fetchTopScores } from 'reducers/top';\r\n\r\n// utils\r\n\r\n// code\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ranking: state.ranking.data,\r\n    error: state.top.error,\r\n    isLoading: state.top.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopScores,\r\n};\r\n\r\nclass Ranking extends Component {\r\n  static propTypes = {\r\n    ranking: toBe.array,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    ranking: [],\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchTopScores();\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, ranking, error } = this.props;\r\n\r\n    return (\r\n      <div className=\"ranking-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.path}\r\n              render={() => (\r\n                <>\r\n                  <Link to={routes.ranking.faq.path}>\r\n                    <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n                      <FaQuestionCircle /> faq\r\n                    </button>\r\n                  </Link>\r\n                  <button\r\n                    disabled={isLoading}\r\n                    className=\"btn btn-sm btn-dark btn-icon\"\r\n                    onClick={this.onRefresh}\r\n                  >\r\n                    <FaSearch /> обновить\r\n                  </button>\r\n                </>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.faq.path}\r\n              render={() => (\r\n                <Link to={routes.ranking.path}>\r\n                  <button className=\"btn btn-sm btn-dark btn-icon\">назад</button>\r\n                </Link>\r\n              )}\r\n            />\r\n          </div>\r\n          <Route\r\n            exact\r\n            path={routes.ranking.path}\r\n            render={() => <RankingList ranking={ranking} isLoading={isLoading} />}\r\n          />\r\n          <Route exact path={routes.ranking.faq.path} component={RankingFaq} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Ranking));\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ReferenceLine,\r\n  CartesianGrid,\r\n  Line,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\nimport { createSelector } from 'reselect';\r\nimport _ from 'lodash/fp';\r\n\r\n// styles\r\nimport 'react-responsive-ui/style.css';\r\nimport './profile.scss';\r\n\r\n// constants\r\n\r\n// components\r\nimport Range from 'components/Shared/Range';\r\n\r\n// reducers\r\nimport { fetchTopScores } from 'reducers/top';\r\nimport { setProfilesFilter, resetProfilesFilter } from 'reducers/profiles';\r\n\r\n// utils\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\n\r\n// code\r\nconst defaultGradesDistribution = {\r\n  SSS: 0,\r\n  SS: 0,\r\n  S: 0,\r\n  'A+': 0,\r\n  A: 0,\r\n  B: 0,\r\n  C: 0,\r\n  D: 0,\r\n  F: 0,\r\n};\r\nconst cutRange = (array, range) => {\r\n  const startIndex = _.findIndex(item => item.date > range[0], array);\r\n  const endIndex = _.findLastIndex(item => item.date < range[1], array);\r\n  let firstElement =\r\n    startIndex > 0 ? array[startIndex - 1] : startIndex === 0 ? array[startIndex] : _.last(array);\r\n  let lastElement = endIndex > -1 ? array[endIndex] : _.first(array);\r\n  firstElement = { ...firstElement, date: range[0] };\r\n  lastElement = { ...lastElement, date: range[1] };\r\n  const middleElements =\r\n    startIndex > -1 && endIndex > -1 ? array.slice(startIndex, endIndex + 1) : [];\r\n  return [firstElement, ...middleElements, lastElement];\r\n};\r\nconst profileSelector = createSelector(\r\n  (state, props) => _.toInteger(props.match.params.id),\r\n  state => state.profiles.data,\r\n  state => state.profiles.filter,\r\n  state => state.top.players,\r\n  state => state.ranking.data,\r\n  (id, data, filter, players, ranking) => {\r\n    const profile = data[id];\r\n    if (_.isEmpty(profile)) {\r\n      return null;\r\n    }\r\n    const levelsDistribution = _.flow(\r\n      _.get('resultsByLevel'),\r\n      _.toPairs,\r\n      _.map(([x, y]) => ({\r\n        x: _.toInteger(x),\r\n        S: _.size(_.filter(res => res.chart.chartType === 'S', y)),\r\n        D: -_.size(_.filter(res => res.chart.chartType === 'D', y)),\r\n      }))\r\n    )(profile);\r\n    const gradesDistribution = _.flow(\r\n      _.get('resultsByLevel'),\r\n      _.toPairs,\r\n      _.map(\r\n        _.update('[1].result.grade', grade =>\r\n          grade && grade.includes('+') && grade !== 'A+' ? grade.replace('+', '') : grade\r\n        )\r\n      ),\r\n      _.map(([x, y]) => ({\r\n        x: _.toInteger(x),\r\n        ...defaultGradesDistribution,\r\n        ..._.omit('?', _.mapValues(_.size, _.groupBy('result.grade', y))),\r\n      })),\r\n      _.map(item => {\r\n        const grades = _.pick(Object.keys(defaultGradesDistribution), item);\r\n        const sum = _.sum(_.values(grades));\r\n        return {\r\n          ...item,\r\n          gradesValues: grades,\r\n          ...(sum === 0 ? grades : _.mapValues(value => (100 * value) / sum, grades)),\r\n        };\r\n      })\r\n    )(profile);\r\n\r\n    const lastTickRating = _.last(profile.ratingHistory).date;\r\n    const lastTickRanking = _.last(profile.rankingHistory).date;\r\n    const lastTick = lastTickRating > lastTickRanking ? lastTickRating : lastTickRanking; // End graph at either point\r\n    const firstTick = _.first(profile.ratingHistory).date; // Start graph from the first battle of this player\r\n\r\n    const minMaxRange = [firstTick / 1000 / 60 / 60 / 24, lastTick / 1000 / 60 / 60 / 24];\r\n    const filterRange = filter.dayRange || minMaxRange;\r\n    const dayRangeMs = [filterRange[0] * 1000 * 60 * 60 * 24, filterRange[1] * 1000 * 60 * 60 * 24];\r\n    const placesChanges = cutRange(profile.rankingHistory, dayRangeMs);\r\n    const ratingChanges = cutRange(profile.ratingHistory, dayRangeMs);\r\n    const rankingIndex = _.findIndex({ id }, ranking);\r\n    return {\r\n      ...profile,\r\n      minMaxRange,\r\n      levelsDistribution,\r\n      gradesDistribution,\r\n      placesChanges,\r\n      ratingChanges,\r\n      player: {\r\n        ..._.find({ id }, players),\r\n        rank: rankingIndex + 1,\r\n        ranking: ranking[rankingIndex],\r\n      },\r\n    };\r\n  }\r\n);\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    profile: profileSelector(state, props),\r\n    filter: state.profiles.filter,\r\n    error: state.top.error,\r\n    isLoading: state.top.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopScores,\r\n  setProfilesFilter,\r\n  resetProfilesFilter,\r\n};\r\n\r\nclass Profile extends Component {\r\n  static propTypes = {\r\n    profile: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    profile: {},\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetProfilesFilter();\r\n  }\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchTopScores();\r\n  };\r\n\r\n  onChangeDayRange = range => {\r\n    const { filter } = this.props;\r\n    this.props.setProfilesFilter({\r\n      ...filter,\r\n      dayRange: range,\r\n    });\r\n  };\r\n\r\n  renderRankingHistory() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer aspect={2}>\r\n        <LineChart\r\n          height={300}\r\n          width={800}\r\n          data={profile.ratingChanges}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={value => new Date(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={['dataMin - 100', 'dataMax + 100']}\r\n            tickFormatter={Math.round}\r\n            width={40}\r\n          />\r\n          <ReferenceLine y={1000} stroke=\"white\" />\r\n          <Tooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{new Date(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Rating: {Math.round(payload[0].value)}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating\"\r\n            stroke=\"#8884d8\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderPlaceHistory() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer aspect={2}>\r\n        <LineChart\r\n          height={300}\r\n          width={800}\r\n          data={profile.placesChanges}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={value => new Date(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={[1, dataMax => (dataMax < 3 ? dataMax + 2 : dataMax + 1)]}\r\n            interval={0}\r\n            reversed\r\n            width={40}\r\n          />\r\n          <Tooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{new Date(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Place: #{payload[0].value}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place\"\r\n            stroke=\"#8884d8\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderLevelsGrades() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer aspect={2}>\r\n        <BarChart\r\n          height={300}\r\n          width={900}\r\n          data={profile.gradesDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <Tooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {_.reverse(_.filter(item => item.value > 0, payload)).map(item => (\r\n                    <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                      {item.name}: {payload[0].payload.gradesValues[item.name]}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            domain={[0, 100]}\r\n            ticks={[0, 50, 100]}\r\n            tickFormatter={x => `${Math.round(x)}%`}\r\n            width={35}\r\n          />\r\n          <Legend />\r\n          <Bar dataKey=\"F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderLevels() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer aspect={2}>\r\n        <BarChart\r\n          height={300}\r\n          width={900}\r\n          data={profile.levelsDistribution}\r\n          stackOffset=\"sign\"\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <Tooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n                    Single: {Math.abs(payload[1].value)}\r\n                  </div>\r\n                  <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n                    Double: {Math.abs(payload[0].value)}\r\n                  </div>\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis tickFormatter={Math.abs} width={35} />\r\n          <Tooltip />\r\n          <ReferenceLine y={0} stroke=\"#555\" />\r\n          <Legend />\r\n          <Bar dataKey=\"D\" fill=\"#169c16\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#af2928\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradeBlock(type, grade) {\r\n    const { profile } = this.props;\r\n    const obj = profile.progress[type];\r\n    const typeLetter = type === 'double' ? 'D' : 'S';\r\n    const progr = Math.floor((obj[`${grade}-bonus-level-coef`] || 0) * 100);\r\n    const levelString = obj[`${grade}-bonus-level`]\r\n      ? `${typeLetter}${obj[`${grade}-bonus-level`]}`\r\n      : '?';\r\n    return (\r\n      <div className=\"grade-block\">\r\n        <div className=\"grade-letter\">\r\n          <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n        </div>\r\n        <div className=\"grade-level\">{levelString}</div>\r\n        <div className=\"grade-progress\">{progr}%</div>\r\n        <div className=\"grade-progress\">бонус: +{Math.floor(obj[`${grade}-bonus`])}</div>\r\n        <div\r\n          className={classNames('progress-background', {\r\n            complete: progr === 100,\r\n            zero: progr === 0,\r\n          })}\r\n          style={{\r\n            height: `${progr}%`,\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, profile, error, filter } = this.props;\r\n\r\n    if (_.isEmpty(profile)) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"profile-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            {/* <div className=\"beta\">страница в бета-версии</div> */}\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"btn btn-sm btn-dark btn-icon\"\r\n              onClick={this.onRefresh}\r\n            >\r\n              <FaSearch /> обновить\r\n            </button>\r\n          </div>\r\n          <div className=\"profile\">\r\n            <div className=\"profile-header\">\r\n              <div className=\"profile-name text-with-header\">\r\n                <div className=\"text-header\">игрок</div>\r\n                <div>{profile.player.nickname}</div>\r\n              </div>\r\n              <div className=\"text-with-header\">\r\n                <div className=\"text-header\">ранк</div>\r\n                <div>#{profile.player.rank}</div>\r\n              </div>\r\n              <div className=\"text-with-header\">\r\n                <div className=\"text-header\">эло</div>\r\n                <div>{profile.player.ranking.rating}</div>\r\n              </div>\r\n              <div className=\"text-with-header\">\r\n                <div className=\"text-header\">последняя игра</div>\r\n                <div>{profile.lastResultDate ? getTimeAgo(profile.lastResultDate) : 'никогда'}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"profile-section\">\r\n              <div className=\"profile-section-content\">\r\n                <div className=\"profile-section-2\">\r\n                  <div className=\"profile-sm-section-header\">\r\n                    <span>уровни</span>\r\n                  </div>\r\n                  <div>{this.renderLevels()}</div>\r\n                </div>\r\n                <div className=\"profile-section-2\">\r\n                  <div className=\"profile-sm-section-header\">\r\n                    <span>оценки</span>\r\n                  </div>\r\n                  <div>{this.renderLevelsGrades()}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"profile-section\">\r\n              <div className=\"profile-section-content\">\r\n                <div className=\"profile-section-2\">\r\n                  <div className=\"profile-sm-section-header\">\r\n                    <span>эло</span>\r\n                  </div>\r\n                  <div>{this.renderRankingHistory()}</div>\r\n                </div>\r\n                <div className=\"profile-section-2\">\r\n                  <div className=\"profile-sm-section-header\">\r\n                    <span>место в топе</span>\r\n                  </div>\r\n                  <div>{this.renderPlaceHistory()}</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"range-container\">\r\n                <Range\r\n                  range={filter.dayRange || profile.minMaxRange}\r\n                  min={profile.minMaxRange[0]}\r\n                  max={profile.minMaxRange[1]}\r\n                  onChange={this.onChangeDayRange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"profile-section progress-section\">\r\n              <div className=\"profile-sm-section-header\">\r\n                <span>ачивки по уровням</span>\r\n              </div>\r\n              <div className=\"progress-blocks-single-double\">\r\n                <div className=\"progress-block\">\r\n                  <div className=\"achievements-grades single\">\r\n                    {this.renderGradeBlock('single', 'A')}\r\n                    {this.renderGradeBlock('single', 'A+')}\r\n                    {this.renderGradeBlock('single', 'S')}\r\n                    {this.renderGradeBlock('single', 'SS')}\r\n                  </div>\r\n                </div>\r\n                <div className=\"progress-block\">\r\n                  <div className=\"achievements-grades double\">\r\n                    {this.renderGradeBlock('double', 'A')}\r\n                    {this.renderGradeBlock('double', 'A+')}\r\n                    {this.renderGradeBlock('double', 'S')}\r\n                    {this.renderGradeBlock('double', 'SS')}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"bonus-faq\">\r\n                * суммарный бонус (+{Math.round(profile.progress.bonus)}) добавляется к стартовому\r\n                Эло\r\n                <br />* для получения ачивки нужно сыграть около 10% всех чартов данного левела на\r\n                нужный грейд\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Profile));\r\n","import React, { Component } from 'react';\r\n// import toBe from 'prop-types';\r\n// import classNames from 'classnames';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './top-bar.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nclass TopBar extends Component {\r\n  static propTypes = {};\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"top-bar\">\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <NavLink exact to={routes.leaderboard.path}>\r\n                leaderboard\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink exact to={routes.ranking.path}>\r\n                ranking\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopBar;\r\n","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport './App.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport Leaderboard from 'components/Leaderboard/Leaderboard';\r\nimport Ranking from 'components/Ranking/Ranking';\r\nimport Profile from 'components/Profile/Profile';\r\nimport TopBar from 'components/Shared/TopBar/TopBar';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <TopBar />\r\n        <Route exact path=\"/\" render={() => <Redirect to={routes.leaderboard.path} />} />\r\n        <Route path={routes.leaderboard.path} component={Leaderboard} />\r\n        <Route path={routes.ranking.path} component={Ranking} />\r\n        <Route path={routes.profile.path} component={Profile} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TRACKLIST/LOADING`;\r\nconst SUCCESS = `TRACKLIST/SUCCESS`;\r\nconst ERROR = `TRACKLIST/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTracklist = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await fetchJson({ url: `${HOST}/tracklist/stats/XX` });\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport top from 'reducers/top';\r\nimport tracklist from 'reducers/tracklist';\r\nimport ranking from 'reducers/ranking';\r\nimport profiles from 'reducers/profiles';\r\nimport presets from 'reducers/presets';\r\n\r\nconst rootReducer = combineReducers({\r\n  presets,\r\n  profiles,\r\n  ranking,\r\n  top,\r\n  tracklist,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && process.env.NODE_ENV === 'development'\r\n    ? compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__({\r\n          stateSanitizer: state => ({\r\n            ...state,\r\n          }),\r\n        })\r\n      )\r\n    : applyMiddleware(thunk)\r\n);\r\n","import 'promise-polyfill';\r\nimport 'whatwg-fetch';\r\nimport 'utils/polyfills';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport localForage from 'localforage';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './index.scss';\r\nimport App from 'components/App';\r\n\r\nimport { CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nimport { store } from 'reducers';\r\nimport { fetchTopScores, setFilter } from 'reducers/top';\r\nimport { fetchTracklist } from 'reducers/tracklist';\r\n\r\nlocalForage\r\n  .getItem('filter')\r\n  .then(filter => {\r\n    if (filter) {\r\n      store.dispatch(\r\n        setFilter({\r\n          ...filter,\r\n          chartRange: filter.chartRange && {\r\n            ...filter.chartRange,\r\n            range: _.every(\r\n              r => r >= CHART_MIN_MAX[0] && r <= CHART_MIN_MAX[1],\r\n              filter.chartRange.range\r\n            )\r\n              ? filter.chartRange.range\r\n              : CHART_MIN_MAX,\r\n          },\r\n        })\r\n      );\r\n    }\r\n  })\r\n  .catch(error => console.error('Cannot get filter from local storage', error));\r\n\r\nstore.dispatch(fetchTracklist()).then(() => {\r\n  store.dispatch(fetchTopScores());\r\n});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}