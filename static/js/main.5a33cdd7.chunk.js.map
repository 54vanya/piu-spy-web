{"version":3,"sources":["webpack:///./src/utils/workers/profilesPostProcess.js?f05c","utils/polyfills.js","constants/routes.js","constants/leaderboard.js","components/Shared/Loader/index.js","reducers/user/resetAction.js","utils/fetch.js","constants/backend.js","reducers/trackStats/mostPlayed.js","reducers/trackStats/mostPlayedMonth.js","reducers/trackStats/leastPlayed.js","utils/leaderboards.js","utils/date.js","components/SongsTop/SongsTop.js","components/Shared/Overlay/Overlay.js","components/Shared/ToggleButton/ToggleButton.js","components/Shared/Input/Input.js","components/Shared/Toggle/Toggle.js","components/Shared/CollapsibleBar/index.js","components/Shared/Range/index.js","components/Leaderboard/ChartFilter.js","utils/expRanks.js","utils/exp.js","utils/achievements.js","utils/score.js","utils/workers/profilesPostProcess.js","constants/env.js","reducers/results.js","reducers/presets.js","components/Leaderboard/PresetsControl.js","utils/colors.js","reducers/selectors.js","components/Leaderboard/Leaderboard.js","components/Ranking/RankingList.js","components/Ranking/RankingFaq.js","components/Ranking/Ranking.js","components/Profile/MostPlayed.js","components/Profile/ExpFaq.js","reducers/profiles.js","utils/profiles.js","components/Profile/Profile.js","components/ProfileCompare/ProfileCompare.js","reducers/user/index.js","reducers/login.js","components/Shared/TopBar/TopBar.js","components/LoginScreen/LoginScreen.js","reducers/topPerSong.js","reducers/tracklist.js","components/SocketTracker/helpers.js","components/SocketTracker/SocketTracker.js","components/App.js","reducers/trackStats/index.js","reducers/index.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","Number","isNaN","value","Math","sign","x","Array","prototype","findIndex","Object","defineProperty","predicate","this","TypeError","o","len","length","thisArg","arguments","k","kValue","call","configurable","writable","routes","leaderboard","path","songs","ranking","faq","profile","getPath","params","id","compare","compareToId","SORT","DEFAULT","PROTAGONIST","RANK_ASC","RANK_DESC","NEW_SCORES_PLAYER","CHART_MIN_MAX","DURATION","STD","SHORT","REMIX","FULL","DURATION_DEFAULT","_","values","Loader","className","width","height","viewBox","xmlns","fill","cx","cy","r","attributeName","from","to","begin","dur","calcMode","repeatCount","fillOpacity","RESET","resetUser","type","fetchJson","url","request","method","postJson","body","JSON","stringify","headers","defaultHeaders","async","dispatch","getState","session","cookies","get","response","fetch","credentials","status","json","error","isObject","isString","Error","message","Promise","reject","HOST","SOCKET_SERVER_IP","LOADING","SUCCESS","ERROR","initialState","isLoading","data","TimeAgo","addLocale","ru","timeAgo","timeStyle","flavour","gradation","convenient","units","tooltipFormatter","result","isExactDate","dateObject","toLocaleDateString","resultType","undefined","isMyBest","isMachineBest","style","display","alignItems","flexDirection","getTimeAgo","date","dayDiff","moment","startOf","diff","hour","format","parseDate","textDate","toDate","Date","TopList","fetchList","title","renderRightSide","useState","setData","setLoading","getRightSide","item","countplay","useEffect","then","success","catch","map","index","key","classNames","best","full_name","leastPlayedRightSide","last_play","connect","fetchMostPlayed","fetchMostPlayedMonth","fetchLeastPlayed","POPPER_MODIFIERS","preventOverflow","enabled","padding","boundariesElement","PLACEMENT_ARROW_MAPPING","right","left","top","bottom","getArrowPlacement","placement","split","Overlay","state","isVisible","containerItemRef","React","createRef","renderPopper","bind","toggleOverlayVisibility","setState","event","target","closest","hideOverlay","ref","arrowProps","outOfBoundaries","scheduleUpdate","props","children","hideWhenOutOfBounds","data-placement","overlayClassName","overlayItem","Fragment","onClick","ReactDOM","createPortal","container","document","modifiers","referenceElement","current","PureComponent","defaultTypes","listensToClickOutside","ToggleButton","active","onToggle","text","Input","isNil","defaultValue","bindAll","prevProps","e","newValue","onChange","numericValue","min","max","onBlur","handleBlur","omit","onKeyPress","handleKeyPress","onInput","handleChange","noop","Component","defaultProps","Toggle","checked","uniqueId","htmlFor","CollapsibleBar","open","defaultOpen","Range","range","step","renderTrack","onMouseDown","onTouchStart","position","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","justifyContent","boxShadow","ChartFilter","filterValue","onChangeEx","getOr","duration","buttonText","t","isEqual","isEmpty","newMin","newMax","includes","without","ranks","threshold","iconName","color","gradeValue","F","D","C","B","A","S","SS","SSS","getExp","chart","isBestGradeOnChart","chartType","chartLevel","grade","getRankImg","rank","src","process","alt","achievements","icon","GiRank1","description","resultFunction","progress","combo","GiRank2","GiRank3","GiSmokingFinger","playedSongs","songsToPlay","song","uniq","GiRetroController","GiLoveSong","Улитка","GiSnail","charts","some","songToPlay","chartLabel","GiPodiumSecond","miss","bad","GiLifeBar","GiWoodenPegleg","good","great","initialAchievementState","getScoreWithoutBonus","score","postProcessProfiles","profiles","tracklist","mapValues","neededGrades","expRank","findLast","exp","expRanks","expRankNext","find","double","single","gradeIncrementMap","keys","resultsByLevel","forEach","level","res","thisGrade","thisPlayerId","playerId","otherResults","results","filter","sort","a","b","indexOf","gradeIncArray","gradeInc","l","g","prog","incrementLevel","number","minimumNumber","totalCharts","round","sqrt","getMinimumNumber","bonusCoefficientNumber","bonus","getBonusForLevel","achievementBonus","accuracy","countAcc","sumAccuracy","getProcessedProfiles","originalProfiles","sharedCharts","resultInfo","chartId","chartResults","maxPP","maxNonRankScore","maxScore","isRank","accuracyRaw","K2","K3","scoreRaw","K","pp","kX","ppPotential","ppRatio","ppFixed","toFixed","scores","push","pp_","s","ratingRaw","toInteger","rating","processPP","processedProfiles","localStorage","window","debugOn","setItem","debugOff","removeItem","DEBUG","getItem","SET_FILTER","RESET_FILTER","RANKING_CHANGE_SET","PROFILES_UPDATE","defaultFilter","showRank","showRankAndNorank","isLoadingRanking","players","gradeComparator","guessGrade","misses","bads","goods","greats","mapResult","recognition_notes","isUnknownPlayer","player","arcade_name","isIntermediateResult","sharedChartId","shared_chart","nickname","nicknameArcade","gained","exact_gain_date","rank_mode","_r","originalChartMix","original_mix","originalChartLabel","original_label","originalScore","original_score","max_score","scoreIncrease","score_increase","calories","perfect","perfects","max_combo","mods","mods_list","isHJ","maxTotalSteps","infos","fixableIndex","absentNumbersCount","localStepSum","i","isNumber","tryFixIncompleteResult","acc","floor","accRaw","getMaxScore","getMaxRawScore","initializeProfile","fromPairs","nameArcade","resultsByGrade","lastResultDate","count","battleCount","grades","rankingHistory","ratingHistory","lastPlace","lastBattleDate","flow","achName","getProfileInfoFromResult","replace","convert","cap","achState","fetchResults","processResultsData","console","log","shared_charts","mappedResults","getTopResultId","getBestGradeResultId","topResults","bestGradeResults","resRaw","sharedChart","label","toUpper","chart_label","match","track_name","max_total_steps","totalResultsCount","chartTop","topResultId","currentTopResult","oldScoreIndex","splice","newScoreIndex","sortedLastIndexBy","latestScoreDate","bestGradeResultId","currentBestGradeRes","maxScoreWithAccuracy","maxScoreResult","maxNonRankScoreResult","processData","toPairs","originalData","input","promise","worker","WorkerProfilesProcessing","profilesProcessing","q","calculateRankingChanges","terminate","setFilter","getListOfNames","getMapOfRatings","orderBy","all","localForage","lastChangedRanking","lastChangedRankingPoints","lastFetchedRanking","listNow","listLastFetched","listLastChanged","mapPointsNow","mapPointsLastFetched","mapPointsLastChanged","rankingsPointsMap","listPrev","warn","SELECT_PRESET","LOAD_PRESETS","LOADING_START","LOADING_END","presets","currentPreset","itemToOption","reloadPresets","startLoading","endLoading","selectPreset","openPreset","noPresetsMessage","mapDispatchToProps","loadPresets","savePreset","newPreset","confirm","withoutOldPreset","remove","newPresets","deletePreset","PresetsControl","onChangeSelection","selected","onRewritePreset","onSavePreset","isAddingNew","classNamePrefix","placeholder","options","noOptionsMessage","disabled","colorsArray","playersSelector","createSelector","user","isCurrentPlayer","sortBy","it","toLower","filteredDataSelector","names","namesOr","playersOr","namesNot","playersNot","sortingType","protagonist","excludeAntagonists","defaultSorting","newScoresProtagonistSorting","getTime","protagonistSorting","row","protIndex","protScore","enemies","take","uniqBy","distanceFromProtagonist","reduce","dist","enemy","getScoreSorting","field","direction","info","Infinity","sortingFunctions","compact","chartRange","items","rows","startsWith","filterCharts","showOnlyRank","occuredNames","alreadyOccured","rowNames","every","size","matchSorter","trim","ANIMATION_DURATION","sortingOptions","resetFilter","Leaderboard","showItemsCount","chartOverrides","curry","onRefresh","onTypeSongName","debounce","onRedoLatestResult","throttle","overrides","drop","onUndoLatestResult","undoedResult","maxBy","undoedPlayerId","previousPlayerResult","newResults","latestScore","overrideChart","renderSimpleSearch","renderFilters","closeMenuOnSelect","isMulti","renderSortings","isClearable","render","filteredData","canShowMore","visibleData","slice","highlightProtagonist","protagonistName","uniqueSelectedNames","preset","chartOriginal","chartIndex","first","topPlace","occuredNicknames","isSecondOccurenceInResults","singlep","doublep","coop","href","rel","isActive","currentIndex","canUndo","enterAnimation","leaveAnimation","typeName","maintainContainerHeight","nameIndex","placeDifference","newIndex","prevScore","findLastIndex","inf","empty","latest","fontWeight","vj","hj","content","tooltipClassName","numeral","exact","getGradeImg","RankingList","playerIndex","change","prevRating","down","up","RankingFaq","rankingSelector","Ranking","component","withRouter","limit","setLimit","latestDate","ExpFaq","setProfilesFilter","resetProfilesFilter","defaultGradesDistribution","defaultGradesWithLevelsDistribution","flatMap","profileSelectorCreator","idParamName","levelsDistribution","y","singlesLevels","doublesLevels","gradesData","update","gradesDistribution","groupBy","pick","sum","gradesValues","gradesAndLevelsDistribution","groupedResults","counts","countBy","reduced","levelsData","MIN_GRAPH_HEIGHT","profileSelector","otherPlayersSelector","toNumber","ind","Profile","isLevelGraphCombined","showFaq","onChangeDayRange","dayRange","onShowFaq","onHideFaq","componentWillUnmount","renderRankingHistory","minHeight","aspect","margin","strokeDasharray","dataKey","domain","tickFormatter","allowDecimals","stroke","isAnimationActive","payload","strokeWidth","dot","renderPlaceHistory","dataMax","interval","reversed","renderGrades","ticks","stackId","renderGradesWithLevels","stackOffset","doubleItems","singleItems","abs","dataMin","offset","renderLevels","totalD","totalS","renderGradeBlock","obj","typeLetter","progr","minNumber","currentNumber","levelString","complete","zero","renderAchievement","achievement","Icon","renderProfile","otherPlayers","expProgress","history","ariaHideApp","isOpen","onRequestClose","ceil","MostPlayed","BARS_MODES","SINGLE_TWO","SINGLE_FIVE","DOUBLE_TWO","DOUBLE_FIVE","BOTH_TWO","BOTH_FIVE","getCompareBars","mode","profile1Selector","profile2Selector","getCombinedData","memoize","p1","p2","perLevelComparison","p1win","p1notPlayed","p2win","p2notPlayed","notPlayed","twoBars","p1index","p2index","perType","normalizeTwo","dataObj","totalPlayed","normalizeFive","total","chartLevels","ProfileCompare","compareBarsMode","rhMargin","rhXDomain","rhYDomain","rhXTickFormatter","rhTooltip","profile2","p1Name","p2Name","plcMargin","plcTooltip","isTwo","renderLegendItem","plcXDomain","plcXTicks","plcXFormatter","combinedData","ratingChanges","placesChanges","renderPerLevelComparison","layout","profile1","fetchUser","login","googleResponse","token","tokenId","set","expires","loginACs","logout","isLoadingLogin","isLoadingUser","isClown","setClown","onGoogleResponse","clientId","onSuccess","onFailure","cookiePolicy","fetchingParams","fetchTracklist","preprocessData","fullRes","stepSum","n","track","mix","resultInfoOverrides","numb","hasRankScore","STATE_RESET_TIMEOUT","fetchTopPerSong","songName","leftLabel","rightLabel","queryString","song_name","join","appendNewResults","lastDate","last","start_date","appendedResults","currentResults","mergedData","renderChartLabel","topPerSong","songTopData","setMessage","socketErrorMessage","setSocketErrorMessage","isSocketReady","setSocketReady","isAlive","setAlive","setLeftLabel","setRightLabel","leftPlayer","setLeftPlayer","rightPlayer","setRightPlayer","recognizedSongName","setRecognizedSongName","socketRef","useRef","timeoutResetTokenRef","leftChart","rightChart","chartsToShow","topPlayersList","place","leftProfile","rightProfile","minBy","p","lev","leftData","setLeftData","rightData","setRightData","restartTimeout","useCallback","clearTimeout","setTimeout","prevRatingRaw","prevExp","WebSocket","onerror","onopen","onmessage","parse","newSongName","resultsContainerRef","leftResultRef","rightResultRef","totalSize","clientWidth","h","clientHeight","scaleHH","offsetWidth","scaleHW","offsetHeight","scaleWH","scaleWW","transform","scaleW","scaleH","renderPlayer","isLeft","renderDeltaText","prevN","delta","closestPlayers","takenWidth","emptyWidth","diffWidth","renderExpLine","pl","REACT_APP_SOCKET","SocketTracker","SongsTop","combineReducers","mostPlayed","action","mostPlayedMonth","leastPlayed","rootReducer","scoreInfo","hasPrevList","playerOriginal","trackStats","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","getElementById"],"mappings":"yGACI,IAAIA,EAAa,EAAQ,KACrBC,EAAU,CAAC,wBACfC,EAAOC,QAAU,WAChB,IAAIC,EAAI,IAAIC,OAAO,IAA0B,iCAAkC,CAAEC,KAAM,qBAGvF,OAFAN,EAAWI,EAAGH,GAEPG,I,wDCJZG,OAAOC,MACLD,OAAOC,OACP,SAASC,GACP,OAAOA,IAAUA,GAGI,qBAAdC,KAAKC,OACdD,KAAKC,KAAO,SAASC,GACnB,OAAOA,EAAI,EAAI,EAAIA,EAAI,GAAK,EAAIA,IAK/BC,MAAMC,UAAUC,WACnBC,OAAOC,eAAeJ,MAAMC,UAAW,YAAa,CAClDL,MAAO,SAASS,GAEd,GAAY,MAARC,KACF,MAAM,IAAIC,UAAU,iCAGtB,IAAIC,EAAIL,OAAOG,MAGXG,EAAMD,EAAEE,SAAW,EAGvB,GAAyB,oBAAdL,EACT,MAAM,IAAIE,UAAU,gCAUtB,IANA,IAAII,EAAUC,UAAU,GAGpBC,EAAI,EAGDA,EAAIJ,GAAK,CAKd,IAAIK,EAASN,EAAEK,GACf,GAAIR,EAAUU,KAAKJ,EAASG,EAAQD,EAAGL,GACrC,OAAOK,EAGTA,IAIF,OAAQ,GAEVG,cAAc,EACdC,UAAU,K,yhBC1DP,MAAMC,EAAS,CACpBC,YAAa,CACXC,KAAK,gBAEPC,MAAO,CACLD,KAAK,UAEPE,QAAS,CACPF,KAAK,WACLG,IAAK,CACHH,KAAM,iBAGVI,QAAS,CACPJ,KAAK,gBACLK,QAASC,GAAM,oBAAiBA,EAAOC,IACvCC,QAAS,CACPR,KAAK,gCACLK,QAASC,GAAM,oBAAiBA,EAAOC,GAAxB,eAAiCD,EAAOG,gBChBtD,IAAMC,EAAO,CAClBC,QAAS,UACTC,YAAa,cACbC,SAAU,UACVC,UAAW,WACXC,kBAAmB,mBAGRC,EAAgB,CAAC,EAAG,IACpBC,EAAW,CACtBC,IAAK,WACLC,MAAO,QACPC,MAAO,QACPC,KAAM,QAEKC,EAAmBC,IAAEC,OAAOP,G,8CCb1B,SAASQ,IACtB,OACE,yBAAKC,UAAU,UACb,yBACEC,MAAM,KACNC,OAAO,KACPC,QAAQ,aACRC,MAAM,6BACNC,KAAK,QAEL,4BAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,MACxB,6BACEC,cAAc,IACdC,KAAK,KACLC,GAAG,KACHC,MAAM,KACNC,IAAI,OACJf,OAAO,UACPgB,SAAS,SACTC,YAAY,eAEd,6BACEN,cAAc,eACdC,KAAK,IACLC,GAAG,IACHC,MAAM,KACNC,IAAI,OACJf,OAAO,SACPgB,SAAS,SACTC,YAAY,gBAGhB,4BAAQT,GAAG,KAAKC,GAAG,KAAKC,EAAE,IAAIQ,YAAY,OACxC,6BACEP,cAAc,IACdC,KAAK,IACLC,GAAG,IACHC,MAAM,KACNC,IAAI,OACJf,OAAO,SACPgB,SAAS,SACTC,YAAY,eAEd,6BACEN,cAAc,eACdC,KAAK,MACLC,GAAG,MACHC,MAAM,KACNC,IAAI,OACJf,OAAO,UACPgB,SAAS,SACTC,YAAY,gBAGhB,4BAAQT,GAAG,MAAMC,GAAG,KAAKC,EAAE,MACzB,6BACEC,cAAc,IACdC,KAAK,KACLC,GAAG,KACHC,MAAM,KACNC,IAAI,OACJf,OAAO,UACPgB,SAAS,SACTC,YAAY,eAEd,6BACEN,cAAc,eACdC,KAAK,IACLC,GAAG,IACHC,MAAM,KACNC,IAAI,OACJf,OAAO,SACPgB,SAAS,SACTC,YAAY,kB,qBC7EjB,MAAME,EAAK,aACLC,EAAY,MAASC,KAAMF,I,ykBCIjC,MAAMG,EAAY,EAAGC,SAAUC,EAAQ,CAAED,MAAKE,OAAQ,QAChDC,EAAW,EAAGH,MAAKI,UAC9BH,EAAQ,CACND,MACAE,OAAQ,OACRE,KAAMC,KAAKC,UAAUF,GACrBG,QAAS,CACP,eAAgB,oCAIhBC,EAAiB,GAEVP,EAAU,EAAGD,MAAKE,SAAQE,OAAMG,aAAcE,MAAOC,EAAUC,KAC1E,IACE,MAAMC,EAAUC,IAAQC,IAAI,WACxBF,IACFJ,EAAc,QAAcI,GAE9B,MAAMG,QAAiBC,MAAMhB,EAAK,CAChCE,SACAE,OACAG,QAAQ,EAAD,GAAOC,EAAP,GAA0BD,GACjCU,YAAa,YAEf,GAAIF,EAASG,QAAU,KAAOH,EAASG,OAAS,IAAK,CAEnD,aADmBH,EAASI,OAEvB,CACL,MAAMC,QAAcL,EAASI,OAC7B,MAAI3C,IAAE6C,SAASD,IAAU5C,IAAE8C,SAASF,EAAMA,OAClC,IAAIG,MAAMH,EAAMA,OACb5C,IAAE8C,SAASF,GACd,IAAIG,MAAMH,GAEV,IAAIG,MAAM,eAAiBR,EAASG,SAG9C,MAAOE,GAIP,MAHsB,oBAAlBA,EAAMI,SACRd,EAASb,KAEJ4B,QAAQC,OAAON,KC9CbO,EAAO,iCACPC,EAAmB,sB,ykBCEhC,MAAMC,EAAO,sBACPC,EAAO,sBACPC,EAAK,oBAELC,EAAe,CACnBC,WAAW,EACXC,KAAM,I,ykBCNR,MAAML,EAAO,4BACPC,EAAO,4BACPC,EAAK,0BAELC,EAAe,CACnBC,WAAW,EACXC,KAAM,I,ykBCNR,MAAML,EAAO,uBACPC,EAAO,uBACPC,EAAK,qBAELC,GAAe,CACnBC,WAAW,EACXC,KAAM,I,gECJRC,KAAQC,UAAUC,MAClB,MAAMC,GAAU,IAAIH,KAAQ,SAEtBI,GAAY,CAChBC,QAAS,OACTC,UAAWC,KACXC,MAAO,CAAC,MAAO,OAAQ,UAEZC,GAAmBC,IAC9B,GAAKA,EAAOC,YAiBV,OAAOD,EAAOE,WAAWC,qBAjBF,CACvB,MAAMC,OACgBC,IAApBL,EAAOM,eAAmDD,IAAzBL,EAAOO,cACpC,iDACAP,EAAOM,SACP,iBACAN,EAAOO,cACP,sBACA,oDACN,OACE,yBAAKC,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,cAAe,WAClE,gMACA,uHAAuBP,GACvB,+FAAmBJ,EAAOE,WAAWC,yBAQhCS,GAAaC,IACxB,MAAMC,EAAUC,OACbC,QAAQ,OACRC,KAAKF,KAAOF,GAAMG,QAAQ,OAAQ,QAC/BE,EAAOH,KAAOF,GAAMK,OAC1B,OAAIH,OAASG,OAAS,EACbJ,GAAW,EAAI,6CAAYrB,GAAQ0B,OAAON,EAAMnB,IAEtC,IAAZoB,EACHI,EAAO,EACL,gEACA,6CACU,IAAZJ,EACA,iCACArB,GAAQ0B,OAAON,EAAMnB,KChDd0B,GAAYC,GACC,kBAAbA,EACFN,KAAOM,EAAU,uBAAuBC,SAExC,IAAIC,KAAKF,GCiBpB,SAASG,IAAQ,UAAEC,EAAF,MAAaC,EAAb,gBAAoBC,IAAoB,MAAD,EAC9BC,mBAAS,IADqB,mBAC/CvC,EAD+C,KACzCwC,EADyC,OAEtBD,oBAAS,GAFa,mBAE/CxC,EAF+C,KAEpC0C,EAFoC,KAIhDC,EACJJ,GAAe,CACdK,GACC,yBAAKlG,UAAU,aACb,kBAAC,IAAD,MACA,8BAAOkG,EAAKC,aAgBlB,OAZAC,oBAAU,KACRJ,GAAW,GACXL,IACGU,KAAK9C,IACJA,EAAK+C,SAAWP,EAAQxC,EAAKA,MAC7ByC,GAAW,KAEZO,MAAM,KACLP,GAAW,MAEd,CAACL,IAGF,yBAAK3F,UAAU,kBACb,yBAAKA,UAAU,oBACb,8BAAO4F,IAERtC,GAAa,kBAACvD,EAAD,OACZuD,GACAC,EAAKiD,IAAI,CAACN,EAAMO,IAEZ,yBAAKC,IAAKR,EAAKrH,GAAImB,UAAU,kBAC3B,yBAAKA,UAAW2G,IAAW,QAAD,cAAiBF,EAAQ,GAAK,CAAEG,KAAMH,EAAQ,KACtE,8BAAOA,EAAQ,EAAf,MAEF,yBAAKzG,UAAU,aAAakG,EAAKW,WAChCZ,EAAaC,MAQ5B,MAAMY,GAAuBZ,GAC3B,yBAAKlG,UAAU,QACb,8BAAOkG,EAAKa,UAAYjC,GAAWQ,GAAUY,EAAKa,YAAc,+CAIrDC,mBACb,KACA,CACEC,gBL1C2B,IACtBnF,UACLC,EAAS,CAAEZ,KAAM+B,IACjB,IACE,MAAMK,QAAaxB,EAASX,EAAU,CAAEC,IAAI,GAAD,OAAK2B,EAAL,+BAE3C,OADAjB,EAAS,CAAEZ,KAAMgC,EAASI,SACnBA,EACP,MAAOd,GAEP,OADAV,EAAS,CAAEZ,KAAMiC,EAAOX,UACjB,OKkCTyE,qBJ3CgC,IAC3BpF,UACLC,EAAS,CAAEZ,KAAM+B,IACjB,IACE,MAAMK,QAAaxB,EAASX,EAAU,CAAEC,IAAI,GAAD,OAAK2B,EAAL,qCAE3C,OADAjB,EAAS,CAAEZ,KAAMgC,EAASI,SACnBA,EACP,MAAOd,GAEP,OADAV,EAAS,CAAEZ,KAAMiC,EAAOX,UACjB,OImCT0E,iBH5C4B,IACvBrF,UACLC,EAAS,CAAEZ,KAAM+B,IACjB,IACE,MAAMK,QAAaxB,EAASX,EAAU,CAAEC,IAAI,GAAD,OAAK2B,EAAL,wCAE3C,OADAjB,EAAS,CAAEZ,KAAMgC,EAASI,SACnBA,EACP,MAAOd,GAEP,OADAV,EAAS,CAAEZ,KAAMiC,EAAOX,UACjB,QG8BEuE,EAOb,UAAkB,gBAAEC,EAAF,qBAAmBC,EAAnB,iBAAyCC,IAC3D,OACE,yBAAKnH,UAAU,kBACb,kBAAC0F,GAAD,CAASC,UAAWsB,EAAiBrB,MAAM,yHAC3C,kBAACF,GAAD,CAASC,UAAWuB,EAAsBtB,MAAM,qKAChD,kBAACF,GAAD,CACEC,UAAWwB,EACXvB,MAAM,8JACNC,gBAAiBiB,KAEnB,yBAAK9G,UAAU,oC,8ICpFfoH,I,OAAmB,CACvBC,gBAAiB,CACfC,SAAS,EACTC,QAAS,GACTC,kBAAmB,cAIjBC,GAA0B,CAC9BC,MAAO,OACPC,KAAM,QACNC,IAAK,SACLC,OAAQ,OAGJC,GAAoB,SAAAC,GACxB,OAAOA,GAAaN,GAAwBM,EAAUC,MAAM,KAAK,KAG7DC,G,YAWJ,aAAe,IAAD,+BACZ,iDACKC,MAAQ,CACXC,WAAW,GAEb,EAAKC,iBAAmBC,IAAMC,YAC9B,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,iBACpB,EAAKC,wBAA0B,EAAKA,wBAAwBD,KAA7B,iBAPnB,E,6EAWZhL,KAAKkL,SAAS,CACZP,WAAW,M,gDAKb3K,KAAKkL,SAAS,CACZP,WAAY3K,KAAK0K,MAAMC,c,yCAIRQ,GACKA,GAASA,EAAMC,OAAOC,QAAQ,0BAGlDrL,KAAKsL,gB,sCAI6E,IAAvEC,EAAsE,EAAtEA,IAAKrE,EAAiE,EAAjEA,MAAOqD,EAA0D,EAA1DA,UAAWiB,EAA+C,EAA/CA,WAA4BC,GAAmB,EAAnCC,eAAmC,EAAnBD,iBAAmB,EACzCzL,KAAK2L,MAAvCC,EAD2E,EAC3EA,SAAUC,EADiE,EACjEA,oBAClB,OACE,yBACEN,IAAKA,EACLrE,MAAOA,EACP4E,iBAAgBvB,EAChB/H,UAAW2G,IACT,uBADmB,gBAEVmB,GAAkBC,IAC3BvK,KAAK2L,MAAMI,iBACX,CAAE,gBAAiBN,GAAmBI,KAGxC,yBAAKrJ,UAAU,eACb,yBAAKA,UAAU,QAAQ+I,IAAKC,EAAWD,IAAKrE,MAAOsE,EAAWtE,SAEhE,yBACE1E,UAAU,wBAGToJ,M,+BAMC,IAAD,EAC4B5L,KAAK2L,MAAhCpB,EADD,EACCA,UAAWyB,EADZ,EACYA,YACXrB,EAAc3K,KAAK0K,MAAnBC,UACR,OACE,kBAAC,IAAMsB,SAAP,KACE,yBACEzJ,UAAU,eACV+I,IAAKvL,KAAK4K,iBACVsB,QAASlM,KAAKiL,yBAEbe,GAEFrB,GACCwB,IAASC,aACP,kBAAC,KAAD,CACEC,UAAWC,SAASrI,KACpBsI,UAAW3C,GACXW,UAAWA,EACXiC,iBAAkBxM,KAAK4K,iBAAiB6B,SAEvCzM,KAAK+K,cAERuB,SAASrI,W,GA1FC4G,IAAM6B,eAAtBjC,GAOGkC,aAAe,CACpBpC,UAAW,UAyFAqC,oBAAsBnC,ICvHhBoC,I,6LAOT,IAAD,EAC4B7M,KAAK2L,MAAhCmB,EADD,EACCA,OAAQC,EADT,EACSA,SAAUC,EADnB,EACmBA,KAC1B,OACE,yBACExK,UAAW2G,IAAW,gBAAiB,CAAE2D,OAAQA,IACjDZ,QAAS,kBAAMa,GAAUD,KAExBE,O,GAdiCnC,IAAM6B,gBCE3BO,G,YAkBnB,WAAYtB,GAAQ,IAAD,+BACjB,8CAAMA,KACDjB,MAAQ,CACXpL,OAAS+C,IAAE6K,MAAMvB,EAAMrM,OAAuBqM,EAAMwB,aAApBxB,EAAMrM,QAA+B,IAEvE+C,IAAE+K,QAAQ,CAAC,eAAgB,aAAc,kBAAzC,iBALiB,E,kFAQAC,GACbA,EAAU/N,QAAUU,KAAK2L,MAAMrM,OACjCU,KAAKkL,SAAS,CAAE5L,MAAOU,KAAK2L,MAAMrM,U,mCAIzBgO,GAAI,IAAD,OACRC,EAAWD,EAAElC,OAAO9L,MAC1BU,KAAKkL,SAAS,CAAE5L,MAAOiO,IAAY,kBAAM,EAAK5B,MAAM6B,SAASD,Q,iCAGpDD,GAAI,IACL3J,EAAS3D,KAAK2L,MAAdhI,KACArE,EAAUU,KAAK0K,MAAfpL,MACR,GAAa,WAATqE,EAAmB,CACrB,IAAM8J,EAAerO,OAAOE,GACxBmO,GAAgBrO,OAAOkO,EAAElC,OAAOsC,MAAQD,GAAgBrO,OAAOkO,EAAElC,OAAOuC,KAC1E3N,KAAK2L,MAAMiC,OAAOH,EAAcH,IAEhCtN,KAAKkL,SAAS,CAAE5L,MAAOU,KAAK2L,MAAMrM,QAClCU,KAAK2L,MAAMiC,OAAO5N,KAAK2L,MAAMrM,MAAOgO,O,qCAK3BA,GACC,UAAVA,EAAEpE,KACJlJ,KAAK6N,WAAWP,K,+BAIV,IACA9K,EAAcxC,KAAK2L,MAAnBnJ,UAMR,OACE,2CACMH,IAAEyL,KAAK,CAAC,eAAgB,YAAa9N,KAAK2L,OADhD,CAEEnJ,UAAW2G,IAAW3G,EAAW,cACjClD,MAAOU,KAAK0K,MAAMpL,MAClBsO,OAAQ5N,KAAK6N,WACbE,WAAY/N,KAAKgO,eACjBC,QAASjO,KAAKkO,aACdV,SAAUnL,IAAE8L,Y,GAxEetD,IAAMuD,WAApBnB,GAWZoB,aAAe,CACpB/O,MAAO,KACPqE,KAAM,OACN6J,SAAUnL,IAAE8L,KACZP,OAAQvL,IAAE8L,M,WCjBOG,G,YACnB,aAAe,IAAD,+BACZ,iDAIFd,SAAW,SAAAF,GACT,EAAK3B,MAAM6B,SAASF,EAAElC,OAAOmD,UAJ7B,EAAKlN,GAAKgB,IAAEmM,WAFA,E,wEAUZ,OACE,yBAAKhM,UAAU,mBACb,2BACEmB,KAAK,WACLnB,UAAU,qBACVnB,GAAIrB,KAAKqB,GACTmM,SAAUxN,KAAKwN,SACfe,QAASvO,KAAK2L,MAAM4C,UAEtB,2BAAOE,QAASzO,KAAKqB,GAAImB,UAAU,UACjC,gCAEF,2BAAOiM,QAASzO,KAAKqB,GAAImB,UAAU,cAChCxC,KAAK2L,MAAMC,e,GAxBcf,IAAMuD,WCCrBM,I,mBAQnB,WAAY/C,GAAQ,IAAD,+BACjB,iDACKjB,MAAQ,CAAEiE,KAAMhD,EAAMiD,cAAe,GAFzB,E,wEAKT,IAAD,SACgC5O,KAAK2L,MAApCC,EADD,EACCA,SAAUxD,EADX,EACWA,MAAO5F,EADlB,EACkBA,UACjBmM,EAAS3O,KAAK0K,MAAdiE,KAER,OACE,yBAAKnM,UAAW2G,IAAW,kBAAmB3G,EAAW,CAAEmM,UACzD,yBAAKnM,UAAU,SAAS0J,QAAS,kBAAM,EAAKhB,UAAS,SAAAR,GAAK,MAAK,CAAEiE,MAAOjE,EAAMiE,WAC5E,yBAAKnM,UAAU,mBACb,kBAAC,IAAD,OAEF,yBAAKA,UAAU,SAAS4F,IAEzBwD,GAAY,yBAAKpJ,UAAU,wBAAwBoJ,Q,GAzBhBc,kB,gmBCJ7B,SAASmC,GAAT,GAA+C,IAA9BC,EAA6B,EAA7BA,MAAOpB,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,IAAKH,EAAY,EAAZA,SAC/C,OACE,kBAAC,SAAD,CACElL,OAAQwM,EACRC,KAAM,EACNrB,IAAKA,EACLC,IAAKA,EACLH,SAAUA,EACVwB,YAAa,gBAAGrD,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACX,yBACEqD,YAAatD,EAAMsD,YACnBC,aAAcvD,EAAMuD,aACpBhI,MAAK,MACAyE,EAAMzE,MADN,CAEHiI,SAAU,WACVzM,OAAQ,OACRyE,QAAS,OACT1E,MAAO,UAGT,yBACE8I,IAAKI,EAAMJ,IACXrE,MAAO,CACLxE,OAAQ,MACRD,MAAO,OACP2M,aAAc,MACdC,WAAYC,8BAAmB,CAC7BhN,OAAQwM,EACRS,OAAQ,CAAC,OAAQ,UAAW,QAC5B7B,MACAC,QAEF6B,UAAW,WAGZ5D,KAIP6D,YAAa,gBAAG9D,EAAH,EAAGA,MAAO+D,EAAV,EAAUA,UAAV,OACX,yCACM/D,EADN,CAEEzE,MAAK,MACAyE,EAAMzE,MADN,CAEHxE,OAAQ,OACRD,MAAO,OACP2M,aAAc,MACdO,gBAAiB,OACjBxI,QAAS,OACTyI,eAAgB,SAChBxI,WAAY,SACZyI,UAAW,uBAGb,yBACE3I,MAAO,CACLxE,OAAQ,MACRD,MAAO,MACP2M,aAAc,MACdO,gBAAiBD,EAAY,UAAY,c,+NCnDxC,SAASI,GAAT,GAA6D,IAAtCC,EAAqC,EAArCA,YAAuBC,EAAc,EAAxBxC,SAC3CsB,EAAQzM,IAAE4N,MAAMnO,EAAe,QAASiO,GACxCpM,EAAOtB,IAAE4N,MAAM,KAAM,OAAQF,GAC7BG,EAAW7N,IAAE4N,MAAM7N,EAAkB,WAAY2N,GAEnDI,EAAa,4EACjB,GAAIJ,EAAa,CACf,IAAMK,EAAIzM,GAAQ,GAElBwM,EAAa,oCADbA,EAAarB,EAAM,KAAOA,EAAM,GAAnB,UAA2BsB,GAA3B,OAA+BtB,EAAM,IAArC,UAA+CsB,GAA/C,OAAmDtB,EAAM,GAAzD,cAAiEsB,GAAjE,OAAqEtB,EAAM,KAEnFzM,IAAEgO,QAAQH,EAAU9N,KACvB+N,GAAc,QAQlB,IAAM3C,EAAW,SAAAlO,GACf0Q,E,2WAAW,EACTlB,QACAnL,QACGrE,EAHK,CAIR4Q,SAAU7N,IAAEiO,QAAQhR,EAAM4Q,UAAYA,EAAW5Q,EAAM4Q,aAI3D,OACE,6BACE,kBAAC,GAAD,CACEnE,iBAAiB,4BACjBC,YACE,4BAAQxJ,UAAU,4CAA4C2N,IAGhE,yBAAK3N,UAAU,uBACb,yBAAKA,UAAU,WACb,kBAAC,GAAD,CACEwK,KAAK,SACLF,OAAiB,MAATnJ,EACRoJ,SAAU,SAAAD,GACRU,EAAS,CACP7J,KAAMmJ,EAAS,IAAM,UAI3B,kBAAC,GAAD,CACEE,KAAK,SACLF,OAAiB,MAATnJ,EACRoJ,SAAU,SAAAD,GACRU,EAAS,CACP7J,KAAMmJ,EAAS,IAAM,WAK7B,kBAAC+B,GAAD,CACEC,MAAOA,EACPpB,IAAK5L,EAAc,GACnB6L,IAAK7L,EAAc,GACnB0L,SAAU,SAAAxK,GAAC,OAAIwK,EAAS,CAAEsB,MAAO9L,OAEnC,yBAAKR,UAAU,UACb,4BACEA,UAAU,sBACV0J,QAAS,kBACPsB,EAAS,CACPsB,MAAO,CAACvP,KAAKoO,IAAImB,EAAM,GAAK,EAAGhN,EAAc,IAAKgN,EAAM,QAI5D,kBAAC,IAAD,OAEF,kBAAC,GAAD,CACEnL,KAAK,SACLnB,UAAU,eACVkL,IAAK5L,EAAc,GACnB6L,IAAKpO,KAAKmO,IAAI5L,EAAc,GAAIgN,EAAM,IACtCxP,MAAOwP,EAAM,GACblB,OAAQ,SAAAtO,GACNkO,EAAS,CAAEsB,MAAO,CAACxP,EAAOwP,EAAM,SAGpC,4BACEtM,UAAU,sBACV0J,QAAS,WACP,IAAMqE,EAAShR,KAAKmO,IAAIoB,EAAM,GAAK,EAAGhN,EAAc,IACpD0L,EAAS,CACPsB,MAAO,CAACyB,EAAQzB,EAAM,GAAKyB,EAASA,EAASzB,EAAM,QAIvD,kBAAC,IAAD,OAEF,yBAAKtM,UAAU,eACf,4BACEA,UAAU,sBACV0J,QAAS,WACP,IAAMsE,EAASjR,KAAKoO,IAAImB,EAAM,GAAK,EAAGhN,EAAc,IACpD0L,EAAS,CACPsB,MAAO,CAACA,EAAM,GAAK0B,EAASA,EAAS1B,EAAM,GAAI0B,OAInD,kBAAC,IAAD,OAEF,kBAAC,GAAD,CACE7M,KAAK,SACLnB,UAAU,eACVkL,IAAKnO,KAAKoO,IAAI7L,EAAc,GAAIgN,EAAM,IACtCnB,IAAK7L,EAAc,GACnBxC,MAAOwP,EAAM,GACblB,OAAQ,SAAAtO,GAAK,OAAIkO,EAAS,CAAEsB,MAAO,CAACA,EAAM,GAAIxP,QAEhD,4BACEkD,UAAU,sBACV0J,QAAS,kBACPsB,EAAS,CACPsB,MAAO,CAACA,EAAM,GAAIvP,KAAKmO,IAAIoB,EAAM,GAAK,EAAGhN,EAAc,SAI3D,kBAAC,IAAD,QAGJ,yBAAKU,UAAU,oBACb,kBAAC,GAAD,CACEwK,KAAK,WACLF,OAAQoD,EAASO,SAAS1O,EAASC,KACnC+K,SAAU,SAAAD,GACRU,EAAS,CACP0C,SAAUpD,EAAM,uBACRoD,GADQ,CACEnO,EAASC,MACvBK,IAAEqO,QAAQ,CAAC3O,EAASC,KAAMkO,QAIpC,kBAAC,GAAD,CACElD,KAAK,QACLF,OAAQoD,EAASO,SAAS1O,EAASE,OACnC8K,SAAU,SAAAD,GACRU,EAAS,CACP0C,SAAUpD,EAAM,uBACRoD,GADQ,CACEnO,EAASE,QACvBI,IAAEqO,QAAQ,CAAC3O,EAASE,OAAQiO,QAItC,kBAAC,GAAD,CACElD,KAAK,QACLF,OAAQoD,EAASO,SAAS1O,EAASG,OACnC6K,SAAU,SAAAD,GACRU,EAAS,CACP0C,SAAUpD,EAAM,uBACRoD,GADQ,CACEnO,EAASG,QACvBG,IAAEqO,QAAQ,CAAC3O,EAASG,OAAQgO,QAItC,kBAAC,GAAD,CACElD,KAAK,OACLF,OAAQoD,EAASO,SAAS1O,EAASI,MACnC4K,SAAU,SAAAD,GACRU,EAAS,CACP0C,SAAUpD,EAAM,uBACRoD,GADQ,CACEnO,EAASI,OACvBE,IAAEqO,QAAQ,CAAC3O,EAASI,MAAO+N,Y,wBClL1C,MAAMS,GAAQ,CACnB,CACEC,UAAW,EACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UCzIEC,GAAa,CACxBC,EAAG,GACHC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","file":"static/js/main.5a33cdd7.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"getProcessedProfiles\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"49b18c24eacf8a5262f6.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","/* eslint-disable */\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\r\nNumber.isNaN =\r\n  Number.isNaN ||\r\n  function(value) {\r\n    return value !== value;\r\n  };\r\n\r\nif (typeof Math.sign === 'undefined') {\r\n  Math.sign = function(x) {\r\n    return x > 0 ? 1 : x < 0 ? -1 : x;\r\n  };\r\n}\r\n\r\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\r\nif (!Array.prototype.findIndex) {\r\n  Object.defineProperty(Array.prototype, 'findIndex', {\r\n    value: function(predicate) {\r\n      // 1. Let O be ? ToObject(this value).\r\n      if (this == null) {\r\n        throw new TypeError('\"this\" is null or not defined');\r\n      }\r\n\r\n      var o = Object(this);\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('predicate must be a function');\r\n      }\r\n\r\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n      var thisArg = arguments[1];\r\n\r\n      // 5. Let k be 0.\r\n      var k = 0;\r\n\r\n      // 6. Repeat, while k < len\r\n      while (k < len) {\r\n        // a. Let Pk be ! ToString(k).\r\n        // b. Let kValue be ? Get(O, Pk).\r\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n        // d. If testResult is true, return k.\r\n        var kValue = o[k];\r\n        if (predicate.call(thisArg, kValue, k, o)) {\r\n          return k;\r\n        }\r\n        // e. Increase k by 1.\r\n        k++;\r\n      }\r\n\r\n      // 7. Return -1.\r\n      return -1;\r\n    },\r\n    configurable: true,\r\n    writable: true,\r\n  });\r\n}\r\n","export const routes = {\r\n  leaderboard: {\r\n    path: `/leaderboard`,\r\n  },\r\n  songs: {\r\n    path: `/songs`,\r\n  },\r\n  ranking: {\r\n    path: `/ranking`,\r\n    faq: {\r\n      path: '/ranking/faq',\r\n    },\r\n  },\r\n  profile: {\r\n    path: `/profiles/:id`,\r\n    getPath: params => `/profiles/${params.id}`,\r\n    compare: {\r\n      path: `/profiles/:id/vs/:compareToId`,\r\n      getPath: params => `/profiles/${params.id}/vs/${params.compareToId}`,\r\n    },\r\n  },\r\n};\r\n","import _ from 'lodash/fp';\r\n\r\nexport const SORT = {\r\n  DEFAULT: 'default',\r\n  PROTAGONIST: 'protagonist',\r\n  RANK_ASC: 'rankAsc',\r\n  RANK_DESC: 'rankDesc',\r\n  NEW_SCORES_PLAYER: 'newScoresPlayer',\r\n};\r\n\r\nexport const CHART_MIN_MAX = [1, 28];\r\nexport const DURATION = {\r\n  STD: 'Standard',\r\n  SHORT: 'Short',\r\n  REMIX: 'Remix',\r\n  FULL: 'Full',\r\n};\r\nexport const DURATION_DEFAULT = _.values(DURATION);\r\n","import React from 'react';\r\n\r\nimport './loader.scss';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"loader\">\r\n      <svg\r\n        width=\"40\"\r\n        height=\"12\"\r\n        viewBox=\"0 0 120 30\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"#eee\"\r\n      >\r\n        <circle cx=\"15\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"60\" cy=\"15\" r=\"9\" fillOpacity=\"0.3\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"9\"\r\n            to=\"9\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"9;15;9\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"0.5\"\r\n            to=\"0.5\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\".5;1;.5\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"105\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","export const RESET = `USER/RESET`;\r\nexport const resetUser = () => ({ type: RESET });\r\n","import _ from 'lodash/fp';\r\nimport cookies from 'browser-cookies';\r\n\r\nimport { resetUser } from 'reducers/user/resetAction';\r\n\r\nexport const fetchJson = ({ url }) => request({ url, method: 'get' });\r\nexport const postJson = ({ url, body }) =>\r\n  request({\r\n    url,\r\n    method: 'post',\r\n    body: JSON.stringify(body),\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n    },\r\n  });\r\n\r\nconst defaultHeaders = {};\r\n\r\nexport const request = ({ url, method, body, headers }) => async (dispatch, getState) => {\r\n  try {\r\n    const session = cookies.get('session');\r\n    if (session) {\r\n      defaultHeaders['Session'] = session;\r\n    }\r\n    const response = await fetch(url, {\r\n      method,\r\n      body,\r\n      headers: { ...defaultHeaders, ...headers },\r\n      credentials: 'include',\r\n    });\r\n    if (response.status >= 200 && response.status < 300) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      const error = await response.json();\r\n      if (_.isObject(error) && _.isString(error.error)) {\r\n        throw new Error(error.error);\r\n      } else if (_.isString(error)) {\r\n        throw new Error(error);\r\n      } else {\r\n        throw new Error('HTTP Status ' + response.status);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    if (error.message === 'Invalid session') {\r\n      dispatch(resetUser());\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n","// export const HOST = 'http://localhost:5000';\r\nexport const HOST = 'https://vps720616.ovh.net:5000';\r\nexport const SOCKET_SERVER_IP = 'ws://127.0.0.1:6789';\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `MOST_PLAYED/LOADING`;\r\nconst SUCCESS = `MOST_PLAYED/SUCCESS`;\r\nconst ERROR = `MOST_PLAYED/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchMostPlayed = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-played` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `MOST_PLAYED_MONTH/LOADING`;\r\nconst SUCCESS = `MOST_PLAYED_MONTH/SUCCESS`;\r\nconst ERROR = `MOST_PLAYED_MONTH/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchMostPlayedMonth = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-played-month` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `LEAST_PLAYED/LOADING`;\r\nconst SUCCESS = `LEAST_PLAYED/SUCCESS`;\r\nconst ERROR = `LEAST_PLAYED/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchLeastPlayed = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-time-not-played` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport moment from 'moment';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\n\r\nconst timeStyle = {\r\n  flavour: 'long',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nexport const tooltipFormatter = result => {\r\n  if (!result.isExactDate) {\r\n    const resultType =\r\n      result.isMyBest === undefined && result.isMachineBest === undefined\r\n        ? 'с my best или machine best'\r\n        : result.isMyBest\r\n        ? 'с my best'\r\n        : result.isMachineBest\r\n        ? 'с machine best'\r\n        : 'хз откуда';\r\n    return (\r\n      <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n        <div>точная дата взятия неизвестна</div>\r\n        <div>скор был записан {resultType}</div>\r\n        <div>дата записи: {result.dateObject.toLocaleDateString()}</div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return result.dateObject.toLocaleDateString();\r\n  }\r\n};\r\n\r\nexport const getTimeAgo = date => {\r\n  const dayDiff = moment()\r\n    .startOf('day')\r\n    .diff(moment(date).startOf('day'), 'days');\r\n  const hour = moment(date).hour();\r\n  if (moment().hour() < 5) {\r\n    return dayDiff <= 1 ? 'сегодня' : timeAgo.format(date, timeStyle);\r\n  }\r\n  return dayDiff === 0\r\n    ? hour < 5\r\n      ? 'вчера ночью'\r\n      : 'сегодня'\r\n    : dayDiff === 1\r\n    ? 'вчера'\r\n    : timeAgo.format(date, timeStyle);\r\n};\r\n","import moment from 'moment';\r\n\r\nexport const parseDate = textDate => {\r\n  if (typeof textDate === 'string') {\r\n    return moment(textDate, 'YYYY-MM-DD HH:mm:ss').toDate();\r\n  } else {\r\n    return new Date(textDate);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaPlay } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\n// styles\r\nimport './songs-top.scss';\r\n\r\n// components\r\nimport Loader from 'components/Shared/Loader';\r\n\r\n// constants\r\n\r\n// reducers\r\nimport { fetchMostPlayed } from 'reducers/trackStats/mostPlayed';\r\nimport { fetchMostPlayedMonth } from 'reducers/trackStats/mostPlayedMonth';\r\nimport { fetchLeastPlayed } from 'reducers/trackStats/leastPlayed';\r\n\r\n// utils\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { parseDate } from 'utils/date';\r\n\r\n// code\r\nfunction TopList({ fetchList, title, renderRightSide }) {\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const getRightSide =\r\n    renderRightSide ||\r\n    (item => (\r\n      <div className=\"playcount\">\r\n        <FaPlay />\r\n        <span>{item.countplay}</span>\r\n      </div>\r\n    ));\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchList()\r\n      .then(data => {\r\n        data.success && setData(data.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [fetchList]);\r\n\r\n  return (\r\n    <div className=\"top-songs-list\">\r\n      <div className=\"top-songs-header\">\r\n        <span>{title}</span>\r\n      </div>\r\n      {isLoading && <Loader />}\r\n      {!isLoading &&\r\n        data.map((item, index) => {\r\n          return (\r\n            <div key={item.id} className=\"top-songs-item\">\r\n              <div className={classNames('place', `top-${index + 1}`, { best: index < 3 })}>\r\n                <span>{index + 1}.</span>\r\n              </div>\r\n              <div className=\"song-name\">{item.full_name}</div>\r\n              {getRightSide(item)}\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst leastPlayedRightSide = item => (\r\n  <div className=\"date\">\r\n    <span>{item.last_play ? getTimeAgo(parseDate(item.last_play)) : 'никогда'}</span>\r\n  </div>\r\n);\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    fetchMostPlayed,\r\n    fetchMostPlayedMonth,\r\n    fetchLeastPlayed,\r\n  }\r\n)(function SongsTop({ fetchMostPlayed, fetchMostPlayedMonth, fetchLeastPlayed }) {\r\n  return (\r\n    <div className=\"songs-top-page\">\r\n      <TopList fetchList={fetchMostPlayed} title=\"топ популярных треков\" />\r\n      <TopList fetchList={fetchMostPlayedMonth} title=\"топ популярных треков за месяц\" />\r\n      <TopList\r\n        fetchList={fetchLeastPlayed}\r\n        title=\"треки, которые долго не играли\"\r\n        renderRightSide={leastPlayedRightSide}\r\n      />\r\n      <div className=\"top-songs-list -placeholder\" />\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport toBe from 'prop-types';\r\nimport { Popper } from 'react-popper';\r\nimport classNames from 'classnames';\r\nimport listensToClickOutside from 'react-onclickoutside';\r\n\r\nimport './overlay.scss';\r\n\r\nconst POPPER_MODIFIERS = {\r\n  preventOverflow: {\r\n    enabled: true,\r\n    padding: 10,\r\n    boundariesElement: 'viewport',\r\n  },\r\n};\r\n\r\nconst PLACEMENT_ARROW_MAPPING = {\r\n  right: 'left',\r\n  left: 'right',\r\n  top: 'bottom',\r\n  bottom: 'top',\r\n};\r\n\r\nconst getArrowPlacement = placement => {\r\n  return placement && PLACEMENT_ARROW_MAPPING[placement.split('-')[0]];\r\n};\r\n\r\nclass Overlay extends React.PureComponent {\r\n  static propTypes = {\r\n    placement: toBe.string,\r\n    overlayItem: toBe.any,\r\n    hideWhenOutOfBounds: toBe.bool,\r\n  };\r\n\r\n  static defaultTypes = {\r\n    placement: 'bottom',\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isVisible: false,\r\n    };\r\n    this.containerItemRef = React.createRef();\r\n    this.renderPopper = this.renderPopper.bind(this);\r\n    this.toggleOverlayVisibility = this.toggleOverlayVisibility.bind(this);\r\n  }\r\n\r\n  hideOverlay() {\r\n    this.setState({\r\n      isVisible: false,\r\n    });\r\n  }\r\n\r\n  toggleOverlayVisibility() {\r\n    this.setState({\r\n      isVisible: !this.state.isVisible,\r\n    });\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    const preventHiding = event && event.target.closest('.inner-popper-overlay'); // prevent overlays from hiding when a modal is opened within overlay\r\n\r\n    if (!preventHiding) {\r\n      this.hideOverlay();\r\n    }\r\n  }\r\n\r\n  renderPopper({ ref, style, placement, arrowProps, scheduleUpdate, outOfBoundaries }) {\r\n    const { children, hideWhenOutOfBounds } = this.props;\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        data-placement={placement}\r\n        className={classNames(\r\n          'inner-popper-overlay',\r\n          `arrow-${getArrowPlacement(placement)}`,\r\n          this.props.overlayClassName,\r\n          { 'out-of-bounds': outOfBoundaries && hideWhenOutOfBounds }\r\n        )}\r\n      >\r\n        <div className=\"arrow-hider\">\r\n          <div className=\"arrow\" ref={arrowProps.ref} style={arrowProps.style} />\r\n        </div>\r\n        <div\r\n          className=\"inner-popper-content\"\r\n          // ref={ref => this.setupPopperContentRef(scheduleUpdate, ref)}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { placement, overlayItem } = this.props;\r\n    const { isVisible } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"overlay-item\"\r\n          ref={this.containerItemRef}\r\n          onClick={this.toggleOverlayVisibility}\r\n        >\r\n          {overlayItem}\r\n        </div>\r\n        {isVisible &&\r\n          ReactDOM.createPortal(\r\n            <Popper\r\n              container={document.body}\r\n              modifiers={POPPER_MODIFIERS}\r\n              placement={placement}\r\n              referenceElement={this.containerItemRef.current}\r\n            >\r\n              {this.renderPopper}\r\n            </Popper>,\r\n            document.body\r\n          )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default listensToClickOutside(Overlay);\r\n","import React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './toggle-button.scss';\r\n\r\nexport default class ToggleButton extends React.PureComponent {\r\n  static propTypes = {\r\n    text: toBe.string,\r\n    onToggle: toBe.func,\r\n    active: toBe.bool,\r\n  };\r\n\r\n  render() {\r\n    const { active, onToggle, text } = this.props;\r\n    return (\r\n      <div\r\n        className={classNames('toggle-button', { active: active })}\r\n        onClick={() => onToggle(!active)}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable react/no-deprecated */\r\n// imports from vendor deps\r\nimport React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\n\r\n// imports from styles\r\nexport default class Input extends React.Component {\r\n  static propTypes = {\r\n    value: toBe.any,\r\n    defaultValue: toBe.any,\r\n    onChange: toBe.func,\r\n    onBlur: toBe.func,\r\n    type: toBe.string,\r\n    className: toBe.string,\r\n    trimOnBlur: toBe.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    value: null,\r\n    type: 'text',\r\n    onChange: _.noop,\r\n    onBlur: _.noop,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: (!_.isNil(props.value) ? props.value : props.defaultValue) || '',\r\n    };\r\n    _.bindAll(['handleChange', 'handleBlur', 'handleKeyPress'], this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.value !== this.props.value) {\r\n      this.setState({ value: this.props.value });\r\n    }\r\n  }\r\n\r\n  handleChange(e) {\r\n    const newValue = e.target.value;\r\n    this.setState({ value: newValue }, () => this.props.onChange(newValue));\r\n  }\r\n\r\n  handleBlur(e) {\r\n    const { type } = this.props;\r\n    const { value } = this.state;\r\n    if (type === 'number') {\r\n      const numericValue = Number(value);\r\n      if (numericValue >= Number(e.target.min) && numericValue <= Number(e.target.max)) {\r\n        this.props.onBlur(numericValue, e);\r\n      } else {\r\n        this.setState({ value: this.props.value });\r\n        this.props.onBlur(this.props.value, e);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleKeyPress(e) {\r\n    if (e.key === 'Enter') {\r\n      this.handleBlur(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props;\r\n\r\n    // HACK: This component uses onInput instead of onChange\r\n    // because IE11 fails to call onChange events when you paste/cut using context menu (RMB)\r\n    // We're using onInput because it works fine, and because for text input\r\n    // there's no difference between how onChange and onInput work\r\n    return (\r\n      <input\r\n        {..._.omit(['defaultValue', 'onChange'], this.props)}\r\n        className={classNames(className, 'text-input')}\r\n        value={this.state.value}\r\n        onBlur={this.handleBlur}\r\n        onKeyPress={this.handleKeyPress}\r\n        onInput={this.handleChange}\r\n        onChange={_.noop} // Handled by onInput\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './toggle.scss';\r\n\r\n// imports from styles\r\nexport default class Toggle extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.id = _.uniqueId();\r\n  }\r\n\r\n  onChange = e => {\r\n    this.props.onChange(e.target.checked);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"toggle-checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle-checkbox-cb\"\r\n          id={this.id}\r\n          onChange={this.onChange}\r\n          checked={this.props.checked}\r\n        />\r\n        <label htmlFor={this.id} className=\"toggle\">\r\n          <span></span>\r\n        </label>\r\n        <label htmlFor={this.id} className=\"text-label\">\r\n          {this.props.children}\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\nimport './styles.scss';\r\n\r\nexport default class CollapsibleBar extends PureComponent {\r\n  static propTypes = {\r\n    className: toBe.string,\r\n    children: toBe.any,\r\n    title: toBe.any,\r\n    defaultOpen: toBe.bool,\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = { open: props.defaultOpen || false };\r\n  }\r\n\r\n  render() {\r\n    const { children, title, className } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classNames('collapsible-bar', className, { open })}>\r\n        <div className=\"header\" onClick={() => this.setState(state => ({ open: !state.open }))}>\r\n          <div className=\"collapse-button\">\r\n            <FaChevronRight />\r\n          </div>\r\n          <div className=\"title\">{title}</div>\r\n        </div>\r\n        {children && <div className=\"collapsible-children\">{children}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Range as ReactRange, getTrackBackground } from 'react-range';\r\n\r\nexport default function Range({ range, min, max, onChange }) {\r\n  return (\r\n    <ReactRange\r\n      values={range}\r\n      step={1}\r\n      min={min}\r\n      max={max}\r\n      onChange={onChange}\r\n      renderTrack={({ props, children }) => (\r\n        <div\r\n          onMouseDown={props.onMouseDown}\r\n          onTouchStart={props.onTouchStart}\r\n          style={{\r\n            ...props.style,\r\n            position: 'relative',\r\n            height: '10px',\r\n            display: 'flex',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <div\r\n            ref={props.ref}\r\n            style={{\r\n              height: '6px',\r\n              width: '100%',\r\n              borderRadius: '3px',\r\n              background: getTrackBackground({\r\n                values: range,\r\n                colors: ['#ccc', '#88d3ff', '#ccc'],\r\n                min,\r\n                max,\r\n              }),\r\n              alignSelf: 'center',\r\n            }}\r\n          >\r\n            {children}\r\n          </div>\r\n        </div>\r\n      )}\r\n      renderThumb={({ props, isDragged }) => (\r\n        <div\r\n          {...props}\r\n          style={{\r\n            ...props.style,\r\n            height: '12px',\r\n            width: '12px',\r\n            borderRadius: '6px',\r\n            backgroundColor: '#FFF',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            boxShadow: '0px 2px 3px #AAA',\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              height: '6px',\r\n              width: '6px',\r\n              borderRadius: '3px',\r\n              backgroundColor: isDragged ? '#88d3ff' : '#CCC',\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\nimport { FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Range from 'components/Shared/Range';\r\n\r\nimport { CHART_MIN_MAX, DURATION_DEFAULT, DURATION } from 'constants/leaderboard';\r\n\r\nexport default function ChartFilter({ filterValue, onChange: onChangeEx }) {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filterValue);\r\n  const type = _.getOr(null, 'type', filterValue);\r\n  const duration = _.getOr(DURATION_DEFAULT, 'duration', filterValue);\r\n\r\n  let buttonText = 'фильтр чартов';\r\n  if (filterValue) {\r\n    const t = type || '';\r\n    buttonText = range[0] === range[1] ? `${t}${range[0]}` : `${t}${range[0]} - ${t}${range[1]}`;\r\n    buttonText = 'чарты: ' + buttonText;\r\n    if (!_.isEqual(duration, DURATION_DEFAULT)) {\r\n      buttonText += ' ***';\r\n      // buttonText += ` (${_.values(DURATION)\r\n      //   .filter(dur => duration.includes(dur))\r\n      //   .map(s => s.slice(0, 2))\r\n      //   .join('-')})`;\r\n    }\r\n  }\r\n\r\n  const onChange = value => {\r\n    onChangeEx({\r\n      range,\r\n      type,\r\n      ...value,\r\n      duration: _.isEmpty(value.duration) ? duration : value.duration,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Overlay\r\n        overlayClassName=\"chart-range-overlay-outer\"\r\n        overlayItem={\r\n          <button className=\"filter-charts-button btn btn-sm btn-dark\">{buttonText}</button>\r\n        }\r\n      >\r\n        <div className=\"chart-range-overlay\">\r\n          <div className=\"buttons\">\r\n            <ToggleButton\r\n              text=\"Single\"\r\n              active={type === 'S'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  type: active ? 'S' : null,\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Double\"\r\n              active={type === 'D'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  type: active ? 'D' : null,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <Range\r\n            range={range}\r\n            min={CHART_MIN_MAX[0]}\r\n            max={CHART_MIN_MAX[1]}\r\n            onChange={r => onChange({ range: r })}\r\n          />\r\n          <div className=\"inputs\">\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  range: [Math.max(range[0] - 1, CHART_MIN_MAX[0]), range[1]],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={CHART_MIN_MAX[0]}\r\n              max={Math.min(CHART_MIN_MAX[1], range[1])}\r\n              value={range[0]}\r\n              onBlur={value => {\r\n                onChange({ range: [value, range[1]] });\r\n              }}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMin = Math.min(range[0] + 1, CHART_MIN_MAX[1]);\r\n                onChange({\r\n                  range: [newMin, range[1] < newMin ? newMin : range[1]],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMax = Math.max(range[1] - 1, CHART_MIN_MAX[0]);\r\n                onChange({\r\n                  range: [range[0] > newMax ? newMax : range[0], newMax],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={Math.max(CHART_MIN_MAX[0], range[0])}\r\n              max={CHART_MIN_MAX[1]}\r\n              value={range[1]}\r\n              onBlur={value => onChange({ range: [range[0], value] })}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  range: [range[0], Math.min(range[1] + 1, CHART_MIN_MAX[1])],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n          </div>\r\n          <div className=\"buttons-duration\">\r\n            <ToggleButton\r\n              text=\"Standard\"\r\n              active={duration.includes(DURATION.STD)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.STD]\r\n                    : _.without([DURATION.STD], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Short\"\r\n              active={duration.includes(DURATION.SHORT)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.SHORT]\r\n                    : _.without([DURATION.SHORT], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Remix\"\r\n              active={duration.includes(DURATION.REMIX)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.REMIX]\r\n                    : _.without([DURATION.REMIX], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Full\"\r\n              active={duration.includes(DURATION.FULL)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.FULL]\r\n                    : _.without([DURATION.FULL], duration),\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Overlay>\r\n    </div>\r\n  );\r\n}\r\n","export const ranks = [\r\n  {\r\n    threshold: 0,\r\n    iconName: '0.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 1000,\r\n    iconName: '1.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 2000,\r\n    iconName: '2.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 3000,\r\n    iconName: '3.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 4000,\r\n    iconName: '4.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 5000,\r\n    iconName: '5.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 6250,\r\n    iconName: '6.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 7500,\r\n    iconName: '7.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 8750,\r\n    iconName: '8.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 10000,\r\n    iconName: '9.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 12000,\r\n    iconName: '10.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 14000,\r\n    iconName: '11.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 16000,\r\n    iconName: '12.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 18000,\r\n    iconName: '13.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 22000,\r\n    iconName: '14.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 26000,\r\n    iconName: '15.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 30000,\r\n    iconName: '16.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 35000,\r\n    iconName: '17.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 40000,\r\n    iconName: '18.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 50000,\r\n    iconName: '19.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 60000,\r\n    iconName: '20.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 70000,\r\n    iconName: '21.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 80000,\r\n    iconName: '22.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 100000,\r\n    iconName: '23.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 120000,\r\n    iconName: '24.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 140000,\r\n    iconName: '25.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 160000,\r\n    iconName: '26.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 180000,\r\n    iconName: '27.png',\r\n    color: 'green',\r\n  },\r\n];\r\n","import React from 'react';\r\n\r\nexport const gradeValue = {\r\n  F: 0.1,\r\n  D: 0.2,\r\n  'D+': 0.3,\r\n  C: 0.3,\r\n  'C+': 0.5,\r\n  B: 0.5,\r\n  'B+': 0.8,\r\n  A: 0.8,\r\n  'A+': 1,\r\n  S: 1.1,\r\n  SS: 1.2,\r\n  SSS: 1.2,\r\n};\r\n\r\nexport const getExp = (result, chart) => {\r\n  if (!result.isBestGradeOnChart) {\r\n    return 0;\r\n  }\r\n  if (chart.chartType === 'COOP') {\r\n    return (chart.chartLevel * 1000 * (gradeValue[result.grade] || 0.8)) / 8;\r\n  }\r\n  const exp = (chart.chartLevel ** 2.31 * (gradeValue[result.grade] || 0.8)) / 9;\r\n  return exp;\r\n};\r\n\r\nexport const getRankImg = rank =>\r\n  rank && (\r\n    <img\r\n      className={rank.color}\r\n      src={`${process.env.PUBLIC_URL}/ranks/${rank.iconName}`}\r\n      alt={rank.threshold}\r\n    />\r\n  );\r\n\r\nexport { ranks } from './expRanks';\r\n","import _ from 'lodash/fp';\r\n\r\nimport {\r\n  GiLoveSong,\r\n  GiLifeBar,\r\n  GiSmokingFinger,\r\n  GiSnail,\r\n  GiRetroController,\r\n  GiRank1,\r\n  GiRank2,\r\n  GiRank3,\r\n  GiWoodenPegleg,\r\n  GiPodiumSecond,\r\n} from 'react-icons/gi';\r\n\r\nexport const achievements = {\r\n  '500 комбо': {\r\n    icon: GiRank1,\r\n    description: 'Заработать 500+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 500 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  '1000 комбо': {\r\n    icon: GiRank2,\r\n    description: 'Заработать 1000+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 1000 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  '2000 комбо': {\r\n    icon: GiRank3,\r\n    description: 'Заработать 2000+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 2000 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Мастер фингеринга': {\r\n    icon: GiSmokingFinger,\r\n    description: 'Сыграть все Fingers треки',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: ['Monkey Fingers', 'Kimchi Fingers', 'Monkey Fingers 2', 'Money Fingers'],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  '8-bit': {\r\n    icon: GiRetroController,\r\n    description: 'Сыграть Seize My Day, Tales of Pumpnia и Pumptris (8bit ver.)',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: ['Seize My Day', 'Tales of Pumpnia', 'Pumptris (8bit ver.)'],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  'Love is...': {\r\n    icon: GiLoveSong,\r\n    description: 'Сыграть все Love is a Danger Zone треки',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: [\r\n        'Love is a Danger Zone',\r\n        'Love is a Danger Zone [SHORT]',\r\n        'Love is a Danger Zone (Cranky Mix)',\r\n        'Love is a Danger Zone 2',\r\n        'Love is a Danger Zone 2 [SHORT]',\r\n        'Love is a Danger Zone 2 [FULL]',\r\n        'Love is a Danger Zone 2 (D&G Ver.)',\r\n        'Love is a Danger Zone (try to B.P.M.)',\r\n      ],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  Улитка: {\r\n    icon: GiSnail,\r\n    description:\r\n      'Мастер замедлений: сыграть старшие чарты Twist of Fate, Karyawisata, Awakening и Moonlight',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: [\r\n        { song: 'Twist of Fate (feat. Ruriling)', charts: ['D20', 'S19'] },\r\n        { song: 'Karyawisata', charts: ['S20', 'D16'] },\r\n        { song: 'Awakening', charts: ['S19', 'D20'] },\r\n        { song: 'Moonlight', charts: ['S19', 'D21'] },\r\n      ],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.some(\r\n        songToPlay => chart.song === songToPlay.song && songToPlay.charts.includes(chart.chartLabel)\r\n      )\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  'Коричневая S': {\r\n    icon: GiPodiumSecond,\r\n    description: 'Получить S, но 5+ бэдов',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.miss === 0 && result.bad >= 5 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Мы выживали как могли': {\r\n    icon: GiLifeBar,\r\n    description: 'Получить B или ниже, но удержать лайфбар',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress:\r\n          state.progress === 100 ? 100 : ['B+', 'C+', 'D+'].includes(result.grade) ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Падовый мисс': {\r\n    icon: GiWoodenPegleg,\r\n    description: 'Когда от SSS тебя удерживают только миссы из-за плохого моддинга падов',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress:\r\n          state.progress === 100\r\n            ? 100\r\n            : result.miss > 0 && result.bad === 0 && result.good === 0 && result.great === 0\r\n            ? 100\r\n            : 0,\r\n      };\r\n    },\r\n  },\r\n};\r\n\r\nexport const initialAchievementState = {\r\n  progress: 0,\r\n};\r\n","export const getScoreWithoutBonus = (score, grade) => {\r\n  if (grade === 'SSS') return score - 300000;\r\n  if (grade === 'SS') return score - 150000;\r\n  if (grade === 'S') return score - 100000;\r\n  return score;\r\n};\r\n","import _ from 'lodash/fp';\r\n\r\nimport { ranks as expRanks } from 'utils/expRanks';\r\n\r\nconst postProcessProfiles = (profiles, tracklist) => {\r\n  const getBonusForLevel = level => (30 * (1 + 2 ** (level / 4))) / 11;\r\n  const getMinimumNumber = totalCharts =>\r\n    Math.round(\r\n      Math.min(totalCharts, 1 + totalCharts / 20 + Math.sqrt(Math.max(totalCharts - 1, 0)) * 0.7)\r\n    );\r\n\r\n  const newProfiles = _.mapValues(profile => {\r\n    const neededGrades = ['A', 'A+', 'S', 'SS', 'SSS'];\r\n    profile.expRank = _.findLast(rank => rank.threshold <= profile.exp, expRanks);\r\n    profile.expRankNext = _.find(rank => rank.threshold > profile.exp, expRanks);\r\n    profile.progress = {\r\n      double: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n      single: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n    };\r\n    const gradeIncrementMap = {\r\n      SSS: ['SS', 'S', 'A+', 'A'],\r\n      SS: ['SS', 'S', 'A+', 'A'],\r\n      S: ['S', 'A+', 'A'],\r\n      'A+': ['A+', 'A'],\r\n      A: ['A'],\r\n    };\r\n    const incrementLevel = (l, g, chartType) => {\r\n      const prog =\r\n        chartType === 'S' || chartType === 'SP'\r\n          ? profile.progress.single\r\n          : chartType === 'D' || chartType === 'DP'\r\n          ? profile.progress.double\r\n          : null;\r\n      if (prog) {\r\n        prog[g][l] = prog[g][l] ? prog[g][l] + 1 : 1;\r\n      }\r\n    };\r\n    _.keys(profile.resultsByLevel).forEach(level => {\r\n      profile.resultsByLevel[level].forEach(res => {\r\n        const thisGrade = res.result.grade;\r\n        const thisPlayerId = res.result.playerId;\r\n        const otherResults = res.chart.results.filter(r => r.playerId === thisPlayerId);\r\n        if (otherResults.length > 1) {\r\n          const sortedResults = otherResults.sort(\r\n            (a, b) => neededGrades.indexOf(b.grade) - neededGrades.indexOf(a.grade)\r\n          );\r\n          if (sortedResults[0].grade !== thisGrade) {\r\n            return; // Don't do anything when we have a different result with better grade\r\n          }\r\n        }\r\n        const gradeIncArray = gradeIncrementMap[thisGrade];\r\n        if (gradeIncArray) {\r\n          gradeIncArray.forEach(gradeInc => {\r\n            incrementLevel(level, gradeInc, res.chart.chartType);\r\n          });\r\n        }\r\n      });\r\n    });\r\n    ['single', 'double'].forEach(chartType => {\r\n      profile.progress[`${chartType}-bonus`] = 0;\r\n      _.keys(profile.progress[chartType]).forEach(grade => {\r\n        profile.progress[chartType][`${grade}-bonus`] = 0;\r\n        _.keys(profile.progress[chartType][grade]).forEach(level => {\r\n          const number = profile.progress[chartType][grade][level];\r\n          const totalCharts = tracklist.data[`${chartType}sLevels`][level];\r\n          const minimumNumber = getMinimumNumber(totalCharts);\r\n          const bonusCoefficientNumber = Math.min(1, number / minimumNumber);\r\n          const rawBonus = getBonusForLevel(level);\r\n          const bonus = rawBonus * bonusCoefficientNumber;\r\n          profile.progress[chartType][grade][`${level}-bonus`] = bonus;\r\n          profile.progress[chartType][grade][`${level}-bonus-coef`] = bonusCoefficientNumber;\r\n          profile.progress[chartType][grade][`${level}-min-number`] = minimumNumber;\r\n          profile.progress[chartType][grade][`${level}-achieved-number`] = number;\r\n          if (bonus >= profile.progress[chartType][`${grade}-bonus`]) {\r\n            profile.progress[chartType][`${grade}-bonus`] = bonus;\r\n            profile.progress[chartType][`${grade}-bonus-level`] = level;\r\n            profile.progress[chartType][`${grade}-bonus-level-coef`] = bonusCoefficientNumber;\r\n            profile.progress[chartType][`${grade}-bonus-level-min-number`] = minimumNumber;\r\n            profile.progress[chartType][`${grade}-bonus-level-achieved-number`] = number;\r\n          }\r\n        });\r\n        profile.progress[`${chartType}-bonus`] += profile.progress[chartType][`${grade}-bonus`];\r\n      });\r\n    });\r\n    profile.progress.bonus = profile.progress['double-bonus'] + profile.progress['single-bonus'];\r\n    profile.achievementBonus = profile.progress.bonus;\r\n    profile.accuracy =\r\n      profile.countAcc > 0\r\n        ? Math.round((profile.sumAccuracy / profile.countAcc) * 100) / 100\r\n        : null;\r\n    return profile;\r\n  }, profiles);\r\n  return newProfiles;\r\n};\r\n\r\nconst processPP = ({ profiles, sharedCharts }) => {\r\n  const resultInfo = {};\r\n  for (const chartId in sharedCharts) {\r\n    const chart = sharedCharts[chartId];\r\n    const chartResults = chart.results;\r\n    const chartLevel = Number(chart.chartLevel);\r\n    const maxPP = chartLevel ** 2.2 / 7; // divide by 4 for normalization, to align with previous elo versrion\r\n    if (chart.maxNonRankScore) {\r\n      const maxScore = chart.maxNonRankScore;\r\n      for (const result of chartResults) {\r\n        if (!result.isRank && result.accuracyRaw && result.grade && maxScore) {\r\n          let K2 = {\r\n            SSS: 1,\r\n            SS: 0.97,\r\n            S: 0.95,\r\n            'A+': 0.9,\r\n            A: 0.84,\r\n            B: 0.77,\r\n            C: 0.63,\r\n            D: 0.4,\r\n            F: 0,\r\n          }[result.grade];\r\n          K2 = K2 === undefined ? 0.4 : K2;\r\n          const K3 = Math.max(0, Math.min(1, result.scoreRaw / maxScore - 0.3) / 0.7);\r\n          const K = K2 * K3;\r\n\r\n          // Final PP value\r\n          const pp = K * maxPP;\r\n          // Record result data\r\n          resultInfo[result.id] = {\r\n            pp: {\r\n              pp,\r\n              k: K,\r\n              kX: { K2, K3 },\r\n              maxScore,\r\n              maxPP,\r\n              ppPotential: maxPP - pp,\r\n              ppRatio: pp / maxPP,\r\n              ppFixed: Number(pp.toFixed(1)),\r\n            },\r\n          };\r\n          const profile = profiles[result.playerId];\r\n          if (profile) {\r\n            if (!profile.pp) {\r\n              profile.pp = { scores: [], pp: 0 };\r\n            }\r\n            profile.pp.scores.push({\r\n              pp_: Number(pp.toFixed(1)),\r\n              s: chart.song,\r\n              l: chart.chartLabel,\r\n              pp,\r\n              result,\r\n              chart,\r\n              k: { K2, K3, K },\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // Calculate total pp\r\n  for (const playerId in profiles) {\r\n    const profile = profiles[playerId];\r\n    if (profile.pp) {\r\n      profile.pp.scores.sort((a, b) => b.pp - a.pp);\r\n      profile.pp.pp = 0;\r\n      profile.pp.scores.forEach((score, index) => {\r\n        profile.pp.pp += 0.95 ** index * score.pp;\r\n      });\r\n      profile.ratingRaw = profile.pp.pp;\r\n    } else {\r\n      profile.ratingRaw = 0;\r\n    }\r\n    profile.id = _.toInteger(playerId);\r\n    profile.accuracy =\r\n      profile.countAcc > 0\r\n        ? Math.round((profile.sumAccuracy / profile.countAcc) * 100) / 100\r\n        : null;\r\n    profile.rating = Math.round(profile.ratingRaw);\r\n  }\r\n  return { resultInfo, profiles };\r\n};\r\n\r\nexport const getProcessedProfiles = ({ profiles: originalProfiles, sharedCharts, tracklist }) => {\r\n  // Calculate Progress achievements and bonus for starting Elo\r\n  let profiles = postProcessProfiles(originalProfiles, tracklist);\r\n  // Calculate ELO\r\n  // const { logText, scoreInfo } = processBattles({ battles, profiles: processedProfiles, debug });\r\n  // Calculate PP\r\n  const { resultInfo, profiles: processedProfiles } = processPP({ profiles, sharedCharts });\r\n  return { processedProfiles, resultInfo };\r\n};\r\n","if (localStorage) {\r\n  window.debugOn = () => {\r\n    localStorage.setItem('debug', 1);\r\n  };\r\n  window.debugOff = () => {\r\n    localStorage.removeItem('debug');\r\n  };\r\n}\r\n\r\nexport const DEBUG = localStorage && localStorage.getItem('debug');\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\nimport queryString from 'query-string';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\nimport { getExp } from 'utils/exp';\r\nimport { achievements, initialAchievementState } from 'utils/achievements';\r\nimport { parseDate } from 'utils/date';\r\nimport { getScoreWithoutBonus } from 'utils/score';\r\n\r\nimport WorkerProfilesProcessing from 'workerize-loader!utils/workers/profilesPostProcess'; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport * as profilesProcessing from 'utils/workers/profilesPostProcess';\r\n\r\nimport { HOST } from 'constants/backend';\r\nimport { DEBUG } from 'constants/env';\r\n\r\nconst LOADING = `TOP/LOADING`;\r\nconst SUCCESS = `TOP/SUCCESS`;\r\nconst ERROR = `TOP/ERROR`;\r\nconst SET_FILTER = `TOP/SET_FILTER`;\r\nconst RESET_FILTER = `TOP/RESET_FILTER`;\r\nconst RANKING_CHANGE_SET = `TOP/RANKING_CHANGE_SET`;\r\nconst PROFILES_UPDATE = `TOP/PROFILES_UPDATE`;\r\n\r\nexport const defaultFilter = { showRank: true, showRankAndNorank: true };\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  isLoadingRanking: false,\r\n  data: [],\r\n  filter: defaultFilter,\r\n  players: {},\r\n  profiles: {},\r\n  results: [],\r\n  resultInfo: {},\r\n  sharedCharts: {},\r\n};\r\n\r\nexport const gradeComparator = {\r\n  '?': 0,\r\n  F: 1,\r\n  D: 2,\r\n  'D+': 3,\r\n  C: 4,\r\n  'C+': 5,\r\n  B: 6,\r\n  'B+': 7,\r\n  A: 8,\r\n  'A+': 9,\r\n  S: 10,\r\n  SS: 11,\r\n  SSS: 12,\r\n};\r\n\r\nconst tryFixIncompleteResult = (result, maxTotalSteps) => {\r\n  if (!maxTotalSteps) {\r\n    return;\r\n  }\r\n  const infos = [result.perfect, result.great, result.good, result.bad, result.miss];\r\n  let fixableIndex = -1,\r\n    absentNumbersCount = 0,\r\n    localStepSum = 0;\r\n  for (let i = 0; i < 5; ++i) {\r\n    if (!_.isNumber(infos[i])) {\r\n      fixableIndex = i;\r\n      absentNumbersCount++;\r\n    } else {\r\n      localStepSum += infos[i];\r\n    }\r\n  }\r\n  if (absentNumbersCount === 1) {\r\n    result[['perfect', 'great', 'good', 'bad', 'miss'][fixableIndex]] =\r\n      maxTotalSteps - localStepSum;\r\n  }\r\n};\r\n\r\nconst guessGrade = result => {\r\n  if (result.misses === 0 && result.bads === 0 && result.goods === 0) {\r\n    if (result.greats === 0) {\r\n      return 'SSS';\r\n    } else {\r\n      return 'SS';\r\n    }\r\n  }\r\n  return result.grade;\r\n};\r\n\r\nconst mapResult = (res, players, chart) => {\r\n  if (typeof res.recognition_notes === 'undefined') {\r\n    // Short result, minimum info, only for ELO calculation\r\n    // Will be replaced with better result later\r\n    return {\r\n      id: res.id,\r\n      isUnknownPlayer: players[res.player].arcade_name === 'PUMPITUP',\r\n      isIntermediateResult: true,\r\n      sharedChartId: res.shared_chart,\r\n      playerId: res.player,\r\n      nickname: players[res.player].nickname,\r\n      nicknameArcade: players[res.player].arcade_name,\r\n      date: res.gained,\r\n      dateObject: parseDate(res.gained),\r\n      grade: res.grade,\r\n      isExactDate: !!res.exact_gain_date,\r\n      score: res.score,\r\n      scoreRaw: getScoreWithoutBonus(res.score, res.grade),\r\n      isRank: !!res.rank_mode,\r\n    };\r\n  }\r\n  // Full best result\r\n  let _r = {\r\n    isUnknownPlayer: players[res.player].arcade_name === 'PUMPITUP',\r\n    isIntermediateResult: false,\r\n    sharedChartId: res.shared_chart,\r\n    id: res.id,\r\n    playerId: res.player,\r\n    nickname: players[res.player].nickname,\r\n    nicknameArcade: players[res.player].arcade_name,\r\n    originalChartMix: res.original_mix,\r\n    originalChartLabel: res.original_label,\r\n    originalScore: res.original_score,\r\n    date: res.gained,\r\n    dateObject: parseDate(res.gained),\r\n    grade: res.grade !== '?' ? res.grade : guessGrade(res),\r\n    isExactDate: !!res.exact_gain_date,\r\n    score: res.score,\r\n    scoreRaw: getScoreWithoutBonus(res.score, res.grade),\r\n    maxScore: res.max_score,\r\n    scoreIncrease: res.score_increase,\r\n    calories: res.calories && res.calories / 1000,\r\n    perfect: res.perfects,\r\n    great: res.greats,\r\n    good: res.goods,\r\n    bad: res.bads,\r\n    miss: res.misses,\r\n    combo: res.max_combo,\r\n    mods: res.mods_list,\r\n    isRank: !!res.rank_mode,\r\n    isHJ: (res.mods_list || '').split(' ').includes('HJ'),\r\n    isMachineBest: res.recognition_notes === 'machine_best',\r\n    isMyBest: res.recognition_notes === 'personal_best',\r\n  };\r\n\r\n  tryFixIncompleteResult(_r, chart.maxTotalSteps);\r\n\r\n  const perfects = Math.sqrt(_r.perfect) * 10;\r\n  const acc = perfects\r\n    ? Math.floor(\r\n        ((perfects * 100 + _r.great * 60 + _r.good * 30 + _r.miss * -20) /\r\n          (perfects + _r.great + _r.good + _r.bad + _r.miss)) *\r\n          100\r\n      ) / 100\r\n    : null;\r\n  const accRaw = _r.perfect\r\n    ? Math.floor(\r\n        ((_r.perfect * 100 + _r.great * 60 + _r.good * 30 + _r.miss * -20) /\r\n          (_r.perfect + _r.great + _r.good + _r.bad + _r.miss)) *\r\n          100\r\n      ) / 100\r\n    : null;\r\n\r\n  _r.accuracy = acc < 0 ? 0 : accRaw === 100 ? 100 : acc && +acc.toFixed(2);\r\n  _r.accuracyRaw = accRaw;\r\n  return _r;\r\n};\r\n\r\nconst getMaxScore = score => {\r\n  return ((score.score / score.accuracyRaw) * 100) / (score.isRank ? 1.2 : 1);\r\n};\r\nconst getMaxRawScore = score => {\r\n  return ((score.scoreRaw / score.accuracy) * 100) / (score.isRank ? 1.2 : 1);\r\n};\r\n\r\nconst initializeProfile = (result, profiles) => {\r\n  const id = result.playerId;\r\n  const resultsByLevel = _.fromPairs(Array.from({ length: 28 }).map((x, i) => [i + 1, []]));\r\n  profiles[id] = {\r\n    name: result.nickname,\r\n    nameArcade: result.nicknameArcade,\r\n    resultsByGrade: {},\r\n    resultsByLevel,\r\n    lastResultDate: result.dateObject,\r\n    count: 0,\r\n    battleCount: 0,\r\n    countAcc: 0,\r\n    grades: { F: 0, D: 0, C: 0, B: 0, A: 0, S: 0, SS: 0, SSS: 0 },\r\n    sumAccuracy: 0,\r\n    rankingHistory: [],\r\n    ratingHistory: [],\r\n    lastPlace: null,\r\n    lastBattleDate: 0,\r\n  };\r\n  profiles[id].achievements = _.flow(\r\n    _.keys,\r\n    _.map(achName => [\r\n      achName,\r\n      { ...(achievements[achName].initialState || initialAchievementState) },\r\n    ]),\r\n    _.fromPairs\r\n  )(achievements);\r\n  profiles[id].exp = 0;\r\n};\r\n\r\nconst getProfileInfoFromResult = (result, chart, profiles) => {\r\n  const profile = profiles[result.playerId];\r\n\r\n  profile.count++;\r\n  if (result.accuracy) {\r\n    profile.countAcc++;\r\n    profile.sumAccuracy += result.accuracy;\r\n  }\r\n  profile.grades[result.grade.replace('+', '')]++;\r\n  if (chart.chartType !== 'COOP' && result.isBestGradeOnChart) {\r\n    profile.resultsByGrade[result.grade] = [\r\n      ...(profile.resultsByGrade[result.grade] || []),\r\n      { result, chart },\r\n    ];\r\n    profile.resultsByLevel[chart.chartLevel] = [\r\n      ...(profile.resultsByLevel[chart.chartLevel] || []),\r\n      { result, chart },\r\n    ];\r\n  }\r\n  if (result.isExactDate && profile.lastResultDate < result.dateObject) {\r\n    profile.lastResultDate = result.dateObject;\r\n  }\r\n  profile.achievements = _.mapValues.convert({ cap: false })((achState, achName) => {\r\n    return achievements[achName].resultFunction(result, chart, achState, profile);\r\n  }, profile.achievements);\r\n  profile.exp += getExp(result, chart);\r\n};\r\n\r\nconst processData = (data, tracklist) => {\r\n  const { players, results, shared_charts } = data;\r\n  //// Initialization\r\n  // Init for TOP\r\n  const mappedResults = [];\r\n  const getTopResultId = result => `${result.sharedChartId}-${result.playerId}-${result.isRank}`;\r\n  const getBestGradeResultId = result => `${result.sharedChartId}-${result.playerId}`;\r\n  const topResults = {}; // Temp object\r\n  const bestGradeResults = {}; // Temp object\r\n  const top = {}; // Main top scores pbject\r\n\r\n  // Profiles for every player\r\n  let profiles = {};\r\n\r\n  // Loop 1\r\n  for (let resRaw of results) {\r\n    const sharedChartId = resRaw.shared_chart;\r\n    // Initialize Song\r\n    if (!top[sharedChartId]) {\r\n      const sharedChart = shared_charts[sharedChartId];\r\n      const label = _.toUpper(sharedChart.chart_label);\r\n      const [chartType, chartLevel] = label.match(/(\\D+)|(\\d+)/g);\r\n      top[sharedChartId] = {\r\n        song: sharedChart.track_name,\r\n        chartLabel: label,\r\n        chartLevel,\r\n        chartType,\r\n        duration: sharedChart.duration,\r\n        sharedChartId: sharedChartId,\r\n        maxTotalSteps: sharedChart.max_total_steps,\r\n        results: [],\r\n        totalResultsCount: 0,\r\n      };\r\n    }\r\n\r\n    // Getting current chart and result (mapped)\r\n    const chartTop = top[sharedChartId];\r\n    const result = mapResult(resRaw, players, chartTop);\r\n    mappedResults.push(result);\r\n\r\n    // Inserting result into TOP\r\n    const topResultId = getTopResultId(result);\r\n    const currentTopResult = topResults[topResultId];\r\n    if (!currentTopResult || currentTopResult.score < result.score) {\r\n      if (currentTopResult) {\r\n        const oldScoreIndex = chartTop.results.indexOf(currentTopResult);\r\n        if (oldScoreIndex !== -1) {\r\n          chartTop.results.splice(oldScoreIndex, 1);\r\n        }\r\n      }\r\n      const newScoreIndex = _.sortedLastIndexBy(r => -r.score, result, chartTop.results);\r\n      if (!result.isUnknownPlayer || newScoreIndex === 0) {\r\n        chartTop.results.splice(newScoreIndex, 0, result);\r\n        chartTop.latestScoreDate = result.date;\r\n        chartTop.totalResultsCount++;\r\n        topResults[topResultId] = result;\r\n      }\r\n    }\r\n\r\n    // Getting best grade of player on this chart\r\n    if (!result.isIntermediateResult) {\r\n      const bestGradeResultId = getBestGradeResultId(result);\r\n      const currentBestGradeRes = bestGradeResults[bestGradeResultId];\r\n      if (\r\n        !currentBestGradeRes ||\r\n        gradeComparator[currentBestGradeRes.grade] <= gradeComparator[result.grade]\r\n      ) {\r\n        // Using <= here, so newer scores always win and rewrite old scores\r\n        currentBestGradeRes && (currentBestGradeRes.isBestGradeOnChart = false);\r\n        result.isBestGradeOnChart = true;\r\n        bestGradeResults[bestGradeResultId] = result;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Loop 2, when the TOP is already set up\r\n  for (let chartId in top) {\r\n    const chart = top[chartId];\r\n    chart.maxScoreWithAccuracy = 0;\r\n    chart.maxNonRankScore = 0;\r\n    for (let result of chart.results) {\r\n      if (result.accuracyRaw && chart.maxScoreWithAccuracy < result.score) {\r\n        chart.maxScoreResult = result;\r\n        chart.maxScoreWithAccuracy = result.score;\r\n      }\r\n      if (result.accuracyRaw && !result.isRank && chart.maxNonRankScore < result.score) {\r\n        chart.maxNonRankScoreResult = result;\r\n        chart.maxNonRankScore = result.score;\r\n      }\r\n      // Getting some info about players\r\n      if (!result.isUnknownPlayer && !result.isIntermediateResult) {\r\n        if (!profiles[result.playerId]) {\r\n          initializeProfile(result, profiles);\r\n        }\r\n        getProfileInfoFromResult(result, chart, profiles);\r\n      }\r\n    }\r\n    if (chart.maxScoreWithAccuracy) {\r\n      chart.maxScore = getMaxScore(chart.maxScoreResult, chart);\r\n    }\r\n    if (chart.maxNonRankScore) {\r\n      chart.maxNonRankScore = getMaxRawScore(chart.maxNonRankScoreResult, chart);\r\n    }\r\n  }\r\n\r\n  return { mappedResults, profiles, sharedCharts: top };\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: initialState.data,\r\n        players: initialState.players,\r\n        profiles: initialState.profiles,\r\n        results: initialState.results,\r\n        sharedCharts: initialState.sharedCharts,\r\n        scoreInfo: {},\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isLoadingRanking: true,\r\n        data: action.data,\r\n        players: action.players,\r\n        profiles: action.profiles,\r\n        results: action.results,\r\n        sharedCharts: action.sharedCharts,\r\n        originalData: action.originalData,\r\n        scoreInfo: {},\r\n      };\r\n    case PROFILES_UPDATE:\r\n      return {\r\n        ...state,\r\n        isLoadingRanking: false,\r\n        profiles: action.profiles,\r\n        resultInfo: action.resultInfo,\r\n      };\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    case RANKING_CHANGE_SET:\r\n      const hasPrevList = !_.isEmpty(action.listPrev);\r\n      return {\r\n        ...state,\r\n        profiles: _.mapValues(playerOriginal => {\r\n          const player = {\r\n            ...playerOriginal,\r\n            prevRating: _.get(playerOriginal.id, action.rankingsPointsMap),\r\n          };\r\n          if (!hasPrevList) {\r\n            return player; // First time opening this thing and we didn't have any previous data\r\n          }\r\n          if (!_.includes(player.id, action.listPrev)) {\r\n            return { ...player, change: 'NEW' };\r\n          } else if (!_.includes(player.id, action.listNow)) {\r\n            // Should NEVER happen, idk if this is possible\r\n            return { ...player, change: '?' };\r\n          } else {\r\n            return {\r\n              ...player,\r\n              change: _.indexOf(player.id, action.listPrev) - _.indexOf(player.id, action.listNow),\r\n            };\r\n          }\r\n        }, state.profiles),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchResults = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        fetchJson({\r\n          url: `${HOST}/results/highscores`,\r\n        })\r\n      );\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n      // HACK for test\r\n      // data.results = _.dropRight(152, data.results);\r\n      dispatch(processResultsData(data));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const appendNewResults = () => {\r\n  return async (dispatch, getState) => {\r\n    const { originalData, sharedCharts } = getState().results;\r\n    const lastDate = _.get('gained', _.last(originalData.results));\r\n    if (!lastDate) {\r\n      return dispatch(fetchResults());\r\n    }\r\n\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        fetchJson({\r\n          url: `${HOST}/results/highscores?${queryString.stringify({ start_date: lastDate })}`,\r\n        })\r\n      );\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n\r\n      const appendedResults = _.filter(result => {\r\n        const currentResults = sharedCharts[result.shared_chart];\r\n        if (!currentResults) {\r\n          return true;\r\n        }\r\n        return !_.some(\r\n          r =>\r\n            r.playerId === result.player &&\r\n            r.isRank === !!result.rank_mode &&\r\n            r.score > result.score,\r\n          currentResults.results\r\n        );\r\n      }, data.results);\r\n\r\n      const mergedData = {\r\n        players: data.players,\r\n        results: [...originalData.results, ...appendedResults],\r\n        shared_charts: { ...originalData.shared_charts, ...data.shared_charts },\r\n      };\r\n      dispatch(processResultsData(mergedData));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nconst processResultsData = data => {\r\n  return async (dispatch, getState) => {\r\n    const { tracklist } = getState();\r\n    const { sharedCharts, mappedResults, profiles } = processData(data, tracklist);\r\n\r\n    dispatch({\r\n      type: SUCCESS,\r\n      data: _.values(sharedCharts),\r\n      players: _.flow(\r\n        _.toPairs,\r\n        _.map(([id, player]) => ({ ...player, id: _.toInteger(id) }))\r\n      )(data.players),\r\n      results: mappedResults,\r\n      profiles,\r\n      sharedCharts,\r\n      originalData: data,\r\n    });\r\n\r\n    // Parallelized calculation of ELO and profile data\r\n    const input = { sharedCharts, profiles, tracklist };\r\n    let promise, worker;\r\n    if (window.Worker) {\r\n      worker = new WorkerProfilesProcessing();\r\n      promise = worker.getProcessedProfiles(input);\r\n    } else {\r\n      promise = new Promise(res => res(profilesProcessing.getProcessedProfiles(input)));\r\n    }\r\n\r\n    const { processedProfiles, resultInfo } = await promise;\r\n    DEBUG &&\r\n      console.log(\r\n        Object.values(processedProfiles)\r\n          .filter(q => q.pp)\r\n          .sort((a, b) => b.pp.pp - a.pp.pp)\r\n      );\r\n    dispatch({ type: PROFILES_UPDATE, profiles: processedProfiles, resultInfo });\r\n    dispatch(calculateRankingChanges(processedProfiles));\r\n    if (worker) worker.terminate();\r\n  };\r\n};\r\n\r\nexport const setFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\n\r\nexport const resetFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n\r\nconst getListOfNames = _.map('id');\r\nconst getMapOfRatings = _.flow(\r\n  _.map(q => [q.id, q.rating]),\r\n  _.fromPairs\r\n);\r\n\r\nexport const calculateRankingChanges = profiles => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const ranking = _.orderBy('ratingRaw', 'desc', _.values(profiles));\r\n      const [lastChangedRanking, lastChangedRankingPoints, lastFetchedRanking] = await Promise.all([\r\n        localForage.getItem('lastChangedRanking_v3'),\r\n        localForage.getItem('lastChangedRankingPoints_v3'),\r\n        localForage.getItem('lastFetchedRanking_v3'),\r\n      ]);\r\n      console.log(ranking, [lastChangedRanking, lastChangedRankingPoints, lastFetchedRanking]);\r\n      const listNow = getListOfNames(ranking);\r\n      const listLastFetched = getListOfNames(lastFetchedRanking);\r\n      const listLastChanged = getListOfNames(lastChangedRanking);\r\n      const mapPointsNow = getMapOfRatings(ranking);\r\n      const mapPointsLastFetched = getMapOfRatings(lastFetchedRanking);\r\n      const mapPointsLastChanged = getMapOfRatings(lastChangedRankingPoints);\r\n      console.log(listNow);\r\n\r\n      let rankingsPointsMap = mapPointsLastChanged;\r\n      // console.log(listNow, listLastFetched, listLastChanged);\r\n      // console.log(mapPointsNow, mapPointsLastFetched, mapPointsLastChanged);\r\n      if (!_.isEqual(mapPointsNow, mapPointsLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRankingPoints_v3', lastFetchedRanking);\r\n        rankingsPointsMap = mapPointsLastFetched;\r\n      }\r\n      let listPrev = listLastChanged;\r\n      if (!_.isEqual(listNow, listLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRanking_v3', lastFetchedRanking);\r\n        listPrev = listLastFetched;\r\n      }\r\n      dispatch({\r\n        type: RANKING_CHANGE_SET,\r\n        listNow,\r\n        listPrev,\r\n        rankingsPointsMap,\r\n      });\r\n      localForage.setItem('lastFetchedRanking_v3', ranking);\r\n    } catch (error) {\r\n      console.warn('Cannot get ranking from local storage', error);\r\n    }\r\n  };\r\n};\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\n\r\nimport { setFilter } from 'reducers/results';\r\n\r\nconst SELECT_PRESET = `PRESETS/SELECT_PRESET`;\r\nconst LOAD_PRESETS = `PRESETS/LOAD_PRESETS`;\r\nconst LOADING_START = `PRESETS/LOADING_START`;\r\nconst LOADING_END = `PRESETS/LOADING_END`;\r\n\r\nconst initialState = {\r\n  presets: [],\r\n  currentPreset: null,\r\n  isLoading: false,\r\n};\r\n\r\nconst itemToOption = item =>\r\n  item && {\r\n    ...item,\r\n    label: item.name,\r\n    value: item.name,\r\n  };\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_PRESETS:\r\n      const currentPreset = _.find({ name: _.get('name', state.currentPreset) }, action.presets);\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(currentPreset) || null,\r\n        presets: _.map(itemToOption, action.presets),\r\n      };\r\n    case SELECT_PRESET:\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(action.currentPreset),\r\n      };\r\n    case LOADING_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case LOADING_END:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst reloadPresets = presets => ({ type: LOAD_PRESETS, presets: presets || [] });\r\n\r\nconst startLoading = () => ({\r\n  type: LOADING_START,\r\n});\r\n\r\nconst endLoading = () => ({\r\n  type: LOADING_END,\r\n});\r\n\r\nexport const selectPreset = currentPreset => ({\r\n  type: SELECT_PRESET,\r\n  currentPreset,\r\n});\r\n\r\nexport const loadPresets = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    dispatch(reloadPresets(presets));\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const savePreset = name => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const { filter } = getState().top;\r\n    const newPreset = { name, filter };\r\n    if (!_.some({ name }, presets)) {\r\n      const newPresets = [...(presets || []), newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      dispatch(selectPreset(newPreset));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    } else if (window.confirm('Preset with this name already exists, replace it?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      const newPresets = [...withoutOldPreset, newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const openPreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const currentPreset = getState().presets.currentPreset;\r\n  const name = _.get('name', currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = name && _.find({ name }, presets);\r\n    if (preset) {\r\n      dispatch(selectPreset(currentPreset));\r\n      dispatch(setFilter(currentPreset.filter));\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const deletePreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const name = _.get('name', getState().presets.currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = _.find({ name }, presets);\r\n    if (preset && window.confirm('Are you sure you want to delete selected preset?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      dispatch(reloadPresets(withoutOldPreset));\r\n      localForage.setItem('filterPresets', withoutOldPreset);\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaLayerGroup, FaFolderOpen, FaSave, FaPlus, FaTrashAlt } from 'react-icons/fa';\r\nimport Select from 'react-select';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport Input from 'components/Shared/Input/Input';\r\n\r\nimport { loadPresets, savePreset, selectPreset, openPreset, deletePreset } from 'reducers/presets';\r\n\r\nconst overlayItem = (\r\n  <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n    <FaLayerGroup />\r\n    пресеты\r\n  </button>\r\n);\r\n\r\nconst noPresetsMessage = () => 'пусто';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ...state.presets,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  loadPresets,\r\n  savePreset,\r\n  openPreset,\r\n  deletePreset,\r\n  selectPreset,\r\n};\r\n\r\nclass PresetsControl extends React.Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    this.props.loadPresets();\r\n  }\r\n\r\n  onChangeSelection = selected => {\r\n    this.props.selectPreset(selected.name);\r\n  };\r\n\r\n  onRewritePreset = () => {\r\n    const { currentPreset } = this.props;\r\n    this.props.savePreset(currentPreset.name);\r\n  };\r\n\r\n  onSavePreset = () => {\r\n    const { name } = this.state;\r\n    this.props.savePreset(name);\r\n    this.setState({ isAddingNew: false });\r\n  };\r\n\r\n  render() {\r\n    const { presets, currentPreset, isLoading } = this.props;\r\n    const { name, isAddingNew } = this.state;\r\n    return (\r\n      <div>\r\n        <Overlay overlayItem={overlayItem}>\r\n          <div className=\"presets-control-overlay\">\r\n            <Select\r\n              className=\"select _margin-bottom\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"пресеты...\"\r\n              options={presets}\r\n              value={currentPreset}\r\n              onChange={this.props.selectPreset}\r\n              noOptionsMessage={noPresetsMessage}\r\n            />\r\n            {currentPreset && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.props.openPreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaFolderOpen /> открыть\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.onRewritePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaSave /> перезаписать\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon\"\r\n                  onClick={this.props.deletePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaTrashAlt /> удалить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {!isAddingNew && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left _self-align-end\"\r\n                  onClick={() => this.setState({ isAddingNew: true })}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaPlus /> добавить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {isAddingNew && (\r\n              <div className=\"adding-new _margin-bottom\">\r\n                <Input\r\n                  value={name}\r\n                  placeholder=\"имя пресета...\"\r\n                  className=\"form-control\"\r\n                  onChange={name => this.setState({ name })}\r\n                />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={this.onSavePreset}\r\n                  disabled={!name || isLoading}\r\n                >\r\n                  <FaSave /> сохранить\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={() => this.setState({ isAddingNew: false })}\r\n                  disabled={isLoading}\r\n                >\r\n                  отмена\r\n                </button>\r\n              </div>\r\n            )}\r\n            {/* <div>\r\n              <Toggle\r\n                checked={false}\r\n                onToggle={active => {\r\n                  localForage.setItem('showTabs', active);\r\n                }}\r\n              >\r\n                показывать табы с пресетами\r\n              </Toggle>\r\n            </div> */}\r\n          </div>\r\n        </Overlay>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PresetsControl);\r\n","export const colorsArray = [\r\n  '#4DB3FF',\r\n  '#80B300',\r\n  '#FF6655',\r\n  '#FF99E6',\r\n  '#33FFCC',\r\n  '#e633c8',\r\n  '#dbe812',\r\n  '#FF1A66',\r\n  '#991AFF',\r\n  '#E6B333',\r\n  '#1AB399',\r\n  '#4D8066',\r\n  '#CC9999',\r\n  '#00E680',\r\n  '#809980',\r\n  '#E6FF80',\r\n  '#1AFF33',\r\n  '#999933',\r\n  '#E6331A',\r\n  '#CCCC00',\r\n  '#66E64D',\r\n  '#4D80CC',\r\n  '#9900B3',\r\n  '#4DB380',\r\n  '#FF4D4D',\r\n];\r\n","import _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport matchSorter from 'match-sorter';\r\n\r\nimport { SORT, CHART_MIN_MAX, DURATION_DEFAULT } from 'constants/leaderboard';\r\n\r\nexport const playersSelector = createSelector(\r\n  state => state.results.players,\r\n  state => state.user.data.player.id,\r\n  (players, playerId) =>\r\n    _.flow(\r\n      _.toPairs,\r\n      _.map(([, { nickname, arcade_name, id }]) => ({\r\n        label: `${nickname} (${arcade_name})`,\r\n        value: nickname,\r\n        isCurrentPlayer: playerId === id,\r\n      })),\r\n      _.sortBy(it => (it.isCurrentPlayer ? '___000' : _.toLower(it.label)))\r\n    )(players)\r\n);\r\n\r\nconst filterCharts = (filter, rows) => {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filter);\r\n  const type = _.getOr(null, 'type', filter);\r\n  const duration = _.getOr(DURATION_DEFAULT, 'duration', filter);\r\n\r\n  return _.filter(row => {\r\n    if (duration !== DURATION_DEFAULT && !duration.includes(row.duration)) {\r\n      return false;\r\n    }\r\n    return (\r\n      row.chartLevel >= range[0] &&\r\n      row.chartLevel <= range[1] &&\r\n      (!type || row.chartType.startsWith(type))\r\n    );\r\n  }, rows);\r\n};\r\n\r\nconst getFilteredData = (data, filter, resultInfo = {}) => {\r\n  // const start = performance.now();\r\n  const names = _.map('value', filter.players);\r\n  const namesOr = _.map('value', filter.playersOr);\r\n  const namesNot = _.map('value', filter.playersNot);\r\n  const sortingType = _.get('value', filter.sortingType);\r\n  const protagonist = _.get('value', filter.protagonist);\r\n  const excludeAntagonists = _.map('value', filter.excludeAntagonists);\r\n\r\n  const defaultSorting = [_.orderBy(['latestScoreDate'], ['desc'])];\r\n  const newScoresProtagonistSorting = !protagonist\r\n    ? defaultSorting\r\n    : [\r\n        _.orderBy(\r\n          [\r\n            song =>\r\n              _.max(\r\n                _.map(\r\n                  res => (res.nickname === protagonist ? res.dateObject.getTime() : 0),\r\n                  song.results\r\n                )\r\n              ),\r\n          ],\r\n          ['desc']\r\n        ),\r\n      ];\r\n  const protagonistSorting = [\r\n    _.filter(row => _.map('nickname', row.results).includes(protagonist)),\r\n    _.map(row => {\r\n      const protIndex = _.findIndex({ nickname: protagonist }, row.results);\r\n      const protScore = row.results[protIndex].score;\r\n      const enemies = _.flow([\r\n        _.take(protIndex),\r\n        _.uniqBy('nickname'),\r\n        _.remove(res => excludeAntagonists.includes(res.nickname) || res.score === protScore),\r\n      ])(row.results);\r\n      const distance = Math.sqrt(\r\n        _.reduce((dist, enemy) => dist + (enemy.score / protScore - 0.99) ** 2, 0, enemies)\r\n      );\r\n      return {\r\n        ...row,\r\n        distanceFromProtagonist: distance,\r\n      };\r\n    }),\r\n    _.orderBy(['distanceFromProtagonist'], ['desc']),\r\n  ];\r\n  const getScoreSorting = (field, direction = 'desc') => [\r\n    _.filter(row => _.map('nickname', row.results).includes(protagonist)),\r\n    _.orderBy(\r\n      [\r\n        row => {\r\n          const result = _.find({ nickname: protagonist }, row.results);\r\n          const info = resultInfo[result.id] || {};\r\n          return _.getOr(direction === 'desc' ? -Infinity : Infinity, field, info);\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const sortingFunctions =\r\n    {\r\n      [SORT.DEFAULT]: defaultSorting,\r\n      [SORT.NEW_SCORES_PLAYER]: newScoresProtagonistSorting,\r\n      [SORT.PROTAGONIST]: protagonistSorting,\r\n      [SORT.RANK_ASC]: getScoreSorting('pp.ppRatio', 'asc'),\r\n      [SORT.RANK_DESC]: getScoreSorting('pp.pp'),\r\n    }[sortingType] || defaultSorting;\r\n\r\n  const result = _.flow(\r\n    _.compact([\r\n      _.map(row => ({\r\n        ...row,\r\n        results: row.results.filter(\r\n          (res, index) => !res.isUnknownPlayer || index === 0,\r\n          row.results\r\n        ),\r\n      })),\r\n      filter.chartRange && (items => filterCharts(filter.chartRange, items)),\r\n      !filter.showRank &&\r\n        _.map(row => ({ ...row, results: _.filter(res => !res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        filter.showOnlyRank &&\r\n        _.map(row => ({ ...row, results: _.filter(res => res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        !filter.showOnlyRank &&\r\n        !filter.showRankAndNorank &&\r\n        _.map(row => {\r\n          const occuredNames = [];\r\n          return {\r\n            ...row,\r\n            results: _.filter(res => {\r\n              const alreadyOccured = occuredNames.includes(res.nickname);\r\n              occuredNames.push(res.nickname);\r\n              return !alreadyOccured;\r\n            }, row.results),\r\n          };\r\n        }),\r\n      (names.length || namesOr.length || namesNot.length) &&\r\n        _.filter(row => {\r\n          const rowNames = _.map('nickname', row.results);\r\n          return (\r\n            (!names.length || _.every(name => rowNames.includes(name), names)) &&\r\n            (!namesOr.length || _.some(name => rowNames.includes(name), namesOr)) &&\r\n            (!namesNot.length || !_.some(name => rowNames.includes(name), namesNot))\r\n          );\r\n        }),\r\n      _.filter(row => _.size(row.results)),\r\n      ...sortingFunctions,\r\n      filter.song && (items => matchSorter(items, filter.song.trim(), { keys: ['song'] })),\r\n    ])\r\n  )(data);\r\n  // console.log('Elapsed:', performance.now() - start);\r\n  return result;\r\n};\r\n\r\nexport const filteredDataSelector = createSelector(\r\n  state => state.results.data,\r\n  state => state.results.filter,\r\n  state => state.results.resultInfo,\r\n  getFilteredData\r\n);\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash/fp';\r\nimport Select from 'react-select';\r\nimport classNames from 'classnames';\r\nimport numeral from 'numeral';\r\nimport localForage from 'localforage';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport {\r\n  FaRedoAlt,\r\n  FaExclamationTriangle,\r\n  FaSearch,\r\n  FaYoutube,\r\n  FaAngleDoubleUp,\r\n  FaBackward,\r\n  FaForward,\r\n} from 'react-icons/fa';\r\nimport FlipMove from 'react-flip-move';\r\n\r\n// styles\r\nimport './leaderboard.scss';\r\n\r\n// components\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport CollapsibleBar from 'components/Shared/CollapsibleBar';\r\nimport ChartFilter from './ChartFilter';\r\nimport PresetsControl from './PresetsControl';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\nimport { SORT } from 'constants/leaderboard';\r\nimport { DEBUG } from 'constants/env';\r\n\r\n// reducers\r\nimport { fetchResults, setFilter, resetFilter, defaultFilter } from 'reducers/results';\r\nimport { selectPreset, openPreset } from 'reducers/presets';\r\n\r\n// utils\r\nimport { getExp } from 'utils/exp';\r\nimport { tooltipFormatter, getTimeAgo } from 'utils/leaderboards';\r\nimport { colorsArray } from 'utils/colors';\r\nimport { playersSelector, filteredDataSelector } from 'reducers/selectors';\r\n\r\n// code\r\nconst ANIMATION_DURATION = 250;\r\nconst sortingOptions = [\r\n  {\r\n    label: 'от новых скоров',\r\n    value: SORT.DEFAULT,\r\n  },\r\n  {\r\n    label: 'от новых скоров конкретного игрока',\r\n    value: SORT.NEW_SCORES_PLAYER,\r\n  },\r\n  // {\r\n  //   label: 'отставанию от остальных',\r\n  //   value: SORT.PROTAGONIST,\r\n  // },\r\n  // ...(DEBUG\r\n  //   ? [\r\n  {\r\n    label: 'от худших результатов',\r\n    value: SORT.RANK_ASC,\r\n  },\r\n  {\r\n    label: 'от лучших результатов',\r\n    value: SORT.RANK_DESC,\r\n  },\r\n  //   ]\r\n  // : []),\r\n];\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    players: playersSelector(state),\r\n    resultInfo: state.results.resultInfo,\r\n    results: state.results.results,\r\n    filteredData: filteredDataSelector(state),\r\n    data: state.results.data,\r\n    filter: state.results.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading: state.results.isLoading || state.tracklist.isLoading,\r\n    presets: state.presets.presets,\r\n    currentPreset: state.presets.currentPreset,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setFilter,\r\n  resetFilter,\r\n  selectPreset,\r\n  openPreset,\r\n};\r\n\r\nclass Leaderboard extends Component {\r\n  static propTypes = {\r\n    match: toBe.object,\r\n    resultInfo: toBe.object,\r\n    data: toBe.array,\r\n    error: toBe.object,\r\n    results: toBe.array,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  state = { showItemsCount: 20, chartOverrides: {} };\r\n\r\n  setFilter = _.curry((name, value) => {\r\n    const filter = { ...this.props.filter, [name]: value };\r\n    this.props.setFilter(filter);\r\n    localForage.setItem('filter', filter);\r\n  });\r\n\r\n  resetFilter = () => {\r\n    this.props.resetFilter();\r\n    this.setState({ chartOverrides: {} });\r\n    localForage.setItem('filter', defaultFilter);\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    this.setState({ chartOverrides: {} });\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onTypeSongName = _.debounce(300, value => {\r\n    this.setFilter('song', value);\r\n  });\r\n\r\n  onRedoLatestResult = _.throttle(ANIMATION_DURATION + 10, chart => {\r\n    const overrides = _.drop(1, this.state.chartOverrides[chart.sharedChartId]);\r\n    this.setState(state => ({\r\n      chartOverrides: {\r\n        ...state.chartOverrides,\r\n        [chart.sharedChartId]: _.size(overrides) === 1 ? null : overrides,\r\n      },\r\n    }));\r\n  });\r\n\r\n  onUndoLatestResult = _.throttle(ANIMATION_DURATION + 10, chart => {\r\n    if (_.isEmpty(chart.results)) {\r\n      this.setState(state => ({\r\n        chartOverrides: _.omit(chart.sharedChartId, state.chartOverrides),\r\n      }));\r\n    }\r\n    const undoedResult = _.maxBy('date', chart.results);\r\n    if (!undoedResult) return;\r\n\r\n    const { results } = this.props;\r\n    const undoedPlayerId = undoedResult.playerId;\r\n    const previousPlayerResult = _.findLast(\r\n      res =>\r\n        res.playerId === undoedPlayerId &&\r\n        res.sharedChartId === chart.sharedChartId &&\r\n        res.isRank === undoedResult.isRank &&\r\n        res.date < undoedResult.date,\r\n      results\r\n    );\r\n    const newResults = _.orderBy(\r\n      'score',\r\n      'desc',\r\n      _.compact(_.map(res => (res === undoedResult ? previousPlayerResult : res), chart.results))\r\n    );\r\n    const latestScore = _.maxBy('date', newResults);\r\n    const overrideChart = {\r\n      ...chart,\r\n      latestScoreDate: latestScore && latestScore.date,\r\n      results: newResults,\r\n    };\r\n    if (_.isEmpty(newResults)) {\r\n      this.setState(state => ({\r\n        chartOverrides: {\r\n          ...state.chartOverrides,\r\n          [chart.sharedChartId]: null,\r\n        },\r\n      }));\r\n    } else {\r\n      this.setState(state => ({\r\n        chartOverrides: {\r\n          ...state.chartOverrides,\r\n          [chart.sharedChartId]: [\r\n            overrideChart,\r\n            ...(state.chartOverrides[chart.sharedChartId] || [chart]),\r\n          ],\r\n        },\r\n      }));\r\n    }\r\n  });\r\n\r\n  renderSimpleSearch() {\r\n    const { isLoading, filter } = this.props;\r\n    return (\r\n      <div className=\"simple-search\">\r\n        <div className=\"song-name _margin-right _margin-bottom\">\r\n          <Input\r\n            value={filter.song || ''}\r\n            placeholder=\"название песни...\"\r\n            className=\"form-control\"\r\n            onChange={this.onTypeSongName}\r\n          />\r\n        </div>\r\n        <div className=\"chart-range _margin-right _margin-bottom\">\r\n          <ChartFilter filterValue={filter.chartRange} onChange={this.setFilter('chartRange')} />\r\n        </div>\r\n        <div className=\"_flex-fill\" />\r\n        <div className=\"_flex-row _margin-bottom\">\r\n          <PresetsControl />\r\n          <button className=\"btn btn-sm btn-dark btn-icon _margin-right\" onClick={this.resetFilter}>\r\n            <FaRedoAlt /> сбросить фильтры\r\n          </button>\r\n          <button\r\n            disabled={isLoading}\r\n            className=\"btn btn-sm btn-dark btn-icon\"\r\n            onClick={this.onRefresh}\r\n          >\r\n            <FaSearch /> обновить\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFilters() {\r\n    const { players, filter } = this.props;\r\n    console.log(players);\r\n    return (\r\n      <div className=\"filters\">\r\n        <div className=\"people-filters\">\r\n          <label className=\"label\">показывать чарты, которые сыграл:</label>\r\n          <div className=\"players-block\">\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">каждый из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'players', filter)}\r\n                onChange={this.setFilter('players')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и хоть один из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersOr', filter)}\r\n                onChange={this.setFilter('playersOr')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и никто из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersNot', filter)}\r\n                onChange={this.setFilter('playersNot')}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Toggle\r\n            checked={_.getOr(false, 'showRank', filter)}\r\n            onChange={this.setFilter('showRank')}\r\n          >\r\n            показывать скоры на ранке\r\n          </Toggle>\r\n        </div>\r\n        {_.get('showRank', filter) && (\r\n          <>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showOnlyRank', filter)}\r\n                onChange={value => {\r\n                  this.setFilter('showOnlyRank', value);\r\n                  if (_.get('showRankAndNorank', filter)) {\r\n                    this.setFilter('showRankAndNorank', false);\r\n                  }\r\n                }}\r\n              >\r\n                <strong>только</strong> на ранке\r\n              </Toggle>\r\n            </div>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showRankAndNorank', filter)}\r\n                onChange={value => {\r\n                  this.setFilter('showRankAndNorank', value);\r\n                  if (_.get('showOnlyRank', filter)) {\r\n                    this.setFilter('showOnlyRank', false);\r\n                  }\r\n                }}\r\n              >\r\n                показывать лучшие скоры с ранком и без\r\n              </Toggle>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSortings() {\r\n    const { players, filter } = this.props;\r\n    return (\r\n      <div className=\"sortings\">\r\n        <div>\r\n          <label className=\"label\">сортировка:</label>\r\n          <Select\r\n            placeholder=\"выберите сортировку\"\r\n            className=\"select\"\r\n            classNamePrefix=\"select\"\r\n            isClearable={false}\r\n            options={sortingOptions}\r\n            value={_.getOr(sortingOptions[0], 'sortingType', filter)}\r\n            onChange={this.setFilter('sortingType')}\r\n          />\r\n        </div>\r\n        {[SORT.PROTAGONIST, SORT.RANK_ASC, SORT.RANK_DESC, SORT.NEW_SCORES_PLAYER].includes(\r\n          _.get('sortingType.value', filter)\r\n        ) && (\r\n          <div>\r\n            <label className=\"label\">игрок:</label>\r\n            <Select\r\n              className={classNames('select players', {\r\n                'red-border': !_.get('protagonist', filter),\r\n              })}\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              value={_.getOr(null, 'protagonist', filter)}\r\n              onChange={this.setFilter('protagonist')}\r\n            />\r\n          </div>\r\n        )}\r\n        {[SORT.PROTAGONIST].includes(_.get('sortingType.value', filter)) && (\r\n          <div>\r\n            <label className=\"label\">не учитывать в сравнении:</label>\r\n            <Select\r\n              closeMenuOnSelect={false}\r\n              className=\"select players\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              isMulti\r\n              value={_.getOr([], 'excludeAntagonists', filter)}\r\n              onChange={this.setFilter('excludeAntagonists')}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, filteredData, error, filter, resultInfo } = this.props;\r\n    const { showItemsCount, chartOverrides } = this.state;\r\n    const canShowMore = filteredData.length > showItemsCount;\r\n    const visibleData = _.slice(0, showItemsCount, filteredData);\r\n\r\n    const sortingType = _.get('sortingType.value', filter);\r\n    const highlightProtagonist = [\r\n      SORT.PROTAGONIST,\r\n      SORT.RANK_ASC,\r\n      SORT.RANK_DESC,\r\n      SORT.NEW_SCORES_PLAYER,\r\n    ].includes(sortingType);\r\n    const protagonistName = _.get('protagonist.value', filter);\r\n    const uniqueSelectedNames = _.slice(\r\n      0,\r\n      colorsArray.length,\r\n      _.uniq(\r\n        _.compact([\r\n          highlightProtagonist && protagonistName,\r\n          ..._.map('value', filter.players),\r\n          ..._.map('value', filter.playersOr),\r\n        ])\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div className=\"leaderboard-page\">\r\n        <div className=\"content\">\r\n          <div className=\"search-block\">\r\n            {this.renderSimpleSearch()}\r\n            <CollapsibleBar title=\"фильтры\">{this.renderFilters()}</CollapsibleBar>\r\n            <CollapsibleBar title=\"сортировка\">{this.renderSortings()}</CollapsibleBar>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!!this.props.presets.length && (\r\n            <div className=\"presets-buttons\">\r\n              <span>пресеты:</span>\r\n              {this.props.presets.map(preset => (\r\n                <ToggleButton\r\n                  key={preset.name}\r\n                  text={preset.name}\r\n                  className=\"btn btn-sm btn-dark _margin-right\"\r\n                  active={_.get('filter', preset) === this.props.filter}\r\n                  onToggle={() => {\r\n                    this.props.selectPreset(preset);\r\n                    this.props.openPreset();\r\n                  }}\r\n                ></ToggleButton>\r\n              ))}\r\n            </div>\r\n          )}\r\n          <div className=\"top-list\">\r\n            {_.isEmpty(filteredData) && !isLoading && (error ? error.message : 'ничего не найдено')}\r\n            {!isLoading &&\r\n              visibleData.map((chartOriginal, chartIndex) => {\r\n                const overrides = chartOverrides[chartOriginal.sharedChartId];\r\n                const chart = _.first(overrides) || chartOriginal;\r\n                if (DEBUG) console.log(chart);\r\n                let topPlace = 1;\r\n                const occuredNicknames = [];\r\n                const results = chart.results.map((res, index) => {\r\n                  const isSecondOccurenceInResults = occuredNicknames.includes(res.nickname);\r\n                  occuredNicknames.push(res.nickname);\r\n                  if (index === 0) {\r\n                    topPlace = 1;\r\n                  } else if (\r\n                    !isSecondOccurenceInResults &&\r\n                    res.score !== _.get([index - 1, 'score'], chart.results)\r\n                  ) {\r\n                    topPlace += 1;\r\n                  }\r\n                  return {\r\n                    ...res,\r\n                    topPlace,\r\n                    isSecondOccurenceInResults,\r\n                  };\r\n                });\r\n                return (\r\n                  <div className=\"song-block\" key={chart.song + chart.chartLabel}>\r\n                    <div className=\"song-name\">\r\n                      <div\r\n                        className={classNames('chart-name', {\r\n                          single: chart.chartType === 'S',\r\n                          singlep: chart.chartType === 'SP',\r\n                          doublep: chart.chartType === 'DP',\r\n                          double: chart.chartType === 'D',\r\n                          coop: chart.chartType === 'COOP',\r\n                        })}\r\n                      >\r\n                        <span className=\"chart-letter\">{chart.chartType}</span>\r\n                        <span className=\"chart-number\">{chart.chartLevel}</span>\r\n                      </div>\r\n                      <div>{chart.song}</div>\r\n                      <div className=\"youtube-link\">\r\n                        <a\r\n                          href={`https://youtube.com/results?search_query=${chart.song\r\n                            .replace(/ /g, '+')\r\n                            .replace(/-/g, '')}+${chart.chartLabel}`}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          <FaYoutube />\r\n                        </a>\r\n                      </div>\r\n                      <div className=\"_flex-fill\" />\r\n                      {(() => {\r\n                        const isActive = !_.isEmpty(overrides);\r\n                        const currentIndex = isActive\r\n                          ? 1 + chart.totalResultsCount - _.size(overrides)\r\n                          : chart.totalResultsCount;\r\n                        const canUndo = !(currentIndex === 1 && chart.totalResultsCount === 1);\r\n                        return (\r\n                          <div\r\n                            className={classNames('undo-result-button', {\r\n                              active: isActive,\r\n                            })}\r\n                          >\r\n                            <FaBackward\r\n                              className={classNames('backward-btn', { disabled: !canUndo })}\r\n                              onClick={() => canUndo && this.onUndoLatestResult(chart)}\r\n                            />\r\n                            <span className=\"number\">\r\n                              {currentIndex}/{chart.totalResultsCount}\r\n                            </span>\r\n                            <FaForward\r\n                              className={classNames('forward-btn', { disabled: !isActive })}\r\n                              onClick={() => isActive && this.onRedoLatestResult(chart)}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      })()}\r\n                    </div>\r\n                    <div className=\"charts\">\r\n                      {!_.isEmpty(results) && (\r\n                        <div className=\"chart\">\r\n                          <div className=\"results\">\r\n                            <table>\r\n                              {chartIndex === 0 && (\r\n                                <thead>\r\n                                  <tr>\r\n                                    <th className=\"place\"></th>\r\n                                    <th className=\"nickname\"></th>\r\n                                    <th className=\"judge\"></th>\r\n                                    <th className=\"score\">score</th>\r\n                                    <th className=\"grade\"></th>\r\n                                    <th className=\"number\">miss</th>\r\n                                    <th className=\"number\">bad</th>\r\n                                    <th className=\"number\">good</th>\r\n                                    <th className=\"number\">great</th>\r\n                                    <th className=\"number\">perfect</th>\r\n                                    <th className=\"combo\">combo</th>\r\n                                    <th className=\"accuracy\">accuracy</th>\r\n                                    <th className=\"date\"></th>\r\n                                  </tr>\r\n                                </thead>\r\n                              )}\r\n                              <FlipMove\r\n                                enterAnimation=\"fade\"\r\n                                leaveAnimation=\"fade\"\r\n                                typeName=\"tbody\"\r\n                                maintainContainerHeight\r\n                                duration={ANIMATION_DURATION}\r\n                              >\r\n                                {results.map((res, index) => {\r\n                                  if (res.isUnknownPlayer && index !== 0) {\r\n                                    return null;\r\n                                  }\r\n                                  const nameIndex = uniqueSelectedNames.indexOf(res.nickname);\r\n                                  let placeDifference, newIndex;\r\n                                  if (res.scoreIncrease && res.date === chart.latestScoreDate) {\r\n                                    const prevScore = res.score - res.scoreIncrease;\r\n                                    newIndex = _.findLastIndex(\r\n                                      res => res.score > prevScore,\r\n                                      results\r\n                                    );\r\n                                    placeDifference = newIndex - index;\r\n                                  }\r\n                                  const inf = resultInfo[res.id] || {};\r\n                                  return (\r\n                                    <tr\r\n                                      key={res.isRank + '_' + res.nickname}\r\n                                      className={classNames({\r\n                                        empty: !res.isExactDate,\r\n                                        latest: res.date === chart.latestScoreDate,\r\n                                      })}\r\n                                    >\r\n                                      <td className=\"place\">\r\n                                        {res.isSecondOccurenceInResults ? '' : `#${res.topPlace}`}\r\n                                      </td>\r\n                                      <td\r\n                                        className=\"nickname\"\r\n                                        style={\r\n                                          nameIndex > -1\r\n                                            ? { fontWeight: 'bold', color: colorsArray[nameIndex] }\r\n                                            : {}\r\n                                        }\r\n                                      >\r\n                                        {res.nickname}\r\n                                        {!!placeDifference && (\r\n                                          <span className=\"change-holder up\">\r\n                                            <span>{placeDifference}</span>\r\n                                            <FaAngleDoubleUp />\r\n                                          </span>\r\n                                        )}\r\n                                        {/* {res.pp && DEBUG && (\r\n                                          <span className=\"debug-elo-info\">\r\n                                            {' '}\r\n                                            {res.pp.ppFixed}pp\r\n                                          </span>\r\n                                        )} */}\r\n                                        {inf.pp &&\r\n                                        (sortingType === SORT.RANK_DESC ||\r\n                                          sortingType === SORT.RANK_ASC) &&\r\n                                        res.nickname === protagonistName ? (\r\n                                          <span> ({inf.pp.ppFixed}pp)</span>\r\n                                        ) : (\r\n                                          inf.pp && (\r\n                                            <span className=\"debug-elo-info\">\r\n                                              {' '}\r\n                                              {inf.pp.ppFixed}pp\r\n                                            </span>\r\n                                          )\r\n                                        )}\r\n                                      </td>\r\n                                      <td\r\n                                        className={classNames('judge', {\r\n                                          vj: res.isRank,\r\n                                          hj: res.isHJ,\r\n                                        })}\r\n                                      >\r\n                                        {res.isRank && (\r\n                                          <div className=\"inner\">\r\n                                            {res.isExactDate ? (\r\n                                              'VJ'\r\n                                            ) : (\r\n                                              <Tooltip\r\n                                                content={\r\n                                                  <div>\r\n                                                    наличие ранка на этом результате было угадано,\r\n                                                    основываясь на скоре\r\n                                                  </div>\r\n                                                }\r\n                                                tooltipClassName=\"pumpking-tooltip\"\r\n                                              >\r\n                                                VJ?\r\n                                              </Tooltip>\r\n                                            )}\r\n                                          </div>\r\n                                        )}\r\n                                        {res.isHJ && <div className=\"inner\">HJ</div>}\r\n                                      </td>\r\n                                      <td className=\"score\">\r\n                                        <Overlay\r\n                                          overlayClassName=\"score-overlay-outer\"\r\n                                          overlayItem={\r\n                                            <span className=\"score-span\">\r\n                                              {/* {res.scoreIncrease > res.score * 0.8 && <FaPlus />} */}\r\n                                              {res.scoreIncrease > res.score * 0.8 && '*'}\r\n                                              {numeral(res.score).format('0,0')}\r\n                                            </span>\r\n                                          }\r\n                                          placement=\"top\"\r\n                                        >\r\n                                          <div className=\"score-overlay\">\r\n                                            {DEBUG && (\r\n                                              <>\r\n                                                <div>\r\n                                                  <span className=\"_grey\">result id: </span>\r\n                                                  {res.id}\r\n                                                </div>\r\n                                                <div>\r\n                                                  <span className=\"_grey\">player id: </span>\r\n                                                  {res.playerId}\r\n                                                </div>\r\n                                              </>\r\n                                            )}\r\n                                            <div>\r\n                                              <span className=\"_grey\">игрок: </span>\r\n                                              <NavLink\r\n                                                exact\r\n                                                to={routes.profile.getPath({ id: res.playerId })}\r\n                                              >\r\n                                                {res.nickname} ({res.nicknameArcade})\r\n                                              </NavLink>\r\n                                            </div>\r\n                                            {!!getExp(res, chart) && (\r\n                                              <div className=\"important\">\r\n                                                <span className=\"_grey\">опыт: </span>+\r\n                                                {numeral(getExp(res, chart)).format('0,0')}\r\n                                              </div>\r\n                                            )}\r\n                                            {inf.pp && (\r\n                                              <div className=\"important\">\r\n                                                <span className=\"_grey\">pp: </span>\r\n                                                <span>{inf.pp.ppFixed}pp</span>\r\n                                              </div>\r\n                                            )}\r\n                                            {!res.isExactDate && (\r\n                                              <div className=\"warning\">\r\n                                                <FaExclamationTriangle />\r\n                                                рекорд взят с my best. часть данных недоступна\r\n                                              </div>\r\n                                            )}\r\n                                            {!!res.isExactDate && (\r\n                                              <>\r\n                                                {!!res.mods && (\r\n                                                  <div>\r\n                                                    <span className=\"_grey\">моды: </span>\r\n                                                    {res.mods}\r\n                                                  </div>\r\n                                                )}\r\n                                                {!!res.calories && (\r\n                                                  <div>\r\n                                                    <span className=\"_grey\">ккал: </span>\r\n                                                    {res.calories}\r\n                                                  </div>\r\n                                                )}\r\n                                                {!!res.scoreIncrease && (\r\n                                                  <div>\r\n                                                    <span className=\"_grey\">прирост: </span>+\r\n                                                    {numeral(res.scoreIncrease).format('0,0')}\r\n                                                  </div>\r\n                                                )}\r\n                                                {res.originalChartMix && (\r\n                                                  <div>\r\n                                                    <div className=\"warning\">\r\n                                                      <FaExclamationTriangle />\r\n                                                      было сыграно на {res.originalChartMix}\r\n                                                    </div>\r\n                                                    {res.originalChartLabel && (\r\n                                                      <div>\r\n                                                        <span className=\"_grey\">\r\n                                                          оригинальный чарт:{' '}\r\n                                                        </span>\r\n                                                        {res.originalChartLabel}\r\n                                                      </div>\r\n                                                    )}\r\n                                                    {res.originalScore && (\r\n                                                      <div>\r\n                                                        <span className=\"_grey\">\r\n                                                          оригинальный скор:{' '}\r\n                                                        </span>\r\n                                                        {res.originalScore}\r\n                                                      </div>\r\n                                                    )}\r\n                                                  </div>\r\n                                                )}\r\n                                                {res.scoreIncrease > res.score * 0.8 && '* сайтрид'}\r\n                                              </>\r\n                                            )}\r\n                                          </div>\r\n                                        </Overlay>\r\n                                      </td>\r\n                                      <td className=\"grade\">\r\n                                        <div className=\"img-holder\">\r\n                                          {res.grade && res.grade !== '?' && (\r\n                                            <img\r\n                                              src={`${process.env.PUBLIC_URL}/grades/${res.grade}.png`}\r\n                                              alt={res.grade}\r\n                                            />\r\n                                          )}\r\n                                          {res.grade === '?' && null}\r\n                                        </div>\r\n                                      </td>\r\n                                      <td className=\"number miss\">{res.miss}</td>\r\n                                      <td className=\"number bad\">{res.bad}</td>\r\n                                      <td className=\"number good\">{res.good}</td>\r\n                                      <td className=\"number great\">{res.great}</td>\r\n                                      <td className=\"number perfect\">{res.perfect}</td>\r\n                                      <td className=\"combo\">\r\n                                        {res.combo}\r\n                                        {res.combo ? 'x' : ''}\r\n                                      </td>\r\n                                      <td className=\"accuracy\">\r\n                                        {res.accuracy}\r\n                                        {res.accuracy ? '%' : ''}\r\n                                      </td>\r\n                                      <td\r\n                                        className={classNames('date', {\r\n                                          latest: res.date === chart.latestScoreDate,\r\n                                        })}\r\n                                      >\r\n                                        <Tooltip\r\n                                          content={tooltipFormatter(res)}\r\n                                          tooltipClassName=\"pumpking-tooltip\"\r\n                                        >\r\n                                          {getTimeAgo(res.dateObject)}\r\n                                          {res.isExactDate ? '' : '?'}\r\n                                        </Tooltip>\r\n                                      </td>\r\n                                    </tr>\r\n                                  );\r\n                                })}\r\n                              </FlipMove>\r\n                            </table>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            {!isLoading && canShowMore && (\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() =>\r\n                  this.setState(state => ({ showItemsCount: state.showItemsCount + 10 }))\r\n                }\r\n              >\r\n                show more...\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Leaderboard);\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n// import numeral from 'numeral';\r\nimport classNames from 'classnames';\r\nimport { GiQueenCrown } from 'react-icons/gi';\r\nimport { FaAngleDoubleUp, FaAngleDoubleDown } from 'react-icons/fa';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nimport { getRankImg } from 'utils/exp';\r\n\r\nconst getGradeImg = grade => (\r\n  <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n);\r\n\r\nexport default function RankingList({ ranking, isLoading }) {\r\n  return (\r\n    <div className=\"ranking-list\">\r\n      {_.isEmpty(ranking) && !isLoading && 'ничего не найдено'}\r\n      {isLoading && <Loader />}\r\n      {!isLoading && (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"place\"></th>\r\n              <th className=\"change\"></th>\r\n              <th className=\"exp-rank\">rank</th>\r\n              <th className=\"name\">name</th>\r\n              <th className=\"name2\">piu name</th>\r\n              <th className=\"rating\">pp</th>\r\n              <th className=\"rating-change-cell\"></th>\r\n              {/* <th className=\"total-score\">total score</th> */}\r\n              <th className=\"grades sss\">{getGradeImg('SSS')}</th>\r\n              <th className=\"grades ss\">{getGradeImg('SS')}</th>\r\n              <th className=\"grades s\">{getGradeImg('S')}</th>\r\n              <th className=\"grades a\">{getGradeImg('A+')}</th>\r\n              <th className=\"grades b\">{getGradeImg('B')}</th>\r\n              <th className=\"grades c\">{getGradeImg('C')}</th>\r\n              <th className=\"grades d\">{getGradeImg('D')}</th>\r\n              <th className=\"grades f\">{getGradeImg('F')}</th>\r\n              <th className=\"playcount\">scores</th>\r\n              {/* <th className=\"calories\">kcal</th> */}\r\n              <th className=\"accuracy\">accuracy</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {ranking.map((player, playerIndex) => {\r\n              return (\r\n                <tr className=\"player\" key={player.name}>\r\n                  <td className=\"place\">\r\n                    {playerIndex === 0 ? <GiQueenCrown /> : `#${playerIndex + 1}`}\r\n                  </td>\r\n                  <td className=\"change\">\r\n                    {player.change > 0 && (\r\n                      <div className=\"change-holder up\">\r\n                        <span>{player.change}</span>\r\n                        <FaAngleDoubleUp />\r\n                      </div>\r\n                    )}\r\n                    {player.change < 0 && (\r\n                      <div className=\"change-holder down\">\r\n                        <span>{-player.change}</span>\r\n                        <FaAngleDoubleDown />\r\n                      </div>\r\n                    )}\r\n                    {!!player.change && _.isString(player.change) && (\r\n                      <div className=\"change-holder text\">\r\n                        <span>{player.change}</span>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"exp-rank\">{getRankImg(player.expRank)}</td>\r\n                  <td className=\"name\">\r\n                    <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                      {player.name}\r\n                    </NavLink>\r\n                  </td>\r\n                  <td className=\"name\">\r\n                    <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                      {player.nameArcade}\r\n                    </NavLink>\r\n                  </td>\r\n                  <td className=\"rating\">{Math.round(player.pp.pp)}</td>\r\n                  <td className=\"rating-change-cell\">\r\n                    {!!player.prevRating && player.prevRating !== player.rating && (\r\n                      <span\r\n                        className={classNames('rating-change', {\r\n                          down: player.prevRating > player.rating,\r\n                          up: player.prevRating < player.rating,\r\n                        })}\r\n                      >\r\n                        {player.prevRating < player.rating ? '+' : ''}\r\n                        {player.rating - player.prevRating}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"grades sss\">{player.grades.SSS}</td>\r\n                  <td className=\"grades ss\">{player.grades.SS}</td>\r\n                  <td className=\"grades s\">{player.grades.S}</td>\r\n                  <td className=\"grades a\">{player.grades.A}</td>\r\n                  <td className=\"grades b\">{player.grades.B}</td>\r\n                  <td className=\"grades c\">{player.grades.C}</td>\r\n                  <td className=\"grades d\">{player.grades.D}</td>\r\n                  <td className=\"grades f\">{player.grades.F}</td>\r\n                  <td className=\"playcount\">{player.count}</td>\r\n                  <td className=\"accuracy\">\r\n                    {player.accuracy ? `${player.accuracy.toFixed(2)}%` : ''}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function RankingFaq() {\r\n  return (\r\n    <div className=\"faq\">\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Как считается рейтинг?</div>\r\n        <div className=\"answer\">\r\n          A: Используется <a href=\"https://en.wikipedia.org/wiki/Elo_rating_system\">рейтинг Эло</a>,\r\n          широко используемый в шахматах и других играх, слегка модицированный под условия игры на\r\n          пампе. Средний рейтинг - 1000. Коэффициент К зависит от уровня чарта (более сложные чарты\r\n          сильнее влияют на рейтинг). Количество очков влияет на заработанный рейтинг (маленький\r\n          отрыв от противника не даст так много очков как большой отрыв).\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Система Эло используется для игр 1 на 1, как она используется на пампе, где на одном\r\n          чарте играет много игроков?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: Рекорды на одном чарте делятся на несколько игр 1 на 1. Если есть 3 игрока: A, B, C; то\r\n          считается, что было 3 отдельные игры: A vs B, A vs C, B vs C.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Учитываются ли рекорды на ранке в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: Да. Как минимум потому что у нас есть много рекордов, взятых с машин бестов, и мы не\r\n          знаем наверняка, на ранке они или нет. Если у игрока в топе есть два скора - на ранке и\r\n          без ранка, используется тот, где больше очков.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Почему меня нет в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: В таблицу попадают только те, у кого есть хотя бы 20 игр 1 на 1. Первые 20 игр\r\n          используются для определения изначального рейтинга.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Почему суммарное количество оценок S-A-B не совпадает с общим количеством скоров?\r\n        </div>\r\n        <div className=\"answer\">A: Не для каждого результата известна оценка.</div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Если у меня есть несколько рекордов на А, несколько на А+, как считается суммарное\r\n          количество грейдов в таблице?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: В каждой колонке учитываются обе буквы - и треснутые, и с удержанным лайфом. То есть и\r\n          А, и А+ идут в колонку А. Точно так же для B, C, D.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Убери аккураси из таблицы!</div>\r\n        <div className=\"answer\">A: Грем, это секция для вопросов.</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle } from 'react-icons/fa';\r\nimport { Link, Route, withRouter } from 'react-router-dom';\r\nimport { createSelector } from 'reselect';\r\nimport _ from 'lodash/fp';\r\n\r\n// styles\r\nimport './ranking.scss';\r\n\r\n// components\r\nimport RankingList from './RankingList';\r\nimport RankingFaq from './RankingFaq';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\n\r\n// utils\r\n\r\n// code\r\nconst rankingSelector = createSelector(\r\n  state => state.results.profiles,\r\n  _.flow(\r\n    _.values,\r\n    _.remove(profile => !profile.pp),\r\n    _.orderBy(['pp.pp'], ['desc'])\r\n  )\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ranking: rankingSelector(state),\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading:\r\n      state.results.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n};\r\n\r\nclass Ranking extends Component {\r\n  static propTypes = {\r\n    ranking: toBe.array,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    ranking: [],\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, ranking, error } = this.props;\r\n\r\n    return (\r\n      <div className=\"ranking-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.path}\r\n              render={() => (\r\n                <>\r\n                  <Link to={routes.ranking.faq.path}>\r\n                    <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n                      <FaQuestionCircle /> faq\r\n                    </button>\r\n                  </Link>\r\n                  <button\r\n                    disabled={isLoading}\r\n                    className=\"btn btn-sm btn-dark btn-icon\"\r\n                    onClick={this.onRefresh}\r\n                  >\r\n                    <FaSearch /> обновить\r\n                  </button>\r\n                </>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.faq.path}\r\n              render={() => (\r\n                <Link to={routes.ranking.path}>\r\n                  <button className=\"btn btn-sm btn-dark btn-icon\">назад</button>\r\n                </Link>\r\n              )}\r\n            />\r\n          </div>\r\n          <Route\r\n            exact\r\n            path={routes.ranking.path}\r\n            render={() => <RankingList ranking={ranking} isLoading={isLoading} />}\r\n          />\r\n          <Route exact path={routes.ranking.faq.path} component={RankingFaq} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Ranking));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\nimport { FaPlay } from 'react-icons/fa';\r\nimport { MdExpandMore } from 'react-icons/md';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { parseDate } from 'utils/date';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport './most-played.scss';\r\n\r\nexport default connect(\r\n  state => ({ charts: state.results.sharedCharts }),\r\n  { fetchJson }\r\n)(({ playerId, charts, fetchJson }) => {\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [limit, setLimit] = useState(10);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchJson({\r\n      url: `${HOST}/player/${playerId}/mostPlayed?limit=${limit}`,\r\n    })\r\n      .then(result => {\r\n        setLoading(false);\r\n        if (result.success) {\r\n          setData(result.data);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [playerId, limit, fetchJson]);\r\n\r\n  return (\r\n    <div className=\"most-played\">\r\n      {isLoading && <Loader />}\r\n      {data.map(item => {\r\n        const chart = charts[item.shared_chart];\r\n        return (\r\n          <div className=\"chart\" key={item.shared_chart}>\r\n            <div\r\n              className={classNames('chart-name', {\r\n                single: chart.chartType === 'S',\r\n                singlep: chart.chartType === 'SP',\r\n                doublep: chart.chartType === 'DP',\r\n                double: chart.chartType === 'D',\r\n                coop: chart.chartType === 'COOP',\r\n              })}\r\n            >\r\n              <span className=\"chart-letter\">{chart.chartType}</span>\r\n              <span className=\"chart-number\">{chart.chartLevel}</span>\r\n            </div>\r\n            <div className=\"song-name\">{chart.song}</div>\r\n            <div className=\"date\">\r\n              {item.latestDate ? getTimeAgo(parseDate(item.latestDate)) : null}\r\n            </div>\r\n            <div className=\"playcount\">\r\n              <FaPlay />\r\n              <span>{item.count}</span>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      {limit === _.size(data) && (\r\n        <button\r\n          className=\"show-more btn btn-sm btn-dark btn-icon\"\r\n          onClick={() => setLimit(limit + 10)}\r\n        >\r\n          <MdExpandMore /> больше\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\n\r\nimport { ranks, getRankImg } from 'utils/exp';\r\n\r\nexport default function ExpFaq() {\r\n  return (\r\n    <div className=\"faq-exp\">\r\n      <div className=\"faq-header\">\r\n        <strong>Опыт</strong> игрока основывается на количестве сыгранных песен и чартов.\r\n        <br />\r\n        Чем выше уровень чарта и чем лучше оценка на чарте, тем больше опыта он даёт.\r\n        <br />\r\n        Повторные попытки на тех же чартах не дают больше опыта. Чтобы поднимать свой уровень, играй\r\n        новые треки и чарты.\r\n      </div>\r\n      <div className=\"faq-header\">Список уровней и необходимый опыт для их получения:</div>\r\n      <div className=\"ranks-list\">\r\n        {ranks.map(rank => (\r\n          <div key={rank.threshold} className=\"rank\">\r\n            <div className=\"exp-rank\">{getRankImg(rank)}</div>\r\n            <div className=\"threshold\">{rank.threshold}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const SET_FILTER = `PROFILES/SET_FILTER`;\r\nconst RESET_FILTER = `PROFILES/RESET_FILTER`;\r\n\r\nexport const defaultFilter = {};\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  filter: defaultFilter,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setProfilesFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\n\r\nexport const resetProfilesFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n","import _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\n\r\nconst defaultGradesDistribution = {\r\n  SSS: 0,\r\n  SS: 0,\r\n  S: 0,\r\n  'A+': 0,\r\n  A: 0,\r\n  B: 0,\r\n  C: 0,\r\n  D: 0,\r\n  F: 0,\r\n};\r\nconst defaultGradesWithLevelsDistribution = _.flow(\r\n  _.flatMap(type => {\r\n    return _.flow(\r\n      _.toPairs,\r\n      _.map(([grade, value]) => [`${type}-${grade}`, value])\r\n    )(defaultGradesDistribution);\r\n  }),\r\n  _.fromPairs\r\n)(['S', 'D']);\r\n\r\nexport const profileSelectorCreator = idParamName =>\r\n  createSelector(\r\n    (state, props) => _.toInteger(props.match.params[idParamName]),\r\n    state => state.results.isLoading || state.results.isLoadingRanking,\r\n    state => state.results.profiles,\r\n    state => state.profiles.filter,\r\n    state => state.tracklist.data,\r\n    (id, isLoading, profiles, filter, tracklist) => {\r\n      const profile = profiles[id];\r\n      if (_.isEmpty(profile) || isLoading) {\r\n        return null;\r\n      }\r\n      const levelsDistribution = _.flow(\r\n        _.get('resultsByLevel'),\r\n        _.toPairs,\r\n        _.map(([x, y]) => ({\r\n          x: _.toInteger(x),\r\n          S:\r\n            (_.size(\r\n              _.filter(res => res.chart.chartType === 'S' || res.chart.chartType === 'SP', y)\r\n            ) /\r\n              tracklist.singlesLevels[x]) *\r\n            100,\r\n          D:\r\n            (-_.size(\r\n              _.filter(res => res.chart.chartType === 'D' || res.chart.chartType === 'DP', y)\r\n            ) /\r\n              tracklist.doublesLevels[x]) *\r\n            100,\r\n        }))\r\n      )(profile);\r\n      const gradesData = _.flow(\r\n        _.get('resultsByLevel'),\r\n        _.toPairs,\r\n        _.map(\r\n          _.update('[1].result.grade', grade =>\r\n            grade && grade.includes('+') && grade !== 'A+' ? grade.replace('+', '') : grade\r\n          )\r\n        )\r\n      )(profile);\r\n      const gradesDistribution = _.flow(\r\n        _.map(([x, y]) => ({\r\n          x: _.toInteger(x),\r\n          ...defaultGradesDistribution,\r\n          ..._.omit('?', _.mapValues(_.size, _.groupBy('result.grade', y))),\r\n        })),\r\n        _.map(item => {\r\n          const grades = _.pick(Object.keys(defaultGradesDistribution), item);\r\n          const sum = _.sum(_.values(grades));\r\n          return {\r\n            ...item,\r\n            gradesValues: grades,\r\n            ...(sum === 0 ? grades : _.mapValues(value => (100 * value) / sum, grades)),\r\n          };\r\n        })\r\n      )(gradesData);\r\n      const gradesAndLevelsDistribution = _.flow(\r\n        _.map(([x, y]) => {\r\n          const groupedResults = _.groupBy('result.grade', y);\r\n          const counts = _.omit(\r\n            '?',\r\n            _.mapValues(\r\n              _.countBy(res => {\r\n                return res.chart.chartType === 'S' || res.chart.chartType === 'SP'\r\n                  ? 'S'\r\n                  : res.chart.chartType === 'D' || res.chart.chartType === 'DP'\r\n                  ? 'D'\r\n                  : 'Other';\r\n              }),\r\n              groupedResults\r\n            )\r\n          );\r\n          const reduced = _.reduce(\r\n            (acc, [grade, levelsData]) => {\r\n              const accData = _.flow(\r\n                _.toPairs,\r\n                _.map(([type, count]) => [\r\n                  `${type}-${grade}`,\r\n                  type === 'S'\r\n                    ? (count / tracklist.singlesLevels[x]) * 100\r\n                    : (-count / tracklist.doublesLevels[x]) * 100,\r\n                ]),\r\n                _.fromPairs\r\n              )(levelsData);\r\n              return { ...acc, ...accData };\r\n            },\r\n            {},\r\n            _.toPairs(counts)\r\n          );\r\n\r\n          return {\r\n            x: _.toInteger(x),\r\n            ...defaultGradesWithLevelsDistribution,\r\n            ...reduced,\r\n          };\r\n        })\r\n      )(gradesData);\r\n      const rank = 1 + _.findIndex({ id }, _.orderBy(['ratingRaw'], ['desc'], _.values(profiles)));\r\n\r\n      return {\r\n        ...profile,\r\n        rank,\r\n        levelsDistribution,\r\n        gradesDistribution,\r\n        gradesAndLevelsDistribution,\r\n      };\r\n    }\r\n  );\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle, FaTimes } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport ReactModal from 'react-modal';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport Select from 'react-select';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as RechartsTooltip,\r\n  ReferenceLine,\r\n  CartesianGrid,\r\n  Line,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Label,\r\n} from 'recharts';\r\nimport _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\n\r\n// styles\r\nimport './profile.scss';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\nimport { DEBUG } from 'constants/env';\r\n\r\n// components\r\nimport Loader from 'components/Shared/Loader';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport MostPlayed from './MostPlayed';\r\nimport ExpFaq from './ExpFaq';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\nimport { setProfilesFilter, resetProfilesFilter } from 'reducers/profiles';\r\n\r\n// utils\r\nimport { profileSelectorCreator } from 'utils/profiles';\r\nimport { parseDate } from 'utils/date';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { achievements } from 'utils/achievements';\r\nimport { getRankImg } from 'utils/exp';\r\n\r\n// code\r\nconst MIN_GRAPH_HEIGHT = undefined;\r\n\r\nconst profileSelector = profileSelectorCreator('id');\r\n\r\nexport const otherPlayersSelector = createSelector(\r\n  state => state.results.players,\r\n  (state, props) => _.toNumber(props.match.params.id),\r\n  (players, id) =>\r\n    _.flow(\r\n      _.toPairs,\r\n      _.map(([ind, { nickname, arcade_name, id }]) => ({\r\n        label: `${nickname} (${arcade_name})`,\r\n        value: nickname,\r\n        id: _.toNumber(id),\r\n      })),\r\n      _.remove(it => it.id === id),\r\n      _.sortBy(it => _.toLower(it.label))\r\n    )(players)\r\n);\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    profile: profileSelector(state, props),\r\n    otherPlayers: otherPlayersSelector(state, props),\r\n    tracklist: state.tracklist.data,\r\n    filter: state.profiles.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading:\r\n      state.results.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setProfilesFilter,\r\n  resetProfilesFilter,\r\n};\r\n\r\nclass Profile extends Component {\r\n  static propTypes = {\r\n    profile: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    profile: {},\r\n  };\r\n\r\n  state = {\r\n    isLevelGraphCombined: true,\r\n    showFaq: false,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetProfilesFilter();\r\n  }\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onChangeDayRange = range => {\r\n    const { filter } = this.props;\r\n    this.props.setProfilesFilter({\r\n      ...filter,\r\n      dayRange: range,\r\n    });\r\n  };\r\n\r\n  onShowFaq = () => {\r\n    this.setState({ showFaq: true });\r\n  };\r\n\r\n  onHideFaq = () => {\r\n    this.setState({ showFaq: false });\r\n  };\r\n\r\n  renderRankingHistory() {\r\n    // const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart\r\n          data={/*profile.ratingChanges*/ []}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={value => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={['dataMin - 100', 'dataMax + 100']}\r\n            tickFormatter={Math.round}\r\n            width={40}\r\n          />\r\n          <ReferenceLine y={1000} stroke=\"white\" />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Rating: {Math.round(payload[0].value)}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderPlaceHistory() {\r\n    // const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart\r\n          data={/*profile.placesChanges*/ []}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={value => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={[1, dataMax => (dataMax < 3 ? dataMax + 2 : dataMax + 1)]}\r\n            interval={0}\r\n            reversed\r\n            width={40}\r\n          />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Place: #{payload[0].value}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGrades() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <BarChart\r\n          data={profile.gradesDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {_.filter(item => item.value > 0, payload).map(item => (\r\n                    <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                      {item.name}: {payload[0].payload.gradesValues[item.name]}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            domain={[0, 100]}\r\n            ticks={[0, 50, 100]}\r\n            tickFormatter={x => `${Math.round(x)}%`}\r\n            width={40}\r\n          />\r\n          <Legend />\r\n          <Bar dataKey=\"SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"F\" fill=\"#774949\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradesWithLevels() {\r\n    const { profile, tracklist } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={0.74}>\r\n        <BarChart\r\n          data={profile.gradesAndLevelsDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n          stackOffset=\"sign\"\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              const doubleItems = _.filter(\r\n                item => item.value !== 0 && item.dataKey.startsWith('D'),\r\n                payload\r\n              );\r\n              const singleItems = _.filter(\r\n                item => item.value !== 0 && item.dataKey.startsWith('S'),\r\n                payload\r\n              );\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {!!singleItems.length && (\r\n                    <>\r\n                      <div>Single:</div>\r\n                      {singleItems.map(item => (\r\n                        <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                          {item.name.slice(2)}: {Math.round(Math.abs(item.value))}% (\r\n                          {Math.round((tracklist.singlesLevels[item.payload.x] * item.value) / 100)}\r\n                          /{tracklist.singlesLevels[item.payload.x]})\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                  {!!doubleItems.length && (\r\n                    <>\r\n                      <div>Double:</div>\r\n                      {doubleItems.map(item => (\r\n                        <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                          {item.name.slice(2)}: {Math.round(Math.abs(item.value))}% (\r\n                          {Math.round(\r\n                            (tracklist.doublesLevels[item.payload.x] * -item.value) / 100\r\n                          )}\r\n                          /{tracklist.doublesLevels[item.payload.x]})\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            tickFormatter={x => `${Math.round(Math.abs(x))}%`}\r\n            width={40}\r\n            domain={[dataMin => Math.min(dataMin, -10), dataMax => Math.max(10, dataMax)]}\r\n          />\r\n          <Bar dataKey=\"S-SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Label value=\"Double\" offset={0} position=\"insideBottomLeft\" />\r\n          <Label value=\"Single\" offset={0} position=\"insideTopLeft\" />\r\n          <ReferenceLine y={0} stroke=\"#bbb\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderLevels() {\r\n    const { profile, tracklist } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <BarChart\r\n          data={profile.levelsDistribution}\r\n          stackOffset=\"sign\"\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              const totalD = tracklist.doublesLevels[payload[0].payload.x];\r\n              const totalS = tracklist.singlesLevels[payload[0].payload.x];\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {totalS > 0 && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n                      Single: {Math.abs(payload[1].value).toFixed(1)}% (\r\n                      {Math.round((payload[1].value * totalS) / 100)}/{totalS})\r\n                    </div>\r\n                  )}\r\n                  {totalD > 0 && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n                      Double: {Math.abs(payload[0].value).toFixed(1)}% (\r\n                      {Math.round((Math.abs(payload[0].value) * totalD) / 100)}/{totalD})\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            tickFormatter={x => Math.round(Math.abs(x)) + '%'}\r\n            width={40}\r\n            domain={[dataMin => Math.min(dataMin, -10), dataMax => Math.max(10, dataMax)]}\r\n          />\r\n          <RechartsTooltip />\r\n          <ReferenceLine y={0} stroke=\"#555\" />\r\n          <Legend />\r\n          <Bar dataKey=\"D\" fill=\"#169c16\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#af2928\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradeBlock(type, grade) {\r\n    const { profile } = this.props;\r\n    const obj = profile.progress[type];\r\n    const typeLetter = type === 'double' ? 'D' : 'S';\r\n    const progr = Math.floor((obj[`${grade}-bonus-level-coef`] || 0) * 100);\r\n    const minNumber = obj[`${grade}-bonus-level-min-number`];\r\n    const currentNumber = obj[`${grade}-bonus-level-achieved-number`];\r\n    const levelString = obj[`${grade}-bonus-level`]\r\n      ? `${typeLetter}${obj[`${grade}-bonus-level`]}`\r\n      : '?';\r\n    return (\r\n      <div className=\"grade-block\">\r\n        <div className=\"grade-letter\">\r\n          <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n        </div>\r\n        <div className=\"grade-level\">{levelString}</div>\r\n        <div className=\"grade-progress\">\r\n          {progr}% ({progr === 100 ? minNumber : currentNumber}/{minNumber})\r\n        </div>\r\n        <div\r\n          className={classNames('progress-background', {\r\n            complete: progr === 100,\r\n            zero: progr === 0,\r\n          })}\r\n          style={{\r\n            height: `${progr}%`,\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderAchievement(achName, achievement) {\r\n    const Icon = achievements[achName].icon;\r\n    const description = achievements[achName].description;\r\n    return (\r\n      <Tooltip\r\n        key={achName}\r\n        content={<div>{description}</div>}\r\n        tooltipClassName=\"pumpking-tooltip achievement-tooltip\"\r\n      >\r\n        <div className=\"ach-block\">\r\n          {Icon && (\r\n            <div className=\"ach-icon\">\r\n              <Icon />\r\n            </div>\r\n          )}\r\n          <div className=\"ach-name\">{achName}</div>\r\n          <div\r\n            className={classNames('progress-background', {\r\n              complete: achievement.progress === 100,\r\n              zero: achievement.progress === 0,\r\n            })}\r\n            style={{\r\n              height: `${Math.round(achievement.progress)}%`,\r\n            }}\r\n          />\r\n        </div>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  renderProfile() {\r\n    const { profile, otherPlayers } = this.props;\r\n    const { isLevelGraphCombined } = this.state;\r\n    const expProgress = profile.expRankNext\r\n      ? (profile.exp - profile.expRank.threshold) /\r\n        (profile.expRankNext.threshold - profile.expRank.threshold)\r\n      : 100;\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"profile-header\">\r\n          <div className=\"profile-name text-with-header\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">pp</div>\r\n            <div>{profile.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile.lastResultDate ? getTimeAgo(profile.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n          <div className=\"_flex-fill\"></div>\r\n          <div className=\"text-with-header -select\">\r\n            <div className=\"text-header\">сравнить с</div>\r\n            <div>\r\n              <Select\r\n                closeMenuOnSelect\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                options={otherPlayers}\r\n                onChange={value => {\r\n                  this.props.history.push(\r\n                    routes.profile.compare.getPath({ id: profile.id, compareToId: value.id })\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header _flex-row _align-center\">\r\n            <span>опыт</span>\r\n            <div className=\"_flex-fill\" />\r\n            <div onClick={this.onShowFaq} className=\"_clickable\">\r\n              <FaQuestionCircle onClick={this.onShowFaq} />\r\n            </div>\r\n            <ReactModal\r\n              ariaHideApp={false}\r\n              className=\"Modal faq-modal\"\r\n              overlayClassName=\"Overlay\"\r\n              isOpen={this.state.showFaq}\r\n              onRequestClose={this.onHideFaq}\r\n            >\r\n              <div className=\"close-btn\" onClick={this.onHideFaq}>\r\n                <FaTimes />\r\n              </div>{' '}\r\n              <ExpFaq />\r\n            </ReactModal>\r\n          </div>\r\n          <div className=\"exp-range\">\r\n            <div className=\"rank exp-rank\">\r\n              {getRankImg(profile.expRank)}\r\n              {profile.expRank && <div>{profile.expRank.threshold}</div>}\r\n            </div>\r\n            <div className=\"exp-line-with-label\">\r\n              <div className=\"exp-label\">\r\n                {profile.expRankNext ? (\r\n                  <>\r\n                    <span className=\"taken-num\">\r\n                      {Math.round(profile.exp - profile.expRank.threshold)}\r\n                    </span>\r\n                    {` / ${profile.expRankNext.threshold - profile.expRank.threshold}`}\r\n                  </>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"exp-line\">\r\n                <div className=\"taken\" style={{ width: Math.floor(100 * expProgress) + '%' }}></div>\r\n                <div\r\n                  className=\"rest\"\r\n                  style={{ width: 100 - Math.ceil(100 * expProgress) + '%' }}\r\n                ></div>\r\n              </div>\r\n              <div className=\"exp-label\">\r\n                total: <span className=\"taken-num\">{Math.round(profile.exp)}</span>\r\n              </div>\r\n            </div>\r\n            {profile.expRankNext && (\r\n              <div className=\"rank exp-rank\">\r\n                {getRankImg(profile.expRankNext)}\r\n                {profile.expRankNext && <div>{profile.expRankNext.threshold}</div>}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              {!isLevelGraphCombined ? (\r\n                <>\r\n                  <div className=\"profile-section-2\">\r\n                    <div className=\"profile-sm-section-header flex\">\r\n                      <span>уровни</span>\r\n                      <div className=\"toggle-holder\">\r\n                        <Toggle\r\n                          className=\"combine-toggle\"\r\n                          checked={isLevelGraphCombined}\r\n                          onChange={() =>\r\n                            this.setState(state => ({\r\n                              isLevelGraphCombined: !state.isLevelGraphCombined,\r\n                            }))\r\n                          }\r\n                        >\r\n                          объединить графики\r\n                        </Toggle>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"chart-container\">{this.renderLevels()}</div>\r\n                  </div>\r\n                  <div className=\"profile-section-2\">\r\n                    <div className=\"profile-sm-section-header\">\r\n                      <span>оценки</span>\r\n                    </div>\r\n                    <div className=\"chart-container\">{this.renderGrades()}</div>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div className=\"profile-section-2\">\r\n                  <div className=\"profile-sm-section-header flex\">\r\n                    <span>оценки</span>\r\n                    <div className=\"toggle-holder\">\r\n                      <Toggle\r\n                        className=\"combine-toggle\"\r\n                        checked={isLevelGraphCombined}\r\n                        onChange={() =>\r\n                          this.setState(state => ({\r\n                            isLevelGraphCombined: !state.isLevelGraphCombined,\r\n                          }))\r\n                        }\r\n                      >\r\n                        объединить графики\r\n                      </Toggle>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"chart-container single-double-labels\">\r\n                    {this.renderGradesWithLevels()}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>эло (временно отключено)</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>место в топе (временно отключено)</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section progress-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>достижения по уровням</span>\r\n          </div>\r\n          <div className=\"progress-blocks-single-double\">\r\n            <div className=\"progress-block\">\r\n              <div className=\"achievements-grades single\">\r\n                {this.renderGradeBlock('single', 'A')}\r\n                {this.renderGradeBlock('single', 'A+')}\r\n                {this.renderGradeBlock('single', 'S')}\r\n                {this.renderGradeBlock('single', 'SS')}\r\n              </div>\r\n            </div>\r\n            <div className=\"progress-block\">\r\n              <div className=\"achievements-grades double\">\r\n                {this.renderGradeBlock('double', 'A')}\r\n                {this.renderGradeBlock('double', 'A+')}\r\n                {this.renderGradeBlock('double', 'S')}\r\n                {this.renderGradeBlock('double', 'SS')}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"bonus-faq\">\r\n            * для получения ачивки нужно сыграть около 10% всех чартов данного левела на нужный\r\n            грейд\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>достижения</span>\r\n          </div>\r\n          <div className=\"achievements\">\r\n            {_.keys(profile.achievements).map(achName =>\r\n              this.renderAchievement(achName, profile.achievements[achName])\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>часто играемые чарты</span>\r\n          </div>\r\n          <MostPlayed playerId={profile.id} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, profile, error } = this.props;\r\n    DEBUG && console.log('profile:', profile);\r\n    return (\r\n      <div className=\"profile-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"btn btn-sm btn-dark btn-icon\"\r\n              onClick={this.onRefresh}\r\n            >\r\n              <FaSearch /> обновить\r\n            </button>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!isLoading && _.isEmpty(profile) && <div className=\"profile\">Profile not found</div>}\r\n          {!isLoading && !_.isEmpty(profile) && this.renderProfile()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Profile));\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as RechartsTooltip,\r\n  ReferenceLine,\r\n  CartesianGrid,\r\n  Line,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\nimport _ from 'lodash/fp';\r\nimport memoize from 'lru-memoize';\r\n\r\n// styles\r\nimport './profile-compare.scss';\r\n\r\n// constants\r\nimport { DEBUG } from 'constants/env';\r\n\r\n// components\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport Loader from 'components/Shared/Loader';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\nimport { setProfilesFilter, resetProfilesFilter } from 'reducers/profiles';\r\n\r\n// utils\r\nimport { profileSelectorCreator } from 'utils/profiles';\r\nimport { parseDate } from 'utils/date';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\n\r\n// code\r\nconst BARS_MODES = {\r\n  SINGLE_TWO: 'SINGLE_TWO',\r\n  SINGLE_FIVE: 'SINGLE_FIVE',\r\n  DOUBLE_TWO: 'DOUBLE_TWO',\r\n  DOUBLE_FIVE: 'DOUBLE_FIVE',\r\n  BOTH_TWO: 'BOTH_TWO',\r\n  BOTH_FIVE: 'BOTH_FIVE',\r\n};\r\nconst getCompareBars = mode => {\r\n  switch (mode) {\r\n    case BARS_MODES.SINGLE_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"single.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"single.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.SINGLE_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"single.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar\r\n          key=\"2\"\r\n          dataKey=\"single.p2notPlayed\"\r\n          fill=\"#899db3\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"3\"\r\n          dataKey=\"single.notPlayed\"\r\n          fill=\"#70707060\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"4\"\r\n          dataKey=\"single.p1notPlayed\"\r\n          fill=\"#bfa988\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar key=\"5\" dataKey=\"single.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    case BARS_MODES.DOUBLE_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"double.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"double.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.DOUBLE_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"double.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar\r\n          key=\"2\"\r\n          dataKey=\"double.p2notPlayed\"\r\n          fill=\"#899db3\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"3\"\r\n          dataKey=\"double.notPlayed\"\r\n          fill=\"#70707060\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"4\"\r\n          dataKey=\"double.p1notPlayed\"\r\n          fill=\"#bfa988\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar key=\"5\" dataKey=\"double.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    case BARS_MODES.BOTH_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"all.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"all.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.BOTH_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"all.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"2\" dataKey=\"all.p2notPlayed\" fill=\"#899db3\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"3\" dataKey=\"all.notPlayed\" fill=\"#70707060\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"4\" dataKey=\"all.p1notPlayed\" fill=\"#bfa988\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"5\" dataKey=\"all.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst MIN_GRAPH_HEIGHT = undefined;\r\n\r\nconst profile1Selector = profileSelectorCreator('id');\r\nconst profile2Selector = profileSelectorCreator('compareToId');\r\n\r\nconst getCombinedData = memoize()((p1, p2, tracklist) => {\r\n  if (!p1 || !p2) {\r\n    return {};\r\n  }\r\n\r\n  const perLevelComparison = _.fromPairs(Array.from({ length: 28 }).map((x, i) => [i + 1, {}]));\r\n  _.keys(perLevelComparison).forEach(level => {\r\n    const charts = _.flow(\r\n      _.map('chart'),\r\n      _.uniqBy('sharedChartId')\r\n    )([...p1.resultsByLevel[level], ...p2.resultsByLevel[level]]);\r\n    const data = {\r\n      x: level,\r\n      all: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        twoBars: {},\r\n      },\r\n      double: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        twoBars: {},\r\n      },\r\n      single: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        twoBars: {},\r\n      },\r\n    };\r\n    charts.forEach(chart => {\r\n      const p1index = chart.results.findIndex(r => r.playerId === p1.id);\r\n      const p2index = chart.results.findIndex(r => r.playerId === p2.id);\r\n      const perType = chart.chartType.startsWith('D') ? data.double : data.single;\r\n      if (p1index < 0 && p2index < 0) {\r\n        console.log('wtf?');\r\n      } else if (p1index < 0) {\r\n        data.all.p1notPlayed++;\r\n        perType.p1notPlayed++;\r\n      } else if (p2index < 0) {\r\n        data.all.p2notPlayed++;\r\n        perType.p2notPlayed++;\r\n      } else if (p1index < p2index) {\r\n        data.all.p1win++;\r\n        perType.p1win++;\r\n      } else if (p2index < p1index) {\r\n        data.all.p2win++;\r\n        perType.p2win++;\r\n      }\r\n    });\r\n\r\n    const normalizeTwo = dataObj => {\r\n      const totalPlayed = dataObj.p1win + dataObj.p2win || 1; // in case of divide by 0\r\n      dataObj.twoBars.p1win = dataObj.p1win / totalPlayed;\r\n      dataObj.twoBars.p2win = dataObj.p2win / totalPlayed;\r\n    };\r\n    normalizeTwo(data.all);\r\n    normalizeTwo(data.single);\r\n    normalizeTwo(data.double);\r\n\r\n    const normalizeFive = (dataObj, total) => {\r\n      dataObj.p1win = dataObj.p1win / total;\r\n      dataObj.p1notPlayed = dataObj.p1notPlayed / total;\r\n      dataObj.p2win = dataObj.p2win / total;\r\n      dataObj.p2notPlayed = dataObj.p2notPlayed / total;\r\n      dataObj.notPlayed =\r\n        1 - dataObj.p1win - dataObj.p1notPlayed - dataObj.p2win - dataObj.p2notPlayed;\r\n    };\r\n    normalizeFive(data.all, tracklist.chartLevels[level]);\r\n    normalizeFive(data.double, tracklist.doublesLevels[level]);\r\n    normalizeFive(data.single, tracklist.singlesLevels[level]);\r\n\r\n    perLevelComparison[level] = data;\r\n  });\r\n\r\n  return {\r\n    perLevelComparison: _.values(perLevelComparison),\r\n  };\r\n});\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const profile1 = profile1Selector(state, props);\r\n  const profile2 = profile2Selector(state, props);\r\n  return {\r\n    profile: profile1,\r\n    profile2,\r\n    combinedData: getCombinedData(profile1, profile2, state.tracklist.data),\r\n    tracklist: state.tracklist.data,\r\n    filter: state.profiles.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading:\r\n      state.results.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setProfilesFilter,\r\n  resetProfilesFilter,\r\n};\r\n\r\nclass ProfileCompare extends Component {\r\n  static propTypes = {\r\n    profile: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    profile: {},\r\n    profile2: {},\r\n    combinedData: {},\r\n  };\r\n\r\n  state = {\r\n    isLevelGraphCombined: true,\r\n    compareBarsMode: BARS_MODES.BOTH_TWO,\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onChangeDayRange = range => {\r\n    const { filter } = this.props;\r\n    this.props.setProfilesFilter({\r\n      ...filter,\r\n      dayRange: range,\r\n    });\r\n  };\r\n\r\n  rhMargin = { top: 5, bottom: 5, right: 5, left: 0 };\r\n  rhXDomain = ['dataMin', 'dataMax'];\r\n  rhYDomain = ['dataMin - 100', 'dataMax + 100'];\r\n  rhXTickFormatter = value => parseDate(value).toLocaleDateString();\r\n  rhTooltip = ({ active, payload, label }) => {\r\n    const { profile, profile2 } = this.props;\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n    if (!payload || !payload[0]) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"history-tooltip\">\r\n        <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n        {payload[1] && (\r\n          <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n            {p1Name}: {Math.round(payload[1].value)}\r\n          </div>\r\n        )}\r\n        {payload[0] && (\r\n          <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n            {p2Name}: {Math.round(payload[0].value)}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderRankingHistory() {\r\n    const { combinedData } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={combinedData.ratingChanges} margin={this.rhMargin}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={this.rhXDomain}\r\n            tickFormatter={this.rhXTickFormatter}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={this.rhYDomain}\r\n            tickFormatter={Math.round}\r\n            width={40}\r\n          />\r\n          <ReferenceLine y={1000} stroke=\"white\" />\r\n          <RechartsTooltip isAnimationActive={false} content={this.rhTooltip} />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating2\"\r\n            stroke=\"#ffd388\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating1\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderPlaceHistory() {\r\n    const { combinedData, profile, profile2 } = this.props;\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart\r\n          data={combinedData.placesChanges}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={value => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={[1, dataMax => (dataMax < 3 ? dataMax + 2 : dataMax + 1)]}\r\n            interval={0}\r\n            reversed\r\n            width={40}\r\n          />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload[1] && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n                      {p1Name}: #{payload[1].value}\r\n                    </div>\r\n                  )}\r\n                  {payload[0] && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n                      {p2Name}: #{payload[0].value}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place2\"\r\n            stroke=\"#ffd388\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place1\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  plcMargin = { top: 5, bottom: 5, right: 5, left: 0 };\r\n  plcTooltip = ({ active, payload, label }) => {\r\n    const { profile, profile2 } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n    const isTwo = [BARS_MODES.SINGLE_TWO, BARS_MODES.DOUBLE_TWO, BARS_MODES.BOTH_TWO].includes(\r\n      compareBarsMode\r\n    );\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n\r\n    if (!payload || !payload[0]) {\r\n      return null;\r\n    }\r\n    const renderLegendItem = (item, label) => (\r\n      <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n        {label}: {Math.round(_.get(item.dataKey, item.payload) * 100)}%\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"history-tooltip\">\r\n        <div>Level: {payload[0].payload.x}</div>\r\n        {renderLegendItem(payload[0], `${p1Name} wins`)}\r\n        {!isTwo && renderLegendItem(payload[1], `${p2Name} has no score`)}\r\n        {!isTwo && renderLegendItem(payload[2], `Both have no score`)}\r\n        {!isTwo && renderLegendItem(payload[3], `${p1Name} has no score`)}\r\n        {renderLegendItem(isTwo ? payload[1] : payload[4], `${p2Name} wins`)}\r\n      </div>\r\n    );\r\n  };\r\n  plcXDomain = [0, 1];\r\n  plcXTicks = [0, 0.5, 1];\r\n  plcXFormatter = x => `${Math.round(x * 100)}%`;\r\n\r\n  renderPerLevelComparison() {\r\n    const { combinedData } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" aspect={0.7}>\r\n        <BarChart\r\n          layout=\"vertical\"\r\n          data={[...combinedData.perLevelComparison]}\r\n          margin={this.plcMargin}\r\n        >\r\n          <RechartsTooltip isAnimationActive={false} content={this.plcTooltip} />\r\n          <YAxis reversed dataKey=\"x\" type=\"category\" width={23} />\r\n          <XAxis\r\n            type=\"number\"\r\n            domain={this.plcXDomain}\r\n            ticks={this.plcXTicks}\r\n            tickFormatter={this.plcXFormatter}\r\n          />\r\n          <ReferenceLine x={0.5} stroke=\"#666\" />\r\n          {getCompareBars(compareBarsMode)}\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderProfile() {\r\n    const { profile, profile2 } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"profile-header\">\r\n          <div className=\"profile-name text-with-header blue\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile.lastResultDate ? getTimeAgo(profile.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-header right-align\">\r\n          <div className=\"profile-name text-with-header orange\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile2.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile2.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile2.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile2.lastResultDate ? getTimeAgo(profile2.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header flex\">\r\n                  <span>победы по уровням</span>\r\n                </div>\r\n                <div className=\"profile-sm-section-header flex\">\r\n                  {(() => {\r\n                    const isTwo = [\r\n                      BARS_MODES.SINGLE_TWO,\r\n                      BARS_MODES.DOUBLE_TWO,\r\n                      BARS_MODES.BOTH_TWO,\r\n                    ].includes(compareBarsMode);\r\n                    return (\r\n                      <div className=\"toggle-holder\">\r\n                        <Toggle\r\n                          className=\"combine-toggle\"\r\n                          checked={!isTwo}\r\n                          onChange={() =>\r\n                            this.setState(state => ({\r\n                              compareBarsMode: {\r\n                                [BARS_MODES.SINGLE_TWO]: BARS_MODES.SINGLE_FIVE,\r\n                                [BARS_MODES.DOUBLE_TWO]: BARS_MODES.DOUBLE_FIVE,\r\n                                [BARS_MODES.BOTH_TWO]: BARS_MODES.BOTH_FIVE,\r\n                                [BARS_MODES.SINGLE_FIVE]: BARS_MODES.SINGLE_TWO,\r\n                                [BARS_MODES.DOUBLE_FIVE]: BARS_MODES.DOUBLE_TWO,\r\n                                [BARS_MODES.BOTH_FIVE]: BARS_MODES.BOTH_TWO,\r\n                              }[state.compareBarsMode],\r\n                            }))\r\n                          }\r\n                        >\r\n                          подробно\r\n                        </Toggle>\r\n                        <div className=\"tabs-holder\">\r\n                          <ToggleButton\r\n                            text=\"все\"\r\n                            active={[BARS_MODES.BOTH_TWO, BARS_MODES.BOTH_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={() => {\r\n                              this.setState(state => ({\r\n                                compareBarsMode: isTwo ? BARS_MODES.BOTH_TWO : BARS_MODES.BOTH_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                          <ToggleButton\r\n                            text=\"синглы\"\r\n                            active={[BARS_MODES.SINGLE_TWO, BARS_MODES.SINGLE_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={active => {\r\n                              this.setState(state => ({\r\n                                compareBarsMode: isTwo\r\n                                  ? BARS_MODES.SINGLE_TWO\r\n                                  : BARS_MODES.SINGLE_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                          <ToggleButton\r\n                            text=\"даблы\"\r\n                            active={[BARS_MODES.DOUBLE_TWO, BARS_MODES.DOUBLE_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={active => {\r\n                              this.setState(state => ({\r\n                                compareBarsMode: isTwo\r\n                                  ? BARS_MODES.DOUBLE_TWO\r\n                                  : BARS_MODES.DOUBLE_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })()}\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderPerLevelComparison()}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>эло</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>место в топе</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, profile, error } = this.props;\r\n    DEBUG && console.log('profile:', profile);\r\n    return (\r\n      <div className=\"profile-compare-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"btn btn-sm btn-dark btn-icon\"\r\n              onClick={this.onRefresh}\r\n            >\r\n              <FaSearch /> обновить\r\n            </button>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!isLoading && _.isEmpty(profile) && <div className=\"profile\">Profile not found</div>}\r\n          {!isLoading && !_.isEmpty(profile) && this.renderProfile()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(ProfileCompare));\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\nimport { RESET } from './resetAction';\r\n\r\nconst LOADING = `USER/LOADING`;\r\nconst SUCCESS = `USER/SUCCESS`;\r\nconst ERROR = `USER/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        data: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: null,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    case RESET:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchUser = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/profile` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport { resetUser } from './resetAction';\r\n","import cookies from 'browser-cookies';\r\n\r\nimport { postJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport { fetchUser, resetUser } from 'reducers/user';\r\n\r\nconst LOADING = `LOGIN/LOADING`;\r\nconst SUCCESS = `LOGIN/SUCCESS`;\r\nconst ERROR = `LOGIN/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n  error: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        data: null,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: null,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const login = googleResponse => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        postJson({\r\n          url: `${HOST}/login/google`,\r\n          body: { token: googleResponse.tokenId },\r\n        })\r\n      );\r\n      cookies.set('session', data.session, { expires: 30 });\r\n      dispatch({ type: SUCCESS, data });\r\n      dispatch(fetchUser());\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    dispatch(resetUser());\r\n    try {\r\n      const data = await dispatch(\r\n        postJson({\r\n          url: `${HOST}/logout`,\r\n        })\r\n      );\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './top-bar.scss';\r\n\r\n// routes\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport * as loginACs from 'reducers/login';\r\n\r\n// redux\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoadingLogin: state.login.isLoading,\r\n    isLoadingUser: state.user.isLoading,\r\n    user: state.user.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login: loginACs.login,\r\n  logout: loginACs.logout,\r\n};\r\n\r\nfunction TopBar({ isLoadingLogin, isLoadingUser, user, login, logout }) {\r\n  return (\r\n    <header className=\"top-bar\">\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <NavLink exact to={routes.leaderboard.path}>\r\n              leaderboard\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact to={routes.ranking.path}>\r\n              ranking\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact to={routes.songs.path}>\r\n              songs\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div className=\"_flex-fill\" />\r\n      <div className=\"login-container\">\r\n        <NavLink\r\n          className=\"player-info\"\r\n          exact\r\n          to={routes.profile.getPath({ id: _.get('player.id', user) })}\r\n        >\r\n          {_.getOr('', 'player.nickname', user)}\r\n        </NavLink>\r\n        <button\r\n          className=\"btn btn-dark btn-icon btn-sm\"\r\n          onClick={logout}\r\n          disabled={isLoadingLogin || isLoadingUser}\r\n        >\r\n          <span> logout</span>\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TopBar);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { FaGoogle } from 'react-icons/fa';\r\nimport Emoji from 'react-emoji-render';\r\n\r\nimport './login-screen.scss';\r\n\r\n// reducers\r\nimport * as loginACs from 'reducers/login';\r\n\r\n// redux\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoading: state.login.isLoading,\r\n    error: state.login.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login: loginACs.login,\r\n};\r\n\r\nfunction LoginScreen({ isLoading, error, login }) {\r\n  const [isClown, setClown] = useState(false);\r\n  const onGoogleResponse = res => {\r\n    if (res.error) {\r\n      console.log('Google login response error:', res);\r\n    } else {\r\n      login(res);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <div className=\"site-name\">pumpking</div>\r\n      <div className=\"login-button\">\r\n        <GoogleLogin\r\n          clientId=\"197132042723-cmibep21qf6dald9l2l01rif7l5dtd4s.apps.googleusercontent.com\"\r\n          buttonText=\"Login\"\r\n          onSuccess={onGoogleResponse}\r\n          onFailure={onGoogleResponse}\r\n          cookiePolicy={'single_host_origin'}\r\n          render={({ onClick, disabled }) => (\r\n            <button\r\n              className=\"btn btn-dark btn-icon btn-sm\"\r\n              onClick={onClick}\r\n              disabled={disabled || isLoading}\r\n            >\r\n              <FaGoogle />\r\n              <span> login</span>\r\n            </button>\r\n          )}\r\n        />\r\n      </div>\r\n      {error && <div className=\"error\">{error.message}</div>}\r\n      <div className=\"footer\">\r\n        By logging in, you agree to our{' '}\r\n        {isClown ? (\r\n          <Emoji text=\"🤡\" className=\"clown\" />\r\n        ) : (\r\n          <span onClick={() => setClown(true)} className=\"link-style\">\r\n            Privacy Policy\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginScreen);\r\n","import { fetchJson } from 'utils/fetch';\r\nimport queryString from 'query-string';\r\nimport _ from 'lodash/fp';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TOP_PER_SONG/LOADING`;\r\nconst SUCCESS = `TOP_PER_SONG/SUCCESS`;\r\nconst ERROR = `TOP_PER_SONG/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n  error: null,\r\n  fetchingParams: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        fetchingParams: action.fetchingParams,\r\n        data: null,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return action.fetchingParams === state.fetchingParams\r\n        ? {\r\n            ...state,\r\n            isLoading: false,\r\n            error: action.error,\r\n            data: null,\r\n            fetchingParams: null,\r\n          }\r\n        : state;\r\n    case SUCCESS:\r\n      return action.fetchingParams === state.fetchingParams\r\n        ? {\r\n            ...state,\r\n            isLoading: false,\r\n            data: action.data,\r\n            fetchingParams: null,\r\n          }\r\n        : state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTopPerSong = (songName, leftLabel, rightLabel) => {\r\n  const fetchingParams = queryString.stringify({\r\n    song_name: songName,\r\n    charts: _.compact(_.uniq([leftLabel, rightLabel])).join(','),\r\n  });\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING, fetchingParams });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/topPerSong?${fetchingParams}` }));\r\n      dispatch({ type: SUCCESS, data, fetchingParams });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error, fetchingParams });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TRACKLIST/LOADING`;\r\nconst SUCCESS = `TRACKLIST/SUCCESS`;\r\nconst ERROR = `TRACKLIST/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTracklist = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/tracklist/stats/XX` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport _ from 'lodash/fp';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport moment from 'moment';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\nconst timeStyle = {\r\n  flavour: 'long',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nexport const getTimeAgo = date => {\r\n  const dayDiff = moment()\r\n    .startOf('day')\r\n    .diff(moment(date).startOf('day'), 'days');\r\n  return dayDiff === 0 ? 'сегодня' : dayDiff === 1 ? 'вчера' : timeAgo.format(date, timeStyle);\r\n};\r\n\r\nexport const preprocessData = data => ({\r\n  ...data,\r\n  results: _.flow(\r\n    _.get('results'),\r\n    _.values,\r\n    _.map(item => {\r\n      const fullRes = _.find(\r\n        r => _.every(_.isNumber, [r.perfects, r.greats, r.goods, r.bads, r.misses]),\r\n        item.results\r\n      );\r\n      const stepSum =\r\n        fullRes &&\r\n        [fullRes.perfects, fullRes.greats, fullRes.goods, fullRes.bads, fullRes.misses].reduce(\r\n          (sum, n) => sum + n,\r\n          0\r\n        );\r\n\r\n      const [chartType, chartLevel] = item.chart_label.match(/(\\D+)|(\\d+)/g);\r\n\r\n      return {\r\n        song: item.track,\r\n        chartLabel: item.chart_label,\r\n        chartLevel,\r\n        chartType,\r\n        mix: item.mix,\r\n        duration: item.duration,\r\n        results: item.results.map((res, index) => {\r\n          let resultInfoOverrides = {};\r\n          if (stepSum) {\r\n            const infos = [res.perfects, res.greats, res.goods, res.bads, res.misses];\r\n            let fixableIndex = -1;\r\n            let localStepSum = 0;\r\n            const canFix =\r\n              infos.filter((numb, index) => {\r\n                if (!_.isNumber(numb)) {\r\n                  fixableIndex = index;\r\n                  return true;\r\n                }\r\n                localStepSum += numb;\r\n                return false;\r\n              }).length === 1;\r\n            if (canFix) {\r\n              resultInfoOverrides[['perfect', 'great', 'good', 'bad', 'miss'][fixableIndex]] =\r\n                stepSum - localStepSum;\r\n            }\r\n          }\r\n          return {\r\n            id: res.id,\r\n            playerId: res.player,\r\n            nickname: data.players[res.player].nickname,\r\n            nicknameArcade: data.players[res.player].arcade_name,\r\n            originalChartMix: res.originalChartMix,\r\n            originalChartLabel: res.originalChartLabel,\r\n            originalScore: res.originalScore,\r\n            date: res.gained,\r\n            dateObject: new Date(res.gained),\r\n            grade: res.grade,\r\n            isExactDate: !!res.exact_gain_date,\r\n            score: res.score,\r\n            scoreIncrease: res.score_increase,\r\n            calories: res.calories && res.calories / 1000,\r\n            perfect: res.perfects,\r\n            great: res.greats,\r\n            good: res.goods,\r\n            bad: res.bads,\r\n            miss: res.misses,\r\n            combo: res.max_combo,\r\n            mods: res.mods_list,\r\n            isRank: !!res.rank_mode,\r\n            isHJ: (res.mods_list || '').split(' ').includes('HJ'),\r\n            ...resultInfoOverrides,\r\n          };\r\n        }),\r\n      };\r\n    }),\r\n    _.map(song => {\r\n      return {\r\n        ...song,\r\n        latestScoreDate: song.results.reduce(\r\n          (latest, current) => (current.date > latest ? current.date : latest),\r\n          song.results[0].date\r\n        ),\r\n        results: song.results.map(res => {\r\n          const perfects = (Math.sqrt(res.perfect) * _.toInteger(song.chartLevel)) / 2;\r\n          const acc = perfects\r\n            ? Math.floor(\r\n                ((perfects * 100 + res.great * 60 + res.good * 30 + res.miss * -20) /\r\n                  (perfects + res.great + res.good + res.bad + res.miss)) *\r\n                  100\r\n              ) / 100\r\n            : null;\r\n          const accRaw = res.perfect\r\n            ? Math.floor(\r\n                ((res.perfect * 100 + res.great * 60 + res.good * 30 + res.miss * -20) /\r\n                  (res.perfect + res.great + res.good + res.bad + res.miss)) *\r\n                  100\r\n              ) / 100\r\n            : null;\r\n          return {\r\n            ...res,\r\n            accuracy: acc < 0 ? 0 : accRaw === 100 ? 100 : acc && +acc.toFixed(2),\r\n            accuracyRaw: accRaw,\r\n            hasRankScore: _.some({ playerId: res.playerId, isRank: true }, song.results),\r\n          };\r\n        }),\r\n      };\r\n    }),\r\n    _.orderBy(['latestScoreDate', 'song', 'chartLevel'], ['desc', 'asc', 'desc'])\r\n  )(data),\r\n});\r\n\r\nexport const useTracked = (data, onChange) => {\r\n  const [prevData, setPrevData] = useState(data);\r\n  const [currData, setCurrData] = useState(data);\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(data) && data !== currData) {\r\n      setPrevData(currData);\r\n      setCurrData(data);\r\n      onChange(data, currData);\r\n    }\r\n  }, [data, onChange, currData, prevData]);\r\n\r\n  return [currData, prevData];\r\n};\r\n","import React, { useEffect, useState, useRef, useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport numeral from 'numeral';\r\nimport _ from 'lodash/fp';\r\nimport { FaAngleDoubleUp } from 'react-icons/fa';\r\nimport lev from 'fast-levenshtein';\r\n\r\nimport './socket.scss';\r\n\r\nimport { SOCKET_SERVER_IP } from 'constants/backend';\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nimport { fetchResults, appendNewResults } from 'reducers/results';\r\nimport { fetchTopPerSong } from 'reducers/topPerSong';\r\nimport { fetchTracklist } from 'reducers/tracklist';\r\n\r\nimport { getRankImg } from 'utils/exp';\r\nimport { preprocessData, getTimeAgo } from './helpers';\r\n\r\n// code\r\nconst STATE_RESET_TIMEOUT = 10 * 60 * 1000; // 5 minutes\r\n\r\n// redux\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoading: state.topPerSong.isLoading,\r\n    songTopData: state.topPerSong.data,\r\n    error: state.topPerSong.error,\r\n    profiles: state.results.profiles,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  fetchTopPerSong,\r\n  fetchTracklist,\r\n  appendNewResults,\r\n};\r\n\r\n// component\r\nconst renderChartLabel = (type, level) => {\r\n  return (\r\n    <div\r\n      className={classNames('chart-name', {\r\n        single: type === 'S',\r\n        singlep: type === 'SP',\r\n        doublep: type === 'DP',\r\n        double: type === 'D',\r\n        coop: type === 'COOP',\r\n      })}\r\n    >\r\n      <span className=\"chart-letter\">{type}</span>\r\n      <span className=\"chart-number\">{level}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction TrackerApp({\r\n  isLoading,\r\n  fetchResults,\r\n  fetchTracklist,\r\n  fetchTopPerSong,\r\n  appendNewResults,\r\n  songTopData,\r\n  error,\r\n  profiles,\r\n}) {\r\n  const [message, setMessage] = useState('');\r\n  const [socketErrorMessage, setSocketErrorMessage] = useState('');\r\n  const [isSocketReady, setSocketReady] = useState(false);\r\n  const [isAlive, setAlive] = useState(false);\r\n  const [leftLabel, setLeftLabel] = useState(null);\r\n  const [rightLabel, setRightLabel] = useState(null);\r\n  const [leftPlayer, setLeftPlayer] = useState(null);\r\n  const [rightPlayer, setRightPlayer] = useState(null);\r\n  const [recognizedSongName, setRecognizedSongName] = useState('');\r\n\r\n  const socketRef = useRef(null);\r\n  const timeoutResetTokenRef = useRef(null);\r\n\r\n  const charts = _.values(_.get('results', preprocessData(songTopData)));\r\n  const leftChart = _.find({ chartLabel: leftLabel }, charts);\r\n  const rightChart = _.find({ chartLabel: rightLabel }, charts);\r\n  const chartsToShow = _.uniq(_.compact([leftChart, rightChart]));\r\n\r\n  const topPlayersList = _.flow(\r\n    _.values,\r\n    _.orderBy('ratingRaw', 'desc'),\r\n    items => items.map((it, index) => ({ place: index + 1, ...it }))\r\n  )(profiles);\r\n\r\n  let leftProfile = {};\r\n  let rightProfile = {};\r\n\r\n  if (leftPlayer) {\r\n    leftProfile = _.minBy(p => lev.get(p.nameArcade, leftPlayer), _.values(profiles)) || {};\r\n  }\r\n  if (rightPlayer) {\r\n    rightProfile = _.minBy(p => lev.get(p.nameArcade, rightPlayer), _.values(profiles)) || {};\r\n  }\r\n\r\n  // const leftData = {\r\n  //   name: useTracked(leftProfile.name),\r\n  //   ratingRaw: useTracked(leftProfile.ratingRaw),\r\n  //   ratingRaw: useTracked(leftProfile.ratingRaw),\r\n  // };\r\n\r\n  const [leftData, setLeftData] = useState({ name: leftProfile.name, ratingRaw: null, exp: null });\r\n  const [rightData, setRightData] = useState({\r\n    name: rightProfile.name,\r\n    ratingRaw: null,\r\n    exp: null,\r\n  });\r\n\r\n  const restartTimeout = useCallback(() => {\r\n    setAlive(true);\r\n    if (timeoutResetTokenRef.current) {\r\n      clearTimeout(timeoutResetTokenRef.current);\r\n    }\r\n    timeoutResetTokenRef.current = setTimeout(() => {\r\n      // TODO: reset page\r\n      // this.setState(defaultState);\r\n    }, STATE_RESET_TIMEOUT);\r\n  }, []);\r\n\r\n  console.log(leftProfile, rightProfile);\r\n\r\n  useEffect(() => {\r\n    if (leftProfile.ratingRaw && leftProfile.ratingRaw !== leftData.ratingRaw) {\r\n      setLeftData({\r\n        ...leftData,\r\n        ratingRaw: leftProfile.ratingRaw,\r\n        prevRatingRaw: leftData.ratingRaw,\r\n        expRank: leftProfile.expRank,\r\n        expRankNext: leftProfile.expRankNext,\r\n      });\r\n    }\r\n    if (leftProfile.exp && leftProfile.exp !== leftData.exp) {\r\n      setLeftData({\r\n        ...leftData,\r\n        exp: leftProfile.exp,\r\n        prevExp: leftData.exp,\r\n        expRank: leftProfile.expRank || leftData.expRank,\r\n        expRankNext: leftProfile.expRankNext || leftData.expRankNext,\r\n      });\r\n    }\r\n    if (rightProfile.ratingRaw && rightProfile.ratingRaw !== rightData.ratingRaw) {\r\n      setRightData({\r\n        ...rightData,\r\n        ratingRaw: rightProfile.ratingRaw,\r\n        prevRatingRaw: rightData.ratingRaw,\r\n        expRank: rightProfile.expRank,\r\n        expRankNext: rightProfile.expRankNext,\r\n      });\r\n    }\r\n    if (rightProfile.exp && rightProfile.exp !== rightData.exp) {\r\n      setRightData({\r\n        ...rightData,\r\n        exp: rightProfile.exp,\r\n        prevExp: rightData.exp,\r\n        expRank: rightProfile.expRank || rightData.expRank,\r\n        expRankNext: rightProfile.expRankNext || rightData.expRankNext,\r\n      });\r\n    }\r\n    if (leftData.name !== leftProfile.name) {\r\n      setLeftData({\r\n        ...leftData,\r\n        ratingRaw: leftProfile.ratingRaw,\r\n        prevRatingRaw: null,\r\n        exp: leftProfile.exp,\r\n        expRank: leftProfile.expRank,\r\n        expRankNext: leftProfile.expRankNext,\r\n        prevExp: null,\r\n        name: leftProfile.name,\r\n      });\r\n    }\r\n    if (rightData.name !== rightProfile.name) {\r\n      setRightData({\r\n        ...rightData,\r\n        ratingRaw: rightProfile.ratingRaw,\r\n        prevRatingRaw: null,\r\n        exp: rightProfile.exp,\r\n        expRank: rightProfile.expRank,\r\n        expRankNext: rightProfile.expRankNext,\r\n        prevExp: null,\r\n        name: rightProfile.name,\r\n      });\r\n    }\r\n    /* eslint-disable */\r\n  }, [\r\n    leftProfile.ratingRaw,\r\n    rightProfile.ratingRaw,\r\n    leftProfile.exp,\r\n    rightProfile.exp,\r\n    leftProfile.name,\r\n    rightProfile.name,\r\n    leftData,\r\n    rightData,\r\n  ]);\r\n  /* eslint-enable */\r\n\r\n  useEffect(() => {\r\n    socketRef.current = new WebSocket(SOCKET_SERVER_IP);\r\n    socketRef.current.onerror = () => {\r\n      setMessage(`Cannot connect to websocket server, please reload the page`);\r\n    };\r\n    socketRef.current.onopen = e => {\r\n      setSocketReady(true);\r\n    };\r\n  }, []); // eslint-disable-line\r\n\r\n  useEffect(() => {\r\n    socketRef.current.onmessage = event => {\r\n      restartTimeout();\r\n      try {\r\n        const data = event && event.data && JSON.parse(event.data);\r\n        console.log(data);\r\n\r\n        if (data.type === 'result_screen') {\r\n          const songName = data.data.track_name;\r\n          const leftLabel = _.get('left.chart_label', data.data);\r\n          const rightLabel = _.get('right.chart_label', data.data);\r\n          const leftPlayer = _.get('left.result.player_name', data.data);\r\n          const rightPlayer = _.get('right.result.player_name', data.data);\r\n          setLeftPlayer(leftPlayer);\r\n          setRightPlayer(rightPlayer);\r\n          setLeftLabel(leftLabel);\r\n          setRightLabel(rightLabel);\r\n          setRecognizedSongName(songName);\r\n          appendNewResults(); // Fetch results that we don't have here yet (to calculate\r\n          fetchTopPerSong(songName, leftLabel, rightLabel);\r\n        } else if (data.type === 'chart_selected') {\r\n          setSocketErrorMessage(data.data.error || '');\r\n          if (data.data.leftPlayer || data.data.rightPlayer) {\r\n            setLeftPlayer(data.data.leftPlayer);\r\n            setRightPlayer(data.data.rightPlayer);\r\n          }\r\n          if (data.data.leftLabel || data.data.rightLabel) {\r\n            setLeftLabel(data.data.leftLabel);\r\n            setRightLabel(data.data.rightLabel);\r\n            if (data.data.text) {\r\n              // If we have full info, try to fetch if needed\r\n              const newSongName = data.data.text;\r\n              setRecognizedSongName(newSongName);\r\n              console.log('song name', newSongName, recognizedSongName);\r\n              if (recognizedSongName !== newSongName) {\r\n                fetchTopPerSong(newSongName, data.data.leftLabel, data.data.rightLabel);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.log('on message error', e);\r\n        setMessage(`Error: ${e.message}`);\r\n      }\r\n    };\r\n  }, [recognizedSongName, fetchTopPerSong, restartTimeout, appendNewResults]);\r\n\r\n  // useEffect(() => {\r\n  //   setTimeout(() => {\r\n  //     socketRef.current.onmessage({\r\n  //       data:\r\n  //         '{\"type\": \"chart_selected\", \"data\": {\"text\": \"Uranium\", \"leftLabel\": \"D17\", \"rightLabel\": \"D20\", \"leftPlayer\": \"GRUMD\", \"rightPlayer\": \"DINO\"}}',\r\n  //     });\r\n  //   }, 2000);\r\n  // }, []);\r\n\r\n  const resultsContainerRef = useRef(null);\r\n  const leftResultRef = useRef(null);\r\n  const rightResultRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (resultsContainerRef.current && leftResultRef.current) {\r\n      if (rightResultRef.current) {\r\n        // Both refs\r\n        const left = leftResultRef.current;\r\n        const right = rightResultRef.current;\r\n        const totalSize = {\r\n          w: resultsContainerRef.current.clientWidth,\r\n          h: resultsContainerRef.current.clientHeight,\r\n        };\r\n        const scaleHH = totalSize.w / (left.offsetWidth + right.offsetWidth);\r\n        const scaleHW = totalSize.h / Math.max(left.offsetHeight, right.offsetHeight);\r\n        const scaleWH = totalSize.w / Math.max(left.offsetWidth, right.offsetWidth);\r\n        const scaleWW = totalSize.h / (left.offsetHeight + right.offsetHeight);\r\n        // console.log(scaleHH, scaleHW, scaleWH, scaleWW);\r\n        if (Math.min(scaleHH, scaleHW) > Math.min(scaleWH, scaleWW)) {\r\n          resultsContainerRef.current.style.flexDirection = 'row';\r\n          resultsContainerRef.current.style.alignItems = 'center';\r\n          if (scaleHH > scaleHW) {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleHW})`;\r\n          } else {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleHH})`;\r\n          }\r\n        } else {\r\n          resultsContainerRef.current.style.flexDirection = 'column';\r\n          resultsContainerRef.current.style.alignItems = 'center';\r\n          if (scaleWH > scaleWW) {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleWW})`;\r\n          } else {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleWH})`;\r\n          }\r\n        }\r\n      } else {\r\n        // One ref\r\n        const left = leftResultRef.current;\r\n        const totalSize = {\r\n          w: resultsContainerRef.current.clientWidth,\r\n          h: resultsContainerRef.current.clientHeight,\r\n        };\r\n        const scaleW = totalSize.w / left.offsetWidth;\r\n        const scaleH = totalSize.h / left.offsetHeight;\r\n        if (scaleW < scaleH) {\r\n          resultsContainerRef.current.style.transform = `scale(${0.98 * scaleW})`;\r\n        } else {\r\n          resultsContainerRef.current.style.transform = `scale(${0.98 * scaleH})`;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  const renderPlayer = ({ player, profile, label, data, isLeft = false }) => {\r\n    const renderDeltaText = (n, prevN) => {\r\n      if (!prevN || prevN === n) {\r\n        return null;\r\n      }\r\n      const delta = n - prevN;\r\n      return (\r\n        <span className={`change ${delta >= 0 ? 'pos' : 'neg'}`}>\r\n          {delta < 0 ? delta.toFixed(1) : `+${delta.toFixed(1)}`}\r\n        </span>\r\n      );\r\n    };\r\n\r\n    const renderExpLine = () => {\r\n      if (!data.expRank || !data.exp) {\r\n        return null;\r\n      }\r\n\r\n      let takenWidth = data.expRankNext\r\n        ? (data.exp - data.expRank.threshold) /\r\n          (data.expRankNext.threshold - data.expRank.threshold)\r\n        : 1;\r\n      const emptyWidth = 1 - takenWidth;\r\n      let diffWidth = 0;\r\n\r\n      if (data.prevExp) {\r\n        takenWidth = data.expRankNext\r\n          ? (data.prevExp - data.expRank.threshold) /\r\n            (data.expRankNext.threshold - data.expRank.threshold)\r\n          : 1;\r\n        diffWidth = 1 - emptyWidth - takenWidth;\r\n      }\r\n      return (\r\n        <div className=\"exp-line\">\r\n          <div className=\"taken\" style={{ width: Math.floor(100 * takenWidth) + '%' }}></div>\r\n          <div className=\"diff\" style={{ width: Math.ceil(100 * diffWidth) + '%' }}></div>\r\n          <div className=\"rest\" style={{ width: Math.ceil(100 * emptyWidth) + '%' }}></div>\r\n        </div>\r\n      );\r\n    };\r\n\r\n    const playerIndex = _.findIndex({ id: profile.id }, topPlayersList);\r\n    const closestPlayers = topPlayersList.slice(\r\n      Math.max(0, playerIndex - 1),\r\n      Math.min(playerIndex + 2, topPlayersList.length)\r\n    );\r\n\r\n    return (\r\n      <div className={`player-container ${isLeft ? 'left' : 'right'}`}>\r\n        {player && (\r\n          <>\r\n            <div className=\"title-header\">player {isLeft ? 1 : 2}:</div>\r\n            <div className=\"name-with-label\">\r\n              <div className=\"name\">{profile.name || player}</div>\r\n              <div className=\"chart-label\">\r\n                {label && renderChartLabel(...label.match(/(\\D+)|(\\d+)/g))}\r\n              </div>\r\n            </div>\r\n            {data.exp && data.expRank && (\r\n              <div className=\"exp exp-rank\">\r\n                {getRankImg(data.expRank)}\r\n                {renderExpLine()}\r\n              </div>\r\n            )}\r\n            {data.exp && (\r\n              <div className=\"exp-text\">\r\n                <span className=\"_grey-text\">exp:</span> {Math.round(data.exp)}{' '}\r\n                {renderDeltaText(data.exp, data.prevExp)}\r\n              </div>\r\n            )}\r\n            {data.ratingRaw && (\r\n              <div className=\"rating\">\r\n                <span className=\"_grey-text\">elo:</span> {Math.round(data.ratingRaw)}{' '}\r\n                {renderDeltaText(data.ratingRaw, data.prevRatingRaw)}\r\n              </div>\r\n            )}\r\n            <div className=\"closest-players\">\r\n              {_.map(pl => {\r\n                return (\r\n                  <div className={`closest-player ${profile.id === pl.id ? 'current-player' : ''}`}>\r\n                    <div className=\"place\">#{pl.place}</div>\r\n                    <div className=\"name\">{pl.name}</div>\r\n                    <div className=\"elo\">{pl.rating}</div>\r\n                  </div>\r\n                );\r\n              }, closestPlayers)}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"tracker-container\">\r\n      <div className=\"sidebar\">\r\n        {renderPlayer({\r\n          player: leftPlayer,\r\n          profile: leftProfile,\r\n          label: leftLabel,\r\n          data: leftData,\r\n          isLeft: true,\r\n        })}\r\n        {/* <div className=\"song-name\">{socketErrorMessage || recognizedSongName}</div> */}\r\n        {renderPlayer({\r\n          player: rightPlayer,\r\n          profile: rightProfile,\r\n          label: rightLabel,\r\n          data: rightData,\r\n        })}\r\n      </div>\r\n      <div className=\"results\" ref={resultsContainerRef}>\r\n        {(error || message) && (\r\n          <div className=\"error\">\r\n            {message}\r\n            <br />\r\n            {error && error.message}\r\n          </div>\r\n        )}\r\n        {isSocketReady &&\r\n          !leftPlayer &&\r\n          !rightPlayer &&\r\n          !socketErrorMessage &&\r\n          !isLoading &&\r\n          _.isEmpty(chartsToShow) &&\r\n          (isAlive ? (\r\n            <div className=\"msg\">Waiting for chart select...</div>\r\n          ) : (\r\n            <div className=\"offline msg\">Recognizer is offline</div>\r\n          ))}\r\n        {isSocketReady &&\r\n          (leftLabel || rightLabel) &&\r\n          !socketErrorMessage &&\r\n          !isLoading &&\r\n          _.isEmpty(chartsToShow) &&\r\n          'No results for this chart'}\r\n        {isLoading && <Loader />}\r\n        {!isLoading &&\r\n          chartsToShow.map((chart, chartIndex) => {\r\n            let topPlace = 1;\r\n            const occuredNicknames = [];\r\n            const results = chart.results.map((res, index) => {\r\n              const isSecondOccurenceInResults = occuredNicknames.includes(res.nickname);\r\n              occuredNicknames.push(res.nickname);\r\n              if (index === 0) {\r\n                topPlace = 1;\r\n              } else if (\r\n                !isSecondOccurenceInResults &&\r\n                res.score !== _.get([index - 1, 'score'], chart.results)\r\n              ) {\r\n                topPlace += 1;\r\n              }\r\n              return {\r\n                ...res,\r\n                topPlace,\r\n                isSecondOccurenceInResults,\r\n              };\r\n            });\r\n            return (\r\n              <div\r\n                className=\"song-block\"\r\n                key={chart.song + chart.chartLabel}\r\n                ref={chartIndex === 0 ? leftResultRef : rightResultRef}\r\n              >\r\n                <div className=\"song-name\">\r\n                  {renderChartLabel(chart.chartType, chart.chartLevel)}\r\n                  <div>{chart.song}</div>\r\n                </div>\r\n                <div className=\"charts\">\r\n                  <div className=\"chart\">\r\n                    <div className=\"results\">\r\n                      <table>\r\n                        <tbody>\r\n                          {results.map((res, index) => {\r\n                            let placeDifference, newIndex;\r\n                            if (res.scoreIncrease && res.date === chart.latestScoreDate) {\r\n                              const prevScore = res.score - res.scoreIncrease;\r\n                              newIndex = _.findLastIndex(res => res.score > prevScore, results);\r\n                              placeDifference = newIndex - index;\r\n                            }\r\n                            return (\r\n                              <tr\r\n                                key={res.score + res.nickname}\r\n                                className={classNames({\r\n                                  empty: !res.isExactDate,\r\n                                  latest: res.date === chart.latestScoreDate,\r\n                                  left: res.nickname === leftProfile.name,\r\n                                  right: res.nickname === rightProfile.name,\r\n                                })}\r\n                              >\r\n                                <td className=\"place\">\r\n                                  {res.isSecondOccurenceInResults ? '' : `#${res.topPlace}`}\r\n                                </td>\r\n                                <td className=\"nickname\">\r\n                                  {res.nickname}\r\n                                  {!!placeDifference && (\r\n                                    <span className=\"change-holder up\">\r\n                                      <span>{placeDifference}</span>\r\n                                      <FaAngleDoubleUp />\r\n                                    </span>\r\n                                  )}\r\n                                </td>\r\n                                <td\r\n                                  className={classNames('judge', {\r\n                                    vj: res.isRank,\r\n                                    hj: res.isHJ,\r\n                                  })}\r\n                                >\r\n                                  {res.isRank && (\r\n                                    <div className=\"inner\">{res.isExactDate ? 'VJ' : 'VJ?'}</div>\r\n                                  )}\r\n                                  {res.isHJ && <div className=\"inner\">HJ</div>}\r\n                                </td>\r\n                                <td className=\"score\">\r\n                                  <span className=\"score-span\">\r\n                                    {res.scoreIncrease > res.score * 0.8 && '*'}\r\n                                    {numeral(res.score).format('0,0')}\r\n                                  </span>\r\n                                </td>\r\n                                <td className=\"grade\">\r\n                                  <div className=\"img-holder\">\r\n                                    {res.grade && res.grade !== '?' && (\r\n                                      <img\r\n                                        src={`${process.env.PUBLIC_URL}/grades/${res.grade}.png`}\r\n                                        alt={res.grade}\r\n                                      />\r\n                                    )}\r\n                                    {res.grade === '?' && null}\r\n                                  </div>\r\n                                </td>\r\n                                <td className=\"number miss\">{res.miss}</td>\r\n                                <td className=\"number bad\">{res.bad}</td>\r\n                                <td className=\"number good\">{res.good}</td>\r\n                                <td className=\"number great\">{res.great}</td>\r\n                                <td className=\"number perfect\">{res.perfect}</td>\r\n                                <td className=\"combo\">\r\n                                  {res.combo}\r\n                                  {res.combo ? 'x' : ''}\r\n                                </td>\r\n                                <td className=\"accuracy\">\r\n                                  {res.accuracy}\r\n                                  {res.accuracy ? '%' : ''}\r\n                                </td>\r\n                                <td\r\n                                  className={classNames('date', {\r\n                                    latest: res.date === chart.latestScoreDate,\r\n                                  })}\r\n                                >\r\n                                  {getTimeAgo(res.dateObject)}\r\n                                  {res.isExactDate ? '' : '?'}\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TrackerApp);\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport localForage from 'localforage';\r\nimport _ from 'lodash/fp';\r\n\r\nimport 'react-responsive-ui/style.css';\r\nimport './App.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\nimport { CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nimport SongsTop from 'components/SongsTop/SongsTop';\r\nimport Leaderboard from 'components/Leaderboard/Leaderboard';\r\nimport Ranking from 'components/Ranking/Ranking';\r\nimport Profile from 'components/Profile/Profile';\r\nimport ProfileCompare from 'components/ProfileCompare/ProfileCompare';\r\nimport TopBar from 'components/Shared/TopBar/TopBar';\r\nimport Loader from 'components/Shared/Loader';\r\nimport LoginScreen from 'components/LoginScreen/LoginScreen';\r\nimport SocketTracker from 'components/SocketTracker/SocketTracker';\r\n\r\nimport { fetchResults, setFilter } from 'reducers/results';\r\nimport { fetchTracklist } from 'reducers/tracklist';\r\nimport { fetchUser } from 'reducers/user';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data: state.user.data,\r\n    isLoading: state.user.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setFilter,\r\n  fetchResults,\r\n  fetchTracklist,\r\n  fetchUser,\r\n};\r\n\r\nfunction App(props) {\r\n  const { fetchUser, fetchTracklist, fetchResults, setFilter, data, isLoading } = props;\r\n\r\n  useEffect(() => {\r\n    localForage\r\n      .getItem('filter')\r\n      .then(filter => {\r\n        if (filter) {\r\n          setFilter({\r\n            ...filter,\r\n            chartRange: filter.chartRange && {\r\n              ...filter.chartRange,\r\n              range: _.every(\r\n                r => r >= CHART_MIN_MAX[0] && r <= CHART_MIN_MAX[1],\r\n                filter.chartRange.range\r\n              )\r\n                ? filter.chartRange.range\r\n                : CHART_MIN_MAX,\r\n            },\r\n          });\r\n        }\r\n      })\r\n      .catch(error => console.error('Cannot get filter from local storage', error));\r\n    fetchUser();\r\n  }, [fetchUser, fetchTracklist, fetchResults, setFilter]);\r\n\r\n  useEffect(() => {\r\n    if (data && data.player) {\r\n      fetchTracklist().then(() => {\r\n        fetchResults();\r\n      });\r\n    }\r\n  }, [data, fetchResults, fetchTracklist]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <Loader />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!data || !data.player) {\r\n    return <LoginScreen />;\r\n  }\r\n\r\n  if (process.env.REACT_APP_SOCKET) {\r\n    return <SocketTracker />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TopBar />\r\n      <Route exact path=\"/\" render={() => <Redirect to={routes.leaderboard.path} />} />\r\n      <Route path={routes.leaderboard.path} component={Leaderboard} />\r\n      <Route path={routes.ranking.path} component={Ranking} />\r\n      <Route path={routes.profile.path}>\r\n        <Switch>\r\n          <Route path={routes.profile.path} exact component={Profile} />\r\n          <Route path={routes.profile.compare.path} exact component={ProfileCompare} />\r\n        </Switch>\r\n      </Route>\r\n      <Route path={routes.songs.path} component={SongsTop} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","import { combineReducers } from 'redux';\r\n\r\nimport mostPlayed from './mostPlayed';\r\nimport mostPlayedMonth from './mostPlayedMonth';\r\nimport leastPlayed from './leastPlayed';\r\n\r\nexport default combineReducers({\r\n  mostPlayed,\r\n  mostPlayedMonth,\r\n  leastPlayed,\r\n});\r\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport _ from 'lodash/fp';\r\n\r\nimport tracklist from 'reducers/tracklist';\r\nimport trackStats from 'reducers/trackStats';\r\nimport profiles from 'reducers/profiles';\r\nimport presets from 'reducers/presets';\r\nimport results from 'reducers/results';\r\nimport user from 'reducers/user';\r\nimport login from 'reducers/login';\r\nimport topPerSong from 'reducers/topPerSong';\r\n\r\nconst rootReducer = combineReducers({\r\n  topPerSong,\r\n  login,\r\n  presets,\r\n  profiles,\r\n  results,\r\n  trackStats,\r\n  tracklist,\r\n  user,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && process.env.NODE_ENV === 'development'\r\n    ? compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__({\r\n          stateSanitizer: state => ({\r\n            ...state,\r\n            results: {\r\n              ...state.results,\r\n              data: `big array, ${_.size(state.results.data)}`,\r\n              results: `big array, ${_.size(state.results.results)}`,\r\n              sharedCharts: 'big object',\r\n              profiles: _.mapValues(\r\n                pl => ({\r\n                  ...pl,\r\n                  resultsByGrade: '...',\r\n                  resultsByLevel: '...',\r\n                  rankingHistory: '...',\r\n                  ratingHistory: '...',\r\n                }),\r\n                state.results.profiles\r\n              ),\r\n            },\r\n          }),\r\n        })\r\n      )\r\n    : applyMiddleware(thunk)\r\n);\r\n","import 'promise-polyfill';\r\nimport 'whatwg-fetch';\r\nimport 'utils/polyfills';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.scss';\r\nimport App from 'components/App';\r\n\r\nimport { store } from 'reducers';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}