{"version":3,"sources":["utils/polyfills.js","constants/routes.js","components/Shared/Loader/index.js","components/Shared/Input/Input.js","components/Shared/Toggle/Toggle.js","components/Shared/CollapsibleBar/index.js","components/Shared/Overlay/Overlay.js","components/Shared/ToggleButton/ToggleButton.js","constants/leaderboard.js","components/Leaderboard/ChartFilter.js","constants/env.js","utils/fetch.js","reducers/ranking.js","reducers/profiles.js","reducers/top.js","constants/backend.js","utils/leaderboards.js","utils/colors.js","components/Leaderboard/selectors.js","components/Leaderboard/Leaderboard.js","components/Ranking/RankingList.js","components/Ranking/RankingFaq.js","components/Ranking/Ranking.js","components/Profile/Profile.js","components/Shared/TopBar/TopBar.js","components/App.js","reducers/index.js","index.js"],"names":["Number","isNaN","value","Math","sign","x","Array","prototype","findIndex","Object","defineProperty","predicate","this","TypeError","o","len","length","thisArg","arguments","k","kValue","call","configurable","writable","routes","leaderboard","path","ranking","faq","profile","getPath","params","name","Loader","className","width","height","viewBox","xmlns","fill","cx","cy","r","attributeName","from","to","begin","dur","values","calcMode","repeatCount","fillOpacity","Input","props","state","_","isNil","defaultValue","bindAll","prevProps","setState","e","newValue","target","onChange","type","numericValue","min","max","onBlur","omit","classNames","handleBlur","onInput","handleChange","React","Component","defaultProps","noop","Toggle","checked","id","uniqueId","htmlFor","children","CollapsibleBar","open","defaultOpen","title","onClick","PureComponent","POPPER_MODIFIERS","preventOverflow","enabled","padding","boundariesElement","PLACEMENT_ARROW_MAPPING","right","left","top","bottom","getArrowPlacement","placement","split","Overlay","isVisible","containerItemRef","createRef","renderPopper","bind","toggleOverlayVisibility","event","closest","hideOverlay","ref","style","arrowProps","outOfBoundaries","scheduleUpdate","hideWhenOutOfBounds","data-placement","overlayClassName","overlayItem","Fragment","ReactDOM","createPortal","container","document","body","modifiers","referenceElement","current","defaultTypes","listensToClickOutside","ToggleButton","active","onToggle","text","SORT","DEFAULT","PROTAGONIST","RANK_ASC","RANK_DESC","CHART_MIN_MAX","ChartFilter","filterValue","range","getOr","buttonText","t","step","renderTrack","onMouseDown","onTouchStart","display","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","justifyContent","alignItems","boxShadow","newMin","newMax","localStorage","window","debugOn","setItem","debugOff","removeItem","DEBUG","getItem","fetchJson","a","url","fetch","response","status","json","data","Error","console","error","Promise","reject","SET_RANKINGS","RANKING_CHANGE_SET","getRankings","defaultInfo","count","battleCount","countAcc","rating","grades","F","D","C","B","A","S","SS","SSS","totalScore","sumAccuracy","history","lastPlace","playerInfo","battles","forEach","song","validResults","orderBy","results","score","nickname","includes","push","cloneDeep","accuracy","chartType","grade","replace","isInteger","perfect","great","good","bad","miss","isFullScore","maxScore","maxCombo","chartLevel","getMaxScore","scoreIndex","slice","enemyScore","isRank","flow","sortBy","s1","s2","dateObject","getTime","scoreMultiplier","isExactDate","map","startingRating","S1","S2","r1","r2","R1","R2","E1","E2","kRatingDiff","abs","kRating1","kRating2","maxK1","maxK2","dr1","dr2","ratingDiff","ratingDiffLast","namesSorted","keys","p1Place","indexOf","p2Place","battleDate","place","date","key","round","ratingRaw","remove","i","setRankingsAction","getListOfNames","getMapOfRatings","q","fromPairs","setRankings","dispatch","getState","all","localForage","lastChangedRanking","lastChangedRankingPoints","lastFetchedRanking","listNow","listLastFetched","listLastChanged","mapPointsNow","mapPointsLastFetched","mapPointsLastChanged","rankingsPointsMap","isEqual","listPrev","warn","SET_PROFILES","getProfiles","profiles","addResultData","chart","result","rankingHistory","find","get","last","Date","now","resultsByGrade","resultsByLevel","initializeProfile","setProfiles","LOADING","SUCCESS","ERROR","SET_FILTER","RESET_FILTER","defaultFilter","showRank","initialState","isLoading","filter","preprocessData","item","track","chartLabel","chart_label","mix","res","index","perfects","sqrt","toInteger","acc","floor","greats","goods","misses","bads","gained","exact_gain_date","combo","max_combo","mods","mods_list","rank_mode","latestScoreDate","reduce","latest","hasRankScore","some","fetchTopScores","processedData","rankings","setFilter","TimeAgo","addLocale","ru","timeAgo","timeStyle","flavour","gradation","convenient","units","tooltipFormatterForBests","flexDirection","toLocaleDateString","nowDate","colorsArray","playersSelector","createSelector","flatMap","uniq","toLower","label","filteredDataSelector","names","players","namesOr","playersOr","namesNot","playersNot","sortingType","protagonist","excludeAntagonists","defaultSorting","protagonistSorting","row","protIndex","protScore","enemies","take","uniqBy","distanceFromProtagonist","dist","enemy","getScoreSorting","direction","Infinity","sortingFunctions","compact","chartRange","items","rows","filterCharts","showOnlyRank","showRankAndNorank","occuredNames","alreadyOccured","rowNames","every","size","matchSorter","topPlace","occuredNicknames","isSecondOccurenceInResults","sortingOptions","mapDispatchToProps","resetFilter","Leaderboard","showItemsCount","curry","onRefresh","placeholder","disabled","closeMenuOnSelect","classNamePrefix","isMulti","options","clearable","filteredData","canShowMore","visibleData","uniqueSelectedNames","message","renderSimpleSearch","renderFilters","renderSortings","isEmpty","chartIndex","single","href","rel","nameIndex","empty","fontWeight","color","toFixed","vj","content","tooltipClassName","numeral","format","src","process","alt","strTimeAgo","dayDiff","moment","startOf","diff","getTimeAgo","connect","getGradeImg","RankingList","player","playerIndex","change","isString","exact","prevRating","down","up","RankingFaq","Ranking","render","component","withRouter","Profile","match","log","levelsData","toPairs","y","brushData","historyTicks","lastTick","firstTick","first","isBefore","add","valueOf","isAfter","subtract","placesData","newItems","it","tick","flatten","dateRounded","stackOffset","margin","dataKey","stroke","stackId","strokeDasharray","domain","tickFormatter","allowDecimals","dataMax","interval","reversed","isAnimationActive","payload","strokeWidth","dot","travellerWidth","TopBar","App","rootReducer","combineReducers","action","hasPrevList","playerOriginal","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","thunk","stateSanitizer","then","catch","getElementById"],"mappings":"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","file":"static/js/main.bfcc59bb.chunk.js","sourcesContent":["/* eslint-disable */\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\r\nNumber.isNaN =\r\n  Number.isNaN ||\r\n  function(value) {\r\n    return value !== value;\r\n  };\r\n\r\nif (typeof Math.sign === 'undefined') {\r\n  Math.sign = function(x) {\r\n    return x > 0 ? 1 : x < 0 ? -1 : x;\r\n  };\r\n}\r\n\r\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\r\nif (!Array.prototype.findIndex) {\r\n  Object.defineProperty(Array.prototype, 'findIndex', {\r\n    value: function(predicate) {\r\n      // 1. Let O be ? ToObject(this value).\r\n      if (this == null) {\r\n        throw new TypeError('\"this\" is null or not defined');\r\n      }\r\n\r\n      var o = Object(this);\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('predicate must be a function');\r\n      }\r\n\r\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n      var thisArg = arguments[1];\r\n\r\n      // 5. Let k be 0.\r\n      var k = 0;\r\n\r\n      // 6. Repeat, while k < len\r\n      while (k < len) {\r\n        // a. Let Pk be ! ToString(k).\r\n        // b. Let kValue be ? Get(O, Pk).\r\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n        // d. If testResult is true, return k.\r\n        var kValue = o[k];\r\n        if (predicate.call(thisArg, kValue, k, o)) {\r\n          return k;\r\n        }\r\n        // e. Increase k by 1.\r\n        k++;\r\n      }\r\n\r\n      // 7. Return -1.\r\n      return -1;\r\n    },\r\n    configurable: true,\r\n    writable: true,\r\n  });\r\n}\r\n","export const routes = {\r\n  leaderboard: {\r\n    path: `/leaderboard`,\r\n  },\r\n  ranking: {\r\n    path: `/ranking`,\r\n    faq: {\r\n      path: '/ranking/faq',\r\n    },\r\n  },\r\n  profile: {\r\n    path: `/profiles/:name`,\r\n    getPath: params => `/profiles/${params.name}`,\r\n  },\r\n};\r\n","import React from 'react';\r\n\r\nimport './loader.scss';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"loader\">\r\n      <svg\r\n        width=\"40\"\r\n        height=\"12\"\r\n        viewBox=\"0 0 120 30\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"#eee\"\r\n      >\r\n        <circle cx=\"15\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"60\" cy=\"15\" r=\"9\" fillOpacity=\"0.3\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"9\"\r\n            to=\"9\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"9;15;9\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"0.5\"\r\n            to=\"0.5\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\".5;1;.5\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"105\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react/no-deprecated */\r\n// imports from vendor deps\r\nimport React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\n\r\n// imports from styles\r\nexport default class Input extends React.Component {\r\n  static propTypes = {\r\n    value: toBe.any,\r\n    defaultValue: toBe.any,\r\n    onChange: toBe.func,\r\n    onBlur: toBe.func,\r\n    type: toBe.string,\r\n    className: toBe.string,\r\n    trimOnBlur: toBe.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    value: null,\r\n    type: 'text',\r\n    onChange: _.noop,\r\n    onBlur: _.noop,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: (!_.isNil(props.value) ? props.value : props.defaultValue) || '',\r\n    };\r\n    _.bindAll(['handleChange', 'handleBlur'], this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.value !== this.props.value) {\r\n      this.setState({ value: this.props.value });\r\n    }\r\n  }\r\n\r\n  handleChange(e) {\r\n    const newValue = e.target.value;\r\n    this.setState({ value: newValue }, () => this.props.onChange(newValue));\r\n  }\r\n\r\n  handleBlur(e) {\r\n    const { type } = this.props;\r\n    const { value } = this.state;\r\n    if (type === 'number') {\r\n      const numericValue = Number(value);\r\n      if (numericValue >= Number(e.target.min) && numericValue <= Number(e.target.max)) {\r\n        this.props.onBlur(numericValue, e);\r\n      } else {\r\n        this.setState({ value: this.props.value });\r\n        this.props.onBlur(this.props.value, e);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props;\r\n\r\n    // HACK: This component uses onInput instead of onChange\r\n    // because IE11 fails to call onChange events when you paste/cut using context menu (RMB)\r\n    // We're using onInput because it works fine, and because for text input\r\n    // there's no difference between how onChange and onInput work\r\n    return (\r\n      <input\r\n        {..._.omit(['defaultValue', 'onChange'], this.props)}\r\n        className={classNames(className, 'text-input')}\r\n        value={this.state.value}\r\n        onBlur={this.handleBlur}\r\n        onInput={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './toggle.scss';\r\n\r\n// imports from styles\r\nexport default class Toggle extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.id = _.uniqueId();\r\n  }\r\n\r\n  onChange = e => {\r\n    this.props.onChange(e.target.checked);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"toggle-checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle-checkbox-cb\"\r\n          id={this.id}\r\n          onChange={this.onChange}\r\n          checked={this.props.checked}\r\n        />\r\n        <label htmlFor={this.id} className=\"toggle\">\r\n          <span></span>\r\n        </label>\r\n        <label htmlFor={this.id} className=\"text-label\">\r\n          {this.props.children}\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\nimport './styles.scss';\r\n\r\nexport default class CollapsibleBar extends PureComponent {\r\n  static propTypes = {\r\n    className: toBe.string,\r\n    children: toBe.any,\r\n    title: toBe.any,\r\n    defaultOpen: toBe.bool,\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = { open: props.defaultOpen || false };\r\n  }\r\n\r\n  render() {\r\n    const { children, title, className } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classNames('collapsible-bar', className, { open })}>\r\n        <div className=\"header\" onClick={() => this.setState(state => ({ open: !state.open }))}>\r\n          <div className=\"collapse-button\">\r\n            <FaChevronRight />\r\n          </div>\r\n          <div className=\"title\">{title}</div>\r\n        </div>\r\n        {children && <div className=\"collapsible-children\">{children}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport toBe from 'prop-types';\r\nimport { Popper } from 'react-popper';\r\nimport classNames from 'classnames';\r\nimport listensToClickOutside from 'react-onclickoutside';\r\n\r\nimport './overlay.scss';\r\n\r\nconst POPPER_MODIFIERS = {\r\n  preventOverflow: {\r\n    enabled: true,\r\n    padding: 10,\r\n    boundariesElement: 'viewport',\r\n  },\r\n};\r\n\r\nconst PLACEMENT_ARROW_MAPPING = {\r\n  right: 'left',\r\n  left: 'right',\r\n  top: 'bottom',\r\n  bottom: 'top',\r\n};\r\n\r\nconst getArrowPlacement = placement => {\r\n  return placement && PLACEMENT_ARROW_MAPPING[placement.split('-')[0]];\r\n};\r\n\r\nclass Overlay extends React.PureComponent {\r\n  static propTypes = {\r\n    placement: toBe.string,\r\n    overlayItem: toBe.any,\r\n    hideWhenOutOfBounds: toBe.bool,\r\n  };\r\n\r\n  static defaultTypes = {\r\n    placement: 'bottom',\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isVisible: false,\r\n    };\r\n    this.containerItemRef = React.createRef();\r\n    this.renderPopper = this.renderPopper.bind(this);\r\n    this.toggleOverlayVisibility = this.toggleOverlayVisibility.bind(this);\r\n  }\r\n\r\n  hideOverlay() {\r\n    this.setState({\r\n      isVisible: false,\r\n    });\r\n  }\r\n\r\n  toggleOverlayVisibility() {\r\n    this.setState({\r\n      isVisible: !this.state.isVisible,\r\n    });\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    const preventHiding = event && event.target.closest('.inner-popper-overlay'); // prevent overlays from hiding when a modal is opened within overlay\r\n\r\n    if (!preventHiding) {\r\n      this.hideOverlay();\r\n    }\r\n  }\r\n\r\n  renderPopper({ ref, style, placement, arrowProps, scheduleUpdate, outOfBoundaries }) {\r\n    const { children, hideWhenOutOfBounds } = this.props;\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        data-placement={placement}\r\n        className={classNames(\r\n          'inner-popper-overlay',\r\n          `arrow-${getArrowPlacement(placement)}`,\r\n          this.props.overlayClassName,\r\n          { 'out-of-bounds': outOfBoundaries && hideWhenOutOfBounds }\r\n        )}\r\n      >\r\n        <div className=\"arrow-hider\">\r\n          <div className=\"arrow\" ref={arrowProps.ref} style={arrowProps.style} />\r\n        </div>\r\n        <div\r\n          className=\"inner-popper-content\"\r\n          // ref={ref => this.setupPopperContentRef(scheduleUpdate, ref)}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { placement, overlayItem } = this.props;\r\n    const { isVisible } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"overlay-item\"\r\n          ref={this.containerItemRef}\r\n          onClick={this.toggleOverlayVisibility}\r\n        >\r\n          {overlayItem}\r\n        </div>\r\n        {isVisible &&\r\n          ReactDOM.createPortal(\r\n            <Popper\r\n              container={document.body}\r\n              modifiers={POPPER_MODIFIERS}\r\n              placement={placement}\r\n              referenceElement={this.containerItemRef.current}\r\n            >\r\n              {this.renderPopper}\r\n            </Popper>,\r\n            document.body\r\n          )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default listensToClickOutside(Overlay);\r\n","import React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './toggle-button.scss';\r\n\r\nexport default class ToggleButton extends React.PureComponent {\r\n  static propTypes = {\r\n    text: toBe.string,\r\n    onToggle: toBe.func,\r\n    active: toBe.bool,\r\n  };\r\n\r\n  render() {\r\n    const { active, onToggle, text } = this.props;\r\n    return (\r\n      <div\r\n        className={classNames('toggle-button', { active: active })}\r\n        onClick={() => onToggle(!active)}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const SORT = {\r\n  DEFAULT: 'default',\r\n  PROTAGONIST: 'protagonist',\r\n  RANK_ASC: 'rankAsc',\r\n  RANK_DESC: 'rankDesc',\r\n};\r\n\r\nexport const CHART_MIN_MAX = [1, 28];\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\nimport { FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\nimport { Range, getTrackBackground } from 'react-range';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Input from 'components/Shared/Input/Input';\r\n\r\nimport { CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nexport default function ChartFilter({ filterValue, onChange }) {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filterValue);\r\n  const type = _.getOr(null, 'type', filterValue);\r\n  let buttonText = 'фильтр чартов';\r\n  if (filterValue) {\r\n    const t = type || '';\r\n    buttonText = range[0] === range[1] ? `${t}${range[0]}` : `${t}${range[0]} - ${t}${range[1]}`;\r\n    buttonText = 'чарты: ' + buttonText;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Overlay\r\n        overlayClassName=\"chart-range-overlay-outer\"\r\n        overlayItem={\r\n          <button className=\"filter-charts-button btn btn-sm btn-dark\">{buttonText}</button>\r\n        }\r\n      >\r\n        <div className=\"chart-range-overlay\">\r\n          <div className=\"buttons\">\r\n            <ToggleButton\r\n              text=\"S\"\r\n              active={!type || type === 'S'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  range,\r\n                  type: !active ? 'D' : null,\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"D\"\r\n              active={!type || type === 'D'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  range,\r\n                  type: !active ? 'S' : null,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <Range\r\n            values={range}\r\n            step={1}\r\n            min={CHART_MIN_MAX[0]}\r\n            max={CHART_MIN_MAX[1]}\r\n            onChange={r => onChange({ type, range: r })}\r\n            renderTrack={({ props, children }) => (\r\n              <div\r\n                onMouseDown={props.onMouseDown}\r\n                onTouchStart={props.onTouchStart}\r\n                style={{\r\n                  ...props.style,\r\n                  height: '10px',\r\n                  display: 'flex',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <div\r\n                  ref={props.ref}\r\n                  style={{\r\n                    height: '6px',\r\n                    width: '100%',\r\n                    borderRadius: '3px',\r\n                    background: getTrackBackground({\r\n                      values: range,\r\n                      colors: ['#ccc', '#337ab7', '#ccc'],\r\n                      min: CHART_MIN_MAX[0],\r\n                      max: CHART_MIN_MAX[1],\r\n                    }),\r\n                    alignSelf: 'center',\r\n                  }}\r\n                >\r\n                  {children}\r\n                </div>\r\n              </div>\r\n            )}\r\n            renderThumb={({ props, isDragged }) => (\r\n              <div\r\n                {...props}\r\n                style={{\r\n                  ...props.style,\r\n                  height: '12px',\r\n                  width: '12px',\r\n                  borderRadius: '6px',\r\n                  backgroundColor: '#FFF',\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  boxShadow: '0px 2px 3px #AAA',\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    height: '6px',\r\n                    width: '6px',\r\n                    borderRadius: '3px',\r\n                    backgroundColor: isDragged ? '#337ab7' : '#CCC',\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n          />\r\n          <div className=\"inputs\">\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  type,\r\n                  range: [Math.max(range[0] - 1, CHART_MIN_MAX[0]), range[1]],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={CHART_MIN_MAX[0]}\r\n              max={Math.min(CHART_MIN_MAX[1], range[1])}\r\n              value={range[0]}\r\n              onBlur={value => {\r\n                onChange({ type, range: [value, range[1]] });\r\n              }}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMin = Math.min(range[0] + 1, CHART_MIN_MAX[1]);\r\n                onChange({\r\n                  type,\r\n                  range: [newMin, range[1] < newMin ? newMin : range[1]],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMax = Math.max(range[1] - 1, CHART_MIN_MAX[0]);\r\n                onChange({\r\n                  type,\r\n                  range: [range[0] > newMax ? newMax : range[0], newMax],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={Math.max(CHART_MIN_MAX[0], range[0])}\r\n              max={CHART_MIN_MAX[1]}\r\n              value={range[1]}\r\n              onBlur={value => onChange({ type, range: [range[0], value] })}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  type,\r\n                  range: [range[0], Math.min(range[1] + 1, CHART_MIN_MAX[1])],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Overlay>\r\n    </div>\r\n  );\r\n}\r\n","if (localStorage) {\r\n  window.debugOn = () => {\r\n    localStorage.setItem('debug', 1);\r\n  };\r\n  window.debugOff = () => {\r\n    localStorage.removeItem('debug');\r\n  };\r\n}\r\n\r\nexport const DEBUG = localStorage && localStorage.getItem('debug');\r\n","export const fetchJson = async ({ url }) => {\r\n  try {\r\n    const response = await fetch(url);\r\n    if (response.status >= 200 && response.status < 300) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      throw Error('HTTP Status ' + response.status);\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\n\r\nimport { DEBUG } from 'constants/env';\r\n\r\nconst SET_RANKINGS = `RANKINGS/SET_RANKINGS`;\r\nconst RANKING_CHANGE_SET = `RANKINGS/RANKING_CHANGE_SET`;\r\n\r\nconst isFullScore = score => {\r\n  return (\r\n    _.isInteger(score.perfect) &&\r\n    _.isInteger(score.great) &&\r\n    _.isInteger(score.good) &&\r\n    _.isInteger(score.bad) &&\r\n    _.isInteger(score.miss) &&\r\n    _.isInteger(score.score)\r\n  );\r\n};\r\n\r\nconst getMaxScore = (score, song) => {\r\n  const maxCombo = score.perfect + score.great + score.good + score.bad + score.miss;\r\n  let maxScore = maxCombo * 1000 + (maxCombo - 50) * 1000; // all perfects + 51 combo bonus\r\n  if (song.chartLevel > 10) {\r\n    maxScore *= song.chartLevel / 10; // Level multiplier\r\n  }\r\n  if (song.chartType === 'D') {\r\n    maxScore *= 1.2; // Double multiplier\r\n  }\r\n  maxScore += 300000; // SSS bonus\r\n  return maxScore;\r\n};\r\n\r\nexport default function reducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case SET_RANKINGS:\r\n      return {\r\n        ...state,\r\n        data: action.ranking,\r\n      };\r\n    case RANKING_CHANGE_SET:\r\n      const hasPrevList = !_.isEmpty(action.listPrev);\r\n      return {\r\n        ...state,\r\n        data: _.map(playerOriginal => {\r\n          const player = {\r\n            ...playerOriginal,\r\n            prevRating: _.get(playerOriginal.name, action.rankingsPointsMap),\r\n          };\r\n          if (!hasPrevList) {\r\n            return player; // First time opening this thing and we didn't have any previous data\r\n          }\r\n          if (!_.includes(player.name, action.listPrev)) {\r\n            return { ...player, change: 'NEW' };\r\n          } else if (!_.includes(player.name, action.listNow)) {\r\n            // Should NEVER happen, idk if this is possible\r\n            return { ...player, change: '?' };\r\n          } else {\r\n            return {\r\n              ...player,\r\n              change:\r\n                _.indexOf(player.name, action.listPrev) - _.indexOf(player.name, action.listNow),\r\n            };\r\n          }\r\n        }, state.data),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getRankings = data => {\r\n  const defaultInfo = {\r\n    count: 0,\r\n    battleCount: 0,\r\n    countAcc: 0,\r\n    rating: 1000,\r\n    grades: { F: 0, D: 0, C: 0, B: 0, A: 0, S: 0, SS: 0, SSS: 0 },\r\n    totalScore: { S: 0, D: 0 },\r\n    sumAccuracy: 0,\r\n    history: [],\r\n    lastPlace: null,\r\n  };\r\n  const playerInfo = {};\r\n  const battles = [];\r\n  data.forEach(song => {\r\n    const validResults = [];\r\n    _.orderBy(['score'], ['desc'], song.results).forEach(score => {\r\n      if (!score.nickname.includes('???')) {\r\n        validResults.push(score);\r\n\r\n        if (!playerInfo[score.nickname]) {\r\n          playerInfo[score.nickname] = _.cloneDeep(defaultInfo);\r\n        }\r\n\r\n        playerInfo[score.nickname].count++;\r\n        if (score.accuracy) {\r\n          playerInfo[score.nickname].countAcc++;\r\n          playerInfo[score.nickname].sumAccuracy += score.accuracy;\r\n        }\r\n        playerInfo[score.nickname].totalScore[song.chartType] += score.score;\r\n        playerInfo[score.nickname].grades[score.grade.replace('+', '')]++;\r\n      }\r\n      if (isFullScore(score)) {\r\n        song.maxScore = getMaxScore(score, song);\r\n      }\r\n    });\r\n\r\n    validResults.forEach((score, scoreIndex) => {\r\n      const enemyScores = validResults.length > 1 ? validResults.slice(scoreIndex + 1) : [];\r\n\r\n      enemyScores.forEach(enemyScore => {\r\n        if (score.isRank === enemyScore.isRank && score.nickname !== enemyScore.nickname) {\r\n          battles.push([score, enemyScore, song]);\r\n        }\r\n      });\r\n    });\r\n  });\r\n  _.flow([\r\n    // Apply battles chronologically instead of randomly\r\n    _.sortBy(([s1, s2]) => Math.max(s1.dateObject.getTime(), s2.dateObject.getTime())),\r\n    _.forEach(([score, enemyScore, song]) => {\r\n      // For each battle\r\n      if (!playerInfo[enemyScore.nickname]) {\r\n        playerInfo[enemyScore.nickname] = _.cloneDeep(defaultInfo);\r\n      }\r\n\r\n      const scoreMultiplier = score.isRank ? 1.2 : 1;\r\n      let maxScore = null;\r\n      if (song.maxScore) {\r\n        maxScore = song.maxScore * scoreMultiplier;\r\n        if (\r\n          Math.max(maxScore, score.score, enemyScore.score) !== maxScore &&\r\n          !score.isRank &&\r\n          (!score.isExactDate || !enemyScore.isExactDate)\r\n        ) {\r\n          maxScore *= 1.2;\r\n          // Rank from machine best wasn't recognized most likely.\r\n          // Increasing max score by 20% is fine\r\n        }\r\n        if (Math.max(maxScore, score.score, enemyScore.score) !== maxScore) {\r\n          // If calculated max score isn't max score anyway, use current scores as max + cherry on top\r\n          maxScore = Math.max(..._.map('score', song.results));\r\n        }\r\n      }\r\n      // console.log(song.maxScore * scoreMultiplier, score.score, enemyScore.score);\r\n      // Rating at the start of battle for this score\r\n      score.startingRating = playerInfo[score.nickname].rating;\r\n      enemyScore.startingRating = playerInfo[enemyScore.nickname].rating;\r\n      // Counting the number of battles\r\n      playerInfo[score.nickname].battleCount++;\r\n      playerInfo[enemyScore.nickname].battleCount++;\r\n\r\n      // This is one match between two players\r\n      //// Elo formula\r\n      const r1 = playerInfo[score.nickname].rating;\r\n      const r2 = playerInfo[enemyScore.nickname].rating;\r\n      const R1 = 10 ** (r1 / 400);\r\n      const R2 = 10 ** (r2 / 400);\r\n      const E1 = R1 / (R1 + R2);\r\n      const E2 = R2 / (R1 + R2);\r\n      // S1/S2 is the factor of winning\r\n      // S1 = 1  S2 = 0  -- player 1 wins\r\n      // S1 = 0.5  S2 = 0.5  -- draw\r\n      // I'm using difference in score to get this value, it ranges from 0 from 1\r\n      // Current formula assigns 100% win if you have at least ~15% more score than the other player\r\n      // 3.000 vs 3.500 score -- 0 / 1 win percentage -- clear win for player 2\r\n      // 3.000 vs 3.300 score -- 0.17 / 0.83 win percentage -- ranking is not affected as strongly as 0 / 1\r\n      // 3.000 vs 3.100 score -- 0.38 / 0.62 win percentage -- almost draw\r\n      let A = score.score;\r\n      let B = enemyScore.score;\r\n      let S1, S2;\r\n      if (A === B) {\r\n        S1 = S2 = 0.5;\r\n      } else if (maxScore && A !== 0 && B !== 0) {\r\n        A = maxScore / A - 1;\r\n        B = maxScore / B - 1;\r\n        S1 = (B / (A + B) - 0.5) * 5 + 0.5;\r\n        S2 = (A / (A + B) - 0.5) * 5 + 0.5;\r\n      } else {\r\n        // console.log('////////// NO MAX SCORE /////////////');\r\n        S1 = A > B ? 1 : B < A ? 0 : 0.5;\r\n        S2 = 1 - S1;\r\n      }\r\n      S1 = Math.max(0, Math.min(1, S1)); // Set strict boundaries to [0, 1]\r\n      S2 = Math.max(0, Math.min(1, S2));\r\n      // S1old = Math.max(0, Math.min(1, S1old)); // Set strict boundaries to [0, 1]\r\n      // S2old = Math.max(0, Math.min(1, S2old));\r\n      // K is the coeficient that decides how strongly this match affects rating\r\n      // Higher level -- affects more\r\n      // More playcount -- affects less (just to make first matches place people faster)\r\n      // const k1pow = Math.min(1, playerInfo[score.nickname].battleCount / 100) * 0.3; // battlecount 0 -> 150 => results in 0 -> 0.5 value here\r\n      // const k2pow = Math.min(1, playerInfo[enemyScore.nickname].battleCount / 100) * 0.3; // battlecount 0 -> 150 => results in 0 -> 0.5 value here\r\n\r\n      let kRatingDiff = Math.abs(E1 - E2) + 0.6;\r\n      // prettier-ignore\r\n      if ((S1 - E1 > 0) === (E1 < 0.5) && Math.abs(E1 - E2) > 0.1) {\r\n        const difference = Math.abs(E1 - E2) / 2.6;\r\n        kRatingDiff *= 1 - difference; // When someone with lower rank wins against someone with higher rank\r\n      }\r\n      const kRating1 = Math.max(0, Math.min(1, (r1 - 500) / 1000));\r\n      const kRating2 = Math.max(0, Math.min(1, (r2 - 500) / 1000));\r\n      const maxK1 = 50 + 40 * kRating1;\r\n      const maxK2 = 50 + 40 * kRating2;\r\n      const kLevel1 = Math.max(\r\n        1,\r\n        Math.min(maxK1, (song.chartLevel / 25) ** ((kRating1 - 0.5) * 5 + 2.5) * maxK1)\r\n      );\r\n      const kLevel2 = Math.max(\r\n        1,\r\n        Math.min(maxK2, (song.chartLevel / 25) ** ((kRating2 - 0.5) * 5 + 2.5) * maxK2)\r\n      );\r\n\r\n      const K1 = kLevel1 / kRatingDiff;\r\n      const K2 = kLevel2 / kRatingDiff;\r\n      // const K1 = (kLevel + (1 - kRating1) * (maxK - kLevel)) / kRatingDiff;\r\n      // const K2 = (kLevel + (1 - kRating2) * (maxK - kLevel)) / kRatingDiff;\r\n      // const K1D = (Math.max(r1 - 600, 0) / 1500 + 1) ** 3 / 2;\r\n      // const K2D = (Math.max(r2 - 600, 0) / 1500 + 1) ** 3 / 2;\r\n      // const K1 = Math.min(20, Math.max(4, song.chartLevel - 4)) ** (2 - k1pow) / K1D / RD;\r\n      // const K2 = Math.min(20, Math.max(4, song.chartLevel - 4)) ** (2 - k2pow) / K2D / RD;\r\n      let dr1 = K1 * (S1 - E1);\r\n      let dr2 = K2 * (S2 - E2);\r\n      // Do not decrease rating if you have SSS - RIP zero-sum algorithm\r\n      dr1 = dr1 < 0 && score.grade === 'SSS' ? 0 : dr1;\r\n      dr2 = dr2 < 0 && enemyScore.grade === 'SSS' ? 0 : dr2;\r\n      // Recording this value for display\r\n      score.ratingDiff = (score.ratingDiff || 0) + dr1;\r\n      enemyScore.ratingDiff = (enemyScore.ratingDiff || 0) + dr2;\r\n      score.ratingDiffLast = dr1;\r\n      enemyScore.ratingDiffLast = dr2;\r\n\r\n      if (DEBUG) {\r\n        // if (song.song === 'Club Night') {\r\n        // if (score.nickname === 'Liza' || enemyScore.nickname === 'Liza') {\r\n        // if (!song.maxScore) {\r\n        // console.log(\r\n        //   `${song.chartLabel} - ${score.nickname} / ${enemyScore.nickname} - ${song.song}`\r\n        // );\r\n        // console.log(\r\n        //   `- ${score.score} / ${enemyScore.score} (${maxScore}) - R ${S1.toFixed(2)}/${S2.toFixed(\r\n        //     2\r\n        //   )} E ${E1.toFixed(2)} / ${E2.toFixed(2)}`\r\n        // );\r\n        // // console.log(`- old R ${S1old.toFixed(2)}/${S2old.toFixed(2)}`);\r\n        // console.log(\r\n        //   `- Rating ${r1.toFixed(2)} / ${r2.toFixed(2)} - ${dr1.toFixed(2)} / ${dr2.toFixed(\r\n        //     2\r\n        //   )} - K ${K1.toFixed(2)} ${K2.toFixed(2)} RD ${kRatingDiff.toFixed(1)}`\r\n        // );\r\n        // }\r\n      }\r\n\r\n      // Change rating as a result of this battle\r\n      playerInfo[score.nickname].rating = r1 + dr1;\r\n      playerInfo[enemyScore.nickname].rating = r2 + dr2;\r\n      // Rating floor\r\n      playerInfo[score.nickname].rating = Math.max(100, playerInfo[score.nickname].rating);\r\n      playerInfo[enemyScore.nickname].rating = Math.max(\r\n        100,\r\n        playerInfo[enemyScore.nickname].rating\r\n      );\r\n\r\n      const namesSorted = _.flow(\r\n        _.keys,\r\n        _.map(name => ({ name, rating: playerInfo[name].rating })),\r\n        _.orderBy(['rating'], ['desc']),\r\n        _.map('name')\r\n      )(playerInfo);\r\n      const p1Place = namesSorted.indexOf(score.nickname) + 1;\r\n      const p2Place = namesSorted.indexOf(enemyScore.nickname) + 1;\r\n      const battleDate =\r\n        score.dateObject > enemyScore.dateObject ? score.dateObject : enemyScore.dateObject;\r\n      if (\r\n        (playerInfo[score.nickname].lastPlace !== p1Place &&\r\n          playerInfo[score.nickname].battleCount > 20) ||\r\n        (playerInfo[score.nickname].battleCount === 21 &&\r\n          !playerInfo[score.nickname].history.length)\r\n      ) {\r\n        // Place in rankings changed!\r\n        playerInfo[score.nickname].history.push({\r\n          place: p1Place,\r\n          date: battleDate.getTime(),\r\n        });\r\n      }\r\n      if (\r\n        (playerInfo[enemyScore.nickname].lastPlace !== p2Place &&\r\n          playerInfo[enemyScore.nickname].battleCount > 20) ||\r\n        (playerInfo[enemyScore.nickname].battleCount === 21 &&\r\n          !playerInfo[enemyScore.nickname].history.length)\r\n      ) {\r\n        playerInfo[enemyScore.nickname].history.push({\r\n          place: p2Place,\r\n          date: battleDate.getTime(),\r\n        });\r\n      }\r\n      playerInfo[score.nickname].lastPlace = p1Place;\r\n      playerInfo[enemyScore.nickname].lastPlace = p2Place;\r\n    }),\r\n  ])(battles);\r\n\r\n  const ranking = _.flow(\r\n    _.keys,\r\n    _.map(key => ({\r\n      ..._.omit(['countAcc', 'sumAccuracy'], playerInfo[key]),\r\n      name: key,\r\n      accuracy:\r\n        playerInfo[key].countAcc > 0\r\n          ? Math.round((playerInfo[key].sumAccuracy / playerInfo[key].countAcc) * 100) / 100\r\n          : null,\r\n      rating: Math.round(playerInfo[key].rating),\r\n      ratingRaw: playerInfo[key].rating,\r\n    })),\r\n    _.remove(i => i.battleCount < 20),\r\n    _.orderBy(['ratingRaw'], ['desc'])\r\n  )(playerInfo);\r\n  return ranking;\r\n};\r\n\r\nexport const setRankingsAction = ranking => ({\r\n  type: SET_RANKINGS,\r\n  ranking,\r\n});\r\n\r\nconst getListOfNames = _.map('name');\r\nconst getMapOfRatings = _.flow(\r\n  _.map(q => [q.name, q.rating]),\r\n  _.fromPairs\r\n);\r\nexport const setRankings = ranking => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(setRankingsAction(ranking));\r\n    try {\r\n      const [lastChangedRanking, lastChangedRankingPoints, lastFetchedRanking] = await Promise.all([\r\n        localForage.getItem('lastChangedRanking'),\r\n        localForage.getItem('lastChangedRankingPoints'),\r\n        localForage.getItem('lastFetchedRanking'),\r\n      ]);\r\n      const listNow = getListOfNames(ranking);\r\n      const listLastFetched = getListOfNames(lastFetchedRanking);\r\n      const listLastChanged = getListOfNames(lastChangedRanking);\r\n      const mapPointsNow = getMapOfRatings(ranking);\r\n      const mapPointsLastFetched = getMapOfRatings(lastFetchedRanking);\r\n      const mapPointsLastChanged = getMapOfRatings(lastChangedRankingPoints);\r\n      let rankingsPointsMap = mapPointsLastChanged;\r\n      if (!_.isEqual(mapPointsNow, mapPointsLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRankingPoints', lastFetchedRanking);\r\n        rankingsPointsMap = mapPointsLastFetched;\r\n      }\r\n      let listPrev = listLastChanged;\r\n      if (!_.isEqual(listNow, listLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRanking', lastFetchedRanking);\r\n        listPrev = listLastFetched;\r\n      }\r\n      dispatch({\r\n        type: RANKING_CHANGE_SET,\r\n        listNow,\r\n        listPrev,\r\n        rankingsPointsMap,\r\n      });\r\n      // console.log(listNow, listLastFetched, listLastChanged);\r\n    } catch (error) {\r\n      console.warn('Cannot get ranking from local storage', error);\r\n    }\r\n  };\r\n};\r\n","import _ from 'lodash/fp';\r\n// import localForage from 'localforage';\r\n//\r\n// import { DEBUG } from 'constants/env';\r\n\r\nconst SET_PROFILES = `PROFILES/SET_PROFILES`;\r\n\r\nexport default function reducer(state = { data: {} }, action) {\r\n  switch (action.type) {\r\n    case SET_PROFILES:\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getProfiles = (data, ranking) => {\r\n  const profiles = {};\r\n  const initializeProfile = nickname => {\r\n    const rankingHistory = _.flow(\r\n      _.find({ name: nickname }),\r\n      _.get('history'),\r\n      history =>\r\n        history && [...history, { place: _.get('place', _.last(history)), date: Date.now() }]\r\n    )(ranking);\r\n    profiles[nickname] = { resultsByGrade: {}, resultsByLevel: {}, rankingHistory };\r\n  };\r\n  const addResultData = (chart, result) => {\r\n    if (!profiles[result.nickname]) {\r\n      initializeProfile(result.nickname);\r\n    }\r\n    const profile = profiles[result.nickname];\r\n    profile.resultsByGrade[result.grade] = [\r\n      ...(profile.resultsByGrade[result.grade] || []),\r\n      { result, chart },\r\n    ];\r\n    profile.resultsByLevel[chart.chartLevel] = [\r\n      ...(profile.resultsByLevel[chart.chartLevel] || []),\r\n      { result, chart },\r\n    ];\r\n  };\r\n  data.forEach(chart => {\r\n    chart.results.forEach(result => {\r\n      addResultData(chart, result);\r\n    });\r\n  });\r\n  // console.log(profiles);\r\n  return profiles;\r\n};\r\n\r\nexport const setProfilesAction = data => ({\r\n  type: SET_PROFILES,\r\n  data,\r\n});\r\n\r\nexport const setProfiles = ranking => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(setProfilesAction(ranking));\r\n  };\r\n};\r\n","import _ from 'lodash/fp';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\n\r\nimport { getRankings, setRankings } from './ranking';\r\nimport { getProfiles, setProfiles } from './profiles';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TOP/LOADING`;\r\nconst SUCCESS = `TOP/SUCCESS`;\r\nconst ERROR = `TOP/ERROR`;\r\nconst SET_FILTER = `TOP/SET_FILTER`;\r\nconst RESET_FILTER = `TOP/RESET_FILTER`;\r\n\r\nexport const defaultFilter = { showRank: true };\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n  filter: defaultFilter,\r\n};\r\n\r\nconst preprocessData = _.flow(\r\n  _.get('top'),\r\n  _.values,\r\n  _.map(item => ({\r\n    song: item.track,\r\n    chartLabel: item.chart_label,\r\n    chartLevel: item.chart_label.slice(1),\r\n    chartType: item.chart_label.slice(0, 1),\r\n    mix: item.mix,\r\n    results: item.results.map((res, index) => {\r\n      const perfects = (Math.sqrt(res.perfects) * _.toInteger(item.chart_label.slice(1))) / 2;\r\n      const acc = perfects\r\n        ? Math.floor(\r\n            ((perfects * 100 + res.greats * 60 + res.goods * 30 + res.misses * -20) /\r\n              (perfects + res.greats + res.goods + res.bads + res.misses)) *\r\n              100\r\n          ) / 100\r\n        : null;\r\n      return {\r\n        nickname: res.nickname,\r\n        date: res.gained,\r\n        dateObject: new Date(res.gained),\r\n        grade: res.grade,\r\n        isExactDate: !!res.exact_gain_date,\r\n        score: res.score,\r\n        perfect: res.perfects,\r\n        great: res.greats,\r\n        good: res.goods,\r\n        bad: res.bads,\r\n        miss: res.misses,\r\n        combo: res.max_combo,\r\n        mods: res.mods_list,\r\n        isRank: !!res.rank_mode,\r\n        accuracy: acc < 0 ? 0 : acc,\r\n      };\r\n    }),\r\n  })),\r\n  _.map(song => {\r\n    return {\r\n      ...song,\r\n      latestScoreDate: song.results.reduce(\r\n        (latest, current) => (current.date > latest ? current.date : latest),\r\n        song.results[0].date\r\n      ),\r\n      results: song.results.map(res => ({\r\n        ...res,\r\n        hasRankScore: _.some({ nickname: res.nickname, isRank: true }, song.results),\r\n      })),\r\n    };\r\n  }),\r\n  _.orderBy(['latestScoreDate', 'song', 'chartLevel'], ['desc', 'asc', 'desc'])\r\n);\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTopScores = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await fetchJson({\r\n        url: `${HOST}/top`,\r\n      });\r\n      const processedData = preprocessData(data);\r\n      dispatch({ type: SUCCESS, data: processedData });\r\n      const rankings = getRankings(processedData);\r\n      dispatch(setRankings(rankings));\r\n      const profiles = getProfiles(processedData, rankings);\r\n      dispatch(setProfiles(profiles));\r\n      return processedData;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\nexport const resetFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n","export const HOST = 'https://vps720616.ovh.net:5000';\r\n","import React from 'react';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport moment from 'moment';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\n\r\nconst timeStyle = {\r\n  flavour: 'long',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nexport const tooltipFormatter = date => date.toLocaleDateString();\r\nexport const tooltipFormatterForBests = date => (\r\n  <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n    <div>точная дата взятия неизвестна</div>\r\n    <div>скор был записан с my best или machine best</div>\r\n    <div>дата записи: {date.toLocaleDateString()}</div>\r\n  </div>\r\n);\r\n\r\nconst nowDate = new Date();\r\nexport const getTimeAgo = date => {\r\n  const strTimeAgo = timeAgo.format(date, timeStyle);\r\n  if (!strTimeAgo) {\r\n    const dayDiff = moment(nowDate)\r\n      .startOf('day')\r\n      .diff(moment(date).startOf('day'), 'days');\r\n    return dayDiff === 0 ? 'сегодня' : dayDiff === 1 ? 'вчера' : '';\r\n  } else {\r\n    return strTimeAgo;\r\n  }\r\n};\r\n","export const colorsArray = [\r\n  '#FF6633',\r\n  '#66991A',\r\n  '#6666FF',\r\n  '#E6B333',\r\n  '#CC80CC',\r\n  '#E64D66',\r\n  '#4DB3FF',\r\n  '#99E6E6',\r\n  '#99FF99',\r\n  '#FFFF99',\r\n  '#FFB399',\r\n  '#809900',\r\n  '#00B3E6',\r\n  '#3366E6',\r\n  '#999966',\r\n  '#B34D4D',\r\n  '#80B300',\r\n  '#E6B3B3',\r\n  '#6680B3',\r\n  '#66664D',\r\n  '#FF99E6',\r\n  '#CCFF1A',\r\n  '#FF1A66',\r\n  '#33FFCC',\r\n  '#4D8000',\r\n  '#B33300',\r\n  '#991AFF',\r\n  '#E666FF',\r\n  '#1AB399',\r\n  '#E666B3',\r\n  '#33991A',\r\n  '#4D8066',\r\n  '#CC9999',\r\n  '#B3B31A',\r\n  '#00E680',\r\n  '#E6331A',\r\n  '#809980',\r\n  '#E6FF80',\r\n  '#1AFF33',\r\n  '#999933',\r\n  '#FF3380',\r\n  '#CCCC00',\r\n  '#66E64D',\r\n  '#4D80CC',\r\n  '#9900B3',\r\n  '#4DB380',\r\n  '#FF4D4D',\r\n];\r\n","import _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport matchSorter from 'match-sorter';\r\n\r\nimport { SORT, CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nexport const playersSelector = createSelector(\r\n  state => state.top.data,\r\n  _.flow(\r\n    _.flatMap(_.get('results')),\r\n    _.map('nickname'),\r\n    _.uniq,\r\n    _.sortBy(_.toLower),\r\n    _.map(name => ({ label: name, value: name }))\r\n  )\r\n);\r\n\r\nconst filterCharts = (filter, rows) => {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filter);\r\n  const type = _.getOr(null, 'type', filter);\r\n\r\n  const filtered = _.flow(\r\n    _.filter(row => {\r\n      return (\r\n        row.chartLevel >= range[0] &&\r\n        row.chartLevel <= range[1] &&\r\n        (!type || type === row.chartType)\r\n      );\r\n    })\r\n  )(rows);\r\n  return filtered;\r\n};\r\n\r\nconst getFilteredData = (data, filter) => {\r\n  const names = _.map('value', filter.players);\r\n  const namesOr = _.map('value', filter.playersOr);\r\n  const namesNot = _.map('value', filter.playersNot);\r\n  const sortingType = _.get('value', filter.sortingType);\r\n  const protagonist = _.get('value', filter.protagonist);\r\n  const excludeAntagonists = _.map('value', filter.excludeAntagonists);\r\n\r\n  const defaultSorting = [_.orderBy(['latestScoreDate'], ['desc'])];\r\n  const protagonistSorting = [\r\n    _.filter(row => _.map('nickname', row.results).includes(protagonist)),\r\n    _.map(row => {\r\n      const protIndex = _.findIndex({ nickname: protagonist }, row.results);\r\n      const protScore = row.results[protIndex].score;\r\n      const enemies = _.flow([\r\n        _.take(protIndex),\r\n        _.uniqBy('nickname'),\r\n        _.remove(res => excludeAntagonists.includes(res.nickname) || res.score === protScore),\r\n      ])(row.results);\r\n      const distance = Math.sqrt(\r\n        _.reduce((dist, enemy) => dist + (enemy.score / protScore - 0.99) ** 2, 0, enemies)\r\n      );\r\n      return {\r\n        ...row,\r\n        distanceFromProtagonist: distance,\r\n      };\r\n    }),\r\n    _.orderBy(['distanceFromProtagonist'], ['desc']),\r\n  ];\r\n  const getScoreSorting = direction => [\r\n    _.filter(row => _.map('nickname', row.results).includes(protagonist)),\r\n    _.orderBy(\r\n      [\r\n        row => {\r\n          return _.getOr(\r\n            direction === 'asc' ? Infinity : -Infinity,\r\n            'ratingDiff',\r\n            _.find({ nickname: protagonist }, row.results)\r\n          );\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const sortingFunctions =\r\n    {\r\n      [SORT.DEFAULT]: defaultSorting,\r\n      [SORT.PROTAGONIST]: protagonistSorting,\r\n      [SORT.RANK_ASC]: getScoreSorting('asc'),\r\n      [SORT.RANK_DESC]: getScoreSorting('desc'),\r\n    }[sortingType] || defaultSorting;\r\n\r\n  return _.flow(\r\n    _.compact([\r\n      filter.chartRange && (items => filterCharts(filter.chartRange, items)),\r\n      !filter.showRank &&\r\n        _.map(row => ({ ...row, results: _.filter(res => !res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        filter.showOnlyRank &&\r\n        _.map(row => ({ ...row, results: _.filter(res => res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        !filter.showOnlyRank &&\r\n        !filter.showRankAndNorank &&\r\n        _.map(row => {\r\n          const occuredNames = [];\r\n          return {\r\n            ...row,\r\n            results: _.filter(res => {\r\n              const alreadyOccured = occuredNames.includes(res.nickname);\r\n              occuredNames.push(res.nickname);\r\n              return !alreadyOccured;\r\n            }, row.results),\r\n          };\r\n        }),\r\n      (names.length || namesOr.length || namesNot.length) &&\r\n        _.filter(row => {\r\n          const rowNames = _.map('nickname', row.results);\r\n          return (\r\n            (!names.length || _.every(name => rowNames.includes(name), names)) &&\r\n            (!namesOr.length || _.some(name => rowNames.includes(name), namesOr)) &&\r\n            (!namesNot.length || !_.some(name => rowNames.includes(name), namesNot))\r\n          );\r\n        }),\r\n      _.filter(row => _.size(row.results)),\r\n      ...sortingFunctions,\r\n      filter.song && (items => matchSorter(items, filter.song, { keys: ['song'] })),\r\n      _.map(song => {\r\n        let topPlace = 1;\r\n        const occuredNicknames = [];\r\n        return {\r\n          ...song,\r\n          results: song.results.map((res, index) => {\r\n            const isSecondOccurenceInResults = occuredNicknames.includes(res.nickname);\r\n            occuredNicknames.push(res.nickname);\r\n            if (index === 0) {\r\n              topPlace = 1;\r\n            } else if (\r\n              !isSecondOccurenceInResults &&\r\n              res.score !== _.get([index - 1, 'score'], song.results)\r\n            ) {\r\n              topPlace += 1;\r\n            }\r\n            return {\r\n              ...res,\r\n              topPlace,\r\n              isSecondOccurenceInResults,\r\n            };\r\n          }),\r\n        };\r\n      }),\r\n    ])\r\n  )(data);\r\n};\r\n\r\nexport const filteredDataSelector = createSelector(\r\n  state => state.top.data,\r\n  state => state.top.filter,\r\n  getFilteredData\r\n);\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash/fp';\r\nimport Select from 'react-select';\r\nimport classNames from 'classnames';\r\nimport numeral from 'numeral';\r\nimport localForage from 'localforage';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport { FaRedoAlt, FaSearch, FaYoutube } from 'react-icons/fa';\r\n\r\n// styles\r\nimport 'react-responsive-ui/style.css';\r\nimport './leaderboard.scss';\r\n\r\n// components\r\nimport Loader from 'components/Shared/Loader';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport CollapsibleBar from 'components/Shared/CollapsibleBar';\r\nimport ChartFilter from './ChartFilter';\r\n\r\n// constants\r\nimport { SORT } from 'constants/leaderboard';\r\nimport { DEBUG } from 'constants/env';\r\n\r\n// reducers\r\nimport { fetchTopScores, setFilter, resetFilter, defaultFilter } from 'reducers/top';\r\n\r\n// utils\r\nimport { tooltipFormatter, tooltipFormatterForBests, getTimeAgo } from 'utils/leaderboards';\r\nimport { colorsArray } from 'utils/colors';\r\nimport { playersSelector, filteredDataSelector } from './selectors';\r\n\r\n// code\r\nconst sortingOptions = [\r\n  {\r\n    label: 'новизне скоров',\r\n    value: SORT.DEFAULT,\r\n  },\r\n  {\r\n    label: 'отставанию от остальных',\r\n    value: SORT.PROTAGONIST,\r\n  },\r\n  ...(DEBUG\r\n    ? [\r\n        {\r\n          label: 'от худших результатов',\r\n          value: SORT.RANK_ASC,\r\n        },\r\n        {\r\n          label: 'от лучших результатов',\r\n          value: SORT.RANK_DESC,\r\n        },\r\n      ]\r\n    : []),\r\n];\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    players: playersSelector(state),\r\n    filteredData: filteredDataSelector(state),\r\n    data: state.top.data,\r\n    filter: state.top.filter,\r\n    error: state.top.error,\r\n    isLoading: state.top.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopScores,\r\n  setFilter,\r\n  resetFilter,\r\n};\r\n\r\nclass Leaderboard extends Component {\r\n  static propTypes = {\r\n    match: toBe.object,\r\n    data: toBe.array,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  state = { showItemsCount: 20 };\r\n\r\n  setFilter = _.curry((name, value) => {\r\n    const filter = { ...this.props.filter, [name]: value };\r\n    this.props.setFilter(filter);\r\n    localForage.setItem('filter', filter);\r\n  });\r\n\r\n  resetFilter = () => {\r\n    this.props.resetFilter();\r\n    localForage.setItem('filter', defaultFilter);\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchTopScores();\r\n  };\r\n\r\n  renderSimpleSearch() {\r\n    const { isLoading, filter } = this.props;\r\n    return (\r\n      <div className=\"simple-search\">\r\n        <div className=\"song-name _margin-right _margin-bottom\">\r\n          <Input\r\n            value={filter.song || ''}\r\n            placeholder=\"название песни...\"\r\n            className=\"form-control\"\r\n            onChange={this.setFilter('song')}\r\n          />\r\n        </div>\r\n        <div className=\"chart-range _margin-right _margin-bottom\">\r\n          <ChartFilter filterValue={filter.chartRange} onChange={this.setFilter('chartRange')} />\r\n        </div>\r\n        <div className=\"_flex-fill\" />\r\n        <div className=\"_flex-row _margin-bottom\">\r\n          <button className=\"btn btn-sm btn-dark btn-icon _margin-right\" onClick={this.resetFilter}>\r\n            <FaRedoAlt /> сбросить фильтры\r\n          </button>\r\n          <button\r\n            disabled={isLoading}\r\n            className=\"btn btn-sm btn-dark btn-icon\"\r\n            onClick={this.onRefresh}\r\n          >\r\n            <FaSearch /> обновить\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFilters() {\r\n    const { players, filter } = this.props;\r\n\r\n    return (\r\n      <div className=\"filters\">\r\n        <div className=\"people-filters\">\r\n          <label className=\"label\">показывать чарты, которые сыграл:</label>\r\n          <div className=\"players-block\">\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">каждый из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'players', filter)}\r\n                onChange={this.setFilter('players')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и хоть один из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersOr', filter)}\r\n                onChange={this.setFilter('playersOr')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и никто из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersNot', filter)}\r\n                onChange={this.setFilter('playersNot')}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Toggle\r\n            checked={_.getOr(false, 'showRank', filter)}\r\n            onChange={this.setFilter('showRank')}\r\n          >\r\n            показывать скоры на ранке\r\n          </Toggle>\r\n        </div>\r\n        {_.get('showRank', filter) && (\r\n          <>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showOnlyRank', filter)}\r\n                onChange={value => {\r\n                  this.setFilter('showOnlyRank', value);\r\n                  if (_.get('showRankAndNorank', filter)) {\r\n                    this.setFilter('showRankAndNorank', false);\r\n                  }\r\n                }}\r\n              >\r\n                <strong>только</strong> на ранке\r\n              </Toggle>\r\n            </div>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showRankAndNorank', filter)}\r\n                onChange={value => {\r\n                  this.setFilter('showRankAndNorank', value);\r\n                  if (_.get('showOnlyRank', filter)) {\r\n                    this.setFilter('showOnlyRank', false);\r\n                  }\r\n                }}\r\n              >\r\n                показывать лучшие скоры с ранком и без\r\n              </Toggle>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSortings() {\r\n    const { players, filter } = this.props;\r\n    return (\r\n      <div className=\"sortings\">\r\n        <div>\r\n          <label className=\"label\">сортировать по</label>\r\n          <Select\r\n            placeholder=\"выберите сортировку\"\r\n            className=\"select\"\r\n            classNamePrefix=\"select\"\r\n            clearable={false}\r\n            options={sortingOptions}\r\n            value={_.getOr(sortingOptions[0], 'sortingType', filter)}\r\n            onChange={this.setFilter('sortingType')}\r\n          />\r\n        </div>\r\n        {[SORT.PROTAGONIST, SORT.RANK_ASC, SORT.RANK_DESC].includes(\r\n          _.get('sortingType.value', filter)\r\n        ) && (\r\n          <div>\r\n            <label className=\"label\">протагонист (кого сравнивать с остальными):</label>\r\n            <Select\r\n              className={classNames('select players', {\r\n                'red-border': !_.get('protagonist', filter),\r\n              })}\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              value={_.getOr(null, 'protagonist', filter)}\r\n              onChange={this.setFilter('protagonist')}\r\n            />\r\n          </div>\r\n        )}\r\n        {[SORT.PROTAGONIST].includes(_.get('sortingType.value', filter)) && (\r\n          <div>\r\n            <label className=\"label\">не учитывать в сравнении:</label>\r\n            <Select\r\n              closeMenuOnSelect={false}\r\n              className=\"select players\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              isMulti\r\n              value={_.getOr([], 'excludeAntagonists', filter)}\r\n              onChange={this.setFilter('excludeAntagonists')}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, filteredData, error, filter } = this.props;\r\n    const { showItemsCount } = this.state;\r\n    const canShowMore = filteredData.length > showItemsCount;\r\n    const visibleData = _.slice(0, showItemsCount, filteredData);\r\n\r\n    const uniqueSelectedNames = _.slice(\r\n      0,\r\n      colorsArray.length,\r\n      _.uniq(\r\n        _.compact([\r\n          _.get('sortingType.value', filter) === SORT.PROTAGONIST &&\r\n            _.get('protagonist.value', filter),\r\n          ..._.map('value', filter.players),\r\n          ..._.map('value', filter.playersOr),\r\n        ])\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div className=\"leaderboard-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"search-block\">\r\n            {this.renderSimpleSearch()}\r\n            <CollapsibleBar title=\"фильтры\">{this.renderFilters()}</CollapsibleBar>\r\n            <CollapsibleBar title=\"сортировка\">{this.renderSortings()}</CollapsibleBar>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          <div className=\"top-list\">\r\n            {_.isEmpty(filteredData) && !isLoading && 'ничего не найдено'}\r\n            {!isLoading &&\r\n              visibleData.map((chart, chartIndex) => {\r\n                return (\r\n                  <div className=\"song-block\" key={chart.song + chart.chartLabel}>\r\n                    <div className=\"song-name\">\r\n                      <div\r\n                        className={classNames('chart-name', {\r\n                          single: chart.chartType === 'S',\r\n                        })}\r\n                      >\r\n                        <span className=\"chart-letter\">{chart.chartType}</span>\r\n                        <span className=\"chart-number\">{chart.chartLevel}</span>\r\n                      </div>\r\n                      <div>{chart.song}</div>\r\n                      <div className=\"youtube-link\">\r\n                        <a\r\n                          href={`https://youtube.com/results?search_query=${chart.song.replace(\r\n                            / /g,\r\n                            '+'\r\n                          )}+${chart.chartLabel}`}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          <FaYoutube />\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"charts\">\r\n                      <div className=\"chart\">\r\n                        <div className=\"results\">\r\n                          <table>\r\n                            {chartIndex === 0 && (\r\n                              <thead>\r\n                                <tr>\r\n                                  <th className=\"place\"></th>\r\n                                  <th className=\"nickname\"></th>\r\n                                  <th className=\"rank\"></th>\r\n                                  <th className=\"score\">score</th>\r\n                                  <th className=\"grade\"></th>\r\n                                  <th className=\"number\">miss</th>\r\n                                  <th className=\"number\">bad</th>\r\n                                  <th className=\"number\">good</th>\r\n                                  <th className=\"number\">great</th>\r\n                                  <th className=\"number\">perfect</th>\r\n                                  <th className=\"combo\">combo</th>\r\n                                  <th className=\"accuracy\">accuracy</th>\r\n                                  <th className=\"date\"></th>\r\n                                </tr>\r\n                              </thead>\r\n                            )}\r\n                            <tbody>\r\n                              {chart.results.map(res => {\r\n                                const nameIndex = uniqueSelectedNames.indexOf(res.nickname);\r\n                                return (\r\n                                  <tr\r\n                                    key={res.score + res.nickname}\r\n                                    className={classNames({\r\n                                      empty: !res.isExactDate,\r\n                                      latest: res.date === chart.latestScoreDate,\r\n                                    })}\r\n                                  >\r\n                                    <td className=\"place\">\r\n                                      {res.isSecondOccurenceInResults ? '' : `#${res.topPlace}`}\r\n                                    </td>\r\n                                    <td\r\n                                      className=\"nickname\"\r\n                                      style={\r\n                                        nameIndex > -1\r\n                                          ? { fontWeight: 'bold', color: colorsArray[nameIndex] }\r\n                                          : {}\r\n                                      }\r\n                                    >\r\n                                      {res.nickname}\r\n\r\n                                      {DEBUG && (\r\n                                        <span>\r\n                                          {' '}\r\n                                          {res.startingRating &&\r\n                                            Math.round(res.startingRating)}{' '}\r\n                                          {res.ratingDiff && Math.round(res.ratingDiff)}{' '}\r\n                                          {res.ratingDiffLast && Math.round(res.ratingDiffLast)}\r\n                                        </span>\r\n                                      )}\r\n\r\n                                      {_.get('sortingType.value', filter) === SORT.PROTAGONIST &&\r\n                                        res.nickname === _.get('protagonist.value', filter) &&\r\n                                        chart.distanceFromProtagonist > 0 && (\r\n                                          <span className=\"protagonist-diff\">\r\n                                            {' '}\r\n                                            -{(chart.distanceFromProtagonist * 100).toFixed(1)}%\r\n                                          </span>\r\n                                        )}\r\n                                    </td>\r\n                                    <td className={classNames('rank', { vj: res.isRank })}>\r\n                                      {res.isRank &&\r\n                                        (res.isExactDate ? (\r\n                                          'VJ'\r\n                                        ) : (\r\n                                          <Tooltip\r\n                                            content={\r\n                                              <>\r\n                                                <div>\r\n                                                  наличие ранка на этом результате было угадано,\r\n                                                  основываясь на скоре\r\n                                                </div>\r\n                                              </>\r\n                                            }\r\n                                            tooltipClassName=\"timeago-tooltip\"\r\n                                          >\r\n                                            VJ?\r\n                                          </Tooltip>\r\n                                        ))}\r\n                                    </td>\r\n                                    <td className=\"score\">{numeral(res.score).format('0,0')}</td>\r\n                                    <td className=\"grade\">\r\n                                      <div className=\"img-holder\">\r\n                                        {res.grade && res.grade !== '?' && (\r\n                                          <img\r\n                                            src={`${process.env.PUBLIC_URL}/grades/${res.grade}.png`}\r\n                                            alt={res.grade}\r\n                                          />\r\n                                        )}\r\n                                        {res.grade === '?' && null}\r\n                                      </div>\r\n                                    </td>\r\n                                    <td className=\"number miss\">{res.miss}</td>\r\n                                    <td className=\"number bad\">{res.bad}</td>\r\n                                    <td className=\"number good\">{res.good}</td>\r\n                                    <td className=\"number great\">{res.great}</td>\r\n                                    <td className=\"number perfect\">{res.perfect}</td>\r\n                                    <td className=\"combo\">\r\n                                      {res.combo}\r\n                                      {res.combo ? 'x' : ''}\r\n                                    </td>\r\n                                    <td className=\"accuracy\">\r\n                                      {res.accuracy}\r\n                                      {res.accuracy ? '%' : ''}\r\n                                    </td>\r\n                                    <td\r\n                                      className={classNames('date', {\r\n                                        latest: res.date === chart.latestScoreDate,\r\n                                      })}\r\n                                    >\r\n                                      <Tooltip\r\n                                        content={\r\n                                          res.isExactDate\r\n                                            ? tooltipFormatter(res.dateObject)\r\n                                            : tooltipFormatterForBests(res.dateObject)\r\n                                        }\r\n                                        tooltipClassName=\"timeago-tooltip\"\r\n                                      >\r\n                                        {getTimeAgo(res.dateObject)}\r\n                                        {res.isExactDate ? '' : '?'}\r\n                                      </Tooltip>\r\n                                    </td>\r\n                                  </tr>\r\n                                );\r\n                              })}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            {!isLoading && canShowMore && (\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() =>\r\n                  this.setState(state => ({ showItemsCount: state.showItemsCount + 10 }))\r\n                }\r\n              >\r\n                show more...\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Leaderboard);\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\nimport numeral from 'numeral';\r\nimport classNames from 'classnames';\r\nimport { GiQueenCrown } from 'react-icons/gi';\r\nimport { FaAngleDoubleUp, FaAngleDoubleDown } from 'react-icons/fa';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nconst getGradeImg = grade => (\r\n  <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n);\r\n\r\nexport default function RankingList({ ranking, isLoading }) {\r\n  return (\r\n    <div className=\"ranking-list\">\r\n      {_.isEmpty(ranking) && !isLoading && 'ничего не найдено'}\r\n      {isLoading && <Loader />}\r\n      {!isLoading && (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"place\"></th>\r\n              <th className=\"change\"></th>\r\n              <th className=\"name\">name</th>\r\n              <th className=\"rating\">elo</th>\r\n              <th className=\"total-score\">total score</th>\r\n              <th className=\"grades sss\">{getGradeImg('SSS')}</th>\r\n              <th className=\"grades ss\">{getGradeImg('SS')}</th>\r\n              <th className=\"grades s\">{getGradeImg('S')}</th>\r\n              <th className=\"grades a\">{getGradeImg('A+')}</th>\r\n              <th className=\"grades b\">{getGradeImg('B')}</th>\r\n              <th className=\"grades c\">{getGradeImg('C')}</th>\r\n              <th className=\"grades d\">{getGradeImg('D')}</th>\r\n              <th className=\"grades f\">{getGradeImg('F')}</th>\r\n              <th className=\"playcount\">scores</th>\r\n              <th className=\"accuracy\">accuracy</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {ranking.map((player, playerIndex) => {\r\n              return (\r\n                <tr className=\"player\" key={player.name}>\r\n                  <td className=\"place\">\r\n                    {playerIndex === 0 ? <GiQueenCrown /> : `#${playerIndex + 1}`}\r\n                  </td>\r\n                  <td className=\"change\">\r\n                    {player.change > 0 && (\r\n                      <div className=\"change-holder up\">\r\n                        <span>{player.change}</span>\r\n                        <FaAngleDoubleUp />\r\n                      </div>\r\n                    )}\r\n                    {player.change < 0 && (\r\n                      <div className=\"change-holder down\">\r\n                        <span>{-player.change}</span>\r\n                        <FaAngleDoubleDown />\r\n                      </div>\r\n                    )}\r\n                    {!!player.change && _.isString(player.change) && (\r\n                      <div className=\"change-holder text\">\r\n                        <span>{player.change}</span>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"name\">\r\n                    <NavLink exact to={routes.profile.getPath({ name: player.name })}>\r\n                      {player.name}\r\n                    </NavLink>\r\n                  </td>\r\n                  <td className=\"rating\">\r\n                    {player.rating}{' '}\r\n                    {!!player.prevRating && player.prevRating !== player.rating && (\r\n                      <span\r\n                        className={classNames('rating-change', {\r\n                          down: player.prevRating > player.rating,\r\n                          up: player.prevRating < player.rating,\r\n                        })}\r\n                      >\r\n                        {player.prevRating < player.rating ? '+' : ''}\r\n                        {player.rating - player.prevRating}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"total-score\">\r\n                    <div>S: {numeral(player.totalScore.S).format('0,0')}</div>\r\n                    <div>D: {numeral(player.totalScore.D).format('0,0')}</div>\r\n                  </td>\r\n                  <td className=\"grades sss\">{player.grades.SSS}</td>\r\n                  <td className=\"grades ss\">{player.grades.SS}</td>\r\n                  <td className=\"grades s\">{player.grades.S}</td>\r\n                  <td className=\"grades a\">{player.grades.A}</td>\r\n                  <td className=\"grades b\">{player.grades.B}</td>\r\n                  <td className=\"grades c\">{player.grades.C}</td>\r\n                  <td className=\"grades d\">{player.grades.D}</td>\r\n                  <td className=\"grades f\">{player.grades.F}</td>\r\n                  <td className=\"playcount\">{player.count}</td>\r\n                  <td className=\"accuracy\">{player.accuracy ? `${player.accuracy}%` : ''}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function RankingFaq() {\r\n  return (\r\n    <div className=\"faq\">\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Как считается рейтинг?</div>\r\n        <div className=\"answer\">\r\n          A: Используется <a href=\"https://en.wikipedia.org/wiki/Elo_rating_system\">рейтинг Эло</a>,\r\n          широко используемый в шахматах и других играх, слегка модицированный под условия игры на\r\n          пампе. Средний рейтинг - 1000. Коэффициент К зависит от уровня чарта (более сложные чарты\r\n          сильнее влияют на рейтинг). Количество очков влияет на заработанный рейтинг (маленький\r\n          отрыв от противника не даст так много очков как большой отрыв).\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Система Эло используется для игр 1 на 1, как она используется на пампе, где на одном\r\n          чарте играет много игроков?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: Рекорды на одном чарте делятся на несколько игр 1 на 1. Если есть 3 игрока: A, B, C; то\r\n          считается, что было 3 отдельные игры: A vs B, A vs C, B vs C.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Учитываются ли рекорды на ранке в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: Да. Как минимум потому что у нас есть много рекордов, взятых с машин бестов, и мы не\r\n          знаем наверняка, на ранке они или нет. Если у игрока в топе есть два скора - на ранке и\r\n          без ранка, используется тот, где больше очков.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Почему меня нет в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: В таблицу попадают только те, у кого есть хотя бы 20 игр 1 на 1. Первые 20 игр\r\n          используются для определения изначального рейтинга.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Почему суммарное количество оценок S-A-B не совпадает с общим количеством скоров?\r\n        </div>\r\n        <div className=\"answer\">A: Не для каждого результата известна оценка.</div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Если у меня есть несколько рекордов на А, несколько на А+, как считается суммарное\r\n          количество грейдов в таблице?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: В каждой колонке учитываются обе буквы - и треснутые, и с удержанным лайфом. То есть и\r\n          А, и А+ идут в колонку А. Точно так же для B, C, D.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Убери аккураси из таблицы!</div>\r\n        <div className=\"answer\">A: Грем, это секция для вопросов.</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle } from 'react-icons/fa';\r\nimport { Link, Route, withRouter } from 'react-router-dom';\r\n\r\n// styles\r\nimport 'react-responsive-ui/style.css';\r\nimport './ranking.scss';\r\n\r\n// components\r\nimport RankingList from './RankingList';\r\nimport RankingFaq from './RankingFaq';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport { fetchTopScores } from 'reducers/top';\r\n\r\n// utils\r\n\r\n// code\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ranking: state.ranking.data,\r\n    error: state.top.error,\r\n    isLoading: state.top.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopScores,\r\n};\r\n\r\nclass Ranking extends Component {\r\n  static propTypes = {\r\n    ranking: toBe.array,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    ranking: [],\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchTopScores();\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, ranking, error } = this.props;\r\n\r\n    return (\r\n      <div className=\"ranking-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.path}\r\n              render={() => (\r\n                <>\r\n                  <Link to={routes.ranking.faq.path}>\r\n                    <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n                      <FaQuestionCircle /> faq\r\n                    </button>\r\n                  </Link>\r\n                  <button\r\n                    disabled={isLoading}\r\n                    className=\"btn btn-sm btn-dark btn-icon\"\r\n                    onClick={this.onRefresh}\r\n                  >\r\n                    <FaSearch /> обновить\r\n                  </button>\r\n                </>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.faq.path}\r\n              render={() => (\r\n                <Link to={routes.ranking.path}>\r\n                  <button className=\"btn btn-sm btn-dark btn-icon\">назад</button>\r\n                </Link>\r\n              )}\r\n            />\r\n          </div>\r\n          <Route\r\n            exact\r\n            path={routes.ranking.path}\r\n            render={() => <RankingList ranking={ranking} isLoading={isLoading} />}\r\n          />\r\n          <Route exact path={routes.ranking.faq.path} component={RankingFaq} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Ranking));\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ReferenceLine,\r\n  CartesianGrid,\r\n  Line,\r\n  Brush,\r\n} from 'recharts';\r\nimport _ from 'lodash/fp';\r\nimport moment from 'moment';\r\n\r\n// styles\r\nimport 'react-responsive-ui/style.css';\r\nimport './profile.scss';\r\n// import 'react-vis/dist/style.css';\r\n\r\n// constants\r\n\r\n// reducers\r\nimport { fetchTopScores } from 'reducers/top';\r\n\r\n// utils\r\n\r\n// code\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    profile: state.profiles.data[props.match.params.name],\r\n    error: state.top.error,\r\n    isLoading: state.top.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopScores,\r\n};\r\n\r\nclass Profile extends Component {\r\n  static propTypes = {\r\n    profile: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    profile: {},\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchTopScores();\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, profile, error, match } = this.props;\r\n    if (_.isEmpty(profile)) {\r\n      return null;\r\n    }\r\n    console.log(match, profile);\r\n    const levelsData = _.flow(\r\n      _.get('resultsByLevel'),\r\n      _.toPairs,\r\n      _.map(([x, y]) => ({\r\n        x: _.toInteger(x),\r\n        S: _.size(_.filter(res => res.chart.chartType === 'S', y)),\r\n        D: -_.size(_.filter(res => res.chart.chartType === 'D', y)),\r\n      }))\r\n    )(profile);\r\n\r\n    let brushData = [];\r\n    let historyTicks = [];\r\n    const lastTick = _.last(profile.rankingHistory).date;\r\n    const firstTick = _.first(profile.rankingHistory).date;\r\n    for (let date = moment(firstTick); date.isBefore(lastTick); date.add(1, 'day')) {\r\n      brushData.push({ date: date.valueOf() });\r\n    }\r\n    for (let date = moment(lastTick); date.isAfter(firstTick); date.subtract(1, 'month')) {\r\n      historyTicks = [date.valueOf(), ...historyTicks];\r\n    }\r\n    const placesData = _.flow(\r\n      items => {\r\n        const newItems = items.map((item, index) => {\r\n          if (index > 0 && items[index - 1].date < item.date - 24 * 60 * 60 * 1000) {\r\n            return [\r\n              ..._.map(\r\n                it => ({ date: it.date, place: items[index - 1].place }),\r\n                _.filter(\r\n                  ({ date: tick }) => tick > items[index - 1].date && tick < item.date,\r\n                  brushData\r\n                )\r\n              ),\r\n              item,\r\n            ];\r\n          }\r\n          return item;\r\n        });\r\n        return _.flatten(newItems);\r\n      },\r\n      _.map(item => ({\r\n        ...item,\r\n        dateRounded: Math.round(item.date / 1000 / 60 / 60 / 24),\r\n      }))\r\n    )(profile.rankingHistory);\r\n    return (\r\n      <div className=\"profile-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <div className=\"beta\">страница в бета-версии</div>\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"btn btn-sm btn-dark btn-icon\"\r\n              onClick={this.onRefresh}\r\n            >\r\n              <FaSearch /> обновить\r\n            </button>\r\n          </div>\r\n          <div className=\"profile\">\r\n            <div className=\"profile-header\">\r\n              <div className=\"profile-name\">{match.params.name}</div>\r\n            </div>\r\n            <div className=\"levels-chart\">\r\n              <BarChart\r\n                height={300}\r\n                width={800}\r\n                data={levelsData}\r\n                stackOffset=\"sign\"\r\n                margin={{\r\n                  top: 5,\r\n                  right: 30,\r\n                  left: 20,\r\n                  bottom: 5,\r\n                }}\r\n              >\r\n                <XAxis dataKey=\"x\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <ReferenceLine y={0} stroke=\"#555\" />\r\n                <Bar dataKey=\"D\" fill=\"#169c16\" stackId=\"stack\" />\r\n                <Bar dataKey=\"S\" fill=\"#af2928\" stackId=\"stack\" />\r\n              </BarChart>\r\n            </div>\r\n            <div className=\"history-chart\">\r\n              <LineChart\r\n                height={300}\r\n                width={800}\r\n                data={placesData}\r\n                margin={{\r\n                  top: 5,\r\n                  right: 30,\r\n                  left: 20,\r\n                  bottom: 5,\r\n                }}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis\r\n                  dataKey=\"dateRounded\"\r\n                  type=\"number\"\r\n                  domain={['dataMin', 'dataMax']}\r\n                  tickFormatter={value =>\r\n                    new Date(value * 24 * 60 * 60 * 1000).toLocaleDateString()\r\n                  }\r\n                />\r\n                <YAxis\r\n                  allowDecimals={false}\r\n                  domain={[1, dataMax => (dataMax < 3 ? dataMax + 2 : dataMax + 1)]}\r\n                  interval={0}\r\n                  reversed\r\n                />\r\n                <Tooltip\r\n                  isAnimationActive={false}\r\n                  content={({ active, payload, label }) => {\r\n                    if (!payload || !payload[0]) {\r\n                      return null;\r\n                    }\r\n                    return (\r\n                      <div className=\"history-tooltip\">\r\n                        <div>{new Date(payload[0].payload.date).toLocaleDateString()}</div>\r\n                        {payload && payload[0] && <div>Place: #{payload[0].value}</div>}\r\n                      </div>\r\n                    );\r\n                  }}\r\n                />\r\n                <Line\r\n                  isAnimationActive={false}\r\n                  type=\"stepAfter\"\r\n                  dataKey=\"place\"\r\n                  stroke=\"#8884d8\"\r\n                  strokeWidth={3}\r\n                  dot={false}\r\n                />\r\n                <Brush\r\n                  data={brushData}\r\n                  dataKey=\"date\"\r\n                  height={40}\r\n                  stroke=\"#8884d8\"\r\n                  travellerWidth={20}\r\n                  tickFormatter={value => new Date(value).toLocaleDateString()}\r\n                />\r\n              </LineChart>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Profile));\r\n","import React, { Component } from 'react';\r\n// import toBe from 'prop-types';\r\n// import classNames from 'classnames';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './top-bar.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nclass TopBar extends Component {\r\n  static propTypes = {};\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"top-bar\">\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <NavLink exact to={routes.leaderboard.path}>\r\n                leaderboard\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink exact to={routes.ranking.path}>\r\n                ranking\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopBar;\r\n","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport './App.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport Leaderboard from 'components/Leaderboard/Leaderboard';\r\nimport Ranking from 'components/Ranking/Ranking';\r\nimport Profile from 'components/Profile/Profile';\r\nimport TopBar from 'components/Shared/TopBar/TopBar';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <TopBar />\r\n        <Route exact path=\"/\" render={() => <Redirect to={routes.leaderboard.path} />} />\r\n        <Route path={routes.leaderboard.path} component={Leaderboard} />\r\n        <Route path={routes.ranking.path} component={Ranking} />\r\n        <Route path={routes.profile.path} component={Profile} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport top from 'reducers/top';\r\nimport ranking from 'reducers/ranking';\r\nimport profiles from 'reducers/profiles';\r\n\r\nconst rootReducer = combineReducers({\r\n  top,\r\n  ranking,\r\n  profiles,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__\r\n    ? compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__({\r\n          stateSanitizer: state => ({\r\n            ...state,\r\n          }),\r\n        })\r\n      )\r\n    : applyMiddleware(thunk)\r\n);\r\n","import 'promise-polyfill';\r\nimport 'whatwg-fetch';\r\nimport 'utils/polyfills';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport localForage from 'localforage';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './index.scss';\r\nimport App from 'components/App';\r\n\r\nimport { CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nimport { store } from 'reducers';\r\nimport { fetchTopScores, setFilter } from 'reducers/top';\r\n\r\nlocalForage\r\n  .getItem('filter')\r\n  .then(filter => {\r\n    if (filter) {\r\n      store.dispatch(\r\n        setFilter({\r\n          ...filter,\r\n          chartRange: filter.chartRange && {\r\n            ...filter.chartRange,\r\n            range: _.every(\r\n              r => r >= CHART_MIN_MAX[0] && r <= CHART_MIN_MAX[1],\r\n              filter.chartRange.range\r\n            )\r\n              ? filter.chartRange.range\r\n              : CHART_MIN_MAX,\r\n          },\r\n        })\r\n      );\r\n    }\r\n  })\r\n  .catch(error => console.error('Cannot get filter from local storage', error));\r\n\r\nstore.dispatch(fetchTopScores());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}