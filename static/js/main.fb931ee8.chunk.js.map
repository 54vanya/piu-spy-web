{"version":3,"sources":["webpack:///./src/utils/workers/profilesPostProcess.js?f05c","utils/polyfills.js","constants/routes.js","constants/leaderboard.js","components/Shared/Loader/index.js","reducers/user/resetAction.js","utils/fetch.js","constants/backend.js","reducers/trackStats/mostPlayed.js","reducers/trackStats/mostPlayedMonth.js","reducers/trackStats/leastPlayed.js","utils/leaderboards.js","utils/date.js","components/SongsTop/SongsTop.js","components/Shared/Overlay/Overlay.js","components/Shared/ToggleButton/ToggleButton.js","components/Shared/Input/Input.js","components/Shared/Toggle/Toggle.js","components/Shared/CollapsibleBar/index.js","components/Shared/Range/index.js","components/Leaderboard/ChartFilter.js","utils/expRanks.js","utils/exp.js","utils/achievements.js","utils/workers/profilesPostProcess.js","constants/env.js","reducers/results.js","reducers/presets.js","components/Leaderboard/PresetsControl.js","utils/colors.js","reducers/selectors.js","components/Leaderboard/Leaderboard.js","components/Ranking/RankingList.js","components/Ranking/RankingFaq.js","components/Ranking/Ranking.js","components/Profile/MostPlayed.js","components/Profile/ExpFaq.js","reducers/profiles.js","utils/profiles.js","components/Profile/Profile.js","components/ProfileCompare/ProfileCompare.js","reducers/user/index.js","reducers/login.js","components/Shared/TopBar/TopBar.js","components/LoginScreen/LoginScreen.js","reducers/topPerSong.js","reducers/tracklist.js","components/SocketTracker/helpers.js","components/SocketTracker/SocketTracker.js","components/App.js","reducers/trackStats/index.js","reducers/index.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","Number","isNaN","value","Math","sign","x","Array","prototype","findIndex","Object","defineProperty","predicate","this","TypeError","o","len","length","thisArg","arguments","k","kValue","call","configurable","writable","routes","leaderboard","path","songs","ranking","faq","profile","getPath","params","id","compare","compareToId","SORT","DEFAULT","PROTAGONIST","RANK_ASC","RANK_DESC","NEW_SCORES_PLAYER","CHART_MIN_MAX","DURATION","STD","SHORT","REMIX","FULL","DURATION_DEFAULT","_","values","Loader","className","width","height","viewBox","xmlns","fill","cx","cy","r","attributeName","from","to","begin","dur","calcMode","repeatCount","fillOpacity","RESET","resetUser","type","fetchJson","url","request","method","postJson","body","JSON","stringify","headers","defaultHeaders","async","dispatch","getState","session","cookies","get","response","fetch","credentials","status","json","error","isObject","isString","Error","message","Promise","reject","HOST","SOCKET_SERVER_IP","LOADING","SUCCESS","ERROR","initialState","isLoading","data","TimeAgo","addLocale","ru","timeAgo","timeStyle","flavour","gradation","convenient","units","tooltipFormatter","result","isExactDate","dateObject","toLocaleDateString","resultType","undefined","isMyBest","isMachineBest","style","display","alignItems","flexDirection","getTimeAgo","date","dayDiff","moment","startOf","diff","hour","format","parseDate","textDate","toDate","Date","TopList","fetchList","title","renderRightSide","useState","setData","setLoading","getRightSide","item","countplay","useEffect","then","success","catch","map","index","key","classNames","best","full_name","leastPlayedRightSide","last_play","connect","fetchMostPlayed","fetchMostPlayedMonth","fetchLeastPlayed","POPPER_MODIFIERS","preventOverflow","enabled","padding","boundariesElement","PLACEMENT_ARROW_MAPPING","right","left","top","bottom","getArrowPlacement","placement","split","Overlay","state","isVisible","containerItemRef","React","createRef","renderPopper","bind","toggleOverlayVisibility","setState","event","target","closest","hideOverlay","ref","arrowProps","outOfBoundaries","scheduleUpdate","props","children","hideWhenOutOfBounds","data-placement","overlayClassName","overlayItem","Fragment","onClick","ReactDOM","createPortal","container","document","modifiers","referenceElement","current","PureComponent","defaultTypes","listensToClickOutside","ToggleButton","active","onToggle","text","Input","isNil","defaultValue","bindAll","prevProps","e","newValue","onChange","numericValue","min","max","onBlur","handleBlur","omit","onKeyPress","handleKeyPress","onInput","handleChange","noop","Component","defaultProps","Toggle","checked","uniqueId","htmlFor","CollapsibleBar","open","defaultOpen","Range","range","step","renderTrack","onMouseDown","onTouchStart","position","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","justifyContent","boxShadow","ChartFilter","filterValue","onChangeEx","getOr","duration","buttonText","t","isEqual","isEmpty","newMin","newMax","includes","without","ranks","threshold","iconName","color","gradeValue","F","D","C","B","A","S","SS","SSS","getExp","chart","isBestGradeOnChart","chartType","chartLevel","grade","getRankImg","rank","src","process","alt","achievements","icon","GiRank1","description","resultFunction","progress","combo","GiRank2","GiRank3","GiSmokingFinger","playedSongs","songsToPlay","song","uniq","GiRetroController","GiLoveSong","Улитка","GiSnail","charts","some","songToPlay","chartLabel","GiPodiumSecond","miss","bad","GiLifeBar","GiWoodenPegleg","good","great","initialAchievementState","postProcessProfiles","profiles","tracklist","mapValues","neededGrades","expRank","findLast","exp","expRanks","expRankNext","find","double","single","gradeIncrementMap","keys","resultsByLevel","forEach","level","res","thisGrade","thisPlayerId","playerId","otherResults","results","filter","sort","a","b","indexOf","gradeIncArray","gradeInc","l","g","prog","incrementLevel","number","minimumNumber","totalCharts","round","sqrt","getMinimumNumber","bonusCoefficientNumber","bonus","getBonusForLevel","rating","accuracy","countAcc","sumAccuracy","getProcessedProfiles","battles","debug","processedProfiles","logText","dictChartElo","getDictChartEloId","score","enemyScore","sharedChartId","isRank","dictRatingDiff","getDictRatingDiffId","dictScoreInfo","p1","p2","scoreMultiplier","maxScore","scoreInfo","enemyScoreInfo","startingRating","battleCount","r1","r2","R1","R2","E1","E2","S1","S2","kRating1","kRating2","maxK1","maxK2","kLevel1","kLevel2","kLevel","kMinimizer","startsWith","K1","K2","dr1","dr2","baseEloId1","baseEloId2","baseEloP1","baseEloP2","ratingDiffId1","ratingDiffId2","ratingDiff","ratingDiffLast","floor","toFixed","playersSorted","flow","orderBy","battleDate","player","lastPlace","rankingHistory","push","place","getTime","p1LastRating","last","ratingHistory","p2LastRating","toInteger","ratingRaw","now","processBattles","localStorage","window","debugOn","setItem","debugOff","removeItem","DEBUG","getItem","SET_FILTER","RESET_FILTER","RANKING_CHANGE_SET","PROFILES_UPDATE","defaultFilter","showRank","showRankAndNorank","isLoadingRanking","players","sharedCharts","gradeComparator","guessGrade","misses","bads","goods","greats","mapResult","recognition_notes","isUnknownPlayer","arcade_name","isIntermediateResult","shared_chart","nickname","nicknameArcade","gained","exact_gain_date","rank_mode","_r","originalChartMix","original_mix","originalChartLabel","original_label","originalScore","original_score","scoreIncrease","score_increase","calories","perfect","perfects","max_combo","mods","mods_list","isHJ","maxTotalSteps","infos","fixableIndex","absentNumbersCount","localStepSum","i","isNumber","tryFixIncompleteResult","acc","accRaw","accuracyRaw","getMaxScore","initializeProfile","fromPairs","nameArcade","resultsByGrade","lastResultDate","count","grades","lastBattleDate","achName","getProfileInfoFromResult","replace","convert","cap","achState","fetchResults","processResultsData","console","log","shared_charts","mappedResults","getTopResultId","getBestGradeResultId","topResults","bestGradeResults","resRaw","sharedChart","label","toUpper","chart_label","match","track_name","max_total_steps","totalResultsCount","chartTop","topResultId","currentTopResult","oldScoreIndex","splice","newScoreIndex","sortedLastIndexBy","latestScoreDate","enemyResult","bestGradeResultId","currentBestGradeRes","chartId","maxScoreWithAccuracy","maxScoreResult","processData","toPairs","originalData","input","promise","worker","WorkerProfilesProcessing","profilesProcessing","calculateRankingChanges","terminate","setFilter","getListOfNames","getMapOfRatings","q","all","localForage","lastChangedRanking","lastChangedRankingPoints","lastFetchedRanking","listNow","listLastFetched","listLastChanged","mapPointsNow","mapPointsLastFetched","rankingsPointsMap","listPrev","warn","SELECT_PRESET","LOAD_PRESETS","LOADING_START","LOADING_END","presets","currentPreset","itemToOption","reloadPresets","startLoading","endLoading","selectPreset","openPreset","noPresetsMessage","mapDispatchToProps","loadPresets","savePreset","newPreset","confirm","withoutOldPreset","remove","newPresets","deletePreset","PresetsControl","onChangeSelection","selected","onRewritePreset","onSavePreset","isAddingNew","classNamePrefix","placeholder","options","noOptionsMessage","disabled","colorsArray","playersSelector","createSelector","sortBy","it","toLower","filteredDataSelector","names","namesOr","playersOr","namesNot","playersNot","sortingType","protagonist","excludeAntagonists","defaultSorting","newScoresProtagonistSorting","protagonistSorting","row","protIndex","protScore","enemies","take","uniqBy","distanceFromProtagonist","reduce","dist","enemy","getScoreSorting","direction","info","Infinity","sortingFunctions","compact","chartRange","items","rows","filterCharts","showOnlyRank","occuredNames","alreadyOccured","rowNames","every","size","matchSorter","trim","ANIMATION_DURATION","sortingOptions","resetFilter","Leaderboard","showItemsCount","chartOverrides","curry","onRefresh","onTypeSongName","debounce","onRedoLatestResult","throttle","overrides","drop","onUndoLatestResult","undoedResult","maxBy","undoedPlayerId","previousPlayerResult","newResults","latestScore","overrideChart","renderSimpleSearch","renderFilters","closeMenuOnSelect","isMulti","renderSortings","isClearable","render","filteredData","canShowMore","visibleData","slice","showProtagonistRatingChange","highlightProtagonist","protagonistName","uniqueSelectedNames","preset","chartOriginal","chartIndex","first","topPlace","occuredNicknames","isSecondOccurenceInResults","singlep","doublep","coop","href","rel","isActive","currentIndex","canUndo","enterAnimation","leaveAnimation","typeName","maintainContainerHeight","nameIndex","placeDifference","newIndex","prevScore","findLastIndex","inf","empty","latest","fontWeight","vj","hj","content","tooltipClassName","numeral","exact","getGradeImg","RankingList","playerIndex","change","prevRating","down","up","RankingFaq","rankingSelector","Ranking","component","withRouter","limit","setLimit","latestDate","ExpFaq","setProfilesFilter","resetProfilesFilter","defaultGradesDistribution","defaultGradesWithLevelsDistribution","flatMap","cutRange","array","startIndex","endIndex","firstElement","lastElement","profileSelectorCreator","idParamName","levelsDistribution","y","singlesLevels","doublesLevels","gradesData","update","gradesDistribution","groupBy","pick","sum","gradesValues","gradesAndLevelsDistribution","groupedResults","counts","countBy","reduced","levelsData","lastTickRating","lastTickRanking","lastTick","firstTick","lastDay","endOf","minMaxRange","filterRange","dayRange","dayRangeMs","placesChanges","ratingChanges","MIN_GRAPH_HEIGHT","profileSelector","otherPlayersSelector","toNumber","ind","Profile","isLevelGraphCombined","showFaq","onChangeDayRange","onShowFaq","onHideFaq","componentWillUnmount","renderRankingHistory","minHeight","aspect","margin","strokeDasharray","dataKey","domain","tickFormatter","allowDecimals","stroke","isAnimationActive","payload","strokeWidth","dot","renderPlaceHistory","dataMax","interval","reversed","renderGrades","ticks","stackId","renderGradesWithLevels","stackOffset","doubleItems","singleItems","abs","dataMin","offset","renderLevels","totalD","totalS","renderGradeBlock","obj","typeLetter","progr","minNumber","currentNumber","levelString","complete","zero","renderAchievement","achievement","Icon","renderProfile","otherPlayers","expProgress","history","ariaHideApp","isOpen","onRequestClose","ceil","currentRange","dateL","dateR","l1","l2","MostPlayed","BARS_MODES","SINGLE_TWO","SINGLE_FIVE","DOUBLE_TWO","DOUBLE_FIVE","BOTH_TWO","BOTH_FIVE","getCompareBars","mode","profile1Selector","profile2Selector","getCombinedData","memoize","rc1","rc2","allRC","rating2","rating1","sortedUniqBy","allPC","place2","place1","perLevelComparison","p1win","p1notPlayed","p2win","p2notPlayed","notPlayed","twoBars","p1index","p2index","perType","normalizeTwo","dataObj","totalPlayed","normalizeFive","total","chartLevels","ProfileCompare","compareBarsMode","rhMargin","rhXDomain","rhYDomain","rhXTickFormatter","rhTooltip","profile2","p1Name","p2Name","plcMargin","plcTooltip","isTwo","renderLegendItem","plcXDomain","plcXTicks","plcXFormatter","combinedData","renderPerLevelComparison","layout","profile1","fetchUser","login","googleResponse","token","tokenId","set","expires","loginACs","logout","isLoadingLogin","isLoadingUser","user","isClown","setClown","onGoogleResponse","clientId","onSuccess","onFailure","cookiePolicy","fetchingParams","fetchTracklist","preprocessData","fullRes","stepSum","n","track","mix","resultInfoOverrides","numb","hasRankScore","STATE_RESET_TIMEOUT","fetchTopPerSong","songName","leftLabel","rightLabel","queryString","song_name","join","appendNewResults","lastDate","start_date","appendedResults","currentResults","mergedData","appendResultFromSocket","socketData","newSongTop","newSharedCharts","processSocketResult","socketResult","player_name","minBy","lev","chartData","searchQuery","thisResult","previousTopScoreIndex","previousTopScore","previousTopResult","renderChartLabel","topPerSong","songTopData","setMessage","socketErrorMessage","setSocketErrorMessage","isSocketReady","setSocketReady","isAlive","setAlive","setLeftLabel","setRightLabel","leftPlayer","setLeftPlayer","rightPlayer","setRightPlayer","recognizedSongName","setRecognizedSongName","socketRef","useRef","timeoutResetTokenRef","leftChart","rightChart","chartsToShow","topPlayersList","leftProfile","rightProfile","p","leftData","setLeftData","rightData","setRightData","restartTimeout","useCallback","clearTimeout","setTimeout","prevExp","WebSocket","onerror","onopen","onmessage","parse","newSongName","resultsContainerRef","leftResultRef","rightResultRef","totalSize","clientWidth","h","clientHeight","scaleHH","offsetWidth","scaleHW","offsetHeight","scaleWH","scaleWW","transform","scaleW","scaleH","renderPlayer","isLeft","renderDeltaText","prevN","delta","closestPlayers","takenWidth","emptyWidth","diffWidth","renderExpLine","pl","REACT_APP_SOCKET","SocketTracker","SongsTop","combineReducers","mostPlayed","action","mostPlayedMonth","leastPlayed","rootReducer","hasPrevList","playerOriginal","trackStats","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","getElementById"],"mappings":"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,CACP0C,SAAUpD,EAAM,uBACRoD,GADQ,CACEnO,EAASI,OACvBE,IAAEqO,QAAQ,CAAC3O,EAASI,MAAO+N,Y,4CClL1C,MAAMS,GAAQ,CACnB,CACEC,UAAW,EACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UCzIEC,GAAa,CACxBC,EAAG,GACHC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","file":"static/js/main.fb931ee8.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"getProcessedProfiles\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"42c3116836c444bda469.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","/* eslint-disable */\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\r\nNumber.isNaN =\r\n  Number.isNaN ||\r\n  function(value) {\r\n    return value !== value;\r\n  };\r\n\r\nif (typeof Math.sign === 'undefined') {\r\n  Math.sign = function(x) {\r\n    return x > 0 ? 1 : x < 0 ? -1 : x;\r\n  };\r\n}\r\n\r\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\r\nif (!Array.prototype.findIndex) {\r\n  Object.defineProperty(Array.prototype, 'findIndex', {\r\n    value: function(predicate) {\r\n      // 1. Let O be ? ToObject(this value).\r\n      if (this == null) {\r\n        throw new TypeError('\"this\" is null or not defined');\r\n      }\r\n\r\n      var o = Object(this);\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('predicate must be a function');\r\n      }\r\n\r\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n      var thisArg = arguments[1];\r\n\r\n      // 5. Let k be 0.\r\n      var k = 0;\r\n\r\n      // 6. Repeat, while k < len\r\n      while (k < len) {\r\n        // a. Let Pk be ! ToString(k).\r\n        // b. Let kValue be ? Get(O, Pk).\r\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n        // d. If testResult is true, return k.\r\n        var kValue = o[k];\r\n        if (predicate.call(thisArg, kValue, k, o)) {\r\n          return k;\r\n        }\r\n        // e. Increase k by 1.\r\n        k++;\r\n      }\r\n\r\n      // 7. Return -1.\r\n      return -1;\r\n    },\r\n    configurable: true,\r\n    writable: true,\r\n  });\r\n}\r\n","export const routes = {\r\n  leaderboard: {\r\n    path: `/leaderboard`,\r\n  },\r\n  songs: {\r\n    path: `/songs`,\r\n  },\r\n  ranking: {\r\n    path: `/ranking`,\r\n    faq: {\r\n      path: '/ranking/faq',\r\n    },\r\n  },\r\n  profile: {\r\n    path: `/profiles/:id`,\r\n    getPath: params => `/profiles/${params.id}`,\r\n    compare: {\r\n      path: `/profiles/:id/vs/:compareToId`,\r\n      getPath: params => `/profiles/${params.id}/vs/${params.compareToId}`,\r\n    },\r\n  },\r\n};\r\n","import _ from 'lodash/fp';\r\n\r\nexport const SORT = {\r\n  DEFAULT: 'default',\r\n  PROTAGONIST: 'protagonist',\r\n  RANK_ASC: 'rankAsc',\r\n  RANK_DESC: 'rankDesc',\r\n  NEW_SCORES_PLAYER: 'newScoresPlayer',\r\n};\r\n\r\nexport const CHART_MIN_MAX = [1, 28];\r\nexport const DURATION = {\r\n  STD: 'Standard',\r\n  SHORT: 'Short',\r\n  REMIX: 'Remix',\r\n  FULL: 'Full',\r\n};\r\nexport const DURATION_DEFAULT = _.values(DURATION);\r\n","import React from 'react';\r\n\r\nimport './loader.scss';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"loader\">\r\n      <svg\r\n        width=\"40\"\r\n        height=\"12\"\r\n        viewBox=\"0 0 120 30\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"#eee\"\r\n      >\r\n        <circle cx=\"15\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"60\" cy=\"15\" r=\"9\" fillOpacity=\"0.3\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"9\"\r\n            to=\"9\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"9;15;9\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"0.5\"\r\n            to=\"0.5\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\".5;1;.5\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"105\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","export const RESET = `USER/RESET`;\r\nexport const resetUser = () => ({ type: RESET });\r\n","import _ from 'lodash/fp';\r\nimport cookies from 'browser-cookies';\r\n\r\nimport { resetUser } from 'reducers/user/resetAction';\r\n\r\nexport const fetchJson = ({ url }) => request({ url, method: 'get' });\r\nexport const postJson = ({ url, body }) =>\r\n  request({\r\n    url,\r\n    method: 'post',\r\n    body: JSON.stringify(body),\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n    },\r\n  });\r\n\r\nconst defaultHeaders = {};\r\n\r\nexport const request = ({ url, method, body, headers }) => async (dispatch, getState) => {\r\n  try {\r\n    const session = cookies.get('session');\r\n    if (session) {\r\n      defaultHeaders['Session'] = session;\r\n    }\r\n    const response = await fetch(url, {\r\n      method,\r\n      body,\r\n      headers: { ...defaultHeaders, ...headers },\r\n      credentials: 'include',\r\n    });\r\n    if (response.status >= 200 && response.status < 300) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      const error = await response.json();\r\n      if (_.isObject(error) && _.isString(error.error)) {\r\n        throw new Error(error.error);\r\n      } else if (_.isString(error)) {\r\n        throw new Error(error);\r\n      } else {\r\n        throw new Error('HTTP Status ' + response.status);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    if (error.message === 'Invalid session') {\r\n      dispatch(resetUser());\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n","// export const HOST = 'http://localhost:5000';\r\nexport const HOST = 'https://vps720616.ovh.net:5000';\r\nexport const SOCKET_SERVER_IP = 'ws://127.0.0.1:6789';\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `MOST_PLAYED/LOADING`;\r\nconst SUCCESS = `MOST_PLAYED/SUCCESS`;\r\nconst ERROR = `MOST_PLAYED/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchMostPlayed = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-played` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `MOST_PLAYED_MONTH/LOADING`;\r\nconst SUCCESS = `MOST_PLAYED_MONTH/SUCCESS`;\r\nconst ERROR = `MOST_PLAYED_MONTH/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchMostPlayedMonth = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-played-month` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `LEAST_PLAYED/LOADING`;\r\nconst SUCCESS = `LEAST_PLAYED/SUCCESS`;\r\nconst ERROR = `LEAST_PLAYED/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchLeastPlayed = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-time-not-played` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport moment from 'moment';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\n\r\nconst timeStyle = {\r\n  flavour: 'long',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nexport const tooltipFormatter = result => {\r\n  if (!result.isExactDate) {\r\n    const resultType =\r\n      result.isMyBest === undefined && result.isMachineBest === undefined\r\n        ? 'с my best или machine best'\r\n        : result.isMyBest\r\n        ? 'с my best'\r\n        : result.isMachineBest\r\n        ? 'с machine best'\r\n        : 'хз откуда';\r\n    return (\r\n      <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n        <div>точная дата взятия неизвестна</div>\r\n        <div>скор был записан {resultType}</div>\r\n        <div>дата записи: {result.dateObject.toLocaleDateString()}</div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return result.dateObject.toLocaleDateString();\r\n  }\r\n};\r\n\r\nexport const getTimeAgo = date => {\r\n  const dayDiff = moment()\r\n    .startOf('day')\r\n    .diff(moment(date).startOf('day'), 'days');\r\n  const hour = moment(date).hour();\r\n  if (moment().hour() < 5) {\r\n    return dayDiff <= 1 ? 'сегодня' : timeAgo.format(date, timeStyle);\r\n  }\r\n  return dayDiff === 0\r\n    ? hour < 5\r\n      ? 'вчера ночью'\r\n      : 'сегодня'\r\n    : dayDiff === 1\r\n    ? 'вчера'\r\n    : timeAgo.format(date, timeStyle);\r\n};\r\n","import moment from 'moment';\r\n\r\nexport const parseDate = textDate => {\r\n  if (typeof textDate === 'string') {\r\n    return moment(textDate, 'YYYY-MM-DD HH:mm:ss').toDate();\r\n  } else {\r\n    return new Date(textDate);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaPlay } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\n// styles\r\nimport './songs-top.scss';\r\n\r\n// components\r\nimport Loader from 'components/Shared/Loader';\r\n\r\n// constants\r\n\r\n// reducers\r\nimport { fetchMostPlayed } from 'reducers/trackStats/mostPlayed';\r\nimport { fetchMostPlayedMonth } from 'reducers/trackStats/mostPlayedMonth';\r\nimport { fetchLeastPlayed } from 'reducers/trackStats/leastPlayed';\r\n\r\n// utils\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { parseDate } from 'utils/date';\r\n\r\n// code\r\nfunction TopList({ fetchList, title, renderRightSide }) {\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const getRightSide =\r\n    renderRightSide ||\r\n    (item => (\r\n      <div className=\"playcount\">\r\n        <FaPlay />\r\n        <span>{item.countplay}</span>\r\n      </div>\r\n    ));\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchList()\r\n      .then(data => {\r\n        data.success && setData(data.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [fetchList]);\r\n\r\n  return (\r\n    <div className=\"top-songs-list\">\r\n      <div className=\"top-songs-header\">\r\n        <span>{title}</span>\r\n      </div>\r\n      {isLoading && <Loader />}\r\n      {!isLoading &&\r\n        data.map((item, index) => {\r\n          return (\r\n            <div key={item.id} className=\"top-songs-item\">\r\n              <div className={classNames('place', `top-${index + 1}`, { best: index < 3 })}>\r\n                <span>{index + 1}.</span>\r\n              </div>\r\n              <div className=\"song-name\">{item.full_name}</div>\r\n              {getRightSide(item)}\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst leastPlayedRightSide = item => (\r\n  <div className=\"date\">\r\n    <span>{item.last_play ? getTimeAgo(parseDate(item.last_play)) : 'никогда'}</span>\r\n  </div>\r\n);\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    fetchMostPlayed,\r\n    fetchMostPlayedMonth,\r\n    fetchLeastPlayed,\r\n  }\r\n)(function SongsTop({ fetchMostPlayed, fetchMostPlayedMonth, fetchLeastPlayed }) {\r\n  return (\r\n    <div className=\"songs-top-page\">\r\n      <TopList fetchList={fetchMostPlayed} title=\"топ популярных треков\" />\r\n      <TopList fetchList={fetchMostPlayedMonth} title=\"топ популярных треков за месяц\" />\r\n      <TopList\r\n        fetchList={fetchLeastPlayed}\r\n        title=\"треки, которые долго не играли\"\r\n        renderRightSide={leastPlayedRightSide}\r\n      />\r\n      <div className=\"top-songs-list -placeholder\" />\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport toBe from 'prop-types';\r\nimport { Popper } from 'react-popper';\r\nimport classNames from 'classnames';\r\nimport listensToClickOutside from 'react-onclickoutside';\r\n\r\nimport './overlay.scss';\r\n\r\nconst POPPER_MODIFIERS = {\r\n  preventOverflow: {\r\n    enabled: true,\r\n    padding: 10,\r\n    boundariesElement: 'viewport',\r\n  },\r\n};\r\n\r\nconst PLACEMENT_ARROW_MAPPING = {\r\n  right: 'left',\r\n  left: 'right',\r\n  top: 'bottom',\r\n  bottom: 'top',\r\n};\r\n\r\nconst getArrowPlacement = placement => {\r\n  return placement && PLACEMENT_ARROW_MAPPING[placement.split('-')[0]];\r\n};\r\n\r\nclass Overlay extends React.PureComponent {\r\n  static propTypes = {\r\n    placement: toBe.string,\r\n    overlayItem: toBe.any,\r\n    hideWhenOutOfBounds: toBe.bool,\r\n  };\r\n\r\n  static defaultTypes = {\r\n    placement: 'bottom',\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isVisible: false,\r\n    };\r\n    this.containerItemRef = React.createRef();\r\n    this.renderPopper = this.renderPopper.bind(this);\r\n    this.toggleOverlayVisibility = this.toggleOverlayVisibility.bind(this);\r\n  }\r\n\r\n  hideOverlay() {\r\n    this.setState({\r\n      isVisible: false,\r\n    });\r\n  }\r\n\r\n  toggleOverlayVisibility() {\r\n    this.setState({\r\n      isVisible: !this.state.isVisible,\r\n    });\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    const preventHiding = event && event.target.closest('.inner-popper-overlay'); // prevent overlays from hiding when a modal is opened within overlay\r\n\r\n    if (!preventHiding) {\r\n      this.hideOverlay();\r\n    }\r\n  }\r\n\r\n  renderPopper({ ref, style, placement, arrowProps, scheduleUpdate, outOfBoundaries }) {\r\n    const { children, hideWhenOutOfBounds } = this.props;\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        data-placement={placement}\r\n        className={classNames(\r\n          'inner-popper-overlay',\r\n          `arrow-${getArrowPlacement(placement)}`,\r\n          this.props.overlayClassName,\r\n          { 'out-of-bounds': outOfBoundaries && hideWhenOutOfBounds }\r\n        )}\r\n      >\r\n        <div className=\"arrow-hider\">\r\n          <div className=\"arrow\" ref={arrowProps.ref} style={arrowProps.style} />\r\n        </div>\r\n        <div\r\n          className=\"inner-popper-content\"\r\n          // ref={ref => this.setupPopperContentRef(scheduleUpdate, ref)}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { placement, overlayItem } = this.props;\r\n    const { isVisible } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"overlay-item\"\r\n          ref={this.containerItemRef}\r\n          onClick={this.toggleOverlayVisibility}\r\n        >\r\n          {overlayItem}\r\n        </div>\r\n        {isVisible &&\r\n          ReactDOM.createPortal(\r\n            <Popper\r\n              container={document.body}\r\n              modifiers={POPPER_MODIFIERS}\r\n              placement={placement}\r\n              referenceElement={this.containerItemRef.current}\r\n            >\r\n              {this.renderPopper}\r\n            </Popper>,\r\n            document.body\r\n          )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default listensToClickOutside(Overlay);\r\n","import React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './toggle-button.scss';\r\n\r\nexport default class ToggleButton extends React.PureComponent {\r\n  static propTypes = {\r\n    text: toBe.string,\r\n    onToggle: toBe.func,\r\n    active: toBe.bool,\r\n  };\r\n\r\n  render() {\r\n    const { active, onToggle, text } = this.props;\r\n    return (\r\n      <div\r\n        className={classNames('toggle-button', { active: active })}\r\n        onClick={() => onToggle(!active)}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable react/no-deprecated */\r\n// imports from vendor deps\r\nimport React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\n\r\n// imports from styles\r\nexport default class Input extends React.Component {\r\n  static propTypes = {\r\n    value: toBe.any,\r\n    defaultValue: toBe.any,\r\n    onChange: toBe.func,\r\n    onBlur: toBe.func,\r\n    type: toBe.string,\r\n    className: toBe.string,\r\n    trimOnBlur: toBe.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    value: null,\r\n    type: 'text',\r\n    onChange: _.noop,\r\n    onBlur: _.noop,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: (!_.isNil(props.value) ? props.value : props.defaultValue) || '',\r\n    };\r\n    _.bindAll(['handleChange', 'handleBlur', 'handleKeyPress'], this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.value !== this.props.value) {\r\n      this.setState({ value: this.props.value });\r\n    }\r\n  }\r\n\r\n  handleChange(e) {\r\n    const newValue = e.target.value;\r\n    this.setState({ value: newValue }, () => this.props.onChange(newValue));\r\n  }\r\n\r\n  handleBlur(e) {\r\n    const { type } = this.props;\r\n    const { value } = this.state;\r\n    if (type === 'number') {\r\n      const numericValue = Number(value);\r\n      if (numericValue >= Number(e.target.min) && numericValue <= Number(e.target.max)) {\r\n        this.props.onBlur(numericValue, e);\r\n      } else {\r\n        this.setState({ value: this.props.value });\r\n        this.props.onBlur(this.props.value, e);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleKeyPress(e) {\r\n    if (e.key === 'Enter') {\r\n      this.handleBlur(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props;\r\n\r\n    // HACK: This component uses onInput instead of onChange\r\n    // because IE11 fails to call onChange events when you paste/cut using context menu (RMB)\r\n    // We're using onInput because it works fine, and because for text input\r\n    // there's no difference between how onChange and onInput work\r\n    return (\r\n      <input\r\n        {..._.omit(['defaultValue', 'onChange'], this.props)}\r\n        className={classNames(className, 'text-input')}\r\n        value={this.state.value}\r\n        onBlur={this.handleBlur}\r\n        onKeyPress={this.handleKeyPress}\r\n        onInput={this.handleChange}\r\n        onChange={_.noop} // Handled by onInput\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './toggle.scss';\r\n\r\n// imports from styles\r\nexport default class Toggle extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.id = _.uniqueId();\r\n  }\r\n\r\n  onChange = e => {\r\n    this.props.onChange(e.target.checked);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"toggle-checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle-checkbox-cb\"\r\n          id={this.id}\r\n          onChange={this.onChange}\r\n          checked={this.props.checked}\r\n        />\r\n        <label htmlFor={this.id} className=\"toggle\">\r\n          <span></span>\r\n        </label>\r\n        <label htmlFor={this.id} className=\"text-label\">\r\n          {this.props.children}\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\nimport './styles.scss';\r\n\r\nexport default class CollapsibleBar extends PureComponent {\r\n  static propTypes = {\r\n    className: toBe.string,\r\n    children: toBe.any,\r\n    title: toBe.any,\r\n    defaultOpen: toBe.bool,\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = { open: props.defaultOpen || false };\r\n  }\r\n\r\n  render() {\r\n    const { children, title, className } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classNames('collapsible-bar', className, { open })}>\r\n        <div className=\"header\" onClick={() => this.setState(state => ({ open: !state.open }))}>\r\n          <div className=\"collapse-button\">\r\n            <FaChevronRight />\r\n          </div>\r\n          <div className=\"title\">{title}</div>\r\n        </div>\r\n        {children && <div className=\"collapsible-children\">{children}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Range as ReactRange, getTrackBackground } from 'react-range';\r\n\r\nexport default function Range({ range, min, max, onChange }) {\r\n  return (\r\n    <ReactRange\r\n      values={range}\r\n      step={1}\r\n      min={min}\r\n      max={max}\r\n      onChange={onChange}\r\n      renderTrack={({ props, children }) => (\r\n        <div\r\n          onMouseDown={props.onMouseDown}\r\n          onTouchStart={props.onTouchStart}\r\n          style={{\r\n            ...props.style,\r\n            position: 'relative',\r\n            height: '10px',\r\n            display: 'flex',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <div\r\n            ref={props.ref}\r\n            style={{\r\n              height: '6px',\r\n              width: '100%',\r\n              borderRadius: '3px',\r\n              background: getTrackBackground({\r\n                values: range,\r\n                colors: ['#ccc', '#88d3ff', '#ccc'],\r\n                min,\r\n                max,\r\n              }),\r\n              alignSelf: 'center',\r\n            }}\r\n          >\r\n            {children}\r\n          </div>\r\n        </div>\r\n      )}\r\n      renderThumb={({ props, isDragged }) => (\r\n        <div\r\n          {...props}\r\n          style={{\r\n            ...props.style,\r\n            height: '12px',\r\n            width: '12px',\r\n            borderRadius: '6px',\r\n            backgroundColor: '#FFF',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            boxShadow: '0px 2px 3px #AAA',\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              height: '6px',\r\n              width: '6px',\r\n              borderRadius: '3px',\r\n              backgroundColor: isDragged ? '#88d3ff' : '#CCC',\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\nimport { FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Range from 'components/Shared/Range';\r\n\r\nimport { CHART_MIN_MAX, DURATION_DEFAULT, DURATION } from 'constants/leaderboard';\r\n\r\nexport default function ChartFilter({ filterValue, onChange: onChangeEx }) {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filterValue);\r\n  const type = _.getOr(null, 'type', filterValue);\r\n  const duration = _.getOr(DURATION_DEFAULT, 'duration', filterValue);\r\n\r\n  let buttonText = 'фильтр чартов';\r\n  if (filterValue) {\r\n    const t = type || '';\r\n    buttonText = range[0] === range[1] ? `${t}${range[0]}` : `${t}${range[0]} - ${t}${range[1]}`;\r\n    buttonText = 'чарты: ' + buttonText;\r\n    if (!_.isEqual(duration, DURATION_DEFAULT)) {\r\n      buttonText += ' ***';\r\n      // buttonText += ` (${_.values(DURATION)\r\n      //   .filter(dur => duration.includes(dur))\r\n      //   .map(s => s.slice(0, 2))\r\n      //   .join('-')})`;\r\n    }\r\n  }\r\n\r\n  const onChange = value => {\r\n    onChangeEx({\r\n      range,\r\n      type,\r\n      ...value,\r\n      duration: _.isEmpty(value.duration) ? duration : value.duration,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Overlay\r\n        overlayClassName=\"chart-range-overlay-outer\"\r\n        overlayItem={\r\n          <button className=\"filter-charts-button btn btn-sm btn-dark\">{buttonText}</button>\r\n        }\r\n      >\r\n        <div className=\"chart-range-overlay\">\r\n          <div className=\"buttons\">\r\n            <ToggleButton\r\n              text=\"Single\"\r\n              active={type === 'S'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  type: active ? 'S' : null,\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Double\"\r\n              active={type === 'D'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  type: active ? 'D' : null,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <Range\r\n            range={range}\r\n            min={CHART_MIN_MAX[0]}\r\n            max={CHART_MIN_MAX[1]}\r\n            onChange={r => onChange({ range: r })}\r\n          />\r\n          <div className=\"inputs\">\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  range: [Math.max(range[0] - 1, CHART_MIN_MAX[0]), range[1]],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={CHART_MIN_MAX[0]}\r\n              max={Math.min(CHART_MIN_MAX[1], range[1])}\r\n              value={range[0]}\r\n              onBlur={value => {\r\n                onChange({ range: [value, range[1]] });\r\n              }}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMin = Math.min(range[0] + 1, CHART_MIN_MAX[1]);\r\n                onChange({\r\n                  range: [newMin, range[1] < newMin ? newMin : range[1]],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMax = Math.max(range[1] - 1, CHART_MIN_MAX[0]);\r\n                onChange({\r\n                  range: [range[0] > newMax ? newMax : range[0], newMax],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={Math.max(CHART_MIN_MAX[0], range[0])}\r\n              max={CHART_MIN_MAX[1]}\r\n              value={range[1]}\r\n              onBlur={value => onChange({ range: [range[0], value] })}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  range: [range[0], Math.min(range[1] + 1, CHART_MIN_MAX[1])],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n          </div>\r\n          <div className=\"buttons-duration\">\r\n            <ToggleButton\r\n              text=\"Standard\"\r\n              active={duration.includes(DURATION.STD)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.STD]\r\n                    : _.without([DURATION.STD], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Short\"\r\n              active={duration.includes(DURATION.SHORT)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.SHORT]\r\n                    : _.without([DURATION.SHORT], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Remix\"\r\n              active={duration.includes(DURATION.REMIX)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.REMIX]\r\n                    : _.without([DURATION.REMIX], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Full\"\r\n              active={duration.includes(DURATION.FULL)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.FULL]\r\n                    : _.without([DURATION.FULL], duration),\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Overlay>\r\n    </div>\r\n  );\r\n}\r\n","export const ranks = [\r\n  {\r\n    threshold: 0,\r\n    iconName: '0.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 1000,\r\n    iconName: '1.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 2000,\r\n    iconName: '2.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 3000,\r\n    iconName: '3.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 4000,\r\n    iconName: '4.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 5000,\r\n    iconName: '5.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 6250,\r\n    iconName: '6.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 7500,\r\n    iconName: '7.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 8750,\r\n    iconName: '8.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 10000,\r\n    iconName: '9.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 12000,\r\n    iconName: '10.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 14000,\r\n    iconName: '11.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 16000,\r\n    iconName: '12.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 18000,\r\n    iconName: '13.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 22000,\r\n    iconName: '14.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 26000,\r\n    iconName: '15.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 30000,\r\n    iconName: '16.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 35000,\r\n    iconName: '17.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 40000,\r\n    iconName: '18.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 50000,\r\n    iconName: '19.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 60000,\r\n    iconName: '20.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 70000,\r\n    iconName: '21.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 80000,\r\n    iconName: '22.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 100000,\r\n    iconName: '23.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 120000,\r\n    iconName: '24.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 140000,\r\n    iconName: '25.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 160000,\r\n    iconName: '26.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 180000,\r\n    iconName: '27.png',\r\n    color: 'green',\r\n  },\r\n];\r\n","import React from 'react';\r\n\r\nexport const gradeValue = {\r\n  F: 0.1,\r\n  D: 0.2,\r\n  'D+': 0.3,\r\n  C: 0.3,\r\n  'C+': 0.5,\r\n  B: 0.5,\r\n  'B+': 0.8,\r\n  A: 0.8,\r\n  'A+': 1,\r\n  S: 1.1,\r\n  SS: 1.2,\r\n  SSS: 1.2,\r\n};\r\n\r\nexport const getExp = (result, chart) => {\r\n  if (!result.isBestGradeOnChart) {\r\n    return 0;\r\n  }\r\n  if (chart.chartType === 'COOP') {\r\n    return (chart.chartLevel * 1000 * (gradeValue[result.grade] || 0.8)) / 8;\r\n  }\r\n  const exp = (chart.chartLevel ** 2.31 * (gradeValue[result.grade] || 0.8)) / 9;\r\n  return exp;\r\n};\r\n\r\nexport const getRankImg = rank =>\r\n  rank && (\r\n    <img\r\n      className={rank.color}\r\n      src={`${process.env.PUBLIC_URL}/ranks/${rank.iconName}`}\r\n      alt={rank.threshold}\r\n    />\r\n  );\r\n\r\nexport { ranks } from './expRanks';\r\n","import _ from 'lodash/fp';\r\n\r\nimport {\r\n  GiLoveSong,\r\n  GiLifeBar,\r\n  GiSmokingFinger,\r\n  GiSnail,\r\n  GiRetroController,\r\n  GiRank1,\r\n  GiRank2,\r\n  GiRank3,\r\n  GiWoodenPegleg,\r\n  GiPodiumSecond,\r\n} from 'react-icons/gi';\r\n\r\nexport const achievements = {\r\n  '500 комбо': {\r\n    icon: GiRank1,\r\n    description: 'Заработать 500+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 500 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  '1000 комбо': {\r\n    icon: GiRank2,\r\n    description: 'Заработать 1000+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 1000 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  '2000 комбо': {\r\n    icon: GiRank3,\r\n    description: 'Заработать 2000+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 2000 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Мастер фингеринга': {\r\n    icon: GiSmokingFinger,\r\n    description: 'Сыграть все Fingers треки',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: ['Monkey Fingers', 'Kimchi Fingers', 'Monkey Fingers 2', 'Money Fingers'],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  '8-bit': {\r\n    icon: GiRetroController,\r\n    description: 'Сыграть Seize My Day, Tales of Pumpnia и Pumptris (8bit ver.)',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: ['Seize My Day', 'Tales of Pumpnia', 'Pumptris (8bit ver.)'],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  'Love is...': {\r\n    icon: GiLoveSong,\r\n    description: 'Сыграть все Love is a Danger Zone треки',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: [\r\n        'Love is a Danger Zone',\r\n        'Love is a Danger Zone [SHORT]',\r\n        'Love is a Danger Zone (Cranky Mix)',\r\n        'Love is a Danger Zone 2',\r\n        'Love is a Danger Zone 2 [SHORT]',\r\n        'Love is a Danger Zone 2 [FULL]',\r\n        'Love is a Danger Zone 2 (D&G Ver.)',\r\n        'Love is a Danger Zone (try to B.P.M.)',\r\n      ],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  Улитка: {\r\n    icon: GiSnail,\r\n    description:\r\n      'Мастер замедлений: сыграть старшие чарты Twist of Fate, Karyawisata, Awakening и Moonlight',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: [\r\n        { song: 'Twist of Fate (feat. Ruriling)', charts: ['D20', 'S19'] },\r\n        { song: 'Karyawisata', charts: ['S20', 'D16'] },\r\n        { song: 'Awakening', charts: ['S19', 'D20'] },\r\n        { song: 'Moonlight', charts: ['S19', 'D21'] },\r\n      ],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.some(\r\n        songToPlay => chart.song === songToPlay.song && songToPlay.charts.includes(chart.chartLabel)\r\n      )\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  'Коричневая S': {\r\n    icon: GiPodiumSecond,\r\n    description: 'Получить S, но 5+ бэдов',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.miss === 0 && result.bad >= 5 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Мы выживали как могли': {\r\n    icon: GiLifeBar,\r\n    description: 'Получить B или ниже, но удержать лайфбар',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress:\r\n          state.progress === 100 ? 100 : ['B+', 'C+', 'D+'].includes(result.grade) ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Падовый мисс': {\r\n    icon: GiWoodenPegleg,\r\n    description: 'Когда от SSS тебя удерживают только миссы из-за плохого моддинга падов',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress:\r\n          state.progress === 100\r\n            ? 100\r\n            : result.miss > 0 && result.bad === 0 && result.good === 0 && result.great === 0\r\n            ? 100\r\n            : 0,\r\n      };\r\n    },\r\n  },\r\n};\r\n\r\nexport const initialAchievementState = {\r\n  progress: 0,\r\n};\r\n","import _ from 'lodash/fp';\r\n\r\nimport { ranks as expRanks } from 'utils/expRanks';\r\n\r\nconst processBattles = ({ battles, profiles, debug }) => {\r\n  let logText = '';\r\n  const dictChartElo = {};\r\n  const getDictChartEloId = (score, enemyScore) =>\r\n    `${score.playerId}vs${enemyScore.playerId}-${score.sharedChartId}-${score.isRank}`;\r\n  const dictRatingDiff = {};\r\n  const getDictRatingDiffId = score => `${score.playerId}-${score.sharedChartId}-${score.isRank}`;\r\n  const dictScoreInfo = {};\r\n  battles.forEach(([score, enemyScore, song]) => {\r\n    // For each battle\r\n    const p1 = profiles[score.playerId];\r\n    const p2 = profiles[enemyScore.playerId];\r\n\r\n    const scoreMultiplier = score.isRank ? 1.2 : 1;\r\n    let maxScore = null;\r\n    if (song.maxScore) {\r\n      maxScore = song.maxScore * scoreMultiplier;\r\n      if (\r\n        Math.max(maxScore, score.score, enemyScore.score) !== maxScore &&\r\n        !score.isRank &&\r\n        (!score.isExactDate || !enemyScore.isExactDate)\r\n      ) {\r\n        maxScore *= 1.2;\r\n        // Rank from machine best wasn't recognized most likely.\r\n        // Increasing max score by 20% is fine\r\n      }\r\n      if (Math.max(maxScore, score.score, enemyScore.score) !== maxScore) {\r\n        // If calculated max score isn't max score anyway, use current scores as max + cherry on top\r\n        maxScore = Math.max(maxScore, score.score, enemyScore.score) + 10000;\r\n      }\r\n    }\r\n\r\n    // Data to be appended to every score outside of this thread\r\n    if (!dictScoreInfo[score.id]) dictScoreInfo[score.id] = {};\r\n    if (!dictScoreInfo[enemyScore.id]) dictScoreInfo[enemyScore.id] = {};\r\n    const scoreInfo = dictScoreInfo[score.id];\r\n    const enemyScoreInfo = dictScoreInfo[enemyScore.id];\r\n\r\n    // Rating at the start of battle for this score\r\n    if (!scoreInfo.startingRating) scoreInfo.startingRating = p1.rating;\r\n    if (!enemyScoreInfo.startingRating) enemyScoreInfo.startingRating = p2.rating;\r\n\r\n    // Counting the number of battles\r\n    p1.battleCount++;\r\n    p2.battleCount++;\r\n\r\n    // This is one match between two players\r\n    //// Elo formula\r\n    // const r1 = score.startingRating;\r\n    // const r2 = enemyScore.startingRating;\r\n    const r1 = p1.rating;\r\n    const r2 = p2.rating;\r\n    const R1 = 10 ** (r1 / 400);\r\n    const R2 = 10 ** (r2 / 400);\r\n    const E1 = R1 / (R1 + R2);\r\n    const E2 = R2 / (R1 + R2);\r\n    let A = score.score;\r\n    let B = enemyScore.score;\r\n    let S1, S2;\r\n    if (A === B) {\r\n      S1 = S2 = 0.5;\r\n    } else if (maxScore && A !== 0 && B !== 0) {\r\n      A = maxScore / A - 1;\r\n      B = maxScore / B - 1;\r\n      S1 = (B / (A + B) - 0.5) * 5 + 0.5;\r\n      S2 = (A / (A + B) - 0.5) * 5 + 0.5;\r\n    } else {\r\n      S1 = A > B ? 1 : B < A ? 0 : 0.5;\r\n      S2 = 1 - S1;\r\n    }\r\n    S1 = Math.max(0, Math.min(1, S1)); // Set strict boundaries to [0, 1]\r\n    S2 = Math.max(0, Math.min(1, S2));\r\n\r\n    const kRating1 = Math.max(0, Math.min(1, (r1 - 700) / 800));\r\n    const kRating2 = Math.max(0, Math.min(1, (r2 - 700) / 800));\r\n    const maxK1 = 30 + 20 * kRating1;\r\n    const maxK2 = 30 + 20 * kRating2;\r\n    const kLevel1 = Math.max(\r\n      1,\r\n      Math.min(maxK1, (song.chartLevel / 25) ** ((kRating1 - 0.5) * 5 + 2.5) * maxK1)\r\n    );\r\n    const kLevel2 = Math.max(\r\n      1,\r\n      Math.min(maxK2, (song.chartLevel / 25) ** ((kRating2 - 0.5) * 5 + 2.5) * maxK2)\r\n    );\r\n    const kLevel = Math.min(kLevel1, kLevel2);\r\n\r\n    // When YOU vs ENEMY both have SS/SSS, and both scores are very close to SSS, this battle will NOT affect ELO too much\r\n    let kMinimizer = 1;\r\n    const kDropCutoff = 0.98; // Score is 98% of max score or higher -- K will be lower\r\n    if (\r\n      song.maxScore &&\r\n      (score.grade.startsWith('SS') || (score.miss === 0 && score.bad === 0)) &&\r\n      (enemyScore.grade.startsWith('SS') || (enemyScore.miss === 0 && enemyScore.bad === 0)) &&\r\n      score.score / maxScore > kDropCutoff &&\r\n      enemyScore.score / maxScore > kDropCutoff\r\n    ) {\r\n      kMinimizer =\r\n        Math.max(\r\n          Math.min(\r\n            1,\r\n            Math.max(\r\n              100 - (100 * score.score) / maxScore,\r\n              100 - (100 * enemyScore.score) / maxScore\r\n            ) /\r\n              (100 - kDropCutoff * 100)\r\n          ),\r\n          0\r\n        ) ** 2;\r\n    }\r\n\r\n    const K1 = kLevel * kMinimizer;\r\n    const K2 = kLevel * kMinimizer;\r\n    let dr1 = K1 * (S1 - E1);\r\n    let dr2 = K2 * (S2 - E2);\r\n    // Do not decrease rating if you have SSS - RIP zero-sum algorithm\r\n    dr1 = dr1 < 0 && score.grade === 'SSS' ? 0 : dr1;\r\n    dr2 = dr2 < 0 && enemyScore.grade === 'SSS' ? 0 : dr2;\r\n    // Recording this value for display\r\n    const baseEloId1 = getDictChartEloId(score, enemyScore);\r\n    const baseEloId2 = getDictChartEloId(enemyScore, score);\r\n    const baseEloP1 = dictChartElo[baseEloId1] || 0;\r\n    const baseEloP2 = dictChartElo[baseEloId2] || 0;\r\n    dictChartElo[baseEloId1] = dr1;\r\n    dictChartElo[baseEloId2] = dr2;\r\n\r\n    // Change rating as a result of this battle\r\n    p1.rating = p1.rating + dr1 - baseEloP1;\r\n    p2.rating = p2.rating + dr2 - baseEloP2;\r\n\r\n    const ratingDiffId1 = getDictRatingDiffId(score);\r\n    const ratingDiffId2 = getDictRatingDiffId(enemyScore);\r\n    dictRatingDiff[ratingDiffId1] = (dictRatingDiff[ratingDiffId1] || 0) + dr1 - baseEloP1;\r\n    dictRatingDiff[ratingDiffId2] = (dictRatingDiff[ratingDiffId2] || 0) + dr2 - baseEloP2;\r\n\r\n    // Q\r\n    scoreInfo.ratingDiff = dictRatingDiff[ratingDiffId1];\r\n    scoreInfo.ratingDiffLast = dr1 - baseEloP1;\r\n\r\n    enemyScoreInfo.ratingDiff = dictRatingDiff[ratingDiffId2];\r\n    enemyScoreInfo.ratingDiffLast = dr2 - baseEloP2;\r\n\r\n    if (debug) {\r\n      // if (score.sharedChartId === 5292) {\r\n      // if (song.song === 'Club Night') {\r\n      // if (score.nickname === 'Liza' || enemyScore.nickname === 'Liza') {\r\n      // if (!song.maxScore) {\r\n      logText += `${song.chartLabel} - ${song.song} (${song.sharedChartId}) - ${\r\n        profiles[score.playerId].name\r\n      } / ${profiles[enemyScore.playerId].name}\r\n- ${score.score} / ${enemyScore.score} (${Math.floor(maxScore)} (${Math.floor(\r\n        song.maxScore * scoreMultiplier\r\n      )})) - R ${S1.toFixed(2)}/${S2.toFixed(2)} E ${E1.toFixed(2)} / ${E2.toFixed(2)}\r\n- Rating ${r1.toFixed(2)} / ${r2.toFixed(2)} - ${dr1.toFixed(2)} / ${dr2.toFixed(\r\n        2\r\n      )} - K ${K1.toFixed(2)} ${K2.toFixed(2)}${\r\n        kMinimizer === 1 ? '' : ` (coef ${kMinimizer.toFixed(2)})`\r\n      }\r\n- Base elo: ${baseEloP1.toFixed(2)} / ${baseEloP2.toFixed(2)}\r\n- Elo change: ${(dr1 - baseEloP1).toFixed(2)} / ${(dr2 - baseEloP2).toFixed(2)}\r\n- New base elo: ${dictChartElo[baseEloId1].toFixed(2)} / ${dictChartElo[baseEloId2].toFixed(2)}\r\n- RD: ${dictRatingDiff[ratingDiffId1].toFixed(2)} / ${dictRatingDiff[ratingDiffId2].toFixed(2)}\\n`;\r\n    }\r\n    // Rating floor\r\n    p1.rating = Math.max(100, p1.rating);\r\n    p2.rating = Math.max(100, p2.rating);\r\n\r\n    const playersSorted = _.flow(\r\n      _.keys,\r\n      _.map(id => ({ id, rating: profiles[id].rating })),\r\n      _.orderBy(['rating'], ['desc'])\r\n    )(profiles);\r\n    const battleDate =\r\n      score.dateObject > enemyScore.dateObject ? score.dateObject : enemyScore.dateObject;\r\n    playersSorted.forEach((player, index) => {\r\n      const lastPlace = profiles[player.id].lastPlace;\r\n      if (lastPlace !== index + 1) {\r\n        profiles[player.id].rankingHistory.push({\r\n          place: index + 1,\r\n          date: battleDate.getTime(),\r\n        });\r\n        profiles[player.id].lastPlace = index + 1;\r\n      }\r\n    });\r\n\r\n    const p1LastRating = _.last(p1.ratingHistory);\r\n    const p2LastRating = _.last(p2.ratingHistory);\r\n    if (p1LastRating !== p1.rating) {\r\n      p1.ratingHistory.push({\r\n        rating: p1.rating,\r\n        date: battleDate.getTime(),\r\n      });\r\n    }\r\n    if (p2LastRating !== p2.rating) {\r\n      p2.ratingHistory.push({\r\n        rating: p2.rating,\r\n        date: battleDate.getTime(),\r\n      });\r\n    }\r\n  });\r\n\r\n  _.flow(\r\n    _.keys,\r\n    _.forEach(key => {\r\n      profiles[key].id = _.toInteger(key);\r\n      profiles[key].accuracy =\r\n        profiles[key].countAcc > 0\r\n          ? Math.round((profiles[key].sumAccuracy / profiles[key].countAcc) * 100) / 100\r\n          : null;\r\n      profiles[key].ratingRaw = profiles[key].rating;\r\n      profiles[key].rating = Math.round(profiles[key].rating);\r\n      profiles[key].rankingHistory = [\r\n        ...profiles[key].rankingHistory,\r\n        { place: _.get('place', _.last(profiles[key].rankingHistory)), date: Date.now() },\r\n      ];\r\n    })\r\n  )(profiles);\r\n  return { logText, scoreInfo: dictScoreInfo };\r\n};\r\n\r\nconst postProcessProfiles = (profiles, tracklist) => {\r\n  const getBonusForLevel = level => (30 * (1 + 2 ** (level / 4))) / 11;\r\n  const getMinimumNumber = totalCharts =>\r\n    Math.round(\r\n      Math.min(totalCharts, 1 + totalCharts / 20 + Math.sqrt(Math.max(totalCharts - 1, 0)) * 0.7)\r\n    );\r\n\r\n  const newProfiles = _.mapValues(profile => {\r\n    const neededGrades = ['A', 'A+', 'S', 'SS', 'SSS'];\r\n    profile.expRank = _.findLast(rank => rank.threshold <= profile.exp, expRanks);\r\n    profile.expRankNext = _.find(rank => rank.threshold > profile.exp, expRanks);\r\n    profile.progress = {\r\n      double: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n      single: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n    };\r\n    const gradeIncrementMap = {\r\n      SSS: ['SS', 'S', 'A+', 'A'],\r\n      SS: ['SS', 'S', 'A+', 'A'],\r\n      S: ['S', 'A+', 'A'],\r\n      'A+': ['A+', 'A'],\r\n      A: ['A'],\r\n    };\r\n    const incrementLevel = (l, g, chartType) => {\r\n      const prog =\r\n        chartType === 'S' || chartType === 'SP'\r\n          ? profile.progress.single\r\n          : chartType === 'D' || chartType === 'DP'\r\n          ? profile.progress.double\r\n          : null;\r\n      if (prog) {\r\n        prog[g][l] = prog[g][l] ? prog[g][l] + 1 : 1;\r\n      }\r\n    };\r\n    _.keys(profile.resultsByLevel).forEach(level => {\r\n      profile.resultsByLevel[level].forEach(res => {\r\n        const thisGrade = res.result.grade;\r\n        const thisPlayerId = res.result.playerId;\r\n        const otherResults = res.chart.results.filter(r => r.playerId === thisPlayerId);\r\n        if (otherResults.length > 1) {\r\n          const sortedResults = otherResults.sort(\r\n            (a, b) => neededGrades.indexOf(b.grade) - neededGrades.indexOf(a.grade)\r\n          );\r\n          if (sortedResults[0].grade !== thisGrade) {\r\n            return; // Don't do anything when we have a different result with better grade\r\n          }\r\n        }\r\n        const gradeIncArray = gradeIncrementMap[thisGrade];\r\n        if (gradeIncArray) {\r\n          gradeIncArray.forEach(gradeInc => {\r\n            incrementLevel(level, gradeInc, res.chart.chartType);\r\n          });\r\n        }\r\n      });\r\n    });\r\n    ['single', 'double'].forEach(chartType => {\r\n      profile.progress[`${chartType}-bonus`] = 0;\r\n      _.keys(profile.progress[chartType]).forEach(grade => {\r\n        profile.progress[chartType][`${grade}-bonus`] = 0;\r\n        _.keys(profile.progress[chartType][grade]).forEach(level => {\r\n          const number = profile.progress[chartType][grade][level];\r\n          const totalCharts = tracklist.data[`${chartType}sLevels`][level];\r\n          const minimumNumber = getMinimumNumber(totalCharts);\r\n          const bonusCoefficientNumber = Math.min(1, number / minimumNumber);\r\n          const rawBonus = getBonusForLevel(level);\r\n          const bonus = rawBonus * bonusCoefficientNumber;\r\n          profile.progress[chartType][grade][`${level}-bonus`] = bonus;\r\n          profile.progress[chartType][grade][`${level}-bonus-coef`] = bonusCoefficientNumber;\r\n          profile.progress[chartType][grade][`${level}-min-number`] = minimumNumber;\r\n          profile.progress[chartType][grade][`${level}-achieved-number`] = number;\r\n          if (bonus >= profile.progress[chartType][`${grade}-bonus`]) {\r\n            profile.progress[chartType][`${grade}-bonus`] = bonus;\r\n            profile.progress[chartType][`${grade}-bonus-level`] = level;\r\n            profile.progress[chartType][`${grade}-bonus-level-coef`] = bonusCoefficientNumber;\r\n            profile.progress[chartType][`${grade}-bonus-level-min-number`] = minimumNumber;\r\n            profile.progress[chartType][`${grade}-bonus-level-achieved-number`] = number;\r\n          }\r\n        });\r\n        profile.progress[`${chartType}-bonus`] += profile.progress[chartType][`${grade}-bonus`];\r\n      });\r\n    });\r\n    profile.progress.bonus = profile.progress['double-bonus'] + profile.progress['single-bonus'];\r\n    profile.rating = 850 + profile.progress.bonus;\r\n    profile.accuracy =\r\n      profile.countAcc > 0\r\n        ? Math.round((profile.sumAccuracy / profile.countAcc) * 100) / 100\r\n        : null;\r\n    return profile;\r\n  }, profiles);\r\n  return newProfiles;\r\n};\r\n\r\nexport const getProcessedProfiles = ({ profiles, tracklist, battles, debug }) => {\r\n  // Calculate Progress achievements and bonus for starting Elo\r\n  const processedProfiles = postProcessProfiles(profiles, tracklist);\r\n  // Calculate ELO\r\n  const { logText, scoreInfo } = processBattles({ battles, profiles: processedProfiles, debug });\r\n  return { processedProfiles, logText, scoreInfo };\r\n};\r\n","if (localStorage) {\r\n  window.debugOn = () => {\r\n    localStorage.setItem('debug', 1);\r\n  };\r\n  window.debugOff = () => {\r\n    localStorage.removeItem('debug');\r\n  };\r\n}\r\n\r\nexport const DEBUG = localStorage && localStorage.getItem('debug');\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\nimport lev from 'fast-levenshtein';\r\nimport queryString from 'query-string';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\nimport { getExp } from 'utils/exp';\r\nimport { achievements, initialAchievementState } from 'utils/achievements';\r\nimport { parseDate } from 'utils/date';\r\n\r\nimport WorkerProfilesProcessing from 'workerize-loader!utils/workers/profilesPostProcess'; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport * as profilesProcessing from 'utils/workers/profilesPostProcess';\r\n\r\nimport { HOST } from 'constants/backend';\r\nimport { DEBUG } from 'constants/env';\r\n\r\nconst LOADING = `TOP/LOADING`;\r\nconst SUCCESS = `TOP/SUCCESS`;\r\nconst ERROR = `TOP/ERROR`;\r\nconst SET_FILTER = `TOP/SET_FILTER`;\r\nconst RESET_FILTER = `TOP/RESET_FILTER`;\r\nconst RANKING_CHANGE_SET = `TOP/RANKING_CHANGE_SET`;\r\nconst PROFILES_UPDATE = `TOP/PROFILES_UPDATE`;\r\n\r\nexport const defaultFilter = { showRank: true, showRankAndNorank: true };\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  isLoadingRanking: false,\r\n  data: [],\r\n  filter: defaultFilter,\r\n  players: {},\r\n  profiles: {},\r\n  results: [],\r\n  scoreInfo: {},\r\n  sharedCharts: {},\r\n};\r\n\r\nexport const gradeComparator = {\r\n  '?': 0,\r\n  F: 1,\r\n  D: 2,\r\n  'D+': 3,\r\n  C: 4,\r\n  'C+': 5,\r\n  B: 6,\r\n  'B+': 7,\r\n  A: 8,\r\n  'A+': 9,\r\n  S: 10,\r\n  SS: 11,\r\n  SSS: 12,\r\n};\r\n\r\nconst tryFixIncompleteResult = (result, maxTotalSteps) => {\r\n  if (!maxTotalSteps) {\r\n    return;\r\n  }\r\n  const infos = [result.perfect, result.great, result.good, result.bad, result.miss];\r\n  let fixableIndex = -1,\r\n    absentNumbersCount = 0,\r\n    localStepSum = 0;\r\n  for (let i = 0; i < 5; ++i) {\r\n    if (!_.isNumber(infos[i])) {\r\n      fixableIndex = i;\r\n      absentNumbersCount++;\r\n    } else {\r\n      localStepSum += infos[i];\r\n    }\r\n  }\r\n  if (absentNumbersCount === 1) {\r\n    result[['perfect', 'great', 'good', 'bad', 'miss'][fixableIndex]] =\r\n      maxTotalSteps - localStepSum;\r\n  }\r\n};\r\n\r\nconst guessGrade = result => {\r\n  if (result.misses === 0 && result.bads === 0 && result.goods === 0) {\r\n    if (result.greats === 0) {\r\n      return 'SSS';\r\n    } else {\r\n      return 'SS';\r\n    }\r\n  }\r\n  return result.grade;\r\n};\r\n\r\nconst mapResult = (res, players, chart) => {\r\n  if (typeof res.recognition_notes === 'undefined') {\r\n    // Short result, minimum info, only for ELO calculation\r\n    // Will be replaced with better result later\r\n    return {\r\n      id: res.id,\r\n      isUnknownPlayer: players[res.player].arcade_name === 'PUMPITUP',\r\n      isIntermediateResult: true,\r\n      sharedChartId: res.shared_chart,\r\n      playerId: res.player,\r\n      nickname: players[res.player].nickname,\r\n      nicknameArcade: players[res.player].arcade_name,\r\n      date: res.gained,\r\n      dateObject: parseDate(res.gained),\r\n      grade: res.grade,\r\n      isExactDate: !!res.exact_gain_date,\r\n      score: res.score,\r\n      isRank: !!res.rank_mode,\r\n    };\r\n  }\r\n  // Full best result\r\n  let _r = {\r\n    isUnknownPlayer: players[res.player].arcade_name === 'PUMPITUP',\r\n    isIntermediateResult: false,\r\n    sharedChartId: res.shared_chart,\r\n    id: res.id,\r\n    playerId: res.player,\r\n    nickname: players[res.player].nickname,\r\n    nicknameArcade: players[res.player].arcade_name,\r\n    originalChartMix: res.original_mix,\r\n    originalChartLabel: res.original_label,\r\n    originalScore: res.original_score,\r\n    date: res.gained,\r\n    dateObject: parseDate(res.gained),\r\n    grade: res.grade !== '?' ? res.grade : guessGrade(res),\r\n    isExactDate: !!res.exact_gain_date,\r\n    score: res.score,\r\n    scoreIncrease: res.score_increase,\r\n    calories: res.calories && res.calories / 1000,\r\n    perfect: res.perfects,\r\n    great: res.greats,\r\n    good: res.goods,\r\n    bad: res.bads,\r\n    miss: res.misses,\r\n    combo: res.max_combo,\r\n    mods: res.mods_list,\r\n    isRank: !!res.rank_mode,\r\n    isHJ: (res.mods_list || '').split(' ').includes('HJ'),\r\n    isMachineBest: res.recognition_notes === 'machine_best',\r\n    isMyBest: res.recognition_notes === 'personal_best',\r\n  };\r\n\r\n  tryFixIncompleteResult(_r, chart.maxTotalSteps);\r\n\r\n  const perfects = Math.sqrt(_r.perfect) * 10;\r\n  const acc = perfects\r\n    ? Math.floor(\r\n        ((perfects * 100 + _r.great * 60 + _r.good * 30 + _r.miss * -20) /\r\n          (perfects + _r.great + _r.good + _r.bad + _r.miss)) *\r\n          100\r\n      ) / 100\r\n    : null;\r\n  const accRaw = _r.perfect\r\n    ? Math.floor(\r\n        ((_r.perfect * 100 + _r.great * 60 + _r.good * 30 + _r.miss * -20) /\r\n          (_r.perfect + _r.great + _r.good + _r.bad + _r.miss)) *\r\n          100\r\n      ) / 100\r\n    : null;\r\n\r\n  _r.accuracy = acc < 0 ? 0 : accRaw === 100 ? 100 : acc && +acc.toFixed(2);\r\n  _r.accuracyRaw = accRaw;\r\n  return _r;\r\n};\r\n\r\nconst getMaxScore = score => {\r\n  return ((score.score / score.accuracyRaw) * 100) / (score.isRank ? 1.2 : 1);\r\n};\r\n\r\nconst initializeProfile = (result, profiles) => {\r\n  const id = result.playerId;\r\n  const resultsByLevel = _.fromPairs(Array.from({ length: 28 }).map((x, i) => [i + 1, []]));\r\n  profiles[id] = {\r\n    name: result.nickname,\r\n    nameArcade: result.nicknameArcade,\r\n    resultsByGrade: {},\r\n    resultsByLevel,\r\n    lastResultDate: result.dateObject,\r\n    count: 0,\r\n    battleCount: 0,\r\n    countAcc: 0,\r\n    grades: { F: 0, D: 0, C: 0, B: 0, A: 0, S: 0, SS: 0, SSS: 0 },\r\n    sumAccuracy: 0,\r\n    rankingHistory: [],\r\n    ratingHistory: [],\r\n    lastPlace: null,\r\n    lastBattleDate: 0,\r\n  };\r\n  profiles[id].achievements = _.flow(\r\n    _.keys,\r\n    _.map(achName => [\r\n      achName,\r\n      { ...(achievements[achName].initialState || initialAchievementState) },\r\n    ]),\r\n    _.fromPairs\r\n  )(achievements);\r\n  profiles[id].exp = 0;\r\n};\r\n\r\nconst getProfileInfoFromResult = (result, chart, profiles) => {\r\n  const profile = profiles[result.playerId];\r\n\r\n  profile.count++;\r\n  if (result.accuracy) {\r\n    profile.countAcc++;\r\n    profile.sumAccuracy += result.accuracy;\r\n  }\r\n  profile.grades[result.grade.replace('+', '')]++;\r\n  if (chart.chartType !== 'COOP' && result.isBestGradeOnChart) {\r\n    profile.resultsByGrade[result.grade] = [\r\n      ...(profile.resultsByGrade[result.grade] || []),\r\n      { result, chart },\r\n    ];\r\n    profile.resultsByLevel[chart.chartLevel] = [\r\n      ...(profile.resultsByLevel[chart.chartLevel] || []),\r\n      { result, chart },\r\n    ];\r\n  }\r\n  if (result.isExactDate && profile.lastResultDate < result.dateObject) {\r\n    profile.lastResultDate = result.dateObject;\r\n  }\r\n  profile.achievements = _.mapValues.convert({ cap: false })((achState, achName) => {\r\n    return achievements[achName].resultFunction(result, chart, achState, profile);\r\n  }, profile.achievements);\r\n  profile.exp += getExp(result, chart);\r\n};\r\n\r\nconst processData = (data, tracklist) => {\r\n  const { players, results, shared_charts } = data;\r\n  //// Initialization\r\n  // Init for TOP\r\n  const mappedResults = [];\r\n  const getTopResultId = result => `${result.sharedChartId}-${result.playerId}-${result.isRank}`;\r\n  const getBestGradeResultId = result => `${result.sharedChartId}-${result.playerId}`;\r\n  const topResults = {}; // Temp object\r\n  const bestGradeResults = {}; // Temp object\r\n  const top = {}; // Main top scores pbject\r\n\r\n  // Battles for ELO calculation\r\n  const battles = [];\r\n  // Profiles for every player\r\n  let profiles = {};\r\n\r\n  // Loop 1\r\n  for (let resRaw of results) {\r\n    const sharedChartId = resRaw.shared_chart;\r\n    // Initialize Song\r\n    if (!top[sharedChartId]) {\r\n      const sharedChart = shared_charts[sharedChartId];\r\n      const label = _.toUpper(sharedChart.chart_label);\r\n      const [chartType, chartLevel] = label.match(/(\\D+)|(\\d+)/g);\r\n      top[sharedChartId] = {\r\n        song: sharedChart.track_name,\r\n        chartLabel: label,\r\n        chartLevel,\r\n        chartType,\r\n        duration: sharedChart.duration,\r\n        sharedChartId: sharedChartId,\r\n        maxTotalSteps: sharedChart.max_total_steps,\r\n        results: [],\r\n        totalResultsCount: 0,\r\n      };\r\n    }\r\n\r\n    // Getting current chart and result (mapped)\r\n    const chartTop = top[sharedChartId];\r\n    const result = mapResult(resRaw, players, chartTop);\r\n    mappedResults.push(result);\r\n\r\n    // Inserting result into TOP\r\n    const topResultId = getTopResultId(result);\r\n    const currentTopResult = topResults[topResultId];\r\n    if (!currentTopResult || currentTopResult.score < result.score) {\r\n      if (currentTopResult) {\r\n        const oldScoreIndex = chartTop.results.indexOf(currentTopResult);\r\n        if (oldScoreIndex !== -1) {\r\n          chartTop.results.splice(oldScoreIndex, 1);\r\n        }\r\n      }\r\n      const newScoreIndex = _.sortedLastIndexBy(r => -r.score, result, chartTop.results);\r\n      if (!result.isUnknownPlayer || newScoreIndex === 0) {\r\n        chartTop.results.splice(newScoreIndex, 0, result);\r\n        chartTop.latestScoreDate = result.date;\r\n        chartTop.totalResultsCount++;\r\n        topResults[topResultId] = result;\r\n      }\r\n\r\n      if (!result.isUnknownPlayer) {\r\n        chartTop.results.forEach(enemyResult => {\r\n          if (\r\n            !enemyResult.isUnknownPlayer &&\r\n            enemyResult.isRank === result.isRank &&\r\n            enemyResult.playerId !== result.playerId &&\r\n            result.score &&\r\n            enemyResult.score\r\n          ) {\r\n            battles.push([result, enemyResult, chartTop]);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    // Getting best grade of player on this chart\r\n    if (!result.isIntermediateResult) {\r\n      const bestGradeResultId = getBestGradeResultId(result);\r\n      const currentBestGradeRes = bestGradeResults[bestGradeResultId];\r\n      if (\r\n        !currentBestGradeRes ||\r\n        gradeComparator[currentBestGradeRes.grade] <= gradeComparator[result.grade]\r\n      ) {\r\n        // Using <= here, so newer scores always win and rewrite old scores\r\n        currentBestGradeRes && (currentBestGradeRes.isBestGradeOnChart = false);\r\n        result.isBestGradeOnChart = true;\r\n        bestGradeResults[bestGradeResultId] = result;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Loop 2, when the TOP is already set up\r\n  for (let chartId in top) {\r\n    const chart = top[chartId];\r\n    chart.maxScoreWithAccuracy = 0;\r\n    for (let result of chart.results) {\r\n      if (result.accuracyRaw && chart.maxScoreWithAccuracy < result.score) {\r\n        chart.maxScoreResult = result;\r\n        chart.maxScoreWithAccuracy = result.score;\r\n      }\r\n      // Getting some info about players\r\n      if (!result.isUnknownPlayer && !result.isIntermediateResult) {\r\n        if (!profiles[result.playerId]) {\r\n          initializeProfile(result, profiles);\r\n        }\r\n        getProfileInfoFromResult(result, chart, profiles);\r\n      }\r\n    }\r\n    if (chart.maxScoreWithAccuracy) {\r\n      chart.maxScore = getMaxScore(chart.maxScoreResult, chart);\r\n    }\r\n  }\r\n\r\n  return { mappedResults, profiles, sharedCharts: top, battles };\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: initialState.data,\r\n        players: initialState.players,\r\n        profiles: initialState.profiles,\r\n        results: initialState.results,\r\n        sharedCharts: initialState.sharedCharts,\r\n        scoreInfo: {},\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isLoadingRanking: true,\r\n        data: action.data,\r\n        players: action.players,\r\n        profiles: action.profiles,\r\n        results: action.results,\r\n        sharedCharts: action.sharedCharts,\r\n        originalData: action.originalData,\r\n        scoreInfo: {},\r\n      };\r\n    case PROFILES_UPDATE:\r\n      return {\r\n        ...state,\r\n        isLoadingRanking: false,\r\n        profiles: action.profiles,\r\n        scoreInfo: action.scoreInfo,\r\n      };\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    case RANKING_CHANGE_SET:\r\n      const hasPrevList = !_.isEmpty(action.listPrev);\r\n      return {\r\n        ...state,\r\n        profiles: _.mapValues(playerOriginal => {\r\n          const player = {\r\n            ...playerOriginal,\r\n            prevRating: _.get(playerOriginal.id, action.rankingsPointsMap),\r\n          };\r\n          if (!hasPrevList) {\r\n            return player; // First time opening this thing and we didn't have any previous data\r\n          }\r\n          if (!_.includes(player.id, action.listPrev)) {\r\n            return { ...player, change: 'NEW' };\r\n          } else if (!_.includes(player.id, action.listNow)) {\r\n            // Should NEVER happen, idk if this is possible\r\n            return { ...player, change: '?' };\r\n          } else {\r\n            return {\r\n              ...player,\r\n              change: _.indexOf(player.id, action.listPrev) - _.indexOf(player.id, action.listNow),\r\n            };\r\n          }\r\n        }, state.profiles),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchResults = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        fetchJson({\r\n          url: `${HOST}/results/highscores`,\r\n        })\r\n      );\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n      // HACK for test\r\n      // data.results = _.dropRight(152, data.results);\r\n      dispatch(processResultsData(data));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const appendNewResults = () => {\r\n  return async (dispatch, getState) => {\r\n    const { originalData, sharedCharts } = getState().results;\r\n    const lastDate = _.get('gained', _.last(originalData.results));\r\n    if (!lastDate) {\r\n      return dispatch(fetchResults());\r\n    }\r\n\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        fetchJson({\r\n          url: `${HOST}/results/highscores?${queryString.stringify({ start_date: lastDate })}`,\r\n        })\r\n      );\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n\r\n      const appendedResults = _.filter(result => {\r\n        const currentResults = sharedCharts[result.shared_chart];\r\n        if (!currentResults) {\r\n          return true;\r\n        }\r\n        return !_.some(\r\n          r =>\r\n            r.playerId === result.player &&\r\n            r.isRank === !!result.rank_mode &&\r\n            r.score > result.score,\r\n          currentResults.results\r\n        );\r\n      }, data.results);\r\n\r\n      const mergedData = {\r\n        players: data.players,\r\n        results: [...originalData.results, ...appendedResults],\r\n        shared_charts: { ...originalData.shared_charts, ...data.shared_charts },\r\n      };\r\n      dispatch(processResultsData(mergedData));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const appendResultFromSocket = (socketData, newSongTop) => {\r\n  return async (dispatch, getState) => {\r\n    const { originalData } = getState().results;\r\n    console.log(originalData, socketData, newSongTop);\r\n\r\n    const newSharedCharts = { ...originalData.shared_charts };\r\n    let newResults = [...originalData.results];\r\n\r\n    const processSocketResult = socketResult => {\r\n      // // HACK:\r\n      // socketData.gained = '2019-11-30 20:04:49';\r\n\r\n      console.log('processing new result from sockets', socketResult);\r\n      const score = socketResult.result.score;\r\n      const name = socketResult.result.player_name;\r\n      const playerId = _.flow(\r\n        _.toPairs,\r\n        _.minBy(([id, { arcade_name }]) => lev.get(arcade_name, name)),\r\n        _.first,\r\n        _.toNumber\r\n      )(originalData.players);\r\n      const chartData = _.flow(\r\n        _.toPairs,\r\n        _.find(([chartId, chart]) => chart.chart_label === socketResult.chart_label)\r\n      )(newSongTop.results);\r\n      const searchQuery = {\r\n        gained: socketData.gained.replace(' ', 'T'),\r\n        score,\r\n        player: playerId,\r\n      };\r\n      console.log('match query for result', searchQuery);\r\n      const thisResult = _.find(searchQuery, _.get('[1].results', chartData));\r\n      if (thisResult) {\r\n        console.log('new result found');\r\n        // This new result appeared in top, we need to add it to total results list\r\n        let [chartId, chart] = chartData;\r\n        chartId = _.toNumber(chartId);\r\n        if (!newSharedCharts[chartId]) {\r\n          newSharedCharts[chartId] = {\r\n            chart_label: chart.chart_label,\r\n            track_name: chart.track,\r\n            duration: chart.duration,\r\n          };\r\n          console.log('adding new shared chart', chartId, newSharedCharts[chartId]);\r\n        }\r\n\r\n        let previousTopScoreIndex = -1;\r\n        let previousTopScore = 0;\r\n        let previousTopResult = null;\r\n        originalData.results.forEach((res, index) => {\r\n          if (\r\n            res.shared_chart === chartId &&\r\n            res.rank_mode === thisResult.rank_mode &&\r\n            res.player === thisResult.player &&\r\n            res.score > previousTopScore\r\n          ) {\r\n            previousTopScore = res.score;\r\n            previousTopResult = res.score;\r\n            previousTopScoreIndex = index;\r\n          }\r\n        });\r\n        if (previousTopResult) {\r\n          console.log('changing prev result', previousTopResult);\r\n          newResults = [\r\n            ...newResults.slice(0, previousTopScoreIndex),\r\n            _.pick(\r\n              [\r\n                'gained',\r\n                'exact_gain_date',\r\n                'shared_chart',\r\n                'player',\r\n                'rank_mode',\r\n                'score',\r\n                'grade',\r\n                'id',\r\n              ],\r\n              previousTopResult\r\n            ),\r\n            ...newResults.slice(previousTopScoreIndex + 1),\r\n          ];\r\n        }\r\n        console.log('adding new result', thisResult);\r\n        newResults.push({\r\n          player: playerId,\r\n          shared_chart: chartId,\r\n          gained: socketData.gained,\r\n          exact_gain_date: 1,\r\n          rank_mode: _.includes('VJ', socketResult.result.mods_list),\r\n          ..._.pick(\r\n            [\r\n              'grade',\r\n              'recognition_notes',\r\n              'mods_list',\r\n              'score',\r\n              'misses',\r\n              'bads',\r\n              'goods',\r\n              'greats',\r\n              'perfects',\r\n              'max_combo',\r\n              'calories',\r\n              'score_increase',\r\n              'exact_gain_date',\r\n            ],\r\n            socketResult.result\r\n          ),\r\n        });\r\n      }\r\n    };\r\n\r\n    if (socketData.left) {\r\n      processSocketResult(socketData.left);\r\n    }\r\n\r\n    if (socketData.right) {\r\n      processSocketResult(socketData.right);\r\n    }\r\n\r\n    const data = {\r\n      players: originalData.players, // will not be changed i think\r\n      results: newResults,\r\n      shared_charts: newSharedCharts,\r\n    };\r\n\r\n    dispatch(processResultsData(data));\r\n  };\r\n};\r\n\r\nconst processResultsData = data => {\r\n  return async (dispatch, getState) => {\r\n    const { tracklist } = getState();\r\n    const { sharedCharts, mappedResults, profiles, battles } = processData(data, tracklist);\r\n\r\n    dispatch({\r\n      type: SUCCESS,\r\n      data: _.values(sharedCharts),\r\n      players: _.flow(\r\n        _.toPairs,\r\n        _.map(([id, player]) => ({ ...player, id: _.toInteger(id) }))\r\n      )(data.players),\r\n      results: mappedResults,\r\n      profiles,\r\n      sharedCharts,\r\n      originalData: data,\r\n    });\r\n\r\n    // Parallelized calculation of ELO and profile data\r\n    const input = { profiles, tracklist, battles, debug: DEBUG };\r\n    let promise, worker;\r\n    if (window.Worker) {\r\n      worker = new WorkerProfilesProcessing();\r\n      promise = worker.getProcessedProfiles(input);\r\n    } else {\r\n      promise = new Promise(res => res(profilesProcessing.getProcessedProfiles(input)));\r\n    }\r\n\r\n    const { processedProfiles, logText, scoreInfo } = await promise;\r\n    DEBUG && console.log(logText);\r\n    dispatch({ type: PROFILES_UPDATE, profiles: processedProfiles, scoreInfo });\r\n    dispatch(calculateRankingChanges(processedProfiles));\r\n    if (worker) worker.terminate();\r\n  };\r\n};\r\n\r\nexport const setFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\n\r\nexport const resetFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n\r\nconst getListOfNames = _.map('id');\r\nconst getMapOfRatings = _.flow(\r\n  _.map(q => [q.id, q.rating]),\r\n  _.fromPairs\r\n);\r\n\r\nexport const calculateRankingChanges = profiles => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const ranking = _.orderBy('ratingRaw', 'desc', _.values(profiles));\r\n      const [lastChangedRanking, lastChangedRankingPoints, lastFetchedRanking] = await Promise.all([\r\n        localForage.getItem('lastChangedRanking_v3'),\r\n        localForage.getItem('lastChangedRankingPoints_v3'),\r\n        localForage.getItem('lastFetchedRanking_v3'),\r\n      ]);\r\n      const listNow = getListOfNames(ranking);\r\n      const listLastFetched = getListOfNames(lastFetchedRanking);\r\n      const listLastChanged = getListOfNames(lastChangedRanking);\r\n      const mapPointsNow = getMapOfRatings(ranking);\r\n      const mapPointsLastFetched = getMapOfRatings(lastFetchedRanking);\r\n      const mapPointsLastChanged = getMapOfRatings(lastChangedRankingPoints);\r\n\r\n      let rankingsPointsMap = mapPointsLastChanged;\r\n      // console.log(listNow, listLastFetched, listLastChanged);\r\n      // console.log(mapPointsNow, mapPointsLastFetched, mapPointsLastChanged);\r\n      if (!_.isEqual(mapPointsNow, mapPointsLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRankingPoints_v3', lastFetchedRanking);\r\n        rankingsPointsMap = mapPointsLastFetched;\r\n      }\r\n      let listPrev = listLastChanged;\r\n      if (!_.isEqual(listNow, listLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRanking_v3', lastFetchedRanking);\r\n        listPrev = listLastFetched;\r\n      }\r\n      dispatch({\r\n        type: RANKING_CHANGE_SET,\r\n        listNow,\r\n        listPrev,\r\n        rankingsPointsMap,\r\n      });\r\n      localForage.setItem('lastFetchedRanking_v3', ranking);\r\n    } catch (error) {\r\n      console.warn('Cannot get ranking from local storage', error);\r\n    }\r\n  };\r\n};\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\n\r\nimport { setFilter } from 'reducers/results';\r\n\r\nconst SELECT_PRESET = `PRESETS/SELECT_PRESET`;\r\nconst LOAD_PRESETS = `PRESETS/LOAD_PRESETS`;\r\nconst LOADING_START = `PRESETS/LOADING_START`;\r\nconst LOADING_END = `PRESETS/LOADING_END`;\r\n\r\nconst initialState = {\r\n  presets: [],\r\n  currentPreset: null,\r\n  isLoading: false,\r\n};\r\n\r\nconst itemToOption = item =>\r\n  item && {\r\n    ...item,\r\n    label: item.name,\r\n    value: item.name,\r\n  };\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_PRESETS:\r\n      const currentPreset = _.find({ name: _.get('name', state.currentPreset) }, action.presets);\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(currentPreset) || null,\r\n        presets: _.map(itemToOption, action.presets),\r\n      };\r\n    case SELECT_PRESET:\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(action.currentPreset),\r\n      };\r\n    case LOADING_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case LOADING_END:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst reloadPresets = presets => ({ type: LOAD_PRESETS, presets: presets || [] });\r\n\r\nconst startLoading = () => ({\r\n  type: LOADING_START,\r\n});\r\n\r\nconst endLoading = () => ({\r\n  type: LOADING_END,\r\n});\r\n\r\nexport const selectPreset = currentPreset => ({\r\n  type: SELECT_PRESET,\r\n  currentPreset,\r\n});\r\n\r\nexport const loadPresets = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    dispatch(reloadPresets(presets));\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const savePreset = name => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const { filter } = getState().top;\r\n    const newPreset = { name, filter };\r\n    if (!_.some({ name }, presets)) {\r\n      const newPresets = [...(presets || []), newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      dispatch(selectPreset(newPreset));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    } else if (window.confirm('Preset with this name already exists, replace it?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      const newPresets = [...withoutOldPreset, newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const openPreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const currentPreset = getState().presets.currentPreset;\r\n  const name = _.get('name', currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = name && _.find({ name }, presets);\r\n    if (preset) {\r\n      dispatch(selectPreset(currentPreset));\r\n      dispatch(setFilter(currentPreset.filter));\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const deletePreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const name = _.get('name', getState().presets.currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = _.find({ name }, presets);\r\n    if (preset && window.confirm('Are you sure you want to delete selected preset?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      dispatch(reloadPresets(withoutOldPreset));\r\n      localForage.setItem('filterPresets', withoutOldPreset);\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaLayerGroup, FaFolderOpen, FaSave, FaPlus, FaTrashAlt } from 'react-icons/fa';\r\nimport Select from 'react-select';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport Input from 'components/Shared/Input/Input';\r\n\r\nimport { loadPresets, savePreset, selectPreset, openPreset, deletePreset } from 'reducers/presets';\r\n\r\nconst overlayItem = (\r\n  <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n    <FaLayerGroup />\r\n    пресеты\r\n  </button>\r\n);\r\n\r\nconst noPresetsMessage = () => 'пусто';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ...state.presets,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  loadPresets,\r\n  savePreset,\r\n  openPreset,\r\n  deletePreset,\r\n  selectPreset,\r\n};\r\n\r\nclass PresetsControl extends React.Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    this.props.loadPresets();\r\n  }\r\n\r\n  onChangeSelection = selected => {\r\n    this.props.selectPreset(selected.name);\r\n  };\r\n\r\n  onRewritePreset = () => {\r\n    const { currentPreset } = this.props;\r\n    this.props.savePreset(currentPreset.name);\r\n  };\r\n\r\n  onSavePreset = () => {\r\n    const { name } = this.state;\r\n    this.props.savePreset(name);\r\n    this.setState({ isAddingNew: false });\r\n  };\r\n\r\n  render() {\r\n    const { presets, currentPreset, isLoading } = this.props;\r\n    const { name, isAddingNew } = this.state;\r\n    return (\r\n      <div>\r\n        <Overlay overlayItem={overlayItem}>\r\n          <div className=\"presets-control-overlay\">\r\n            <Select\r\n              className=\"select _margin-bottom\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"пресеты...\"\r\n              options={presets}\r\n              value={currentPreset}\r\n              onChange={this.props.selectPreset}\r\n              noOptionsMessage={noPresetsMessage}\r\n            />\r\n            {currentPreset && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.props.openPreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaFolderOpen /> открыть\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.onRewritePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaSave /> перезаписать\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon\"\r\n                  onClick={this.props.deletePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaTrashAlt /> удалить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {!isAddingNew && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left _self-align-end\"\r\n                  onClick={() => this.setState({ isAddingNew: true })}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaPlus /> добавить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {isAddingNew && (\r\n              <div className=\"adding-new _margin-bottom\">\r\n                <Input\r\n                  value={name}\r\n                  placeholder=\"имя пресета...\"\r\n                  className=\"form-control\"\r\n                  onChange={name => this.setState({ name })}\r\n                />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={this.onSavePreset}\r\n                  disabled={!name || isLoading}\r\n                >\r\n                  <FaSave /> сохранить\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={() => this.setState({ isAddingNew: false })}\r\n                  disabled={isLoading}\r\n                >\r\n                  отмена\r\n                </button>\r\n              </div>\r\n            )}\r\n            {/* <div>\r\n              <Toggle\r\n                checked={false}\r\n                onToggle={active => {\r\n                  localForage.setItem('showTabs', active);\r\n                }}\r\n              >\r\n                показывать табы с пресетами\r\n              </Toggle>\r\n            </div> */}\r\n          </div>\r\n        </Overlay>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PresetsControl);\r\n","export const colorsArray = [\r\n  '#4DB3FF',\r\n  '#80B300',\r\n  '#FF6655',\r\n  '#FF99E6',\r\n  '#33FFCC',\r\n  '#e633c8',\r\n  '#dbe812',\r\n  '#FF1A66',\r\n  '#991AFF',\r\n  '#E6B333',\r\n  '#1AB399',\r\n  '#4D8066',\r\n  '#CC9999',\r\n  '#00E680',\r\n  '#809980',\r\n  '#E6FF80',\r\n  '#1AFF33',\r\n  '#999933',\r\n  '#E6331A',\r\n  '#CCCC00',\r\n  '#66E64D',\r\n  '#4D80CC',\r\n  '#9900B3',\r\n  '#4DB380',\r\n  '#FF4D4D',\r\n];\r\n","import _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport matchSorter from 'match-sorter';\r\n\r\nimport { SORT, CHART_MIN_MAX, DURATION_DEFAULT } from 'constants/leaderboard';\r\n\r\nexport const playersSelector = createSelector(\r\n  state => state.results.players,\r\n  _.flow(\r\n    _.toPairs,\r\n    _.map(([id, { nickname, arcade_name }]) => ({\r\n      label: `${nickname} (${arcade_name})`,\r\n      value: nickname,\r\n    })),\r\n    _.sortBy(it => _.toLower(it.label))\r\n  )\r\n);\r\n\r\nconst filterCharts = (filter, rows) => {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filter);\r\n  const type = _.getOr(null, 'type', filter);\r\n  const duration = _.getOr(DURATION_DEFAULT, 'duration', filter);\r\n\r\n  return _.filter(row => {\r\n    if (duration !== DURATION_DEFAULT && !duration.includes(row.duration)) {\r\n      return false;\r\n    }\r\n    return (\r\n      row.chartLevel >= range[0] &&\r\n      row.chartLevel <= range[1] &&\r\n      (!type || row.chartType.startsWith(type))\r\n    );\r\n  }, rows);\r\n};\r\n\r\nconst getFilteredData = (data, filter, scoreInfo = {}) => {\r\n  // const start = performance.now();\r\n  const names = _.map('value', filter.players);\r\n  const namesOr = _.map('value', filter.playersOr);\r\n  const namesNot = _.map('value', filter.playersNot);\r\n  const sortingType = _.get('value', filter.sortingType);\r\n  const protagonist = _.get('value', filter.protagonist);\r\n  const excludeAntagonists = _.map('value', filter.excludeAntagonists);\r\n\r\n  const defaultSorting = [_.orderBy(['latestScoreDate'], ['desc'])];\r\n  const newScoresProtagonistSorting = !protagonist\r\n    ? defaultSorting\r\n    : [\r\n        _.orderBy(\r\n          [\r\n            song =>\r\n              _.max(\r\n                _.map(\r\n                  res => (res.nickname === protagonist ? res.dateObject.getTime() : 0),\r\n                  song.results\r\n                )\r\n              ),\r\n          ],\r\n          ['desc']\r\n        ),\r\n      ];\r\n  const protagonistSorting = [\r\n    _.filter(row => _.map('nickname', row.results).includes(protagonist)),\r\n    _.map(row => {\r\n      const protIndex = _.findIndex({ nickname: protagonist }, row.results);\r\n      const protScore = row.results[protIndex].score;\r\n      const enemies = _.flow([\r\n        _.take(protIndex),\r\n        _.uniqBy('nickname'),\r\n        _.remove(res => excludeAntagonists.includes(res.nickname) || res.score === protScore),\r\n      ])(row.results);\r\n      const distance = Math.sqrt(\r\n        _.reduce((dist, enemy) => dist + (enemy.score / protScore - 0.99) ** 2, 0, enemies)\r\n      );\r\n      return {\r\n        ...row,\r\n        distanceFromProtagonist: distance,\r\n      };\r\n    }),\r\n    _.orderBy(['distanceFromProtagonist'], ['desc']),\r\n  ];\r\n  const getScoreSorting = direction => [\r\n    _.filter(row => _.map('nickname', row.results).includes(protagonist)),\r\n    _.orderBy(\r\n      [\r\n        row => {\r\n          const score = _.find({ nickname: protagonist }, row.results);\r\n          const info = scoreInfo[score.id];\r\n          return _.getOr(direction === 'asc' ? Infinity : -Infinity, 'ratingDiff', info);\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const sortingFunctions =\r\n    {\r\n      [SORT.DEFAULT]: defaultSorting,\r\n      [SORT.NEW_SCORES_PLAYER]: newScoresProtagonistSorting,\r\n      [SORT.PROTAGONIST]: protagonistSorting,\r\n      [SORT.RANK_ASC]: getScoreSorting('asc'),\r\n      [SORT.RANK_DESC]: getScoreSorting('desc'),\r\n    }[sortingType] || defaultSorting;\r\n\r\n  const result = _.flow(\r\n    _.compact([\r\n      _.map(row => ({\r\n        ...row,\r\n        results: row.results.filter(\r\n          (res, index) => !res.isUnknownPlayer || index === 0,\r\n          row.results\r\n        ),\r\n      })),\r\n      filter.chartRange && (items => filterCharts(filter.chartRange, items)),\r\n      !filter.showRank &&\r\n        _.map(row => ({ ...row, results: _.filter(res => !res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        filter.showOnlyRank &&\r\n        _.map(row => ({ ...row, results: _.filter(res => res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        !filter.showOnlyRank &&\r\n        !filter.showRankAndNorank &&\r\n        _.map(row => {\r\n          const occuredNames = [];\r\n          return {\r\n            ...row,\r\n            results: _.filter(res => {\r\n              const alreadyOccured = occuredNames.includes(res.nickname);\r\n              occuredNames.push(res.nickname);\r\n              return !alreadyOccured;\r\n            }, row.results),\r\n          };\r\n        }),\r\n      (names.length || namesOr.length || namesNot.length) &&\r\n        _.filter(row => {\r\n          const rowNames = _.map('nickname', row.results);\r\n          return (\r\n            (!names.length || _.every(name => rowNames.includes(name), names)) &&\r\n            (!namesOr.length || _.some(name => rowNames.includes(name), namesOr)) &&\r\n            (!namesNot.length || !_.some(name => rowNames.includes(name), namesNot))\r\n          );\r\n        }),\r\n      _.filter(row => _.size(row.results)),\r\n      ...sortingFunctions,\r\n      filter.song && (items => matchSorter(items, filter.song.trim(), { keys: ['song'] })),\r\n    ])\r\n  )(data);\r\n  // console.log('Elapsed:', performance.now() - start);\r\n  return result;\r\n};\r\n\r\nexport const filteredDataSelector = createSelector(\r\n  state => state.results.data,\r\n  state => state.results.filter,\r\n  state => state.results.scoreInfo,\r\n  getFilteredData\r\n);\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash/fp';\r\nimport Select from 'react-select';\r\nimport classNames from 'classnames';\r\nimport numeral from 'numeral';\r\nimport localForage from 'localforage';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport {\r\n  FaRedoAlt,\r\n  FaExclamationTriangle,\r\n  FaSearch,\r\n  FaYoutube,\r\n  FaAngleDoubleUp,\r\n  FaBackward,\r\n  FaForward,\r\n} from 'react-icons/fa';\r\nimport FlipMove from 'react-flip-move';\r\n\r\n// styles\r\nimport './leaderboard.scss';\r\n\r\n// components\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport CollapsibleBar from 'components/Shared/CollapsibleBar';\r\nimport ChartFilter from './ChartFilter';\r\nimport PresetsControl from './PresetsControl';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\nimport { SORT } from 'constants/leaderboard';\r\nimport { DEBUG } from 'constants/env';\r\n\r\n// reducers\r\nimport { fetchResults, setFilter, resetFilter, defaultFilter } from 'reducers/results';\r\nimport { selectPreset, openPreset } from 'reducers/presets';\r\n\r\n// utils\r\nimport { getExp } from 'utils/exp';\r\nimport { tooltipFormatter, getTimeAgo } from 'utils/leaderboards';\r\nimport { colorsArray } from 'utils/colors';\r\nimport { playersSelector, filteredDataSelector } from 'reducers/selectors';\r\n\r\n// code\r\nconst ANIMATION_DURATION = 250;\r\nconst sortingOptions = [\r\n  {\r\n    label: 'от новых скоров',\r\n    value: SORT.DEFAULT,\r\n  },\r\n  {\r\n    label: 'от новых скоров конкретного игрока',\r\n    value: SORT.NEW_SCORES_PLAYER,\r\n  },\r\n  // {\r\n  //   label: 'отставанию от остальных',\r\n  //   value: SORT.PROTAGONIST,\r\n  // },\r\n  // ...(DEBUG\r\n  //   ? [\r\n  {\r\n    label: 'от худших результатов',\r\n    value: SORT.RANK_ASC,\r\n  },\r\n  {\r\n    label: 'от лучших результатов',\r\n    value: SORT.RANK_DESC,\r\n  },\r\n  //   ]\r\n  // : []),\r\n];\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    players: playersSelector(state),\r\n    scoreInfo: state.results.scoreInfo,\r\n    results: state.results.results,\r\n    filteredData: filteredDataSelector(state),\r\n    data: state.results.data,\r\n    filter: state.results.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading: state.results.isLoading || state.tracklist.isLoading,\r\n    presets: state.presets.presets,\r\n    currentPreset: state.presets.currentPreset,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setFilter,\r\n  resetFilter,\r\n  selectPreset,\r\n  openPreset,\r\n};\r\n\r\nclass Leaderboard extends Component {\r\n  static propTypes = {\r\n    match: toBe.object,\r\n    scoreInfo: toBe.object,\r\n    data: toBe.array,\r\n    error: toBe.object,\r\n    results: toBe.array,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  state = { showItemsCount: 20, chartOverrides: {} };\r\n\r\n  setFilter = _.curry((name, value) => {\r\n    const filter = { ...this.props.filter, [name]: value };\r\n    this.props.setFilter(filter);\r\n    localForage.setItem('filter', filter);\r\n  });\r\n\r\n  resetFilter = () => {\r\n    this.props.resetFilter();\r\n    this.setState({ chartOverrides: {} });\r\n    localForage.setItem('filter', defaultFilter);\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    this.setState({ chartOverrides: {} });\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onTypeSongName = _.debounce(300, value => {\r\n    this.setFilter('song', value);\r\n  });\r\n\r\n  onRedoLatestResult = _.throttle(ANIMATION_DURATION + 10, chart => {\r\n    const overrides = _.drop(1, this.state.chartOverrides[chart.sharedChartId]);\r\n    this.setState(state => ({\r\n      chartOverrides: {\r\n        ...state.chartOverrides,\r\n        [chart.sharedChartId]: _.size(overrides) === 1 ? null : overrides,\r\n      },\r\n    }));\r\n  });\r\n\r\n  onUndoLatestResult = _.throttle(ANIMATION_DURATION + 10, chart => {\r\n    if (_.isEmpty(chart.results)) {\r\n      this.setState(state => ({\r\n        chartOverrides: _.omit(chart.sharedChartId, state.chartOverrides),\r\n      }));\r\n    }\r\n    const undoedResult = _.maxBy('date', chart.results);\r\n    if (!undoedResult) return;\r\n\r\n    const { results } = this.props;\r\n    const undoedPlayerId = undoedResult.playerId;\r\n    const previousPlayerResult = _.findLast(\r\n      res =>\r\n        res.playerId === undoedPlayerId &&\r\n        res.sharedChartId === chart.sharedChartId &&\r\n        res.isRank === undoedResult.isRank &&\r\n        res.date < undoedResult.date,\r\n      results\r\n    );\r\n    const newResults = _.orderBy(\r\n      'score',\r\n      'desc',\r\n      _.compact(_.map(res => (res === undoedResult ? previousPlayerResult : res), chart.results))\r\n    );\r\n    const latestScore = _.maxBy('date', newResults);\r\n    const overrideChart = {\r\n      ...chart,\r\n      latestScoreDate: latestScore && latestScore.date,\r\n      results: newResults,\r\n    };\r\n    if (_.isEmpty(newResults)) {\r\n      this.setState(state => ({\r\n        chartOverrides: {\r\n          ...state.chartOverrides,\r\n          [chart.sharedChartId]: null,\r\n        },\r\n      }));\r\n    } else {\r\n      this.setState(state => ({\r\n        chartOverrides: {\r\n          ...state.chartOverrides,\r\n          [chart.sharedChartId]: [\r\n            overrideChart,\r\n            ...(state.chartOverrides[chart.sharedChartId] || [chart]),\r\n          ],\r\n        },\r\n      }));\r\n    }\r\n  });\r\n\r\n  renderSimpleSearch() {\r\n    const { isLoading, filter } = this.props;\r\n    return (\r\n      <div className=\"simple-search\">\r\n        <div className=\"song-name _margin-right _margin-bottom\">\r\n          <Input\r\n            value={filter.song || ''}\r\n            placeholder=\"название песни...\"\r\n            className=\"form-control\"\r\n            onChange={this.onTypeSongName}\r\n          />\r\n        </div>\r\n        <div className=\"chart-range _margin-right _margin-bottom\">\r\n          <ChartFilter filterValue={filter.chartRange} onChange={this.setFilter('chartRange')} />\r\n        </div>\r\n        <div className=\"_flex-fill\" />\r\n        <div className=\"_flex-row _margin-bottom\">\r\n          <PresetsControl />\r\n          <button className=\"btn btn-sm btn-dark btn-icon _margin-right\" onClick={this.resetFilter}>\r\n            <FaRedoAlt /> сбросить фильтры\r\n          </button>\r\n          <button\r\n            disabled={isLoading}\r\n            className=\"btn btn-sm btn-dark btn-icon\"\r\n            onClick={this.onRefresh}\r\n          >\r\n            <FaSearch /> обновить\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFilters() {\r\n    const { players, filter } = this.props;\r\n\r\n    return (\r\n      <div className=\"filters\">\r\n        <div className=\"people-filters\">\r\n          <label className=\"label\">показывать чарты, которые сыграл:</label>\r\n          <div className=\"players-block\">\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">каждый из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'players', filter)}\r\n                onChange={this.setFilter('players')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и хоть один из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersOr', filter)}\r\n                onChange={this.setFilter('playersOr')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и никто из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersNot', filter)}\r\n                onChange={this.setFilter('playersNot')}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Toggle\r\n            checked={_.getOr(false, 'showRank', filter)}\r\n            onChange={this.setFilter('showRank')}\r\n          >\r\n            показывать скоры на ранке\r\n          </Toggle>\r\n        </div>\r\n        {_.get('showRank', filter) && (\r\n          <>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showOnlyRank', filter)}\r\n                onChange={value => {\r\n                  this.setFilter('showOnlyRank', value);\r\n                  if (_.get('showRankAndNorank', filter)) {\r\n                    this.setFilter('showRankAndNorank', false);\r\n                  }\r\n                }}\r\n              >\r\n                <strong>только</strong> на ранке\r\n              </Toggle>\r\n            </div>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showRankAndNorank', filter)}\r\n                onChange={value => {\r\n                  this.setFilter('showRankAndNorank', value);\r\n                  if (_.get('showOnlyRank', filter)) {\r\n                    this.setFilter('showOnlyRank', false);\r\n                  }\r\n                }}\r\n              >\r\n                показывать лучшие скоры с ранком и без\r\n              </Toggle>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSortings() {\r\n    const { players, filter } = this.props;\r\n    return (\r\n      <div className=\"sortings\">\r\n        <div>\r\n          <label className=\"label\">сортировка:</label>\r\n          <Select\r\n            placeholder=\"выберите сортировку\"\r\n            className=\"select\"\r\n            classNamePrefix=\"select\"\r\n            isClearable={false}\r\n            options={sortingOptions}\r\n            value={_.getOr(sortingOptions[0], 'sortingType', filter)}\r\n            onChange={this.setFilter('sortingType')}\r\n          />\r\n        </div>\r\n        {[SORT.PROTAGONIST, SORT.RANK_ASC, SORT.RANK_DESC, SORT.NEW_SCORES_PLAYER].includes(\r\n          _.get('sortingType.value', filter)\r\n        ) && (\r\n          <div>\r\n            <label className=\"label\">игрок:</label>\r\n            <Select\r\n              className={classNames('select players', {\r\n                'red-border': !_.get('protagonist', filter),\r\n              })}\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              value={_.getOr(null, 'protagonist', filter)}\r\n              onChange={this.setFilter('protagonist')}\r\n            />\r\n          </div>\r\n        )}\r\n        {[SORT.PROTAGONIST].includes(_.get('sortingType.value', filter)) && (\r\n          <div>\r\n            <label className=\"label\">не учитывать в сравнении:</label>\r\n            <Select\r\n              closeMenuOnSelect={false}\r\n              className=\"select players\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              isMulti\r\n              value={_.getOr([], 'excludeAntagonists', filter)}\r\n              onChange={this.setFilter('excludeAntagonists')}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, filteredData, error, filter, scoreInfo } = this.props;\r\n    const { showItemsCount, chartOverrides } = this.state;\r\n    const canShowMore = filteredData.length > showItemsCount;\r\n    const visibleData = _.slice(0, showItemsCount, filteredData);\r\n\r\n    const showProtagonistRatingChange = [SORT.PROTAGONIST, SORT.RANK_ASC, SORT.RANK_DESC].includes(\r\n      _.get('sortingType.value', filter)\r\n    );\r\n    const highlightProtagonist = [\r\n      SORT.PROTAGONIST,\r\n      SORT.RANK_ASC,\r\n      SORT.RANK_DESC,\r\n      SORT.NEW_SCORES_PLAYER,\r\n    ].includes(_.get('sortingType.value', filter));\r\n    const protagonistName = _.get('protagonist.value', filter);\r\n    const uniqueSelectedNames = _.slice(\r\n      0,\r\n      colorsArray.length,\r\n      _.uniq(\r\n        _.compact([\r\n          highlightProtagonist && protagonistName,\r\n          ..._.map('value', filter.players),\r\n          ..._.map('value', filter.playersOr),\r\n        ])\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div className=\"leaderboard-page\">\r\n        <div className=\"content\">\r\n          <div className=\"search-block\">\r\n            {this.renderSimpleSearch()}\r\n            <CollapsibleBar title=\"фильтры\">{this.renderFilters()}</CollapsibleBar>\r\n            <CollapsibleBar title=\"сортировка\">{this.renderSortings()}</CollapsibleBar>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!!this.props.presets.length && (\r\n            <div className=\"presets-buttons\">\r\n              <span>пресеты:</span>\r\n              {this.props.presets.map(preset => (\r\n                <ToggleButton\r\n                  key={preset.name}\r\n                  text={preset.name}\r\n                  className=\"btn btn-sm btn-dark _margin-right\"\r\n                  active={_.get('filter', preset) === this.props.filter}\r\n                  onToggle={() => {\r\n                    this.props.selectPreset(preset);\r\n                    this.props.openPreset();\r\n                  }}\r\n                ></ToggleButton>\r\n              ))}\r\n            </div>\r\n          )}\r\n          <div className=\"top-list\">\r\n            {_.isEmpty(filteredData) && !isLoading && (error ? error.message : 'ничего не найдено')}\r\n            {!isLoading &&\r\n              visibleData.map((chartOriginal, chartIndex) => {\r\n                const overrides = chartOverrides[chartOriginal.sharedChartId];\r\n                const chart = _.first(overrides) || chartOriginal;\r\n                if (DEBUG) console.log(chart);\r\n                let topPlace = 1;\r\n                const occuredNicknames = [];\r\n                const results = chart.results.map((res, index) => {\r\n                  const isSecondOccurenceInResults = occuredNicknames.includes(res.nickname);\r\n                  occuredNicknames.push(res.nickname);\r\n                  if (index === 0) {\r\n                    topPlace = 1;\r\n                  } else if (\r\n                    !isSecondOccurenceInResults &&\r\n                    res.score !== _.get([index - 1, 'score'], chart.results)\r\n                  ) {\r\n                    topPlace += 1;\r\n                  }\r\n                  return {\r\n                    ...res,\r\n                    topPlace,\r\n                    isSecondOccurenceInResults,\r\n                  };\r\n                });\r\n                return (\r\n                  <div className=\"song-block\" key={chart.song + chart.chartLabel}>\r\n                    <div className=\"song-name\">\r\n                      <div\r\n                        className={classNames('chart-name', {\r\n                          single: chart.chartType === 'S',\r\n                          singlep: chart.chartType === 'SP',\r\n                          doublep: chart.chartType === 'DP',\r\n                          double: chart.chartType === 'D',\r\n                          coop: chart.chartType === 'COOP',\r\n                        })}\r\n                      >\r\n                        <span className=\"chart-letter\">{chart.chartType}</span>\r\n                        <span className=\"chart-number\">{chart.chartLevel}</span>\r\n                      </div>\r\n                      <div>{chart.song}</div>\r\n                      <div className=\"youtube-link\">\r\n                        <a\r\n                          href={`https://youtube.com/results?search_query=${chart.song\r\n                            .replace(/ /g, '+')\r\n                            .replace(/-/g, '')}+${chart.chartLabel}`}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          <FaYoutube />\r\n                        </a>\r\n                      </div>\r\n                      <div className=\"_flex-fill\" />\r\n                      {(() => {\r\n                        const isActive = !_.isEmpty(overrides);\r\n                        const currentIndex = isActive\r\n                          ? 1 + chart.totalResultsCount - _.size(overrides)\r\n                          : chart.totalResultsCount;\r\n                        const canUndo = !(currentIndex === 1 && chart.totalResultsCount === 1);\r\n                        return (\r\n                          <div\r\n                            className={classNames('undo-result-button', {\r\n                              active: isActive,\r\n                            })}\r\n                          >\r\n                            <FaBackward\r\n                              className={classNames('backward-btn', { disabled: !canUndo })}\r\n                              onClick={() => canUndo && this.onUndoLatestResult(chart)}\r\n                            />\r\n                            <span className=\"number\">\r\n                              {currentIndex}/{chart.totalResultsCount}\r\n                            </span>\r\n                            <FaForward\r\n                              className={classNames('forward-btn', { disabled: !isActive })}\r\n                              onClick={() => isActive && this.onRedoLatestResult(chart)}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      })()}\r\n                    </div>\r\n                    <div className=\"charts\">\r\n                      {!_.isEmpty(results) && (\r\n                        <div className=\"chart\">\r\n                          <div className=\"results\">\r\n                            <table>\r\n                              {chartIndex === 0 && (\r\n                                <thead>\r\n                                  <tr>\r\n                                    <th className=\"place\"></th>\r\n                                    <th className=\"nickname\"></th>\r\n                                    <th className=\"judge\"></th>\r\n                                    <th className=\"score\">score</th>\r\n                                    <th className=\"grade\"></th>\r\n                                    <th className=\"number\">miss</th>\r\n                                    <th className=\"number\">bad</th>\r\n                                    <th className=\"number\">good</th>\r\n                                    <th className=\"number\">great</th>\r\n                                    <th className=\"number\">perfect</th>\r\n                                    <th className=\"combo\">combo</th>\r\n                                    <th className=\"accuracy\">accuracy</th>\r\n                                    <th className=\"date\"></th>\r\n                                  </tr>\r\n                                </thead>\r\n                              )}\r\n                              <FlipMove\r\n                                enterAnimation=\"fade\"\r\n                                leaveAnimation=\"fade\"\r\n                                typeName=\"tbody\"\r\n                                maintainContainerHeight\r\n                                duration={ANIMATION_DURATION}\r\n                              >\r\n                                {results.map((res, index) => {\r\n                                  if (res.isUnknownPlayer && index !== 0) {\r\n                                    return null;\r\n                                  }\r\n                                  const nameIndex = uniqueSelectedNames.indexOf(res.nickname);\r\n                                  let placeDifference, newIndex;\r\n                                  if (res.scoreIncrease && res.date === chart.latestScoreDate) {\r\n                                    const prevScore = res.score - res.scoreIncrease;\r\n                                    newIndex = _.findLastIndex(\r\n                                      res => res.score > prevScore,\r\n                                      results\r\n                                    );\r\n                                    placeDifference = newIndex - index;\r\n                                  }\r\n                                  const inf = scoreInfo[res.id] || {};\r\n                                  return (\r\n                                    <tr\r\n                                      key={res.isRank + '_' + res.nickname}\r\n                                      className={classNames({\r\n                                        empty: !res.isExactDate,\r\n                                        latest: res.date === chart.latestScoreDate,\r\n                                      })}\r\n                                    >\r\n                                      <td className=\"place\">\r\n                                        {res.isSecondOccurenceInResults ? '' : `#${res.topPlace}`}\r\n                                      </td>\r\n                                      <td\r\n                                        className=\"nickname\"\r\n                                        style={\r\n                                          nameIndex > -1\r\n                                            ? { fontWeight: 'bold', color: colorsArray[nameIndex] }\r\n                                            : {}\r\n                                        }\r\n                                      >\r\n                                        {res.nickname}\r\n                                        {!!placeDifference && (\r\n                                          <span className=\"change-holder up\">\r\n                                            <span>{placeDifference}</span>\r\n                                            <FaAngleDoubleUp />\r\n                                          </span>\r\n                                        )}\r\n                                        {DEBUG && inf.startingRating && (\r\n                                          <span className=\"debug-elo-info\">\r\n                                            {' '}\r\n                                            {inf.startingRating && Math.round(inf.startingRating)}\r\n                                            {' / '}\r\n                                            {inf.ratingDiff && Math.round(inf.ratingDiff)}{' '}\r\n                                          </span>\r\n                                        )}\r\n                                        {!DEBUG &&\r\n                                          showProtagonistRatingChange &&\r\n                                          res.nickname === protagonistName &&\r\n                                          inf.ratingDiff && (\r\n                                            <span>\r\n                                              {` (${inf.ratingDiff > 0 ? '+' : ''}${Math.round(\r\n                                                inf.ratingDiff\r\n                                              )})`}\r\n                                            </span>\r\n                                          )}\r\n                                        {_.get('sortingType.value', filter) === SORT.PROTAGONIST &&\r\n                                          res.nickname === protagonistName &&\r\n                                          chart.distanceFromProtagonist > 0 && (\r\n                                            <span className=\"protagonist-diff\">\r\n                                              {' '}\r\n                                              -{(chart.distanceFromProtagonist * 100).toFixed(1)}%\r\n                                            </span>\r\n                                          )}\r\n                                      </td>\r\n                                      <td\r\n                                        className={classNames('judge', {\r\n                                          vj: res.isRank,\r\n                                          hj: res.isHJ,\r\n                                        })}\r\n                                      >\r\n                                        {res.isRank && (\r\n                                          <div className=\"inner\">\r\n                                            {res.isExactDate ? (\r\n                                              'VJ'\r\n                                            ) : (\r\n                                              <Tooltip\r\n                                                content={\r\n                                                  <div>\r\n                                                    наличие ранка на этом результате было угадано,\r\n                                                    основываясь на скоре\r\n                                                  </div>\r\n                                                }\r\n                                                tooltipClassName=\"pumpking-tooltip\"\r\n                                              >\r\n                                                VJ?\r\n                                              </Tooltip>\r\n                                            )}\r\n                                          </div>\r\n                                        )}\r\n                                        {res.isHJ && <div className=\"inner\">HJ</div>}\r\n                                      </td>\r\n                                      <td className=\"score\">\r\n                                        <Overlay\r\n                                          overlayClassName=\"score-overlay-outer\"\r\n                                          overlayItem={\r\n                                            <span className=\"score-span\">\r\n                                              {/* {res.scoreIncrease > res.score * 0.8 && <FaPlus />} */}\r\n                                              {res.scoreIncrease > res.score * 0.8 && '*'}\r\n                                              {numeral(res.score).format('0,0')}\r\n                                            </span>\r\n                                          }\r\n                                          placement=\"top\"\r\n                                        >\r\n                                          <div className=\"score-overlay\">\r\n                                            {DEBUG && (\r\n                                              <>\r\n                                                <div>\r\n                                                  <span className=\"_grey\">result id: </span>\r\n                                                  {res.id}\r\n                                                </div>\r\n                                                <div>\r\n                                                  <span className=\"_grey\">player id: </span>\r\n                                                  {res.playerId}\r\n                                                </div>\r\n                                              </>\r\n                                            )}\r\n                                            <div>\r\n                                              <span className=\"_grey\">игрок: </span>\r\n                                              <NavLink\r\n                                                exact\r\n                                                to={routes.profile.getPath({ id: res.playerId })}\r\n                                              >\r\n                                                {res.nickname} ({res.nicknameArcade})\r\n                                              </NavLink>\r\n                                            </div>\r\n                                            <div>\r\n                                              <span className=\"_grey\">опыт: </span>+\r\n                                              {numeral(getExp(res, chart)).format('0,0')}\r\n                                            </div>\r\n                                            {_.isNumber(inf.startingRating) &&\r\n                                              _.isNumber(inf.ratingDiff) && (\r\n                                                <div>\r\n                                                  <span className=\"_grey\">\r\n                                                    эло: {inf.startingRating.toFixed(0)}{' '}\r\n                                                  </span>\r\n                                                  {inf.ratingDiff >= 0\r\n                                                    ? `+${inf.ratingDiff.toFixed(0)}`\r\n                                                    : inf.ratingDiff.toFixed(0)}\r\n                                                </div>\r\n                                              )}\r\n                                            {!res.isExactDate && (\r\n                                              <div className=\"warning\">\r\n                                                <FaExclamationTriangle />\r\n                                                рекорд взят с my best. часть данных недоступна\r\n                                              </div>\r\n                                            )}\r\n                                            {!!res.isExactDate && (\r\n                                              <>\r\n                                                {!!res.mods && (\r\n                                                  <div>\r\n                                                    <span className=\"_grey\">моды: </span>\r\n                                                    {res.mods}\r\n                                                  </div>\r\n                                                )}\r\n                                                {!!res.calories && (\r\n                                                  <div>\r\n                                                    <span className=\"_grey\">ккал: </span>\r\n                                                    {res.calories}\r\n                                                  </div>\r\n                                                )}\r\n                                                {!!res.scoreIncrease && (\r\n                                                  <div>\r\n                                                    <span className=\"_grey\">прирост: </span>+\r\n                                                    {numeral(res.scoreIncrease).format('0,0')}\r\n                                                  </div>\r\n                                                )}\r\n                                                {res.originalChartMix && (\r\n                                                  <div>\r\n                                                    <div className=\"warning\">\r\n                                                      <FaExclamationTriangle />\r\n                                                      было сыграно на {res.originalChartMix}\r\n                                                    </div>\r\n                                                    {res.originalChartLabel && (\r\n                                                      <div>\r\n                                                        <span className=\"_grey\">\r\n                                                          оригинальный чарт:{' '}\r\n                                                        </span>\r\n                                                        {res.originalChartLabel}\r\n                                                      </div>\r\n                                                    )}\r\n                                                    {res.originalScore && (\r\n                                                      <div>\r\n                                                        <span className=\"_grey\">\r\n                                                          оригинальный скор:{' '}\r\n                                                        </span>\r\n                                                        {res.originalScore}\r\n                                                      </div>\r\n                                                    )}\r\n                                                  </div>\r\n                                                )}\r\n                                                {res.scoreIncrease > res.score * 0.8 && '* сайтрид'}\r\n                                              </>\r\n                                            )}\r\n                                          </div>\r\n                                        </Overlay>\r\n                                      </td>\r\n                                      <td className=\"grade\">\r\n                                        <div className=\"img-holder\">\r\n                                          {res.grade && res.grade !== '?' && (\r\n                                            <img\r\n                                              src={`${process.env.PUBLIC_URL}/grades/${res.grade}.png`}\r\n                                              alt={res.grade}\r\n                                            />\r\n                                          )}\r\n                                          {res.grade === '?' && null}\r\n                                        </div>\r\n                                      </td>\r\n                                      <td className=\"number miss\">{res.miss}</td>\r\n                                      <td className=\"number bad\">{res.bad}</td>\r\n                                      <td className=\"number good\">{res.good}</td>\r\n                                      <td className=\"number great\">{res.great}</td>\r\n                                      <td className=\"number perfect\">{res.perfect}</td>\r\n                                      <td className=\"combo\">\r\n                                        {res.combo}\r\n                                        {res.combo ? 'x' : ''}\r\n                                      </td>\r\n                                      <td className=\"accuracy\">\r\n                                        {res.accuracy}\r\n                                        {res.accuracy ? '%' : ''}\r\n                                      </td>\r\n                                      <td\r\n                                        className={classNames('date', {\r\n                                          latest: res.date === chart.latestScoreDate,\r\n                                        })}\r\n                                      >\r\n                                        <Tooltip\r\n                                          content={tooltipFormatter(res)}\r\n                                          tooltipClassName=\"pumpking-tooltip\"\r\n                                        >\r\n                                          {getTimeAgo(res.dateObject)}\r\n                                          {res.isExactDate ? '' : '?'}\r\n                                        </Tooltip>\r\n                                      </td>\r\n                                    </tr>\r\n                                  );\r\n                                })}\r\n                              </FlipMove>\r\n                            </table>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            {!isLoading && canShowMore && (\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() =>\r\n                  this.setState(state => ({ showItemsCount: state.showItemsCount + 10 }))\r\n                }\r\n              >\r\n                show more...\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Leaderboard);\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n// import numeral from 'numeral';\r\nimport classNames from 'classnames';\r\nimport { GiQueenCrown } from 'react-icons/gi';\r\nimport { FaAngleDoubleUp, FaAngleDoubleDown } from 'react-icons/fa';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nimport { getRankImg } from 'utils/exp';\r\n\r\nconst getGradeImg = grade => (\r\n  <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n);\r\n\r\nexport default function RankingList({ ranking, isLoading }) {\r\n  return (\r\n    <div className=\"ranking-list\">\r\n      {_.isEmpty(ranking) && !isLoading && 'ничего не найдено'}\r\n      {isLoading && <Loader />}\r\n      {!isLoading && (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"place\"></th>\r\n              <th className=\"change\"></th>\r\n              <th className=\"exp-rank\">rank</th>\r\n              <th className=\"name\">name</th>\r\n              <th className=\"name2\">piu name</th>\r\n              <th className=\"rating\">elo</th>\r\n              <th className=\"rating-change-cell\"></th>\r\n              {/* <th className=\"total-score\">total score</th> */}\r\n              <th className=\"grades sss\">{getGradeImg('SSS')}</th>\r\n              <th className=\"grades ss\">{getGradeImg('SS')}</th>\r\n              <th className=\"grades s\">{getGradeImg('S')}</th>\r\n              <th className=\"grades a\">{getGradeImg('A+')}</th>\r\n              <th className=\"grades b\">{getGradeImg('B')}</th>\r\n              <th className=\"grades c\">{getGradeImg('C')}</th>\r\n              <th className=\"grades d\">{getGradeImg('D')}</th>\r\n              <th className=\"grades f\">{getGradeImg('F')}</th>\r\n              <th className=\"playcount\">scores</th>\r\n              {/* <th className=\"calories\">kcal</th> */}\r\n              <th className=\"accuracy\">accuracy</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {ranking.map((player, playerIndex) => {\r\n              return (\r\n                <tr className=\"player\" key={player.name}>\r\n                  <td className=\"place\">\r\n                    {playerIndex === 0 ? <GiQueenCrown /> : `#${playerIndex + 1}`}\r\n                  </td>\r\n                  <td className=\"change\">\r\n                    {player.change > 0 && (\r\n                      <div className=\"change-holder up\">\r\n                        <span>{player.change}</span>\r\n                        <FaAngleDoubleUp />\r\n                      </div>\r\n                    )}\r\n                    {player.change < 0 && (\r\n                      <div className=\"change-holder down\">\r\n                        <span>{-player.change}</span>\r\n                        <FaAngleDoubleDown />\r\n                      </div>\r\n                    )}\r\n                    {!!player.change && _.isString(player.change) && (\r\n                      <div className=\"change-holder text\">\r\n                        <span>{player.change}</span>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"exp-rank\">{getRankImg(player.expRank)}</td>\r\n                  <td className=\"name\">\r\n                    <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                      {player.name}\r\n                    </NavLink>\r\n                  </td>\r\n                  <td className=\"name\">\r\n                    <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                      {player.nameArcade}\r\n                    </NavLink>\r\n                  </td>\r\n                  <td className=\"rating\">{player.rating}</td>\r\n                  <td className=\"rating-change-cell\">\r\n                    {!!player.prevRating && player.prevRating !== player.rating && (\r\n                      <span\r\n                        className={classNames('rating-change', {\r\n                          down: player.prevRating > player.rating,\r\n                          up: player.prevRating < player.rating,\r\n                        })}\r\n                      >\r\n                        {player.prevRating < player.rating ? '+' : ''}\r\n                        {player.rating - player.prevRating}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"grades sss\">{player.grades.SSS}</td>\r\n                  <td className=\"grades ss\">{player.grades.SS}</td>\r\n                  <td className=\"grades s\">{player.grades.S}</td>\r\n                  <td className=\"grades a\">{player.grades.A}</td>\r\n                  <td className=\"grades b\">{player.grades.B}</td>\r\n                  <td className=\"grades c\">{player.grades.C}</td>\r\n                  <td className=\"grades d\">{player.grades.D}</td>\r\n                  <td className=\"grades f\">{player.grades.F}</td>\r\n                  <td className=\"playcount\">{player.count}</td>\r\n                  <td className=\"accuracy\">\r\n                    {player.accuracy ? `${player.accuracy.toFixed(2)}%` : ''}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function RankingFaq() {\r\n  return (\r\n    <div className=\"faq\">\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Как считается рейтинг?</div>\r\n        <div className=\"answer\">\r\n          A: Используется <a href=\"https://en.wikipedia.org/wiki/Elo_rating_system\">рейтинг Эло</a>,\r\n          широко используемый в шахматах и других играх, слегка модицированный под условия игры на\r\n          пампе. Средний рейтинг - 1000. Коэффициент К зависит от уровня чарта (более сложные чарты\r\n          сильнее влияют на рейтинг). Количество очков влияет на заработанный рейтинг (маленький\r\n          отрыв от противника не даст так много очков как большой отрыв).\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Система Эло используется для игр 1 на 1, как она используется на пампе, где на одном\r\n          чарте играет много игроков?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: Рекорды на одном чарте делятся на несколько игр 1 на 1. Если есть 3 игрока: A, B, C; то\r\n          считается, что было 3 отдельные игры: A vs B, A vs C, B vs C.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Учитываются ли рекорды на ранке в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: Да. Как минимум потому что у нас есть много рекордов, взятых с машин бестов, и мы не\r\n          знаем наверняка, на ранке они или нет. Если у игрока в топе есть два скора - на ранке и\r\n          без ранка, используется тот, где больше очков.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Почему меня нет в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: В таблицу попадают только те, у кого есть хотя бы 20 игр 1 на 1. Первые 20 игр\r\n          используются для определения изначального рейтинга.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Почему суммарное количество оценок S-A-B не совпадает с общим количеством скоров?\r\n        </div>\r\n        <div className=\"answer\">A: Не для каждого результата известна оценка.</div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Если у меня есть несколько рекордов на А, несколько на А+, как считается суммарное\r\n          количество грейдов в таблице?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: В каждой колонке учитываются обе буквы - и треснутые, и с удержанным лайфом. То есть и\r\n          А, и А+ идут в колонку А. Точно так же для B, C, D.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Убери аккураси из таблицы!</div>\r\n        <div className=\"answer\">A: Грем, это секция для вопросов.</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle } from 'react-icons/fa';\r\nimport { Link, Route, withRouter } from 'react-router-dom';\r\nimport { createSelector } from 'reselect';\r\nimport _ from 'lodash/fp';\r\n\r\n// styles\r\nimport './ranking.scss';\r\n\r\n// components\r\nimport RankingList from './RankingList';\r\nimport RankingFaq from './RankingFaq';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\n\r\n// utils\r\n\r\n// code\r\nconst rankingSelector = createSelector(\r\n  state => state.results.profiles,\r\n  _.flow(\r\n    _.values,\r\n    _.orderBy(['ratingRaw'], ['desc'])\r\n  )\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ranking: rankingSelector(state),\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading:\r\n      state.results.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n};\r\n\r\nclass Ranking extends Component {\r\n  static propTypes = {\r\n    ranking: toBe.array,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    ranking: [],\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, ranking, error } = this.props;\r\n\r\n    return (\r\n      <div className=\"ranking-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.path}\r\n              render={() => (\r\n                <>\r\n                  <Link to={routes.ranking.faq.path}>\r\n                    <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n                      <FaQuestionCircle /> faq\r\n                    </button>\r\n                  </Link>\r\n                  <button\r\n                    disabled={isLoading}\r\n                    className=\"btn btn-sm btn-dark btn-icon\"\r\n                    onClick={this.onRefresh}\r\n                  >\r\n                    <FaSearch /> обновить\r\n                  </button>\r\n                </>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.faq.path}\r\n              render={() => (\r\n                <Link to={routes.ranking.path}>\r\n                  <button className=\"btn btn-sm btn-dark btn-icon\">назад</button>\r\n                </Link>\r\n              )}\r\n            />\r\n          </div>\r\n          <Route\r\n            exact\r\n            path={routes.ranking.path}\r\n            render={() => <RankingList ranking={ranking} isLoading={isLoading} />}\r\n          />\r\n          <Route exact path={routes.ranking.faq.path} component={RankingFaq} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Ranking));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\nimport { FaPlay } from 'react-icons/fa';\r\nimport { MdExpandMore } from 'react-icons/md';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { parseDate } from 'utils/date';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport './most-played.scss';\r\n\r\nexport default connect(\r\n  state => ({ charts: state.results.sharedCharts }),\r\n  { fetchJson }\r\n)(({ playerId, charts, fetchJson }) => {\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [limit, setLimit] = useState(10);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchJson({\r\n      url: `${HOST}/player/${playerId}/mostPlayed?limit=${limit}`,\r\n    })\r\n      .then(result => {\r\n        setLoading(false);\r\n        if (result.success) {\r\n          setData(result.data);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [playerId, limit, fetchJson]);\r\n\r\n  return (\r\n    <div className=\"most-played\">\r\n      {isLoading && <Loader />}\r\n      {data.map(item => {\r\n        const chart = charts[item.shared_chart];\r\n        return (\r\n          <div className=\"chart\" key={item.shared_chart}>\r\n            <div\r\n              className={classNames('chart-name', {\r\n                single: chart.chartType === 'S',\r\n                singlep: chart.chartType === 'SP',\r\n                doublep: chart.chartType === 'DP',\r\n                double: chart.chartType === 'D',\r\n                coop: chart.chartType === 'COOP',\r\n              })}\r\n            >\r\n              <span className=\"chart-letter\">{chart.chartType}</span>\r\n              <span className=\"chart-number\">{chart.chartLevel}</span>\r\n            </div>\r\n            <div className=\"song-name\">{chart.song}</div>\r\n            <div className=\"date\">\r\n              {item.latestDate ? getTimeAgo(parseDate(item.latestDate)) : null}\r\n            </div>\r\n            <div className=\"playcount\">\r\n              <FaPlay />\r\n              <span>{item.count}</span>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      {limit === _.size(data) && (\r\n        <button\r\n          className=\"show-more btn btn-sm btn-dark btn-icon\"\r\n          onClick={() => setLimit(limit + 10)}\r\n        >\r\n          <MdExpandMore /> больше\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\n\r\nimport { ranks, getRankImg } from 'utils/exp';\r\n\r\nexport default function ExpFaq() {\r\n  return (\r\n    <div className=\"faq-exp\">\r\n      <div className=\"faq-header\">\r\n        <strong>Опыт</strong> игрока основывается на количестве сыгранных песен и чартов.\r\n        <br />\r\n        Чем выше уровень чарта и чем лучше оценка на чарте, тем больше опыта он даёт.\r\n        <br />\r\n        Повторные попытки на тех же чартах не дают больше опыта. Чтобы поднимать свой уровень, играй\r\n        новые треки и чарты.\r\n      </div>\r\n      <div className=\"faq-header\">Список уровней и необходимый опыт для их получения:</div>\r\n      <div className=\"ranks-list\">\r\n        {ranks.map(rank => (\r\n          <div key={rank.threshold} className=\"rank\">\r\n            <div className=\"exp-rank\">{getRankImg(rank)}</div>\r\n            <div className=\"threshold\">{rank.threshold}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const SET_FILTER = `PROFILES/SET_FILTER`;\r\nconst RESET_FILTER = `PROFILES/RESET_FILTER`;\r\n\r\nexport const defaultFilter = {};\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  filter: defaultFilter,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setProfilesFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\n\r\nexport const resetProfilesFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n","import _ from 'lodash/fp';\r\nimport moment from 'moment';\r\nimport { createSelector } from 'reselect';\r\n\r\nconst defaultGradesDistribution = {\r\n  SSS: 0,\r\n  SS: 0,\r\n  S: 0,\r\n  'A+': 0,\r\n  A: 0,\r\n  B: 0,\r\n  C: 0,\r\n  D: 0,\r\n  F: 0,\r\n};\r\nconst defaultGradesWithLevelsDistribution = _.flow(\r\n  _.flatMap(type => {\r\n    return _.flow(\r\n      _.toPairs,\r\n      _.map(([grade, value]) => [`${type}-${grade}`, value])\r\n    )(defaultGradesDistribution);\r\n  }),\r\n  _.fromPairs\r\n)(['S', 'D']);\r\n\r\nconst cutRange = (array, range) => {\r\n  const startIndex = _.findIndex(item => item.date > range[0], array);\r\n  const endIndex = _.findLastIndex(item => item.date < range[1], array);\r\n  let firstElement =\r\n    startIndex > 0 ? array[startIndex - 1] : startIndex === 0 ? array[startIndex] : _.last(array);\r\n  let lastElement = endIndex > -1 ? array[endIndex] : _.first(array);\r\n  firstElement = { ...firstElement, date: range[0] };\r\n  lastElement = { ...lastElement, date: range[1] };\r\n  const middleElements =\r\n    startIndex > -1 && endIndex > -1 ? array.slice(startIndex, endIndex + 1) : [];\r\n\r\n  return [firstElement, ...middleElements, lastElement];\r\n};\r\n\r\nexport const profileSelectorCreator = idParamName =>\r\n  createSelector(\r\n    (state, props) => _.toInteger(props.match.params[idParamName]),\r\n    state => state.results.isLoading || state.results.isLoadingRanking,\r\n    state => state.results.profiles,\r\n    state => state.profiles.filter,\r\n    state => state.tracklist.data,\r\n    (id, isLoading, profiles, filter, tracklist) => {\r\n      const profile = profiles[id];\r\n      if (_.isEmpty(profile) || isLoading) {\r\n        return null;\r\n      }\r\n      const levelsDistribution = _.flow(\r\n        _.get('resultsByLevel'),\r\n        _.toPairs,\r\n        _.map(([x, y]) => ({\r\n          x: _.toInteger(x),\r\n          S:\r\n            (_.size(\r\n              _.filter(res => res.chart.chartType === 'S' || res.chart.chartType === 'SP', y)\r\n            ) /\r\n              tracklist.singlesLevels[x]) *\r\n            100,\r\n          D:\r\n            (-_.size(\r\n              _.filter(res => res.chart.chartType === 'D' || res.chart.chartType === 'DP', y)\r\n            ) /\r\n              tracklist.doublesLevels[x]) *\r\n            100,\r\n        }))\r\n      )(profile);\r\n      const gradesData = _.flow(\r\n        _.get('resultsByLevel'),\r\n        _.toPairs,\r\n        _.map(\r\n          _.update('[1].result.grade', grade =>\r\n            grade && grade.includes('+') && grade !== 'A+' ? grade.replace('+', '') : grade\r\n          )\r\n        )\r\n      )(profile);\r\n      const gradesDistribution = _.flow(\r\n        _.map(([x, y]) => ({\r\n          x: _.toInteger(x),\r\n          ...defaultGradesDistribution,\r\n          ..._.omit('?', _.mapValues(_.size, _.groupBy('result.grade', y))),\r\n        })),\r\n        _.map(item => {\r\n          const grades = _.pick(Object.keys(defaultGradesDistribution), item);\r\n          const sum = _.sum(_.values(grades));\r\n          return {\r\n            ...item,\r\n            gradesValues: grades,\r\n            ...(sum === 0 ? grades : _.mapValues(value => (100 * value) / sum, grades)),\r\n          };\r\n        })\r\n      )(gradesData);\r\n      const gradesAndLevelsDistribution = _.flow(\r\n        _.map(([x, y]) => {\r\n          const groupedResults = _.groupBy('result.grade', y);\r\n          const counts = _.omit(\r\n            '?',\r\n            _.mapValues(\r\n              _.countBy(res => {\r\n                return res.chart.chartType === 'S' || res.chart.chartType === 'SP'\r\n                  ? 'S'\r\n                  : res.chart.chartType === 'D' || res.chart.chartType === 'DP'\r\n                  ? 'D'\r\n                  : 'Other';\r\n              }),\r\n              groupedResults\r\n            )\r\n          );\r\n          const reduced = _.reduce(\r\n            (acc, [grade, levelsData]) => {\r\n              const accData = _.flow(\r\n                _.toPairs,\r\n                _.map(([type, count]) => [\r\n                  `${type}-${grade}`,\r\n                  type === 'S'\r\n                    ? (count / tracklist.singlesLevels[x]) * 100\r\n                    : (-count / tracklist.doublesLevels[x]) * 100,\r\n                ]),\r\n                _.fromPairs\r\n              )(levelsData);\r\n              return { ...acc, ...accData };\r\n            },\r\n            {},\r\n            _.toPairs(counts)\r\n          );\r\n\r\n          return {\r\n            x: _.toInteger(x),\r\n            ...defaultGradesWithLevelsDistribution,\r\n            ...reduced,\r\n          };\r\n        })\r\n      )(gradesData);\r\n      const lastTickRating = _.last(profile.ratingHistory).date;\r\n      const lastTickRanking = _.last(profile.rankingHistory).date;\r\n      const lastTick = lastTickRating > lastTickRanking ? lastTickRating : lastTickRanking; // End graph at either point\r\n      const firstTick = _.first(profile.ratingHistory).date; // Start graph from the first battle of this player\r\n      const lastDay = moment(lastTick).endOf('day');\r\n      const firstDay = moment(firstTick).startOf('day');\r\n      const minMaxRange = [firstDay / 1000 / 60 / 60 / 24, lastDay / 1000 / 60 / 60 / 24];\r\n\r\n      const filterRange = filter.dayRange || [\r\n        Math.max(minMaxRange[0], minMaxRange[1] - 30),\r\n        minMaxRange[1],\r\n      ];\r\n      const dayRangeMs = [\r\n        +moment(filterRange[0] * 1000 * 60 * 60 * 24).startOf('day'),\r\n        +moment(filterRange[1] * 1000 * 60 * 60 * 24).endOf('day'),\r\n      ];\r\n      const placesChanges = cutRange(profile.rankingHistory, dayRangeMs);\r\n      const ratingChanges = cutRange(profile.ratingHistory, dayRangeMs);\r\n      const rank = 1 + _.findIndex({ id }, _.orderBy(['ratingRaw'], ['desc'], _.values(profiles)));\r\n      return {\r\n        ...profile,\r\n        rank,\r\n        minMaxRange,\r\n        filterRange,\r\n        levelsDistribution,\r\n        gradesDistribution,\r\n        gradesAndLevelsDistribution,\r\n        placesChanges,\r\n        ratingChanges,\r\n      };\r\n    }\r\n  );\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle, FaTimes, FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport ReactModal from 'react-modal';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport Select from 'react-select';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as RechartsTooltip,\r\n  ReferenceLine,\r\n  CartesianGrid,\r\n  Line,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Label,\r\n} from 'recharts';\r\nimport _ from 'lodash/fp';\r\nimport moment from 'moment';\r\nimport { createSelector } from 'reselect';\r\n\r\n// styles\r\nimport './profile.scss';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\nimport { DEBUG } from 'constants/env';\r\n\r\n// components\r\nimport Range from 'components/Shared/Range';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport MostPlayed from './MostPlayed';\r\nimport ExpFaq from './ExpFaq';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\nimport { setProfilesFilter, resetProfilesFilter } from 'reducers/profiles';\r\n\r\n// utils\r\nimport { profileSelectorCreator } from 'utils/profiles';\r\nimport { parseDate } from 'utils/date';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { achievements } from 'utils/achievements';\r\nimport { getRankImg } from 'utils/exp';\r\n\r\n// code\r\nconst MIN_GRAPH_HEIGHT = undefined;\r\n\r\nconst profileSelector = profileSelectorCreator('id');\r\n\r\nexport const otherPlayersSelector = createSelector(\r\n  state => state.results.players,\r\n  (state, props) => _.toNumber(props.match.params.id),\r\n  (players, id) =>\r\n    _.flow(\r\n      _.toPairs,\r\n      _.map(([ind, { nickname, arcade_name, id }]) => ({\r\n        label: `${nickname} (${arcade_name})`,\r\n        value: nickname,\r\n        id: _.toNumber(id),\r\n      })),\r\n      _.remove(it => it.id === id),\r\n      _.sortBy(it => _.toLower(it.label))\r\n    )(players)\r\n);\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    profile: profileSelector(state, props),\r\n    otherPlayers: otherPlayersSelector(state, props),\r\n    tracklist: state.tracklist.data,\r\n    filter: state.profiles.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading:\r\n      state.results.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setProfilesFilter,\r\n  resetProfilesFilter,\r\n};\r\n\r\nclass Profile extends Component {\r\n  static propTypes = {\r\n    profile: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    profile: {},\r\n  };\r\n\r\n  state = {\r\n    isLevelGraphCombined: true,\r\n    showFaq: false,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetProfilesFilter();\r\n  }\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onChangeDayRange = range => {\r\n    const { filter } = this.props;\r\n    this.props.setProfilesFilter({\r\n      ...filter,\r\n      dayRange: range,\r\n    });\r\n  };\r\n\r\n  onShowFaq = () => {\r\n    this.setState({ showFaq: true });\r\n  };\r\n\r\n  onHideFaq = () => {\r\n    this.setState({ showFaq: false });\r\n  };\r\n\r\n  renderRankingHistory() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={profile.ratingChanges} margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={value => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={['dataMin - 100', 'dataMax + 100']}\r\n            tickFormatter={Math.round}\r\n            width={40}\r\n          />\r\n          <ReferenceLine y={1000} stroke=\"white\" />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Rating: {Math.round(payload[0].value)}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderPlaceHistory() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={profile.placesChanges} margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={value => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={[1, dataMax => (dataMax < 3 ? dataMax + 2 : dataMax + 1)]}\r\n            interval={0}\r\n            reversed\r\n            width={40}\r\n          />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Place: #{payload[0].value}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGrades() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <BarChart\r\n          data={profile.gradesDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {_.filter(item => item.value > 0, payload).map(item => (\r\n                    <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                      {item.name}: {payload[0].payload.gradesValues[item.name]}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            domain={[0, 100]}\r\n            ticks={[0, 50, 100]}\r\n            tickFormatter={x => `${Math.round(x)}%`}\r\n            width={40}\r\n          />\r\n          <Legend />\r\n          <Bar dataKey=\"SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"F\" fill=\"#774949\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradesWithLevels() {\r\n    const { profile, tracklist } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={0.74}>\r\n        <BarChart\r\n          data={profile.gradesAndLevelsDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n          stackOffset=\"sign\"\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              const doubleItems = _.filter(\r\n                item => item.value !== 0 && item.dataKey.startsWith('D'),\r\n                payload\r\n              );\r\n              const singleItems = _.filter(\r\n                item => item.value !== 0 && item.dataKey.startsWith('S'),\r\n                payload\r\n              );\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {!!singleItems.length && (\r\n                    <>\r\n                      <div>Single:</div>\r\n                      {singleItems.map(item => (\r\n                        <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                          {item.name.slice(2)}: {Math.round(Math.abs(item.value))}% (\r\n                          {Math.round((tracklist.singlesLevels[item.payload.x] * item.value) / 100)}\r\n                          /{tracklist.singlesLevels[item.payload.x]})\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                  {!!doubleItems.length && (\r\n                    <>\r\n                      <div>Double:</div>\r\n                      {doubleItems.map(item => (\r\n                        <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                          {item.name.slice(2)}: {Math.round(Math.abs(item.value))}% (\r\n                          {Math.round(\r\n                            (tracklist.doublesLevels[item.payload.x] * -item.value) / 100\r\n                          )}\r\n                          /{tracklist.doublesLevels[item.payload.x]})\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            tickFormatter={x => `${Math.round(Math.abs(x))}%`}\r\n            width={40}\r\n            domain={[dataMin => Math.min(dataMin, -10), dataMax => Math.max(10, dataMax)]}\r\n          />\r\n          <Bar dataKey=\"S-SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Label value=\"Double\" offset={0} position=\"insideBottomLeft\" />\r\n          <Label value=\"Single\" offset={0} position=\"insideTopLeft\" />\r\n          <ReferenceLine y={0} stroke=\"#bbb\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderLevels() {\r\n    const { profile, tracklist } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <BarChart\r\n          data={profile.levelsDistribution}\r\n          stackOffset=\"sign\"\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              const totalD = tracklist.doublesLevels[payload[0].payload.x];\r\n              const totalS = tracklist.singlesLevels[payload[0].payload.x];\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {totalS > 0 && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n                      Single: {Math.abs(payload[1].value).toFixed(1)}% (\r\n                      {Math.round((payload[1].value * totalS) / 100)}/{totalS})\r\n                    </div>\r\n                  )}\r\n                  {totalD > 0 && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n                      Double: {Math.abs(payload[0].value).toFixed(1)}% (\r\n                      {Math.round((Math.abs(payload[0].value) * totalD) / 100)}/{totalD})\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            tickFormatter={x => Math.round(Math.abs(x)) + '%'}\r\n            width={40}\r\n            domain={[dataMin => Math.min(dataMin, -10), dataMax => Math.max(10, dataMax)]}\r\n          />\r\n          <RechartsTooltip />\r\n          <ReferenceLine y={0} stroke=\"#555\" />\r\n          <Legend />\r\n          <Bar dataKey=\"D\" fill=\"#169c16\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#af2928\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradeBlock(type, grade) {\r\n    const { profile } = this.props;\r\n    const obj = profile.progress[type];\r\n    const typeLetter = type === 'double' ? 'D' : 'S';\r\n    const progr = Math.floor((obj[`${grade}-bonus-level-coef`] || 0) * 100);\r\n    const minNumber = obj[`${grade}-bonus-level-min-number`];\r\n    const currentNumber = obj[`${grade}-bonus-level-achieved-number`];\r\n    const levelString = obj[`${grade}-bonus-level`]\r\n      ? `${typeLetter}${obj[`${grade}-bonus-level`]}`\r\n      : '?';\r\n    return (\r\n      <div className=\"grade-block\">\r\n        <div className=\"grade-letter\">\r\n          <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n        </div>\r\n        <div className=\"grade-level\">{levelString}</div>\r\n        <div className=\"grade-progress\">\r\n          {progr}% ({progr === 100 ? minNumber : currentNumber}/{minNumber})\r\n        </div>\r\n        <div className=\"grade-progress\">бонус: +{Math.floor(obj[`${grade}-bonus`])}</div>\r\n        <div\r\n          className={classNames('progress-background', {\r\n            complete: progr === 100,\r\n            zero: progr === 0,\r\n          })}\r\n          style={{\r\n            height: `${progr}%`,\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderAchievement(achName, achievement) {\r\n    const Icon = achievements[achName].icon;\r\n    const description = achievements[achName].description;\r\n    return (\r\n      <Tooltip\r\n        key={achName}\r\n        content={<div>{description}</div>}\r\n        tooltipClassName=\"pumpking-tooltip achievement-tooltip\"\r\n      >\r\n        <div className=\"ach-block\">\r\n          {Icon && (\r\n            <div className=\"ach-icon\">\r\n              <Icon />\r\n            </div>\r\n          )}\r\n          <div className=\"ach-name\">{achName}</div>\r\n          <div\r\n            className={classNames('progress-background', {\r\n              complete: achievement.progress === 100,\r\n              zero: achievement.progress === 0,\r\n            })}\r\n            style={{\r\n              height: `${Math.round(achievement.progress)}%`,\r\n            }}\r\n          />\r\n        </div>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  renderProfile() {\r\n    const { profile, filter, otherPlayers } = this.props;\r\n    const { isLevelGraphCombined } = this.state;\r\n    const expProgress = profile.expRankNext\r\n      ? (profile.exp - profile.expRank.threshold) /\r\n        (profile.expRankNext.threshold - profile.expRank.threshold)\r\n      : 100;\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"profile-header\">\r\n          <div className=\"profile-name text-with-header\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile.lastResultDate ? getTimeAgo(profile.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n          <div className=\"_flex-fill\"></div>\r\n          <div className=\"text-with-header -select\">\r\n            <div className=\"text-header\">сравнить с</div>\r\n            <div>\r\n              <Select\r\n                closeMenuOnSelect\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                options={otherPlayers}\r\n                onChange={value => {\r\n                  this.props.history.push(\r\n                    routes.profile.compare.getPath({ id: profile.id, compareToId: value.id })\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header _flex-row _align-center\">\r\n            <span>опыт</span>\r\n            <div className=\"_flex-fill\" />\r\n            <div onClick={this.onShowFaq} className=\"_clickable\">\r\n              <FaQuestionCircle onClick={this.onShowFaq} />\r\n            </div>\r\n            <ReactModal\r\n              ariaHideApp={false}\r\n              className=\"Modal faq-modal\"\r\n              overlayClassName=\"Overlay\"\r\n              isOpen={this.state.showFaq}\r\n              onRequestClose={this.onHideFaq}\r\n            >\r\n              <div className=\"close-btn\" onClick={this.onHideFaq}>\r\n                <FaTimes />\r\n              </div>{' '}\r\n              <ExpFaq />\r\n            </ReactModal>\r\n          </div>\r\n          <div className=\"exp-range\">\r\n            <div className=\"rank exp-rank\">\r\n              {getRankImg(profile.expRank)}\r\n              {profile.expRank && <div>{profile.expRank.threshold}</div>}\r\n            </div>\r\n            <div className=\"exp-line-with-label\">\r\n              <div className=\"exp-label\">\r\n                {profile.expRankNext ? (\r\n                  <>\r\n                    <span className=\"taken-num\">\r\n                      {Math.round(profile.exp - profile.expRank.threshold)}\r\n                    </span>\r\n                    {` / ${profile.expRankNext.threshold - profile.expRank.threshold}`}\r\n                  </>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"exp-line\">\r\n                <div className=\"taken\" style={{ width: Math.floor(100 * expProgress) + '%' }}></div>\r\n                <div\r\n                  className=\"rest\"\r\n                  style={{ width: 100 - Math.ceil(100 * expProgress) + '%' }}\r\n                ></div>\r\n              </div>\r\n              <div className=\"exp-label\">\r\n                total: <span className=\"taken-num\">{Math.round(profile.exp)}</span>\r\n              </div>\r\n            </div>\r\n            {profile.expRankNext && (\r\n              <div className=\"rank exp-rank\">\r\n                {getRankImg(profile.expRankNext)}\r\n                {profile.expRankNext && <div>{profile.expRankNext.threshold}</div>}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              {!isLevelGraphCombined ? (\r\n                <>\r\n                  <div className=\"profile-section-2\">\r\n                    <div className=\"profile-sm-section-header flex\">\r\n                      <span>уровни</span>\r\n                      <div className=\"toggle-holder\">\r\n                        <Toggle\r\n                          className=\"combine-toggle\"\r\n                          checked={isLevelGraphCombined}\r\n                          onChange={() =>\r\n                            this.setState(state => ({\r\n                              isLevelGraphCombined: !state.isLevelGraphCombined,\r\n                            }))\r\n                          }\r\n                        >\r\n                          объединить графики\r\n                        </Toggle>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"chart-container\">{this.renderLevels()}</div>\r\n                  </div>\r\n                  <div className=\"profile-section-2\">\r\n                    <div className=\"profile-sm-section-header\">\r\n                      <span>оценки</span>\r\n                    </div>\r\n                    <div className=\"chart-container\">{this.renderGrades()}</div>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div className=\"profile-section-2\">\r\n                  <div className=\"profile-sm-section-header flex\">\r\n                    <span>оценки</span>\r\n                    <div className=\"toggle-holder\">\r\n                      <Toggle\r\n                        className=\"combine-toggle\"\r\n                        checked={isLevelGraphCombined}\r\n                        onChange={() =>\r\n                          this.setState(state => ({\r\n                            isLevelGraphCombined: !state.isLevelGraphCombined,\r\n                          }))\r\n                        }\r\n                      >\r\n                        объединить графики\r\n                      </Toggle>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"chart-container single-double-labels\">\r\n                    {this.renderGradesWithLevels()}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>эло</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderRankingHistory()}</div>\r\n              </div>\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>место в топе</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderPlaceHistory()}</div>\r\n              </div>\r\n            </div>\r\n            {(() => {\r\n              const currentRange = filter.dayRange || profile.filterRange;\r\n              const dateL = moment(currentRange[0] * 1000 * 60 * 60 * 24).format('L');\r\n              const dateR = moment(currentRange[1] * 1000 * 60 * 60 * 24).format('L');\r\n              const l1 = Math.max(currentRange[0] - 1, profile.minMaxRange[0]);\r\n              const l2 = Math.min(currentRange[0] + 1, currentRange[1]);\r\n              const r1 = Math.max(currentRange[1] - 1, currentRange[0]);\r\n              const r2 = Math.min(currentRange[1] + 1, profile.minMaxRange[1]);\r\n              return (\r\n                <div className=\"range-container\">\r\n                  <Range\r\n                    range={currentRange}\r\n                    min={profile.minMaxRange[0]}\r\n                    max={profile.minMaxRange[1]}\r\n                    onChange={this.onChangeDayRange}\r\n                  />\r\n                  <div className=\"range-controls _flex-row\">\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l1, currentRange[1]])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateL}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l2, currentRange[1]])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                    <div className=\"_flex-fill\"></div>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r1])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateR}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r2])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })()}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section progress-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>достижения по уровням</span>\r\n          </div>\r\n          <div className=\"progress-blocks-single-double\">\r\n            <div className=\"progress-block\">\r\n              <div className=\"achievements-grades single\">\r\n                {this.renderGradeBlock('single', 'A')}\r\n                {this.renderGradeBlock('single', 'A+')}\r\n                {this.renderGradeBlock('single', 'S')}\r\n                {this.renderGradeBlock('single', 'SS')}\r\n              </div>\r\n            </div>\r\n            <div className=\"progress-block\">\r\n              <div className=\"achievements-grades double\">\r\n                {this.renderGradeBlock('double', 'A')}\r\n                {this.renderGradeBlock('double', 'A+')}\r\n                {this.renderGradeBlock('double', 'S')}\r\n                {this.renderGradeBlock('double', 'SS')}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"bonus-faq\">\r\n            * суммарный бонус (+{Math.round(profile.progress.bonus)}) добавляется к стартовому Эло\r\n            <br />* для получения ачивки нужно сыграть около 10% всех чартов данного левела на\r\n            нужный грейд\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>достижения</span>\r\n          </div>\r\n          <div className=\"achievements\">\r\n            {_.keys(profile.achievements).map(achName =>\r\n              this.renderAchievement(achName, profile.achievements[achName])\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>часто играемые чарты</span>\r\n          </div>\r\n          <MostPlayed playerId={profile.id} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, profile, error } = this.props;\r\n    DEBUG && console.log('profile:', profile);\r\n    return (\r\n      <div className=\"profile-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"btn btn-sm btn-dark btn-icon\"\r\n              onClick={this.onRefresh}\r\n            >\r\n              <FaSearch /> обновить\r\n            </button>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!isLoading && _.isEmpty(profile) && <div className=\"profile\">Profile not found</div>}\r\n          {!isLoading && !_.isEmpty(profile) && this.renderProfile()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Profile));\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as RechartsTooltip,\r\n  ReferenceLine,\r\n  CartesianGrid,\r\n  Line,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\nimport _ from 'lodash/fp';\r\nimport memoize from 'lru-memoize';\r\n\r\n// styles\r\nimport './profile-compare.scss';\r\n\r\n// constants\r\nimport { DEBUG } from 'constants/env';\r\n\r\n// components\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport Range from 'components/Shared/Range';\r\nimport Loader from 'components/Shared/Loader';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\nimport { setProfilesFilter, resetProfilesFilter } from 'reducers/profiles';\r\n\r\n// utils\r\nimport { profileSelectorCreator } from 'utils/profiles';\r\nimport { parseDate } from 'utils/date';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\n\r\n// code\r\nconst BARS_MODES = {\r\n  SINGLE_TWO: 'SINGLE_TWO',\r\n  SINGLE_FIVE: 'SINGLE_FIVE',\r\n  DOUBLE_TWO: 'DOUBLE_TWO',\r\n  DOUBLE_FIVE: 'DOUBLE_FIVE',\r\n  BOTH_TWO: 'BOTH_TWO',\r\n  BOTH_FIVE: 'BOTH_FIVE',\r\n};\r\nconst getCompareBars = mode => {\r\n  switch (mode) {\r\n    case BARS_MODES.SINGLE_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"single.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"single.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.SINGLE_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"single.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar\r\n          key=\"2\"\r\n          dataKey=\"single.p2notPlayed\"\r\n          fill=\"#899db3\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"3\"\r\n          dataKey=\"single.notPlayed\"\r\n          fill=\"#70707060\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"4\"\r\n          dataKey=\"single.p1notPlayed\"\r\n          fill=\"#bfa988\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar key=\"5\" dataKey=\"single.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    case BARS_MODES.DOUBLE_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"double.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"double.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.DOUBLE_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"double.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar\r\n          key=\"2\"\r\n          dataKey=\"double.p2notPlayed\"\r\n          fill=\"#899db3\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"3\"\r\n          dataKey=\"double.notPlayed\"\r\n          fill=\"#70707060\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"4\"\r\n          dataKey=\"double.p1notPlayed\"\r\n          fill=\"#bfa988\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar key=\"5\" dataKey=\"double.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    case BARS_MODES.BOTH_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"all.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"all.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.BOTH_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"all.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"2\" dataKey=\"all.p2notPlayed\" fill=\"#899db3\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"3\" dataKey=\"all.notPlayed\" fill=\"#70707060\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"4\" dataKey=\"all.p1notPlayed\" fill=\"#bfa988\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"5\" dataKey=\"all.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst MIN_GRAPH_HEIGHT = undefined;\r\n\r\nconst profile1Selector = profileSelectorCreator('id');\r\nconst profile2Selector = profileSelectorCreator('compareToId');\r\n\r\nconst getCombinedData = memoize()((p1, p2, tracklist) => {\r\n  if (!p1 || !p2) {\r\n    return {};\r\n  }\r\n\r\n  let rc1 = p1.ratingChanges[0].rating;\r\n  let rc2 = p2.ratingChanges[0].rating;\r\n  const allRC = _.flow(\r\n    _.sortBy('date'),\r\n    _.map(item => {\r\n      if (item.rating) {\r\n        rc1 = item.rating;\r\n      }\r\n      if (item.rating2) {\r\n        rc2 = item.rating2;\r\n      }\r\n      return {\r\n        rating1: rc1,\r\n        rating2: rc2,\r\n        date: item.date,\r\n      };\r\n    }),\r\n    _.sortedUniqBy('date')\r\n  )([...p1.ratingChanges, ...p2.ratingChanges.map(it => ({ date: it.date, rating2: it.rating }))]);\r\n\r\n  rc1 = p1.placesChanges[0].place;\r\n  rc2 = p2.placesChanges[0].place;\r\n  const allPC = _.flow(\r\n    _.sortBy('date'),\r\n    _.map(item => {\r\n      if (item.place) {\r\n        rc1 = item.place;\r\n      }\r\n      if (item.place2) {\r\n        rc2 = item.place2;\r\n      }\r\n      return {\r\n        place1: rc1,\r\n        place2: rc2,\r\n        date: item.date,\r\n      };\r\n    })\r\n  )([...p1.placesChanges, ...p2.placesChanges.map(it => ({ date: it.date, place2: it.place }))]);\r\n\r\n  const perLevelComparison = _.fromPairs(Array.from({ length: 28 }).map((x, i) => [i + 1, {}]));\r\n  _.keys(perLevelComparison).forEach(level => {\r\n    const charts = _.flow(\r\n      _.map('chart'),\r\n      _.uniqBy('sharedChartId')\r\n    )([...p1.resultsByLevel[level], ...p2.resultsByLevel[level]]);\r\n    const data = {\r\n      x: level,\r\n      all: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        twoBars: {},\r\n      },\r\n      double: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        twoBars: {},\r\n      },\r\n      single: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        twoBars: {},\r\n      },\r\n    };\r\n    charts.forEach(chart => {\r\n      const p1index = chart.results.findIndex(r => r.playerId === p1.id);\r\n      const p2index = chart.results.findIndex(r => r.playerId === p2.id);\r\n      const perType = chart.chartType.startsWith('D') ? data.double : data.single;\r\n      if (p1index < 0 && p2index < 0) {\r\n        console.log('wtf?');\r\n      } else if (p1index < 0) {\r\n        data.all.p1notPlayed++;\r\n        perType.p1notPlayed++;\r\n      } else if (p2index < 0) {\r\n        data.all.p2notPlayed++;\r\n        perType.p2notPlayed++;\r\n      } else if (p1index < p2index) {\r\n        data.all.p1win++;\r\n        perType.p1win++;\r\n      } else if (p2index < p1index) {\r\n        data.all.p2win++;\r\n        perType.p2win++;\r\n      }\r\n    });\r\n\r\n    const normalizeTwo = dataObj => {\r\n      const totalPlayed = dataObj.p1win + dataObj.p2win || 1; // in case of divide by 0\r\n      dataObj.twoBars.p1win = dataObj.p1win / totalPlayed;\r\n      dataObj.twoBars.p2win = dataObj.p2win / totalPlayed;\r\n    };\r\n    normalizeTwo(data.all);\r\n    normalizeTwo(data.single);\r\n    normalizeTwo(data.double);\r\n\r\n    const normalizeFive = (dataObj, total) => {\r\n      dataObj.p1win = dataObj.p1win / total;\r\n      dataObj.p1notPlayed = dataObj.p1notPlayed / total;\r\n      dataObj.p2win = dataObj.p2win / total;\r\n      dataObj.p2notPlayed = dataObj.p2notPlayed / total;\r\n      dataObj.notPlayed =\r\n        1 - dataObj.p1win - dataObj.p1notPlayed - dataObj.p2win - dataObj.p2notPlayed;\r\n    };\r\n    normalizeFive(data.all, tracklist.chartLevels[level]);\r\n    normalizeFive(data.double, tracklist.doublesLevels[level]);\r\n    normalizeFive(data.single, tracklist.singlesLevels[level]);\r\n\r\n    perLevelComparison[level] = data;\r\n  });\r\n\r\n  return {\r\n    ratingChanges: allRC,\r\n    placesChanges: allPC,\r\n    perLevelComparison: _.values(perLevelComparison),\r\n  };\r\n});\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const profile1 = profile1Selector(state, props);\r\n  const profile2 = profile2Selector(state, props);\r\n  return {\r\n    profile: profile1,\r\n    profile2,\r\n    combinedData: getCombinedData(profile1, profile2, state.tracklist.data),\r\n    tracklist: state.tracklist.data,\r\n    filter: state.profiles.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading:\r\n      state.results.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setProfilesFilter,\r\n  resetProfilesFilter,\r\n};\r\n\r\nclass ProfileCompare extends Component {\r\n  static propTypes = {\r\n    profile: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    profile: {},\r\n    profile2: {},\r\n    combinedData: {},\r\n  };\r\n\r\n  state = {\r\n    isLevelGraphCombined: true,\r\n    compareBarsMode: BARS_MODES.BOTH_TWO,\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onChangeDayRange = range => {\r\n    const { filter } = this.props;\r\n    this.props.setProfilesFilter({\r\n      ...filter,\r\n      dayRange: range,\r\n    });\r\n  };\r\n\r\n  rhMargin = { top: 5, bottom: 5, right: 5, left: 0 };\r\n  rhXDomain = ['dataMin', 'dataMax'];\r\n  rhYDomain = ['dataMin - 100', 'dataMax + 100'];\r\n  rhXTickFormatter = value => parseDate(value).toLocaleDateString();\r\n  rhTooltip = ({ active, payload, label }) => {\r\n    const { profile, profile2 } = this.props;\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n    if (!payload || !payload[0]) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"history-tooltip\">\r\n        <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n        {payload[1] && (\r\n          <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n            {p1Name}: {Math.round(payload[1].value)}\r\n          </div>\r\n        )}\r\n        {payload[0] && (\r\n          <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n            {p2Name}: {Math.round(payload[0].value)}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderRankingHistory() {\r\n    const { combinedData } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={combinedData.ratingChanges} margin={this.rhMargin}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={this.rhXDomain}\r\n            tickFormatter={this.rhXTickFormatter}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={this.rhYDomain}\r\n            tickFormatter={Math.round}\r\n            width={40}\r\n          />\r\n          <ReferenceLine y={1000} stroke=\"white\" />\r\n          <RechartsTooltip isAnimationActive={false} content={this.rhTooltip} />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating2\"\r\n            stroke=\"#ffd388\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating1\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderPlaceHistory() {\r\n    const { combinedData, profile, profile2 } = this.props;\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart\r\n          data={combinedData.placesChanges}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={value => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={[1, dataMax => (dataMax < 3 ? dataMax + 2 : dataMax + 1)]}\r\n            interval={0}\r\n            reversed\r\n            width={40}\r\n          />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload[1] && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n                      {p1Name}: #{payload[1].value}\r\n                    </div>\r\n                  )}\r\n                  {payload[0] && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n                      {p2Name}: #{payload[0].value}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place2\"\r\n            stroke=\"#ffd388\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place1\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  plcMargin = { top: 5, bottom: 5, right: 5, left: 0 };\r\n  plcTooltip = ({ active, payload, label }) => {\r\n    const { profile, profile2 } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n    const isTwo = [BARS_MODES.SINGLE_TWO, BARS_MODES.DOUBLE_TWO, BARS_MODES.BOTH_TWO].includes(\r\n      compareBarsMode\r\n    );\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n\r\n    if (!payload || !payload[0]) {\r\n      return null;\r\n    }\r\n    const renderLegendItem = (item, label) => (\r\n      <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n        {label}: {Math.round(_.get(item.dataKey, item.payload) * 100)}%\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"history-tooltip\">\r\n        <div>Level: {payload[0].payload.x}</div>\r\n        {renderLegendItem(payload[0], `${p1Name} wins`)}\r\n        {!isTwo && renderLegendItem(payload[1], `${p2Name} has no score`)}\r\n        {!isTwo && renderLegendItem(payload[2], `Both have no score`)}\r\n        {!isTwo && renderLegendItem(payload[3], `${p1Name} has no score`)}\r\n        {renderLegendItem(isTwo ? payload[1] : payload[4], `${p2Name} wins`)}\r\n      </div>\r\n    );\r\n  };\r\n  plcXDomain = [0, 1];\r\n  plcXTicks = [0, 0.5, 1];\r\n  plcXFormatter = x => `${Math.round(x * 100)}%`;\r\n\r\n  renderPerLevelComparison() {\r\n    const { combinedData } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" aspect={0.7}>\r\n        <BarChart\r\n          layout=\"vertical\"\r\n          data={[...combinedData.perLevelComparison]}\r\n          margin={this.plcMargin}\r\n        >\r\n          <RechartsTooltip isAnimationActive={false} content={this.plcTooltip} />\r\n          <YAxis reversed dataKey=\"x\" type=\"category\" width={23} />\r\n          <XAxis\r\n            type=\"number\"\r\n            domain={this.plcXDomain}\r\n            ticks={this.plcXTicks}\r\n            tickFormatter={this.plcXFormatter}\r\n          />\r\n          <ReferenceLine x={0.5} stroke=\"#666\" />\r\n          {getCompareBars(compareBarsMode)}\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderProfile() {\r\n    const { profile, profile2, filter } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"profile-header\">\r\n          <div className=\"profile-name text-with-header blue\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile.lastResultDate ? getTimeAgo(profile.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-header right-align\">\r\n          <div className=\"profile-name text-with-header orange\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile2.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile2.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile2.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile2.lastResultDate ? getTimeAgo(profile2.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header flex\">\r\n                  <span>победы по уровням</span>\r\n                </div>\r\n                <div className=\"profile-sm-section-header flex\">\r\n                  {(() => {\r\n                    const isTwo = [\r\n                      BARS_MODES.SINGLE_TWO,\r\n                      BARS_MODES.DOUBLE_TWO,\r\n                      BARS_MODES.BOTH_TWO,\r\n                    ].includes(compareBarsMode);\r\n                    return (\r\n                      <div className=\"toggle-holder\">\r\n                        <Toggle\r\n                          className=\"combine-toggle\"\r\n                          checked={!isTwo}\r\n                          onChange={() =>\r\n                            this.setState(state => ({\r\n                              compareBarsMode: {\r\n                                [BARS_MODES.SINGLE_TWO]: BARS_MODES.SINGLE_FIVE,\r\n                                [BARS_MODES.DOUBLE_TWO]: BARS_MODES.DOUBLE_FIVE,\r\n                                [BARS_MODES.BOTH_TWO]: BARS_MODES.BOTH_FIVE,\r\n                                [BARS_MODES.SINGLE_FIVE]: BARS_MODES.SINGLE_TWO,\r\n                                [BARS_MODES.DOUBLE_FIVE]: BARS_MODES.DOUBLE_TWO,\r\n                                [BARS_MODES.BOTH_FIVE]: BARS_MODES.BOTH_TWO,\r\n                              }[state.compareBarsMode],\r\n                            }))\r\n                          }\r\n                        >\r\n                          подробно\r\n                        </Toggle>\r\n                        <div className=\"tabs-holder\">\r\n                          <ToggleButton\r\n                            text=\"все\"\r\n                            active={[BARS_MODES.BOTH_TWO, BARS_MODES.BOTH_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={() => {\r\n                              this.setState(state => ({\r\n                                compareBarsMode: isTwo ? BARS_MODES.BOTH_TWO : BARS_MODES.BOTH_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                          <ToggleButton\r\n                            text=\"синглы\"\r\n                            active={[BARS_MODES.SINGLE_TWO, BARS_MODES.SINGLE_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={active => {\r\n                              this.setState(state => ({\r\n                                compareBarsMode: isTwo\r\n                                  ? BARS_MODES.SINGLE_TWO\r\n                                  : BARS_MODES.SINGLE_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                          <ToggleButton\r\n                            text=\"даблы\"\r\n                            active={[BARS_MODES.DOUBLE_TWO, BARS_MODES.DOUBLE_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={active => {\r\n                              this.setState(state => ({\r\n                                compareBarsMode: isTwo\r\n                                  ? BARS_MODES.DOUBLE_TWO\r\n                                  : BARS_MODES.DOUBLE_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })()}\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderPerLevelComparison()}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>эло</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderRankingHistory()}</div>\r\n              </div>\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>место в топе</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderPlaceHistory()}</div>\r\n              </div>\r\n            </div>\r\n            {(() => {\r\n              const currentRange = filter.dayRange || profile.filterRange;\r\n              const dateL = moment(currentRange[0] * 1000 * 60 * 60 * 24).format('L');\r\n              const dateR = moment(currentRange[1] * 1000 * 60 * 60 * 24).format('L');\r\n              const l1 = Math.max(currentRange[0] - 1, profile.minMaxRange[0]);\r\n              const l2 = Math.min(currentRange[0] + 1, currentRange[1]);\r\n              const r1 = Math.max(currentRange[1] - 1, currentRange[0]);\r\n              const r2 = Math.min(currentRange[1] + 1, profile.minMaxRange[1]);\r\n              return (\r\n                <div className=\"range-container\">\r\n                  <Range\r\n                    range={currentRange}\r\n                    min={profile.minMaxRange[0]}\r\n                    max={profile.minMaxRange[1]}\r\n                    onChange={this.onChangeDayRange}\r\n                  />\r\n                  <div className=\"range-controls _flex-row\">\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l1, currentRange[1]])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateL}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l2, currentRange[1]])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                    <div className=\"_flex-fill\"></div>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r1])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateR}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r2])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, profile, error } = this.props;\r\n    DEBUG && console.log('profile:', profile);\r\n    return (\r\n      <div className=\"profile-compare-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"btn btn-sm btn-dark btn-icon\"\r\n              onClick={this.onRefresh}\r\n            >\r\n              <FaSearch /> обновить\r\n            </button>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!isLoading && _.isEmpty(profile) && <div className=\"profile\">Profile not found</div>}\r\n          {!isLoading && !_.isEmpty(profile) && this.renderProfile()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(ProfileCompare));\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\nimport { RESET } from './resetAction';\r\n\r\nconst LOADING = `USER/LOADING`;\r\nconst SUCCESS = `USER/SUCCESS`;\r\nconst ERROR = `USER/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        data: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: null,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    case RESET:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchUser = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/profile` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport { resetUser } from './resetAction';\r\n","import cookies from 'browser-cookies';\r\n\r\nimport { postJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport { fetchUser, resetUser } from 'reducers/user';\r\n\r\nconst LOADING = `LOGIN/LOADING`;\r\nconst SUCCESS = `LOGIN/SUCCESS`;\r\nconst ERROR = `LOGIN/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n  error: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        data: null,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: null,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const login = googleResponse => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        postJson({\r\n          url: `${HOST}/login/google`,\r\n          body: { token: googleResponse.tokenId },\r\n        })\r\n      );\r\n      cookies.set('session', data.session, { expires: 30 });\r\n      dispatch({ type: SUCCESS, data });\r\n      dispatch(fetchUser());\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    dispatch(resetUser());\r\n    try {\r\n      const data = await dispatch(\r\n        postJson({\r\n          url: `${HOST}/logout`,\r\n        })\r\n      );\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './top-bar.scss';\r\n\r\n// routes\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport * as loginACs from 'reducers/login';\r\n\r\n// redux\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoadingLogin: state.login.isLoading,\r\n    isLoadingUser: state.user.isLoading,\r\n    user: state.user.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login: loginACs.login,\r\n  logout: loginACs.logout,\r\n};\r\n\r\nfunction TopBar({ isLoadingLogin, isLoadingUser, user, login, logout }) {\r\n  return (\r\n    <header className=\"top-bar\">\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <NavLink exact to={routes.leaderboard.path}>\r\n              leaderboard\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact to={routes.ranking.path}>\r\n              ranking\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact to={routes.songs.path}>\r\n              songs\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div className=\"_flex-fill\" />\r\n      <div className=\"login-container\">\r\n        <NavLink\r\n          className=\"player-info\"\r\n          exact\r\n          to={routes.profile.getPath({ id: _.get('player.id', user) })}\r\n        >\r\n          {_.getOr('', 'player.nickname', user)}\r\n        </NavLink>\r\n        <button\r\n          className=\"btn btn-dark btn-icon btn-sm\"\r\n          onClick={logout}\r\n          disabled={isLoadingLogin || isLoadingUser}\r\n        >\r\n          <span> logout</span>\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TopBar);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { FaGoogle } from 'react-icons/fa';\r\nimport Emoji from 'react-emoji-render';\r\n\r\nimport './login-screen.scss';\r\n\r\n// reducers\r\nimport * as loginACs from 'reducers/login';\r\n\r\n// redux\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoading: state.login.isLoading,\r\n    error: state.login.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login: loginACs.login,\r\n};\r\n\r\nfunction LoginScreen({ isLoading, error, login }) {\r\n  const [isClown, setClown] = useState(false);\r\n  const onGoogleResponse = res => {\r\n    if (res.error) {\r\n      console.log('Google login response error:', res);\r\n    } else {\r\n      login(res);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <div className=\"site-name\">pumpking</div>\r\n      <div className=\"login-button\">\r\n        <GoogleLogin\r\n          clientId=\"197132042723-cmibep21qf6dald9l2l01rif7l5dtd4s.apps.googleusercontent.com\"\r\n          buttonText=\"Login\"\r\n          onSuccess={onGoogleResponse}\r\n          onFailure={onGoogleResponse}\r\n          cookiePolicy={'single_host_origin'}\r\n          render={({ onClick, disabled }) => (\r\n            <button\r\n              className=\"btn btn-dark btn-icon btn-sm\"\r\n              onClick={onClick}\r\n              disabled={disabled || isLoading}\r\n            >\r\n              <FaGoogle />\r\n              <span> login</span>\r\n            </button>\r\n          )}\r\n        />\r\n      </div>\r\n      {error && <div className=\"error\">{error.message}</div>}\r\n      <div className=\"footer\">\r\n        By logging in, you agree to our{' '}\r\n        {isClown ? (\r\n          <Emoji text=\"🤡\" className=\"clown\" />\r\n        ) : (\r\n          <span onClick={() => setClown(true)} className=\"link-style\">\r\n            Privacy Policy\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginScreen);\r\n","import { fetchJson } from 'utils/fetch';\r\nimport queryString from 'query-string';\r\nimport _ from 'lodash/fp';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TOP_PER_SONG/LOADING`;\r\nconst SUCCESS = `TOP_PER_SONG/SUCCESS`;\r\nconst ERROR = `TOP_PER_SONG/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n  error: null,\r\n  fetchingParams: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        fetchingParams: action.fetchingParams,\r\n        data: null,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return action.fetchingParams === state.fetchingParams\r\n        ? {\r\n            ...state,\r\n            isLoading: false,\r\n            error: action.error,\r\n            data: null,\r\n            fetchingParams: null,\r\n          }\r\n        : state;\r\n    case SUCCESS:\r\n      return action.fetchingParams === state.fetchingParams\r\n        ? {\r\n            ...state,\r\n            isLoading: false,\r\n            data: action.data,\r\n            fetchingParams: null,\r\n          }\r\n        : state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTopPerSong = (songName, leftLabel, rightLabel) => {\r\n  const fetchingParams = queryString.stringify({\r\n    song_name: songName,\r\n    charts: _.compact(_.uniq([leftLabel, rightLabel])).join(','),\r\n  });\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING, fetchingParams });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/topPerSong?${fetchingParams}` }));\r\n      dispatch({ type: SUCCESS, data, fetchingParams });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error, fetchingParams });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TRACKLIST/LOADING`;\r\nconst SUCCESS = `TRACKLIST/SUCCESS`;\r\nconst ERROR = `TRACKLIST/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTracklist = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/tracklist/stats/XX` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import _ from \"lodash/fp\";\r\nimport TimeAgo from \"javascript-time-ago\";\r\nimport ru from \"javascript-time-ago/locale/ru\";\r\nimport { convenient } from \"javascript-time-ago/gradation\";\r\nimport moment from \"moment\";\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo(\"ru-RU\");\r\nconst timeStyle = {\r\n  flavour: \"long\",\r\n  gradation: convenient,\r\n  units: [\"day\", \"week\", \"month\"]\r\n};\r\nexport const getTimeAgo = date => {\r\n  const dayDiff = moment()\r\n    .startOf(\"day\")\r\n    .diff(moment(date).startOf(\"day\"), \"days\");\r\n  return dayDiff === 0\r\n    ? \"сегодня\"\r\n    : dayDiff === 1\r\n    ? \"вчера\"\r\n    : timeAgo.format(date, timeStyle);\r\n};\r\n\r\nexport const preprocessData = data => ({\r\n  ...data,\r\n  results: _.flow(\r\n    _.get(\"results\"),\r\n    _.values,\r\n    _.map(item => {\r\n      const fullRes = _.find(\r\n        r =>\r\n          _.every(_.isNumber, [\r\n            r.perfects,\r\n            r.greats,\r\n            r.goods,\r\n            r.bads,\r\n            r.misses\r\n          ]),\r\n        item.results\r\n      );\r\n      const stepSum =\r\n        fullRes &&\r\n        [\r\n          fullRes.perfects,\r\n          fullRes.greats,\r\n          fullRes.goods,\r\n          fullRes.bads,\r\n          fullRes.misses\r\n        ].reduce((sum, n) => sum + n, 0);\r\n\r\n      const [chartType, chartLevel] = item.chart_label.match(/(\\D+)|(\\d+)/g);\r\n\r\n      return {\r\n        song: item.track,\r\n        chartLabel: item.chart_label,\r\n        chartLevel,\r\n        chartType,\r\n        mix: item.mix,\r\n        duration: item.duration,\r\n        results: item.results.map((res, index) => {\r\n          let resultInfoOverrides = {};\r\n          if (stepSum) {\r\n            const infos = [\r\n              res.perfects,\r\n              res.greats,\r\n              res.goods,\r\n              res.bads,\r\n              res.misses\r\n            ];\r\n            let fixableIndex = -1;\r\n            let localStepSum = 0;\r\n            const canFix =\r\n              infos.filter((numb, index) => {\r\n                if (!_.isNumber(numb)) {\r\n                  fixableIndex = index;\r\n                  return true;\r\n                }\r\n                localStepSum += numb;\r\n                return false;\r\n              }).length === 1;\r\n            if (canFix) {\r\n              resultInfoOverrides[\r\n                [\"perfect\", \"great\", \"good\", \"bad\", \"miss\"][fixableIndex]\r\n              ] = stepSum - localStepSum;\r\n            }\r\n          }\r\n          return {\r\n            id: res.id,\r\n            playerId: res.player,\r\n            nickname: data.players[res.player].nickname,\r\n            nicknameArcade: data.players[res.player].arcade_name,\r\n            originalChartMix: res.originalChartMix,\r\n            originalChartLabel: res.originalChartLabel,\r\n            originalScore: res.originalScore,\r\n            date: res.gained,\r\n            dateObject: new Date(res.gained),\r\n            grade: res.grade,\r\n            isExactDate: !!res.exact_gain_date,\r\n            score: res.score,\r\n            scoreIncrease: res.score_increase,\r\n            calories: res.calories && res.calories / 1000,\r\n            perfect: res.perfects,\r\n            great: res.greats,\r\n            good: res.goods,\r\n            bad: res.bads,\r\n            miss: res.misses,\r\n            combo: res.max_combo,\r\n            mods: res.mods_list,\r\n            isRank: !!res.rank_mode,\r\n            isHJ: (res.mods_list || \"\").split(\" \").includes(\"HJ\"),\r\n            ...resultInfoOverrides\r\n          };\r\n        })\r\n      };\r\n    }),\r\n    _.map(song => {\r\n      return {\r\n        ...song,\r\n        latestScoreDate: song.results.reduce(\r\n          (latest, current) => (current.date > latest ? current.date : latest),\r\n          song.results[0].date\r\n        ),\r\n        results: song.results.map(res => {\r\n          const perfects =\r\n            (Math.sqrt(res.perfect) * _.toInteger(song.chartLevel)) / 2;\r\n          const acc = perfects\r\n            ? Math.floor(\r\n                ((perfects * 100 +\r\n                  res.great * 60 +\r\n                  res.good * 30 +\r\n                  res.miss * -20) /\r\n                  (perfects + res.great + res.good + res.bad + res.miss)) *\r\n                  100\r\n              ) / 100\r\n            : null;\r\n          const accRaw = res.perfect\r\n            ? Math.floor(\r\n                ((res.perfect * 100 +\r\n                  res.great * 60 +\r\n                  res.good * 30 +\r\n                  res.miss * -20) /\r\n                  (res.perfect + res.great + res.good + res.bad + res.miss)) *\r\n                  100\r\n              ) / 100\r\n            : null;\r\n          return {\r\n            ...res,\r\n            accuracy:\r\n              acc < 0 ? 0 : accRaw === 100 ? 100 : acc && +acc.toFixed(2),\r\n            accuracyRaw: accRaw,\r\n            hasRankScore: _.some(\r\n              { playerId: res.playerId, isRank: true },\r\n              song.results\r\n            )\r\n          };\r\n        })\r\n      };\r\n    }),\r\n    _.orderBy(\r\n      [\"latestScoreDate\", \"song\", \"chartLevel\"],\r\n      [\"desc\", \"asc\", \"desc\"]\r\n    )\r\n  )(data)\r\n});\r\n","import React, { useEffect, useState, useRef, useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport numeral from 'numeral';\r\nimport _ from 'lodash/fp';\r\nimport { FaYoutube, FaAngleDoubleUp } from 'react-icons/fa';\r\nimport lev from 'fast-levenshtein';\r\n\r\nimport './socket.scss';\r\n\r\nimport { SOCKET_SERVER_IP } from 'constants/backend';\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nimport { fetchResults, appendResultFromSocket, appendNewResults } from 'reducers/results';\r\nimport { fetchTopPerSong } from 'reducers/topPerSong';\r\nimport { fetchTracklist } from 'reducers/tracklist';\r\n\r\nimport { getRankImg } from 'utils/exp';\r\nimport { preprocessData, getTimeAgo } from './helpers';\r\n\r\n// code\r\nconst STATE_RESET_TIMEOUT = 10 * 60 * 1000; // 5 minutes\r\n\r\n// redux\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoading: state.topPerSong.isLoading,\r\n    songTopData: state.topPerSong.data,\r\n    error: state.topPerSong.error,\r\n    profiles: state.results.profiles,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  fetchTopPerSong,\r\n  fetchTracklist,\r\n  appendNewResults,\r\n  appendResultFromSocket,\r\n};\r\n\r\n// component\r\nconst renderChartLabel = (type, level) => {\r\n  return (\r\n    <div\r\n      className={classNames('chart-name', {\r\n        single: type === 'S',\r\n        singlep: type === 'SP',\r\n        doublep: type === 'DP',\r\n        double: type === 'D',\r\n        coop: type === 'COOP',\r\n      })}\r\n    >\r\n      <span className=\"chart-letter\">{type}</span>\r\n      <span className=\"chart-number\">{level}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction TrackerApp({\r\n  isLoading,\r\n  fetchResults,\r\n  fetchTracklist,\r\n  fetchTopPerSong,\r\n  appendResultFromSocket,\r\n  appendNewResults,\r\n  songTopData,\r\n  error,\r\n  profiles,\r\n}) {\r\n  const [message, setMessage] = useState('');\r\n  const [socketErrorMessage, setSocketErrorMessage] = useState('');\r\n  const [isSocketReady, setSocketReady] = useState(false);\r\n  const [isAlive, setAlive] = useState(false);\r\n  const [leftLabel, setLeftLabel] = useState(null);\r\n  const [rightLabel, setRightLabel] = useState(null);\r\n  const [leftPlayer, setLeftPlayer] = useState(null);\r\n  const [rightPlayer, setRightPlayer] = useState(null);\r\n  const [recognizedSongName, setRecognizedSongName] = useState('');\r\n\r\n  const socketRef = useRef(null);\r\n  const timeoutResetTokenRef = useRef(null);\r\n\r\n  const charts = _.values(_.get('results', preprocessData(songTopData)));\r\n  const leftChart = _.find({ chartLabel: leftLabel }, charts);\r\n  const rightChart = _.find({ chartLabel: rightLabel }, charts);\r\n  const chartsToShow = _.uniq(_.compact([leftChart, rightChart]));\r\n\r\n  const topPlayersList = _.flow(\r\n    _.values,\r\n    _.orderBy('ratingRaw', 'desc'),\r\n    items => items.map((it, index) => ({ place: index + 1, ...it }))\r\n  )(profiles);\r\n\r\n  let leftProfile = {};\r\n  let rightProfile = {};\r\n\r\n  if (leftPlayer) {\r\n    leftProfile = _.minBy(p => lev.get(p.nameArcade, leftPlayer), _.values(profiles)) || {};\r\n  }\r\n  if (rightPlayer) {\r\n    rightProfile = _.minBy(p => lev.get(p.nameArcade, rightPlayer), _.values(profiles)) || {};\r\n  }\r\n\r\n  const [leftData, setLeftData] = useState({ name: leftProfile.name, rating: null, exp: null });\r\n  const [rightData, setRightData] = useState({ name: rightProfile.name, rating: null, exp: null });\r\n\r\n  const restartTimeout = useCallback(() => {\r\n    setAlive(true);\r\n    if (timeoutResetTokenRef.current) {\r\n      clearTimeout(timeoutResetTokenRef.current);\r\n    }\r\n    timeoutResetTokenRef.current = setTimeout(() => {\r\n      // TODO: reset page\r\n      // this.setState(defaultState);\r\n    }, STATE_RESET_TIMEOUT);\r\n  }, []);\r\n\r\n  console.log(leftProfile, rightProfile);\r\n\r\n  useEffect(() => {\r\n    if (leftProfile.rating && leftProfile.rating !== leftData.rating) {\r\n      setLeftData({ ...leftData, rating: leftProfile.rating, prevRating: leftData.rating });\r\n    }\r\n    if (leftProfile.exp && leftProfile.exp !== leftData.exp) {\r\n      setLeftData({\r\n        ...leftData,\r\n        exp: leftProfile.exp,\r\n        prevExp: leftData.exp,\r\n        expRank: leftProfile.expRank,\r\n        expRankNext: leftProfile.expRankNext,\r\n      });\r\n    }\r\n    if (rightProfile.rating && rightProfile.rating !== rightData.rating) {\r\n      setRightData({ ...rightData, rating: rightProfile.rating, prevRating: rightData.rating });\r\n    }\r\n    if (rightProfile.exp && rightProfile.exp !== rightData.exp) {\r\n      setRightData({\r\n        ...rightData,\r\n        exp: rightProfile.exp,\r\n        prevExp: rightData.exp,\r\n        expRank: rightProfile.expRank,\r\n        expRankNext: rightProfile.expRankNext,\r\n      });\r\n    }\r\n    if (leftData.name !== leftProfile.name) {\r\n      setLeftData({\r\n        ...leftData,\r\n        rating: leftProfile.rating,\r\n        prevRating: null,\r\n        exp: leftProfile.exp,\r\n        expRank: leftProfile.expRank,\r\n        expRankNext: leftProfile.expRankNext,\r\n        prevExp: null,\r\n        name: leftProfile.name,\r\n      });\r\n    }\r\n    if (rightData.name !== rightProfile.name) {\r\n      setRightData({\r\n        ...rightData,\r\n        rating: rightProfile.rating,\r\n        prevRating: null,\r\n        exp: rightProfile.exp,\r\n        expRank: rightProfile.expRank,\r\n        expRankNext: rightProfile.expRankNext,\r\n        prevExp: null,\r\n        name: rightProfile.name,\r\n      });\r\n    }\r\n    /* eslint-disable */\r\n  }, [\r\n    leftProfile.rating,\r\n    rightProfile.rating,\r\n    leftProfile.exp,\r\n    rightProfile.exp,\r\n    leftProfile.name,\r\n    rightProfile.name,\r\n    leftData,\r\n    rightData,\r\n  ]);\r\n  /* eslint-enable */\r\n\r\n  useEffect(() => {\r\n    socketRef.current = new WebSocket(SOCKET_SERVER_IP);\r\n    socketRef.current.onerror = () => {\r\n      setMessage(`Cannot connect to websocket server, please reload the page`);\r\n    };\r\n    socketRef.current.onopen = e => {\r\n      setSocketReady(true);\r\n    };\r\n  }, []); // eslint-disable-line\r\n\r\n  useEffect(() => {\r\n    socketRef.current.onmessage = event => {\r\n      restartTimeout();\r\n      try {\r\n        const data = event && event.data && JSON.parse(event.data);\r\n        console.log(data);\r\n\r\n        if (data.type === 'result_screen') {\r\n          const songName = data.data.track_name;\r\n          const leftLabel = _.get('left.chart_label', data.data);\r\n          const rightLabel = _.get('right.chart_label', data.data);\r\n          const leftPlayer = _.get('left.result.player_name', data.data);\r\n          const rightPlayer = _.get('right.result.player_name', data.data);\r\n          setLeftPlayer(leftPlayer);\r\n          setRightPlayer(rightPlayer);\r\n          setLeftLabel(leftLabel);\r\n          setRightLabel(rightLabel);\r\n          setRecognizedSongName(songName);\r\n          appendNewResults(); // Fetch results that we don't have here yet (to calculate\r\n          fetchTopPerSong(songName, leftLabel, rightLabel);\r\n        } else if (data.type === 'chart_selected') {\r\n          setSocketErrorMessage(data.data.error || '');\r\n          if (data.data.leftPlayer || data.data.rightPlayer) {\r\n            setLeftPlayer(data.data.leftPlayer);\r\n            setRightPlayer(data.data.rightPlayer);\r\n          }\r\n          if (data.data.leftLabel || data.data.rightLabel) {\r\n            setLeftLabel(data.data.leftLabel);\r\n            setRightLabel(data.data.rightLabel);\r\n            if (data.data.text) {\r\n              // If we have full info, try to fetch if needed\r\n              const newSongName = data.data.text;\r\n              setRecognizedSongName(newSongName);\r\n              console.log('song name', newSongName, recognizedSongName);\r\n              if (recognizedSongName !== newSongName) {\r\n                fetchTopPerSong(newSongName, data.data.leftLabel, data.data.rightLabel);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.log('on message error', e);\r\n        setMessage(`Error: ${e.message}`);\r\n      }\r\n    };\r\n  }, [recognizedSongName, fetchTopPerSong, restartTimeout, appendNewResults]);\r\n\r\n  // useEffect(() => {\r\n  //   setTimeout(() => {\r\n  //     socketRef.current.onmessage({\r\n  //       data:\r\n  //         '{\"type\": \"chart_selected\", \"data\": {\"text\": \"Uranium\", \"leftLabel\": \"D17\", \"rightLabel\": \"D20\", \"leftPlayer\": \"GRUMD\", \"rightPlayer\": \"DINO\"}}',\r\n  //     });\r\n  //   }, 2000);\r\n  // }, []);\r\n\r\n  const resultsContainerRef = useRef(null);\r\n  const leftResultRef = useRef(null);\r\n  const rightResultRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (resultsContainerRef.current && leftResultRef.current) {\r\n      if (rightResultRef.current) {\r\n        // Both refs\r\n        const left = leftResultRef.current;\r\n        const right = rightResultRef.current;\r\n        const totalSize = {\r\n          w: resultsContainerRef.current.clientWidth,\r\n          h: resultsContainerRef.current.clientHeight,\r\n        };\r\n        const scaleHH = totalSize.w / (left.offsetWidth + right.offsetWidth);\r\n        const scaleHW = totalSize.h / Math.max(left.offsetHeight, right.offsetHeight);\r\n        const scaleWH = totalSize.w / Math.max(left.offsetWidth, right.offsetWidth);\r\n        const scaleWW = totalSize.h / (left.offsetHeight + right.offsetHeight);\r\n        // console.log(scaleHH, scaleHW, scaleWH, scaleWW);\r\n        if (Math.min(scaleHH, scaleHW) > Math.min(scaleWH, scaleWW)) {\r\n          resultsContainerRef.current.style.flexDirection = 'row';\r\n          resultsContainerRef.current.style.alignItems = 'center';\r\n          if (scaleHH > scaleHW) {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleHW})`;\r\n          } else {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleHH})`;\r\n          }\r\n        } else {\r\n          resultsContainerRef.current.style.flexDirection = 'column';\r\n          resultsContainerRef.current.style.alignItems = 'center';\r\n          if (scaleWH > scaleWW) {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleWW})`;\r\n          } else {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleWH})`;\r\n          }\r\n        }\r\n      } else {\r\n        // One ref\r\n        const left = leftResultRef.current;\r\n        const totalSize = {\r\n          w: resultsContainerRef.current.clientWidth,\r\n          h: resultsContainerRef.current.clientHeight,\r\n        };\r\n        const scaleW = totalSize.w / left.offsetWidth;\r\n        const scaleH = totalSize.h / left.offsetHeight;\r\n        if (scaleW < scaleH) {\r\n          resultsContainerRef.current.style.transform = `scale(${0.98 * scaleW})`;\r\n        } else {\r\n          resultsContainerRef.current.style.transform = `scale(${0.98 * scaleH})`;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  const renderPlayer = ({ player, profile, label, data, isLeft = false }) => {\r\n    const renderDeltaText = (n, prevN) => {\r\n      if (!prevN || prevN === n) {\r\n        return null;\r\n      }\r\n      const delta = n - prevN;\r\n      return (\r\n        <span className={`change ${delta >= 0 ? 'pos' : 'neg'}`}>\r\n          {delta < 0 ? Math.round(delta) : `+${Math.round(delta)}`}\r\n        </span>\r\n      );\r\n    };\r\n\r\n    const renderExpLine = () => {\r\n      if (!data.expRank || !data.exp) {\r\n        return null;\r\n      }\r\n\r\n      let takenWidth = data.expRankNext\r\n        ? (data.exp - data.expRank.threshold) /\r\n          (data.expRankNext.threshold - data.expRank.threshold)\r\n        : 1;\r\n      const emptyWidth = 1 - takenWidth;\r\n      let diffWidth = 0;\r\n\r\n      if (data.prevExp) {\r\n        takenWidth = data.expRankNext\r\n          ? (data.prevExp - data.expRank.threshold) /\r\n            (data.expRankNext.threshold - data.expRank.threshold)\r\n          : 1;\r\n        diffWidth = 1 - emptyWidth - takenWidth;\r\n      }\r\n      return (\r\n        <div className=\"exp-line\">\r\n          <div className=\"taken\" style={{ width: Math.floor(100 * takenWidth) + '%' }}></div>\r\n          <div className=\"diff\" style={{ width: Math.ceil(100 * diffWidth) + '%' }}></div>\r\n          <div className=\"rest\" style={{ width: Math.ceil(100 * emptyWidth) + '%' }}></div>\r\n        </div>\r\n      );\r\n    };\r\n\r\n    const playerIndex = _.findIndex({ id: profile.id }, topPlayersList);\r\n    const closestPlayers = topPlayersList.slice(\r\n      Math.max(0, playerIndex - 1),\r\n      Math.min(playerIndex + 2, topPlayersList.length)\r\n    );\r\n\r\n    return (\r\n      <div className={`player-container ${isLeft ? 'left' : 'right'}`}>\r\n        {player && (\r\n          <>\r\n            <div className=\"title-header\">player {isLeft ? 1 : 2}:</div>\r\n            <div className=\"name-with-label\">\r\n              <div className=\"name\">{profile.name || player}</div>\r\n              <div className=\"chart-label\">\r\n                {label && renderChartLabel(...label.match(/(\\D+)|(\\d+)/g))}\r\n              </div>\r\n            </div>\r\n            {data.exp && data.expRank && (\r\n              <div className=\"exp exp-rank\">\r\n                {getRankImg(data.expRank)}\r\n                {renderExpLine()}\r\n              </div>\r\n            )}\r\n            {data.exp && (\r\n              <div className=\"exp-text\">\r\n                <span className=\"_grey-text\">exp:</span> {Math.floor(data.exp)}{' '}\r\n                {renderDeltaText(data.exp, data.prevExp)}\r\n              </div>\r\n            )}\r\n            {data.rating && (\r\n              <div className=\"rating\">\r\n                <span className=\"_grey-text\">elo:</span> {Math.floor(data.rating)}{' '}\r\n                {renderDeltaText(data.rating, data.prevRating)}\r\n              </div>\r\n            )}\r\n            <div className=\"closest-players\">\r\n              {_.map(pl => {\r\n                return (\r\n                  <div className={`closest-player ${profile.id === pl.id ? 'current-player' : ''}`}>\r\n                    <div className=\"place\">#{pl.place}</div>\r\n                    <div className=\"name\">{pl.name}</div>\r\n                    <div className=\"elo\">{pl.rating}</div>\r\n                  </div>\r\n                );\r\n              }, closestPlayers)}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"tracker-container\">\r\n      <div className=\"sidebar\">\r\n        {renderPlayer({\r\n          player: leftPlayer,\r\n          profile: leftProfile,\r\n          label: leftLabel,\r\n          data: leftData,\r\n          isLeft: true,\r\n        })}\r\n        {/* <div className=\"song-name\">{socketErrorMessage || recognizedSongName}</div> */}\r\n        {renderPlayer({\r\n          player: rightPlayer,\r\n          profile: rightProfile,\r\n          label: rightLabel,\r\n          data: rightData,\r\n        })}\r\n      </div>\r\n      <div className=\"results\" ref={resultsContainerRef}>\r\n        {(error || message) && (\r\n          <div className=\"error\">\r\n            {message}\r\n            <br />\r\n            {error && error.message}\r\n          </div>\r\n        )}\r\n        {isSocketReady &&\r\n          !leftPlayer &&\r\n          !rightPlayer &&\r\n          !socketErrorMessage &&\r\n          !isLoading &&\r\n          _.isEmpty(chartsToShow) &&\r\n          (isAlive ? (\r\n            <div className=\"msg\">Waiting for chart select...</div>\r\n          ) : (\r\n            <div className=\"offline msg\">Recognizer is offline</div>\r\n          ))}\r\n        {isSocketReady &&\r\n          (leftLabel || rightLabel) &&\r\n          !socketErrorMessage &&\r\n          !isLoading &&\r\n          _.isEmpty(chartsToShow) &&\r\n          'No results for this chart'}\r\n        {isLoading && <Loader />}\r\n        {!isLoading &&\r\n          chartsToShow.map((chart, chartIndex) => {\r\n            let topPlace = 1;\r\n            const occuredNicknames = [];\r\n            const results = chart.results.map((res, index) => {\r\n              const isSecondOccurenceInResults = occuredNicknames.includes(res.nickname);\r\n              occuredNicknames.push(res.nickname);\r\n              if (index === 0) {\r\n                topPlace = 1;\r\n              } else if (\r\n                !isSecondOccurenceInResults &&\r\n                res.score !== _.get([index - 1, 'score'], chart.results)\r\n              ) {\r\n                topPlace += 1;\r\n              }\r\n              return {\r\n                ...res,\r\n                topPlace,\r\n                isSecondOccurenceInResults,\r\n              };\r\n            });\r\n            return (\r\n              <div\r\n                className=\"song-block\"\r\n                key={chart.song + chart.chartLabel}\r\n                ref={chartIndex === 0 ? leftResultRef : rightResultRef}\r\n              >\r\n                <div className=\"song-name\">\r\n                  {renderChartLabel(chart.chartType, chart.chartLevel)}\r\n                  <div>{chart.song}</div>\r\n                  <div className=\"youtube-link\">\r\n                    <a\r\n                      href={`https://youtube.com/results?search_query=${chart.song\r\n                        .replace(/ /g, '+')\r\n                        .replace(/-/g, '')}+${chart.chartLabel}`}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      <FaYoutube />\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                <div className=\"charts\">\r\n                  <div className=\"chart\">\r\n                    <div className=\"results\">\r\n                      <table>\r\n                        <tbody>\r\n                          {results.map((res, index) => {\r\n                            let placeDifference, newIndex;\r\n                            if (res.scoreIncrease && res.date === chart.latestScoreDate) {\r\n                              const prevScore = res.score - res.scoreIncrease;\r\n                              newIndex = _.findLastIndex(res => res.score > prevScore, results);\r\n                              placeDifference = newIndex - index;\r\n                            }\r\n                            return (\r\n                              <tr\r\n                                key={res.score + res.nickname}\r\n                                className={classNames({\r\n                                  empty: !res.isExactDate,\r\n                                  latest: res.date === chart.latestScoreDate,\r\n                                  left: res.nickname === leftProfile.name,\r\n                                  right: res.nickname === rightProfile.name,\r\n                                })}\r\n                              >\r\n                                <td className=\"place\">\r\n                                  {res.isSecondOccurenceInResults ? '' : `#${res.topPlace}`}\r\n                                </td>\r\n                                <td className=\"nickname\">\r\n                                  {res.nickname}\r\n                                  {!!placeDifference && (\r\n                                    <span className=\"change-holder up\">\r\n                                      <span>{placeDifference}</span>\r\n                                      <FaAngleDoubleUp />\r\n                                    </span>\r\n                                  )}\r\n                                </td>\r\n                                <td\r\n                                  className={classNames('judge', {\r\n                                    vj: res.isRank,\r\n                                    hj: res.isHJ,\r\n                                  })}\r\n                                >\r\n                                  {res.isRank && (\r\n                                    <div className=\"inner\">{res.isExactDate ? 'VJ' : 'VJ?'}</div>\r\n                                  )}\r\n                                  {res.isHJ && <div className=\"inner\">HJ</div>}\r\n                                </td>\r\n                                <td className=\"score\">\r\n                                  <span className=\"score-span\">\r\n                                    {res.scoreIncrease > res.score * 0.8 && '*'}\r\n                                    {numeral(res.score).format('0,0')}\r\n                                  </span>\r\n                                </td>\r\n                                <td className=\"grade\">\r\n                                  <div className=\"img-holder\">\r\n                                    {res.grade && res.grade !== '?' && (\r\n                                      <img\r\n                                        src={`${process.env.PUBLIC_URL}/grades/${res.grade}.png`}\r\n                                        alt={res.grade}\r\n                                      />\r\n                                    )}\r\n                                    {res.grade === '?' && null}\r\n                                  </div>\r\n                                </td>\r\n                                <td className=\"number miss\">{res.miss}</td>\r\n                                <td className=\"number bad\">{res.bad}</td>\r\n                                <td className=\"number good\">{res.good}</td>\r\n                                <td className=\"number great\">{res.great}</td>\r\n                                <td className=\"number perfect\">{res.perfect}</td>\r\n                                <td className=\"combo\">\r\n                                  {res.combo}\r\n                                  {res.combo ? 'x' : ''}\r\n                                </td>\r\n                                <td className=\"accuracy\">\r\n                                  {res.accuracy}\r\n                                  {res.accuracy ? '%' : ''}\r\n                                </td>\r\n                                <td\r\n                                  className={classNames('date', {\r\n                                    latest: res.date === chart.latestScoreDate,\r\n                                  })}\r\n                                >\r\n                                  {getTimeAgo(res.dateObject)}\r\n                                  {res.isExactDate ? '' : '?'}\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TrackerApp);\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport localForage from 'localforage';\r\nimport _ from 'lodash/fp';\r\n\r\nimport 'react-responsive-ui/style.css';\r\nimport './App.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\nimport { CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nimport SongsTop from 'components/SongsTop/SongsTop';\r\nimport Leaderboard from 'components/Leaderboard/Leaderboard';\r\nimport Ranking from 'components/Ranking/Ranking';\r\nimport Profile from 'components/Profile/Profile';\r\nimport ProfileCompare from 'components/ProfileCompare/ProfileCompare';\r\nimport TopBar from 'components/Shared/TopBar/TopBar';\r\nimport Loader from 'components/Shared/Loader';\r\nimport LoginScreen from 'components/LoginScreen/LoginScreen';\r\nimport SocketTracker from 'components/SocketTracker/SocketTracker';\r\n\r\nimport { fetchResults, setFilter } from 'reducers/results';\r\nimport { fetchTracklist } from 'reducers/tracklist';\r\nimport { fetchUser } from 'reducers/user';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data: state.user.data,\r\n    isLoading: state.user.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setFilter,\r\n  fetchResults,\r\n  fetchTracklist,\r\n  fetchUser,\r\n};\r\n\r\nfunction App(props) {\r\n  const { fetchUser, fetchTracklist, fetchResults, setFilter, data, isLoading } = props;\r\n\r\n  useEffect(() => {\r\n    localForage\r\n      .getItem('filter')\r\n      .then(filter => {\r\n        if (filter) {\r\n          setFilter({\r\n            ...filter,\r\n            chartRange: filter.chartRange && {\r\n              ...filter.chartRange,\r\n              range: _.every(\r\n                r => r >= CHART_MIN_MAX[0] && r <= CHART_MIN_MAX[1],\r\n                filter.chartRange.range\r\n              )\r\n                ? filter.chartRange.range\r\n                : CHART_MIN_MAX,\r\n            },\r\n          });\r\n        }\r\n      })\r\n      .catch(error => console.error('Cannot get filter from local storage', error));\r\n    fetchUser();\r\n  }, [fetchUser, fetchTracklist, fetchResults, setFilter]);\r\n\r\n  useEffect(() => {\r\n    if (data && data.player) {\r\n      fetchTracklist().then(() => {\r\n        fetchResults();\r\n      });\r\n    }\r\n  }, [data, fetchResults, fetchTracklist]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <Loader />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!data || !data.player) {\r\n    return <LoginScreen />;\r\n  }\r\n\r\n  if (process.env.REACT_APP_SOCKET) {\r\n    return <SocketTracker />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TopBar />\r\n      <Route exact path=\"/\" render={() => <Redirect to={routes.leaderboard.path} />} />\r\n      <Route path={routes.leaderboard.path} component={Leaderboard} />\r\n      <Route path={routes.ranking.path} component={Ranking} />\r\n      <Route path={routes.profile.path}>\r\n        <Switch>\r\n          <Route path={routes.profile.path} exact component={Profile} />\r\n          <Route path={routes.profile.compare.path} exact component={ProfileCompare} />\r\n        </Switch>\r\n      </Route>\r\n      <Route path={routes.songs.path} component={SongsTop} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","import { combineReducers } from 'redux';\r\n\r\nimport mostPlayed from './mostPlayed';\r\nimport mostPlayedMonth from './mostPlayedMonth';\r\nimport leastPlayed from './leastPlayed';\r\n\r\nexport default combineReducers({\r\n  mostPlayed,\r\n  mostPlayedMonth,\r\n  leastPlayed,\r\n});\r\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport _ from 'lodash/fp';\r\n\r\nimport tracklist from 'reducers/tracklist';\r\nimport trackStats from 'reducers/trackStats';\r\nimport profiles from 'reducers/profiles';\r\nimport presets from 'reducers/presets';\r\nimport results from 'reducers/results';\r\nimport user from 'reducers/user';\r\nimport login from 'reducers/login';\r\nimport topPerSong from 'reducers/topPerSong';\r\n\r\nconst rootReducer = combineReducers({\r\n  topPerSong,\r\n  login,\r\n  presets,\r\n  profiles,\r\n  results,\r\n  trackStats,\r\n  tracklist,\r\n  user,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && process.env.NODE_ENV === 'development'\r\n    ? compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__({\r\n          stateSanitizer: state => ({\r\n            ...state,\r\n            results: {\r\n              ...state.results,\r\n              data: `big array, ${_.size(state.results.data)}`,\r\n              results: `big array, ${_.size(state.results.results)}`,\r\n              sharedCharts: 'big object',\r\n              profiles: _.mapValues(\r\n                pl => ({\r\n                  ...pl,\r\n                  resultsByGrade: '...',\r\n                  resultsByLevel: '...',\r\n                  rankingHistory: '...',\r\n                  ratingHistory: '...',\r\n                }),\r\n                state.results.profiles\r\n              ),\r\n            },\r\n          }),\r\n        })\r\n      )\r\n    : applyMiddleware(thunk)\r\n);\r\n","import 'promise-polyfill';\r\nimport 'whatwg-fetch';\r\nimport 'utils/polyfills';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.scss';\r\nimport App from 'components/App';\r\n\r\nimport { store } from 'reducers';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}