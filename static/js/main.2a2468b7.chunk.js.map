{"version":3,"sources":["components/Shared/Overlay/Overlay.js","components/Shared/ToggleButton/ToggleButton.js","components/Shared/Input/Input.js","components/Shared/Toggle/Toggle.js","utils/fetch.js","reducers/top.js","utils/colors.js","components/Rankings/Rankings.js","constants/backend.js","components/App.js","reducers/index.js","index.js"],"names":["POPPER_MODIFIERS","preventOverflow","enabled","padding","boundariesElement","PLACEMENT_ARROW_MAPPING","right","left","top","bottom","getArrowPlacement","placement","split","Overlay","state","isVisible","containerItemRef","React","createRef","renderPopper","bind","toggleOverlayVisibility","this","setState","event","target","closest","hideOverlay","ref","style","arrowProps","outOfBoundaries","scheduleUpdate","props","children","hideWhenOutOfBounds","data-placement","className","classNames","overlayItem","Fragment","onClick","ReactDOM","createPortal","container","document","body","modifiers","referenceElement","current","PureComponent","defaultTypes","listensToClickOutside","ToggleButton","active","onToggle","text","Input","value","_","isNil","defaultValue","bindAll","prevProps","e","newValue","onChange","type","numericValue","Number","min","max","onBlur","omit","handleBlur","onInput","handleChange","Component","defaultProps","noop","Toggle","checked","id","uniqueId","htmlFor","fetchJson","a","url","fetch","response","status","json","data","Error","console","error","Promise","reject","LOADING","SUCCESS","ERROR","initialState","isLoading","transformBackendData","flow","get","values","map","item","song","track","chartLabel","chart_label","chartLevel","slice","chartType","mix","results","res","acc","Math","floor","perfects","greats","goods","misses","bads","nickname","date","gained","dateObject","Date","grade","isExactDate","exact_gain_date","score","perfect","great","good","bad","miss","combo","max_combo","mods","mods_list","isRank","rank_mode","accuracy","latestScoreDate","reduce","latest","colorsArray","TimeAgo","addLocale","ru","timeAgo","chartMinMax","timeStyle","flavour","gradation","convenient","units","tooltipFormatterForBests","display","alignItems","flexDirection","toLocaleDateString","nowDate","getFilteredData","filter","names","players","namesOr","playersOr","namesNot","playersNot","compact","chartRange","items","rows","range","getOr","row","filterCharts","matchSorter","keys","showRank","size","length","rowNames","every","name","includes","some","orderBy","ChartFilter","filterValue","buttonText","t","step","r","renderTrack","onMouseDown","onTouchStart","height","width","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","justifyContent","boxShadow","playersSelector","createSelector","flatMap","uniq","sortBy","toLower","label","mapDispatchToProps","fetchTopScores","dispatch","TopScores","showItemsCount","setFilter","curry","localForage","setItem","getItem","then","catch","warn","isAdvancedOpen","filteredData","canShowMore","visibleData","uniqueSelectedNames","hasAdvancedFilters","message","placeholder","closeMenuOnSelect","classNamePrefix","isMulti","options","isEmpty","chart","chartIndex","key","single","index","nameIndex","indexOf","empty","fontWeight","color","numeral","format","src","process","alt","vj","content","tooltipClassName","strTimeAgo","dayDiff","moment","startOf","diff","getTimeAgo","connect","App","exact","path","component","Rankings","rootReducer","combineReducers","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","thunk","stateSanitizer","render","getElementById"],"mappings":"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","file":"static/js/main.2a2468b7.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport toBe from 'prop-types';\r\nimport { Popper } from 'react-popper';\r\nimport classNames from 'classnames';\r\nimport listensToClickOutside from 'react-onclickoutside';\r\n\r\nimport './overlay.scss';\r\n\r\nconst POPPER_MODIFIERS = {\r\n  preventOverflow: {\r\n    enabled: true,\r\n    padding: 10,\r\n    boundariesElement: 'viewport',\r\n  },\r\n};\r\n\r\nconst PLACEMENT_ARROW_MAPPING = {\r\n  right: 'left',\r\n  left: 'right',\r\n  top: 'bottom',\r\n  bottom: 'top',\r\n};\r\n\r\nconst getArrowPlacement = placement => {\r\n  return placement && PLACEMENT_ARROW_MAPPING[placement.split('-')[0]];\r\n};\r\n\r\nclass Overlay extends React.PureComponent {\r\n  static propTypes = {\r\n    placement: toBe.string,\r\n    overlayItem: toBe.any,\r\n    hideWhenOutOfBounds: toBe.bool,\r\n  };\r\n\r\n  static defaultTypes = {\r\n    placement: 'bottom',\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isVisible: false,\r\n    };\r\n    this.containerItemRef = React.createRef();\r\n    this.renderPopper = this.renderPopper.bind(this);\r\n    this.toggleOverlayVisibility = this.toggleOverlayVisibility.bind(this);\r\n  }\r\n\r\n  hideOverlay() {\r\n    this.setState({\r\n      isVisible: false,\r\n    });\r\n  }\r\n\r\n  toggleOverlayVisibility() {\r\n    this.setState({\r\n      isVisible: !this.state.isVisible,\r\n    });\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    const preventHiding = event && event.target.closest('.inner-popper-overlay'); // prevent overlays from hiding when a modal is opened within overlay\r\n\r\n    if (!preventHiding) {\r\n      this.hideOverlay();\r\n    }\r\n  }\r\n\r\n  renderPopper({ ref, style, placement, arrowProps, scheduleUpdate, outOfBoundaries }) {\r\n    const { children, hideWhenOutOfBounds } = this.props;\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        data-placement={placement}\r\n        className={classNames(\r\n          'inner-popper-overlay',\r\n          `arrow-${getArrowPlacement(placement)}`,\r\n          // this.props.overlayClassName,\r\n          { 'out-of-bounds': outOfBoundaries && hideWhenOutOfBounds }\r\n        )}\r\n      >\r\n        <div className=\"arrow-hider\">\r\n          <div className=\"arrow\" ref={arrowProps.ref} style={arrowProps.style} />\r\n        </div>\r\n        <div\r\n          className=\"inner-popper-content\"\r\n          // ref={ref => this.setupPopperContentRef(scheduleUpdate, ref)}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { placement, overlayItem } = this.props;\r\n    const { isVisible } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"overlay-item\"\r\n          ref={this.containerItemRef}\r\n          onClick={this.toggleOverlayVisibility}\r\n        >\r\n          {overlayItem}\r\n        </div>\r\n        {isVisible &&\r\n          ReactDOM.createPortal(\r\n            <Popper\r\n              container={document.body}\r\n              modifiers={POPPER_MODIFIERS}\r\n              placement={placement}\r\n              referenceElement={this.containerItemRef.current}\r\n            >\r\n              {this.renderPopper}\r\n            </Popper>,\r\n            document.body\r\n          )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default listensToClickOutside(Overlay);\r\n","import React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './toggle-button.scss';\r\n\r\nexport default class ToggleButton extends React.PureComponent {\r\n  static propTypes = {\r\n    text: toBe.string,\r\n    onToggle: toBe.func,\r\n    active: toBe.bool,\r\n  };\r\n\r\n  render() {\r\n    const { active, onToggle, text } = this.props;\r\n    return (\r\n      <div\r\n        className={classNames('toggle-button', { active: active })}\r\n        onClick={() => onToggle(!active)}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable react/no-deprecated */\r\n// imports from vendor deps\r\nimport React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\n\r\n// imports from styles\r\nexport default class Input extends React.Component {\r\n  static propTypes = {\r\n    value: toBe.any,\r\n    defaultValue: toBe.any,\r\n    onChange: toBe.func,\r\n    onBlur: toBe.func,\r\n    type: toBe.string,\r\n    className: toBe.string,\r\n    trimOnBlur: toBe.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    value: null,\r\n    type: 'text',\r\n    onChange: _.noop,\r\n    onBlur: _.noop,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: (!_.isNil(props.value) ? props.value : props.defaultValue) || '',\r\n    };\r\n    _.bindAll(['handleChange', 'handleBlur'], this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.value !== this.props.value) {\r\n      this.setState({ value: this.props.value });\r\n    }\r\n  }\r\n\r\n  handleChange(e) {\r\n    const newValue = e.target.value;\r\n    this.setState({ value: newValue }, () => this.props.onChange(newValue));\r\n  }\r\n\r\n  handleBlur(e) {\r\n    const { type } = this.props;\r\n    const { value } = this.state;\r\n    if (type === 'number') {\r\n      const numericValue = Number(value);\r\n      if (numericValue >= Number(e.target.min) && numericValue <= Number(e.target.max)) {\r\n        this.props.onBlur(numericValue, e);\r\n      } else {\r\n        this.setState({ value: this.props.value });\r\n        this.props.onBlur(this.props.value, e);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props;\r\n\r\n    // HACK: This component uses onInput instead of onChange\r\n    // because IE11 fails to call onChange events when you paste/cut using context menu (RMB)\r\n    // We're using onInput because it works fine, and because for text input\r\n    // there's no difference between how onChange and onInput work\r\n    return (\r\n      <input\r\n        {..._.omit(['defaultValue', 'onChange'], this.props)}\r\n        className={classNames(className, 'text-input')}\r\n        value={this.state.value}\r\n        onBlur={this.handleBlur}\r\n        onInput={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './toggle.scss';\r\n\r\n// imports from styles\r\nexport default class Toggle extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.id = _.uniqueId();\r\n  }\r\n\r\n  onChange = e => {\r\n    this.props.onChange(e.target.checked);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"toggle-checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle-checkbox-cb\"\r\n          id={this.id}\r\n          onChange={this.onChange}\r\n          checked={this.props.checked}\r\n        />\r\n        <label htmlFor={this.id} className=\"toggle\">\r\n          <span></span>\r\n        </label>\r\n        <label htmlFor={this.id} className=\"text-label\">\r\n          {this.props.children}\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const fetchJson = async ({ url }) => {\r\n  try {\r\n    const response = await fetch(url);\r\n    if (response.status >= 200 && response.status < 300) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      throw Error('HTTP Status ' + response.status);\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n","import _ from 'lodash/fp';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TOP/LOADING`;\r\nconst SUCCESS = `TOP/SUCCESS`;\r\nconst ERROR = `TOP/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nconst transformBackendData = _.flow(\r\n  _.get('top'),\r\n  _.values,\r\n  _.map(item => ({\r\n    song: item.track,\r\n    chartLabel: item.chart_label,\r\n    chartLevel: item.chart_label.slice(1),\r\n    chartType: item.chart_label.slice(0, 1),\r\n    mix: item.mix,\r\n    results: _.map(res => {\r\n      const acc =\r\n        Math.floor(\r\n          ((res.perfects * 100 + res.greats * 60 + res.goods * 30 + res.misses * -20) /\r\n            (res.perfects + res.greats + res.goods + res.bads + res.misses)) *\r\n            100\r\n        ) / 100;\r\n      return {\r\n        nickname: res.nickname,\r\n        date: res.gained,\r\n        dateObject: new Date(res.gained),\r\n        grade: res.grade,\r\n        isExactDate: !!res.exact_gain_date,\r\n        score: res.score,\r\n        perfect: res.perfects,\r\n        great: res.greats,\r\n        good: res.goods,\r\n        bad: res.bads,\r\n        miss: res.misses,\r\n        combo: res.max_combo,\r\n        mods: res.mods_list,\r\n        isRank: !!res.rank_mode,\r\n        accuracy: !res.max_combo ? null : acc > 0 ? acc : 0,\r\n      };\r\n    }, item.results),\r\n  })),\r\n  _.map(song => ({\r\n    ...song,\r\n    latestScoreDate: song.results.reduce(\r\n      (latest, current) => (current.date > latest ? current.date : latest),\r\n      song.results[0].date\r\n    ),\r\n  })),\r\n  // _.orderBy(['latestScoreDate', 'song', 'chartLevel'], ['desc', 'asc', 'desc']),\r\n  data => ({ data })\r\n);\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        ...transformBackendData(action.data),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTopScores = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await fetchJson({\r\n        url: `${HOST}/top`,\r\n      });\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n","export const colorsArray = [\r\n  '#FF6633',\r\n  '#66991A',\r\n  '#6666FF',\r\n  '#E6B333',\r\n  '#CC80CC',\r\n  '#E64D66',\r\n  '#4DB3FF',\r\n  '#99E6E6',\r\n  '#99FF99',\r\n  '#FFFF99',\r\n  '#FFB399',\r\n  '#809900',\r\n  '#00B3E6',\r\n  '#3366E6',\r\n  '#999966',\r\n  '#B34D4D',\r\n  '#80B300',\r\n  '#E6B3B3',\r\n  '#6680B3',\r\n  '#66664D',\r\n  '#FF99E6',\r\n  '#CCFF1A',\r\n  '#FF1A66',\r\n  '#33FFCC',\r\n  '#4D8000',\r\n  '#B33300',\r\n  '#991AFF',\r\n  '#E666FF',\r\n  '#1AB399',\r\n  '#E666B3',\r\n  '#33991A',\r\n  '#4D8066',\r\n  '#CC9999',\r\n  '#B3B31A',\r\n  '#00E680',\r\n  '#E6331A',\r\n  '#809980',\r\n  '#E6FF80',\r\n  '#1AFF33',\r\n  '#999933',\r\n  '#FF3380',\r\n  '#CCCC00',\r\n  '#66E64D',\r\n  '#4D80CC',\r\n  '#9900B3',\r\n  '#4DB380',\r\n  '#FF4D4D',\r\n];\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport matchSorter from 'match-sorter';\r\nimport { Range, getTrackBackground } from 'react-range';\r\nimport _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport Select from 'react-select';\r\nimport classNames from 'classnames';\r\nimport numeral from 'numeral';\r\nimport localForage from 'localforage';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport moment from 'moment';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\n\r\nimport 'react-responsive-ui/style.css';\r\nimport './rankings.scss';\r\n\r\nimport { fetchTopScores } from 'reducers/top';\r\n\r\nimport { colorsArray } from 'utils/colors';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\nconst chartMinMax = [1, 29];\r\n\r\nconst timeStyle = {\r\n  flavour: 'long',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nconst tooltipFormatter = date => date.toLocaleDateString();\r\nconst tooltipFormatterForBests = date => (\r\n  <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n    <div>точная дата взятия неизвестна</div>\r\n    <div>скор был записан с my best или machine best</div>\r\n    <div>дата записи: {date.toLocaleDateString()}</div>\r\n  </div>\r\n);\r\n\r\nconst nowDate = new Date();\r\nconst getTimeAgo = date => {\r\n  const strTimeAgo = timeAgo.format(date, timeStyle);\r\n  if (!strTimeAgo) {\r\n    const dayDiff = moment(nowDate)\r\n      .startOf('day')\r\n      .diff(moment(date).startOf('day'), 'days');\r\n    return dayDiff === 0 ? 'сегодня' : dayDiff === 1 ? 'вчера' : '';\r\n  } else {\r\n    return strTimeAgo;\r\n  }\r\n};\r\n\r\nconst filterCharts = (filter, rows) => {\r\n  const range = _.getOr(chartMinMax, 'range', filter);\r\n  const type = _.getOr(null, 'type', filter);\r\n\r\n  const filtered = _.flow(\r\n    _.filter(row => {\r\n      return (\r\n        row.chartLevel >= range[0] &&\r\n        row.chartLevel <= range[1] &&\r\n        (!type || type === row.chartType)\r\n      );\r\n    })\r\n  )(rows);\r\n  return filtered;\r\n};\r\n\r\nconst getFilteredData = (data, filter) => {\r\n  const names = _.map('value', filter.players);\r\n  const namesOr = _.map('value', filter.playersOr);\r\n  const namesNot = _.map('value', filter.playersNot);\r\n\r\n  return _.flow(\r\n    _.compact([\r\n      filter.chartRange && (items => filterCharts(filter.chartRange, items)),\r\n      filter.song && (items => matchSorter(items, filter.song, { keys: ['song'] })),\r\n      !filter.showRank &&\r\n        _.flow(\r\n          _.map(row => ({ ...row, results: _.filter(res => !res.isRank, row.results) })),\r\n          _.filter(row => _.size(row.results))\r\n        ),\r\n      // filter.showRank &&\r\n      //   _.flow(\r\n      //     _.map(row => ({ ...row, results: _.filter(res => res.isRank, row.results) })),\r\n      //     _.filter(row => _.size(row.results))\r\n      //   ),\r\n      (names.length || namesOr.length || namesNot.length) &&\r\n        _.filter(row => {\r\n          const rowNames = _.map('nickname', row.results);\r\n          return (\r\n            (!names.length || _.every(name => rowNames.includes(name), names)) &&\r\n            (!namesOr.length || _.some(name => rowNames.includes(name), namesOr)) &&\r\n            (!namesNot.length || !_.some(name => rowNames.includes(name), namesNot))\r\n          );\r\n        }),\r\n    ]),\r\n    _.orderBy(['latestScoreDate'], ['desc'])\r\n  )(data);\r\n};\r\n\r\nfunction ChartFilter({ filterValue, onChange }) {\r\n  const range = _.getOr(chartMinMax, 'range', filterValue);\r\n  const type = _.getOr(null, 'type', filterValue);\r\n  let buttonText = 'фильтр чартов...';\r\n  if (filterValue) {\r\n    const t = type || '';\r\n    buttonText = range[0] === range[1] ? `${t}${range[0]}` : `${t}${range[0]} - ${t}${range[1]}`;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Overlay\r\n        overlayItem={\r\n          <button className=\"filter-charts-button btn btn-sm btn-dark\">{buttonText}</button>\r\n        }\r\n      >\r\n        <div className=\"chart-range-overlay\">\r\n          <div className=\"buttons\">\r\n            <ToggleButton\r\n              text=\"S\"\r\n              active={!type || type === 'S'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  range,\r\n                  type: !active ? 'D' : null,\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"D\"\r\n              active={!type || type === 'D'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  range,\r\n                  type: !active ? 'S' : null,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <Range\r\n            values={range}\r\n            step={1}\r\n            min={chartMinMax[0]}\r\n            max={chartMinMax[1]}\r\n            onChange={r => onChange({ type, range: r })}\r\n            renderTrack={({ props, children }) => (\r\n              <div\r\n                onMouseDown={props.onMouseDown}\r\n                onTouchStart={props.onTouchStart}\r\n                style={{\r\n                  ...props.style,\r\n                  height: '10px',\r\n                  display: 'flex',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <div\r\n                  ref={props.ref}\r\n                  style={{\r\n                    height: '6px',\r\n                    width: '100%',\r\n                    borderRadius: '3px',\r\n                    background: getTrackBackground({\r\n                      values: range,\r\n                      colors: ['#ccc', '#337ab7', '#ccc'],\r\n                      min: chartMinMax[0],\r\n                      max: chartMinMax[1],\r\n                    }),\r\n                    alignSelf: 'center',\r\n                  }}\r\n                >\r\n                  {children}\r\n                </div>\r\n              </div>\r\n            )}\r\n            renderThumb={({ props, isDragged }) => (\r\n              <div\r\n                {...props}\r\n                style={{\r\n                  ...props.style,\r\n                  height: '12px',\r\n                  width: '12px',\r\n                  borderRadius: '6px',\r\n                  backgroundColor: '#FFF',\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  boxShadow: '0px 2px 3px #AAA',\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    height: '6px',\r\n                    width: '6px',\r\n                    borderRadius: '3px',\r\n                    backgroundColor: isDragged ? '#337ab7' : '#CCC',\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n          />\r\n          <div className=\"inputs\">\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={chartMinMax[0]}\r\n              max={Math.min(chartMinMax[1], range[1])}\r\n              value={range[0]}\r\n              onBlur={value => {\r\n                onChange({ type, range: [value, range[1]] });\r\n              }}\r\n            />\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={Math.max(chartMinMax[0], range[0])}\r\n              max={chartMinMax[1]}\r\n              value={range[1]}\r\n              onBlur={value => onChange({ type, range: [range[0], value] })}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Overlay>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst playersSelector = createSelector(\r\n  state => state.top.data,\r\n  _.flow(\r\n    _.flatMap(_.get('results')),\r\n    _.map('nickname'),\r\n    _.uniq,\r\n    _.sortBy(_.toLower),\r\n    _.map(name => ({ label: name, value: name }))\r\n  )\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    players: playersSelector(state),\r\n    data: state.top.data,\r\n    error: state.top.error,\r\n    isLoading: state.top.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopScores,\r\n};\r\n\r\nclass TopScores extends Component {\r\n  static propTypes = {\r\n    match: toBe.object,\r\n    data: toBe.array,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  state = { filter: { showRank: true }, showItemsCount: 20 };\r\n\r\n  componentDidMount() {\r\n    const { isLoading } = this.props;\r\n    if (!isLoading) {\r\n      this.props.fetchTopScores();\r\n    }\r\n    localForage\r\n      .getItem('filter')\r\n      .then(filter => filter && this.setState({ filter }))\r\n      .catch(error => console.warn('Cannot get filter from local storage', error));\r\n  }\r\n\r\n  setFilter = _.curry((name, value) => {\r\n    this.setState(\r\n      state => ({ filter: { ...state.filter, [name]: value } }),\r\n      () => {\r\n        localForage.setItem('filter', this.state.filter);\r\n      }\r\n    );\r\n  });\r\n\r\n  render() {\r\n    const { isLoading, data, error, players } = this.props;\r\n    const { showItemsCount, filter, isAdvancedOpen } = this.state;\r\n    const filteredData = getFilteredData(data, filter);\r\n\r\n    const canShowMore = filteredData.length > showItemsCount;\r\n    const visibleData = _.slice(0, showItemsCount, filteredData);\r\n\r\n    const uniqueSelectedNames = _.slice(\r\n      0,\r\n      colorsArray.length,\r\n      _.uniq([..._.map('value', filter.players), ..._.map('value', filter.playersOr)])\r\n    );\r\n\r\n    const hasAdvancedFilters = _.size(filter.playersOr) || _.size(filter.playersNot);\r\n\r\n    return (\r\n      <div className=\"rankings\">\r\n        <header>leaderboard</header>\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"filters\">\r\n            <div className=\"song-name _margin-right\">\r\n              <Input\r\n                value={this.state.filter.song}\r\n                placeholder=\"название песни...\"\r\n                className=\"form-control\"\r\n                onChange={this.setFilter('song')}\r\n              />\r\n            </div>\r\n            <div className=\"chart-range _margin-right\">\r\n              <ChartFilter\r\n                filterValue={this.state.filter.chartRange}\r\n                onChange={this.setFilter('chartRange')}\r\n              />\r\n            </div>\r\n            {!isAdvancedOpen && (\r\n              <div className=\"players _margin-right\">\r\n                <Select\r\n                  closeMenuOnSelect={false}\r\n                  className=\"select players\"\r\n                  classNamePrefix=\"select\"\r\n                  placeholder=\"игроки...\"\r\n                  isMulti\r\n                  options={players}\r\n                  value={_.getOr(null, 'players', this.state.filter)}\r\n                  onChange={this.setFilter('players')}\r\n                />\r\n              </div>\r\n            )}\r\n            <div className=\"advanced-btn-holder\">\r\n              <button\r\n                className={classNames('btn btn-sm btn-dark', {\r\n                  'red-border': !isAdvancedOpen && hasAdvancedFilters,\r\n                })}\r\n                onClick={() => this.setState({ isAdvancedOpen: !isAdvancedOpen })}\r\n              >\r\n                {isAdvancedOpen ? 'меньше опций ⯅' : 'больше опций ⯆'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {isAdvancedOpen && (\r\n            <div className=\"advanced-filters\">\r\n              <div className=\"people-filters\">\r\n                <label className=\"label\">показывать чарты, которые сыграл:</label>\r\n                <div className=\"players-block\">\r\n                  <div className=\"_margin-right\">\r\n                    <label className=\"label\">каждый из этих</label>\r\n                    <Select\r\n                      closeMenuOnSelect={false}\r\n                      className=\"select players\"\r\n                      classNamePrefix=\"select\"\r\n                      placeholder=\"игроки...\"\r\n                      isMulti\r\n                      options={players}\r\n                      value={_.getOr(null, 'players', this.state.filter)}\r\n                      onChange={this.setFilter('players')}\r\n                    />\r\n                  </div>\r\n                  <div className=\"_margin-right\">\r\n                    <label className=\"label\">и хоть один из этих</label>\r\n                    <Select\r\n                      closeMenuOnSelect={false}\r\n                      className=\"select players\"\r\n                      classNamePrefix=\"select\"\r\n                      placeholder=\"игроки...\"\r\n                      isMulti\r\n                      options={players}\r\n                      value={_.getOr(null, 'playersOr', this.state.filter)}\r\n                      onChange={this.setFilter('playersOr')}\r\n                    />\r\n                  </div>\r\n                  <div className=\"_margin-right\">\r\n                    <label className=\"label\">и никто из этих</label>\r\n                    <Select\r\n                      closeMenuOnSelect={false}\r\n                      className=\"select players\"\r\n                      classNamePrefix=\"select\"\r\n                      placeholder=\"игроки...\"\r\n                      isMulti\r\n                      options={players}\r\n                      value={_.getOr(null, 'playersNot', this.state.filter)}\r\n                      onChange={this.setFilter('playersNot')}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <Toggle\r\n                  checked={_.getOr(false, 'showRank', this.state.filter)}\r\n                  onChange={this.setFilter('showRank')}\r\n                >\r\n                  показывать скоры на ранке\r\n                </Toggle>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {isLoading && 'Loading...'}\r\n          <div className=\"top-list\">\r\n            {_.isEmpty(filteredData) && !isLoading && 'ничего не найдено'}\r\n            {visibleData.map((chart, chartIndex) => {\r\n              return (\r\n                <div className=\"song-block\" key={chart.song + chart.chartLabel}>\r\n                  <div className=\"song-name\">\r\n                    <div\r\n                      className={classNames('chart-name', {\r\n                        single: chart.chartType === 'S',\r\n                      })}\r\n                    >\r\n                      {chart.chartType}\r\n                      <span className=\"chart-separator\" />\r\n                      {chart.chartLevel}\r\n                    </div>\r\n                    <div>{chart.song}</div>\r\n                  </div>\r\n                  <div className=\"charts\">\r\n                    <div className=\"chart\">\r\n                      <div className=\"results\">\r\n                        <table>\r\n                          {chartIndex === 0 && (\r\n                            <thead>\r\n                              <tr className=\"header-background-block\"></tr>\r\n                              <tr>\r\n                                <th className=\"place\"></th>\r\n                                <th className=\"nickname\"></th>\r\n                                <th className=\"score\">score</th>\r\n                                <th className=\"grade\"></th>\r\n                                <th className=\"number\">miss</th>\r\n                                <th className=\"number\">bad</th>\r\n                                <th className=\"number\">good</th>\r\n                                <th className=\"number\">great</th>\r\n                                <th className=\"number\">perfect</th>\r\n                                <th className=\"combo\">combo</th>\r\n                                <th className=\"rank\"></th>\r\n                                <th className=\"accuracy\">accuracy</th>\r\n                                <th className=\"date\"></th>\r\n                              </tr>\r\n                            </thead>\r\n                          )}\r\n                          <tbody>\r\n                            {chart.results.map((res, index) => {\r\n                              const nameIndex = uniqueSelectedNames.indexOf(res.nickname);\r\n                              return (\r\n                                <tr\r\n                                  key={res.score + res.nickname}\r\n                                  className={classNames({ empty: !res.isExactDate })}\r\n                                >\r\n                                  <td className=\"place\">#{index + 1}</td>\r\n                                  <td\r\n                                    className=\"nickname\"\r\n                                    style={\r\n                                      nameIndex > -1\r\n                                        ? { fontWeight: 'bold', color: colorsArray[nameIndex] }\r\n                                        : {}\r\n                                    }\r\n                                  >\r\n                                    {res.nickname}\r\n                                  </td>\r\n                                  <td className=\"score\">{numeral(res.score).format('0,0')}</td>\r\n                                  <td className=\"grade\">\r\n                                    <div className=\"img-holder\">\r\n                                      {res.grade && res.grade !== '?' && (\r\n                                        <img\r\n                                          src={`${process.env.PUBLIC_URL}/grades/${res.grade}.png`}\r\n                                          alt={res.grade}\r\n                                        />\r\n                                      )}\r\n                                      {res.grade === '?' && null}\r\n                                    </div>\r\n                                  </td>\r\n                                  <td className=\"number miss\">{res.miss}</td>\r\n                                  <td className=\"number bad\">{res.bad}</td>\r\n                                  <td className=\"number good\">{res.good}</td>\r\n                                  <td className=\"number great\">{res.great}</td>\r\n                                  <td className=\"number perfect\">{res.perfect}</td>\r\n                                  <td className=\"combo\">\r\n                                    {res.combo}\r\n                                    {res.combo ? 'x' : ''}\r\n                                  </td>\r\n                                  <td className={classNames('rank', { vj: res.isRank })}>\r\n                                    {res.isRank &&\r\n                                      (res.isExactDate ? (\r\n                                        'VJ'\r\n                                      ) : (\r\n                                        <Tooltip\r\n                                          content={\r\n                                            <>\r\n                                              <div>\r\n                                                наличие ранка на этом результате было угадано,\r\n                                                основываясь на скоре\r\n                                              </div>\r\n                                            </>\r\n                                          }\r\n                                          tooltipClassName=\"timeago-tooltip\"\r\n                                        >\r\n                                          VJ?\r\n                                        </Tooltip>\r\n                                      ))}\r\n                                  </td>\r\n                                  <td className=\"accuracy\">\r\n                                    {res.accuracy}\r\n                                    {res.accuracy ? '%' : ''}\r\n                                  </td>\r\n                                  <td\r\n                                    className={classNames('date', {\r\n                                      latest: res.date === chart.latestScoreDate,\r\n                                    })}\r\n                                  >\r\n                                    <Tooltip\r\n                                      content={\r\n                                        res.isExactDate\r\n                                          ? tooltipFormatter(res.dateObject)\r\n                                          : tooltipFormatterForBests(res.dateObject)\r\n                                      }\r\n                                      tooltipClassName=\"timeago-tooltip\"\r\n                                    >\r\n                                      {getTimeAgo(res.dateObject)}\r\n                                      {res.isExactDate ? '' : '?'}\r\n                                    </Tooltip>\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n            {!isLoading && canShowMore && (\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() =>\r\n                  this.setState(state => ({ showItemsCount: state.showItemsCount + 10 }))\r\n                }\r\n              >\r\n                show more...\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TopScores);\r\n","export const HOST = 'https://vps720616.ovh.net:5000';\r\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport './App.scss';\n\nimport Rankings from 'components/Rankings/Rankings';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Route exact path=\"/\" component={Rankings} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport top from 'reducers/top';\r\n\r\nconst rootReducer = combineReducers({\r\n  top,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__\r\n    ? compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__({\r\n          stateSanitizer: state => ({\r\n            ...state,\r\n          }),\r\n        })\r\n      )\r\n    : applyMiddleware(thunk)\r\n);\r\n","// import 'promise-polyfill';\n// import 'whatwg-fetch';\n// import 'utils/polyfills';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.scss';\nimport App from 'components/App';\nimport { store } from 'reducers';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}