{"version":3,"sources":["webpack:///./src/utils/workers/profilesPostProcess.js?f05c","utils/polyfills.js","constants/routes.js","constants/leaderboard.js","components/Shared/Loader/index.js","reducers/user/resetAction.js","utils/fetch.js","constants/backend.js","reducers/trackStats/mostPlayed.js","reducers/trackStats/mostPlayedMonth.js","reducers/trackStats/leastPlayed.js","utils/leaderboards.js","utils/date.js","components/SongsTop/SongsTop.js","components/Shared/ToggleButton/ToggleButton.js","components/Shared/Input/Input.js","components/Shared/Toggle/Toggle.js","components/Shared/CollapsibleBar/index.js","components/Shared/Overlay/Overlay.js","components/Shared/Range/index.js","components/Leaderboard/ChartFilter.js","utils/expRanks.js","utils/exp.js","utils/achievements.js","utils/score.js","utils/workers/profilesPostProcess.js","constants/env.js","reducers/results.js","reducers/presets.js","components/Leaderboard/PresetsControl.js","components/Shared/Flag/index.js","components/SocketTracker/helpers.js","utils/colors.js","components/Leaderboard/Result.js","components/Leaderboard/ChartLabel.js","components/Leaderboard/Chart.js","reducers/selectors.js","components/Leaderboard/Leaderboard.js","components/Ranking/RankingList.js","components/Ranking/RankingFaq.js","reducers/preferences.js","components/Ranking/Ranking.js","components/Profile/MostPlayed.js","components/Profile/ExpFaq.js","reducers/profiles.js","utils/profiles.js","components/Profile/Profile.js","components/ProfileCompare/ProfileCompare.js","reducers/user/index.js","reducers/login.js","components/Shared/TopBar/TopBar.js","components/LoginScreen/LoginScreen.js","constants/popups.js","reducers/popups.js","components/Shared/Popups/AchievementPopup.js","components/Shared/Popups/RankUpPopup.js","components/Shared/Popups/index.js","reducers/topPerSong.js","components/SocketTracker/PlayerCard.js","components/SocketTracker/SocketTracker.js","reducers/tournament.js","components/Tournaments/Tournaments.js","reducers/tracklist.js","components/App.js","reducers/trackStats/index.js","reducers/index.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","Number","isNaN","value","Math","sign","x","Array","prototype","findIndex","Object","defineProperty","predicate","this","TypeError","o","len","length","thisArg","arguments","k","kValue","call","configurable","writable","routes","leaderboard","path","sharedChart","getPath","params","sharedChartId","songs","ranking","faq","tournaments","profile","id","compare","compareToId","SORT","DEFAULT","PROTAGONIST","RANK_ASC","RANK_DESC","PP_ASC","PP_DESC","NEW_SCORES_PLAYER","EASIEST_SONGS","HARDEST_SONGS","RANK_FILTER","SHOW_ALL","SHOW_BEST","SHOW_ONLY_RANK","SHOW_ONLY_NORANK","CHART_MIN_MAX","DURATION","STD","SHORT","REMIX","FULL","DURATION_DEFAULT","_","values","Loader","className","width","height","viewBox","xmlns","fill","cx","cy","r","attributeName","from","to","begin","dur","calcMode","repeatCount","fillOpacity","RESET","resetUser","type","fetchJson","url","request","method","postJson","body","JSON","stringify","headers","defaultHeaders","async","dispatch","getState","session","cookies","get","response","fetch","credentials","status","json","error","isObject","isString","Error","message","Promise","reject","HOST","SOCKET_SERVER_IP","LOADING","SUCCESS","ERROR","initialState","isLoading","data","TimeAgo","addLocale","ru","timeAgo","timeStyle","flavour","gradation","convenient","units","tooltipFormatter","result","isExactDate","dateObject","toLocaleDateString","resultType","undefined","isMyBest","isMachineBest","style","display","alignItems","flexDirection","getTimeAgo","date","dayDiff","moment","startOf","diff","hour","format","labelToTypeLevel","label","match","parseDate","textDate","toDate","Date","TopList","fetchList","title","renderRightSide","useState","setData","setLoading","getRightSide","item","countplay","useEffect","then","success","catch","map","index","key","classNames","best","full_name","leastPlayedRightSide","last_play","connect","fetchMostPlayed","fetchMostPlayedMonth","fetchLeastPlayed","ToggleButton","props","active","onToggle","text","onClick","React","PureComponent","Input","state","isNil","defaultValue","bindAll","prevProps","setState","e","newValue","target","onChange","numericValue","min","max","onBlur","handleBlur","omit","onKeyPress","handleKeyPress","onInput","handleChange","noop","Component","defaultProps","Toggle","constructor","super","checked","uniqueId","render","htmlFor","children","CollapsibleBar","open","defaultOpen","POPPER_MODIFIERS","preventOverflow","enabled","padding","boundariesElement","PLACEMENT_ARROW_MAPPING","right","left","top","bottom","getArrowPlacement","placement","split","Overlay","isVisible","containerItemRef","createRef","renderPopper","bind","toggleOverlayVisibility","event","closest","hideOverlay","ref","arrowProps","outOfBoundaries","scheduleUpdate","hideWhenOutOfBounds","data-placement","overlayClassName","overlayItem","Fragment","ReactDOM","createPortal","container","document","modifiers","referenceElement","current","defaultTypes","listensToClickOutside","Range","range","step","renderTrack","onMouseDown","onTouchStart","position","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","justifyContent","boxShadow","ChartFilter","filterValue","onChangeEx","getOr","duration","buttonText","t","isEqual","isEmpty","newMin","newMax","includes","without","ranks","threshold","iconName","color","gradeValue","F","D","C","B","A","S","SS","SSS","getExp","chart","isBestGradeOnChart","chartType","chartLevel","grade","getRankImg","rank","src","process","alt","achievements","icon","GiRank1","description","resultFunction","progress","combo","GiRank2","GiRank3","GiSmokingFinger","playedSongs","songsToPlay","song","uniq","GiRetroController","GiLoveSong","Улитка","GiSnail","charts","some","songToPlay","chartLabel","GiPodiumSecond","miss","bad","GiLifeBar","GiWoodenPegleg","good","great","initialAchievementState","getScoreWithoutBonus","score","postProcessProfiles","profiles","tracklist","mapValues","neededGrades","expRank","findLast","exp","expRanks","expRankNext","find","double","single","gradeIncrementMap","accuracyPointsRaw","keys","resultsByLevel","forEach","level","res","isRank","accuracyRaw","push","toNumber","thisGrade","thisPlayerId","playerId","otherResults","results","filter","sort","a","b","indexOf","gradeIncArray","gradeInc","l","g","prog","incrementLevel","number","minimumNumber","totalCharts","round","sqrt","getMinimumNumber","bonusCoefficientNumber","bonus","getBonusForLevel","achievementBonus","accuracy","countAcc","sumAccuracy","interpolateDifficulties","sharedCharts","debug","sums","size","accuracyPointsInterpolated","maxAccuracy","maxBy","y","maxLevelWithMaxAcc","points","regression","logarithmic","f","calculated","predict","yx","i","interpolatedPoint","pair","returnValue","interpolatedDifficulty","weight","abs","interpolation","identity","reduce","acc","diffSum","weightSum","averageDifficulty","getProcessedProfiles","battles","resultInfo","chartId","chartResults","maxPP","maxScore","K","scoreRaw","pp","ppPotential","ppRatio","ppFixed","toFixed","scores","pp_","s","rating","flow","orderBy","items","ratingHistory","firstResultDate","rankingHistory","place","processPP","dictScoreInfo","logText","dictChartElo","getDictChartEloId","enemyScore","dictRatingDiff","getDictRatingDiffId","p1","p2","scoreMultiplier","scoreInfo","enemyScoreInfo","startingRating","battleCount","r1","r2","R1","R2","E1","E2","S1","S2","kRating1","kRating2","maxK1","maxK2","kLevel1","kLevel2","kLevel","kMinimizer","startsWith","K1","K2","dr1","dr2","baseEloId1","baseEloId2","baseEloP1","baseEloP2","ratingDiffId1","ratingDiffId2","ratingDiff","ratingDiffLast","floor","playersSorted","battleDate","player","lastPlace","getTime","p1LastRating","last","p2LastRating","toInteger","ratingRaw","now","processBattles","localStorage","window","debugOn","setItem","debugOff","removeItem","DEBUG","getItem","STOP_LOADING","SET_FILTER","RESET_FILTER","RANKING_CHANGE_SET","PROFILES_UPDATE","highscoresUrl","REACT_APP_SOCKET","defaultFilter","isLoadingRanking","players","gradeComparator","guessGrade","misses","bads","goods","greats","mapResult","recognition_notes","isUnknownPlayer","arcade_name","isIntermediateResult","shared_chart","nickname","nicknameArcade","gained","exact_gain_date","rank_mode","_r","originalChartMix","original_mix","originalChartLabel","original_label","originalScore","original_score","scoreIncrease","score_increase","calories","perfect","perfects","max_combo","mods","mods_list","isHJ","maxTotalSteps","infos","fixableIndex","absentNumbersCount","localStepSum","isNumber","tryFixIncompleteResult","accRaw","getMaxRawScore","initializeProfile","fromPairs","nameArcade","resultsByGrade","lastResultDate","count","grades","lastBattleDate","region","achName","getProfileInfoFromResult","replace","convert","cap","achState","fetchResults","processResultsData","console","log","shared_charts","mappedResults","getTopResultId","getBestGradeResultId","topResults","bestGradeResults","resRaw","toUpper","chart_label","track_name","max_total_steps","allResultsIds","chartTop","topResultId","currentTopResult","oldScoreIndex","splice","newScoreIndex","sortedLastIndexBy","latestScoreDate","enemyResult","bestGradeResultId","currentBestGradeRes","maxScoreCandidate","processData","toPairs","originalData","input","promise","worker","WorkerProfilesProcessing","profilesProcessing","output","q","calculateRankingChanges","terminate","setFilter","getListOfNames","getMapOfRatings","all","localForage","lastChangedRanking","lastChangedRankingPoints","lastFetchedRanking","listNow","listLastFetched","listLastChanged","mapPointsNow","mapPointsLastFetched","rankingsPointsMap","listPrev","warn","SELECT_PRESET","LOAD_PRESETS","LOADING_START","LOADING_END","presets","currentPreset","itemToOption","reloadPresets","startLoading","endLoading","selectPreset","openPreset","noPresetsMessage","mapDispatchToProps","loadPresets","savePreset","newPreset","confirm","withoutOldPreset","remove","newPresets","deletePreset","PresetsControl","onChangeSelection","selected","onRewritePreset","onSavePreset","isAddingNew","classNamePrefix","placeholder","options","noOptionsMessage","disabled","Flag","backgroundImage","preprocessData","fullRes","every","stepSum","sum","n","track","mix","resultInfoOverrides","numb","latest","hasRankScore","useTracked","resetIndicatorData","isDebugOn","prevData","setPrevData","currData","setCurrData","resetIndicator","useRef","reset","useCallback","useMemo","useResetTrackedObject","object","tracking","colorsArray","forwardRef","placeDifference","showProtagonistEloChange","showProtagonistPpChange","protagonistName","uniqueSelectedNames","leftProfile","rightProfile","isSocketView","inf","ratingInfoBlock","flag","nameIndex","empty","outline","isSecondOccurenceInResults","topPlace","fontWeight","exact","mod","avMod","endsWith","xMod","numeral","vj","hj","getShortTimeAgo","content","tooltipClassName","singlep","doublep","coop","Chart","allResults","playersHiddenStatus","chartOriginal","showHiddenPlayers","overrides","setOverrides","isHidingPlayers","setHidingPlayers","first","occuredNicknames","hiddenPlayersCount","isPlayerHidden","onRedoLatestResult","throttle","ANIMATION_DURATION","newOverrides","drop","onUndoLatestResult","undoedResult","undoedPlayerId","previousPlayerResult","newResults","compact","latestScore","overrideChart","isActive","totalResultsCount","countBy","true","currentIndex","canUndo","interpDiff","ChartLabel","href","queryString","search_query","rel","enterAnimation","leaveAnimation","typeName","maintainContainerHeight","isProtagonist","newIndex","prevScore","findLastIndex","preferences","playersSelector","createSelector","user","isCurrentPlayer","sortBy","it","toLower","filteredDataSelector","start","performance","showHidden","showHiddenFromPreferences","names","namesOr","playersOr","namesNot","playersNot","sortingType","rankFilter","protagonist","excludeAntagonists","defaultSorting","newScoresProtagonistSorting","protagonistSorting","row","protIndex","protScore","enemies","take","uniqBy","distanceFromProtagonist","dist","enemy","getPpSorting","field","direction","info","Infinity","getEloSorting","getDiffSorting","chartInfo","sortingFunctions","occuredIds","isVisibleWithRankFilter","chartRange","rows","filterCharts","rowNames","matchSorter","trim","sharedChartDataSelector","sortingOptions","rankOptions","resetFilter","Leaderboard","showItemsCount","curry","onRefresh","onTypeSongName","debounce","renderSimpleSearch","renderFilters","closeMenuOnSelect","isMulti","renderSortings","isClearable","isChartView","filteredData","canShowMore","visibleData","slice","highlightProtagonist","preset","chartIndex","getGradeImg","RankingList","updatePreferences","playerIndex","isHidden","showHiddenPlayersInRanking","change","prevRating","down","up","set","RankingFaq","CHANGE","defaultPreferences","rankingSelector","Ranking","onChangeHidingPlayers","component","withRouter","limit","setLimit","latestDate","ExpFaq","setProfilesFilter","resetProfilesFilter","cutRange","array","startIndex","endIndex","firstElement","lastElement","defaultGradesDistribution","defaultGradesWithLevelsDistribution","flatMap","profileSelectorCreator","idParamName","levelsDistribution","singlesLevels","doublesLevels","gradesData","update","gradesDistribution","groupBy","pick","gradesValues","gradesAndLevelsDistribution","groupedResults","counts","reduced","levelsData","lastTickRating","lastTickRanking","lastTick","firstTick","lastDay","endOf","minMaxRange","filterRange","dayRange","dayRangeMs","placesChanges","ratingChanges","MIN_GRAPH_HEIGHT","profileSelector","otherPlayersSelector","ind","Profile","isLevelGraphCombined","showFaq","onChangeDayRange","onShowFaq","onHideFaq","circleShape","args","componentWillUnmount","renderRankingHistory","minHeight","aspect","margin","strokeDasharray","dataKey","domain","tickFormatter","allowDecimals","stroke","isAnimationActive","payload","strokeWidth","dot","renderAccuracyPoints","interpolated","pointsByType","ticks","shape","false","renderPlaceHistory","dataMax","interval","reversed","renderGrades","stackId","renderGradesWithLevels","stackOffset","doubleItems","singleItems","dataMin","offset","renderLevels","totalD","totalS","renderGradeBlock","obj","typeLetter","progr","minNumber","currentNumber","levelString","complete","zero","renderAchievement","achievement","Icon","renderProfile","otherPlayers","expProgress","history","ariaHideApp","isOpen","onRequestClose","ceil","currentRange","dateL","dateR","l1","l2","MostPlayed","BARS_MODES","SINGLE_TWO","SINGLE_FIVE","DOUBLE_TWO","DOUBLE_FIVE","BOTH_TWO","BOTH_FIVE","getCompareBars","mode","profile1Selector","profile2Selector","getCombinedData","memoize","rc1","rc2","allRC","rating2","rating1","sortedUniqBy","allPC","place2","place1","perLevelComparison","p1win","p1notPlayed","p2win","p2notPlayed","notPlayed","twoBars","p1index","p2index","perType","normalizeTwo","dataObj","totalPlayed","normalizeFive","total","chartLevels","ProfileCompare","compareBarsMode","rhMargin","rhXDomain","rhYDomain","rhXTickFormatter","rhTooltip","profile2","p1Name","p2Name","plcMargin","plcTooltip","isTwo","renderLegendItem","plcXDomain","plcXTicks","plcXFormatter","combinedData","useProfile2","renderPerLevelComparison","layout","profile1","fetchUser","login","googleResponse","token","tokenId","expires","loginACs","logout","isLoadingLogin","isLoadingUser","isClown","setClown","onGoogleResponse","clientId","onSuccess","onFailure","cookiePolicy","TYPES","ACHIEVEMENT","RANK_UP","ADD_POPUP","REMOVE_POPUP","ID_PREFIX","popups","AchievementPopup","playerName","achievementName","progressNumber","setProgressNumber","RankUpPopup","prevPlace","currPlace","list","prevList","currList","setPlace","setList","listTop","delay","pl","renderPlayerLine","popupByType","popupStyles","overlay","transition","opacity","removePopup","visiblePopup","setVisiblePopup","contentRef","popup","persistent","setTimeout","fadeOut","timeout","onAfterOpen","fadeIn","popupBody","PopupComponent","parameters","fetchingParams","PlayerCard","trackedData","isLeft","topPlayersList","addPopup","renderDeltaText","prevN","delta","rivals","closestPlayers","resetData","isDataValid","useTrackedEx","takenWidth","emptyWidth","diffWidth","renderExpLine","elo","STATE_RESET_TIMEOUT_SEC","topPlayersListSelector","fetchTopPerSong","songName","leftLabel","rightLabel","song_name","join","processedData","appendNewResults","lastDate","start_date","appendedResults","currentResults","oldResult","old","mergedData","popupType","fetchUserPreferences","topPerSong","songTopData","setMessage","socketErrorMessage","setSocketErrorMessage","isSocketReady","setSocketReady","isAlive","setAlive","setLeftLabel","setRightLabel","leftPlayer","setLeftPlayer","rightPlayer","setRightPlayer","recognizedSongName","setRecognizedSongName","leftPreferences","setLeftPreferences","rightPreferences","setRightPreferences","resultsContainerRef","leftResultRef","rightResultRef","socketRef","timeoutResetTokenRef","minBy","p","lev","onChangeAchievements","prevAchievement","currAchievement","leftTracked","resetLeftTracked","rightTracked","resetRightTracked","restartTimeout","clearTimeout","WebSocket","onerror","onopen","onmessage","parse","newSongName","totalSize","clientWidth","h","clientHeight","scaleHH","offsetWidth","scaleHW","offsetHeight","scaleWH","scaleWW","transform","scaleW","scaleH","leftChart","rightChart","chartsToShow","leftPlayersHiddenStatus","omitBy","v","rightPlayersHiddenStatus","isHiddenInBoth","fetchCurrentTournament","Tournaments","useDispatch","selectedBracket","setSelectedBracket","tournData","useSelector","tournament","currentPlayerId","bracket","br","playerIds","brackets","monthText","toLocaleString","month","tournamentTitle","getFullYear","end_date","trackName","colSpan","columnIndex","playerData","bestPlayerScore","percent","player_name","playcount","percentRaw","totalPercentRaw","sumBy","infoByIndex","totalPercent","sortedIds","noResultsIds","toString","ReactModal","setAppElement","fetchTracklist","fetchPreferences","userData","SocketTracker","SongsTop","combineReducers","mostPlayed","action","mostPlayedMonth","leastPlayed","rootReducer","merge","hasPrevList","playerOriginal","trackStats","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","getElementById"],"mappings":"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ASE,OAAQuO,QAItC,kBAAC,GAAD,CACErG,KAAK,QACLF,OAAQuG,EAASO,SAAShP,EAASG,OACnCgI,SAAU,SAAAD,GACRgB,EAAS,CACPuF,SAAUvG,EAAM,uBACRuG,GADQ,CACEzO,EAASG,QACvBG,IAAE2O,QAAQ,CAACjP,EAASG,OAAQsO,QAItC,kBAAC,GAAD,CACErG,KAAK,OACLF,OAAQuG,EAASO,SAAShP,EAASI,MACnC+H,SAAU,SAAAD,GACRgB,EAAS,CACPuF,SAAUvG,EAAM,uBACRuG,GADQ,CACEzO,EAASI,OACvBE,IAAE2O,QAAQ,CAACjP,EAASI,MAAOqO,Y,wBClL1C,MAAMS,GAAQ,CACnB,CACEC,UAAW,EACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,I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","file":"static/js/main.7ccaeb9b.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"getProcessedProfiles\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"7a1b1cf29acfcd2fc2da.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","/* eslint-disable */\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\r\nNumber.isNaN =\r\n  Number.isNaN ||\r\n  function(value) {\r\n    return value !== value;\r\n  };\r\n\r\nif (typeof Math.sign === 'undefined') {\r\n  Math.sign = function(x) {\r\n    return x > 0 ? 1 : x < 0 ? -1 : x;\r\n  };\r\n}\r\n\r\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\r\nif (!Array.prototype.findIndex) {\r\n  Object.defineProperty(Array.prototype, 'findIndex', {\r\n    value: function(predicate) {\r\n      // 1. Let O be ? ToObject(this value).\r\n      if (this == null) {\r\n        throw new TypeError('\"this\" is null or not defined');\r\n      }\r\n\r\n      var o = Object(this);\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('predicate must be a function');\r\n      }\r\n\r\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n      var thisArg = arguments[1];\r\n\r\n      // 5. Let k be 0.\r\n      var k = 0;\r\n\r\n      // 6. Repeat, while k < len\r\n      while (k < len) {\r\n        // a. Let Pk be ! ToString(k).\r\n        // b. Let kValue be ? Get(O, Pk).\r\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n        // d. If testResult is true, return k.\r\n        var kValue = o[k];\r\n        if (predicate.call(thisArg, kValue, k, o)) {\r\n          return k;\r\n        }\r\n        // e. Increase k by 1.\r\n        k++;\r\n      }\r\n\r\n      // 7. Return -1.\r\n      return -1;\r\n    },\r\n    configurable: true,\r\n    writable: true,\r\n  });\r\n}\r\n","export const routes = {\r\n  leaderboard: {\r\n    path: `/leaderboard`,\r\n    sharedChart: {\r\n      path: `/leaderboard/chart/:sharedChartId`,\r\n      getPath: (params) => `/leaderboard/chart/${params.sharedChartId}`,\r\n    },\r\n  },\r\n  songs: {\r\n    path: `/songs`,\r\n  },\r\n  ranking: {\r\n    path: `/ranking`,\r\n    faq: {\r\n      path: '/ranking/faq',\r\n    },\r\n  },\r\n  tournaments: {\r\n    path: `/tournaments`,\r\n  },\r\n  profile: {\r\n    path: `/profiles/:id`,\r\n    getPath: (params) => `/profiles/${params.id}`,\r\n    compare: {\r\n      path: `/profiles/:id/vs/:compareToId`,\r\n      getPath: (params) => `/profiles/${params.id}/vs/${params.compareToId}`,\r\n    },\r\n  },\r\n};\r\n","import _ from 'lodash/fp';\r\n\r\nexport const SORT = {\r\n  DEFAULT: 'default',\r\n  PROTAGONIST: 'protagonist',\r\n  RANK_ASC: 'rankAsc',\r\n  RANK_DESC: 'rankDesc',\r\n  PP_ASC: 'ppAsc',\r\n  PP_DESC: 'ppDesc',\r\n  NEW_SCORES_PLAYER: 'newScoresPlayer',\r\n  EASIEST_SONGS: 'easiestSongs',\r\n  HARDEST_SONGS: 'hardestSongs',\r\n};\r\n\r\nexport const RANK_FILTER = {\r\n  SHOW_ALL: 'SHOW_ALL',\r\n  SHOW_BEST: 'SHOW_BEST',\r\n  SHOW_ONLY_RANK: 'SHOW_ONLY_RANK',\r\n  SHOW_ONLY_NORANK: 'SHOW_ONLY_NORANK',\r\n};\r\n\r\nexport const CHART_MIN_MAX = [1, 28];\r\nexport const DURATION = {\r\n  STD: 'Standard',\r\n  SHORT: 'Short',\r\n  REMIX: 'Remix',\r\n  FULL: 'Full',\r\n};\r\nexport const DURATION_DEFAULT = _.values(DURATION);\r\n","import React from 'react';\r\n\r\nimport './loader.scss';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"loader\">\r\n      <svg\r\n        width=\"40\"\r\n        height=\"12\"\r\n        viewBox=\"0 0 120 30\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"#eee\"\r\n      >\r\n        <circle cx=\"15\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"60\" cy=\"15\" r=\"9\" fillOpacity=\"0.3\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"9\"\r\n            to=\"9\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"9;15;9\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"0.5\"\r\n            to=\"0.5\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\".5;1;.5\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"105\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","export const RESET = `USER/RESET`;\r\nexport const resetUser = () => ({ type: RESET });\r\n","import _ from 'lodash/fp';\r\nimport cookies from 'browser-cookies';\r\n\r\nimport { resetUser } from 'reducers/user/resetAction';\r\n\r\nexport const fetchJson = ({ url }) => request({ url, method: 'get' });\r\nexport const postJson = ({ url, body }) =>\r\n  request({\r\n    url,\r\n    method: 'post',\r\n    body: JSON.stringify(body),\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n    },\r\n  });\r\n\r\nconst defaultHeaders = {};\r\n\r\nexport const request = ({ url, method, body, headers }) => async (dispatch, getState) => {\r\n  try {\r\n    const session = cookies.get('session');\r\n    if (session) {\r\n      defaultHeaders['Session'] = session;\r\n    }\r\n    const response = await fetch(url, {\r\n      method,\r\n      body,\r\n      headers: { ...defaultHeaders, ...headers },\r\n      credentials: 'include',\r\n    });\r\n    if (response.status >= 200 && response.status < 300) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      const error = await response.json();\r\n      if (_.isObject(error) && _.isString(error.error)) {\r\n        throw new Error(error.error);\r\n      } else if (_.isString(error)) {\r\n        throw new Error(error);\r\n      } else {\r\n        throw new Error('HTTP Status ' + response.status);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    if (error.message === 'Invalid session') {\r\n      dispatch(resetUser());\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n","// export const HOST = 'http://localhost:5000';\r\nexport const HOST = 'https://vps720616.ovh.net:5000';\r\nexport const SOCKET_SERVER_IP = 'ws://127.0.0.1:6789';\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `MOST_PLAYED/LOADING`;\r\nconst SUCCESS = `MOST_PLAYED/SUCCESS`;\r\nconst ERROR = `MOST_PLAYED/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchMostPlayed = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-played` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `MOST_PLAYED_MONTH/LOADING`;\r\nconst SUCCESS = `MOST_PLAYED_MONTH/SUCCESS`;\r\nconst ERROR = `MOST_PLAYED_MONTH/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchMostPlayedMonth = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-played-month` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `LEAST_PLAYED/LOADING`;\r\nconst SUCCESS = `LEAST_PLAYED/SUCCESS`;\r\nconst ERROR = `LEAST_PLAYED/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchLeastPlayed = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-time-not-played` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport moment from 'moment';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\n\r\nconst timeStyle = {\r\n  flavour: 'long',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nexport const tooltipFormatter = (result) => {\r\n  if (!result.isExactDate) {\r\n    const resultType =\r\n      result.isMyBest === undefined && result.isMachineBest === undefined\r\n        ? 'с my best или machine best'\r\n        : result.isMyBest\r\n        ? 'с my best'\r\n        : result.isMachineBest\r\n        ? 'с machine best'\r\n        : 'хз откуда';\r\n    return (\r\n      <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n        <div>точная дата взятия неизвестна</div>\r\n        <div>скор был записан {resultType}</div>\r\n        <div>дата записи: {result.dateObject.toLocaleDateString()}</div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return result.dateObject.toLocaleDateString();\r\n  }\r\n};\r\n\r\nexport const getTimeAgo = (date) => {\r\n  const dayDiff = moment().startOf('day').diff(moment(date).startOf('day'), 'days');\r\n  const hour = moment(date).hour();\r\n  if (moment().hour() < 5) {\r\n    return dayDiff <= 1 ? 'сегодня' : timeAgo.format(date, timeStyle);\r\n  }\r\n  return dayDiff === 0\r\n    ? hour < 5\r\n      ? 'вчера ночью'\r\n      : 'сегодня'\r\n    : dayDiff === 1\r\n    ? 'вчера'\r\n    : timeAgo.format(date, timeStyle);\r\n};\r\n\r\nexport const labelToTypeLevel = (label) => {\r\n  const [type, level] = label ? label.match(/(\\D+)|(\\d+)/g) : [];\r\n  return [type, level];\r\n};\r\n","import moment from 'moment';\r\n\r\nexport const parseDate = (textDate) => {\r\n  if (typeof textDate === 'string') {\r\n    return moment(textDate).toDate();\r\n  } else {\r\n    return new Date(textDate);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaPlay } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\n// styles\r\nimport './songs-top.scss';\r\n\r\n// components\r\nimport Loader from 'components/Shared/Loader';\r\n\r\n// constants\r\n\r\n// reducers\r\nimport { fetchMostPlayed } from 'reducers/trackStats/mostPlayed';\r\nimport { fetchMostPlayedMonth } from 'reducers/trackStats/mostPlayedMonth';\r\nimport { fetchLeastPlayed } from 'reducers/trackStats/leastPlayed';\r\n\r\n// utils\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { parseDate } from 'utils/date';\r\n\r\n// code\r\nfunction TopList({ fetchList, title, renderRightSide }) {\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const getRightSide =\r\n    renderRightSide ||\r\n    (item => (\r\n      <div className=\"playcount\">\r\n        <FaPlay />\r\n        <span>{item.countplay}</span>\r\n      </div>\r\n    ));\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchList()\r\n      .then(data => {\r\n        data.success && setData(data.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [fetchList]);\r\n\r\n  return (\r\n    <div className=\"top-songs-list\">\r\n      <div className=\"top-songs-header\">\r\n        <span>{title}</span>\r\n      </div>\r\n      {isLoading && <Loader />}\r\n      {!isLoading &&\r\n        data.map((item, index) => {\r\n          return (\r\n            <div key={item.id} className=\"top-songs-item\">\r\n              <div className={classNames('place', `top-${index + 1}`, { best: index < 3 })}>\r\n                <span>{index + 1}.</span>\r\n              </div>\r\n              <div className=\"song-name\">{item.full_name}</div>\r\n              {getRightSide(item)}\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst leastPlayedRightSide = item => (\r\n  <div className=\"date\">\r\n    <span>{item.last_play ? getTimeAgo(parseDate(item.last_play)) : 'никогда'}</span>\r\n  </div>\r\n);\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    fetchMostPlayed,\r\n    fetchMostPlayedMonth,\r\n    fetchLeastPlayed,\r\n  }\r\n)(function SongsTop({ fetchMostPlayed, fetchMostPlayedMonth, fetchLeastPlayed }) {\r\n  return (\r\n    <div className=\"songs-top-page\">\r\n      <TopList fetchList={fetchMostPlayed} title=\"топ популярных треков\" />\r\n      <TopList fetchList={fetchMostPlayedMonth} title=\"топ популярных треков за месяц\" />\r\n      <TopList\r\n        fetchList={fetchLeastPlayed}\r\n        title=\"треки, которые долго не играли\"\r\n        renderRightSide={leastPlayedRightSide}\r\n      />\r\n      <div className=\"top-songs-list -placeholder\" />\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './toggle-button.scss';\r\n\r\nexport default class ToggleButton extends React.PureComponent {\r\n  static propTypes = {\r\n    text: toBe.string,\r\n    onToggle: toBe.func,\r\n    active: toBe.bool,\r\n  };\r\n\r\n  render() {\r\n    const { active, onToggle, text } = this.props;\r\n    return (\r\n      <div\r\n        className={classNames('toggle-button', { active: active })}\r\n        onClick={() => onToggle(!active)}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable react/no-deprecated */\r\n// imports from vendor deps\r\nimport React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\n\r\n// imports from styles\r\nexport default class Input extends React.Component {\r\n  static propTypes = {\r\n    value: toBe.any,\r\n    defaultValue: toBe.any,\r\n    onChange: toBe.func,\r\n    onBlur: toBe.func,\r\n    type: toBe.string,\r\n    className: toBe.string,\r\n    trimOnBlur: toBe.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    value: null,\r\n    type: 'text',\r\n    onChange: _.noop,\r\n    onBlur: _.noop,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: (!_.isNil(props.value) ? props.value : props.defaultValue) || '',\r\n    };\r\n    _.bindAll(['handleChange', 'handleBlur', 'handleKeyPress'], this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.value !== this.props.value) {\r\n      this.setState({ value: this.props.value });\r\n    }\r\n  }\r\n\r\n  handleChange(e) {\r\n    const newValue = e.target.value;\r\n    this.setState({ value: newValue }, () => this.props.onChange(newValue));\r\n  }\r\n\r\n  handleBlur(e) {\r\n    const { type } = this.props;\r\n    const { value } = this.state;\r\n    if (type === 'number') {\r\n      const numericValue = Number(value);\r\n      if (numericValue >= Number(e.target.min) && numericValue <= Number(e.target.max)) {\r\n        this.props.onBlur(numericValue, e);\r\n      } else {\r\n        this.setState({ value: this.props.value });\r\n        this.props.onBlur(this.props.value, e);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleKeyPress(e) {\r\n    if (e.key === 'Enter') {\r\n      this.handleBlur(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props;\r\n\r\n    // HACK: This component uses onInput instead of onChange\r\n    // because IE11 fails to call onChange events when you paste/cut using context menu (RMB)\r\n    // We're using onInput because it works fine, and because for text input\r\n    // there's no difference between how onChange and onInput work\r\n    return (\r\n      <input\r\n        {..._.omit(['defaultValue', 'onChange'], this.props)}\r\n        className={classNames(className, 'text-input')}\r\n        value={this.state.value}\r\n        onBlur={this.handleBlur}\r\n        onKeyPress={this.handleKeyPress}\r\n        onInput={this.handleChange}\r\n        onChange={_.noop} // Handled by onInput\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './toggle.scss';\r\n\r\n// imports from styles\r\nexport default class Toggle extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.id = _.uniqueId();\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.props.onChange(e.target.checked);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"toggle-checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle-checkbox-cb\"\r\n          id={this.id}\r\n          onChange={this.onChange}\r\n          checked={this.props.checked}\r\n        />\r\n        <label htmlFor={this.id} className=\"toggle\">\r\n          <span></span>\r\n        </label>\r\n        {this.props.children && (\r\n          <label htmlFor={this.id} className=\"text-label\">\r\n            {this.props.children}\r\n          </label>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\nimport './styles.scss';\r\n\r\nexport default class CollapsibleBar extends PureComponent {\r\n  static propTypes = {\r\n    className: toBe.string,\r\n    children: toBe.any,\r\n    title: toBe.any,\r\n    defaultOpen: toBe.bool,\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = { open: props.defaultOpen || false };\r\n  }\r\n\r\n  render() {\r\n    const { children, title, className } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classNames('collapsible-bar', className, { open })}>\r\n        <div className=\"header\" onClick={() => this.setState(state => ({ open: !state.open }))}>\r\n          <div className=\"collapse-button\">\r\n            <FaChevronRight />\r\n          </div>\r\n          <div className=\"title\">{title}</div>\r\n        </div>\r\n        {children && <div className=\"collapsible-children\">{children}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport toBe from 'prop-types';\r\nimport { Popper } from 'react-popper';\r\nimport classNames from 'classnames';\r\nimport listensToClickOutside from 'react-onclickoutside';\r\n\r\nimport './overlay.scss';\r\n\r\nconst POPPER_MODIFIERS = {\r\n  preventOverflow: {\r\n    enabled: true,\r\n    padding: 10,\r\n    boundariesElement: 'viewport',\r\n  },\r\n};\r\n\r\nconst PLACEMENT_ARROW_MAPPING = {\r\n  right: 'left',\r\n  left: 'right',\r\n  top: 'bottom',\r\n  bottom: 'top',\r\n};\r\n\r\nconst getArrowPlacement = placement => {\r\n  return placement && PLACEMENT_ARROW_MAPPING[placement.split('-')[0]];\r\n};\r\n\r\nclass Overlay extends React.PureComponent {\r\n  static propTypes = {\r\n    placement: toBe.string,\r\n    overlayItem: toBe.any,\r\n    hideWhenOutOfBounds: toBe.bool,\r\n  };\r\n\r\n  static defaultTypes = {\r\n    placement: 'bottom',\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isVisible: false,\r\n    };\r\n    this.containerItemRef = React.createRef();\r\n    this.renderPopper = this.renderPopper.bind(this);\r\n    this.toggleOverlayVisibility = this.toggleOverlayVisibility.bind(this);\r\n  }\r\n\r\n  hideOverlay() {\r\n    this.setState({\r\n      isVisible: false,\r\n    });\r\n  }\r\n\r\n  toggleOverlayVisibility() {\r\n    this.setState({\r\n      isVisible: !this.state.isVisible,\r\n    });\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    const preventHiding = event && event.target.closest('.inner-popper-overlay'); // prevent overlays from hiding when a modal is opened within overlay\r\n\r\n    if (!preventHiding) {\r\n      this.hideOverlay();\r\n    }\r\n  }\r\n\r\n  renderPopper({ ref, style, placement, arrowProps, scheduleUpdate, outOfBoundaries }) {\r\n    const { children, hideWhenOutOfBounds } = this.props;\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        data-placement={placement}\r\n        className={classNames(\r\n          'inner-popper-overlay',\r\n          `arrow-${getArrowPlacement(placement)}`,\r\n          this.props.overlayClassName,\r\n          { 'out-of-bounds': outOfBoundaries && hideWhenOutOfBounds }\r\n        )}\r\n      >\r\n        <div className=\"arrow-hider\">\r\n          <div className=\"arrow\" ref={arrowProps.ref} style={arrowProps.style} />\r\n        </div>\r\n        <div\r\n          className=\"inner-popper-content\"\r\n          // ref={ref => this.setupPopperContentRef(scheduleUpdate, ref)}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { placement, overlayItem } = this.props;\r\n    const { isVisible } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"overlay-item\"\r\n          ref={this.containerItemRef}\r\n          onClick={this.toggleOverlayVisibility}\r\n        >\r\n          {overlayItem}\r\n        </div>\r\n        {isVisible &&\r\n          ReactDOM.createPortal(\r\n            <Popper\r\n              container={document.body}\r\n              modifiers={POPPER_MODIFIERS}\r\n              placement={placement}\r\n              referenceElement={this.containerItemRef.current}\r\n            >\r\n              {this.renderPopper}\r\n            </Popper>,\r\n            document.body\r\n          )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default listensToClickOutside(Overlay);\r\n","import React from 'react';\r\nimport { Range as ReactRange, getTrackBackground } from 'react-range';\r\n\r\nexport default function Range({ range, min, max, onChange }) {\r\n  return (\r\n    <ReactRange\r\n      values={range}\r\n      step={1}\r\n      min={min}\r\n      max={max}\r\n      onChange={onChange}\r\n      renderTrack={({ props, children }) => (\r\n        <div\r\n          onMouseDown={props.onMouseDown}\r\n          onTouchStart={props.onTouchStart}\r\n          style={{\r\n            ...props.style,\r\n            position: 'relative',\r\n            height: '10px',\r\n            display: 'flex',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <div\r\n            ref={props.ref}\r\n            style={{\r\n              height: '6px',\r\n              width: '100%',\r\n              borderRadius: '3px',\r\n              background: getTrackBackground({\r\n                values: range,\r\n                colors: ['#ccc', '#88d3ff', '#ccc'],\r\n                min,\r\n                max,\r\n              }),\r\n              alignSelf: 'center',\r\n            }}\r\n          >\r\n            {children}\r\n          </div>\r\n        </div>\r\n      )}\r\n      renderThumb={({ props, isDragged }) => (\r\n        <div\r\n          {...props}\r\n          style={{\r\n            ...props.style,\r\n            height: '12px',\r\n            width: '12px',\r\n            borderRadius: '6px',\r\n            backgroundColor: '#FFF',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            boxShadow: '0px 2px 3px #AAA',\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              height: '6px',\r\n              width: '6px',\r\n              borderRadius: '3px',\r\n              backgroundColor: isDragged ? '#88d3ff' : '#CCC',\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\nimport { FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Range from 'components/Shared/Range';\r\n\r\nimport { CHART_MIN_MAX, DURATION_DEFAULT, DURATION } from 'constants/leaderboard';\r\n\r\nexport default function ChartFilter({ filterValue, onChange: onChangeEx }) {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filterValue);\r\n  const type = _.getOr(null, 'type', filterValue);\r\n  const duration = _.getOr(DURATION_DEFAULT, 'duration', filterValue);\r\n\r\n  let buttonText = 'фильтр чартов';\r\n  if (filterValue) {\r\n    const t = type || '';\r\n    buttonText = range[0] === range[1] ? `${t}${range[0]}` : `${t}${range[0]} - ${t}${range[1]}`;\r\n    buttonText = 'чарты: ' + buttonText;\r\n    if (!_.isEqual(duration, DURATION_DEFAULT)) {\r\n      buttonText += ' ***';\r\n      // buttonText += ` (${_.values(DURATION)\r\n      //   .filter(dur => duration.includes(dur))\r\n      //   .map(s => s.slice(0, 2))\r\n      //   .join('-')})`;\r\n    }\r\n  }\r\n\r\n  const onChange = value => {\r\n    onChangeEx({\r\n      range,\r\n      type,\r\n      ...value,\r\n      duration: _.isEmpty(value.duration) ? duration : value.duration,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Overlay\r\n        overlayClassName=\"chart-range-overlay-outer\"\r\n        overlayItem={\r\n          <button className=\"filter-charts-button btn btn-sm btn-dark\">{buttonText}</button>\r\n        }\r\n      >\r\n        <div className=\"chart-range-overlay\">\r\n          <div className=\"buttons\">\r\n            <ToggleButton\r\n              text=\"Single\"\r\n              active={type === 'S'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  type: active ? 'S' : null,\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Double\"\r\n              active={type === 'D'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  type: active ? 'D' : null,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <Range\r\n            range={range}\r\n            min={CHART_MIN_MAX[0]}\r\n            max={CHART_MIN_MAX[1]}\r\n            onChange={r => onChange({ range: r })}\r\n          />\r\n          <div className=\"inputs\">\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  range: [Math.max(range[0] - 1, CHART_MIN_MAX[0]), range[1]],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={CHART_MIN_MAX[0]}\r\n              max={Math.min(CHART_MIN_MAX[1], range[1])}\r\n              value={range[0]}\r\n              onBlur={value => {\r\n                onChange({ range: [value, range[1]] });\r\n              }}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMin = Math.min(range[0] + 1, CHART_MIN_MAX[1]);\r\n                onChange({\r\n                  range: [newMin, range[1] < newMin ? newMin : range[1]],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMax = Math.max(range[1] - 1, CHART_MIN_MAX[0]);\r\n                onChange({\r\n                  range: [range[0] > newMax ? newMax : range[0], newMax],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={Math.max(CHART_MIN_MAX[0], range[0])}\r\n              max={CHART_MIN_MAX[1]}\r\n              value={range[1]}\r\n              onBlur={value => onChange({ range: [range[0], value] })}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  range: [range[0], Math.min(range[1] + 1, CHART_MIN_MAX[1])],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n          </div>\r\n          <div className=\"buttons-duration\">\r\n            <ToggleButton\r\n              text=\"Standard\"\r\n              active={duration.includes(DURATION.STD)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.STD]\r\n                    : _.without([DURATION.STD], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Short\"\r\n              active={duration.includes(DURATION.SHORT)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.SHORT]\r\n                    : _.without([DURATION.SHORT], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Remix\"\r\n              active={duration.includes(DURATION.REMIX)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.REMIX]\r\n                    : _.without([DURATION.REMIX], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Full\"\r\n              active={duration.includes(DURATION.FULL)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.FULL]\r\n                    : _.without([DURATION.FULL], duration),\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Overlay>\r\n    </div>\r\n  );\r\n}\r\n","export const ranks = [\r\n  {\r\n    threshold: 0,\r\n    iconName: '0.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 1000,\r\n    iconName: '1.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 2000,\r\n    iconName: '2.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 3000,\r\n    iconName: '3.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 4000,\r\n    iconName: '4.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 5000,\r\n    iconName: '5.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 6250,\r\n    iconName: '6.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 7500,\r\n    iconName: '7.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 8750,\r\n    iconName: '8.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 10000,\r\n    iconName: '9.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 12000,\r\n    iconName: '10.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 14000,\r\n    iconName: '11.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 16000,\r\n    iconName: '12.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 18000,\r\n    iconName: '13.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 22000,\r\n    iconName: '14.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 26000,\r\n    iconName: '15.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 30000,\r\n    iconName: '16.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 35000,\r\n    iconName: '17.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 40000,\r\n    iconName: '18.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 50000,\r\n    iconName: '19.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 60000,\r\n    iconName: '20.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 70000,\r\n    iconName: '21.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 80000,\r\n    iconName: '22.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 100000,\r\n    iconName: '23.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 120000,\r\n    iconName: '24.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 140000,\r\n    iconName: '25.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 160000,\r\n    iconName: '26.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 180000,\r\n    iconName: '27.png',\r\n    color: 'green',\r\n  },\r\n];\r\n","import React from 'react';\r\n\r\nexport const gradeValue = {\r\n  F: 0.1,\r\n  D: 0.2,\r\n  'D+': 0.3,\r\n  C: 0.3,\r\n  'C+': 0.5,\r\n  B: 0.5,\r\n  'B+': 0.8,\r\n  A: 0.8,\r\n  'A+': 1,\r\n  S: 1.1,\r\n  SS: 1.2,\r\n  SSS: 1.2,\r\n};\r\n\r\nexport const getExp = (result, chart) => {\r\n  if (!result.isBestGradeOnChart) {\r\n    return 0;\r\n  }\r\n  if (chart.chartType === 'COOP') {\r\n    return (chart.chartLevel * 1000 * (gradeValue[result.grade] || 0.8)) / 8;\r\n  }\r\n  const exp = (chart.chartLevel ** 2.31 * (gradeValue[result.grade] || 0.8)) / 9;\r\n  return exp;\r\n};\r\n\r\nexport const getRankImg = rank =>\r\n  rank && (\r\n    <img\r\n      className={rank.color}\r\n      src={`${process.env.PUBLIC_URL}/ranks/${rank.iconName}`}\r\n      alt={rank.threshold}\r\n    />\r\n  );\r\n\r\nexport { ranks } from './expRanks';\r\n","import _ from 'lodash/fp';\r\n\r\nimport {\r\n  GiLoveSong,\r\n  GiLifeBar,\r\n  GiSmokingFinger,\r\n  GiSnail,\r\n  GiRetroController,\r\n  GiRank1,\r\n  GiRank2,\r\n  GiRank3,\r\n  GiWoodenPegleg,\r\n  GiPodiumSecond,\r\n} from 'react-icons/gi';\r\n\r\nexport const achievements = {\r\n  '500 комбо': {\r\n    icon: GiRank1,\r\n    description: 'Заработать 500+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 500 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  '1000 комбо': {\r\n    icon: GiRank2,\r\n    description: 'Заработать 1000+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 1000 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  '2000 комбо': {\r\n    icon: GiRank3,\r\n    description: 'Заработать 2000+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 2000 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Мастер фингеринга': {\r\n    icon: GiSmokingFinger,\r\n    description: 'Сыграть все Fingers треки',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: ['Monkey Fingers', 'Kimchi Fingers', 'Monkey Fingers 2', 'Money Fingers'],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  '8-bit': {\r\n    icon: GiRetroController,\r\n    description: 'Сыграть Seize My Day, Tales of Pumpnia и Pumptris (8bit ver.)',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: ['Seize My Day', 'Tales of Pumpnia', 'Pumptris (8bit ver.)'],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  'Love is...': {\r\n    icon: GiLoveSong,\r\n    description: 'Сыграть все Love is a Danger Zone треки',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: [\r\n        'Love is a Danger Zone',\r\n        'Love is a Danger Zone [SHORT]',\r\n        'Love is a Danger Zone (Cranky Mix)',\r\n        'Love is a Danger Zone 2',\r\n        'Love is a Danger Zone 2 [SHORT]',\r\n        'Love is a Danger Zone 2 [FULL]',\r\n        'Love is a Danger Zone 2 (D&G Ver.)',\r\n        'Love is a Danger Zone (try to B.P.M.)',\r\n      ],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  Улитка: {\r\n    icon: GiSnail,\r\n    description:\r\n      'Мастер замедлений: сыграть старшие чарты Twist of Fate, Karyawisata, Awakening и Moonlight',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: [\r\n        { song: 'Twist of Fate (feat. Ruriling)', charts: ['D20', 'S19'] },\r\n        { song: 'Karyawisata', charts: ['S20', 'D16'] },\r\n        { song: 'Awakening', charts: ['S19', 'D20'] },\r\n        { song: 'Moonlight', charts: ['S19', 'D21'] },\r\n      ],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.some(\r\n        songToPlay => chart.song === songToPlay.song && songToPlay.charts.includes(chart.chartLabel)\r\n      )\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  'Коричневая S': {\r\n    icon: GiPodiumSecond,\r\n    description: 'Получить S, но 5+ бэдов',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.miss === 0 && result.bad >= 5 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Мы выживали как могли': {\r\n    icon: GiLifeBar,\r\n    description: 'Получить B или ниже, но удержать лайфбар',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress:\r\n          state.progress === 100 ? 100 : ['B+', 'C+', 'D+'].includes(result.grade) ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Падовый мисс': {\r\n    icon: GiWoodenPegleg,\r\n    description: 'Когда от SSS тебя удерживают только миссы из-за плохого моддинга падов',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress:\r\n          state.progress === 100\r\n            ? 100\r\n            : result.miss > 0 && result.bad === 0 && result.good === 0 && result.great === 0\r\n            ? 100\r\n            : 0,\r\n      };\r\n    },\r\n  },\r\n};\r\n\r\nexport const initialAchievementState = {\r\n  progress: 0,\r\n};\r\n","export const getScoreWithoutBonus = (score, grade) => {\r\n  if (grade === 'SSS') return score - 300000;\r\n  if (grade === 'SS') return score - 150000;\r\n  if (grade === 'S') return score - 100000;\r\n  return score;\r\n};\r\n","import _ from 'lodash/fp';\r\nimport regression from 'regression';\r\n\r\nimport { ranks as expRanks } from 'utils/expRanks';\r\n\r\nconst processBattles = ({ battles, profiles, debug, resultInfo: dictScoreInfo }) => {\r\n  let logText = '';\r\n  const dictChartElo = {};\r\n  const getDictChartEloId = (score, enemyScore) =>\r\n    `${score.playerId}vs${enemyScore.playerId}-${score.sharedChartId}-${score.isRank}`;\r\n  const dictRatingDiff = {};\r\n  const getDictRatingDiffId = (score) => `${score.playerId}-${score.sharedChartId}-${score.isRank}`;\r\n  // const dictScoreInfo = {};\r\n  battles.forEach(([score, enemyScore, song]) => {\r\n    // For each battle\r\n    const p1 = profiles[score.playerId];\r\n    const p2 = profiles[enemyScore.playerId];\r\n\r\n    const scoreMultiplier = score.isRank ? 1.2 : 1;\r\n    let maxScore = null;\r\n    if (song.maxScore) {\r\n      maxScore = song.maxScore * scoreMultiplier;\r\n      if (\r\n        Math.max(maxScore, score.score, enemyScore.score) !== maxScore &&\r\n        !score.isRank &&\r\n        (!score.isExactDate || !enemyScore.isExactDate)\r\n      ) {\r\n        maxScore *= 1.2;\r\n        // Rank from machine best wasn't recognized most likely.\r\n        // Increasing max score by 20% is fine\r\n      }\r\n      if (Math.max(maxScore, score.score, enemyScore.score) !== maxScore) {\r\n        // If calculated max score isn't max score anyway, use current scores as max + cherry on top\r\n        maxScore = Math.max(maxScore, score.score, enemyScore.score) + 10000;\r\n      }\r\n    }\r\n\r\n    // Data to be appended to every score outside of this thread\r\n    if (!dictScoreInfo[score.id]) dictScoreInfo[score.id] = {};\r\n    if (!dictScoreInfo[enemyScore.id]) dictScoreInfo[enemyScore.id] = {};\r\n    const scoreInfo = dictScoreInfo[score.id];\r\n    const enemyScoreInfo = dictScoreInfo[enemyScore.id];\r\n\r\n    // Rating at the start of battle for this score\r\n    if (!scoreInfo.startingRating) scoreInfo.startingRating = p1.rating;\r\n    if (!enemyScoreInfo.startingRating) enemyScoreInfo.startingRating = p2.rating;\r\n\r\n    // Counting the number of battles\r\n    p1.battleCount++;\r\n    p2.battleCount++;\r\n\r\n    // This is one match between two players\r\n    //// Elo formula\r\n    // const r1 = score.startingRating;\r\n    // const r2 = enemyScore.startingRating;\r\n    const r1 = p1.rating;\r\n    const r2 = p2.rating;\r\n    const R1 = 10 ** (r1 / 400);\r\n    const R2 = 10 ** (r2 / 400);\r\n    const E1 = R1 / (R1 + R2);\r\n    const E2 = R2 / (R1 + R2);\r\n    let A = score.score;\r\n    let B = enemyScore.score;\r\n    let S1, S2;\r\n    if (A === B) {\r\n      S1 = S2 = 0.5;\r\n    } else if (maxScore && A !== 0 && B !== 0) {\r\n      A = maxScore / A - 1;\r\n      B = maxScore / B - 1;\r\n      S1 = (B / (A + B) - 0.5) * 5 + 0.5;\r\n      S2 = (A / (A + B) - 0.5) * 5 + 0.5;\r\n    } else {\r\n      S1 = A > B ? 1 : B < A ? 0 : 0.5;\r\n      S2 = 1 - S1;\r\n    }\r\n    S1 = Math.max(0, Math.min(1, S1)); // Set strict boundaries to [0, 1]\r\n    S2 = Math.max(0, Math.min(1, S2));\r\n\r\n    const kRating1 = Math.max(0, Math.min(1, (r1 - 700) / 800));\r\n    const kRating2 = Math.max(0, Math.min(1, (r2 - 700) / 800));\r\n    const maxK1 = 20 + 20 * kRating1;\r\n    const maxK2 = 20 + 20 * kRating2;\r\n    const chartLevel = Number(song.interpolatedDifficulty || song.chartLevel);\r\n    const kLevel1 = Math.max(\r\n      1,\r\n      Math.min(maxK1, (chartLevel / 25) ** ((kRating1 - 0.5) * 5 + 2.5) * maxK1)\r\n    );\r\n    const kLevel2 = Math.max(\r\n      1,\r\n      Math.min(maxK2, (chartLevel / 25) ** ((kRating2 - 0.5) * 5 + 2.5) * maxK2)\r\n    );\r\n    const kLevel = Math.min(kLevel1, kLevel2);\r\n\r\n    // When YOU vs ENEMY both have SS/SSS, and both scores are very close to SSS, this battle will NOT affect ELO too much\r\n    let kMinimizer = 1;\r\n    const kDropCutoff = 0.98; // Score is 98% of max score or higher -- K will be lower\r\n    if (\r\n      song.maxScore &&\r\n      (score.grade.startsWith('SS') || (score.miss === 0 && score.bad === 0)) &&\r\n      (enemyScore.grade.startsWith('SS') || (enemyScore.miss === 0 && enemyScore.bad === 0)) &&\r\n      score.score / maxScore > kDropCutoff &&\r\n      enemyScore.score / maxScore > kDropCutoff\r\n    ) {\r\n      kMinimizer =\r\n        Math.max(\r\n          Math.min(\r\n            1,\r\n            Math.max(\r\n              100 - (100 * score.score) / maxScore,\r\n              100 - (100 * enemyScore.score) / maxScore\r\n            ) /\r\n              (100 - kDropCutoff * 100)\r\n          ),\r\n          0\r\n        ) ** 2;\r\n    }\r\n\r\n    const K1 = kLevel * kMinimizer;\r\n    const K2 = kLevel * kMinimizer;\r\n    let dr1 = K1 * (S1 - E1);\r\n    let dr2 = K2 * (S2 - E2);\r\n    // Do not decrease rating if you have SSS - RIP zero-sum algorithm\r\n    dr1 = dr1 < 0 && score.grade === 'SSS' ? 0 : dr1;\r\n    dr2 = dr2 < 0 && enemyScore.grade === 'SSS' ? 0 : dr2;\r\n    // Recording this value for display\r\n    const baseEloId1 = getDictChartEloId(score, enemyScore);\r\n    const baseEloId2 = getDictChartEloId(enemyScore, score);\r\n    const baseEloP1 = dictChartElo[baseEloId1] || 0;\r\n    const baseEloP2 = dictChartElo[baseEloId2] || 0;\r\n    dictChartElo[baseEloId1] = dr1;\r\n    dictChartElo[baseEloId2] = dr2;\r\n\r\n    // Change rating as a result of this battle\r\n    p1.rating = p1.rating + dr1 - baseEloP1;\r\n    p2.rating = p2.rating + dr2 - baseEloP2;\r\n\r\n    const ratingDiffId1 = getDictRatingDiffId(score);\r\n    const ratingDiffId2 = getDictRatingDiffId(enemyScore);\r\n    dictRatingDiff[ratingDiffId1] = (dictRatingDiff[ratingDiffId1] || 0) + dr1 - baseEloP1;\r\n    dictRatingDiff[ratingDiffId2] = (dictRatingDiff[ratingDiffId2] || 0) + dr2 - baseEloP2;\r\n\r\n    // Q\r\n    scoreInfo.ratingDiff = dictRatingDiff[ratingDiffId1];\r\n    scoreInfo.ratingDiffLast = dr1 - baseEloP1;\r\n\r\n    enemyScoreInfo.ratingDiff = dictRatingDiff[ratingDiffId2];\r\n    enemyScoreInfo.ratingDiffLast = dr2 - baseEloP2;\r\n\r\n    if (debug) {\r\n      // if (score.sharedChartId === 5292) {\r\n      // if (song.song === 'Club Night') {\r\n      // if (score.nickname === 'Liza' || enemyScore.nickname === 'Liza') {\r\n      // if (!song.maxScore) {\r\n      logText += `${song.chartLabel} - ${song.song} (${song.sharedChartId}) - ${\r\n        profiles[score.playerId].name\r\n      } / ${profiles[enemyScore.playerId].name}\r\n- ${score.score} / ${enemyScore.score} (${Math.floor(maxScore)} (${Math.floor(\r\n        song.maxScore * scoreMultiplier\r\n      )})) - R ${S1.toFixed(2)}/${S2.toFixed(2)} E ${E1.toFixed(2)} / ${E2.toFixed(2)}\r\n- Rating ${r1.toFixed(2)} / ${r2.toFixed(2)} - ${dr1.toFixed(2)} / ${dr2.toFixed(\r\n        2\r\n      )} - K ${K1.toFixed(2)} ${K2.toFixed(2)}${\r\n        kMinimizer === 1 ? '' : ` (coef ${kMinimizer.toFixed(2)})`\r\n      }\r\n- Base elo: ${baseEloP1.toFixed(2)} / ${baseEloP2.toFixed(2)}\r\n- Elo change: ${(dr1 - baseEloP1).toFixed(2)} / ${(dr2 - baseEloP2).toFixed(2)}\r\n- New base elo: ${dictChartElo[baseEloId1].toFixed(2)} / ${dictChartElo[baseEloId2].toFixed(2)}\r\n- RD: ${dictRatingDiff[ratingDiffId1].toFixed(2)} / ${dictRatingDiff[ratingDiffId2].toFixed(2)}\\n`;\r\n    }\r\n    // Rating floor\r\n    p1.rating = Math.max(100, p1.rating);\r\n    p2.rating = Math.max(100, p2.rating);\r\n\r\n    const playersSorted = _.flow(\r\n      _.keys,\r\n      _.map((id) => ({ id, rating: profiles[id].rating })),\r\n      _.orderBy(['rating'], ['desc'])\r\n    )(profiles);\r\n    const battleDate =\r\n      score.dateObject > enemyScore.dateObject ? score.dateObject : enemyScore.dateObject;\r\n    playersSorted.forEach((player, index) => {\r\n      const lastPlace = profiles[player.id].lastPlace;\r\n      if (lastPlace !== index + 1) {\r\n        profiles[player.id].rankingHistory.push({\r\n          place: index + 1,\r\n          date: battleDate.getTime(),\r\n        });\r\n        profiles[player.id].lastPlace = index + 1;\r\n      }\r\n    });\r\n\r\n    const p1LastRating = _.last(p1.ratingHistory);\r\n    const p2LastRating = _.last(p2.ratingHistory);\r\n    if (p1LastRating !== p1.rating) {\r\n      p1.ratingHistory.push({\r\n        rating: p1.rating,\r\n        date: battleDate.getTime(),\r\n      });\r\n    }\r\n    if (p2LastRating !== p2.rating) {\r\n      p2.ratingHistory.push({\r\n        rating: p2.rating,\r\n        date: battleDate.getTime(),\r\n      });\r\n    }\r\n  });\r\n\r\n  _.flow(\r\n    _.keys,\r\n    _.forEach((key) => {\r\n      profiles[key].id = _.toInteger(key);\r\n      profiles[key].accuracy =\r\n        profiles[key].countAcc > 0\r\n          ? Math.round((profiles[key].sumAccuracy / profiles[key].countAcc) * 100) / 100\r\n          : null;\r\n      profiles[key].ratingRaw = profiles[key].rating;\r\n      profiles[key].rating = Math.round(profiles[key].rating);\r\n      profiles[key].rankingHistory = [\r\n        ...profiles[key].rankingHistory,\r\n        { place: _.get('place', _.last(profiles[key].rankingHistory)), date: Date.now() },\r\n      ];\r\n    })\r\n  )(profiles);\r\n  return { logText };\r\n};\r\n\r\nconst postProcessProfiles = (profiles, tracklist) => {\r\n  const getBonusForLevel = (level) => (30 * (1 + 2 ** (level / 4))) / 11;\r\n  const getMinimumNumber = (totalCharts) =>\r\n    Math.round(\r\n      Math.min(totalCharts, 1 + totalCharts / 20 + Math.sqrt(Math.max(totalCharts - 1, 0)) * 0.7)\r\n    );\r\n\r\n  const newProfiles = _.mapValues((profile) => {\r\n    const neededGrades = ['A', 'A+', 'S', 'SS', 'SSS'];\r\n    profile.expRank = _.findLast((rank) => rank.threshold <= profile.exp, expRanks);\r\n    profile.expRankNext = _.find((rank) => rank.threshold > profile.exp, expRanks);\r\n    profile.progress = {\r\n      double: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n      single: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n    };\r\n    const gradeIncrementMap = {\r\n      SSS: ['SS', 'S', 'A+', 'A'],\r\n      SS: ['SS', 'S', 'A+', 'A'],\r\n      S: ['S', 'A+', 'A'],\r\n      'A+': ['A+', 'A'],\r\n      A: ['A'],\r\n    };\r\n    const incrementLevel = (l, g, chartType) => {\r\n      const prog =\r\n        chartType === 'S' || chartType === 'SP'\r\n          ? profile.progress.single\r\n          : chartType === 'D' || chartType === 'DP'\r\n          ? profile.progress.double\r\n          : null;\r\n      if (prog) {\r\n        prog[g][l] = prog[g][l] ? prog[g][l] + 1 : 1;\r\n      }\r\n    };\r\n\r\n    profile.accuracyPointsRaw = [];\r\n    _.keys(profile.resultsByLevel).forEach((level) => {\r\n      profile.resultsByLevel[level].forEach((res) => {\r\n        if (!res.result.isRank && res.result.accuracyRaw) {\r\n          profile.accuracyPointsRaw.push([\r\n            _.toNumber(level),\r\n            res.result.accuracyRaw,\r\n            res.result.sharedChartId,\r\n          ]);\r\n        }\r\n\r\n        const thisGrade = res.result.grade;\r\n        const thisPlayerId = res.result.playerId;\r\n        const otherResults = res.chart.results.filter((r) => r.playerId === thisPlayerId);\r\n        if (otherResults.length > 1) {\r\n          const sortedResults = otherResults.sort(\r\n            (a, b) => neededGrades.indexOf(b.grade) - neededGrades.indexOf(a.grade)\r\n          );\r\n          if (sortedResults[0].grade !== thisGrade) {\r\n            return; // Don't do anything when we have a different result with better grade\r\n          }\r\n        }\r\n        const gradeIncArray = gradeIncrementMap[thisGrade];\r\n        if (gradeIncArray) {\r\n          gradeIncArray.forEach((gradeInc) => {\r\n            incrementLevel(level, gradeInc, res.chart.chartType);\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    ['single', 'double'].forEach((chartType) => {\r\n      profile.progress[`${chartType}-bonus`] = 0;\r\n      _.keys(profile.progress[chartType]).forEach((grade) => {\r\n        profile.progress[chartType][`${grade}-bonus`] = 0;\r\n        _.keys(profile.progress[chartType][grade]).forEach((level) => {\r\n          const number = profile.progress[chartType][grade][level];\r\n          const totalCharts = tracklist.data[`${chartType}sLevels`][level];\r\n          const minimumNumber = getMinimumNumber(totalCharts);\r\n          const bonusCoefficientNumber = Math.min(1, number / minimumNumber);\r\n          const rawBonus = getBonusForLevel(level);\r\n          const bonus = rawBonus * bonusCoefficientNumber;\r\n          profile.progress[chartType][grade][`${level}-bonus`] = bonus;\r\n          profile.progress[chartType][grade][`${level}-bonus-coef`] = bonusCoefficientNumber;\r\n          profile.progress[chartType][grade][`${level}-min-number`] = minimumNumber;\r\n          profile.progress[chartType][grade][`${level}-achieved-number`] = number;\r\n          if (bonus >= profile.progress[chartType][`${grade}-bonus`]) {\r\n            profile.progress[chartType][`${grade}-bonus`] = bonus;\r\n            profile.progress[chartType][`${grade}-bonus-level`] = level;\r\n            profile.progress[chartType][`${grade}-bonus-level-coef`] = bonusCoefficientNumber;\r\n            profile.progress[chartType][`${grade}-bonus-level-min-number`] = minimumNumber;\r\n            profile.progress[chartType][`${grade}-bonus-level-achieved-number`] = number;\r\n          }\r\n        });\r\n        profile.progress[`${chartType}-bonus`] += profile.progress[chartType][`${grade}-bonus`];\r\n      });\r\n    });\r\n    profile.progress.bonus = profile.progress['double-bonus'] + profile.progress['single-bonus'];\r\n    profile.achievementBonus = profile.progress.bonus;\r\n    profile.accuracy =\r\n      profile.countAcc > 0\r\n        ? Math.round((profile.sumAccuracy / profile.countAcc) * 100) / 100\r\n        : null;\r\n    return profile;\r\n  }, profiles);\r\n  return newProfiles;\r\n};\r\n\r\nconst processPP = ({ profiles, sharedCharts }) => {\r\n  const resultInfo = {};\r\n  // const now = new Date();\r\n  for (const chartId in sharedCharts) {\r\n    const chart = sharedCharts[chartId];\r\n    const chartResults = chart.results;\r\n    const chartLevel = Number(chart.interpolatedDifficulty || chart.chartLevel);\r\n    const maxPP = chartLevel ** 2.2 / 7.6; // 7;\r\n    if (chart.maxScore) {\r\n      const maxScore = chart.maxScore;\r\n      for (const result of chartResults) {\r\n        if (!result.isRank && maxScore) {\r\n          const K1 = Math.max(0, Math.min(1, result.scoreRaw / maxScore - 0.3) / 0.7);\r\n          // Optional: decrease PP values for older scores. Testing showing this doesn't change anything really\r\n          // const millisecOld = now - result.dateObject;\r\n          // const maxDays = 365;\r\n          // const maxTimeDecrease = 0;\r\n          // const K2 =\r\n          //   1 -\r\n          //   maxTimeDecrease * Math.min(1, Math.max(0, millisecOld / 1000 / 60 / 60 / 24 / maxDays));\r\n          // const K = K1 * K2;\r\n\r\n          const K = K1;\r\n\r\n          // Final PP value\r\n          const pp = K * maxPP;\r\n          // Record result data\r\n          resultInfo[result.id] = {\r\n            pp: {\r\n              pp,\r\n              k: K,\r\n              maxScore,\r\n              maxPP,\r\n              ppPotential: maxPP - pp,\r\n              ppRatio: pp / maxPP,\r\n              ppFixed: Number(pp.toFixed(1)),\r\n            },\r\n          };\r\n          const profile = profiles[result.playerId];\r\n          if (profile) {\r\n            if (!profile.pp) {\r\n              profile.pp = { scores: [], pp: 0 };\r\n            }\r\n            profile.pp.scores.push({\r\n              pp_: Number(pp.toFixed(1)),\r\n              s: chart.song,\r\n              l: chart.chartLabel,\r\n              pp,\r\n              result,\r\n              chart,\r\n              K,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Calculate total pp\r\n  for (const playerId in profiles) {\r\n    const profile = profiles[playerId];\r\n    if (profile.pp) {\r\n      profile.pp.scores.sort((a, b) => b.pp - a.pp);\r\n      profile.pp.pp = 0;\r\n      profile.pp.scores.forEach((score, index) => {\r\n        profile.pp.pp += 0.95 ** index * score.pp;\r\n      });\r\n      profile.rating = profile.pp.pp;\r\n    } else {\r\n      profile.pp = {};\r\n      profile.rating = 0;\r\n    }\r\n  }\r\n\r\n  // Add first values for rankingHistory and ratingHistory\r\n  _.flow(\r\n    _.values,\r\n    _.orderBy((profile) => profile.rating, 'desc'),\r\n    (items) =>\r\n      items.forEach((profile, index) => {\r\n        profile.ratingHistory.push({\r\n          rating: profile.rating,\r\n          date: profile.firstResultDate,\r\n        });\r\n        profile.rankingHistory.push({\r\n          place: index + 1,\r\n          date: profile.firstResultDate,\r\n        });\r\n      })\r\n  )(profiles);\r\n\r\n  return resultInfo;\r\n};\r\n\r\nconst interpolateDifficulties = ({ sharedCharts, profiles, debug }) => {\r\n  let newSharedCharts = _.mapValues((chart) => {\r\n    const datas = chart.results\r\n      .map((r) => {\r\n        const profile = profiles[r.playerId];\r\n        if (!profile || !r.accuracy || r.isRank || _.size(profile.accuracyPointsRaw) < 50) {\r\n          return null;\r\n        }\r\n\r\n        if (!profile.accuracyPointsInterpolated) {\r\n          const maxAccuracy = _.maxBy(([x, y]) => y, profile.accuracyPointsRaw)[1];\r\n          const maxLevelWithMaxAcc = _.maxBy(\r\n            ([x, y]) => x,\r\n            _.filter(([x, y]) => y === maxAccuracy, profile.accuracyPointsRaw)\r\n          )[0];\r\n          const points = profile.accuracyPointsRaw\r\n            .filter(([x, y]) => x >= maxLevelWithMaxAcc - 1)\r\n            .map(([x, y]) => [30 - x, 101 - y]);\r\n          const result = regression.logarithmic(points);\r\n\r\n          const f = (x) => {\r\n            const calculated = 101 - result.predict(30 - x)[1];\r\n            return Math.max(0, Math.min(calculated, 100));\r\n          };\r\n          const yx = [];\r\n          for (let i = 1; i <= 28; i += 0.05) {\r\n            yx.push([i, f(i)]);\r\n          }\r\n\r\n          profile.accuracyPointsInterpolated = yx;\r\n        }\r\n\r\n        const interpolatedPoint = _.find(\r\n          (pair) => pair[1] < r.accuracyRaw,\r\n          profile.accuracyPointsInterpolated\r\n        );\r\n        const returnValue = {\r\n          interpolatedDifficulty: interpolatedPoint && interpolatedPoint[0],\r\n          weight:\r\n            r.accuracyRaw > 98\r\n              ? 1 - (r.accuracyRaw - 98) / (100 - 98)\r\n              : r.accuracyRaw < 80\r\n              ? Math.max(0, (r.accuracyRaw - 50) / (80 - 50))\r\n              : 1,\r\n        };\r\n        returnValue.weight *= Math.min(\r\n          1,\r\n          Math.max(0.1, (8 - Math.abs(returnValue.interpolatedDifficulty - chart.chartLevel)) / 8)\r\n        );\r\n        if (debug) {\r\n          r.interpolation = returnValue;\r\n        }\r\n        return returnValue;\r\n      })\r\n      .filter(_.identity);\r\n    const sums = datas.reduce(\r\n      (acc, item) => {\r\n        if (!item.interpolatedDifficulty) {\r\n          return acc;\r\n        }\r\n        return {\r\n          diffSum: acc.diffSum + item.interpolatedDifficulty * item.weight,\r\n          weightSum: acc.weightSum + item.weight,\r\n        };\r\n      },\r\n      { diffSum: 0, weightSum: 0 }\r\n    );\r\n    sums.diffSum += _.toNumber(chart.chartLevel) * 2;\r\n    sums.weightSum += 2;\r\n    const averageDifficulty = sums.diffSum / sums.weightSum;\r\n    // console.log(chart.song, chart.chartLabel, JSON.stringify(datas), averageDifficulty);\r\n\r\n    return {\r\n      ...chart,\r\n      interpolatedDifficulty: averageDifficulty,\r\n    };\r\n  }, sharedCharts);\r\n  return newSharedCharts;\r\n};\r\n\r\nexport const getProcessedProfiles = ({ profiles, sharedCharts, tracklist, battles, debug }) => {\r\n  // Calculate Progress achievements and bonus for starting Elo\r\n  profiles = postProcessProfiles(profiles, tracklist);\r\n\r\n  // Recalculate chart difficulty\r\n  sharedCharts = interpolateDifficulties({ debug, sharedCharts, profiles });\r\n\r\n  // Calculate PP\r\n  const resultInfo = processPP({\r\n    profiles,\r\n    sharedCharts,\r\n  });\r\n\r\n  // Calculate ELO\r\n  const { logText } = processBattles({\r\n    battles,\r\n    profiles,\r\n    resultInfo,\r\n    debug,\r\n  });\r\n\r\n  return { profiles, resultInfo, sharedCharts, logText };\r\n};\r\n","if (localStorage) {\r\n  window.debugOn = () => {\r\n    localStorage.setItem('debug', 1);\r\n  };\r\n  window.debugOff = () => {\r\n    localStorage.removeItem('debug');\r\n  };\r\n}\r\n\r\nexport const DEBUG = localStorage && localStorage.getItem('debug');\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\nimport queryString from 'query-string';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\nimport { getExp } from 'utils/exp';\r\nimport { achievements, initialAchievementState } from 'utils/achievements';\r\nimport { parseDate } from 'utils/date';\r\nimport { getScoreWithoutBonus } from 'utils/score';\r\nimport { labelToTypeLevel } from 'utils/leaderboards';\r\n\r\nimport WorkerProfilesProcessing from 'workerize-loader!utils/workers/profilesPostProcess'; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport * as profilesProcessing from 'utils/workers/profilesPostProcess';\r\n\r\nimport { HOST } from 'constants/backend';\r\nimport { DEBUG } from 'constants/env';\r\nimport { RANK_FILTER } from 'constants/leaderboard';\r\n\r\nconst LOADING = `TOP/LOADING`;\r\nconst STOP_LOADING = `TOP/STOP_LOADING`;\r\nconst SUCCESS = `TOP/SUCCESS`;\r\nconst ERROR = `TOP/ERROR`;\r\nconst SET_FILTER = `TOP/SET_FILTER`;\r\nconst RESET_FILTER = `TOP/RESET_FILTER`;\r\nconst RANKING_CHANGE_SET = `TOP/RANKING_CHANGE_SET`;\r\nconst PROFILES_UPDATE = `TOP/PROFILES_UPDATE`;\r\n\r\nconst highscoresUrl = process.env.REACT_APP_SOCKET\r\n  ? 'results/highscores/trusted'\r\n  : 'results/highscores';\r\n\r\nexport const defaultFilter = {\r\n  rank: RANK_FILTER.SHOW_ALL,\r\n};\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  isLoadingRanking: false,\r\n  data: [],\r\n  filter: defaultFilter,\r\n  players: {},\r\n  profiles: {},\r\n  results: [],\r\n  resultInfo: {},\r\n  sharedCharts: {},\r\n};\r\n\r\nexport const gradeComparator = {\r\n  '?': 0,\r\n  F: 1,\r\n  D: 2,\r\n  'D+': 3,\r\n  C: 4,\r\n  'C+': 5,\r\n  B: 6,\r\n  'B+': 7,\r\n  A: 8,\r\n  'A+': 9,\r\n  S: 10,\r\n  SS: 11,\r\n  SSS: 12,\r\n};\r\n\r\nconst tryFixIncompleteResult = (result, maxTotalSteps) => {\r\n  if (!maxTotalSteps) {\r\n    return;\r\n  }\r\n  const infos = [result.perfect, result.great, result.good, result.bad, result.miss];\r\n  let fixableIndex = -1,\r\n    absentNumbersCount = 0,\r\n    localStepSum = 0;\r\n  for (let i = 0; i < 5; ++i) {\r\n    if (!_.isNumber(infos[i])) {\r\n      fixableIndex = i;\r\n      absentNumbersCount++;\r\n    } else {\r\n      localStepSum += infos[i];\r\n    }\r\n  }\r\n  if (absentNumbersCount === 1) {\r\n    result[['perfect', 'great', 'good', 'bad', 'miss'][fixableIndex]] =\r\n      maxTotalSteps - localStepSum;\r\n  }\r\n};\r\n\r\nconst guessGrade = (result) => {\r\n  if (result.misses === 0 && result.bads === 0 && result.goods === 0) {\r\n    if (result.greats === 0) {\r\n      return 'SSS';\r\n    } else {\r\n      return 'SS';\r\n    }\r\n  }\r\n  return result.grade;\r\n};\r\n\r\nconst mapResult = (res, players, chart) => {\r\n  if (typeof res.recognition_notes === 'undefined') {\r\n    // Short result, minimum info, only for ELO calculation\r\n    // Will be replaced with better result later\r\n    return {\r\n      id: res.id,\r\n      isUnknownPlayer: players[res.player].arcade_name === 'PUMPITUP',\r\n      isIntermediateResult: true,\r\n      sharedChartId: res.shared_chart,\r\n      playerId: res.player,\r\n      nickname: players[res.player].nickname,\r\n      nicknameArcade: players[res.player].arcade_name,\r\n      date: res.gained,\r\n      dateObject: parseDate(res.gained),\r\n      grade: res.grade,\r\n      isExactDate: !!res.exact_gain_date,\r\n      score: res.score,\r\n      scoreRaw: getScoreWithoutBonus(res.score, res.grade),\r\n      isRank: !!res.rank_mode,\r\n    };\r\n  }\r\n  // Full best result\r\n  let _r = {\r\n    isUnknownPlayer: players[res.player].arcade_name === 'PUMPITUP',\r\n    isIntermediateResult: false,\r\n    sharedChartId: res.shared_chart,\r\n    id: res.id,\r\n    playerId: res.player,\r\n    nickname: players[res.player].nickname,\r\n    nicknameArcade: players[res.player].arcade_name,\r\n    originalChartMix: res.original_mix,\r\n    originalChartLabel: res.original_label,\r\n    originalScore: res.original_score,\r\n    date: res.gained,\r\n    dateObject: parseDate(res.gained),\r\n    grade: res.grade !== '?' ? res.grade : guessGrade(res),\r\n    isExactDate: !!res.exact_gain_date,\r\n    score: res.score,\r\n    scoreRaw: getScoreWithoutBonus(res.score, res.grade),\r\n    scoreIncrease: res.score_increase,\r\n    calories: res.calories && res.calories / 1000,\r\n    perfect: res.perfects,\r\n    great: res.greats,\r\n    good: res.goods,\r\n    bad: res.bads,\r\n    miss: res.misses,\r\n    combo: res.max_combo,\r\n    mods: res.mods_list,\r\n    isRank: !!res.rank_mode,\r\n    isHJ: (res.mods_list || '').split(' ').includes('HJ'),\r\n    isMachineBest: res.recognition_notes === 'machine_best',\r\n    isMyBest: res.recognition_notes === 'personal_best',\r\n  };\r\n\r\n  tryFixIncompleteResult(_r, chart.maxTotalSteps);\r\n\r\n  const perfects = Math.sqrt(_r.perfect) * 10;\r\n  const acc = perfects\r\n    ? Math.floor(\r\n        ((perfects * 100 + _r.great * 85 + _r.good * 60 + _r.bad * 20 + _r.miss * -25) /\r\n          (perfects + _r.great + _r.good + _r.bad + _r.miss)) *\r\n          100\r\n      ) / 100\r\n    : null;\r\n  const accRaw = _r.perfect\r\n    ? Math.floor(\r\n        ((_r.perfect * 100 + _r.great * 85 + _r.good * 60 + _r.bad * 20 + _r.miss * -25) /\r\n          (_r.perfect + _r.great + _r.good + _r.bad + _r.miss)) *\r\n          100\r\n      ) / 100\r\n    : null;\r\n\r\n  _r.accuracy = acc < 0 ? 0 : accRaw === 100 ? 100 : acc && +acc.toFixed(2);\r\n  _r.accuracyRaw = _.toNumber(_r.accuracy);\r\n  return _r;\r\n};\r\n\r\nconst getMaxRawScore = (score) => {\r\n  return ((score.scoreRaw / score.accuracy) * 100) / (score.isRank ? 1.2 : 1);\r\n};\r\n\r\nconst initializeProfile = (result, profiles, players) => {\r\n  const id = result.playerId;\r\n  const resultsByLevel = _.fromPairs(Array.from({ length: 28 }).map((x, i) => [i + 1, []]));\r\n  profiles[id] = {\r\n    name: result.nickname,\r\n    nameArcade: result.nicknameArcade,\r\n    resultsByGrade: {},\r\n    resultsByLevel,\r\n    firstResultDate: result.dateObject,\r\n    lastResultDate: result.dateObject,\r\n    count: 0,\r\n    battleCount: 0,\r\n    countAcc: 0,\r\n    grades: { F: 0, D: 0, C: 0, B: 0, A: 0, S: 0, SS: 0, SSS: 0 },\r\n    sumAccuracy: 0,\r\n    rankingHistory: [],\r\n    ratingHistory: [],\r\n    lastPlace: null,\r\n    lastBattleDate: 0,\r\n    region: players[id].region,\r\n  };\r\n  profiles[id].achievements = _.flow(\r\n    _.keys,\r\n    _.map((achName) => [\r\n      achName,\r\n      { ...(achievements[achName].initialState || initialAchievementState) },\r\n    ]),\r\n    _.fromPairs\r\n  )(achievements);\r\n  profiles[id].exp = 0;\r\n};\r\n\r\nconst getProfileInfoFromResult = (result, chart, profiles) => {\r\n  const profile = profiles[result.playerId];\r\n\r\n  profile.count++;\r\n  if (result.accuracy) {\r\n    profile.countAcc++;\r\n    profile.sumAccuracy += result.accuracy;\r\n  }\r\n  profile.grades[result.grade.replace('+', '')]++;\r\n  if (chart.chartType !== 'COOP' && result.isBestGradeOnChart) {\r\n    profile.resultsByGrade[result.grade] = [\r\n      ...(profile.resultsByGrade[result.grade] || []),\r\n      { result, chart },\r\n    ];\r\n    profile.resultsByLevel[chart.chartLevel] = [\r\n      ...(profile.resultsByLevel[chart.chartLevel] || []),\r\n      { result, chart },\r\n    ];\r\n  }\r\n  if (result.isExactDate && profile.lastResultDate < result.dateObject) {\r\n    profile.lastResultDate = result.dateObject;\r\n  }\r\n  profile.achievements = _.mapValues.convert({ cap: false })((achState, achName) => {\r\n    return achievements[achName].resultFunction(result, chart, achState, profile);\r\n  }, profile.achievements);\r\n  profile.exp += getExp(result, chart);\r\n};\r\n\r\nconst processData = (data, tracklist) => {\r\n  const { players, results, shared_charts } = data;\r\n  //// Initialization\r\n  // Init for TOP\r\n  const mappedResults = [];\r\n  const getTopResultId = (result) => `${result.sharedChartId}-${result.playerId}-${result.isRank}`;\r\n  const getBestGradeResultId = (result) => `${result.sharedChartId}-${result.playerId}`;\r\n  const topResults = {}; // Temp object\r\n  const bestGradeResults = {}; // Temp object\r\n  const top = {}; // Main top scores pbject\r\n\r\n  // Battles for ELO calculation\r\n  const battles = [];\r\n\r\n  // Profiles for every player\r\n  let profiles = {};\r\n\r\n  // Loop 1\r\n  for (let resRaw of results) {\r\n    if (!players[resRaw.player]) {\r\n      // Player of this result was not found in list of players. Ignoring this result like it doesn't exist\r\n      continue;\r\n    }\r\n\r\n    const sharedChartId = resRaw.shared_chart;\r\n    // Initialize Song\r\n    if (!top[sharedChartId]) {\r\n      const sharedChart = shared_charts[sharedChartId];\r\n      const label = _.toUpper(sharedChart.chart_label);\r\n      const [chartType, chartLevel] = labelToTypeLevel(label);\r\n      top[sharedChartId] = {\r\n        song: sharedChart.track_name,\r\n        chartLabel: label,\r\n        chartLevel,\r\n        chartType,\r\n        duration: sharedChart.duration,\r\n        sharedChartId: sharedChartId,\r\n        maxTotalSteps: sharedChart.max_total_steps,\r\n        results: [],\r\n        allResultsIds: [],\r\n      };\r\n    }\r\n\r\n    // Getting current chart and result (mapped)\r\n    const chartTop = top[sharedChartId];\r\n    const result = mapResult(resRaw, players, chartTop);\r\n    mappedResults.push(result);\r\n\r\n    // Inserting result into TOP\r\n    const topResultId = getTopResultId(result);\r\n    const currentTopResult = topResults[topResultId];\r\n    if (!currentTopResult || currentTopResult.score < result.score) {\r\n      if (currentTopResult) {\r\n        const oldScoreIndex = chartTop.results.indexOf(currentTopResult);\r\n        if (oldScoreIndex !== -1) {\r\n          chartTop.results.splice(oldScoreIndex, 1);\r\n        }\r\n      }\r\n      const newScoreIndex = _.sortedLastIndexBy((r) => -r.score, result, chartTop.results);\r\n      if (!result.isUnknownPlayer || newScoreIndex === 0) {\r\n        chartTop.results.splice(newScoreIndex, 0, result);\r\n        chartTop.latestScoreDate = result.date;\r\n        chartTop.allResultsIds.push(result.playerId);\r\n        topResults[topResultId] = result;\r\n      }\r\n      if (!result.isUnknownPlayer) {\r\n        chartTop.results.forEach((enemyResult) => {\r\n          if (\r\n            !enemyResult.isUnknownPlayer &&\r\n            enemyResult.isRank === result.isRank &&\r\n            enemyResult.playerId !== result.playerId &&\r\n            result.score &&\r\n            enemyResult.score\r\n          ) {\r\n            battles.push([result, enemyResult, chartTop]);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    // Getting best grade of player on this chart\r\n    if (!result.isIntermediateResult) {\r\n      const bestGradeResultId = getBestGradeResultId(result);\r\n      const currentBestGradeRes = bestGradeResults[bestGradeResultId];\r\n      if (\r\n        !currentBestGradeRes ||\r\n        gradeComparator[currentBestGradeRes.grade] <= gradeComparator[result.grade]\r\n      ) {\r\n        // Using <= here, so newer scores always win and rewrite old scores\r\n        currentBestGradeRes && (currentBestGradeRes.isBestGradeOnChart = false);\r\n        result.isBestGradeOnChart = true;\r\n        bestGradeResults[bestGradeResultId] = result;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Loop 2, when the TOP is already set up\r\n  for (let chartId in top) {\r\n    const chart = top[chartId];\r\n    chart.maxScore = null;\r\n    for (let result of chart.results) {\r\n      if (!result.isRank) {\r\n        if (result.accuracy) {\r\n          const maxScoreCandidate = getMaxRawScore(result, chart);\r\n          if (chart.maxScore < maxScoreCandidate) {\r\n            chart.maxScore = maxScoreCandidate;\r\n          }\r\n        } else if (chart.maxScore && chart.maxScore < result.score) {\r\n          chart.maxScore = result.score;\r\n        }\r\n      }\r\n      // Getting some info about players\r\n      if (!result.isUnknownPlayer && !result.isIntermediateResult) {\r\n        if (!profiles[result.playerId]) {\r\n          initializeProfile(result, profiles, players);\r\n        }\r\n        getProfileInfoFromResult(result, chart, profiles);\r\n      }\r\n    }\r\n  }\r\n\r\n  return { mappedResults, profiles, sharedCharts: top, battles };\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case STOP_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: initialState.data,\r\n        players: initialState.players,\r\n        profiles: initialState.profiles,\r\n        results: initialState.results,\r\n        sharedCharts: initialState.sharedCharts,\r\n        scoreInfo: {},\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isLoadingRanking: true,\r\n        data: action.data,\r\n        players: action.players,\r\n        profiles: action.profiles,\r\n        results: action.results,\r\n        sharedCharts: action.sharedCharts,\r\n        originalData: action.originalData,\r\n        scoreInfo: {},\r\n      };\r\n    case PROFILES_UPDATE:\r\n      return {\r\n        ...state,\r\n        isLoadingRanking: false,\r\n        profiles: action.profiles,\r\n        resultInfo: action.resultInfo,\r\n        sharedCharts: action.sharedCharts,\r\n        data: _.values(action.sharedCharts),\r\n      };\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    case RANKING_CHANGE_SET:\r\n      const hasPrevList = !_.isEmpty(action.listPrev);\r\n      return {\r\n        ...state,\r\n        profiles: _.mapValues((playerOriginal) => {\r\n          const player = {\r\n            ...playerOriginal,\r\n            prevRating: _.get(playerOriginal.id, action.rankingsPointsMap),\r\n          };\r\n          if (!hasPrevList) {\r\n            return player; // First time opening this thing and we didn't have any previous data\r\n          }\r\n          if (!_.includes(player.id, action.listPrev)) {\r\n            return { ...player, change: 'NEW' };\r\n          } else if (!_.includes(player.id, action.listNow)) {\r\n            // Should NEVER happen, idk if this is possible\r\n            return { ...player, change: '?' };\r\n          } else {\r\n            return {\r\n              ...player,\r\n              change: _.indexOf(player.id, action.listPrev) - _.indexOf(player.id, action.listNow),\r\n            };\r\n          }\r\n        }, state.profiles),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchResults = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        fetchJson({\r\n          url: `${HOST}/${highscoresUrl}`,\r\n        })\r\n      );\r\n\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n      // HACKS for test\r\n      // data.results = _.dropRight(500, data.results);\r\n      // data.results = _.dropRight(9500, data.results);\r\n      // console.log(1, data.results);\r\n      // data.results = _.filter((res) => res.gained < '2020-07-05 00:00:00', data.results);\r\n      // data.results = _.filter(res => res.gained < '2020-03-12 16:55:00', data.results);\r\n      // data.results = _.filter(res => res.gained < '2020-03-12 16:34:51', data.results);\r\n      // console.log(2, data.results);\r\n\r\n      dispatch(processResultsData(data));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const appendNewResults = (lastDate) => {\r\n  return async (dispatch, getState) => {\r\n    const { originalData, sharedCharts } = getState().results;\r\n    if (!lastDate) {\r\n      return dispatch(fetchResults());\r\n    }\r\n\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        fetchJson({\r\n          url: `${HOST}/${highscoresUrl}?${queryString.stringify({ start_date: lastDate })}`,\r\n        })\r\n      );\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n\r\n      const appendedResults = _.filter((result) => {\r\n        const currentResults = sharedCharts[result.shared_chart];\r\n        if (!currentResults) {\r\n          return true;\r\n        }\r\n        const oldResult = _.find(\r\n          (old) =>\r\n            old.id === result.id ||\r\n            (old.playerId === result.player && old.isRank === !!result.rank_mode),\r\n          currentResults.results\r\n        );\r\n        if (!oldResult) {\r\n          if (result.player === 1 && currentResults.results[0].score > result.score) {\r\n            return false;\r\n          }\r\n          return true;\r\n        }\r\n        if (oldResult.id === result.id || oldResult.score >= result.score) {\r\n          return false;\r\n        }\r\n        return true;\r\n      }, data.results);\r\n\r\n      console.log('Received results:', data, '; Will append:', appendedResults);\r\n\r\n      if (!_.isEmpty(appendedResults)) {\r\n        const mergedData = {\r\n          players: data.players,\r\n          results: [...originalData.results, ...appendedResults],\r\n          shared_charts: { ...originalData.shared_charts, ...data.shared_charts },\r\n        };\r\n        dispatch(processResultsData(mergedData));\r\n      } else {\r\n        dispatch({ type: STOP_LOADING });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nconst processResultsData = (data) => {\r\n  return async (dispatch, getState) => {\r\n    const { tracklist } = getState();\r\n    const { sharedCharts, mappedResults, profiles, battles } = processData(data, tracklist);\r\n\r\n    dispatch({\r\n      type: SUCCESS,\r\n      data: _.values(sharedCharts),\r\n      players: _.flow(\r\n        _.toPairs,\r\n        _.map(([id, player]) => ({ ...player, id: _.toInteger(id) }))\r\n      )(data.players),\r\n      results: mappedResults,\r\n      profiles,\r\n      sharedCharts,\r\n      originalData: data,\r\n    });\r\n\r\n    // Parallelized calculation of ELO and profile data\r\n    const input = { sharedCharts, profiles, tracklist, battles, debug: DEBUG };\r\n    let promise, worker;\r\n    if (window.Worker) {\r\n      worker = new WorkerProfilesProcessing();\r\n      promise = worker.getProcessedProfiles(input);\r\n    } else {\r\n      promise = new Promise((res) => res(profilesProcessing.getProcessedProfiles(input)));\r\n    }\r\n\r\n    const output = await promise;\r\n    DEBUG && console.log(output.logText);\r\n    DEBUG &&\r\n      console.log(\r\n        'Processed profiles:',\r\n        Object.values(output.profiles)\r\n          .filter((q) => q.pp)\r\n          .sort((a, b) => b.pp.pp - a.pp.pp)\r\n      );\r\n    // console.log(output.sharedCharts);\r\n    // let byLevel = _.groupBy((ch) => ch.chartLevel, _.values(output.sharedCharts));\r\n    // function getSD(array) {\r\n    //   const n = array.length;\r\n    //   const mean = array.reduce((a, b) => a + b) / n;\r\n    //   return Math.sqrt(array.map((x) => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / n);\r\n    // }\r\n    // byLevel = _.mapValues((charts) => {\r\n    //   return {\r\n    //     avgLevel: _.meanBy((ch) => ch.interpolatedDifficulty || Number(ch.chartLevel), charts),\r\n    //     deviation: getSD(charts.map((ch) => ch.interpolatedDifficulty || Number(ch.chartLevel))),\r\n    //     charts,\r\n    //   };\r\n    // }, byLevel);\r\n    // console.log(byLevel);\r\n    // console.log(\r\n    //   _.values(byLevel)\r\n    //     .map((q) => `${q.avgLevel}\\t${q.deviation}`)\r\n    //     .join('\\n')\r\n    // );\r\n    dispatch({\r\n      type: PROFILES_UPDATE,\r\n      ...output,\r\n    });\r\n    dispatch(calculateRankingChanges(output.profiles));\r\n    if (worker) worker.terminate();\r\n  };\r\n};\r\n\r\nexport const setFilter = (filter) => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\n\r\nexport const resetFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n\r\nconst getListOfNames = _.map('id');\r\nconst getMapOfRatings = _.flow(\r\n  _.map((q) => [q.id, q.rating]),\r\n  _.fromPairs\r\n);\r\n\r\nexport const calculateRankingChanges = (profiles) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const ranking = _.orderBy('ratingRaw', 'desc', _.values(profiles));\r\n      const [lastChangedRanking, lastChangedRankingPoints, lastFetchedRanking] = await Promise.all([\r\n        localForage.getItem('lastChangedRanking_v3'),\r\n        localForage.getItem('lastChangedRankingPoints_v3'),\r\n        localForage.getItem('lastFetchedRanking_v3'),\r\n      ]);\r\n      const listNow = getListOfNames(ranking);\r\n      const listLastFetched = getListOfNames(lastFetchedRanking);\r\n      const listLastChanged = getListOfNames(lastChangedRanking);\r\n      const mapPointsNow = getMapOfRatings(ranking);\r\n      const mapPointsLastFetched = getMapOfRatings(lastFetchedRanking);\r\n      const mapPointsLastChanged = getMapOfRatings(lastChangedRankingPoints);\r\n\r\n      let rankingsPointsMap = mapPointsLastChanged;\r\n      // console.log(listNow, listLastFetched, listLastChanged);\r\n      // console.log(mapPointsNow, mapPointsLastFetched, mapPointsLastChanged);\r\n      if (!_.isEqual(mapPointsNow, mapPointsLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRankingPoints_v3', lastFetchedRanking);\r\n        rankingsPointsMap = mapPointsLastFetched;\r\n      }\r\n      let listPrev = listLastChanged;\r\n      if (!_.isEqual(listNow, listLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRanking_v3', lastFetchedRanking);\r\n        listPrev = listLastFetched;\r\n      }\r\n      dispatch({\r\n        type: RANKING_CHANGE_SET,\r\n        listNow,\r\n        listPrev,\r\n        rankingsPointsMap,\r\n      });\r\n      localForage.setItem('lastFetchedRanking_v3', ranking);\r\n    } catch (error) {\r\n      console.warn('Cannot get ranking from local storage', error);\r\n    }\r\n  };\r\n};\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\n\r\nimport { setFilter } from 'reducers/results';\r\n\r\nconst SELECT_PRESET = `PRESETS/SELECT_PRESET`;\r\nconst LOAD_PRESETS = `PRESETS/LOAD_PRESETS`;\r\nconst LOADING_START = `PRESETS/LOADING_START`;\r\nconst LOADING_END = `PRESETS/LOADING_END`;\r\n\r\nconst initialState = {\r\n  presets: [],\r\n  currentPreset: null,\r\n  isLoading: false,\r\n};\r\n\r\nconst itemToOption = item =>\r\n  item && {\r\n    ...item,\r\n    label: item.name,\r\n    value: item.name,\r\n  };\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_PRESETS:\r\n      const currentPreset = _.find({ name: _.get('name', state.currentPreset) }, action.presets);\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(currentPreset) || null,\r\n        presets: _.map(itemToOption, action.presets),\r\n      };\r\n    case SELECT_PRESET:\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(action.currentPreset),\r\n      };\r\n    case LOADING_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case LOADING_END:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst reloadPresets = presets => ({ type: LOAD_PRESETS, presets: presets || [] });\r\n\r\nconst startLoading = () => ({\r\n  type: LOADING_START,\r\n});\r\n\r\nconst endLoading = () => ({\r\n  type: LOADING_END,\r\n});\r\n\r\nexport const selectPreset = currentPreset => ({\r\n  type: SELECT_PRESET,\r\n  currentPreset,\r\n});\r\n\r\nexport const loadPresets = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    dispatch(reloadPresets(presets));\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const savePreset = name => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const { filter } = getState().top;\r\n    const newPreset = { name, filter };\r\n    if (!_.some({ name }, presets)) {\r\n      const newPresets = [...(presets || []), newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      dispatch(selectPreset(newPreset));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    } else if (window.confirm('Preset with this name already exists, replace it?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      const newPresets = [...withoutOldPreset, newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const openPreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const currentPreset = getState().presets.currentPreset;\r\n  const name = _.get('name', currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = name && _.find({ name }, presets);\r\n    if (preset) {\r\n      dispatch(selectPreset(currentPreset));\r\n      dispatch(setFilter(currentPreset.filter));\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const deletePreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const name = _.get('name', getState().presets.currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = _.find({ name }, presets);\r\n    if (preset && window.confirm('Are you sure you want to delete selected preset?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      dispatch(reloadPresets(withoutOldPreset));\r\n      localForage.setItem('filterPresets', withoutOldPreset);\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaLayerGroup, FaFolderOpen, FaSave, FaPlus, FaTrashAlt } from 'react-icons/fa';\r\nimport Select from 'react-select';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport Input from 'components/Shared/Input/Input';\r\n\r\nimport { loadPresets, savePreset, selectPreset, openPreset, deletePreset } from 'reducers/presets';\r\n\r\nconst overlayItem = (\r\n  <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n    <FaLayerGroup />\r\n    пресеты\r\n  </button>\r\n);\r\n\r\nconst noPresetsMessage = () => 'пусто';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ...state.presets,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  loadPresets,\r\n  savePreset,\r\n  openPreset,\r\n  deletePreset,\r\n  selectPreset,\r\n};\r\n\r\nclass PresetsControl extends React.Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    this.props.loadPresets();\r\n  }\r\n\r\n  onChangeSelection = selected => {\r\n    this.props.selectPreset(selected.name);\r\n  };\r\n\r\n  onRewritePreset = () => {\r\n    const { currentPreset } = this.props;\r\n    this.props.savePreset(currentPreset.name);\r\n  };\r\n\r\n  onSavePreset = () => {\r\n    const { name } = this.state;\r\n    this.props.savePreset(name);\r\n    this.setState({ isAddingNew: false });\r\n  };\r\n\r\n  render() {\r\n    const { presets, currentPreset, isLoading } = this.props;\r\n    const { name, isAddingNew } = this.state;\r\n    return (\r\n      <div>\r\n        <Overlay overlayItem={overlayItem}>\r\n          <div className=\"presets-control-overlay\">\r\n            <Select\r\n              className=\"select _margin-bottom\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"пресеты...\"\r\n              options={presets}\r\n              value={currentPreset}\r\n              onChange={this.props.selectPreset}\r\n              noOptionsMessage={noPresetsMessage}\r\n            />\r\n            {currentPreset && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.props.openPreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaFolderOpen /> открыть\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.onRewritePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaSave /> перезаписать\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon\"\r\n                  onClick={this.props.deletePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaTrashAlt /> удалить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {!isAddingNew && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left _self-align-end\"\r\n                  onClick={() => this.setState({ isAddingNew: true })}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaPlus /> добавить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {isAddingNew && (\r\n              <div className=\"adding-new _margin-bottom\">\r\n                <Input\r\n                  value={name}\r\n                  placeholder=\"имя пресета...\"\r\n                  className=\"form-control\"\r\n                  onChange={name => this.setState({ name })}\r\n                />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={this.onSavePreset}\r\n                  disabled={!name || isLoading}\r\n                >\r\n                  <FaSave /> сохранить\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={() => this.setState({ isAddingNew: false })}\r\n                  disabled={isLoading}\r\n                >\r\n                  отмена\r\n                </button>\r\n              </div>\r\n            )}\r\n            {/* <div>\r\n              <Toggle\r\n                checked={false}\r\n                onToggle={active => {\r\n                  localForage.setItem('showTabs', active);\r\n                }}\r\n              >\r\n                показывать табы с пресетами\r\n              </Toggle>\r\n            </div> */}\r\n          </div>\r\n        </Overlay>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PresetsControl);\r\n","import React from 'react';\r\n\r\nconst Flag = ({ region }) => {\r\n  return (\r\n    <div\r\n      className=\"flag-img\"\r\n      style={{\r\n        backgroundImage: `url(https://osu.ppy.sh/images/flags/${region}.png)`,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Flag;\r\n","import { useState, useEffect, useMemo, useCallback, useRef } from 'react';\r\nimport _ from 'lodash/fp';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport moment from 'moment';\r\n\r\nimport { labelToTypeLevel } from 'utils/leaderboards';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\nconst timeStyle = {\r\n  flavour: 'short',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nexport const getTimeAgo = (date) => {\r\n  const dayDiff = moment().startOf('day').diff(moment(date).startOf('day'), 'days');\r\n  return dayDiff === 0\r\n    ? 'сегодня'\r\n    : dayDiff === 1\r\n    ? 'вчера'\r\n    : timeAgo.format(date, timeStyle).replace('назад', '');\r\n};\r\n\r\nexport const preprocessData = (data) => ({\r\n  ...data,\r\n  results: _.flow(\r\n    _.get('results'),\r\n    _.toPairs,\r\n    _.map(([chartId, item]) => {\r\n      const fullRes = _.find(\r\n        (r) => _.every(_.isNumber, [r.perfects, r.greats, r.goods, r.bads, r.misses]),\r\n        item.results\r\n      );\r\n      const stepSum =\r\n        fullRes &&\r\n        [fullRes.perfects, fullRes.greats, fullRes.goods, fullRes.bads, fullRes.misses].reduce(\r\n          (sum, n) => sum + n,\r\n          0\r\n        );\r\n\r\n      const [chartType, chartLevel] = labelToTypeLevel(item.chart_label);\r\n\r\n      return {\r\n        song: item.track,\r\n        sharedChartId: _.toNumber(chartId),\r\n        chartLabel: item.chart_label,\r\n        chartLevel,\r\n        chartType,\r\n        mix: item.mix,\r\n        duration: item.duration,\r\n        results: item.results.map((res, index) => {\r\n          let resultInfoOverrides = {};\r\n          if (stepSum) {\r\n            const infos = [res.perfects, res.greats, res.goods, res.bads, res.misses];\r\n            let fixableIndex = -1;\r\n            let localStepSum = 0;\r\n            const canFix =\r\n              infos.filter((numb, index) => {\r\n                if (!_.isNumber(numb)) {\r\n                  fixableIndex = index;\r\n                  return true;\r\n                }\r\n                localStepSum += numb;\r\n                return false;\r\n              }).length === 1;\r\n            if (canFix) {\r\n              resultInfoOverrides[['perfect', 'great', 'good', 'bad', 'miss'][fixableIndex]] =\r\n                stepSum - localStepSum;\r\n            }\r\n          }\r\n          return {\r\n            id: res.id,\r\n            playerId: res.player,\r\n            nickname: data.players[res.player].nickname,\r\n            nicknameArcade: data.players[res.player].arcade_name,\r\n            originalChartMix: res.originalChartMix,\r\n            originalChartLabel: res.originalChartLabel,\r\n            originalScore: res.originalScore,\r\n            date: res.gained,\r\n            dateObject: new Date(res.gained),\r\n            grade: res.grade,\r\n            isExactDate: !!res.exact_gain_date,\r\n            score: res.score,\r\n            scoreIncrease: res.score_increase,\r\n            calories: res.calories && res.calories / 1000,\r\n            perfect: res.perfects,\r\n            great: res.greats,\r\n            good: res.goods,\r\n            bad: res.bads,\r\n            miss: res.misses,\r\n            combo: res.max_combo,\r\n            mods: res.mods_list,\r\n            isRank: !!res.rank_mode,\r\n            isHJ: (res.mods_list || '').split(' ').includes('HJ'),\r\n            ...resultInfoOverrides,\r\n          };\r\n        }),\r\n      };\r\n    }),\r\n    _.map((song) => {\r\n      return {\r\n        ...song,\r\n        latestScoreDate: song.results.reduce(\r\n          (latest, current) => (current.date > latest ? current.date : latest),\r\n          song.results[0].date\r\n        ),\r\n        results: song.results.map((res) => {\r\n          const perfects = (Math.sqrt(res.perfect) * _.toInteger(song.chartLevel)) / 2;\r\n          const acc = perfects\r\n            ? Math.floor(\r\n                ((perfects * 100 + res.great * 60 + res.good * 30 + res.miss * -20) /\r\n                  (perfects + res.great + res.good + res.bad + res.miss)) *\r\n                  100\r\n              ) / 100\r\n            : null;\r\n          const accRaw = res.perfect\r\n            ? Math.floor(\r\n                ((res.perfect * 100 + res.great * 60 + res.good * 30 + res.miss * -20) /\r\n                  (res.perfect + res.great + res.good + res.bad + res.miss)) *\r\n                  100\r\n              ) / 100\r\n            : null;\r\n          return {\r\n            ...res,\r\n            accuracy: acc < 0 ? 0 : accRaw === 100 ? 100 : acc && +acc.toFixed(2),\r\n            accuracyRaw: accRaw,\r\n            hasRankScore: _.some({ playerId: res.playerId, isRank: true }, song.results),\r\n          };\r\n        }),\r\n      };\r\n    }),\r\n    _.orderBy(['latestScoreDate', 'song', 'chartLevel'], ['desc', 'asc', 'desc'])\r\n  )(data),\r\n});\r\n\r\nexport const useTrackedEx = ({\r\n  data,\r\n  resetData,\r\n  onChange = _.noop,\r\n  isDataValid = _.identity,\r\n  isDebugOn = false,\r\n}) => {\r\n  const [prevData, setPrevData] = useState(data);\r\n  const [currData, setCurrData] = useState(data);\r\n  const resetIndicator = useRef(resetData);\r\n\r\n  useEffect(() => {\r\n    // isDebugOn && console.log('tracking effect', resetIndicatorData, data, currData, prevData);\r\n    if (resetIndicator.current !== resetData) {\r\n      // isDebugOn && console.log('resetting due to indicator chage', data);\r\n      resetIndicator.current = resetData;\r\n      setPrevData(data);\r\n      setCurrData(data);\r\n    } else if (isDataValid(data) && !_.isEqual(data, currData)) {\r\n      // isDebugOn && console.log('data has updated', data, currData);\r\n      setPrevData(currData);\r\n      setCurrData(data);\r\n      onChange(currData, data);\r\n    }\r\n  }, [data, onChange, currData, prevData, resetData, isDataValid]);\r\n\r\n  const reset = useCallback(() => {\r\n    // isDebugOn && console.log('reset called from function');\r\n    setPrevData(data);\r\n    setCurrData(data);\r\n  }, [data]);\r\n\r\n  return useMemo(() => [currData, prevData, reset], [currData, prevData, reset]);\r\n};\r\n\r\nexport const useTracked = (data, resetIndicatorData, onChange = _.noop, isDebugOn) => {\r\n  const [prevData, setPrevData] = useState(data);\r\n  const [currData, setCurrData] = useState(data);\r\n  const resetIndicator = useRef(resetIndicatorData);\r\n\r\n  useEffect(() => {\r\n    // isDebugOn && console.log('tracking effect', resetIndicatorData, data, currData, prevData);\r\n    if (resetIndicator.current !== resetIndicatorData) {\r\n      // isDebugOn && console.log('resetting due to indicator chage', data);\r\n      resetIndicator.current = resetIndicatorData;\r\n      setPrevData(data);\r\n      setCurrData(data);\r\n    } else if (data && !_.isEqual(data, currData)) {\r\n      // isDebugOn && console.log('data has updated', data, currData);\r\n      setPrevData(currData);\r\n      setCurrData(data);\r\n      onChange(currData, data);\r\n    }\r\n  }, [data, onChange, currData, prevData, resetIndicatorData]);\r\n\r\n  const reset = useCallback(() => {\r\n    // isDebugOn && console.log('reset called from function');\r\n    setPrevData(data);\r\n    setCurrData(data);\r\n  }, [data]);\r\n\r\n  return useMemo(() => [currData, prevData, reset], [currData, prevData, reset]);\r\n};\r\n\r\nexport const useResetTrackedObject = (object) => {\r\n  return useCallback(() => {\r\n    const trackings = _.values(object);\r\n    trackings.forEach((tracking) => tracking[2]());\r\n  }, [object]);\r\n};\r\n","export const colorsArray = [\r\n  '#4DB3FF',\r\n  '#80B300',\r\n  '#FF6655',\r\n  '#FF99E6',\r\n  '#33FFCC',\r\n  '#e633c8',\r\n  '#dbe812',\r\n  '#FF1A66',\r\n  '#991AFF',\r\n  '#E6B333',\r\n  '#1AB399',\r\n  '#4D8066',\r\n  '#CC9999',\r\n  '#00E680',\r\n  '#809980',\r\n  '#E6FF80',\r\n  '#1AFF33',\r\n  '#999933',\r\n  '#E6331A',\r\n  '#CCCC00',\r\n  '#66E64D',\r\n  '#4D80CC',\r\n  '#9900B3',\r\n  '#4DB380',\r\n  '#FF4D4D',\r\n];\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport _ from 'lodash/fp';\r\nimport classNames from 'classnames';\r\nimport numeral from 'numeral';\r\nimport { FaExclamationTriangle, FaAngleDoubleUp } from 'react-icons/fa';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\n\r\nimport { routes } from 'constants/routes';\r\nimport { DEBUG } from 'constants/env';\r\n\r\nimport Flag from 'components/Shared/Flag';\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\n\r\nimport { getTimeAgo as getShortTimeAgo } from 'components/SocketTracker/helpers';\r\n\r\nimport { tooltipFormatter } from 'utils/leaderboards';\r\nimport { getExp } from 'utils/exp';\r\nimport { colorsArray } from 'utils/colors';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    resultInfo: state.results.resultInfo,\r\n    profiles: state.results.profiles,\r\n  };\r\n};\r\n\r\nconst Result = (\r\n  {\r\n    // shared\r\n    res,\r\n    chart,\r\n    resultInfo,\r\n    profiles,\r\n    placeDifference,\r\n    // leaderboard\r\n    showProtagonistEloChange = false,\r\n    showProtagonistPpChange = false,\r\n    protagonistName = null,\r\n    uniqueSelectedNames = [],\r\n    // socket\r\n    leftProfile = {},\r\n    rightProfile = {},\r\n    isSocketView = false,\r\n  },\r\n  ref\r\n) => {\r\n  const inf = resultInfo[res.id] || {};\r\n\r\n  // Rating info for nickname column:\r\n  let ratingInfoBlock = null;\r\n  if (DEBUG) {\r\n    // In debug mode we show all info\r\n    ratingInfoBlock = (\r\n      <>\r\n        <span className=\"debug-elo-info\">\r\n          {' '}\r\n          {inf.startingRating && Math.round(inf.startingRating)}\r\n          {' / '}\r\n          {inf.ratingDiff > 0 ? '+' : ''}\r\n          {inf.ratingDiff && Math.round(inf.ratingDiff)}\r\n          {' / '}\r\n          {inf.pp && inf.pp.ppFixed}pp\r\n        </span>\r\n      </>\r\n    );\r\n  } else if (\r\n    res.nickname === protagonistName &&\r\n    (showProtagonistEloChange || showProtagonistPpChange)\r\n  ) {\r\n    // In non-debug mode we show relevant info for selected protagonist\r\n    ratingInfoBlock = (\r\n      <>\r\n        {' / '}\r\n        {showProtagonistEloChange && inf.ratingDiff && (\r\n          <span>{`${inf.ratingDiff > 0 ? '+' : ''}${Math.round(inf.ratingDiff)}`}</span>\r\n        )}\r\n        {showProtagonistPpChange && inf.pp && <span>{inf.pp.ppFixed}pp</span>}\r\n      </>\r\n    );\r\n  }\r\n\r\n  const flag = profiles[res.playerId] ? <Flag region={profiles[res.playerId].region} /> : null;\r\n\r\n  const nameIndex = uniqueSelectedNames.indexOf(res.nickname);\r\n\r\n  return (\r\n    <tr\r\n      key={res.id}\r\n      ref={ref}\r\n      className={classNames({\r\n        empty: !res.accuracy,\r\n        latest: new Date(chart.latestScoreDate) - new Date(res.date) < 12 * 60 * 60 * 1000,\r\n        left: res.nickname === leftProfile.name,\r\n        right: res.nickname === rightProfile.name,\r\n      })}\r\n      style={\r\n        nameIndex > -1\r\n          ? {\r\n              background: colorsArray[nameIndex] + '3A',\r\n              outline: `1px solid ${colorsArray[nameIndex]}A0`,\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      {!isSocketView && (\r\n        <td className=\"place\">{res.isSecondOccurenceInResults ? '' : `#${res.topPlace}`}</td>\r\n      )}\r\n      <td className=\"nickname\" style={nameIndex > -1 ? { fontWeight: 'bold' } : {}}>\r\n        <div className=\"nickname-container\">\r\n          {flag}\r\n          <span className=\"nickname-text\">\r\n            <NavLink exact to={routes.profile.getPath({ id: res.playerId })}>\r\n              {res.nickname}\r\n            </NavLink>\r\n            {!!placeDifference && (\r\n              <span className=\"change-holder up\">\r\n                <span>{placeDifference}</span>\r\n                <FaAngleDoubleUp />\r\n              </span>\r\n            )}\r\n            {ratingInfoBlock}\r\n          </span>\r\n          {!isSocketView && (\r\n            <div className=\"mods-container\">\r\n              {isSocketView &&\r\n                res.mods &&\r\n                res.mods\r\n                  .split(' ')\r\n                  .filter((mod) => mod.includes('AV'))\r\n                  .map((avMod) => (\r\n                    <div className=\"mod av-mod\">\r\n                      <div className=\"av-text\">AV</div>\r\n                      <div className=\"av-number\">{avMod.replace('AV', '')}</div>\r\n                    </div>\r\n                  ))}\r\n              {isSocketView &&\r\n                res.mods &&\r\n                res.mods\r\n                  .split(' ')\r\n                  .filter((mod) => mod.endsWith('X'))\r\n                  .map((xMod) => (\r\n                    <div className=\"mod x-mod\">\r\n                      <div className=\"x-number\">{xMod}</div>\r\n                    </div>\r\n                  ))}\r\n              {res.isRank && <div className=\"mod vj\">{res.isExactDate ? 'R' : 'R?'}</div>}\r\n              {res.isHJ && <div className=\"mod hj\">HJ</div>}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </td>\r\n      <td className=\"score\">\r\n        <Overlay\r\n          overlayClassName=\"score-overlay-outer\"\r\n          overlayItem={\r\n            <span className=\"score-span\">\r\n              {res.scoreIncrease > res.score * 0.8 && '*'}\r\n              {numeral(res.score).format('0,0')}\r\n            </span>\r\n          }\r\n          placement=\"top\"\r\n        >\r\n          <div className=\"score-overlay\">\r\n            {DEBUG && (\r\n              <>\r\n                <div>\r\n                  <span className=\"_grey\">result id: </span>\r\n                  {res.id}\r\n                </div>\r\n                <div>\r\n                  <span className=\"_grey\">player id: </span>\r\n                  {res.playerId}\r\n                </div>\r\n              </>\r\n            )}\r\n            <div>\r\n              <span className=\"_grey\">игрок: </span>\r\n              <NavLink exact to={routes.profile.getPath({ id: res.playerId })}>\r\n                {res.nickname} ({res.nicknameArcade})\r\n              </NavLink>\r\n            </div>\r\n            {!!getExp(res, chart) && (\r\n              <div className=\"important\">\r\n                <span className=\"_grey\">опыт: </span>+{numeral(getExp(res, chart)).format('0,0')}\r\n              </div>\r\n            )}\r\n            {_.isNumber(inf.startingRating) && _.isNumber(inf.ratingDiff) && (\r\n              <div className=\"important\">\r\n                <span className=\"_grey\">эло: {inf.startingRating.toFixed(0)} </span>\r\n                {inf.ratingDiff >= 0 ? `+${inf.ratingDiff.toFixed(0)}` : inf.ratingDiff.toFixed(0)}\r\n              </div>\r\n            )}\r\n            {inf.pp && (\r\n              <div className=\"important\">\r\n                <span className=\"_grey\">pp: </span>\r\n                <span>{inf.pp.ppFixed}pp</span>\r\n              </div>\r\n            )}\r\n            {!res.isExactDate && (\r\n              <div className=\"warning\">\r\n                <FaExclamationTriangle />\r\n                рекорд взят с my best. часть данных недоступна\r\n              </div>\r\n            )}\r\n            {!!res.isExactDate && (\r\n              <>\r\n                {!!res.mods && (\r\n                  <div>\r\n                    <span className=\"_grey\">моды: </span>\r\n                    {res.mods}\r\n                  </div>\r\n                )}\r\n                {!!res.calories && (\r\n                  <div>\r\n                    <span className=\"_grey\">ккал: </span>\r\n                    {res.calories}\r\n                  </div>\r\n                )}\r\n                {!!res.scoreIncrease && (\r\n                  <div>\r\n                    <span className=\"_grey\">прирост: </span>+\r\n                    {numeral(res.scoreIncrease).format('0,0')}\r\n                  </div>\r\n                )}\r\n                {res.originalChartMix && (\r\n                  <div>\r\n                    <div className=\"warning\">\r\n                      <FaExclamationTriangle />\r\n                      было сыграно на {res.originalChartMix}\r\n                    </div>\r\n                    {res.originalChartLabel && (\r\n                      <div>\r\n                        <span className=\"_grey\">оригинальный чарт: </span>\r\n                        {res.originalChartLabel}\r\n                      </div>\r\n                    )}\r\n                    {res.originalScore && (\r\n                      <div>\r\n                        <span className=\"_grey\">оригинальный скор: </span>\r\n                        {res.originalScore}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                {res.scoreIncrease > res.score * 0.8 && '* сайтрид'}\r\n              </>\r\n            )}\r\n          </div>\r\n        </Overlay>\r\n      </td>\r\n      <td className=\"grade\">\r\n        <div className=\"img-holder\">\r\n          {res.grade && res.grade !== '?' && (\r\n            <img src={`${process.env.PUBLIC_URL}/grades/${res.grade}.png`} alt={res.grade} />\r\n          )}\r\n          {res.grade === '?' && null}\r\n        </div>\r\n      </td>\r\n      {isSocketView && (\r\n        <td\r\n          className={classNames('mods', {\r\n            vj: res.isRank,\r\n            hj: res.isHJ,\r\n          })}\r\n        >\r\n          <div className=\"mods-container\">\r\n            {isSocketView &&\r\n              res.mods &&\r\n              res.mods\r\n                .split(' ')\r\n                .filter((mod) => mod.includes('AV'))\r\n                .map((avMod) => (\r\n                  <div className=\"av-mod\">\r\n                    <div className=\"av-text\">AV</div>\r\n                    <div className=\"av-number\">{avMod.replace('AV', '')}</div>\r\n                  </div>\r\n                ))}\r\n            {isSocketView &&\r\n              res.mods &&\r\n              res.mods\r\n                .split(' ')\r\n                .filter((mod) => mod.endsWith('X'))\r\n                .map((xMod) => (\r\n                  <div className=\"x-mod\">\r\n                    <div className=\"x-number\">{xMod}</div>\r\n                  </div>\r\n                ))}\r\n            {res.isRank && <div className=\"inner\">{res.isExactDate ? 'R' : 'R?'}</div>}\r\n            {res.isHJ && <div className=\"inner\">HJ</div>}\r\n          </div>\r\n        </td>\r\n      )}\r\n      <td className=\"number miss\">{res.miss}</td>\r\n      <td className=\"number bad\">{res.bad}</td>\r\n      <td className=\"number good\">{res.good}</td>\r\n      <td className=\"number great\">{res.great}</td>\r\n      <td className=\"number perfect\">{res.perfect}</td>\r\n      <td className=\"combo\">\r\n        {res.combo}\r\n        {res.combo ? 'x' : ''}\r\n      </td>\r\n      <td className=\"accuracy\">\r\n        {res.accuracy === 100 ? 100 : res.accuracy ? res.accuracy.toFixed(2) : ''}\r\n        {res.accuracy ? '%' : ''}\r\n      </td>\r\n      <td\r\n        className={classNames('date', {\r\n          latest: res.date === chart.latestScoreDate,\r\n        })}\r\n      >\r\n        {isSocketView ? (\r\n          getShortTimeAgo(res.dateObject)\r\n        ) : (\r\n          <Tooltip content={tooltipFormatter(res)} tooltipClassName=\"pumpking-tooltip\">\r\n            {getShortTimeAgo(res.dateObject)}\r\n            {res.isExactDate ? '' : '?'}\r\n          </Tooltip>\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null, null, { forwardRef: true })(React.forwardRef(Result));\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport default ({ type, level }) => {\r\n  return (\r\n    <div\r\n      className={classNames('chart-name', {\r\n        single: type === 'S',\r\n        singlep: type === 'SP',\r\n        doublep: type === 'DP',\r\n        double: type === 'D',\r\n        coop: type === 'COOP',\r\n      })}\r\n    >\r\n      <span className=\"chart-letter\">{type}</span>\r\n      <span className=\"chart-number\">{level}</span>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash/fp';\r\nimport { FaYoutube, FaBackward, FaForward, FaGlobeAmericas } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\nimport FlipMove from 'react-flip-move';\r\nimport queryString from 'query-string';\r\n\r\nimport { routes } from 'constants/routes';\r\nimport { DEBUG } from 'constants/env';\r\n\r\nimport Result from './Result';\r\nimport ChartLabel from './ChartLabel';\r\n\r\nconst ANIMATION_DURATION = 250;\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    allResults: state.results.results,\r\n    sharedCharts: state.results.sharedCharts,\r\n    playersHiddenStatus: props.playersHiddenStatus || state.preferences.data.playersHiddenStatus,\r\n  };\r\n};\r\n\r\nconst Chart = React.forwardRef(\r\n  (\r\n    {\r\n      allResults,\r\n      playersHiddenStatus = {},\r\n      sharedCharts = {},\r\n      // shared\r\n      chart: chartOriginal,\r\n      // leaderboards\r\n      showHiddenPlayers = false,\r\n      showProtagonistEloChange = false,\r\n      showProtagonistPpChange = false,\r\n      uniqueSelectedNames = [],\r\n      protagonistName = null,\r\n      // socket stuff\r\n      leftProfile = {},\r\n      rightProfile = {},\r\n      isSocketView = false,\r\n    },\r\n    ref\r\n  ) => {\r\n    const [overrides, setOverrides] = useState(null);\r\n    const [isHidingPlayers, setHidingPlayers] = useState(!showHiddenPlayers);\r\n\r\n    useEffect(() => {\r\n      setHidingPlayers(!showHiddenPlayers);\r\n    }, [showHiddenPlayers]);\r\n\r\n    const chart = _.first(overrides) || chartOriginal;\r\n    if (DEBUG) {\r\n      console.log(chart, overrides);\r\n    }\r\n\r\n    let topPlace = 1;\r\n    const occuredNicknames = [];\r\n    let hiddenPlayersCount = 0;\r\n    const results = chart.results.map((res, index) => {\r\n      const isPlayerHidden = isHidingPlayers && (playersHiddenStatus[res.playerId] || false);\r\n      const isSecondOccurenceInResults = occuredNicknames.includes(res.nickname);\r\n      occuredNicknames.push(res.nickname);\r\n      if (index === 0) {\r\n        topPlace = 1;\r\n      } else if (\r\n        !isSecondOccurenceInResults &&\r\n        res.score !== _.get([index - 1, 'score'], chart.results)\r\n      ) {\r\n        topPlace += 1;\r\n      }\r\n      if (isPlayerHidden) {\r\n        hiddenPlayersCount++;\r\n      }\r\n      return {\r\n        ...res,\r\n        topPlace,\r\n        isSecondOccurenceInResults,\r\n        isPlayerHidden,\r\n      };\r\n    });\r\n\r\n    const onRedoLatestResult = _.throttle(ANIMATION_DURATION + 10, (chart) => {\r\n      const newOverrides = _.drop(1, overrides);\r\n      setOverrides(_.size(newOverrides) === 1 ? null : newOverrides);\r\n    });\r\n\r\n    const onUndoLatestResult = _.throttle(ANIMATION_DURATION + 10, (chart) => {\r\n      if (_.isEmpty(results)) {\r\n        setOverrides(null);\r\n      }\r\n      const undoedResult = _.maxBy('date', results);\r\n      if (!undoedResult) return;\r\n\r\n      const undoedPlayerId = undoedResult.playerId;\r\n      const previousPlayerResult = _.findLast(\r\n        (res) =>\r\n          res.playerId === undoedPlayerId &&\r\n          res.sharedChartId === chart.sharedChartId &&\r\n          res.isRank === undoedResult.isRank &&\r\n          res.date < undoedResult.date,\r\n        allResults\r\n      );\r\n      const newResults = _.orderBy(\r\n        'score',\r\n        'desc',\r\n        _.compact(\r\n          _.map((res) => (res.id === undoedResult.id ? previousPlayerResult : res), results)\r\n        )\r\n      );\r\n      const latestScore = _.maxBy('date', newResults);\r\n      const overrideChart = {\r\n        ...chart,\r\n        latestScoreDate: latestScore && latestScore.date,\r\n        results: newResults,\r\n      };\r\n      if (_.isEmpty(newResults)) {\r\n        setOverrides(null);\r\n      } else {\r\n        setOverrides([overrideChart, ...(overrides || [chart])]);\r\n      }\r\n    });\r\n\r\n    const isActive = !_.isEmpty(overrides);\r\n    const totalResultsCount = _.countBy((id) => !playersHiddenStatus[id], chart.allResultsIds).true;\r\n    const currentIndex = isActive ? 1 + totalResultsCount - _.size(overrides) : totalResultsCount;\r\n    const canUndo = !(currentIndex === 1 && totalResultsCount === 1);\r\n\r\n    // TODO: remove check from sharedCharts when SocketTracker works off results data instead of topPerSong\r\n    const interpDiff =\r\n      chart.interpolatedDifficulty ||\r\n      _.get('interpolatedDifficulty', sharedCharts[chart.sharedChartId]);\r\n\r\n    return (\r\n      <div className=\"song-block\" ref={ref}>\r\n        <div className=\"song-name\">\r\n          <ChartLabel type={chart.chartType} level={chart.chartLevel} />\r\n          {isSocketView ? (\r\n            <div className=\"song-name-text\">\r\n              {interpDiff ? `(${interpDiff.toFixed(1)}) ` : ''}\r\n              {chart.song}\r\n            </div>\r\n          ) : (\r\n            <div className=\"song-name-text\">\r\n              <NavLink\r\n                exact\r\n                to={routes.leaderboard.sharedChart.getPath({ sharedChartId: chart.sharedChartId })}\r\n              >\r\n                {chart.song}\r\n              </NavLink>{' '}\r\n              <span className=\"_grey-text\">({interpDiff && interpDiff.toFixed(1)})</span>\r\n            </div>\r\n          )}\r\n          {!isSocketView && (\r\n            <div className=\"youtube-link\">\r\n              <a\r\n                href={`https://youtube.com/results?${queryString.stringify({\r\n                  search_query: `${chart.song} ${chart.chartLabel}`.replace(/( -)|(- )/g, ' '),\r\n                })}`}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <FaYoutube />\r\n              </a>\r\n            </div>\r\n          )}\r\n          <div className=\"_flex-fill\" />\r\n          <div className=\"right-side-block\">\r\n            {hiddenPlayersCount > 0 && (\r\n              <div\r\n                className={classNames('players-hidden-count _grey-text', {\r\n                  '_on-hover': !isSocketView,\r\n                })}\r\n              >\r\n                скрыто: {hiddenPlayersCount}\r\n              </div>\r\n            )}\r\n            {(hiddenPlayersCount > 0 || !isHidingPlayers) && !isSocketView && (\r\n              <div\r\n                className=\"globe-icon _on-hover\"\r\n                onClick={() => setHidingPlayers(!isHidingPlayers)}\r\n              >\r\n                <FaGlobeAmericas />\r\n              </div>\r\n            )}\r\n            {!isSocketView && (\r\n              <div\r\n                className={classNames('undo-result-button _on-hover', {\r\n                  active: isActive,\r\n                })}\r\n              >\r\n                <FaBackward\r\n                  className={classNames('backward-btn', { disabled: !canUndo })}\r\n                  onClick={() => canUndo && onUndoLatestResult(chart)}\r\n                />\r\n                <span className=\"number\">\r\n                  {currentIndex}/{totalResultsCount}\r\n                </span>\r\n                <FaForward\r\n                  className={classNames('forward-btn', { disabled: !isActive })}\r\n                  onClick={() => isActive && onRedoLatestResult(chart)}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"charts\">\r\n          {!_.isEmpty(results) && (\r\n            <div className=\"chart\">\r\n              <div className=\"results\">\r\n                <table>\r\n                  {/* {chartIndex === 0 && (\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"place\"></th>\r\n                        <th className=\"nickname\"></th>\r\n                        <th className=\"judge\"></th>\r\n                        <th className=\"score\">score</th>\r\n                        <th className=\"grade\"></th>\r\n                        <th className=\"number\">miss</th>\r\n                        <th className=\"number\">bad</th>\r\n                        <th className=\"number\">good</th>\r\n                        <th className=\"number\">great</th>\r\n                        <th className=\"number\">perfect</th>\r\n                        <th className=\"combo\">combo</th>\r\n                        <th className=\"accuracy\">accuracy</th>\r\n                        <th className=\"date\"></th>\r\n                      </tr>\r\n                    </thead>\r\n                  )} */}\r\n                  <FlipMove\r\n                    enterAnimation=\"fade\"\r\n                    leaveAnimation=\"fade\"\r\n                    typeName=\"tbody\"\r\n                    maintainContainerHeight\r\n                    duration={ANIMATION_DURATION}\r\n                  >\r\n                    {results.map((res, index) => {\r\n                      const isProtagonist = res.nickname === protagonistName;\r\n                      if (\r\n                        (res.isPlayerHidden && !isProtagonist) ||\r\n                        (res.isUnknownPlayer && index !== 0)\r\n                      ) {\r\n                        return null;\r\n                      }\r\n\r\n                      let placeDifference, newIndex;\r\n                      if (res.scoreIncrease && res.date === chart.latestScoreDate) {\r\n                        const prevScore = res.score - res.scoreIncrease;\r\n                        newIndex = _.findLastIndex((res) => res.score > prevScore, results);\r\n                        placeDifference = newIndex - index;\r\n                      }\r\n\r\n                      return (\r\n                        <Result\r\n                          key={res.isRank + '_' + res.nickname}\r\n                          chart={chart}\r\n                          results={results}\r\n                          res={res}\r\n                          placeDifference={placeDifference}\r\n                          showProtagonistEloChange={showProtagonistEloChange}\r\n                          showProtagonistPpChange={showProtagonistPpChange}\r\n                          uniqueSelectedNames={uniqueSelectedNames}\r\n                          protagonistName={protagonistName}\r\n                          leftProfile={leftProfile}\r\n                          rightProfile={rightProfile}\r\n                          isSocketView={isSocketView}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </FlipMove>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default connect(mapStateToProps, null, null, { forwardRef: true })(Chart);\r\n","import _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport matchSorter from 'match-sorter';\r\n\r\nimport { SORT, CHART_MIN_MAX, DURATION_DEFAULT, RANK_FILTER } from 'constants/leaderboard';\r\nimport { defaultFilter } from 'reducers/results';\r\n\r\nexport const playersSelector = createSelector(\r\n  (state) => state.results.players,\r\n  (state) => state.user.data.player.id,\r\n  (players, playerId) =>\r\n    _.flow(\r\n      _.toPairs,\r\n      _.map(([, { nickname, arcade_name, id, region }]) => ({\r\n        label: `${nickname} (${arcade_name})`,\r\n        value: nickname,\r\n        isCurrentPlayer: playerId === id,\r\n      })),\r\n      _.sortBy((it) => (it.isCurrentPlayer ? '!' : _.toLower(it.label)))\r\n    )(players)\r\n);\r\n\r\nconst filterCharts = (filter, rows) => {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filter);\r\n  const type = _.getOr(null, 'type', filter);\r\n  const duration = _.getOr(DURATION_DEFAULT, 'duration', filter);\r\n\r\n  return _.filter((row) => {\r\n    if (duration !== DURATION_DEFAULT && !duration.includes(row.duration)) {\r\n      return false;\r\n    }\r\n    return (\r\n      row.chartLevel >= range[0] &&\r\n      row.chartLevel <= range[1] &&\r\n      (!type || row.chartType.startsWith(type))\r\n    );\r\n  }, rows);\r\n};\r\n\r\nconst getFilteredData = (\r\n  data,\r\n  sharedCharts,\r\n  filter = defaultFilter,\r\n  resultInfo = {},\r\n  preferences\r\n) => {\r\n  const start = performance.now();\r\n  const playersHiddenStatus = preferences.playersHiddenStatus;\r\n  const showHidden = filter.showHiddenFromPreferences;\r\n  const names = _.map('value', filter.players);\r\n  const namesOr = _.map('value', filter.playersOr);\r\n  const namesNot = _.map('value', filter.playersNot);\r\n  const sortingType = _.get('value', filter.sortingType);\r\n  const rankFilter = _.get('value', filter.rank) || RANK_FILTER.SHOW_ALL;\r\n  const protagonist = [\r\n    SORT.PROTAGONIST,\r\n    SORT.RANK_ASC,\r\n    SORT.RANK_DESC,\r\n    SORT.PP_ASC,\r\n    SORT.PP_DESC,\r\n    SORT.NEW_SCORES_PLAYER,\r\n  ].includes(sortingType)\r\n    ? _.get('value', filter.protagonist)\r\n    : null;\r\n  const excludeAntagonists = _.map('value', filter.excludeAntagonists);\r\n\r\n  const defaultSorting = [\r\n    _.orderBy(\r\n      [\r\n        (song) =>\r\n          _.max(\r\n            _.map(\r\n              (res) =>\r\n                showHidden || !playersHiddenStatus[res.playerId] ? res.dateObject.getTime() : 0,\r\n              song.results\r\n            )\r\n          ),\r\n      ],\r\n      ['desc']\r\n    ),\r\n  ];\r\n  const newScoresProtagonistSorting = !protagonist\r\n    ? defaultSorting\r\n    : [\r\n        _.orderBy(\r\n          [\r\n            (song) =>\r\n              _.max(\r\n                _.map(\r\n                  (res) => (res.nickname === protagonist ? res.dateObject.getTime() : 0),\r\n                  song.results\r\n                )\r\n              ),\r\n          ],\r\n          ['desc']\r\n        ),\r\n      ];\r\n  const protagonistSorting = [\r\n    _.filter((row) => _.map('nickname', row.results).includes(protagonist)),\r\n    _.map((row) => {\r\n      const protIndex = _.findIndex({ nickname: protagonist }, row.results);\r\n      const protScore = row.results[protIndex].score;\r\n      const enemies = _.flow([\r\n        _.take(protIndex),\r\n        _.uniqBy('nickname'),\r\n        _.remove((res) => excludeAntagonists.includes(res.nickname) || res.score === protScore),\r\n      ])(row.results);\r\n      const distance = Math.sqrt(\r\n        _.reduce((dist, enemy) => dist + (enemy.score / protScore - 0.99) ** 2, 0, enemies)\r\n      );\r\n      return {\r\n        ...row,\r\n        distanceFromProtagonist: distance,\r\n      };\r\n    }),\r\n    _.orderBy(['distanceFromProtagonist'], ['desc']),\r\n  ];\r\n  const getPpSorting = (field, direction = 'desc') => [\r\n    _.filter((row) => _.map('nickname', row.results).includes(protagonist)),\r\n    _.orderBy(\r\n      [\r\n        (row) => {\r\n          const result = _.find({ nickname: protagonist }, row.results);\r\n          const info = resultInfo[result.id] || {};\r\n          return _.getOr(direction === 'desc' ? -Infinity : Infinity, field, info);\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const getEloSorting = (direction) => [\r\n    _.filter((row) => _.map('nickname', row.results).includes(protagonist)),\r\n    _.orderBy(\r\n      [\r\n        (row) => {\r\n          const score = _.find({ nickname: protagonist }, row.results);\r\n          const info = resultInfo[score.id];\r\n          return _.getOr(direction === 'asc' ? Infinity : -Infinity, 'ratingDiff', info);\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const getDiffSorting = (direction = 'desc') => [\r\n    _.orderBy(\r\n      [\r\n        (row) => {\r\n          const chartInfo = sharedCharts[row.sharedChartId];\r\n          return _.getOr(_.toNumber(row.chartLevel), 'interpolatedDifficulty', chartInfo);\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const sortingFunctions =\r\n    {\r\n      [SORT.DEFAULT]: defaultSorting,\r\n      [SORT.NEW_SCORES_PLAYER]: newScoresProtagonistSorting,\r\n      [SORT.PROTAGONIST]: protagonistSorting,\r\n      [SORT.RANK_ASC]: getEloSorting('asc'),\r\n      [SORT.RANK_DESC]: getEloSorting('desc'),\r\n      [SORT.PP_ASC]: getPpSorting('pp.ppRatio', 'asc'),\r\n      [SORT.PP_DESC]: getPpSorting('pp.pp'),\r\n      [SORT.EASIEST_SONGS]: getDiffSorting('asc'),\r\n      [SORT.HARDEST_SONGS]: getDiffSorting('desc'),\r\n    }[sortingType] || defaultSorting;\r\n\r\n  const result = _.flow(\r\n    _.compact([\r\n      _.map((row) => {\r\n        let latestScoreDate = null;\r\n        const occuredIds = [];\r\n        const results = row.results.filter((res, index) => {\r\n          const isVisibleWithRankFilter =\r\n            !rankFilter || rankFilter === RANK_FILTER.SHOW_ALL\r\n              ? true\r\n              : rankFilter === RANK_FILTER.SHOW_ONLY_RANK\r\n              ? res.isRank\r\n              : rankFilter === RANK_FILTER.SHOW_ONLY_NORANK\r\n              ? !res.isRank\r\n              : rankFilter === RANK_FILTER.SHOW_BEST\r\n              ? !occuredIds.includes(res.playerId)\r\n              : true;\r\n          rankFilter === RANK_FILTER.SHOW_BEST && occuredIds.push(res.playerId);\r\n\r\n          const isVisible = (!res.isUnknownPlayer || index === 0) && isVisibleWithRankFilter;\r\n          if (isVisible && (!latestScoreDate || latestScoreDate < res.date)) {\r\n            latestScoreDate = res.date;\r\n          }\r\n          return isVisible;\r\n        }, row.results);\r\n        return {\r\n          ...row,\r\n          latestScoreDate,\r\n          results,\r\n        };\r\n      }),\r\n      filter.chartRange && ((items) => filterCharts(filter.chartRange, items)),\r\n      (names.length || namesOr.length || namesNot.length) &&\r\n        _.filter((row) => {\r\n          const rowNames = _.map('nickname', row.results);\r\n          return (\r\n            (!names.length || _.every((name) => rowNames.includes(name), names)) &&\r\n            (!namesOr.length || _.some((name) => rowNames.includes(name), namesOr)) &&\r\n            (!namesNot.length || !_.some((name) => rowNames.includes(name), namesNot))\r\n          );\r\n        }),\r\n      _.filter((row) => _.size(row.results)),\r\n      ...sortingFunctions,\r\n      filter.song && ((items) => matchSorter(items, filter.song.trim(), { keys: ['song'] })),\r\n    ])\r\n  )(data);\r\n  console.log('Sorting took', performance.now() - start, 'ms');\r\n  return result;\r\n};\r\n\r\nexport const filteredDataSelector = createSelector(\r\n  (state) => state.results.data,\r\n  (state) => state.results.sharedCharts,\r\n  (state) => state.results.filter,\r\n  (state) => state.results.resultInfo,\r\n  (state) => state.preferences.data,\r\n  getFilteredData\r\n);\r\n\r\nexport const sharedChartDataSelector = createSelector(\r\n  (state) => state.results.data,\r\n  (state, props) => props.match.params.sharedChartId,\r\n  (data, sharedChartId) => {\r\n    const chartId = _.toNumber(sharedChartId);\r\n    return data.filter((chart) => chart.sharedChartId === chartId);\r\n  }\r\n);\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport _ from 'lodash/fp';\r\nimport Select from 'react-select';\r\nimport classNames from 'classnames';\r\nimport localForage from 'localforage';\r\nimport { FaRedoAlt, FaSearch, FaArrowLeft } from 'react-icons/fa';\r\n\r\n// styles\r\nimport './leaderboard.scss';\r\n\r\n// components\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport CollapsibleBar from 'components/Shared/CollapsibleBar';\r\nimport ChartFilter from './ChartFilter';\r\nimport PresetsControl from './PresetsControl';\r\nimport Chart from './Chart';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\nimport { SORT, RANK_FILTER } from 'constants/leaderboard';\r\n\r\n// reducers\r\nimport { fetchResults, setFilter, resetFilter, defaultFilter } from 'reducers/results';\r\nimport { selectPreset, openPreset } from 'reducers/presets';\r\n\r\n// utils\r\nimport { colorsArray } from 'utils/colors';\r\nimport { playersSelector, filteredDataSelector, sharedChartDataSelector } from 'reducers/selectors';\r\n\r\n// code\r\nconst sortingOptions = [\r\n  {\r\n    label: 'от новых скоров',\r\n    value: SORT.DEFAULT,\r\n  },\r\n  {\r\n    label: 'от новых скоров конкретного игрока',\r\n    value: SORT.NEW_SCORES_PLAYER,\r\n  },\r\n  // {\r\n  //   label: 'отставанию от остальных',\r\n  //   value: SORT.PROTAGONIST,\r\n  // },\r\n  {\r\n    label: 'от худших результатов (эло)',\r\n    value: SORT.RANK_ASC,\r\n  },\r\n  {\r\n    label: 'от лучших результатов (эло)',\r\n    value: SORT.RANK_DESC,\r\n  },\r\n  {\r\n    label: 'от худших результатов (pp)',\r\n    value: SORT.PP_ASC,\r\n  },\r\n  {\r\n    label: 'от лучших результатов (pp)',\r\n    value: SORT.PP_DESC,\r\n  },\r\n  {\r\n    label: 'от лёгких чартов',\r\n    value: SORT.EASIEST_SONGS,\r\n  },\r\n  {\r\n    label: 'от сложных чартов',\r\n    value: SORT.HARDEST_SONGS,\r\n  },\r\n];\r\n\r\nconst rankOptions = [\r\n  {\r\n    label: 'показывать все скоры',\r\n    value: RANK_FILTER.SHOW_ALL,\r\n  },\r\n  {\r\n    label: 'один лучший скор каждого игрока (ранк или нет)',\r\n    value: RANK_FILTER.SHOW_BEST,\r\n  },\r\n  {\r\n    label: 'только на ранке',\r\n    value: RANK_FILTER.SHOW_ONLY_RANK,\r\n  },\r\n  {\r\n    label: 'только без ранка',\r\n    value: RANK_FILTER.SHOW_ONLY_NORANK,\r\n  },\r\n];\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const isChartView = !!props.match.params.sharedChartId;\r\n\r\n  return {\r\n    isChartView,\r\n    players: playersSelector(state),\r\n    filteredData: isChartView ? sharedChartDataSelector(state, props) : filteredDataSelector(state),\r\n    filter: isChartView ? defaultFilter : state.results.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading: state.results.isLoading || state.tracklist.isLoading,\r\n    presets: state.presets.presets,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setFilter,\r\n  resetFilter,\r\n  selectPreset,\r\n  openPreset,\r\n};\r\n\r\nclass Leaderboard extends Component {\r\n  static propTypes = {\r\n    match: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  state = { showItemsCount: 20 };\r\n\r\n  setFilter = _.curry((name, value) => {\r\n    const filter = { ...this.props.filter, [name]: value };\r\n    this.props.setFilter(filter);\r\n    localForage.setItem('filter', filter);\r\n  });\r\n\r\n  resetFilter = () => {\r\n    this.props.resetFilter();\r\n    localForage.setItem('filter', defaultFilter);\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onTypeSongName = _.debounce(300, (value) => {\r\n    this.setFilter('song', value);\r\n  });\r\n\r\n  renderSimpleSearch() {\r\n    const { isLoading, filter } = this.props;\r\n    return (\r\n      <div className=\"simple-search\">\r\n        <div className=\"song-name _margin-right _margin-bottom\">\r\n          <Input\r\n            value={filter.song || ''}\r\n            placeholder=\"название песни...\"\r\n            className=\"form-control\"\r\n            onChange={this.onTypeSongName}\r\n          />\r\n        </div>\r\n        <div className=\"chart-range _margin-right _margin-bottom\">\r\n          <ChartFilter filterValue={filter.chartRange} onChange={this.setFilter('chartRange')} />\r\n        </div>\r\n        <div className=\"_flex-fill\" />\r\n        <div className=\"_flex-row _margin-bottom\">\r\n          <PresetsControl />\r\n          <button className=\"btn btn-sm btn-dark btn-icon _margin-right\" onClick={this.resetFilter}>\r\n            <FaRedoAlt /> сбросить фильтры\r\n          </button>\r\n          <button\r\n            disabled={isLoading}\r\n            className=\"btn btn-sm btn-dark btn-icon\"\r\n            onClick={this.onRefresh}\r\n          >\r\n            <FaSearch /> обновить\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFilters() {\r\n    const { players, filter } = this.props;\r\n    return (\r\n      <div className=\"filters\">\r\n        <div className=\"people-filters\">\r\n          <label className=\"label\">показывать чарты, которые сыграл:</label>\r\n          <div className=\"players-block\">\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">каждый из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'players', filter)}\r\n                onChange={this.setFilter('players')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и хоть один из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersOr', filter)}\r\n                onChange={this.setFilter('playersOr')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и никто из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersNot', filter)}\r\n                onChange={this.setFilter('playersNot')}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"people-filters\">\r\n          <div className=\"players-block\">\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">показывать ранк:</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"...\"\r\n                options={rankOptions}\r\n                value={_.getOr(null, 'rank', filter) || RANK_FILTER.SHOW_ALL}\r\n                onChange={this.setFilter('rank')}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Toggle\r\n            checked={_.getOr(false, 'showHiddenFromPreferences', filter)}\r\n            onChange={this.setFilter('showHiddenFromPreferences')}\r\n          >\r\n            показывать скрытых игроков\r\n          </Toggle>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSortings() {\r\n    const { players, filter } = this.props;\r\n    return (\r\n      <div className=\"sortings\">\r\n        <div>\r\n          <label className=\"label\">сортировка:</label>\r\n          <Select\r\n            placeholder=\"выберите сортировку\"\r\n            className=\"select\"\r\n            classNamePrefix=\"select\"\r\n            isClearable={false}\r\n            options={sortingOptions}\r\n            value={_.getOr(sortingOptions[0], 'sortingType', filter)}\r\n            onChange={this.setFilter('sortingType')}\r\n          />\r\n        </div>\r\n        {[\r\n          SORT.PROTAGONIST,\r\n          SORT.RANK_ASC,\r\n          SORT.RANK_DESC,\r\n          SORT.PP_ASC,\r\n          SORT.PP_DESC,\r\n          SORT.NEW_SCORES_PLAYER,\r\n        ].includes(_.get('sortingType.value', filter)) && (\r\n          <div>\r\n            <label className=\"label\">игрок:</label>\r\n            <Select\r\n              className={classNames('select players', {\r\n                'red-border': !_.get('protagonist', filter),\r\n              })}\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              value={_.getOr(null, 'protagonist', filter)}\r\n              onChange={this.setFilter('protagonist')}\r\n            />\r\n          </div>\r\n        )}\r\n        {[SORT.PROTAGONIST].includes(_.get('sortingType.value', filter)) && (\r\n          <div>\r\n            <label className=\"label\">не учитывать в сравнении:</label>\r\n            <Select\r\n              closeMenuOnSelect={false}\r\n              className=\"select players\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              isMulti\r\n              value={_.getOr([], 'excludeAntagonists', filter)}\r\n              onChange={this.setFilter('excludeAntagonists')}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, isChartView, filteredData, error, filter, presets } = this.props;\r\n    const { showItemsCount } = this.state;\r\n    const canShowMore = filteredData.length > showItemsCount;\r\n    const visibleData = _.slice(0, showItemsCount, filteredData);\r\n\r\n    const sortingType = _.get('sortingType.value', filter);\r\n    const showProtagonistEloChange = [SORT.RANK_ASC, SORT.RANK_DESC].includes(sortingType);\r\n    const showProtagonistPpChange = [SORT.PP_ASC, SORT.PP_DESC].includes(sortingType);\r\n    const highlightProtagonist = [\r\n      SORT.PROTAGONIST,\r\n      SORT.RANK_ASC,\r\n      SORT.RANK_DESC,\r\n      SORT.PP_ASC,\r\n      SORT.PP_DESC,\r\n      SORT.NEW_SCORES_PLAYER,\r\n    ].includes(sortingType);\r\n    const protagonistName = _.get('protagonist.value', filter);\r\n    const uniqueSelectedNames = _.slice(\r\n      0,\r\n      colorsArray.length,\r\n      _.uniq(\r\n        _.compact([\r\n          highlightProtagonist && protagonistName,\r\n          ..._.map('value', filter.players),\r\n          ..._.map('value', filter.playersOr),\r\n        ])\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div className=\"leaderboard-page\">\r\n        <div className=\"content\">\r\n          {isChartView && (\r\n            <div className=\"simple-search\">\r\n              <NavLink exact to={routes.leaderboard.path}>\r\n                <button className=\"btn btn-sm btn-dark btn-icon\">\r\n                  <FaArrowLeft /> ко всем чартам\r\n                </button>\r\n              </NavLink>\r\n            </div>\r\n          )}\r\n          {!isChartView && (\r\n            <>\r\n              <div className=\"search-block\">\r\n                {this.renderSimpleSearch()}\r\n                <CollapsibleBar title=\"фильтры\">{this.renderFilters()}</CollapsibleBar>\r\n                <CollapsibleBar title=\"сортировка\">{this.renderSortings()}</CollapsibleBar>\r\n              </div>\r\n              {!!presets.length && (\r\n                <div className=\"presets-buttons\">\r\n                  <span>пресеты:</span>\r\n                  {presets.map((preset) => (\r\n                    <ToggleButton\r\n                      key={preset.name}\r\n                      text={preset.name}\r\n                      className=\"btn btn-sm btn-dark _margin-right\"\r\n                      active={_.get('filter', preset) === filter}\r\n                      onToggle={() => {\r\n                        this.props.selectPreset(preset);\r\n                        this.props.openPreset();\r\n                      }}\r\n                    ></ToggleButton>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n          <div className=\"top-list\">\r\n            {isLoading && <Loader />}\r\n            {_.isEmpty(filteredData) && !isLoading && (error ? error.message : 'ничего не найдено')}\r\n            {!isLoading &&\r\n              visibleData.map((chart, chartIndex) => {\r\n                return (\r\n                  <Chart\r\n                    showHiddenPlayers={isChartView || filter.showHiddenFromPreferences}\r\n                    key={chart.sharedChartId}\r\n                    chart={chart}\r\n                    chartIndex={chartIndex}\r\n                    showProtagonistEloChange={showProtagonistEloChange}\r\n                    showProtagonistPpChange={showProtagonistPpChange}\r\n                    uniqueSelectedNames={uniqueSelectedNames}\r\n                    protagonistName={protagonistName}\r\n                  />\r\n                );\r\n              })}\r\n            {!isLoading && canShowMore && (\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() =>\r\n                  this.setState((state) => ({ showItemsCount: state.showItemsCount + 10 }))\r\n                }\r\n              >\r\n                show more...\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Leaderboard);\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n// import numeral from 'numeral';\r\nimport classNames from 'classnames';\r\nimport { GiQueenCrown } from 'react-icons/gi';\r\nimport { FaAngleDoubleUp, FaAngleDoubleDown } from 'react-icons/fa';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\nimport Flag from 'components/Shared/Flag';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\n// import CheckBox from 'components/Shared/CheckBox';\r\n\r\nimport { getRankImg } from 'utils/exp';\r\n\r\nconst getGradeImg = (grade) => (\r\n  <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n);\r\n\r\nexport default function RankingList({ ranking, isLoading, preferences, updatePreferences }) {\r\n  return (\r\n    <div className=\"ranking-list\">\r\n      {_.isEmpty(ranking) && !isLoading && 'ничего не найдено'}\r\n      {isLoading && <Loader />}\r\n      {!isLoading && (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"place\"></th>\r\n              <th className=\"change\"></th>\r\n              <th className=\"exp-rank\">rank</th>\r\n              <th className=\"name\">name</th>\r\n              <th className=\"name name-piu\">piu name</th>\r\n              <th className=\"rating\">elo</th>\r\n              <th className=\"rating-change-cell\"></th>\r\n              <th className=\"rating\">pp</th>\r\n              {/* <th className=\"total-score\">total score</th> */}\r\n              <th className=\"grades sss\">{getGradeImg('SSS')}</th>\r\n              <th className=\"grades ss\">{getGradeImg('SS')}</th>\r\n              <th className=\"grades s\">{getGradeImg('S')}</th>\r\n              <th className=\"grades a\">{getGradeImg('A+')}</th>\r\n              <th className=\"grades b\">{getGradeImg('B')}</th>\r\n              <th className=\"grades c\">{getGradeImg('C')}</th>\r\n              <th className=\"grades d\">{getGradeImg('D')}</th>\r\n              <th className=\"grades f\">{getGradeImg('F')}</th>\r\n              <th className=\"playcount\">scores</th>\r\n              {/* <th className=\"calories\">kcal</th> */}\r\n              <th className=\"accuracy\">accuracy</th>\r\n              <th className=\"hide-col\"> </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {ranking.map((player, playerIndex) => {\r\n              const isHidden = preferences.playersHiddenStatus[player.id];\r\n              if (isHidden && !preferences.showHiddenPlayersInRanking) {\r\n                return null;\r\n              }\r\n              return (\r\n                <tr\r\n                  className={classNames('player', { 'hidden-player': isHidden })}\r\n                  key={player.name}\r\n                >\r\n                  <td className=\"place\">\r\n                    {playerIndex === 0 ? <GiQueenCrown /> : `#${playerIndex + 1}`}\r\n                  </td>\r\n                  <td className=\"change\">\r\n                    {player.change > 0 && (\r\n                      <div className=\"change-holder up\">\r\n                        <span>{player.change}</span>\r\n                        <FaAngleDoubleUp />\r\n                      </div>\r\n                    )}\r\n                    {player.change < 0 && (\r\n                      <div className=\"change-holder down\">\r\n                        <span>{-player.change}</span>\r\n                        <FaAngleDoubleDown />\r\n                      </div>\r\n                    )}\r\n                    {!!player.change && _.isString(player.change) && (\r\n                      <div className=\"change-holder text\">\r\n                        <span>{player.change}</span>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"exp-rank\">{getRankImg(player.expRank)}</td>\r\n                  <td className=\"name\">\r\n                    <div className=\"name-container\">\r\n                      <Flag region={player.region} />\r\n                      <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                        {player.name}\r\n                      </NavLink>\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"name name-piu\">\r\n                    <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                      {player.nameArcade}\r\n                    </NavLink>\r\n                  </td>\r\n                  <td className=\"rating\">{player.rating}</td>\r\n                  <td className=\"rating-change-cell\">\r\n                    {!!player.prevRating && player.prevRating !== player.rating && (\r\n                      <span\r\n                        className={classNames('rating-change', {\r\n                          down: player.prevRating > player.rating,\r\n                          up: player.prevRating < player.rating,\r\n                        })}\r\n                      >\r\n                        {player.prevRating < player.rating ? '+' : ''}\r\n                        {player.rating - player.prevRating}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"rating secondary\">{Math.round(player.pp.pp)}</td>\r\n                  <td className=\"grades sss\">{player.grades.SSS}</td>\r\n                  <td className=\"grades ss\">{player.grades.SS}</td>\r\n                  <td className=\"grades s\">{player.grades.S}</td>\r\n                  <td className=\"grades a\">{player.grades.A}</td>\r\n                  <td className=\"grades b\">{player.grades.B}</td>\r\n                  <td className=\"grades c\">{player.grades.C}</td>\r\n                  <td className=\"grades d\">{player.grades.D}</td>\r\n                  <td className=\"grades f\">{player.grades.F}</td>\r\n                  <td className=\"playcount\">{player.count}</td>\r\n                  <td className=\"accuracy\">\r\n                    {player.accuracy ? `${player.accuracy.toFixed(2)}%` : ''}\r\n                  </td>\r\n                  <td className=\"hide-col\">\r\n                    <Toggle\r\n                      onChange={() => {\r\n                        updatePreferences(\r\n                          _.set(['playersHiddenStatus', player.id], !isHidden, preferences)\r\n                        );\r\n                      }}\r\n                      checked={!isHidden}\r\n                    />\r\n                    {/* <CheckBox\r\n                      onChange={() => {\r\n                        updatePreferences(\r\n                          _.set(['playersHiddenStatus', player.id], !isHidden, preferences)\r\n                        );\r\n                      }}\r\n                      isChecked={isHidden}\r\n                    /> */}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function RankingFaq() {\r\n  return (\r\n    <div className=\"faq\">\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Как считается рейтинг?</div>\r\n        <div className=\"answer\">\r\n          A: Используется <a href=\"https://en.wikipedia.org/wiki/Elo_rating_system\">рейтинг Эло</a>,\r\n          широко используемый в шахматах и других играх, слегка модицированный под условия игры на\r\n          пампе. Средний рейтинг - 1000. Коэффициент К зависит от уровня чарта (более сложные чарты\r\n          сильнее влияют на рейтинг). Количество очков влияет на заработанный рейтинг (маленький\r\n          отрыв от противника не даст так много очков как большой отрыв).\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Что такое рр и чем оно отличается от эло?</div>\r\n        <div className=\"answer\">\r\n          A: РР (performance points) - система очков, взятая из osu!. Эло - система рейтинга, взятая\r\n          из шахмат. Основные отличия:\r\n          <br />\r\n          С эло твои очки зависят от других игроков на этом чарте, с рр твои очки зависят только от\r\n          того, как ты сыграешь чарт.\r\n          <br />\r\n          С эло можно потерять очки или заставить другого игрока их потерять, с рр можно только\r\n          набирать больше очков.\r\n          <br />\r\n          С эло намного проще кого-то обогнать, с рр люди редко меняются местами в рейтинге.\r\n          <br />\r\n          Эло показывает кто кого обыгрывает в последнее время, а рр показывает, кто на каком\r\n          примерно уровне по скиллу.\r\n          <br />\r\n          Сейчас рейтинг сортируется по Эло. РР выступает в качестве дополнительной инфы для\r\n          интереса, плюс используется как стартовое значение Эло.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Система Эло используется для игр 1 на 1, как она используется на пампе, где на одном\r\n          чарте играет много игроков?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: Рекорды на одном чарте делятся на несколько игр 1 на 1. Если есть 3 игрока: A, B, C; то\r\n          считается, что было 3 отдельные игры: A vs B, A vs C, B vs C.\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Как считается сумма рр?</div>\r\n        <div className=\"answer\">\r\n          A: Сначала все скоры игрока сортируются по рр. Затем в общую сумму рр добавляется 100% от\r\n          лучшего скора, 95% от второго скора, 90% от третьего, 86% от 4-го и так далее. (Формула\r\n          коэффициента - 0.95^N). Таким образом, на общую сумму рр больше всего влияют самые лучшие\r\n          результаты человека за всё время, и чтобы поднять свой уровень рр, нужно получать новые\r\n          топовые результаты (и поднимать свой скилл).\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Учитываются ли рекорды на ранке в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: Да. Как минимум потому что у нас есть много рекордов, взятых с машин бестов, и мы не\r\n          знаем наверняка, на ранке они или нет. Если у игрока в топе есть два скора - на ранке и\r\n          без ранка, используется тот, где больше очков.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Почему меня нет в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: В таблицу попадают только те, у кого есть хотя бы 20 игр 1 на 1. Первые 20 игр\r\n          используются для определения изначального рейтинга.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Почему суммарное количество оценок S-A-B не совпадает с общим количеством скоров?\r\n        </div>\r\n        <div className=\"answer\">A: Не для каждого результата известна оценка.</div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Если у меня есть несколько рекордов на А, несколько на А+, как считается суммарное\r\n          количество грейдов в таблице?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: В каждой колонке учитываются обе буквы - и треснутые, и с удержанным лайфом. То есть и\r\n          А, и А+ идут в колонку А. Точно так же для B, C, D.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Убери аккураси из таблицы!</div>\r\n        <div className=\"answer\">A: Грем, это секция для вопросов.</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import _ from 'lodash/fp';\r\n\r\nimport { fetchJson, postJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `PREFERENCES/LOADING`;\r\nconst SUCCESS = `PREFERENCES/SUCCESS`;\r\nconst ERROR = `PREFERENCES/ERROR`;\r\n// const UPDATE_LOADING = `PREFERENCES/UPDATE/LOADING`;\r\n// const UPDATE_SUCCESS = `PREFERENCES/UPDATE/SUCCESS`;\r\n// const UPDATE_ERROR = `PREFERENCES/UPDATE/ERROR`;\r\nconst CHANGE = `PREFERENCES/CHANGE`;\r\n\r\nconst defaultPreferences = {\r\n  playersHiddenStatus: {},\r\n};\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: defaultPreferences,\r\n  error: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: defaultPreferences,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: _.merge(defaultPreferences, action.data),\r\n      };\r\n    case CHANGE:\r\n      return {\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchPreferences = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/profile/preferences` }));\r\n      dispatch({ type: SUCCESS, data: data.preferences });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchUserPreferences = (id) => {\r\n  return async (dispatch) => {\r\n    const data = await dispatch(fetchJson({ url: `${HOST}/player/${id}/preferences` }));\r\n    return data;\r\n  };\r\n};\r\n\r\nexport const updatePreferences = (preferences) => {\r\n  return async (dispatch) => {\r\n    // dispatch({ type: LOADING });\r\n    dispatch({ type: CHANGE, data: preferences });\r\n    try {\r\n      await dispatch(\r\n        postJson({\r\n          url: `${HOST}/profile/preferences`,\r\n          body: { preferences },\r\n        })\r\n      );\r\n      // dispatch({ type: SUCCESS, data: data.preferences });\r\n      // return data.preferences;\r\n    } catch (error) {\r\n      // dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle } from 'react-icons/fa';\r\nimport { Link, Route, withRouter } from 'react-router-dom';\r\nimport { createSelector } from 'reselect';\r\nimport _ from 'lodash/fp';\r\n\r\n// styles\r\nimport './ranking.scss';\r\n\r\n// components\r\nimport RankingList from './RankingList';\r\nimport RankingFaq from './RankingFaq';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\nimport { updatePreferences } from 'reducers/preferences';\r\n\r\n// utils\r\n\r\n// code\r\nconst rankingSelector = createSelector(\r\n  (state) => state.results.profiles,\r\n  // _.flow(_.values, _.orderBy(['pp.pp'], ['desc']))\r\n  _.flow(_.values, _.orderBy(['ratingRaw'], ['desc']))\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    preferences: state.preferences.data,\r\n    ranking: rankingSelector(state),\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading:\r\n      state.results.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  updatePreferences,\r\n};\r\n\r\nclass Ranking extends Component {\r\n  static propTypes = {\r\n    ranking: toBe.array,\r\n    error: toBe.object,\r\n    preferences: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n    updatePreferences: toBe.func.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    ranking: [],\r\n  };\r\n\r\n  onChangeHidingPlayers = () => {\r\n    const { preferences, updatePreferences } = this.props;\r\n\r\n    updatePreferences(\r\n      _.set(['showHiddenPlayersInRanking'], !preferences.showHiddenPlayersInRanking, preferences)\r\n    );\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, ranking, error, preferences, updatePreferences } = this.props;\r\n    return (\r\n      <div className=\"ranking-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.path}\r\n              render={() => (\r\n                <>\r\n                  <button\r\n                    className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                    onClick={this.onChangeHidingPlayers}\r\n                  >\r\n                    {preferences.showHiddenPlayersInRanking\r\n                      ? 'скрыть невыбранных'\r\n                      : 'показать всех'}\r\n                  </button>\r\n                  <Link to={routes.ranking.faq.path}>\r\n                    <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n                      <FaQuestionCircle /> faq\r\n                    </button>\r\n                  </Link>\r\n                  <button\r\n                    disabled={isLoading}\r\n                    className=\"btn btn-sm btn-dark btn-icon\"\r\n                    onClick={this.onRefresh}\r\n                  >\r\n                    <FaSearch /> обновить\r\n                  </button>\r\n                </>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.faq.path}\r\n              render={() => (\r\n                <Link to={routes.ranking.path}>\r\n                  <button className=\"btn btn-sm btn-dark btn-icon\">назад</button>\r\n                </Link>\r\n              )}\r\n            />\r\n          </div>\r\n          <Route\r\n            exact\r\n            path={routes.ranking.path}\r\n            render={() => (\r\n              <RankingList\r\n                ranking={ranking}\r\n                isLoading={isLoading}\r\n                preferences={preferences}\r\n                updatePreferences={updatePreferences}\r\n              />\r\n            )}\r\n          />\r\n          <Route exact path={routes.ranking.faq.path} component={RankingFaq} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Ranking));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\nimport { FaPlay } from 'react-icons/fa';\r\nimport { MdExpandMore } from 'react-icons/md';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { parseDate } from 'utils/date';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nimport { routes } from 'constants/routes';\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport './most-played.scss';\r\n\r\nexport default connect((state) => ({ charts: state.results.sharedCharts }), { fetchJson })(\r\n  ({ playerId, charts, fetchJson }) => {\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [limit, setLimit] = useState(10);\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n      setLoading(true);\r\n      fetchJson({\r\n        url: `${HOST}/player/${playerId}/mostPlayed?limit=${limit}`,\r\n      })\r\n        .then((result) => {\r\n          setLoading(false);\r\n          if (result.success) {\r\n            setData(result.data);\r\n          }\r\n        })\r\n        .catch(() => {\r\n          setLoading(false);\r\n        });\r\n    }, [playerId, limit, fetchJson]);\r\n\r\n    return (\r\n      <div className=\"most-played\">\r\n        {isLoading && <Loader />}\r\n        {data.map((item) => {\r\n          const chart = charts[item.shared_chart];\r\n          return (\r\n            <div className=\"chart\" key={item.shared_chart}>\r\n              <div\r\n                className={classNames('chart-name', {\r\n                  single: chart.chartType === 'S',\r\n                  singlep: chart.chartType === 'SP',\r\n                  doublep: chart.chartType === 'DP',\r\n                  double: chart.chartType === 'D',\r\n                  coop: chart.chartType === 'COOP',\r\n                })}\r\n              >\r\n                <span className=\"chart-letter\">{chart.chartType}</span>\r\n                <span className=\"chart-number\">{chart.chartLevel}</span>\r\n              </div>\r\n              <div className=\"song-name\">\r\n                <NavLink\r\n                  exact\r\n                  to={routes.leaderboard.sharedChart.getPath({\r\n                    sharedChartId: chart.sharedChartId,\r\n                  })}\r\n                >\r\n                  {chart.song}\r\n                </NavLink>\r\n              </div>\r\n              <div className=\"date\">\r\n                {item.latestDate ? getTimeAgo(parseDate(item.latestDate)) : null}\r\n              </div>\r\n              <div className=\"playcount\">\r\n                <FaPlay />\r\n                <span>{item.count}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        {limit === _.size(data) && (\r\n          <button\r\n            className=\"show-more btn btn-sm btn-dark btn-icon\"\r\n            onClick={() => setLimit(limit + 10)}\r\n          >\r\n            <MdExpandMore /> больше\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React from 'react';\r\n\r\nimport { ranks, getRankImg } from 'utils/exp';\r\n\r\nexport default function ExpFaq() {\r\n  return (\r\n    <div className=\"faq-exp\">\r\n      <div className=\"faq-header\">\r\n        <strong>Опыт</strong> игрока основывается на количестве сыгранных песен и чартов.\r\n        <br />\r\n        Чем выше уровень чарта и чем лучше оценка на чарте, тем больше опыта он даёт.\r\n        <br />\r\n        Повторные попытки на тех же чартах не дают больше опыта. Чтобы поднимать свой уровень, играй\r\n        новые треки и чарты.\r\n      </div>\r\n      <div className=\"faq-header\">Список уровней и необходимый опыт для их получения:</div>\r\n      <div className=\"ranks-list\">\r\n        {ranks.map(rank => (\r\n          <div key={rank.threshold} className=\"rank\">\r\n            <div className=\"exp-rank\">{getRankImg(rank)}</div>\r\n            <div className=\"threshold\">{rank.threshold}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const SET_FILTER = `PROFILES/SET_FILTER`;\r\nconst RESET_FILTER = `PROFILES/RESET_FILTER`;\r\n\r\nexport const defaultFilter = {};\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  filter: defaultFilter,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setProfilesFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\n\r\nexport const resetProfilesFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n","import _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport moment from 'moment';\r\n\r\nconst cutRange = (array, range) => {\r\n  const startIndex = _.findIndex(item => item.date > range[0], array);\r\n  const endIndex = _.findLastIndex(item => item.date < range[1], array);\r\n  let firstElement =\r\n    startIndex > 0 ? array[startIndex - 1] : startIndex === 0 ? array[startIndex] : _.last(array);\r\n  let lastElement = endIndex > -1 ? array[endIndex] : _.first(array);\r\n  firstElement = { ...firstElement, date: range[0] };\r\n  lastElement = { ...lastElement, date: range[1] };\r\n  const middleElements =\r\n    startIndex > -1 && endIndex > -1 ? array.slice(startIndex, endIndex + 1) : [];\r\n\r\n  return [firstElement, ...middleElements, lastElement];\r\n};\r\n\r\nconst defaultGradesDistribution = {\r\n  SSS: 0,\r\n  SS: 0,\r\n  S: 0,\r\n  'A+': 0,\r\n  A: 0,\r\n  B: 0,\r\n  C: 0,\r\n  D: 0,\r\n  F: 0,\r\n};\r\nconst defaultGradesWithLevelsDistribution = _.flow(\r\n  _.flatMap(type => {\r\n    return _.flow(\r\n      _.toPairs,\r\n      _.map(([grade, value]) => [`${type}-${grade}`, value])\r\n    )(defaultGradesDistribution);\r\n  }),\r\n  _.fromPairs\r\n)(['S', 'D']);\r\n\r\nexport const profileSelectorCreator = idParamName =>\r\n  createSelector(\r\n    (state, props) => _.toInteger(props.match.params[idParamName]),\r\n    state => state.results.isLoading || state.results.isLoadingRanking,\r\n    state => state.results.profiles,\r\n    state => state.profiles.filter,\r\n    state => state.tracklist.data,\r\n    (id, isLoading, profiles, filter, tracklist) => {\r\n      const profile = profiles[id];\r\n      if (_.isEmpty(profile) || isLoading) {\r\n        return null;\r\n      }\r\n      const levelsDistribution = _.flow(\r\n        _.get('resultsByLevel'),\r\n        _.toPairs,\r\n        _.map(([x, y]) => ({\r\n          x: _.toInteger(x),\r\n          S:\r\n            (_.size(\r\n              _.filter(res => res.chart.chartType === 'S' || res.chart.chartType === 'SP', y)\r\n            ) /\r\n              tracklist.singlesLevels[x]) *\r\n            100,\r\n          D:\r\n            (-_.size(\r\n              _.filter(res => res.chart.chartType === 'D' || res.chart.chartType === 'DP', y)\r\n            ) /\r\n              tracklist.doublesLevels[x]) *\r\n            100,\r\n        }))\r\n      )(profile);\r\n      const gradesData = _.flow(\r\n        _.get('resultsByLevel'),\r\n        _.toPairs,\r\n        _.map(\r\n          _.update('[1].result.grade', grade =>\r\n            grade && grade.includes('+') && grade !== 'A+' ? grade.replace('+', '') : grade\r\n          )\r\n        )\r\n      )(profile);\r\n      const gradesDistribution = _.flow(\r\n        _.map(([x, y]) => ({\r\n          x: _.toInteger(x),\r\n          ...defaultGradesDistribution,\r\n          ..._.omit('?', _.mapValues(_.size, _.groupBy('result.grade', y))),\r\n        })),\r\n        _.map(item => {\r\n          const grades = _.pick(Object.keys(defaultGradesDistribution), item);\r\n          const sum = _.sum(_.values(grades));\r\n          return {\r\n            ...item,\r\n            gradesValues: grades,\r\n            ...(sum === 0 ? grades : _.mapValues(value => (100 * value) / sum, grades)),\r\n          };\r\n        })\r\n      )(gradesData);\r\n      const gradesAndLevelsDistribution = _.flow(\r\n        _.map(([x, y]) => {\r\n          const groupedResults = _.groupBy('result.grade', y);\r\n          const counts = _.omit(\r\n            '?',\r\n            _.mapValues(\r\n              _.countBy(res => {\r\n                return res.chart.chartType === 'S' || res.chart.chartType === 'SP'\r\n                  ? 'S'\r\n                  : res.chart.chartType === 'D' || res.chart.chartType === 'DP'\r\n                  ? 'D'\r\n                  : 'Other';\r\n              }),\r\n              groupedResults\r\n            )\r\n          );\r\n          const reduced = _.reduce(\r\n            (acc, [grade, levelsData]) => {\r\n              const accData = _.flow(\r\n                _.toPairs,\r\n                _.map(([type, count]) => [\r\n                  `${type}-${grade}`,\r\n                  type === 'S'\r\n                    ? (count / tracklist.singlesLevels[x]) * 100\r\n                    : (-count / tracklist.doublesLevels[x]) * 100,\r\n                ]),\r\n                _.fromPairs\r\n              )(levelsData);\r\n              return { ...acc, ...accData };\r\n            },\r\n            {},\r\n            _.toPairs(counts)\r\n          );\r\n\r\n          return {\r\n            x: _.toInteger(x),\r\n            ...defaultGradesWithLevelsDistribution,\r\n            ...reduced,\r\n          };\r\n        })\r\n      )(gradesData);\r\n\r\n      const lastTickRating = _.last(profile.ratingHistory).date;\r\n      const lastTickRanking = _.last(profile.rankingHistory).date;\r\n      const lastTick = lastTickRating > lastTickRanking ? lastTickRating : lastTickRanking; // End graph at either point\r\n      const firstTick = _.first(profile.ratingHistory).date; // Start graph from the first battle of this player\r\n      const lastDay = moment(lastTick).endOf('day');\r\n      const firstDay = moment(firstTick).startOf('day');\r\n      const minMaxRange = [firstDay / 1000 / 60 / 60 / 24, lastDay / 1000 / 60 / 60 / 24];\r\n\r\n      const filterRange = filter.dayRange || [\r\n        Math.max(minMaxRange[0], minMaxRange[1] - 30),\r\n        minMaxRange[1],\r\n      ];\r\n      const dayRangeMs = [\r\n        +moment(filterRange[0] * 1000 * 60 * 60 * 24).startOf('day'),\r\n        +moment(filterRange[1] * 1000 * 60 * 60 * 24).endOf('day'),\r\n      ];\r\n      const placesChanges = cutRange(profile.rankingHistory, dayRangeMs);\r\n      const ratingChanges = cutRange(profile.ratingHistory, dayRangeMs);\r\n\r\n      const rank = 1 + _.findIndex({ id }, _.orderBy(['ratingRaw'], ['desc'], _.values(profiles)));\r\n\r\n      return {\r\n        ...profile,\r\n        rank,\r\n        minMaxRange,\r\n        filterRange,\r\n        levelsDistribution,\r\n        gradesDistribution,\r\n        gradesAndLevelsDistribution,\r\n        placesChanges,\r\n        ratingChanges,\r\n      };\r\n    }\r\n  );\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle, FaTimes, FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport ReactModal from 'react-modal';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport Select from 'react-select';\r\nimport moment from 'moment';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as RechartsTooltip,\r\n  ReferenceLine,\r\n  CartesianGrid,\r\n  Line,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Label,\r\n  Scatter,\r\n  ScatterChart,\r\n} from 'recharts';\r\nimport _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\n\r\n// styles\r\nimport './profile.scss';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\nimport { DEBUG } from 'constants/env';\r\n\r\n// components\r\nimport Range from 'components/Shared/Range';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport MostPlayed from './MostPlayed';\r\nimport ExpFaq from './ExpFaq';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\nimport { setProfilesFilter, resetProfilesFilter } from 'reducers/profiles';\r\n\r\n// utils\r\nimport { profileSelectorCreator } from 'utils/profiles';\r\nimport { parseDate } from 'utils/date';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { achievements } from 'utils/achievements';\r\nimport { getRankImg } from 'utils/exp';\r\n\r\n// code\r\nconst MIN_GRAPH_HEIGHT = undefined;\r\n\r\nconst profileSelector = profileSelectorCreator('id');\r\n\r\nexport const otherPlayersSelector = createSelector(\r\n  (state) => state.results.players,\r\n  (state, props) => _.toNumber(props.match.params.id),\r\n  (players, id) =>\r\n    _.flow(\r\n      _.toPairs,\r\n      _.map(([ind, { nickname, arcade_name, id }]) => ({\r\n        label: `${nickname} (${arcade_name})`,\r\n        value: nickname,\r\n        id: _.toNumber(id),\r\n      })),\r\n      _.remove((it) => it.id === id),\r\n      _.sortBy((it) => _.toLower(it.label))\r\n    )(players)\r\n);\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    profile: profileSelector(state, props),\r\n    otherPlayers: otherPlayersSelector(state, props),\r\n    tracklist: state.tracklist.data,\r\n    filter: state.profiles.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    sharedCharts: state.results.sharedCharts,\r\n    isLoading:\r\n      state.results.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setProfilesFilter,\r\n  resetProfilesFilter,\r\n};\r\n\r\nclass Profile extends Component {\r\n  static propTypes = {\r\n    profile: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    profile: {},\r\n  };\r\n\r\n  state = {\r\n    isLevelGraphCombined: true,\r\n    showFaq: false,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetProfilesFilter();\r\n  }\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onChangeDayRange = (range) => {\r\n    const { filter } = this.props;\r\n    this.props.setProfilesFilter({\r\n      ...filter,\r\n      dayRange: range,\r\n    });\r\n  };\r\n\r\n  onShowFaq = () => {\r\n    this.setState({ showFaq: true });\r\n  };\r\n\r\n  onHideFaq = () => {\r\n    this.setState({ showFaq: false });\r\n  };\r\n\r\n  renderRankingHistory() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={profile.ratingChanges} margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={(value) => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={['dataMin - 100', 'dataMax + 100']}\r\n            tickFormatter={Math.round}\r\n            width={40}\r\n          />\r\n          <ReferenceLine y={1000} stroke=\"white\" />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Rating: {Math.round(payload[0].value)}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  circleShape = (args) => (\r\n    <circle key={args.key} cx={args.cx} cy={args.cy} r={4} fill={args.fill}></circle>\r\n  );\r\n  renderAccuracyPoints(interpolated = false) {\r\n    const { profile, sharedCharts } = this.props;\r\n    const pointsByType = _.groupBy(([, , chartId]) => {\r\n      const type = sharedCharts[chartId].chartType;\r\n      return type === 'D' || type === 'DP';\r\n    }, profile.accuracyPointsRaw);\r\n    if (!interpolated) {\r\n      return (\r\n        <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n          <ScatterChart margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis\r\n              dataKey=\"[0]\"\r\n              type=\"number\"\r\n              domain={[1, 28]}\r\n              tickFormatter={(value) => Math.round(value)}\r\n              ticks={[1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27]}\r\n            />\r\n            <YAxis\r\n              dataKey=\"[1]\"\r\n              type=\"number\"\r\n              domain={[0, 100]}\r\n              width={40}\r\n              tickFormatter={(value) => Math.round(value) + '%'}\r\n            />\r\n            <Scatter data={pointsByType.true} shape={this.circleShape} fill=\"#169c16\" />\r\n            <Scatter data={pointsByType.false} shape={this.circleShape} fill=\"#af2928\" />\r\n            <RechartsTooltip\r\n              isAnimationActive={false}\r\n              content={({ active, payload, label }) => {\r\n                if (!payload || !payload[0] || !payload[1]) {\r\n                  return null;\r\n                }\r\n                const chart = payload[0].payload[2] && sharedCharts[payload[0].payload[2]];\r\n                return (\r\n                  <div className=\"history-tooltip\">\r\n                    <div>Level: {payload[0].value}</div>\r\n                    <div>Accuracy: {payload[1].value}%</div>\r\n                    {chart && (\r\n                      <div>\r\n                        {chart.song} {chart.chartLabel} ({chart.interpolatedDifficulty.toFixed(1)})\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                );\r\n              }}\r\n            />\r\n          </ScatterChart>\r\n        </ResponsiveContainer>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"[0]\"\r\n            type=\"number\"\r\n            domain={[1, 28]}\r\n            tickFormatter={(value) => Math.round(value)}\r\n          />\r\n          <YAxis domain={[0, 100]} width={40} />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{payload[0].payload[0]}</div>\r\n                  {payload && payload[0] && <div>Acc: #{payload[0].value}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            data={profile.accuracyPointsInterpolated}\r\n            isAnimationActive={false}\r\n            dataKey=\"[1]\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderPlaceHistory() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={profile.placesChanges} margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={(value) => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={[1, (dataMax) => (dataMax < 3 ? dataMax + 2 : dataMax + 1)]}\r\n            interval={0}\r\n            reversed\r\n            width={40}\r\n          />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Place: #{payload[0].value}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGrades() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <BarChart\r\n          data={profile.gradesDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {_.filter((item) => item.value > 0, payload).map((item) => (\r\n                    <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                      {item.name}: {payload[0].payload.gradesValues[item.name]}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            domain={[0, 100]}\r\n            ticks={[0, 50, 100]}\r\n            tickFormatter={(x) => `${Math.round(x)}%`}\r\n            width={40}\r\n          />\r\n          <Legend />\r\n          <Bar dataKey=\"SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"F\" fill=\"#774949\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradesWithLevels() {\r\n    const { profile, tracklist } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={0.74}>\r\n        <BarChart\r\n          data={profile.gradesAndLevelsDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n          stackOffset=\"sign\"\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              const doubleItems = _.filter(\r\n                (item) => item.value !== 0 && item.dataKey.startsWith('D'),\r\n                payload\r\n              );\r\n              const singleItems = _.filter(\r\n                (item) => item.value !== 0 && item.dataKey.startsWith('S'),\r\n                payload\r\n              );\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {!!singleItems.length && (\r\n                    <>\r\n                      <div>Single:</div>\r\n                      {singleItems.map((item) => (\r\n                        <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                          {item.name.slice(2)}: {Math.round(Math.abs(item.value))}% (\r\n                          {Math.round((tracklist.singlesLevels[item.payload.x] * item.value) / 100)}\r\n                          /{tracklist.singlesLevels[item.payload.x]})\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                  {!!doubleItems.length && (\r\n                    <>\r\n                      <div>Double:</div>\r\n                      {doubleItems.map((item) => (\r\n                        <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                          {item.name.slice(2)}: {Math.round(Math.abs(item.value))}% (\r\n                          {Math.round(\r\n                            (tracklist.doublesLevels[item.payload.x] * -item.value) / 100\r\n                          )}\r\n                          /{tracklist.doublesLevels[item.payload.x]})\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            tickFormatter={(x) => `${Math.round(Math.abs(x))}%`}\r\n            width={40}\r\n            domain={[(dataMin) => Math.min(dataMin, -10), (dataMax) => Math.max(10, dataMax)]}\r\n          />\r\n          <Bar dataKey=\"S-SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Label value=\"Double\" offset={0} position=\"insideBottomLeft\" />\r\n          <Label value=\"Single\" offset={0} position=\"insideTopLeft\" />\r\n          <ReferenceLine y={0} stroke=\"#bbb\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderLevels() {\r\n    const { profile, tracklist } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <BarChart\r\n          data={profile.levelsDistribution}\r\n          stackOffset=\"sign\"\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              const totalD = tracklist.doublesLevels[payload[0].payload.x];\r\n              const totalS = tracklist.singlesLevels[payload[0].payload.x];\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {totalS > 0 && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n                      Single: {Math.abs(payload[1].value).toFixed(1)}% (\r\n                      {Math.round((payload[1].value * totalS) / 100)}/{totalS})\r\n                    </div>\r\n                  )}\r\n                  {totalD > 0 && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n                      Double: {Math.abs(payload[0].value).toFixed(1)}% (\r\n                      {Math.round((Math.abs(payload[0].value) * totalD) / 100)}/{totalD})\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            tickFormatter={(x) => Math.round(Math.abs(x)) + '%'}\r\n            width={40}\r\n            domain={[(dataMin) => Math.min(dataMin, -10), (dataMax) => Math.max(10, dataMax)]}\r\n          />\r\n          <RechartsTooltip />\r\n          <ReferenceLine y={0} stroke=\"#555\" />\r\n          <Legend />\r\n          <Bar dataKey=\"D\" fill=\"#169c16\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#af2928\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradeBlock(type, grade) {\r\n    const { profile } = this.props;\r\n    const obj = profile.progress[type];\r\n    const typeLetter = type === 'double' ? 'D' : 'S';\r\n    const progr = Math.floor((obj[`${grade}-bonus-level-coef`] || 0) * 100);\r\n    const minNumber = obj[`${grade}-bonus-level-min-number`];\r\n    const currentNumber = obj[`${grade}-bonus-level-achieved-number`];\r\n    const levelString = obj[`${grade}-bonus-level`]\r\n      ? `${typeLetter}${obj[`${grade}-bonus-level`]}`\r\n      : '?';\r\n    return (\r\n      <div className=\"grade-block\">\r\n        <div className=\"grade-letter\">\r\n          <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n        </div>\r\n        <div className=\"grade-level\">{levelString}</div>\r\n        <div className=\"grade-progress\">\r\n          {progr}% ({progr === 100 ? minNumber : currentNumber}/{minNumber})\r\n        </div>\r\n        <div\r\n          className={classNames('progress-background', {\r\n            complete: progr === 100,\r\n            zero: progr === 0,\r\n          })}\r\n          style={{\r\n            height: `${progr}%`,\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderAchievement(achName, achievement) {\r\n    const Icon = achievements[achName].icon;\r\n    const description = achievements[achName].description;\r\n    return (\r\n      <Tooltip\r\n        key={achName}\r\n        content={<div>{description}</div>}\r\n        tooltipClassName=\"pumpking-tooltip achievement-tooltip\"\r\n      >\r\n        <div className=\"ach-block\">\r\n          {Icon && (\r\n            <div className=\"ach-icon\">\r\n              <Icon />\r\n            </div>\r\n          )}\r\n          <div className=\"ach-name\">{achName}</div>\r\n          <div\r\n            className={classNames('progress-background', {\r\n              complete: achievement.progress === 100,\r\n              zero: achievement.progress === 0,\r\n            })}\r\n            style={{\r\n              height: `${Math.round(achievement.progress)}%`,\r\n            }}\r\n          />\r\n        </div>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  renderProfile() {\r\n    const { profile, otherPlayers, filter } = this.props;\r\n    const { isLevelGraphCombined } = this.state;\r\n    const expProgress = profile.expRankNext\r\n      ? (profile.exp - profile.expRank.threshold) /\r\n        (profile.expRankNext.threshold - profile.expRank.threshold)\r\n      : 100;\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"profile-header\">\r\n          <div className=\"profile-name text-with-header\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile.lastResultDate ? getTimeAgo(profile.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n          <div className=\"_flex-fill\"></div>\r\n          <div className=\"text-with-header -select\">\r\n            <div className=\"text-header\">сравнить с</div>\r\n            <div>\r\n              <Select\r\n                closeMenuOnSelect\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                options={otherPlayers}\r\n                onChange={(value) => {\r\n                  this.props.history.push(\r\n                    routes.profile.compare.getPath({ id: profile.id, compareToId: value.id })\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header _flex-row _align-center\">\r\n            <span>опыт</span>\r\n            <div className=\"_flex-fill\" />\r\n            <div onClick={this.onShowFaq} className=\"_clickable\">\r\n              <FaQuestionCircle onClick={this.onShowFaq} />\r\n            </div>\r\n            <ReactModal\r\n              ariaHideApp={false}\r\n              className=\"Modal faq-modal\"\r\n              overlayClassName=\"Overlay\"\r\n              isOpen={this.state.showFaq}\r\n              onRequestClose={this.onHideFaq}\r\n            >\r\n              <div className=\"close-btn\" onClick={this.onHideFaq}>\r\n                <FaTimes />\r\n              </div>{' '}\r\n              <ExpFaq />\r\n            </ReactModal>\r\n          </div>\r\n          <div className=\"exp-range\">\r\n            <div className=\"rank exp-rank\">\r\n              {getRankImg(profile.expRank)}\r\n              {profile.expRank && <div>{profile.expRank.threshold}</div>}\r\n            </div>\r\n            <div className=\"exp-line-with-label\">\r\n              <div className=\"exp-label\">\r\n                {profile.expRankNext ? (\r\n                  <>\r\n                    <span className=\"taken-num\">\r\n                      {Math.round(profile.exp - profile.expRank.threshold)}\r\n                    </span>\r\n                    {` / ${profile.expRankNext.threshold - profile.expRank.threshold}`}\r\n                  </>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"exp-line\">\r\n                <div className=\"taken\" style={{ width: Math.floor(100 * expProgress) + '%' }}></div>\r\n                <div\r\n                  className=\"rest\"\r\n                  style={{ width: 100 - Math.ceil(100 * expProgress) + '%' }}\r\n                ></div>\r\n              </div>\r\n              <div className=\"exp-label\">\r\n                total: <span className=\"taken-num\">{Math.round(profile.exp)}</span>\r\n              </div>\r\n            </div>\r\n            {profile.expRankNext && (\r\n              <div className=\"rank exp-rank\">\r\n                {getRankImg(profile.expRankNext)}\r\n                {profile.expRankNext && <div>{profile.expRankNext.threshold}</div>}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              {!isLevelGraphCombined ? (\r\n                <>\r\n                  <div className=\"profile-section-2\">\r\n                    <div className=\"profile-sm-section-header flex\">\r\n                      <span>уровни</span>\r\n                      <div className=\"toggle-holder\">\r\n                        <Toggle\r\n                          className=\"combine-toggle\"\r\n                          checked={isLevelGraphCombined}\r\n                          onChange={() =>\r\n                            this.setState((state) => ({\r\n                              isLevelGraphCombined: !state.isLevelGraphCombined,\r\n                            }))\r\n                          }\r\n                        >\r\n                          объединить графики\r\n                        </Toggle>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"chart-container\">{this.renderLevels()}</div>\r\n                  </div>\r\n                  <div className=\"profile-section-2\">\r\n                    <div className=\"profile-sm-section-header\">\r\n                      <span>оценки</span>\r\n                    </div>\r\n                    <div className=\"chart-container\">{this.renderGrades()}</div>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div className=\"profile-section-2\">\r\n                  <div className=\"profile-sm-section-header flex\">\r\n                    <span>оценки</span>\r\n                    <div className=\"toggle-holder\">\r\n                      <Toggle\r\n                        className=\"combine-toggle\"\r\n                        checked={isLevelGraphCombined}\r\n                        onChange={() =>\r\n                          this.setState((state) => ({\r\n                            isLevelGraphCombined: !state.isLevelGraphCombined,\r\n                          }))\r\n                        }\r\n                      >\r\n                        объединить графики\r\n                      </Toggle>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"chart-container single-double-labels\">\r\n                    {this.renderGradesWithLevels()}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>эло</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderRankingHistory()}</div>\r\n                {/* <div className=\"chart-container\">{this.renderAccuracyPoints()}</div> */}\r\n              </div>\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>место в топе</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderPlaceHistory()}</div>\r\n                {/* <div className=\"chart-container\">{this.renderAccuracyPoints(true)}</div> */}\r\n              </div>\r\n            </div>\r\n            {(() => {\r\n              const currentRange = filter.dayRange || profile.filterRange;\r\n              const dateL = moment(currentRange[0] * 1000 * 60 * 60 * 24).format('L');\r\n              const dateR = moment(currentRange[1] * 1000 * 60 * 60 * 24).format('L');\r\n              const l1 = Math.max(currentRange[0] - 1, profile.minMaxRange[0]);\r\n              const l2 = Math.min(currentRange[0] + 1, currentRange[1]);\r\n              const r1 = Math.max(currentRange[1] - 1, currentRange[0]);\r\n              const r2 = Math.min(currentRange[1] + 1, profile.minMaxRange[1]);\r\n              return (\r\n                <div className=\"range-container\">\r\n                  <Range\r\n                    range={currentRange}\r\n                    min={profile.minMaxRange[0]}\r\n                    max={profile.minMaxRange[1]}\r\n                    onChange={this.onChangeDayRange}\r\n                  />\r\n                  <div className=\"range-controls _flex-row\">\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l1, currentRange[1]])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateL}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l2, currentRange[1]])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                    <div className=\"_flex-fill\"></div>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r1])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateR}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r2])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })()}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>точность по уровням</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderAccuracyPoints()}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\"></div>\r\n        </div>\r\n        <div className=\"profile-section progress-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>достижения по уровням</span>\r\n          </div>\r\n          <div className=\"progress-blocks-single-double\">\r\n            <div className=\"progress-block\">\r\n              <div className=\"achievements-grades single\">\r\n                {this.renderGradeBlock('single', 'A')}\r\n                {this.renderGradeBlock('single', 'A+')}\r\n                {this.renderGradeBlock('single', 'S')}\r\n                {this.renderGradeBlock('single', 'SS')}\r\n              </div>\r\n            </div>\r\n            <div className=\"progress-block\">\r\n              <div className=\"achievements-grades double\">\r\n                {this.renderGradeBlock('double', 'A')}\r\n                {this.renderGradeBlock('double', 'A+')}\r\n                {this.renderGradeBlock('double', 'S')}\r\n                {this.renderGradeBlock('double', 'SS')}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"bonus-faq\">\r\n            * для получения ачивки нужно сыграть около 10% всех чартов данного левела на нужный\r\n            грейд\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>достижения</span>\r\n          </div>\r\n          <div className=\"achievements\">\r\n            {_.keys(profile.achievements).map((achName) =>\r\n              this.renderAchievement(achName, profile.achievements[achName])\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>часто играемые чарты</span>\r\n          </div>\r\n          <MostPlayed playerId={profile.id} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, profile, error } = this.props;\r\n    DEBUG && console.log('profile:', profile);\r\n    return (\r\n      <div className=\"profile-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"btn btn-sm btn-dark btn-icon\"\r\n              onClick={this.onRefresh}\r\n            >\r\n              <FaSearch /> обновить\r\n            </button>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!isLoading && _.isEmpty(profile) && <div className=\"profile\">Profile not found</div>}\r\n          {!isLoading && !_.isEmpty(profile) && this.renderProfile()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Profile));\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport Select from 'react-select';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as RechartsTooltip,\r\n  ReferenceLine,\r\n  CartesianGrid,\r\n  Line,\r\n  ResponsiveContainer,\r\n  ScatterChart,\r\n  Scatter,\r\n} from 'recharts';\r\nimport _ from 'lodash/fp';\r\nimport memoize from 'lru-memoize';\r\n\r\n// styles\r\nimport './profile-compare.scss';\r\n\r\n// constants\r\nimport { DEBUG } from 'constants/env';\r\nimport { routes } from 'constants/routes';\r\n\r\n// components\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Range from 'components/Shared/Range';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\nimport { setProfilesFilter, resetProfilesFilter } from 'reducers/profiles';\r\n\r\n// utils\r\nimport { profileSelectorCreator } from 'utils/profiles';\r\nimport { parseDate } from 'utils/date';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { otherPlayersSelector } from 'components/Profile/Profile';\r\n\r\n// code\r\nconst BARS_MODES = {\r\n  SINGLE_TWO: 'SINGLE_TWO',\r\n  SINGLE_FIVE: 'SINGLE_FIVE',\r\n  DOUBLE_TWO: 'DOUBLE_TWO',\r\n  DOUBLE_FIVE: 'DOUBLE_FIVE',\r\n  BOTH_TWO: 'BOTH_TWO',\r\n  BOTH_FIVE: 'BOTH_FIVE',\r\n};\r\nconst getCompareBars = (mode) => {\r\n  switch (mode) {\r\n    case BARS_MODES.SINGLE_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"single.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"single.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.SINGLE_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"single.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar\r\n          key=\"2\"\r\n          dataKey=\"single.p2notPlayed\"\r\n          fill=\"#899db3\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"3\"\r\n          dataKey=\"single.notPlayed\"\r\n          fill=\"#70707060\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"4\"\r\n          dataKey=\"single.p1notPlayed\"\r\n          fill=\"#bfa988\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar key=\"5\" dataKey=\"single.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    case BARS_MODES.DOUBLE_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"double.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"double.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.DOUBLE_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"double.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar\r\n          key=\"2\"\r\n          dataKey=\"double.p2notPlayed\"\r\n          fill=\"#899db3\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"3\"\r\n          dataKey=\"double.notPlayed\"\r\n          fill=\"#70707060\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"4\"\r\n          dataKey=\"double.p1notPlayed\"\r\n          fill=\"#bfa988\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar key=\"5\" dataKey=\"double.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    case BARS_MODES.BOTH_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"all.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"all.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.BOTH_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"all.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"2\" dataKey=\"all.p2notPlayed\" fill=\"#899db3\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"3\" dataKey=\"all.notPlayed\" fill=\"#70707060\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"4\" dataKey=\"all.p1notPlayed\" fill=\"#bfa988\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"5\" dataKey=\"all.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst MIN_GRAPH_HEIGHT = undefined;\r\n\r\nconst profile1Selector = profileSelectorCreator('id');\r\nconst profile2Selector = profileSelectorCreator('compareToId');\r\n\r\nconst getCombinedData = memoize()((p1, p2, tracklist) => {\r\n  if (!p1 || !p2) {\r\n    return {};\r\n  }\r\n  let rc1 = p1.ratingChanges[0].rating;\r\n  let rc2 = p2.ratingChanges[0].rating;\r\n  const allRC = _.flow(\r\n    _.sortBy('date'),\r\n    _.map((item) => {\r\n      if (item.rating) {\r\n        rc1 = item.rating;\r\n      }\r\n      if (item.rating2) {\r\n        rc2 = item.rating2;\r\n      }\r\n      return {\r\n        rating1: rc1,\r\n        rating2: rc2,\r\n        date: item.date,\r\n      };\r\n    }),\r\n    _.sortedUniqBy('date')\r\n  )([\r\n    ...p1.ratingChanges,\r\n    ...p2.ratingChanges.map((it) => ({ date: it.date, rating2: it.rating })),\r\n  ]);\r\n\r\n  rc1 = p1.placesChanges[0].place;\r\n  rc2 = p2.placesChanges[0].place;\r\n  const allPC = _.flow(\r\n    _.sortBy('date'),\r\n    _.map((item) => {\r\n      if (item.place) {\r\n        rc1 = item.place;\r\n      }\r\n      if (item.place2) {\r\n        rc2 = item.place2;\r\n      }\r\n      return {\r\n        place1: rc1,\r\n        place2: rc2,\r\n        date: item.date,\r\n      };\r\n    })\r\n  )([...p1.placesChanges, ...p2.placesChanges.map((it) => ({ date: it.date, place2: it.place }))]);\r\n\r\n  const perLevelComparison = _.fromPairs(Array.from({ length: 28 }).map((x, i) => [i + 1, {}]));\r\n  _.keys(perLevelComparison).forEach((level) => {\r\n    const charts = _.flow(\r\n      _.map('chart'),\r\n      _.uniqBy('sharedChartId')\r\n    )([...p1.resultsByLevel[level], ...p2.resultsByLevel[level]]);\r\n    const data = {\r\n      x: level,\r\n      all: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        // notPlayedHalf: 0,\r\n        twoBars: {},\r\n      },\r\n      double: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        twoBars: {},\r\n      },\r\n      single: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        twoBars: {},\r\n      },\r\n    };\r\n    charts.forEach((chart) => {\r\n      const p1index = chart.results.findIndex((r) => r.playerId === p1.id);\r\n      const p2index = chart.results.findIndex((r) => r.playerId === p2.id);\r\n      const perType = chart.chartType.startsWith('D') ? data.double : data.single;\r\n      if (p1index < 0 && p2index < 0) {\r\n        console.log('wtf?');\r\n      } else if (p1index < 0) {\r\n        data.all.p1notPlayed++;\r\n        perType.p1notPlayed++;\r\n      } else if (p2index < 0) {\r\n        data.all.p2notPlayed++;\r\n        perType.p2notPlayed++;\r\n      } else if (p1index < p2index) {\r\n        data.all.p1win++;\r\n        perType.p1win++;\r\n      } else if (p2index < p1index) {\r\n        data.all.p2win++;\r\n        perType.p2win++;\r\n      }\r\n    });\r\n\r\n    const normalizeTwo = (dataObj) => {\r\n      const totalPlayed = dataObj.p1win + dataObj.p2win || 1; // in case of divide by 0\r\n      dataObj.twoBars.p1win = dataObj.p1win / totalPlayed;\r\n      dataObj.twoBars.p2win = dataObj.p2win / totalPlayed;\r\n    };\r\n    normalizeTwo(data.all);\r\n    normalizeTwo(data.single);\r\n    normalizeTwo(data.double);\r\n\r\n    const normalizeFive = (dataObj, total) => {\r\n      dataObj.p1win = dataObj.p1win / total;\r\n      dataObj.p1notPlayed = dataObj.p1notPlayed / total;\r\n      dataObj.p2win = dataObj.p2win / total;\r\n      dataObj.p2notPlayed = dataObj.p2notPlayed / total;\r\n      dataObj.notPlayed =\r\n        1 - dataObj.p1win - dataObj.p1notPlayed - dataObj.p2win - dataObj.p2notPlayed;\r\n      // dataObj.notPlayedHalf = dataObj.notPlayed / 2;\r\n    };\r\n    normalizeFive(data.all, tracklist.chartLevels[level]);\r\n    normalizeFive(data.double, tracklist.doublesLevels[level]);\r\n    normalizeFive(data.single, tracklist.singlesLevels[level]);\r\n\r\n    perLevelComparison[level] = data;\r\n  });\r\n\r\n  return {\r\n    ratingChanges: allRC,\r\n    placesChanges: allPC,\r\n    perLevelComparison: _.values(perLevelComparison),\r\n  };\r\n});\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const profile1 = profile1Selector(state, props);\r\n  const profile2 = profile2Selector(state, props);\r\n  return {\r\n    profile: profile1,\r\n    profile2,\r\n    otherPlayers: otherPlayersSelector(state, props),\r\n    combinedData: getCombinedData(profile1, profile2, state.tracklist.data),\r\n    tracklist: state.tracklist.data,\r\n    filter: state.profiles.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading:\r\n      state.results.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setProfilesFilter,\r\n  resetProfilesFilter,\r\n};\r\n\r\nclass ProfileCompare extends Component {\r\n  static propTypes = {\r\n    profile: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    profile: {},\r\n    profile2: {},\r\n    combinedData: {},\r\n  };\r\n\r\n  state = {\r\n    isLevelGraphCombined: true,\r\n    compareBarsMode: BARS_MODES.BOTH_TWO,\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onChangeDayRange = (range) => {\r\n    const { filter } = this.props;\r\n    this.props.setProfilesFilter({\r\n      ...filter,\r\n      dayRange: range,\r\n    });\r\n  };\r\n\r\n  rhMargin = { top: 5, bottom: 5, right: 5, left: 0 };\r\n  rhXDomain = ['dataMin', 'dataMax'];\r\n  rhYDomain = ['dataMin - 100', 'dataMax + 100'];\r\n  rhXTickFormatter = (value) => parseDate(value).toLocaleDateString();\r\n  rhTooltip = ({ active, payload, label }) => {\r\n    const { profile, profile2 } = this.props;\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n    if (!payload || !payload[0]) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"history-tooltip\">\r\n        <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n        {payload[1] && (\r\n          <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n            {p1Name}: {Math.round(payload[1].value)}\r\n          </div>\r\n        )}\r\n        {payload[0] && (\r\n          <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n            {p2Name}: {Math.round(payload[0].value)}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderRankingHistory() {\r\n    const { combinedData } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={combinedData.ratingChanges} margin={this.rhMargin}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={this.rhXDomain}\r\n            tickFormatter={this.rhXTickFormatter}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={this.rhYDomain}\r\n            tickFormatter={Math.round}\r\n            width={40}\r\n          />\r\n          <ReferenceLine y={1000} stroke=\"white\" />\r\n          <RechartsTooltip isAnimationActive={false} content={this.rhTooltip} />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating2\"\r\n            stroke=\"#ffd388\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating1\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  circleShape = (args) => (\r\n    <circle key={args.key} cx={args.cx} cy={args.cy} r={4} fill={args.fill}></circle>\r\n  );\r\n  renderAccuracyPoints(useProfile2 = false) {\r\n    const { profile, profile2 } = this.props;\r\n\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <ScatterChart margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"[0]\"\r\n            type=\"number\"\r\n            domain={[1, 28]}\r\n            tickFormatter={(value) => Math.round(value)}\r\n            ticks={[1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27]}\r\n          />\r\n          <YAxis\r\n            dataKey=\"[1]\"\r\n            type=\"number\"\r\n            domain={[0, 100]}\r\n            width={40}\r\n            tickFormatter={(value) => Math.round(value) + '%'}\r\n          />\r\n          <Scatter\r\n            shape={this.circleShape}\r\n            data={(useProfile2 ? profile2 : profile).accuracyPointsRaw}\r\n            fill={useProfile2 ? '#ffd388' : '#88d3ff'}\r\n          />\r\n        </ScatterChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderPlaceHistory() {\r\n    const { combinedData, profile, profile2 } = this.props;\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart\r\n          data={combinedData.placesChanges}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={(value) => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={[1, (dataMax) => (dataMax < 3 ? dataMax + 2 : dataMax + 1)]}\r\n            interval={0}\r\n            reversed\r\n            width={40}\r\n          />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload[1] && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n                      {p1Name}: #{payload[1].value}\r\n                    </div>\r\n                  )}\r\n                  {payload[0] && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n                      {p2Name}: #{payload[0].value}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place2\"\r\n            stroke=\"#ffd388\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place1\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  plcMargin = { top: 5, bottom: 5, right: 5, left: 0 };\r\n  plcTooltip = ({ active, payload, label }) => {\r\n    const { profile, profile2 } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n    const isTwo = [BARS_MODES.SINGLE_TWO, BARS_MODES.DOUBLE_TWO, BARS_MODES.BOTH_TWO].includes(\r\n      compareBarsMode\r\n    );\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n\r\n    if (!payload || !payload[0]) {\r\n      return null;\r\n    }\r\n    const renderLegendItem = (item, label) => (\r\n      <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n        {label}: {Math.round(_.get(item.dataKey, item.payload) * 100)}%\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"history-tooltip\">\r\n        <div>Level: {payload[0].payload.x}</div>\r\n        {renderLegendItem(payload[0], `${p1Name} wins`)}\r\n        {!isTwo && renderLegendItem(payload[1], `${p2Name} has no score`)}\r\n        {!isTwo && renderLegendItem(payload[2], `Both have no score`)}\r\n        {!isTwo && renderLegendItem(payload[3], `${p1Name} has no score`)}\r\n        {renderLegendItem(isTwo ? payload[1] : payload[4], `${p2Name} wins`)}\r\n      </div>\r\n    );\r\n  };\r\n  plcXDomain = [0, 1];\r\n  plcXTicks = [0, 0.5, 1];\r\n  plcXFormatter = (x) => `${Math.round(x * 100)}%`;\r\n\r\n  renderPerLevelComparison() {\r\n    const { combinedData } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" aspect={0.7}>\r\n        <BarChart\r\n          layout=\"vertical\"\r\n          data={[...combinedData.perLevelComparison]}\r\n          margin={this.plcMargin}\r\n        >\r\n          <RechartsTooltip isAnimationActive={false} content={this.plcTooltip} />\r\n          <YAxis reversed dataKey=\"x\" type=\"category\" width={23} />\r\n          <XAxis\r\n            type=\"number\"\r\n            domain={this.plcXDomain}\r\n            ticks={this.plcXTicks}\r\n            tickFormatter={this.plcXFormatter}\r\n          />\r\n          <ReferenceLine x={0.5} stroke=\"#666\" />\r\n          {getCompareBars(compareBarsMode)}\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderProfile() {\r\n    const { profile, profile2, filter, otherPlayers } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"profile-header\">\r\n          <div className=\"profile-name text-with-header blue\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile.lastResultDate ? getTimeAgo(profile.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n          <div className=\"_flex-fill\"></div>\r\n          <div className=\"text-with-header -select\">\r\n            <div className=\"text-header\">сравнить с</div>\r\n            <div>\r\n              <Select\r\n                closeMenuOnSelect\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                options={otherPlayers}\r\n                onChange={(value) => {\r\n                  this.props.history.push(\r\n                    routes.profile.compare.getPath({ id: profile.id, compareToId: value.id })\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-header right-align\">\r\n          <div className=\"profile-name text-with-header orange\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile2.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile2.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile2.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile2.lastResultDate ? getTimeAgo(profile2.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header flex\">\r\n                  <span>победы по уровням</span>\r\n                </div>\r\n                <div className=\"profile-sm-section-header flex\">\r\n                  {(() => {\r\n                    const isTwo = [\r\n                      BARS_MODES.SINGLE_TWO,\r\n                      BARS_MODES.DOUBLE_TWO,\r\n                      BARS_MODES.BOTH_TWO,\r\n                    ].includes(compareBarsMode);\r\n                    return (\r\n                      <div className=\"toggle-holder\">\r\n                        <Toggle\r\n                          className=\"combine-toggle\"\r\n                          checked={!isTwo}\r\n                          onChange={() =>\r\n                            this.setState((state) => ({\r\n                              compareBarsMode: {\r\n                                [BARS_MODES.SINGLE_TWO]: BARS_MODES.SINGLE_FIVE,\r\n                                [BARS_MODES.DOUBLE_TWO]: BARS_MODES.DOUBLE_FIVE,\r\n                                [BARS_MODES.BOTH_TWO]: BARS_MODES.BOTH_FIVE,\r\n                                [BARS_MODES.SINGLE_FIVE]: BARS_MODES.SINGLE_TWO,\r\n                                [BARS_MODES.DOUBLE_FIVE]: BARS_MODES.DOUBLE_TWO,\r\n                                [BARS_MODES.BOTH_FIVE]: BARS_MODES.BOTH_TWO,\r\n                              }[state.compareBarsMode],\r\n                            }))\r\n                          }\r\n                        >\r\n                          подробно\r\n                        </Toggle>\r\n                        <div className=\"tabs-holder\">\r\n                          <ToggleButton\r\n                            text=\"все\"\r\n                            active={[BARS_MODES.BOTH_TWO, BARS_MODES.BOTH_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={() => {\r\n                              this.setState((state) => ({\r\n                                compareBarsMode: isTwo ? BARS_MODES.BOTH_TWO : BARS_MODES.BOTH_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                          <ToggleButton\r\n                            text=\"синглы\"\r\n                            active={[BARS_MODES.SINGLE_TWO, BARS_MODES.SINGLE_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={(active) => {\r\n                              this.setState((state) => ({\r\n                                compareBarsMode: isTwo\r\n                                  ? BARS_MODES.SINGLE_TWO\r\n                                  : BARS_MODES.SINGLE_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                          <ToggleButton\r\n                            text=\"даблы\"\r\n                            active={[BARS_MODES.DOUBLE_TWO, BARS_MODES.DOUBLE_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={(active) => {\r\n                              this.setState((state) => ({\r\n                                compareBarsMode: isTwo\r\n                                  ? BARS_MODES.DOUBLE_TWO\r\n                                  : BARS_MODES.DOUBLE_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })()}\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderPerLevelComparison()}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>эло</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderRankingHistory()}</div>\r\n              </div>\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>место в топе</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderPlaceHistory()}</div>\r\n              </div>\r\n            </div>\r\n            {(() => {\r\n              const currentRange = filter.dayRange || profile.filterRange;\r\n              const dateL = moment(currentRange[0] * 1000 * 60 * 60 * 24).format('L');\r\n              const dateR = moment(currentRange[1] * 1000 * 60 * 60 * 24).format('L');\r\n              const l1 = Math.max(currentRange[0] - 1, profile.minMaxRange[0]);\r\n              const l2 = Math.min(currentRange[0] + 1, currentRange[1]);\r\n              const r1 = Math.max(currentRange[1] - 1, currentRange[0]);\r\n              const r2 = Math.min(currentRange[1] + 1, profile.minMaxRange[1]);\r\n              return (\r\n                <div className=\"range-container\">\r\n                  <Range\r\n                    range={currentRange}\r\n                    min={profile.minMaxRange[0]}\r\n                    max={profile.minMaxRange[1]}\r\n                    onChange={this.onChangeDayRange}\r\n                  />\r\n                  <div className=\"range-controls _flex-row\">\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l1, currentRange[1]])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateL}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l2, currentRange[1]])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                    <div className=\"_flex-fill\"></div>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r1])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateR}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r2])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })()}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>точность по уровням</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderAccuracyPoints()}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>точность по уровням</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderAccuracyPoints(true)}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, profile, error } = this.props;\r\n    DEBUG && console.log('profile:', profile);\r\n    return (\r\n      <div className=\"profile-compare-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"btn btn-sm btn-dark btn-icon\"\r\n              onClick={this.onRefresh}\r\n            >\r\n              <FaSearch /> обновить\r\n            </button>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!isLoading && _.isEmpty(profile) && <div className=\"profile\">Profile not found</div>}\r\n          {!isLoading && !_.isEmpty(profile) && this.renderProfile()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProfileCompare));\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\nimport { RESET } from './resetAction';\r\n\r\nconst LOADING = `USER/LOADING`;\r\nconst SUCCESS = `USER/SUCCESS`;\r\nconst ERROR = `USER/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        data: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: null,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    case RESET:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchUser = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/profile` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport { resetUser } from './resetAction';\r\n","import cookies from 'browser-cookies';\r\n\r\nimport { postJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport { fetchUser, resetUser } from 'reducers/user';\r\n\r\nconst LOADING = `LOGIN/LOADING`;\r\nconst SUCCESS = `LOGIN/SUCCESS`;\r\nconst ERROR = `LOGIN/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n  error: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        data: null,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: null,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const login = googleResponse => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        postJson({\r\n          url: `${HOST}/login/google`,\r\n          body: { token: googleResponse.tokenId },\r\n        })\r\n      );\r\n      cookies.set('session', data.session, { expires: 30 });\r\n      dispatch({ type: SUCCESS, data });\r\n      dispatch(fetchUser());\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    dispatch(resetUser());\r\n    try {\r\n      const data = await dispatch(\r\n        postJson({\r\n          url: `${HOST}/logout`,\r\n        })\r\n      );\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './top-bar.scss';\r\n\r\n// routes\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport * as loginACs from 'reducers/login';\r\n\r\n// redux\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoadingLogin: state.login.isLoading,\r\n    isLoadingUser: state.user.isLoading,\r\n    user: state.user.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login: loginACs.login,\r\n  logout: loginACs.logout,\r\n};\r\n\r\nfunction TopBar({ isLoadingLogin, isLoadingUser, user, login, logout }) {\r\n  return (\r\n    <header className=\"top-bar\">\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <NavLink exact to={routes.leaderboard.path}>\r\n              leaderboards\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact to={routes.ranking.path}>\r\n              ranking\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact to={routes.tournaments.path}>\r\n              tournaments\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact to={routes.songs.path}>\r\n              songs\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div className=\"_flex-fill\" />\r\n      <div className=\"login-container\">\r\n        <NavLink\r\n          className=\"player-info\"\r\n          exact\r\n          to={routes.profile.getPath({ id: _.get('player.id', user) })}\r\n        >\r\n          {_.getOr('', 'player.nickname', user)}\r\n        </NavLink>\r\n        <button\r\n          className=\"btn btn-dark btn-icon btn-sm\"\r\n          onClick={logout}\r\n          disabled={isLoadingLogin || isLoadingUser}\r\n        >\r\n          <span> logout</span>\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { FaGoogle } from 'react-icons/fa';\r\nimport Emoji from 'react-emoji-render';\r\n\r\nimport './login-screen.scss';\r\n\r\n// reducers\r\nimport * as loginACs from 'reducers/login';\r\n\r\n// redux\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoading: state.login.isLoading,\r\n    error: state.login.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login: loginACs.login,\r\n};\r\n\r\nfunction LoginScreen({ isLoading, error, login }) {\r\n  const [isClown, setClown] = useState(false);\r\n  const onGoogleResponse = res => {\r\n    if (res.error) {\r\n      console.log('Google login response error:', res);\r\n    } else {\r\n      login(res);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <div className=\"site-name\">pumpking</div>\r\n      <div className=\"login-button\">\r\n        <GoogleLogin\r\n          clientId=\"197132042723-cmibep21qf6dald9l2l01rif7l5dtd4s.apps.googleusercontent.com\"\r\n          buttonText=\"Login\"\r\n          onSuccess={onGoogleResponse}\r\n          onFailure={onGoogleResponse}\r\n          cookiePolicy={'single_host_origin'}\r\n          render={({ onClick, disabled }) => (\r\n            <button\r\n              className=\"btn btn-dark btn-icon btn-sm\"\r\n              onClick={onClick}\r\n              disabled={disabled || isLoading}\r\n            >\r\n              <FaGoogle />\r\n              <span> login</span>\r\n            </button>\r\n          )}\r\n        />\r\n      </div>\r\n      {error && <div className=\"error\">{error.message}</div>}\r\n      <div className=\"footer\">\r\n        By logging in, you agree to our{' '}\r\n        {isClown ? (\r\n          <Emoji text=\"🤡\" className=\"clown\" />\r\n        ) : (\r\n          <span onClick={() => setClown(true)} className=\"link-style\">\r\n            Privacy Policy\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginScreen);\r\n","export const TYPES = {\r\n  ACHIEVEMENT: 'ACHIEVEMENT',\r\n  RANK_UP: 'RANK_UP',\r\n};\r\n","import _ from 'lodash/fp';\r\n\r\nconst ADD_POPUP = `POPUPS/ADD`;\r\nconst REMOVE_POPUP = `POPUPS/REMOVE`;\r\n\r\nconst ID_PREFIX = 'popup';\r\n\r\nconst initialState = {\r\n  popups: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_POPUP:\r\n      const id = _.uniqueId(ID_PREFIX);\r\n      return {\r\n        ...state,\r\n        popups: [\r\n          ...state.popups,\r\n          {\r\n            id,\r\n            type: action.popupType,\r\n            ..._.pick(['parameters', 'fadeIn', 'fadeOut', 'timeout', 'persistent'], action),\r\n          },\r\n        ],\r\n      };\r\n    case REMOVE_POPUP:\r\n      return {\r\n        ...state,\r\n        popups: _.remove({ id: action.id }, state.popups),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addPopup = ({ type, parameters, fadeIn, fadeOut, timeout, persistent }) => {\r\n  return { type: ADD_POPUP, popupType: type, parameters, fadeIn, fadeOut, timeout, persistent };\r\n};\r\n\r\nexport const removePopup = ({ id }) => {\r\n  return { type: REMOVE_POPUP, id };\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { GiAchievement } from 'react-icons/gi';\r\nimport classNames from 'classnames';\r\n\r\nimport { achievements } from 'utils/achievements';\r\n\r\nconst renderAchievement = (achName, progress) => {\r\n  const Icon = achievements[achName].icon;\r\n  return (\r\n    <div className=\"ach-block\">\r\n      {Icon && (\r\n        <div className=\"ach-icon\">\r\n          <Icon />\r\n        </div>\r\n      )}\r\n      <div className=\"ach-name\">{achName}</div>\r\n      <div\r\n        className={classNames('progress-background', {\r\n          complete: progress === 100,\r\n          zero: progress === 0,\r\n        })}\r\n        style={{\r\n          height: `${Math.round(progress)}%`,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AchievementPopup = ({ playerName, achievementName, progress }) => {\r\n  const [progressNumber, setProgressNumber] = useState(progress[0]);\r\n\r\n  useEffect(() => {\r\n    setProgressNumber(progress[1]);\r\n  }, []); // eslint-disable-line\r\n\r\n  return (\r\n    <div className=\"achievement-popup popup\">\r\n      <div className=\"player\">\r\n        <GiAchievement />\r\n        <span>{playerName}</span>\r\n        <GiAchievement />\r\n      </div>\r\n      <div className=\"ach-holder\">{renderAchievement(achievementName, progressNumber)}</div>\r\n      <div className=\"description\">{achievements[achievementName].description}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AchievementPopup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { GiAchievement } from 'react-icons/gi';\r\nimport _ from 'lodash/fp';\r\nimport FlipMove from 'react-flip-move';\r\nimport classNames from 'classnames';\r\n\r\nconst renderPlayerLine = (pl, isCurrentPlayer) => {\r\n  return (\r\n    <div className={`closest-player ${isCurrentPlayer ? 'current-player' : ''}`}>\r\n      <div className=\"place\">#{pl.place}</div>\r\n      <div className=\"name\">{pl.name}</div>\r\n      <div className=\"elo\">{pl.rating}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RankUpPopup = ({ playerName, place: [prevPlace, currPlace], list: [prevList, currList] }) => {\r\n  const [place, setPlace] = useState(prevPlace);\r\n  const [list, setList] = useState(prevList);\r\n\r\n  useEffect(() => {\r\n    setList(currList);\r\n    setPlace(currPlace);\r\n  }, []); // eslint-disable-line\r\n\r\n  const listTop = Math.min(0, Math.max(-60 * (_.size(list) - 7), -60 * (place - 4)));\r\n  return (\r\n    <div className=\"rank-up-popup popup\">\r\n      <div className=\"player\">\r\n        <GiAchievement />\r\n        <span>{playerName}</span>\r\n        <GiAchievement />\r\n      </div>\r\n      <div className=\"ranking-holder\">\r\n        <div className=\"moving-list\" style={{ top: listTop }}>\r\n          <FlipMove duration={4500} delay={2000} maintainContainerHeight>\r\n            {list.map((pl, index) => {\r\n              return (\r\n                <div\r\n                  key={pl.id}\r\n                  className={classNames('player-block', { current: index === place - 1 })}\r\n                >\r\n                  {renderPlayerLine(pl, index === place - 1)}\r\n                </div>\r\n              );\r\n            })}\r\n          </FlipMove>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankUpPopup;\r\n","import React, { useEffect, useCallback, useState, useRef } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport ReactModal from 'react-modal';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './popups.scss';\r\n\r\nimport { TYPES } from 'constants/popups';\r\n\r\nimport { removePopup } from 'reducers/popups';\r\n\r\nimport AchievementPopup from './AchievementPopup';\r\nimport RankUpPopup from './RankUpPopup';\r\n\r\nconst popupByType = {\r\n  [TYPES.ACHIEVEMENT]: AchievementPopup,\r\n  [TYPES.RANK_UP]: RankUpPopup,\r\n};\r\n\r\nconst popupStyles = {\r\n  overlay: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0.1)',\r\n  },\r\n  content: {\r\n    top: null,\r\n    bottom: null,\r\n    left: null,\r\n    right: null,\r\n    position: null,\r\n    borderRadius: null,\r\n    padding: null,\r\n    background: null,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    height: '100%',\r\n    transition: '2.5s opacity ease',\r\n    opacity: 1,\r\n  },\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    popups: state.popups.popups,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  removePopup,\r\n};\r\n\r\nconst Popups = ({ popups, removePopup }) => {\r\n  const [visiblePopup, setVisiblePopup] = useState(null);\r\n  const contentRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (popups.length > 0) {\r\n      const popup = popups[0];\r\n      setVisiblePopup(popup);\r\n      if (!popup.persistent) {\r\n        setTimeout(() => {\r\n          if (popup && popup.fadeOut) {\r\n            contentRef.current.style.opacity = 0;\r\n            setTimeout(() => {\r\n              setVisiblePopup(null);\r\n              removePopup(popup);\r\n            }, 2500);\r\n          } else {\r\n            setVisiblePopup(null);\r\n            removePopup(popup);\r\n          }\r\n        }, popup.timeout || 6000);\r\n      }\r\n    } else {\r\n      setVisiblePopup(null);\r\n    }\r\n  }, [popups, removePopup]);\r\n\r\n  const onAfterOpen = useCallback(() => {\r\n    if (visiblePopup && visiblePopup.fadeIn) {\r\n      contentRef.current.style.opacity = 1;\r\n    }\r\n  }, [visiblePopup]);\r\n\r\n  let style = popupStyles;\r\n  let popupBody = null;\r\n  if (visiblePopup) {\r\n    const PopupComponent = popupByType[visiblePopup.type];\r\n    popupBody = PopupComponent ? (\r\n      <PopupComponent {...visiblePopup.parameters} />\r\n    ) : (\r\n      <div>{JSON.stringify(visiblePopup)}</div>\r\n    );\r\n\r\n    if (visiblePopup.fadeIn) {\r\n      style = _.set('content.opacity', 0, popupStyles);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"popups-holder\">\r\n      <ReactModal\r\n        isOpen={!!visiblePopup}\r\n        contentRef={(ref) => (contentRef.current = ref)}\r\n        onAfterOpen={onAfterOpen}\r\n        style={style}\r\n      >\r\n        {popupBody}\r\n      </ReactModal>\r\n    </div>\r\n  );\r\n};\r\nPopups.propTypes = {\r\n  popups: toBe.array,\r\n  removePopup: toBe.func,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Popups);\r\n","import { fetchJson } from 'utils/fetch';\r\nimport queryString from 'query-string';\r\nimport _ from 'lodash/fp';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport { preprocessData } from 'components/SocketTracker/helpers';\r\n\r\nconst LOADING = `TOP_PER_SONG/LOADING`;\r\nconst SUCCESS = `TOP_PER_SONG/SUCCESS`;\r\nconst ERROR = `TOP_PER_SONG/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n  error: null,\r\n  fetchingParams: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        fetchingParams: action.fetchingParams,\r\n        data: null,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return action.fetchingParams === state.fetchingParams\r\n        ? {\r\n            ...state,\r\n            isLoading: false,\r\n            error: action.error,\r\n            data: null,\r\n            fetchingParams: null,\r\n          }\r\n        : state;\r\n    case SUCCESS:\r\n      return action.fetchingParams === state.fetchingParams\r\n        ? {\r\n            ...state,\r\n            isLoading: false,\r\n            data: action.data,\r\n            fetchingParams: null,\r\n          }\r\n        : state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTopPerSong = (songName, leftLabel, rightLabel) => {\r\n  const fetchingParams = queryString.stringify({\r\n    song_name: songName,\r\n    charts: _.compact(_.uniq([leftLabel, rightLabel])).join(','),\r\n  });\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING, fetchingParams });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/topPerSong?${fetchingParams}` }));\r\n      const processedData = _.flow(preprocessData, _.get('results'))(data);\r\n      dispatch({ type: SUCCESS, data: processedData, fetchingParams });\r\n      return processedData;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error, fetchingParams });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React, { useCallback } from 'react';\r\nimport _ from 'lodash/fp';\r\n\r\nimport { TYPES } from 'constants/popups';\r\n\r\nimport ChartLabel from 'components/Leaderboard/ChartLabel';\r\n\r\nimport { useTrackedEx } from './helpers';\r\n\r\nimport { getRankImg } from 'utils/exp';\r\nimport { labelToTypeLevel } from 'utils/leaderboards';\r\n\r\nexport const PlayerCard = ({\r\n  player,\r\n  profile,\r\n  label,\r\n  trackedData,\r\n  isLeft = false,\r\n  preferences,\r\n  topPlayersList,\r\n  addPopup,\r\n}) => {\r\n  const playersHiddenStatus = _.getOr({}, 'playersHiddenStatus', preferences);\r\n\r\n  const renderDeltaText = (n, prevN) => {\r\n    if (!prevN || prevN === n) {\r\n      return null;\r\n    }\r\n    const delta = n - prevN;\r\n    return (\r\n      <span className={`change ${delta >= 0 ? 'pos' : 'neg'}`}>\r\n        {delta < 0 ? delta.toFixed(1) : `+${delta.toFixed(1)}`}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const renderExpLine = () => {\r\n    if (!profile.expRank || !profile.exp) {\r\n      return null;\r\n    }\r\n\r\n    let takenWidth = profile.expRankNext\r\n      ? (profile.exp - profile.expRank.threshold) /\r\n        (profile.expRankNext.threshold - profile.expRank.threshold)\r\n      : 1;\r\n    const emptyWidth = 1 - takenWidth;\r\n    let diffWidth = 0;\r\n\r\n    if (trackedData.exp[1]) {\r\n      takenWidth = profile.expRankNext\r\n        ? (trackedData.exp[1] - profile.expRank.threshold) /\r\n          (profile.expRankNext.threshold - profile.expRank.threshold)\r\n        : 1;\r\n      diffWidth = 1 - emptyWidth - takenWidth;\r\n    }\r\n    return (\r\n      <div className=\"exp-line\">\r\n        <div className=\"taken\" style={{ width: Math.floor(100 * takenWidth) + '%' }}></div>\r\n        <div className=\"diff\" style={{ width: Math.ceil(100 * diffWidth) + '%' }}></div>\r\n        <div className=\"rest\" style={{ width: Math.ceil(100 * emptyWidth) + '%' }}></div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const rivals = topPlayersList.filter((pl) => !playersHiddenStatus[pl.id]);\r\n  const playerIndex = _.findIndex({ id: profile.id }, rivals);\r\n  const closestPlayers =\r\n    playerIndex < 0\r\n      ? []\r\n      : rivals.slice(Math.max(0, playerIndex - 2), Math.min(playerIndex + 3, rivals.length));\r\n\r\n  useTrackedEx({\r\n    data: topPlayersList,\r\n    resetData: profile.name,\r\n    isDataValid: useCallback(_.get('[0].rating'), []), // top list is only valid when rating is calculated\r\n    onChange: useCallback(\r\n      (prevList, currList) => {\r\n        const prevPlace = _.get('place', _.find({ id: profile.id }, prevList));\r\n        const currPlace = _.get('place', _.find({ id: profile.id }, currList));\r\n        // console.log('List update:', prevList, currList, prevPlace, currPlace);\r\n        if (prevPlace && currPlace && prevPlace > currPlace) {\r\n          // console.log('Place update:', profile.name, prevPlace, currPlace);\r\n          addPopup({\r\n            type: TYPES.RANK_UP,\r\n            fadeIn: true,\r\n            fadeOut: true,\r\n            timeout: 7500,\r\n            parameters: {\r\n              playerName: profile.name,\r\n              place: [prevPlace, currPlace],\r\n              list: [prevList, currList],\r\n            },\r\n          });\r\n        }\r\n      },\r\n      [addPopup, profile.id, profile.name]\r\n    ),\r\n  });\r\n\r\n  const [type, level] = labelToTypeLevel(label);\r\n\r\n  return (\r\n    <div className={`player-container ${isLeft ? 'left' : 'right'}`}>\r\n      {player && (\r\n        <>\r\n          {/* <div className=\"title-header\">player {isLeft ? 1 : 2}:</div> */}\r\n          <div className=\"name-with-label\">\r\n            <div className=\"name\">{profile.name || player}</div>\r\n            <div className=\"chart-label\">\r\n              <ChartLabel type={type} level={level} />\r\n            </div>\r\n          </div>\r\n          {profile.exp && profile.expRank && (\r\n            <div className=\"exp exp-rank\">\r\n              {getRankImg(profile.expRank)}\r\n              {renderExpLine()}\r\n            </div>\r\n          )}\r\n          {trackedData.exp[0] && (\r\n            <div className=\"exp-text\">\r\n              <span className=\"_grey-text\">exp:</span>\r\n              <span>{Math.round(trackedData.exp[0])}</span>\r\n              {renderDeltaText(trackedData.exp[0], trackedData.exp[1])}\r\n            </div>\r\n          )}\r\n          {trackedData.elo[0] && (\r\n            <div className=\"rating\">\r\n              <span className=\"_grey-text\">elo:</span>\r\n              <span>{Math.round(trackedData.elo[0])}</span>\r\n              {renderDeltaText(trackedData.elo[0], trackedData.elo[1])}\r\n            </div>\r\n          )}\r\n          {trackedData.pp[0] && (\r\n            <div className=\"rating\">\r\n              <span className=\"_grey-text\">pp:</span>\r\n              <span>{Math.round(trackedData.pp[0])}</span>\r\n              {renderDeltaText(trackedData.pp[0], trackedData.pp[1])}\r\n            </div>\r\n          )}\r\n          <div className=\"closest-players\">\r\n            {_.map((pl) => {\r\n              return (\r\n                <div className={`closest-player ${profile.id === pl.id ? 'current-player' : ''}`}>\r\n                  <div className=\"place\">#{pl.place}</div>\r\n                  <div className=\"name\">{pl.name}</div>\r\n                  <div className=\"elo\">{pl.rating}</div>\r\n                </div>\r\n              );\r\n            }, closestPlayers)}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState, useRef, useCallback, useMemo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport lev from 'fast-levenshtein';\r\n\r\nimport './socket.scss';\r\n\r\nimport { SOCKET_SERVER_IP } from 'constants/backend';\r\n\r\nimport Popups from 'components/Shared/Popups';\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nimport { appendNewResults } from 'reducers/results';\r\nimport { fetchTopPerSong } from 'reducers/topPerSong';\r\nimport { fetchUserPreferences } from 'reducers/preferences';\r\nimport { addPopup } from 'reducers/popups';\r\n\r\nimport { useTracked, useResetTrackedObject } from './helpers';\r\n\r\nimport { PlayerCard } from './PlayerCard';\r\nimport Chart from 'components/Leaderboard/Chart';\r\nimport { TYPES } from 'constants/popups';\r\n\r\n// code\r\nconst STATE_RESET_TIMEOUT_SEC = 5 * 60 + 10; // 5 minutes 10 seconds\r\n\r\nconst topPlayersListSelector = createSelector(\r\n  (state) => state.results.profiles,\r\n  _.flow(_.values, _.orderBy('ratingRaw', 'desc'), (items) =>\r\n    items.map((it, index) => ({ place: index + 1, ..._.pick(['id', 'name', 'rating'], it) }))\r\n  )\r\n);\r\n\r\n// redux\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.topPerSong.isLoading,\r\n    songTopData: state.topPerSong.data,\r\n    error: state.topPerSong.error,\r\n    profiles: state.results.profiles,\r\n    topPlayersList: topPlayersListSelector(state),\r\n    sharedCharts: state.results.sharedCharts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopPerSong,\r\n  appendNewResults,\r\n  addPopup,\r\n  fetchUserPreferences,\r\n};\r\n\r\nfunction TrackerApp({\r\n  isLoading,\r\n  fetchTopPerSong,\r\n  fetchUserPreferences,\r\n  appendNewResults,\r\n  songTopData,\r\n  error,\r\n  profiles,\r\n  topPlayersList,\r\n  sharedCharts = {},\r\n  addPopup,\r\n}) {\r\n  // useEffect(() => {\r\n  //   addPopup({\r\n  //     type: TYPES.ACHIEVEMENT,\r\n  //     fadeIn: true,\r\n  //     fadeOut: true,\r\n  //     // persistent: true,\r\n  //     parameters: {\r\n  //       playerName: 'grumd',\r\n  //       achievementName: 'Падовый мисс',\r\n  //       progress: [0, 100],\r\n  //     },\r\n  //   });\r\n  //   addPopup({\r\n  //     type: TYPES.ACHIEVEMENT,\r\n  //     fadeIn: true,\r\n  //     fadeOut: true,\r\n  //     parameters: {\r\n  //       playerName: 'Dino',\r\n  //       achievementName: 'Мастер фингеринга',\r\n  //       progress: [33, 66],\r\n  //     },\r\n  //   });\r\n  // }, [addPopup]);\r\n  // useEffect(() => {\r\n  //   if (_.get('[0].rating', topPlayersList)) {\r\n  //     const prevList = [...topPlayersList];\r\n  //     const p = 30,\r\n  //       c = 26;\r\n  //     const currList = _.pullAt(p - 1, topPlayersList);\r\n  //     currList.splice(c - 1, 0, topPlayersList[p - 1]);\r\n  //     addPopup({\r\n  //       type: TYPES.RANK_UP,\r\n  //       fadeIn: true,\r\n  //       fadeOut: true,\r\n  //       persistent: true,\r\n  //       parameters: {\r\n  //         playerName: 'grumd',\r\n  //         place: [p, c],\r\n  //         list: [prevList, currList],\r\n  //       },\r\n  //     });\r\n  //   }\r\n  // }, [addPopup, topPlayersList]);\r\n\r\n  // Setup\r\n  const [message, setMessage] = useState('');\r\n  const [socketErrorMessage, setSocketErrorMessage] = useState('');\r\n  const [isSocketReady, setSocketReady] = useState(false);\r\n  const [isAlive, setAlive] = useState(null);\r\n  const [leftLabel, setLeftLabel] = useState(null);\r\n  const [rightLabel, setRightLabel] = useState(null);\r\n  const [leftPlayer, setLeftPlayer] = useState(null);\r\n  const [rightPlayer, setRightPlayer] = useState(null);\r\n  const [recognizedSongName, setRecognizedSongName] = useState('');\r\n  const [leftPreferences, setLeftPreferences] = useState(null);\r\n  const [rightPreferences, setRightPreferences] = useState(null);\r\n\r\n  const resultsContainerRef = useRef(null);\r\n  const leftResultRef = useRef(null);\r\n  const rightResultRef = useRef(null);\r\n\r\n  const socketRef = useRef(null);\r\n  const timeoutResetTokenRef = useRef(null);\r\n\r\n  // Get profile objects from player names\r\n  const leftProfile = useMemo(() => {\r\n    if (!leftPlayer || _.isEmpty(profiles)) return {};\r\n    return _.minBy((p) => lev.get(p.nameArcade, leftPlayer), _.values(profiles)) || {};\r\n  }, [leftPlayer, profiles]);\r\n  const rightProfile = useMemo(() => {\r\n    if (!rightPlayer || _.isEmpty(profiles)) return {};\r\n    return _.minBy((p) => lev.get(p.nameArcade, rightPlayer), _.values(profiles)) || {};\r\n  }, [rightPlayer, profiles]);\r\n\r\n  const onChangeAchievements = (playerName) => (prevAchievement, currAchievement) => {\r\n    _.keys(prevAchievement).forEach((achievementName) => {\r\n      if (prevAchievement[achievementName].progress !== currAchievement[achievementName].progress) {\r\n        addPopup({\r\n          type: TYPES.ACHIEVEMENT,\r\n          fadeIn: true,\r\n          fadeOut: true,\r\n          parameters: {\r\n            playerName,\r\n            achievementName,\r\n            progress: [\r\n              prevAchievement[achievementName].progress,\r\n              currAchievement[achievementName].progress,\r\n            ],\r\n          },\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  // Track changes in profiles\r\n  const leftTracked = {\r\n    pp: useTracked(_.get('pp.pp', leftProfile), leftProfile.name),\r\n    elo: useTracked(leftProfile.ratingRaw, leftProfile.name),\r\n    exp: useTracked(leftProfile.exp, leftProfile.name),\r\n    expRank: useTracked(leftProfile.expRank, leftProfile.name),\r\n    achievements: useTracked(\r\n      leftProfile.achievements,\r\n      leftProfile.name,\r\n      onChangeAchievements(leftProfile.name)\r\n    ),\r\n  };\r\n  const resetLeftTracked = useResetTrackedObject(leftTracked);\r\n  const rightTracked = {\r\n    pp: useTracked(_.get('pp.pp', rightProfile), rightProfile.name),\r\n    elo: useTracked(rightProfile.ratingRaw, rightProfile.name),\r\n    exp: useTracked(rightProfile.exp, rightProfile.name),\r\n    expRank: useTracked(rightProfile.expRank, rightProfile.name),\r\n    achievements: useTracked(\r\n      rightProfile.achievements,\r\n      rightProfile.name,\r\n      onChangeAchievements(rightProfile.name)\r\n    ),\r\n  };\r\n  const resetRightTracked = useResetTrackedObject(rightTracked);\r\n\r\n  // Fetch preferences when player id changes\r\n  useEffect(() => {\r\n    if (leftProfile.id) {\r\n      fetchUserPreferences(leftProfile.id).then((response) => {\r\n        setLeftPreferences(response.preferences);\r\n      });\r\n    }\r\n  }, [leftProfile.id, fetchUserPreferences]);\r\n  useEffect(() => {\r\n    if (rightProfile.id) {\r\n      fetchUserPreferences(rightProfile.id).then((response) => {\r\n        setRightPreferences(response.preferences);\r\n      });\r\n    }\r\n  }, [rightProfile.id, fetchUserPreferences]);\r\n\r\n  // Reset the page when sockets didn't receive any messages for a long time\r\n  const restartTimeout = useCallback(() => {\r\n    setAlive(true);\r\n    if (timeoutResetTokenRef.current) {\r\n      clearTimeout(timeoutResetTokenRef.current);\r\n    }\r\n    timeoutResetTokenRef.current = setTimeout(() => {\r\n      // TODO: reset page\r\n      setAlive(false);\r\n      setLeftPlayer(null);\r\n      setRightPlayer(null);\r\n      setLeftLabel(null);\r\n      setRightLabel(null);\r\n      setRecognizedSongName('');\r\n      setLeftPreferences(null);\r\n      setRightPreferences(null);\r\n    }, STATE_RESET_TIMEOUT_SEC * 1000);\r\n  }, []);\r\n\r\n  // Start websockets\r\n  useEffect(() => {\r\n    socketRef.current = new WebSocket(SOCKET_SERVER_IP);\r\n    socketRef.current.onerror = () => {\r\n      setMessage(`Cannot connect to websocket server, please reload the page`);\r\n    };\r\n    socketRef.current.onopen = (e) => {\r\n      setSocketReady(true);\r\n    };\r\n  }, []);\r\n\r\n  // Set the onmessage callback\r\n  useEffect(() => {\r\n    socketRef.current.onmessage = (event) => {\r\n      restartTimeout();\r\n      try {\r\n        const data = event && event.data && JSON.parse(event.data);\r\n        console.log(data);\r\n\r\n        if (data.type === 'result_screen') {\r\n          console.log('Resetting tracking because received result screen');\r\n          resetLeftTracked();\r\n          resetRightTracked();\r\n          const songName = data.data.track_name;\r\n          const leftLabel = _.get('left.chart_label', data.data);\r\n          const rightLabel = _.get('right.chart_label', data.data);\r\n          const leftPlayer = _.get('left.result.player_name', data.data);\r\n          const rightPlayer = _.get('right.result.player_name', data.data);\r\n          setLeftPlayer(leftPlayer);\r\n          setRightPlayer(rightPlayer);\r\n          setLeftLabel(leftLabel);\r\n          setRightLabel(rightLabel);\r\n          setRecognizedSongName(songName);\r\n          appendNewResults(data.data.gained); // Fetch results that we don't have here yet (to calculate elo)\r\n          fetchTopPerSong(songName, leftLabel, rightLabel);\r\n        } else if (data.type === 'chart_selected') {\r\n          setSocketErrorMessage(data.data.error || '');\r\n          if (data.data.leftPlayer || data.data.rightPlayer) {\r\n            setLeftPlayer(data.data.leftPlayer);\r\n            setRightPlayer(data.data.rightPlayer);\r\n          }\r\n          if (data.data.leftLabel || data.data.rightLabel) {\r\n            setLeftLabel(data.data.leftLabel);\r\n            setRightLabel(data.data.rightLabel);\r\n            if (data.data.text) {\r\n              // If we have full info, try to fetch if needed\r\n              const newSongName = data.data.text;\r\n              setRecognizedSongName(newSongName);\r\n              console.log('song name', newSongName, recognizedSongName);\r\n              if (recognizedSongName !== newSongName) {\r\n                fetchTopPerSong(newSongName, data.data.leftLabel, data.data.rightLabel);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.log('on message error', e);\r\n        setMessage(`Error: ${e.message}`);\r\n      }\r\n    };\r\n  }, [\r\n    recognizedSongName,\r\n    fetchTopPerSong,\r\n    restartTimeout,\r\n    appendNewResults,\r\n    resetLeftTracked,\r\n    resetRightTracked,\r\n  ]);\r\n\r\n  // FOR DEBUG\r\n  // useEffect(() => {\r\n  //   if (!_.isEmpty(profiles) && !leftPlayer && !rightPlayer) {\r\n  //     socketRef.current.onmessage({\r\n  //       data:\r\n  //         '{\"type\": \"chart_selected\", \"data\": {\"text\": \"Iolite Sky\", \"leftLabel\": \"D17\", \"rightLabel\": \"S16\", \"leftPlayer\": \"GRUMD\", \"rightPlayer\": \"DINO\"}}',\r\n  //     });\r\n  //   }\r\n  // }, [profiles, leftPlayer, rightPlayer]);\r\n\r\n  // Resize the results blocks to fill the most space on the page\r\n  useEffect(() => {\r\n    // return;\r\n    if (resultsContainerRef.current && leftResultRef.current) {\r\n      if (rightResultRef.current) {\r\n        // Both refs\r\n        const left = leftResultRef.current;\r\n        const right = rightResultRef.current;\r\n        const totalSize = {\r\n          w: resultsContainerRef.current.clientWidth,\r\n          h: resultsContainerRef.current.clientHeight,\r\n        };\r\n        const scaleHH = totalSize.w / (left.offsetWidth + right.offsetWidth);\r\n        const scaleHW = totalSize.h / Math.max(left.offsetHeight, right.offsetHeight);\r\n        const scaleWH = totalSize.w / Math.max(left.offsetWidth, right.offsetWidth);\r\n        const scaleWW = totalSize.h / (left.offsetHeight + right.offsetHeight);\r\n        // console.log(scaleHH, scaleHW, scaleWH, scaleWW);\r\n        if (Math.min(scaleHH, scaleHW) > Math.min(scaleWH, scaleWW)) {\r\n          resultsContainerRef.current.style.flexDirection = 'row';\r\n          resultsContainerRef.current.style.alignItems = 'center';\r\n          if (scaleHH > scaleHW) {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleHW})`;\r\n          } else {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleHH})`;\r\n          }\r\n        } else {\r\n          resultsContainerRef.current.style.flexDirection = 'column';\r\n          resultsContainerRef.current.style.alignItems = 'center';\r\n          if (scaleWH > scaleWW) {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleWW})`;\r\n          } else {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleWH})`;\r\n          }\r\n        }\r\n      } else {\r\n        // One ref\r\n        const left = leftResultRef.current;\r\n        const totalSize = {\r\n          w: resultsContainerRef.current.clientWidth,\r\n          h: resultsContainerRef.current.clientHeight,\r\n        };\r\n        const scaleW = totalSize.w / left.offsetWidth;\r\n        const scaleH = totalSize.h / left.offsetHeight;\r\n        if (scaleW < scaleH) {\r\n          resultsContainerRef.current.style.transform = `scale(${0.98 * scaleW})`;\r\n        } else {\r\n          resultsContainerRef.current.style.transform = `scale(${0.98 * scaleH})`;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  const leftChart = _.find({ chartLabel: leftLabel }, songTopData);\r\n  const rightChart = _.find({ chartLabel: rightLabel }, songTopData);\r\n  const chartsToShow = _.uniq(_.compact([leftChart, rightChart]));\r\n\r\n  return (\r\n    <div className=\"tracker-container\">\r\n      <Popups />\r\n      <div className=\"sidebar\">\r\n        <PlayerCard\r\n          player={leftPlayer}\r\n          profile={leftProfile}\r\n          label={leftLabel}\r\n          trackedData={leftTracked}\r\n          preferences={leftPreferences}\r\n          topPlayersList={topPlayersList}\r\n          isLeft\r\n          addPopup={addPopup}\r\n        />\r\n        <PlayerCard\r\n          player={rightPlayer}\r\n          profile={rightProfile}\r\n          label={rightLabel}\r\n          trackedData={rightTracked}\r\n          preferences={rightPreferences}\r\n          topPlayersList={topPlayersList}\r\n          addPopup={addPopup}\r\n        />\r\n      </div>\r\n      <div className=\"results\" ref={resultsContainerRef}>\r\n        {(error || message) && (\r\n          <div className=\"error\">\r\n            {message}\r\n            <br />\r\n            {error && error.message}\r\n          </div>\r\n        )}\r\n        {isSocketReady &&\r\n          !leftPlayer &&\r\n          !rightPlayer &&\r\n          !socketErrorMessage &&\r\n          !isLoading &&\r\n          _.isEmpty(chartsToShow) &&\r\n          (isAlive === null ? (\r\n            <div className=\"msg\">Waiting for recognizer...</div>\r\n          ) : isAlive ? (\r\n            <div className=\"msg\">Waiting for chart select...</div>\r\n          ) : (\r\n            <div className=\"offline msg\">Recognizer is offline</div>\r\n          ))}\r\n        {isSocketReady &&\r\n          (leftLabel || rightLabel) &&\r\n          !socketErrorMessage &&\r\n          !isLoading &&\r\n          _.isEmpty(chartsToShow) &&\r\n          'No results for this chart'}\r\n        {isLoading && <Loader />}\r\n        {!isLoading &&\r\n          chartsToShow.map((chart, chartIndex) => {\r\n            const leftPlayersHiddenStatus = _.omitBy(\r\n              (v) => !v,\r\n              _.getOr({}, 'playersHiddenStatus', leftPreferences)\r\n            );\r\n            const rightPlayersHiddenStatus = _.omitBy(\r\n              (v) => !v,\r\n              _.getOr({}, 'playersHiddenStatus', rightPreferences)\r\n            );\r\n\r\n            const isHiddenInBoth = Object.keys(leftPlayersHiddenStatus).reduce(\r\n              (obj, key) => ({\r\n                ...obj,\r\n                [key]: leftPlayersHiddenStatus[key] && rightPlayersHiddenStatus[key],\r\n              }),\r\n              {}\r\n            );\r\n            return (\r\n              <Chart\r\n                ref={chartIndex === 0 ? leftResultRef : rightResultRef}\r\n                playersHiddenStatus={isHiddenInBoth}\r\n                key={chart.sharedChartId}\r\n                chart={chart}\r\n                leftProfile={leftProfile}\r\n                rightProfile={rightProfile}\r\n                isSocketView\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TrackerApp);\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TOURNAMENT/LOADING`;\r\nconst SUCCESS = `TOURNAMENT/SUCCESS`;\r\nconst ERROR = `TOURNAMENT/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: {},\r\n  error: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: {},\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchCurrentTournament = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/tournament/info` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport numeral from 'numeral';\r\n\r\nimport './tournaments.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport { fetchCurrentTournament } from 'reducers/tournament';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\nimport ChartLabel from 'components/Leaderboard/ChartLabel';\r\n\r\nimport { labelToTypeLevel } from 'utils/leaderboards';\r\n\r\nexport default function Tournaments() {\r\n  const dispatch = useDispatch();\r\n  const [selectedBracket, setSelectedBracket] = useState(null);\r\n\r\n  const tournData = useSelector((state) => state.tournament.data);\r\n  const profiles = useSelector((state) => state.results.profiles);\r\n  const isLoading = useSelector((state) => state.tournament.isLoading);\r\n  const currentPlayerId = useSelector((state) => _.get('player.id', state.user.data));\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCurrentTournament());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (currentPlayerId && !selectedBracket && _.get('brackets', tournData)) {\r\n      const bracket = _.find((br) => {\r\n        return br.playerIds.includes(currentPlayerId);\r\n      }, tournData.brackets);\r\n      bracket && setSelectedBracket(bracket);\r\n    }\r\n  }, [currentPlayerId, selectedBracket, tournData]);\r\n\r\n  if (isLoading || _.isEmpty(profiles)) {\r\n    return <Loader />;\r\n  }\r\n\r\n  const { tournament, brackets } = tournData;\r\n\r\n  if (!tournament) {\r\n    return null;\r\n  }\r\n\r\n  const date = new Date(tournament.start_date);\r\n  const monthText = date.toLocaleString('default', {\r\n    month: 'long',\r\n  });\r\n  const tournamentTitle = `${date.getFullYear()} ${monthText}`;\r\n\r\n  return (\r\n    <div className=\"tournaments-page\">\r\n      <header>{tournamentTitle}</header>\r\n      <div className=\"description\">\r\n        <div className=\"labeled-item\">\r\n          <div className=\"title\">Start date:</div>\r\n          <div className=\"text\">{new Date(tournament.start_date).toLocaleDateString()}</div>\r\n        </div>\r\n        <div className=\"labeled-item\">\r\n          <div className=\"title\">End date:</div>\r\n          <div className=\"text\">{new Date(tournament.end_date).toLocaleDateString()}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"brackets-title\">Brackets:</div>\r\n      <div className=\"brackets\">\r\n        {brackets.map((bracket) => {\r\n          return (\r\n            <div\r\n              key={bracket.name}\r\n              className={classNames('bracket', {\r\n                active: bracket.name === _.get('name', selectedBracket),\r\n              })}\r\n              onClick={() => setSelectedBracket(bracket)}\r\n            >\r\n              <div className=\"bracket-name\">{bracket.name}</div>\r\n              {bracket.charts.map((chart) => {\r\n                const [type, level] = labelToTypeLevel(chart.label);\r\n                return (\r\n                  <div className=\"chart\" key={chart.sharedChartId}>\r\n                    <ChartLabel type={type} level={level} /> {chart.trackName}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      {selectedBracket && (\r\n        <>\r\n          <div className=\"results-title\">Results:</div>\r\n          <div className=\"results\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"player-name\">player</th>\r\n                  <th className=\"total\">total</th>\r\n                  {selectedBracket.charts.map((chart) => {\r\n                    const [type, level] = labelToTypeLevel(chart.label);\r\n                    return (\r\n                      <th colSpan={3} key={chart.sharedChartId}>\r\n                        <div className=\"chart-header\">\r\n                          <ChartLabel type={type} level={level} />{' '}\r\n                          <NavLink\r\n                            exact\r\n                            to={routes.leaderboard.sharedChart.getPath({\r\n                              sharedChartId: chart.sharedChartId,\r\n                            })}\r\n                          >\r\n                            {chart.trackName}\r\n                          </NavLink>\r\n                        </div>\r\n                      </th>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {(() => {\r\n                  const players = _.flow(\r\n                    _.groupBy('player_id'),\r\n                    _.mapValues(\r\n                      _.flow(\r\n                        _.map((result) => ({\r\n                          ...result,\r\n                          columnIndex: _.findIndex(\r\n                            { sharedChartId: result.shared_chart },\r\n                            selectedBracket.charts\r\n                          ),\r\n                        })),\r\n                        _.groupBy('columnIndex')\r\n                      )\r\n                    )\r\n                  )(selectedBracket.scores);\r\n                  const charts = selectedBracket.charts.map((chart, index) => {\r\n                    return {\r\n                      ...chart,\r\n                      maxScore: _.flow(\r\n                        _.values,\r\n                        _.flatMap(index),\r\n                        _.maxBy('score'),\r\n                        _.get('score')\r\n                      )(players),\r\n                    };\r\n                  });\r\n\r\n                  const playerData = _.mapValues(\r\n                    _.flow(\r\n                      _.toPairs,\r\n                      _.map(([index, results]) => {\r\n                        const maxScore = charts[index].maxScore;\r\n                        const bestPlayerScore = _.flow(_.maxBy('score'), _.get('score'))(results);\r\n                        const percent = ((bestPlayerScore / maxScore) * 100).toFixed(1);\r\n                        return [\r\n                          index,\r\n                          {\r\n                            playerName: results[0].player_name,\r\n                            playcount: results.length,\r\n                            score: bestPlayerScore,\r\n                            percent: percent,\r\n                            percentRaw: bestPlayerScore / maxScore,\r\n                          },\r\n                        ];\r\n                      }),\r\n                      (chartResults) => {\r\n                        const totalPercentRaw = _.sumBy('[1].percentRaw', chartResults);\r\n                        return {\r\n                          infoByIndex: _.fromPairs(chartResults),\r\n                          totalPercentRaw,\r\n                          totalPercent: (totalPercentRaw * 100).toFixed(1),\r\n                        };\r\n                      }\r\n                    ),\r\n                    players\r\n                  );\r\n                  const sortedIds = _.flow(\r\n                    _.keys,\r\n                    _.orderBy((id) => playerData[id].totalPercentRaw, ['desc'])\r\n                  )(playerData);\r\n                  const noResultsIds = _.remove(\r\n                    (id) => sortedIds.includes(_.toString(id)) || !profiles[id],\r\n                    selectedBracket.playerIds\r\n                  );\r\n\r\n                  return [...sortedIds, ...noResultsIds].map((playerId) => {\r\n                    const data = playerData[playerId] || {};\r\n                    const playerName = _.get('name', profiles[playerId]) || data.playerName;\r\n                    return (\r\n                      <tr key={playerId}>\r\n                        <td className=\"player-name\">{playerName}</td>\r\n                        <td className=\"total\">{data.totalPercent || 0}</td>\r\n                        {selectedBracket.charts.map((chart, index) => {\r\n                          const info = data.infoByIndex && data.infoByIndex[index];\r\n                          return (\r\n                            <React.Fragment key={index}>\r\n                              <td>{info && `${info.percent}%`}</td>\r\n                              <td>{info && numeral(info.score).format('0,0')}</td>\r\n                              <td>{info && info.playcount}</td>\r\n                            </React.Fragment>\r\n                          );\r\n                        })}\r\n                      </tr>\r\n                    );\r\n                  });\r\n                })()}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TRACKLIST/LOADING`;\r\nconst SUCCESS = `TRACKLIST/SUCCESS`;\r\nconst ERROR = `TRACKLIST/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTracklist = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/tracklist/stats/XX` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport localForage from 'localforage';\r\nimport ReactModal from 'react-modal';\r\nimport _ from 'lodash/fp';\r\n\r\nimport 'react-responsive-ui/style.css';\r\nimport './App.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\nimport { CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nimport SongsTop from 'components/SongsTop/SongsTop';\r\nimport Leaderboard from 'components/Leaderboard/Leaderboard';\r\nimport Ranking from 'components/Ranking/Ranking';\r\nimport Profile from 'components/Profile/Profile';\r\nimport ProfileCompare from 'components/ProfileCompare/ProfileCompare';\r\nimport TopBar from 'components/Shared/TopBar/TopBar';\r\nimport Loader from 'components/Shared/Loader';\r\nimport LoginScreen from 'components/LoginScreen/LoginScreen';\r\nimport SocketTracker from 'components/SocketTracker/SocketTracker';\r\nimport Tournaments from 'components/Tournaments/Tournaments';\r\n\r\nimport { fetchResults, setFilter } from 'reducers/results';\r\nimport { fetchTracklist } from 'reducers/tracklist';\r\nimport { fetchUser } from 'reducers/user';\r\nimport { fetchPreferences } from 'reducers/preferences';\r\n\r\nReactModal.setAppElement('#root');\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userData: state.user.data,\r\n    isLoading: state.user.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setFilter,\r\n  fetchResults,\r\n  fetchTracklist,\r\n  fetchUser,\r\n  fetchPreferences,\r\n};\r\n\r\nfunction App({\r\n  fetchUser,\r\n  fetchTracklist,\r\n  fetchResults,\r\n  fetchPreferences,\r\n  setFilter,\r\n  userData,\r\n  isLoading,\r\n}) {\r\n  useEffect(() => {\r\n    if (!process.env.REACT_APP_SOCKET) {\r\n      fetchUser();\r\n      localForage\r\n        .getItem('filter')\r\n        .then((filter) => {\r\n          if (filter) {\r\n            setFilter({\r\n              ..._.omit('song', filter),\r\n              chartRange: filter.chartRange && {\r\n                ...filter.chartRange,\r\n                range: _.every(\r\n                  (r) => r >= CHART_MIN_MAX[0] && r <= CHART_MIN_MAX[1],\r\n                  filter.chartRange.range\r\n                )\r\n                  ? filter.chartRange.range\r\n                  : CHART_MIN_MAX,\r\n              },\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => console.error('Cannot get filter from local storage', error));\r\n    }\r\n  }, [fetchUser, fetchTracklist, fetchResults, setFilter]);\r\n\r\n  useEffect(() => {\r\n    if (!process.env.REACT_APP_SOCKET && userData && userData.player) {\r\n      Promise.all([fetchTracklist(), fetchPreferences()]).then(() => {\r\n        fetchResults();\r\n      });\r\n    }\r\n  }, [userData, fetchPreferences, fetchResults, fetchTracklist]);\r\n\r\n  useEffect(() => {\r\n    if (process.env.REACT_APP_SOCKET) {\r\n      fetchTracklist().then(() => {\r\n        fetchResults();\r\n      });\r\n    }\r\n  }, [fetchResults, fetchTracklist]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <Loader />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (process.env.REACT_APP_SOCKET) {\r\n    return <SocketTracker />;\r\n  }\r\n\r\n  if (!userData || !userData.player) {\r\n    return <LoginScreen />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TopBar />\r\n      <Route exact path=\"/\" render={() => <Redirect to={routes.leaderboard.path} />} />\r\n      <Route exact path={routes.leaderboard.path} component={Leaderboard} />\r\n      <Route exact path={routes.leaderboard.sharedChart.path} component={Leaderboard} />\r\n      <Route path={routes.ranking.path} component={Ranking} />\r\n      <Route path={routes.profile.path}>\r\n        <Switch>\r\n          <Route path={routes.profile.path} exact component={Profile} />\r\n          <Route path={routes.profile.compare.path} exact component={ProfileCompare} />\r\n        </Switch>\r\n      </Route>\r\n      <Route path={routes.songs.path} component={SongsTop} />\r\n      <Route path={routes.tournaments.path} component={Tournaments} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { combineReducers } from 'redux';\r\n\r\nimport mostPlayed from './mostPlayed';\r\nimport mostPlayedMonth from './mostPlayedMonth';\r\nimport leastPlayed from './leastPlayed';\r\n\r\nexport default combineReducers({\r\n  mostPlayed,\r\n  mostPlayedMonth,\r\n  leastPlayed,\r\n});\r\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport _ from 'lodash/fp';\r\n\r\nimport login from 'reducers/login';\r\nimport popups from 'reducers/popups';\r\nimport preferences from 'reducers/preferences';\r\nimport presets from 'reducers/presets';\r\nimport profiles from 'reducers/profiles';\r\nimport results from 'reducers/results';\r\nimport topPerSong from 'reducers/topPerSong';\r\nimport tournament from 'reducers/tournament';\r\nimport tracklist from 'reducers/tracklist';\r\nimport trackStats from 'reducers/trackStats';\r\nimport user from 'reducers/user';\r\n\r\nconst rootReducer = combineReducers({\r\n  login,\r\n  popups,\r\n  preferences,\r\n  presets,\r\n  profiles,\r\n  results,\r\n  topPerSong,\r\n  tournament,\r\n  tracklist,\r\n  trackStats,\r\n  user,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && process.env.NODE_ENV === 'development'\r\n    ? compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__({\r\n          stateSanitizer: (state) => ({\r\n            ...state,\r\n            results: {\r\n              ...state.results,\r\n              data: `big array, ${_.size(state.results.data)}`,\r\n              results: `big array, ${_.size(state.results.results)}`,\r\n              sharedCharts: 'big object',\r\n              originalData: 'big object',\r\n              resultInfo: 'big object',\r\n              profiles: _.mapValues(\r\n                (pl) => ({\r\n                  ...pl,\r\n                  resultsByGrade: '...',\r\n                  resultsByLevel: '...',\r\n                  rankingHistory: '...',\r\n                  ratingHistory: '...',\r\n                  pp: {\r\n                    pp: pl.pp && pl.pp.pp,\r\n                    scores: '...',\r\n                  },\r\n                }),\r\n                state.results.profiles\r\n              ),\r\n            },\r\n          }),\r\n        })\r\n      )\r\n    : applyMiddleware(thunk)\r\n);\r\n","import 'promise-polyfill';\r\nimport 'whatwg-fetch';\r\nimport 'utils/polyfills';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.scss';\r\nimport App from 'components/App';\r\n\r\nimport { store } from 'reducers';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}