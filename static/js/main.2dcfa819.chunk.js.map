{"version":3,"sources":["utils/polyfills.js","constants/routes.js","components/Shared/Overlay/Overlay.js","components/Shared/ToggleButton/ToggleButton.js","components/Shared/Loader/index.js","components/Shared/Input/Input.js","components/Shared/Toggle/Toggle.js","components/Shared/CollapsibleBar/index.js","components/Shared/Range/index.js","constants/leaderboard.js","components/Leaderboard/ChartFilter.js","utils/fetch.js","constants/env.js","reducers/ranking.js","utils/achievements.js","utils/exp.js","constants/grades.js","reducers/profiles.js","constants/backend.js","reducers/top.js","reducers/presets.js","components/Leaderboard/PresetsControl.js","utils/leaderboards.js","utils/colors.js","reducers/selectors.js","components/Leaderboard/Leaderboard.js","components/Ranking/RankingList.js","components/Ranking/RankingFaq.js","components/Ranking/Ranking.js","components/Profile/ExpFaq.js","components/Profile/Profile.js","components/Shared/TopBar/TopBar.js","components/App.js","reducers/tracklist.js","reducers/index.js","index.js"],"names":["Number","isNaN","value","Math","sign","x","Array","prototype","findIndex","Object","defineProperty","predicate","this","TypeError","o","len","length","thisArg","arguments","k","kValue","call","configurable","writable","routes","leaderboard","path","ranking","faq","profile","getPath","params","id","POPPER_MODIFIERS","preventOverflow","enabled","padding","boundariesElement","PLACEMENT_ARROW_MAPPING","right","left","top","bottom","getArrowPlacement","placement","split","Overlay","state","isVisible","containerItemRef","React","createRef","renderPopper","bind","toggleOverlayVisibility","setState","event","target","closest","hideOverlay","ref","style","arrowProps","outOfBoundaries","scheduleUpdate","props","children","hideWhenOutOfBounds","data-placement","className","classNames","overlayClassName","overlayItem","Fragment","onClick","ReactDOM","createPortal","container","document","body","modifiers","referenceElement","current","PureComponent","defaultTypes","listensToClickOutside","ToggleButton","active","onToggle","text","Loader","width","height","viewBox","xmlns","fill","cx","cy","r","attributeName","from","to","begin","dur","values","calcMode","repeatCount","fillOpacity","Input","_","isNil","defaultValue","bindAll","prevProps","e","newValue","onChange","type","numericValue","min","max","onBlur","key","handleBlur","omit","onKeyPress","handleKeyPress","onInput","handleChange","noop","Component","defaultProps","Toggle","checked","uniqueId","htmlFor","CollapsibleBar","open","defaultOpen","title","Range","range","step","renderTrack","onMouseDown","onTouchStart","position","display","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","justifyContent","alignItems","boxShadow","SORT","DEFAULT","PROTAGONIST","RANK_ASC","RANK_DESC","NEW_SCORES_PLAYER","CHART_MIN_MAX","DURATION","STD","SHORT","REMIX","FULL","DURATION_DEFAULT","ChartFilter","filterValue","onChangeEx","getOr","duration","buttonText","t","isEqual","isEmpty","newMin","newMax","includes","without","fetchJson","a","url","fetch","response","status","json","data","Error","console","error","Promise","reject","localStorage","window","debugOn","setItem","debugOff","removeItem","DEBUG","getItem","SET_RANKINGS","RANKING_CHANGE_SET","getRankings","profiles","players","defaultInfo","count","battleCount","countAcc","grades","F","D","C","B","A","S","SS","SSS","totalScore","calories","sumAccuracy","history","ratingHistory","lastPlace","lastBattleDate","setupDefaultInfo","cloneDeep","rating","progress","bonus","exp","expRank","playerInfo","battles","forEach","song","chartType","validResults","orderBy","results","score","nickname","push","playerId","p1","accuracy","grade","replace","maxScore","isInteger","perfect","great","good","bad","miss","isFullScore","accuracyRaw","isRank","getMaxScore","maxScoreAccuracy","scoreIndex","slice","enemyScore","flow","sortBy","s1","s2","dateObject","getTime","p2","scoreMultiplier","isExactDate","map","startingRating","S1","S2","r1","r2","R1","R2","E1","E2","kRating1","kRating2","maxK1","maxK2","kLevel1","chartLevel","kLevel2","kLevel","kMinimizer","startsWith","K1","K2","dr1","dr2","ratingDiff","ratingDiffLast","log","chartLabel","toFixed","playersSorted","keys","battleDate","player","index","place","date","p1LastRating","last","p2LastRating","toInteger","name","nameArcade","arcade_name","round","ratingRaw","remove","i","setRankingsAction","getListOfNames","getMapOfRatings","q","fromPairs","setRankings","dispatch","getState","all","localForage","lastChangedRanking","lastChangedRankingPoints","lastFetchedRanking","listNow","listLastFetched","listLastChanged","mapPointsNow","mapPointsLastFetched","mapPointsLastChanged","rankingsPointsMap","listPrev","warn","achievements","icon","GiRank1","description","resultFunction","result","chart","combo","GiRank2","GiRank3","GiSmokingFinger","initialState","playedSongs","songsToPlay","uniq","GiRetroController","GiLoveSong","Улитка","GiSnail","charts","some","songToPlay","GiPodiumSecond","GiLifeBar","GiWoodenPegleg","initialAchievementState","gradeCoef","getExp","isPlayersTopResult","getRankImg","rank","color","src","process","iconName","alt","threshold","ranks","GRADES","SET_PROFILES","SET_FILTER","RESET_FILTER","defaultFilter","isLoading","filter","getProfiles","mapValues","resultsByGrade","find","get","rankingHistory","Date","now","getInitialProfiles","tracklist","addResultData","resultsByLevel","lastResultDate","achName","initializeProfile","resultsOfThisPlayer","bestGradeResult","sort","b","indexOf","convert","cap","achState","neededGrades","findLast","expRanks","expRankNext","double","single","gradeIncrementMap","level","res","thisGrade","thisPlayerId","otherResults","gradeIncArray","gradeInc","l","g","prog","incrementLevel","number","minimumNumber","totalCharts","sqrt","getMinimumNumber","bonusCoefficientNumber","getBonusForLevel","setProfiles","HOST","LOADING","SUCCESS","ERROR","showRank","showRankAndNorank","preprocessData","item","latestScoreDate","gained","fullRes","firstResultMap","every","isNumber","perfects","greats","goods","bads","misses","stepSum","chart_label","match","track","mix","_r","nicknameArcade","originalChartMix","originalChartLabel","originalScore","exact_gain_date","scoreIncrease","score_increase","max_combo","mods","mods_list","rank_mode","isHJ","infos","fixableIndex","localStepSum","numb","acc","floor","accRaw","fetchTopScores","processedData","initialProfiles","rankings","toPairs","setFilter","SELECT_PRESET","LOAD_PRESETS","LOADING_START","LOADING_END","presets","currentPreset","itemToOption","label","reloadPresets","startLoading","endLoading","selectPreset","openPreset","then","noPresetsMessage","mapDispatchToProps","loadPresets","savePreset","newPreset","confirm","withoutOldPreset","newPresets","deletePreset","PresetsControl","onChangeSelection","selected","onRewritePreset","onSavePreset","isAddingNew","classNamePrefix","placeholder","options","noOptionsMessage","disabled","connect","TimeAgo","addLocale","ru","timeAgo","timeStyle","flavour","gradation","convenient","units","tooltipFormatterForBests","flexDirection","toLocaleDateString","getTimeAgo","dayDiff","moment","startOf","diff","format","colorsArray","playersSelector","createSelector","it","toLower","filteredDataSelector","names","namesOr","playersOr","namesNot","playersNot","sortingType","protagonist","excludeAntagonists","defaultSorting","newScoresProtagonistSorting","protagonistSorting","row","protIndex","protScore","enemies","take","uniqBy","distanceFromProtagonist","reduce","dist","enemy","getScoreSorting","direction","Infinity","sortingFunctions","compact","chartRange","items","rows","filterCharts","showOnlyRank","occuredNames","alreadyOccured","rowNames","size","matchSorter","sortingOptions","resetFilter","Leaderboard","showItemsCount","curry","onRefresh","onTypeSongName","debounce","closeMenuOnSelect","isMulti","isClearable","filteredData","canShowMore","visibleData","showProtagonistRatingChange","highlightProtagonist","protagonistName","uniqueSelectedNames","renderSimpleSearch","renderFilters","renderSortings","preset","message","chartIndex","topPlace","occuredNicknames","isSecondOccurenceInResults","singlep","doublep","coop","href","rel","placeDifference","nameIndex","prevScore","findLastIndex","empty","latest","fontWeight","vj","hj","content","tooltipClassName","numeral","exact","getGradeImg","RankingList","playerIndex","change","isString","prevRating","down","up","RankingFaq","Ranking","render","component","withRouter","ExpFaq","defaultGradesDistribution","defaultGradesWithLevelsDistribution","flatMap","cutRange","array","startIndex","endIndex","firstElement","lastElement","first","middleElements","profileSelector","levelsDistribution","y","singlesLevels","doublesLevels","gradesData","update","gradesDistribution","groupBy","pick","sum","gradesValues","gradesAndLevelsDistribution","groupedResults","counts","countBy","reduced","levelsData","lastTickRating","lastTickRanking","lastTick","minMaxRange","filterRange","dayRange","dayRangeMs","placesChanges","ratingChanges","rankingIndex","setProfilesFilter","resetProfilesFilter","Profile","isLevelGraphCombined","showFaq","onChangeDayRange","onShowFaq","onHideFaq","minHeight","undefined","aspect","margin","strokeDasharray","dataKey","domain","tickFormatter","allowDecimals","stroke","isAnimationActive","payload","strokeWidth","dot","dataMax","interval","reversed","ticks","stackId","stackOffset","doubleItems","singleItems","abs","dataMin","offset","totalD","totalS","obj","typeLetter","progr","minNumber","currentNumber","levelString","complete","zero","achievement","Icon","expProgress","ariaHideApp","isOpen","onRequestClose","ceil","renderGradesWithLevels","renderLevels","renderGrades","renderRankingHistory","renderPlaceHistory","renderGradeBlock","renderAchievement","TopBar","App","rootReducer","combineReducers","action","hasPrevList","playerOriginal","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","catch","getElementById"],"mappings":"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","file":"static/js/main.2dcfa819.chunk.js","sourcesContent":["/* eslint-disable */\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\r\nNumber.isNaN =\r\n  Number.isNaN ||\r\n  function(value) {\r\n    return value !== value;\r\n  };\r\n\r\nif (typeof Math.sign === 'undefined') {\r\n  Math.sign = function(x) {\r\n    return x > 0 ? 1 : x < 0 ? -1 : x;\r\n  };\r\n}\r\n\r\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\r\nif (!Array.prototype.findIndex) {\r\n  Object.defineProperty(Array.prototype, 'findIndex', {\r\n    value: function(predicate) {\r\n      // 1. Let O be ? ToObject(this value).\r\n      if (this == null) {\r\n        throw new TypeError('\"this\" is null or not defined');\r\n      }\r\n\r\n      var o = Object(this);\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('predicate must be a function');\r\n      }\r\n\r\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n      var thisArg = arguments[1];\r\n\r\n      // 5. Let k be 0.\r\n      var k = 0;\r\n\r\n      // 6. Repeat, while k < len\r\n      while (k < len) {\r\n        // a. Let Pk be ! ToString(k).\r\n        // b. Let kValue be ? Get(O, Pk).\r\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n        // d. If testResult is true, return k.\r\n        var kValue = o[k];\r\n        if (predicate.call(thisArg, kValue, k, o)) {\r\n          return k;\r\n        }\r\n        // e. Increase k by 1.\r\n        k++;\r\n      }\r\n\r\n      // 7. Return -1.\r\n      return -1;\r\n    },\r\n    configurable: true,\r\n    writable: true,\r\n  });\r\n}\r\n","export const routes = {\r\n  leaderboard: {\r\n    path: `/leaderboard`,\r\n  },\r\n  ranking: {\r\n    path: `/ranking`,\r\n    faq: {\r\n      path: '/ranking/faq',\r\n    },\r\n  },\r\n  profile: {\r\n    path: `/profiles/:id`,\r\n    getPath: params => `/profiles/${params.id}`,\r\n  },\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport toBe from 'prop-types';\r\nimport { Popper } from 'react-popper';\r\nimport classNames from 'classnames';\r\nimport listensToClickOutside from 'react-onclickoutside';\r\n\r\nimport './overlay.scss';\r\n\r\nconst POPPER_MODIFIERS = {\r\n  preventOverflow: {\r\n    enabled: true,\r\n    padding: 10,\r\n    boundariesElement: 'viewport',\r\n  },\r\n};\r\n\r\nconst PLACEMENT_ARROW_MAPPING = {\r\n  right: 'left',\r\n  left: 'right',\r\n  top: 'bottom',\r\n  bottom: 'top',\r\n};\r\n\r\nconst getArrowPlacement = placement => {\r\n  return placement && PLACEMENT_ARROW_MAPPING[placement.split('-')[0]];\r\n};\r\n\r\nclass Overlay extends React.PureComponent {\r\n  static propTypes = {\r\n    placement: toBe.string,\r\n    overlayItem: toBe.any,\r\n    hideWhenOutOfBounds: toBe.bool,\r\n  };\r\n\r\n  static defaultTypes = {\r\n    placement: 'bottom',\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isVisible: false,\r\n    };\r\n    this.containerItemRef = React.createRef();\r\n    this.renderPopper = this.renderPopper.bind(this);\r\n    this.toggleOverlayVisibility = this.toggleOverlayVisibility.bind(this);\r\n  }\r\n\r\n  hideOverlay() {\r\n    this.setState({\r\n      isVisible: false,\r\n    });\r\n  }\r\n\r\n  toggleOverlayVisibility() {\r\n    this.setState({\r\n      isVisible: !this.state.isVisible,\r\n    });\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    const preventHiding = event && event.target.closest('.inner-popper-overlay'); // prevent overlays from hiding when a modal is opened within overlay\r\n\r\n    if (!preventHiding) {\r\n      this.hideOverlay();\r\n    }\r\n  }\r\n\r\n  renderPopper({ ref, style, placement, arrowProps, scheduleUpdate, outOfBoundaries }) {\r\n    const { children, hideWhenOutOfBounds } = this.props;\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        data-placement={placement}\r\n        className={classNames(\r\n          'inner-popper-overlay',\r\n          `arrow-${getArrowPlacement(placement)}`,\r\n          this.props.overlayClassName,\r\n          { 'out-of-bounds': outOfBoundaries && hideWhenOutOfBounds }\r\n        )}\r\n      >\r\n        <div className=\"arrow-hider\">\r\n          <div className=\"arrow\" ref={arrowProps.ref} style={arrowProps.style} />\r\n        </div>\r\n        <div\r\n          className=\"inner-popper-content\"\r\n          // ref={ref => this.setupPopperContentRef(scheduleUpdate, ref)}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { placement, overlayItem } = this.props;\r\n    const { isVisible } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"overlay-item\"\r\n          ref={this.containerItemRef}\r\n          onClick={this.toggleOverlayVisibility}\r\n        >\r\n          {overlayItem}\r\n        </div>\r\n        {isVisible &&\r\n          ReactDOM.createPortal(\r\n            <Popper\r\n              container={document.body}\r\n              modifiers={POPPER_MODIFIERS}\r\n              placement={placement}\r\n              referenceElement={this.containerItemRef.current}\r\n            >\r\n              {this.renderPopper}\r\n            </Popper>,\r\n            document.body\r\n          )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default listensToClickOutside(Overlay);\r\n","import React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './toggle-button.scss';\r\n\r\nexport default class ToggleButton extends React.PureComponent {\r\n  static propTypes = {\r\n    text: toBe.string,\r\n    onToggle: toBe.func,\r\n    active: toBe.bool,\r\n  };\r\n\r\n  render() {\r\n    const { active, onToggle, text } = this.props;\r\n    return (\r\n      <div\r\n        className={classNames('toggle-button', { active: active })}\r\n        onClick={() => onToggle(!active)}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport './loader.scss';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"loader\">\r\n      <svg\r\n        width=\"40\"\r\n        height=\"12\"\r\n        viewBox=\"0 0 120 30\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"#eee\"\r\n      >\r\n        <circle cx=\"15\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"60\" cy=\"15\" r=\"9\" fillOpacity=\"0.3\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"9\"\r\n            to=\"9\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"9;15;9\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"0.5\"\r\n            to=\"0.5\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\".5;1;.5\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"105\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react/no-deprecated */\r\n// imports from vendor deps\r\nimport React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\n\r\n// imports from styles\r\nexport default class Input extends React.Component {\r\n  static propTypes = {\r\n    value: toBe.any,\r\n    defaultValue: toBe.any,\r\n    onChange: toBe.func,\r\n    onBlur: toBe.func,\r\n    type: toBe.string,\r\n    className: toBe.string,\r\n    trimOnBlur: toBe.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    value: null,\r\n    type: 'text',\r\n    onChange: _.noop,\r\n    onBlur: _.noop,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: (!_.isNil(props.value) ? props.value : props.defaultValue) || '',\r\n    };\r\n    _.bindAll(['handleChange', 'handleBlur', 'handleKeyPress'], this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.value !== this.props.value) {\r\n      this.setState({ value: this.props.value });\r\n    }\r\n  }\r\n\r\n  handleChange(e) {\r\n    const newValue = e.target.value;\r\n    this.setState({ value: newValue }, () => this.props.onChange(newValue));\r\n  }\r\n\r\n  handleBlur(e) {\r\n    const { type } = this.props;\r\n    const { value } = this.state;\r\n    if (type === 'number') {\r\n      const numericValue = Number(value);\r\n      if (numericValue >= Number(e.target.min) && numericValue <= Number(e.target.max)) {\r\n        this.props.onBlur(numericValue, e);\r\n      } else {\r\n        this.setState({ value: this.props.value });\r\n        this.props.onBlur(this.props.value, e);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleKeyPress(e) {\r\n    if (e.key === 'Enter') {\r\n      this.handleBlur(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props;\r\n\r\n    // HACK: This component uses onInput instead of onChange\r\n    // because IE11 fails to call onChange events when you paste/cut using context menu (RMB)\r\n    // We're using onInput because it works fine, and because for text input\r\n    // there's no difference between how onChange and onInput work\r\n    return (\r\n      <input\r\n        {..._.omit(['defaultValue', 'onChange'], this.props)}\r\n        className={classNames(className, 'text-input')}\r\n        value={this.state.value}\r\n        onBlur={this.handleBlur}\r\n        onKeyPress={this.handleKeyPress}\r\n        onInput={this.handleChange}\r\n        onChange={_.noop} // Handled by onInput\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './toggle.scss';\r\n\r\n// imports from styles\r\nexport default class Toggle extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.id = _.uniqueId();\r\n  }\r\n\r\n  onChange = e => {\r\n    this.props.onChange(e.target.checked);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"toggle-checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle-checkbox-cb\"\r\n          id={this.id}\r\n          onChange={this.onChange}\r\n          checked={this.props.checked}\r\n        />\r\n        <label htmlFor={this.id} className=\"toggle\">\r\n          <span></span>\r\n        </label>\r\n        <label htmlFor={this.id} className=\"text-label\">\r\n          {this.props.children}\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\nimport './styles.scss';\r\n\r\nexport default class CollapsibleBar extends PureComponent {\r\n  static propTypes = {\r\n    className: toBe.string,\r\n    children: toBe.any,\r\n    title: toBe.any,\r\n    defaultOpen: toBe.bool,\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = { open: props.defaultOpen || false };\r\n  }\r\n\r\n  render() {\r\n    const { children, title, className } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classNames('collapsible-bar', className, { open })}>\r\n        <div className=\"header\" onClick={() => this.setState(state => ({ open: !state.open }))}>\r\n          <div className=\"collapse-button\">\r\n            <FaChevronRight />\r\n          </div>\r\n          <div className=\"title\">{title}</div>\r\n        </div>\r\n        {children && <div className=\"collapsible-children\">{children}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Range as ReactRange, getTrackBackground } from 'react-range';\r\n\r\nexport default function Range({ range, min, max, onChange }) {\r\n  return (\r\n    <ReactRange\r\n      values={range}\r\n      step={1}\r\n      min={min}\r\n      max={max}\r\n      onChange={onChange}\r\n      renderTrack={({ props, children }) => (\r\n        <div\r\n          onMouseDown={props.onMouseDown}\r\n          onTouchStart={props.onTouchStart}\r\n          style={{\r\n            ...props.style,\r\n            position: 'relative',\r\n            height: '10px',\r\n            display: 'flex',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <div\r\n            ref={props.ref}\r\n            style={{\r\n              height: '6px',\r\n              width: '100%',\r\n              borderRadius: '3px',\r\n              background: getTrackBackground({\r\n                values: range,\r\n                colors: ['#ccc', '#88d3ff', '#ccc'],\r\n                min,\r\n                max,\r\n              }),\r\n              alignSelf: 'center',\r\n            }}\r\n          >\r\n            {children}\r\n          </div>\r\n        </div>\r\n      )}\r\n      renderThumb={({ props, isDragged }) => (\r\n        <div\r\n          {...props}\r\n          style={{\r\n            ...props.style,\r\n            height: '12px',\r\n            width: '12px',\r\n            borderRadius: '6px',\r\n            backgroundColor: '#FFF',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            boxShadow: '0px 2px 3px #AAA',\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              height: '6px',\r\n              width: '6px',\r\n              borderRadius: '3px',\r\n              backgroundColor: isDragged ? '#88d3ff' : '#CCC',\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import _ from 'lodash/fp';\r\n\r\nexport const SORT = {\r\n  DEFAULT: 'default',\r\n  PROTAGONIST: 'protagonist',\r\n  RANK_ASC: 'rankAsc',\r\n  RANK_DESC: 'rankDesc',\r\n  NEW_SCORES_PLAYER: 'newScoresPlayer',\r\n};\r\n\r\nexport const CHART_MIN_MAX = [1, 28];\r\nexport const DURATION = {\r\n  STD: 'Standard',\r\n  SHORT: 'Short',\r\n  REMIX: 'Remix',\r\n  FULL: 'Full',\r\n};\r\nexport const DURATION_DEFAULT = _.values(DURATION);\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\nimport { FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Range from 'components/Shared/Range';\r\n\r\nimport { CHART_MIN_MAX, DURATION_DEFAULT, DURATION } from 'constants/leaderboard';\r\n\r\nexport default function ChartFilter({ filterValue, onChange: onChangeEx }) {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filterValue);\r\n  const type = _.getOr(null, 'type', filterValue);\r\n  const duration = _.getOr(DURATION_DEFAULT, 'duration', filterValue);\r\n\r\n  let buttonText = 'фильтр чартов';\r\n  if (filterValue) {\r\n    const t = type || '';\r\n    buttonText = range[0] === range[1] ? `${t}${range[0]}` : `${t}${range[0]} - ${t}${range[1]}`;\r\n    buttonText = 'чарты: ' + buttonText;\r\n    if (!_.isEqual(duration, DURATION_DEFAULT)) {\r\n      buttonText += ' ***';\r\n      // buttonText += ` (${_.values(DURATION)\r\n      //   .filter(dur => duration.includes(dur))\r\n      //   .map(s => s.slice(0, 2))\r\n      //   .join('-')})`;\r\n    }\r\n  }\r\n\r\n  const onChange = value => {\r\n    onChangeEx({\r\n      range,\r\n      type,\r\n      ...value,\r\n      duration: _.isEmpty(value.duration) ? duration : value.duration,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Overlay\r\n        overlayClassName=\"chart-range-overlay-outer\"\r\n        overlayItem={\r\n          <button className=\"filter-charts-button btn btn-sm btn-dark\">{buttonText}</button>\r\n        }\r\n      >\r\n        <div className=\"chart-range-overlay\">\r\n          <div className=\"buttons\">\r\n            <ToggleButton\r\n              text=\"Single\"\r\n              active={type === 'S'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  type: active ? 'S' : null,\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Double\"\r\n              active={type === 'D'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  type: active ? 'D' : null,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <Range\r\n            range={range}\r\n            min={CHART_MIN_MAX[0]}\r\n            max={CHART_MIN_MAX[1]}\r\n            onChange={r => onChange({ range: r })}\r\n          />\r\n          <div className=\"inputs\">\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  range: [Math.max(range[0] - 1, CHART_MIN_MAX[0]), range[1]],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={CHART_MIN_MAX[0]}\r\n              max={Math.min(CHART_MIN_MAX[1], range[1])}\r\n              value={range[0]}\r\n              onBlur={value => {\r\n                onChange({ range: [value, range[1]] });\r\n              }}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMin = Math.min(range[0] + 1, CHART_MIN_MAX[1]);\r\n                onChange({\r\n                  range: [newMin, range[1] < newMin ? newMin : range[1]],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMax = Math.max(range[1] - 1, CHART_MIN_MAX[0]);\r\n                onChange({\r\n                  range: [range[0] > newMax ? newMax : range[0], newMax],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={Math.max(CHART_MIN_MAX[0], range[0])}\r\n              max={CHART_MIN_MAX[1]}\r\n              value={range[1]}\r\n              onBlur={value => onChange({ range: [range[0], value] })}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  range: [range[0], Math.min(range[1] + 1, CHART_MIN_MAX[1])],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n          </div>\r\n          <div className=\"buttons-duration\">\r\n            <ToggleButton\r\n              text=\"Standard\"\r\n              active={duration.includes(DURATION.STD)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.STD]\r\n                    : _.without([DURATION.STD], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Short\"\r\n              active={duration.includes(DURATION.SHORT)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.SHORT]\r\n                    : _.without([DURATION.SHORT], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Remix\"\r\n              active={duration.includes(DURATION.REMIX)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.REMIX]\r\n                    : _.without([DURATION.REMIX], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Full\"\r\n              active={duration.includes(DURATION.FULL)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.FULL]\r\n                    : _.without([DURATION.FULL], duration),\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Overlay>\r\n    </div>\r\n  );\r\n}\r\n","export const fetchJson = async ({ url }) => {\r\n  try {\r\n    const response = await fetch(url);\r\n    if (response.status >= 200 && response.status < 300) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      throw Error('HTTP Status ' + response.status);\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n","if (localStorage) {\r\n  window.debugOn = () => {\r\n    localStorage.setItem('debug', 1);\r\n  };\r\n  window.debugOff = () => {\r\n    localStorage.removeItem('debug');\r\n  };\r\n}\r\n\r\nexport const DEBUG = localStorage && localStorage.getItem('debug');\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\n\r\nimport { DEBUG } from 'constants/env';\r\n\r\nconst SET_RANKINGS = `RANKINGS/SET_RANKINGS`;\r\nconst RANKING_CHANGE_SET = `RANKINGS/RANKING_CHANGE_SET`;\r\n\r\nconst isFullScore = score => {\r\n  return (\r\n    _.isInteger(score.perfect) &&\r\n    _.isInteger(score.great) &&\r\n    _.isInteger(score.good) &&\r\n    _.isInteger(score.bad) &&\r\n    _.isInteger(score.miss) &&\r\n    _.isInteger(score.score)\r\n  );\r\n};\r\n\r\nconst getMaxScore = score => {\r\n  const maxScoreAccuracy = ((score.score / score.accuracyRaw) * 100) / (score.isRank ? 1.2 : 1);\r\n\r\n  return maxScoreAccuracy;\r\n};\r\n\r\nexport default function reducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case SET_RANKINGS:\r\n      return {\r\n        ...state,\r\n        data: action.ranking,\r\n      };\r\n    case RANKING_CHANGE_SET:\r\n      const hasPrevList = !_.isEmpty(action.listPrev);\r\n      return {\r\n        ...state,\r\n        data: _.map(playerOriginal => {\r\n          const player = {\r\n            ...playerOriginal,\r\n            prevRating: _.get(playerOriginal.id, action.rankingsPointsMap),\r\n          };\r\n          if (!hasPrevList) {\r\n            return player; // First time opening this thing and we didn't have any previous data\r\n          }\r\n          if (!_.includes(player.id, action.listPrev)) {\r\n            return { ...player, change: 'NEW' };\r\n          } else if (!_.includes(player.id, action.listNow)) {\r\n            // Should NEVER happen, idk if this is possible\r\n            return { ...player, change: '?' };\r\n          } else {\r\n            return {\r\n              ...player,\r\n              change: _.indexOf(player.id, action.listPrev) - _.indexOf(player.id, action.listNow),\r\n            };\r\n          }\r\n        }, state.data),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getRankings = (data, { players }, profiles) => {\r\n  const defaultInfo = {\r\n    count: 0,\r\n    battleCount: 0,\r\n    countAcc: 0,\r\n    // rating: 1000,\r\n    grades: { F: 0, D: 0, C: 0, B: 0, A: 0, S: 0, SS: 0, SSS: 0 },\r\n    totalScore: { S: 0, D: 0, calories: 0 },\r\n    sumAccuracy: 0,\r\n    history: [],\r\n    ratingHistory: [],\r\n    lastPlace: null,\r\n    lastBattleDate: 0,\r\n  };\r\n  const setupDefaultInfo = id => {\r\n    return {\r\n      ..._.cloneDeep(defaultInfo),\r\n      rating: 850 + profiles[id].progress.bonus,\r\n      exp: profiles[id].exp,\r\n      expRank: profiles[id].expRank,\r\n      //TODO: combine ranking and profiles\r\n    };\r\n  };\r\n  const playerInfo = {};\r\n  const battles = [];\r\n  data.forEach(song => {\r\n    if (song.chartType === 'COOP') {\r\n      // Coops don't affect ELO\r\n      return;\r\n    }\r\n    const validResults = [];\r\n    _.orderBy(['score'], ['desc'], song.results).forEach(score => {\r\n      if (!score.nickname.includes('???')) {\r\n        validResults.push(score);\r\n\r\n        if (!playerInfo[score.playerId]) {\r\n          playerInfo[score.playerId] = setupDefaultInfo(score.playerId);\r\n        }\r\n        const p1 = playerInfo[score.playerId];\r\n        p1.count++;\r\n        if (score.accuracy) {\r\n          p1.countAcc++;\r\n          p1.sumAccuracy += score.accuracy;\r\n        }\r\n        p1.totalScore[song.chartType] += score.score;\r\n        score.calories && (p1.totalScore.calories += score.calories);\r\n        p1.grades[score.grade.replace('+', '')]++;\r\n      }\r\n      if (!song.maxScore && isFullScore(score)) {\r\n        song.maxScore = getMaxScore(score, song);\r\n        song.maxScoreAccuracy = score.accuracyRaw;\r\n      }\r\n    });\r\n\r\n    validResults.forEach((score, scoreIndex) => {\r\n      const enemyScores = validResults.length > 1 ? validResults.slice(scoreIndex + 1) : [];\r\n\r\n      enemyScores.forEach(enemyScore => {\r\n        if (score.isRank === enemyScore.isRank && score.playerId !== enemyScore.playerId) {\r\n          battles.push([score, enemyScore, song]);\r\n        }\r\n      });\r\n    });\r\n  });\r\n  _.flow([\r\n    // Apply battles chronologically instead of randomly\r\n    _.sortBy(([s1, s2]) => Math.max(s1.dateObject.getTime(), s2.dateObject.getTime())),\r\n    _.forEach(([score, enemyScore, song]) => {\r\n      // For each battle\r\n      if (!playerInfo[enemyScore.playerId]) {\r\n        playerInfo[enemyScore.playerId] = setupDefaultInfo(enemyScore.playerId);\r\n      }\r\n      const p1 = playerInfo[score.playerId];\r\n      const p2 = playerInfo[enemyScore.playerId];\r\n\r\n      const scoreMultiplier = score.isRank ? 1.2 : 1;\r\n      let maxScore = null;\r\n      if (song.maxScore) {\r\n        maxScore = song.maxScore * scoreMultiplier;\r\n        if (\r\n          Math.max(maxScore, score.score, enemyScore.score) !== maxScore &&\r\n          !score.isRank &&\r\n          (!score.isExactDate || !enemyScore.isExactDate)\r\n        ) {\r\n          maxScore *= 1.2;\r\n          // Rank from machine best wasn't recognized most likely.\r\n          // Increasing max score by 20% is fine\r\n        }\r\n        if (Math.max(maxScore, score.score, enemyScore.score) !== maxScore) {\r\n          // If calculated max score isn't max score anyway, use current scores as max + cherry on top\r\n          maxScore = Math.max(..._.map('score', song.results));\r\n        }\r\n      }\r\n      // Rating at the start of battle for this score\r\n      score.startingRating = p1.rating;\r\n      enemyScore.startingRating = p2.rating;\r\n      // Counting the number of battles\r\n      p1.battleCount++;\r\n      p2.battleCount++;\r\n\r\n      // This is one match between two players\r\n      //// Elo formula\r\n      const r1 = p1.rating;\r\n      const r2 = p2.rating;\r\n      const R1 = 10 ** (r1 / 400);\r\n      const R2 = 10 ** (r2 / 400);\r\n      const E1 = R1 / (R1 + R2);\r\n      const E2 = R2 / (R1 + R2);\r\n      let A = score.score;\r\n      let B = enemyScore.score;\r\n      let S1, S2;\r\n      if (A === B) {\r\n        S1 = S2 = 0.5;\r\n      } else if (maxScore && A !== 0 && B !== 0) {\r\n        A = maxScore / A - 1;\r\n        B = maxScore / B - 1;\r\n        S1 = (B / (A + B) - 0.5) * 5 + 0.5;\r\n        S2 = (A / (A + B) - 0.5) * 5 + 0.5;\r\n      } else {\r\n        S1 = A > B ? 1 : B < A ? 0 : 0.5;\r\n        S2 = 1 - S1;\r\n      }\r\n      S1 = Math.max(0, Math.min(1, S1)); // Set strict boundaries to [0, 1]\r\n      S2 = Math.max(0, Math.min(1, S2));\r\n\r\n      const kRating1 = Math.max(0, Math.min(1, (r1 - 700) / 800));\r\n      const kRating2 = Math.max(0, Math.min(1, (r2 - 700) / 800));\r\n      const maxK1 = 30 + 20 * kRating1;\r\n      const maxK2 = 30 + 20 * kRating2;\r\n      const kLevel1 = Math.max(\r\n        1,\r\n        Math.min(maxK1, (song.chartLevel / 25) ** ((kRating1 - 0.5) * 5 + 2.5) * maxK1)\r\n      );\r\n      const kLevel2 = Math.max(\r\n        1,\r\n        Math.min(maxK2, (song.chartLevel / 25) ** ((kRating2 - 0.5) * 5 + 2.5) * maxK2)\r\n      );\r\n      const kLevel = Math.min(kLevel1, kLevel2);\r\n\r\n      // When YOU vs ENEMY both have SS/SSS, and both scores are very close to SSS, this battle will NOT affect ELO too much\r\n      let kMinimizer = 1;\r\n      if (\r\n        song.maxScore &&\r\n        score.grade.startsWith('SS') &&\r\n        enemyScore.grade.startsWith('SS') &&\r\n        score.score / maxScore > 0.99 &&\r\n        enemyScore.score / maxScore > 0.99\r\n      ) {\r\n        kMinimizer = Math.min(\r\n          1,\r\n          Math.max(100 - (100 * score.score) / maxScore, 100 - (100 * enemyScore.score) / maxScore)\r\n        );\r\n      }\r\n\r\n      const K1 = kLevel * kMinimizer;\r\n      const K2 = kLevel * kMinimizer;\r\n      let dr1 = K1 * (S1 - E1);\r\n      let dr2 = K2 * (S2 - E2);\r\n      // Do not decrease rating if you have SSS - RIP zero-sum algorithm\r\n      dr1 = dr1 < 0 && score.grade === 'SSS' ? 0 : dr1;\r\n      dr2 = dr2 < 0 && enemyScore.grade === 'SSS' ? 0 : dr2;\r\n      // Recording this value for display\r\n      score.ratingDiff = (score.ratingDiff || 0) + dr1;\r\n      enemyScore.ratingDiff = (enemyScore.ratingDiff || 0) + dr2;\r\n      score.ratingDiffLast = dr1;\r\n      enemyScore.ratingDiffLast = dr2;\r\n\r\n      if (DEBUG) {\r\n        // if (song.song === 'Club Night') {\r\n        // if (score.nickname === 'Liza' || enemyScore.nickname === 'Liza') {\r\n        // if (!song.maxScore) {\r\n        console.log(\r\n          `${song.chartLabel} - ${score.nickname} / ${enemyScore.nickname} - ${song.song}`\r\n        );\r\n        console.log(\r\n          `- ${score.score} / ${enemyScore.score} (${maxScore}) - R ${S1.toFixed(2)}/${S2.toFixed(\r\n            2\r\n          )} E ${E1.toFixed(2)} / ${E2.toFixed(2)}`\r\n        );\r\n        // console.log(`- old R ${S1old.toFixed(2)}/${S2old.toFixed(2)}`);\r\n        console.log(\r\n          `- Rating ${r1.toFixed(2)} / ${r2.toFixed(2)} - ${dr1.toFixed(2)} / ${dr2.toFixed(\r\n            2\r\n          )} - K ${K1.toFixed(2)} ${K2.toFixed(2)}`\r\n        );\r\n        // }\r\n      }\r\n\r\n      // Change rating as a result of this battle\r\n      p1.rating = p1.rating + dr1;\r\n      p2.rating = p2.rating + dr2;\r\n      // Rating floor\r\n      p1.rating = Math.max(100, p1.rating);\r\n      p2.rating = Math.max(100, p2.rating);\r\n\r\n      const playersSorted = _.flow(\r\n        _.keys,\r\n        _.map(id => ({ id, rating: playerInfo[id].rating })),\r\n        _.orderBy(['rating'], ['desc'])\r\n      )(playerInfo);\r\n      const battleDate =\r\n        score.dateObject > enemyScore.dateObject ? score.dateObject : enemyScore.dateObject;\r\n      playersSorted.forEach((player, index) => {\r\n        const lastPlace = playerInfo[player.id].lastPlace;\r\n        if (lastPlace !== index + 1) {\r\n          playerInfo[player.id].history.push({\r\n            place: index + 1,\r\n            date: battleDate.getTime(),\r\n          });\r\n          playerInfo[player.id].lastPlace = index + 1;\r\n        }\r\n      });\r\n\r\n      const p1LastRating = _.last(p1.ratingHistory);\r\n      const p2LastRating = _.last(p2.ratingHistory);\r\n      if (p1LastRating !== p1.rating) {\r\n        p1.ratingHistory.push({\r\n          rating: p1.rating,\r\n          date: battleDate.getTime(),\r\n        });\r\n      }\r\n      if (p2LastRating !== p2.rating) {\r\n        p2.ratingHistory.push({\r\n          rating: p2.rating,\r\n          date: battleDate.getTime(),\r\n        });\r\n      }\r\n    }),\r\n  ])(battles);\r\n\r\n  const ranking = _.flow(\r\n    _.keys,\r\n    _.map(key => ({\r\n      ..._.omit(['countAcc', 'sumAccuracy'], playerInfo[key]),\r\n      id: _.toInteger(key),\r\n      name: players[key].nickname,\r\n      nameArcade: players[key].arcade_name,\r\n      accuracy:\r\n        playerInfo[key].countAcc > 0\r\n          ? Math.round((playerInfo[key].sumAccuracy / playerInfo[key].countAcc) * 100) / 100\r\n          : null,\r\n      rating: Math.round(playerInfo[key].rating),\r\n      ratingRaw: playerInfo[key].rating,\r\n    })),\r\n    _.remove(i => i.battleCount < 20),\r\n    _.orderBy(['ratingRaw'], ['desc'])\r\n  )(playerInfo);\r\n  return ranking;\r\n};\r\n\r\nexport const setRankingsAction = ranking => ({\r\n  type: SET_RANKINGS,\r\n  ranking,\r\n});\r\n\r\nconst getListOfNames = _.map('id');\r\nconst getMapOfRatings = _.flow(\r\n  _.map(q => [q.id, q.rating]),\r\n  _.fromPairs\r\n);\r\nexport const setRankings = ranking => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(setRankingsAction(ranking));\r\n    try {\r\n      const [lastChangedRanking, lastChangedRankingPoints, lastFetchedRanking] = await Promise.all([\r\n        localForage.getItem('lastChangedRanking_v3'),\r\n        localForage.getItem('lastChangedRankingPoints_v3'),\r\n        localForage.getItem('lastFetchedRanking_v3'),\r\n      ]);\r\n      const listNow = getListOfNames(ranking);\r\n      const listLastFetched = getListOfNames(lastFetchedRanking);\r\n      const listLastChanged = getListOfNames(lastChangedRanking);\r\n      const mapPointsNow = getMapOfRatings(ranking);\r\n      const mapPointsLastFetched = getMapOfRatings(lastFetchedRanking);\r\n      const mapPointsLastChanged = getMapOfRatings(lastChangedRankingPoints);\r\n\r\n      let rankingsPointsMap = mapPointsLastChanged;\r\n      // console.log(listNow, listLastFetched, listLastChanged);\r\n      // console.log(mapPointsNow, mapPointsLastFetched, mapPointsLastChanged);\r\n      if (!_.isEqual(mapPointsNow, mapPointsLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRankingPoints_v3', lastFetchedRanking);\r\n        rankingsPointsMap = mapPointsLastFetched;\r\n      }\r\n      let listPrev = listLastChanged;\r\n      if (!_.isEqual(listNow, listLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRanking_v3', lastFetchedRanking);\r\n        listPrev = listLastFetched;\r\n      }\r\n      dispatch({\r\n        type: RANKING_CHANGE_SET,\r\n        listNow,\r\n        listPrev,\r\n        rankingsPointsMap,\r\n      });\r\n      localForage.setItem('lastFetchedRanking_v3', ranking);\r\n    } catch (error) {\r\n      console.warn('Cannot get ranking from local storage', error);\r\n    }\r\n  };\r\n};\r\n","import _ from 'lodash/fp';\r\n\r\nimport {\r\n  GiLoveSong,\r\n  GiLifeBar,\r\n  GiSmokingFinger,\r\n  GiSnail,\r\n  GiRetroController,\r\n  GiRank1,\r\n  GiRank2,\r\n  GiRank3,\r\n  GiWoodenPegleg,\r\n  GiPodiumSecond,\r\n} from 'react-icons/gi';\r\n\r\nexport const achievements = {\r\n  '500 комбо': {\r\n    icon: GiRank1,\r\n    description: 'Заработать 500+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 500 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  '1000 комбо': {\r\n    icon: GiRank2,\r\n    description: 'Заработать 1000+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 1000 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  '2000 комбо': {\r\n    icon: GiRank3,\r\n    description: 'Заработать 2000+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 2000 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Мастер фингеринга': {\r\n    icon: GiSmokingFinger,\r\n    description: 'Сыграть все Fingers треки',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: ['Monkey Fingers', 'Kimchi Fingers', 'Monkey Fingers 2', 'Money Fingers'],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  '8-bit': {\r\n    icon: GiRetroController,\r\n    description: 'Сыграть Seize My Day, Tales of Pumpnia и Pumptris (8bit ver.)',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: ['Seize My Day', 'Tales of Pumpnia', 'Pumptris (8bit ver.)'],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  'Love is...': {\r\n    icon: GiLoveSong,\r\n    description: 'Сыграть все Love is a Danger Zone треки',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: [\r\n        'Love is a Danger Zone',\r\n        'Love is a Danger Zone [SHORT]',\r\n        'Love is a Danger Zone (Cranky Mix)',\r\n        'Love is a Danger Zone 2',\r\n        'Love is a Danger Zone 2 [SHORT]',\r\n        'Love is a Danger Zone 2 [FULL]',\r\n        'Love is a Danger Zone 2 (D&G Ver.)',\r\n        'Love is a Danger Zone (try to B.P.M.)',\r\n      ],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  Улитка: {\r\n    icon: GiSnail,\r\n    description:\r\n      'Мастер замедлений: сыграть старшие чарты Twist of Fate, Karyawisata, Awakening и Moonlight',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: [\r\n        { song: 'Twist of Fate (feat. Ruriling)', charts: ['D20', 'S19'] },\r\n        { song: 'Karyawisata', charts: ['S20', 'D16'] },\r\n        { song: 'Awakening', charts: ['S19', 'D20'] },\r\n        { song: 'Moonlight', charts: ['S19', 'D21'] },\r\n      ],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.some(\r\n        songToPlay => chart.song === songToPlay.song && songToPlay.charts.includes(chart.chartLabel)\r\n      )\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  'Коричневая S': {\r\n    icon: GiPodiumSecond,\r\n    description: 'Получить S, но 5+ бэдов',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.miss === 0 && result.bad >= 5 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Мы выживали как могли': {\r\n    icon: GiLifeBar,\r\n    description: 'Получить B или ниже, но удержать лайфбар',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress:\r\n          state.progress === 100 ? 100 : ['B+', 'C+', 'D+'].includes(result.grade) ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Падовый мисс': {\r\n    icon: GiWoodenPegleg,\r\n    description: 'Когда от SSS тебя удерживают только миссы из-за плохого моддинга падов',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress:\r\n          state.progress === 100\r\n            ? 100\r\n            : result.miss > 0 && result.bad === 0 && result.good === 0 && result.great === 0\r\n            ? 100\r\n            : 0,\r\n      };\r\n    },\r\n  },\r\n};\r\n\r\nexport const initialAchievementState = {\r\n  progress: 0,\r\n};\r\n","import React from 'react';\r\n\r\nconst gradeCoef = {\r\n  F: 0.1,\r\n  D: 0.2,\r\n  'D+': 0.3,\r\n  C: 0.3,\r\n  'C+': 0.5,\r\n  B: 0.5,\r\n  'B+': 0.8,\r\n  A: 0.8,\r\n  'A+': 1,\r\n  S: 1.1,\r\n  SS: 1.2,\r\n  SSS: 1.2,\r\n};\r\n\r\nexport const getExp = (result, chart) => {\r\n  if (!result.isPlayersTopResult) {\r\n    return 0;\r\n  }\r\n  if (chart.chartType === 'COOP') {\r\n    return (chart.chartLevel * 1000 * (gradeCoef[result.grade] || 0.8)) / 8;\r\n  }\r\n  const exp = (chart.chartLevel ** 2.31 * (gradeCoef[result.grade] || 0.8)) / 9;\r\n  return exp;\r\n};\r\n\r\nexport const getRankImg = rank => (\r\n  <img\r\n    className={rank.color}\r\n    src={`${process.env.PUBLIC_URL}/ranks/${rank.iconName}`}\r\n    alt={rank.threshold}\r\n  />\r\n);\r\n\r\nexport const ranks = [\r\n  {\r\n    threshold: 0,\r\n    iconName: '0.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 1000,\r\n    iconName: '1.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 2000,\r\n    iconName: '2.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 3000,\r\n    iconName: '3.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 4000,\r\n    iconName: '4.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 5000,\r\n    iconName: '5.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 6250,\r\n    iconName: '6.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 7500,\r\n    iconName: '7.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 8750,\r\n    iconName: '8.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 10000,\r\n    iconName: '9.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 12000,\r\n    iconName: '10.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 14000,\r\n    iconName: '11.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 16000,\r\n    iconName: '12.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 18000,\r\n    iconName: '13.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 22000,\r\n    iconName: '14.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 26000,\r\n    iconName: '15.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 30000,\r\n    iconName: '16.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 35000,\r\n    iconName: '17.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 40000,\r\n    iconName: '18.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 50000,\r\n    iconName: '19.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 60000,\r\n    iconName: '20.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 70000,\r\n    iconName: '21.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 80000,\r\n    iconName: '22.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 100000,\r\n    iconName: '23.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 120000,\r\n    iconName: '24.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 140000,\r\n    iconName: '25.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 160000,\r\n    iconName: '26.png',\r\n    color: 'gold',\r\n  },\r\n];\r\n","export const GRADES = ['F', 'F+', 'D', 'D+', 'C', 'C+', 'B', 'B+', 'A', 'A+', 'S', 'SS', 'SSS'];\r\n","import _ from 'lodash/fp';\r\n\r\nimport { achievements, initialAchievementState } from 'utils/achievements';\r\nimport { getExp, ranks as expRanks } from 'utils/exp';\r\n\r\nimport { GRADES } from 'constants/grades';\r\n\r\nconst SET_PROFILES = `PROFILES/SET_PROFILES`;\r\nconst SET_FILTER = `PROFILES/SET_FILTER`;\r\nconst RESET_FILTER = `PROFILES/RESET_FILTER`;\r\n\r\nexport const defaultFilter = {};\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n  filter: defaultFilter,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_PROFILES:\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n      };\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getProfiles = (profiles, data, ranking) => {\r\n  const addHistoryData = profile => {\r\n    const id = _.values(profile.resultsByGrade)[0][0].result.playerId;\r\n    profile.ratingHistory =\r\n      _.flow(\r\n        _.find({ id }),\r\n        _.get('ratingHistory')\r\n      )(ranking) || [];\r\n    profile.rankingHistory =\r\n      _.flow(\r\n        _.find({ id }),\r\n        _.get('history'),\r\n        history =>\r\n          history && [...history, { place: _.get('place', _.last(history)), date: Date.now() }]\r\n      )(ranking) || [];\r\n    return profile;\r\n  };\r\n  return _.mapValues(addHistoryData, profiles);\r\n};\r\n\r\nexport const getInitialProfiles = (data, tracklist) => {\r\n  // console.log(tracklist);\r\n  let profiles = {};\r\n  const initializeProfile = (id, name) => {\r\n    const resultsByLevel = _.fromPairs(Array.from({ length: 28 }).map((x, i) => [i + 1, []]));\r\n    profiles[id] = { name, resultsByGrade: {}, resultsByLevel, lastResultDate: null };\r\n    profiles[id].achievements = _.flow(\r\n      _.keys,\r\n      _.map(achName => [\r\n        achName,\r\n        { ...(achievements[achName].initialState || initialAchievementState) },\r\n      ]),\r\n      _.fromPairs\r\n    )(achievements);\r\n    profiles[id].exp = 0;\r\n  };\r\n  const addResultData = (chart, result) => {\r\n    if (!profiles[result.playerId]) {\r\n      initializeProfile(result.playerId, result.nickname);\r\n    }\r\n    const profile = profiles[result.playerId];\r\n    if (chart.chartType !== 'COOP') {\r\n      profile.resultsByGrade[result.grade] = [\r\n        ...(profile.resultsByGrade[result.grade] || []),\r\n        { result, chart },\r\n      ];\r\n      const resultsOfThisPlayer = _.filter({ playerId: result.playerId }, chart.results);\r\n      if (resultsOfThisPlayer[0] === result) {\r\n        // Only apply one result\r\n        let bestGradeResult = result;\r\n        if (resultsOfThisPlayer.length > 1) {\r\n          bestGradeResult = resultsOfThisPlayer.sort(\r\n            (a, b) => GRADES.indexOf(b.grade) - GRADES.indexOf(a.grade)\r\n          )[0];\r\n        }\r\n        profile.resultsByLevel[chart.chartLevel] = [\r\n          ...(profile.resultsByLevel[chart.chartLevel] || []),\r\n          { result: bestGradeResult, chart },\r\n        ];\r\n      }\r\n    }\r\n    if (result.isExactDate && profile.lastResultDate < result.dateObject) {\r\n      profile.lastResultDate = result.dateObject;\r\n    }\r\n    profile.achievements = _.mapValues.convert({ cap: false })((achState, achName) => {\r\n      return achievements[achName].resultFunction(result, chart, achState, profile);\r\n    }, profile.achievements);\r\n    profile.exp += getExp(result, chart);\r\n  };\r\n  data.forEach(chart => {\r\n    chart.results.forEach(result => {\r\n      addResultData(chart, result);\r\n    });\r\n  });\r\n\r\n  const getBonusForLevel = level => (30 * (1 + 2 ** (level / 4))) / 11;\r\n  const getMinimumNumber = totalCharts =>\r\n    Math.round(\r\n      Math.min(totalCharts, 1 + totalCharts / 20 + Math.sqrt(Math.max(totalCharts - 1, 0)) * 0.7)\r\n    );\r\n\r\n  profiles = _.mapValues(profile => {\r\n    const neededGrades = ['A', 'A+', 'S', 'SS', 'SSS'];\r\n    profile.expRank = _.findLast(rank => rank.threshold <= profile.exp, expRanks);\r\n    profile.expRankNext = _.find(rank => rank.threshold > profile.exp, expRanks);\r\n    profile.progress = {\r\n      double: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n      single: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n    };\r\n    const gradeIncrementMap = {\r\n      SSS: ['SS', 'S', 'A+', 'A'],\r\n      SS: ['SS', 'S', 'A+', 'A'],\r\n      S: ['S', 'A+', 'A'],\r\n      'A+': ['A+', 'A'],\r\n      A: ['A'],\r\n    };\r\n    const incrementLevel = (l, g, chartType) => {\r\n      const prog =\r\n        chartType === 'S' || chartType === 'SP'\r\n          ? profile.progress.single\r\n          : chartType === 'D' || chartType === 'DP'\r\n          ? profile.progress.double\r\n          : null;\r\n      if (prog) {\r\n        prog[g][l] = prog[g][l] ? prog[g][l] + 1 : 1;\r\n      }\r\n    };\r\n    _.keys(profile.resultsByLevel).forEach(level => {\r\n      profile.resultsByLevel[level].forEach(res => {\r\n        const thisGrade = res.result.grade;\r\n        const thisPlayerId = res.result.playerId;\r\n        const otherResults = res.chart.results.filter(r => r.playerId === thisPlayerId);\r\n        if (otherResults.length > 1) {\r\n          const sortedResults = otherResults.sort(\r\n            (a, b) => neededGrades.indexOf(b.grade) - neededGrades.indexOf(a.grade)\r\n          );\r\n          if (sortedResults[0].grade !== thisGrade) {\r\n            return; // Don't do anything when we have a different result with better grade\r\n          }\r\n        }\r\n        const gradeIncArray = gradeIncrementMap[thisGrade];\r\n        if (gradeIncArray) {\r\n          gradeIncArray.forEach(gradeInc => {\r\n            incrementLevel(level, gradeInc, res.chart.chartType);\r\n          });\r\n        }\r\n      });\r\n    });\r\n    ['single', 'double'].forEach(chartType => {\r\n      profile.progress[`${chartType}-bonus`] = 0;\r\n      _.keys(profile.progress[chartType]).forEach(grade => {\r\n        profile.progress[chartType][`${grade}-bonus`] = 0;\r\n        _.keys(profile.progress[chartType][grade]).forEach(level => {\r\n          const number = profile.progress[chartType][grade][level];\r\n          const totalCharts = tracklist.data[`${chartType}sLevels`][level];\r\n          const minimumNumber = getMinimumNumber(totalCharts);\r\n          const bonusCoefficientNumber = Math.min(1, number / minimumNumber);\r\n          const rawBonus = getBonusForLevel(level);\r\n          const bonus = rawBonus * bonusCoefficientNumber;\r\n          profile.progress[chartType][grade][`${level}-bonus`] = bonus;\r\n          profile.progress[chartType][grade][`${level}-bonus-coef`] = bonusCoefficientNumber;\r\n          profile.progress[chartType][grade][`${level}-min-number`] = minimumNumber;\r\n          profile.progress[chartType][grade][`${level}-achieved-number`] = number;\r\n          if (bonus >= profile.progress[chartType][`${grade}-bonus`]) {\r\n            profile.progress[chartType][`${grade}-bonus`] = bonus;\r\n            profile.progress[chartType][`${grade}-bonus-level`] = level;\r\n            profile.progress[chartType][`${grade}-bonus-level-coef`] = bonusCoefficientNumber;\r\n            profile.progress[chartType][`${grade}-bonus-level-min-number`] = minimumNumber;\r\n            profile.progress[chartType][`${grade}-bonus-level-achieved-number`] = number;\r\n          }\r\n        });\r\n        profile.progress[`${chartType}-bonus`] += profile.progress[chartType][`${grade}-bonus`];\r\n      });\r\n    });\r\n    profile.progress.bonus = profile.progress['double-bonus'] + profile.progress['single-bonus'];\r\n    return profile;\r\n  }, profiles);\r\n  return profiles;\r\n};\r\n\r\nexport const setProfiles = data => ({\r\n  type: SET_PROFILES,\r\n  data,\r\n});\r\n\r\nexport const setProfilesFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\n\r\nexport const resetProfilesFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n\r\nexport const calculateProfileData = profileId => (dispatch, getState) => {};\r\n","export const HOST = 'https://vps720616.ovh.net:5000';\r\n","import _ from 'lodash/fp';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\n\r\nimport { getRankings, setRankings } from './ranking';\r\nimport { getProfiles, getInitialProfiles, setProfiles } from './profiles';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TOP/LOADING`;\r\nconst SUCCESS = `TOP/SUCCESS`;\r\nconst ERROR = `TOP/ERROR`;\r\nconst SET_FILTER = `TOP/SET_FILTER`;\r\nconst RESET_FILTER = `TOP/RESET_FILTER`;\r\n\r\nexport const defaultFilter = { showRank: true, showRankAndNorank: true };\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n  filter: defaultFilter,\r\n};\r\n\r\nconst preprocessData = data =>\r\n  _.flow(\r\n    _.get('top'),\r\n    _.values,\r\n    _.map(item => {\r\n      let latestScoreDate = item.results[0].gained;\r\n      let fullRes = null;\r\n      let firstResultMap = {};\r\n      _.forEach(r => {\r\n        if (!fullRes && _.every(_.isNumber, [r.perfects, r.greats, r.goods, r.bads, r.misses])) {\r\n          fullRes = r;\r\n        }\r\n        firstResultMap[r.player] = firstResultMap[r.player] || r;\r\n        latestScoreDate = r.gained > latestScoreDate ? r.gained : latestScoreDate;\r\n      }, item.results);\r\n\r\n      const stepSum =\r\n        fullRes &&\r\n        fullRes.perfects + fullRes.greats + fullRes.goods + fullRes.bads + fullRes.misses;\r\n\r\n      const [chartType, chartLevel] = item.chart_label.match(/(\\D+)|(\\d+)/g);\r\n\r\n      return {\r\n        song: item.track,\r\n        chartLabel: item.chart_label,\r\n        chartLevel,\r\n        chartType,\r\n        mix: item.mix,\r\n        duration: item.duration,\r\n        latestScoreDate,\r\n        results: item.results.map((res, index) => {\r\n          let _r = {\r\n            id: res.id,\r\n            playerId: res.player,\r\n            nickname: data.players[res.player].nickname,\r\n            nicknameArcade: data.players[res.player].arcade_name,\r\n            originalChartMix: res.originalChartMix,\r\n            originalChartLabel: res.originalChartLabel,\r\n            originalScore: res.originalScore,\r\n            date: res.gained,\r\n            dateObject: new Date(res.gained),\r\n            grade: res.grade,\r\n            isExactDate: !!res.exact_gain_date,\r\n            score: res.score,\r\n            scoreIncrease: res.score_increase,\r\n            calories: res.calories && res.calories / 1000,\r\n            perfect: res.perfects,\r\n            great: res.greats,\r\n            good: res.goods,\r\n            bad: res.bads,\r\n            miss: res.misses,\r\n            combo: res.max_combo,\r\n            mods: res.mods_list,\r\n            isRank: !!res.rank_mode,\r\n            isHJ: (res.mods_list || '').split(' ').includes('HJ'),\r\n          };\r\n\r\n          if (stepSum) {\r\n            const infos = [_r.perfect, _r.great, _r.good, _r.bad, _r.miss];\r\n            let fixableIndex = -1;\r\n            let localStepSum = 0;\r\n            const canFix =\r\n              infos.filter((numb, index) => {\r\n                if (!_.isNumber(numb)) {\r\n                  fixableIndex = index;\r\n                  return true;\r\n                }\r\n                localStepSum += numb;\r\n                return false;\r\n              }).length === 1;\r\n            if (canFix) {\r\n              _r[['perfect', 'great', 'good', 'bad', 'miss'][fixableIndex]] =\r\n                stepSum - localStepSum;\r\n            }\r\n          }\r\n          const perfects = (Math.sqrt(_r.perfect) * _.toInteger(chartLevel)) / 2;\r\n          const acc = perfects\r\n            ? Math.floor(\r\n                ((perfects * 100 + _r.great * 60 + _r.good * 30 + _r.miss * -20) /\r\n                  (perfects + _r.great + _r.good + _r.bad + _r.miss)) *\r\n                  100\r\n              ) / 100\r\n            : null;\r\n          const accRaw = _r.perfect\r\n            ? Math.floor(\r\n                ((_r.perfect * 100 + _r.great * 60 + _r.good * 30 + _r.miss * -20) /\r\n                  (_r.perfect + _r.great + _r.good + _r.bad + _r.miss)) *\r\n                  100\r\n              ) / 100\r\n            : null;\r\n          return {\r\n            ..._r,\r\n            isPlayersTopResult: firstResultMap[res.player] === res,\r\n            accuracy: acc < 0 ? 0 : accRaw === 100 ? 100 : acc && +acc.toFixed(2),\r\n            accuracyRaw: accRaw,\r\n          };\r\n        }),\r\n      };\r\n    }),\r\n    _.orderBy(['latestScoreDate', 'song', 'chartLevel'], ['desc', 'asc', 'desc'])\r\n  )(data);\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n        players: action.players,\r\n      };\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTopScores = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await fetchJson({\r\n        url: `${HOST}/top/v2`,\r\n      });\r\n      // const data = jsonData;\r\n      const processedData = preprocessData(data);\r\n      const initialProfiles = getInitialProfiles(processedData, getState().tracklist);\r\n      const rankings = getRankings(processedData, data, initialProfiles);\r\n      dispatch({\r\n        type: SUCCESS,\r\n        data: processedData,\r\n        players: _.flow(\r\n          _.toPairs,\r\n          _.map(([id, player]) => ({ ...player, id: _.toInteger(id) }))\r\n        )(data.players),\r\n      });\r\n      dispatch(setRankings(rankings));\r\n      const profiles = getProfiles(initialProfiles, processedData, rankings);\r\n      dispatch(setProfiles(profiles));\r\n      return processedData;\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\nexport const resetFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\n\r\nimport { setFilter } from 'reducers/top';\r\n\r\nconst SELECT_PRESET = `PRESETS/SELECT_PRESET`;\r\nconst LOAD_PRESETS = `PRESETS/LOAD_PRESETS`;\r\nconst LOADING_START = `PRESETS/LOADING_START`;\r\nconst LOADING_END = `PRESETS/LOADING_END`;\r\n\r\nconst initialState = {\r\n  presets: [],\r\n  currentPreset: null,\r\n  isLoading: false,\r\n};\r\n\r\nconst itemToOption = item =>\r\n  item && {\r\n    ...item,\r\n    label: item.name,\r\n    value: item.name,\r\n  };\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_PRESETS:\r\n      const currentPreset = _.find({ name: _.get('name', state.currentPreset) }, action.presets);\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(currentPreset) || null,\r\n        presets: _.map(itemToOption, action.presets),\r\n      };\r\n    case SELECT_PRESET:\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(action.currentPreset),\r\n      };\r\n    case LOADING_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case LOADING_END:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst reloadPresets = presets => ({ type: LOAD_PRESETS, presets: presets || [] });\r\n\r\nconst startLoading = () => ({\r\n  type: LOADING_START,\r\n});\r\n\r\nconst endLoading = () => ({\r\n  type: LOADING_END,\r\n});\r\n\r\nexport const selectPreset = currentPreset => ({\r\n  type: SELECT_PRESET,\r\n  currentPreset,\r\n});\r\n\r\nexport const loadPresets = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    dispatch(reloadPresets(presets));\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const savePreset = name => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const { filter } = getState().top;\r\n    const newPreset = { name, filter };\r\n    if (!_.some({ name }, presets)) {\r\n      const newPresets = [...(presets || []), newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      dispatch(selectPreset(newPreset));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    } else if (window.confirm('Preset with this name already exists, replace it?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      const newPresets = [...withoutOldPreset, newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const openPreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const currentPreset = getState().presets.currentPreset;\r\n  const name = _.get('name', currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = name && _.find({ name }, presets);\r\n    if (preset) {\r\n      dispatch(selectPreset(currentPreset));\r\n      dispatch(setFilter(currentPreset.filter));\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const deletePreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const name = _.get('name', getState().presets.currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = _.find({ name }, presets);\r\n    if (preset && window.confirm('Are you sure you want to delete selected preset?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      dispatch(reloadPresets(withoutOldPreset));\r\n      localForage.setItem('filterPresets', withoutOldPreset);\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaLayerGroup, FaFolderOpen, FaSave, FaPlus, FaTrashAlt } from 'react-icons/fa';\r\nimport Select from 'react-select';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport Input from 'components/Shared/Input/Input';\r\n\r\nimport { loadPresets, savePreset, selectPreset, openPreset, deletePreset } from 'reducers/presets';\r\n\r\nconst overlayItem = (\r\n  <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n    <FaLayerGroup />\r\n    пресеты\r\n  </button>\r\n);\r\n\r\nconst noPresetsMessage = () => 'пусто';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ...state.presets,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  loadPresets,\r\n  savePreset,\r\n  openPreset,\r\n  deletePreset,\r\n  selectPreset,\r\n};\r\n\r\nclass PresetsControl extends React.Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    this.props.loadPresets();\r\n  }\r\n\r\n  onChangeSelection = selected => {\r\n    this.props.selectPreset(selected.name);\r\n  };\r\n\r\n  onRewritePreset = () => {\r\n    const { currentPreset } = this.props;\r\n    this.props.savePreset(currentPreset.name);\r\n  };\r\n\r\n  onSavePreset = () => {\r\n    const { name } = this.state;\r\n    this.props.savePreset(name);\r\n    this.setState({ isAddingNew: false });\r\n  };\r\n\r\n  render() {\r\n    const { presets, currentPreset, isLoading } = this.props;\r\n    const { name, isAddingNew } = this.state;\r\n    return (\r\n      <div>\r\n        <Overlay overlayItem={overlayItem}>\r\n          <div className=\"presets-control-overlay\">\r\n            <Select\r\n              className=\"select _margin-bottom\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"пресеты...\"\r\n              options={presets}\r\n              value={currentPreset}\r\n              onChange={this.props.selectPreset}\r\n              noOptionsMessage={noPresetsMessage}\r\n            />\r\n            {currentPreset && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.props.openPreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaFolderOpen /> открыть\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.onRewritePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaSave /> перезаписать\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon\"\r\n                  onClick={this.props.deletePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaTrashAlt /> удалить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {!isAddingNew && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left _self-align-end\"\r\n                  onClick={() => this.setState({ isAddingNew: true })}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaPlus /> добавить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {isAddingNew && (\r\n              <div className=\"adding-new _margin-bottom\">\r\n                <Input\r\n                  value={name}\r\n                  placeholder=\"имя пресета...\"\r\n                  className=\"form-control\"\r\n                  onChange={name => this.setState({ name })}\r\n                />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={this.onSavePreset}\r\n                  disabled={!name || isLoading}\r\n                >\r\n                  <FaSave /> сохранить\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={() => this.setState({ isAddingNew: false })}\r\n                  disabled={isLoading}\r\n                >\r\n                  отмена\r\n                </button>\r\n              </div>\r\n            )}\r\n            {/* <div>\r\n              <Toggle\r\n                checked={false}\r\n                onToggle={active => {\r\n                  localForage.setItem('showTabs', active);\r\n                }}\r\n              >\r\n                показывать табы с пресетами\r\n              </Toggle>\r\n            </div> */}\r\n          </div>\r\n        </Overlay>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PresetsControl);\r\n","import React from 'react';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport moment from 'moment';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\n\r\nconst timeStyle = {\r\n  flavour: 'long',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nexport const tooltipFormatter = date => date.toLocaleDateString();\r\nexport const tooltipFormatterForBests = date => (\r\n  <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n    <div>точная дата взятия неизвестна</div>\r\n    <div>скор был записан с my best или machine best</div>\r\n    <div>дата записи: {date.toLocaleDateString()}</div>\r\n  </div>\r\n);\r\n\r\nexport const getTimeAgo = date => {\r\n  const dayDiff = moment()\r\n    .startOf('day')\r\n    .diff(moment(date).startOf('day'), 'days');\r\n  return dayDiff === 0 ? 'сегодня' : dayDiff === 1 ? 'вчера' : timeAgo.format(date, timeStyle);\r\n};\r\n","export const colorsArray = [\r\n  '#4DB3FF',\r\n  '#80B300',\r\n  '#FF6655',\r\n  '#FF99E6',\r\n  '#33FFCC',\r\n  '#e633c8',\r\n  '#dbe812',\r\n  '#FF1A66',\r\n  '#991AFF',\r\n  '#E6B333',\r\n  '#1AB399',\r\n  '#4D8066',\r\n  '#CC9999',\r\n  '#00E680',\r\n  '#809980',\r\n  '#E6FF80',\r\n  '#1AFF33',\r\n  '#999933',\r\n  '#E6331A',\r\n  '#CCCC00',\r\n  '#66E64D',\r\n  '#4D80CC',\r\n  '#9900B3',\r\n  '#4DB380',\r\n  '#FF4D4D',\r\n];\r\n","import _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport matchSorter from 'match-sorter';\r\n\r\nimport { SORT, CHART_MIN_MAX, DURATION_DEFAULT } from 'constants/leaderboard';\r\n\r\nexport const playersSelector = createSelector(\r\n  state => state.top.players,\r\n  _.flow(\r\n    _.toPairs,\r\n    _.map(([id, { nickname, arcade_name }]) => ({\r\n      label: `${nickname} (${arcade_name})`,\r\n      value: nickname,\r\n    })),\r\n    _.sortBy(it => _.toLower(it.label))\r\n  )\r\n);\r\n\r\nconst filterCharts = (filter, rows) => {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filter);\r\n  const type = _.getOr(null, 'type', filter);\r\n  const duration = _.getOr(DURATION_DEFAULT, 'duration', filter);\r\n\r\n  return _.filter(row => {\r\n    if (duration !== DURATION_DEFAULT && !duration.includes(row.duration)) {\r\n      return false;\r\n    }\r\n    return (\r\n      row.chartLevel >= range[0] &&\r\n      row.chartLevel <= range[1] &&\r\n      (!type || row.chartType.startsWith(type))\r\n    );\r\n  }, rows);\r\n};\r\n\r\nconst getFilteredData = (data, filter) => {\r\n  // const start = performance.now();\r\n  const names = _.map('value', filter.players);\r\n  const namesOr = _.map('value', filter.playersOr);\r\n  const namesNot = _.map('value', filter.playersNot);\r\n  const sortingType = _.get('value', filter.sortingType);\r\n  const protagonist = _.get('value', filter.protagonist);\r\n  const excludeAntagonists = _.map('value', filter.excludeAntagonists);\r\n\r\n  const defaultSorting = [_.orderBy(['latestScoreDate'], ['desc'])];\r\n  const newScoresProtagonistSorting = !protagonist\r\n    ? defaultSorting\r\n    : [\r\n        _.orderBy(\r\n          [\r\n            song =>\r\n              _.max(\r\n                _.map(\r\n                  res => (res.nickname === protagonist ? res.dateObject.getTime() : 0),\r\n                  song.results\r\n                )\r\n              ),\r\n          ],\r\n          ['desc']\r\n        ),\r\n      ];\r\n  const protagonistSorting = [\r\n    _.filter(row => _.map('nickname', row.results).includes(protagonist)),\r\n    _.map(row => {\r\n      const protIndex = _.findIndex({ nickname: protagonist }, row.results);\r\n      const protScore = row.results[protIndex].score;\r\n      const enemies = _.flow([\r\n        _.take(protIndex),\r\n        _.uniqBy('nickname'),\r\n        _.remove(res => excludeAntagonists.includes(res.nickname) || res.score === protScore),\r\n      ])(row.results);\r\n      const distance = Math.sqrt(\r\n        _.reduce((dist, enemy) => dist + (enemy.score / protScore - 0.99) ** 2, 0, enemies)\r\n      );\r\n      return {\r\n        ...row,\r\n        distanceFromProtagonist: distance,\r\n      };\r\n    }),\r\n    _.orderBy(['distanceFromProtagonist'], ['desc']),\r\n  ];\r\n  const getScoreSorting = direction => [\r\n    _.filter(row => _.map('nickname', row.results).includes(protagonist)),\r\n    _.orderBy(\r\n      [\r\n        row => {\r\n          return _.getOr(\r\n            direction === 'asc' ? Infinity : -Infinity,\r\n            'ratingDiff',\r\n            _.find({ nickname: protagonist }, row.results)\r\n          );\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const sortingFunctions =\r\n    {\r\n      [SORT.DEFAULT]: defaultSorting,\r\n      [SORT.NEW_SCORES_PLAYER]: newScoresProtagonistSorting,\r\n      [SORT.PROTAGONIST]: protagonistSorting,\r\n      [SORT.RANK_ASC]: getScoreSorting('asc'),\r\n      [SORT.RANK_DESC]: getScoreSorting('desc'),\r\n    }[sortingType] || defaultSorting;\r\n\r\n  const result = _.flow(\r\n    _.compact([\r\n      filter.chartRange && (items => filterCharts(filter.chartRange, items)),\r\n      !filter.showRank &&\r\n        _.map(row => ({ ...row, results: _.filter(res => !res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        filter.showOnlyRank &&\r\n        _.map(row => ({ ...row, results: _.filter(res => res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        !filter.showOnlyRank &&\r\n        !filter.showRankAndNorank &&\r\n        _.map(row => {\r\n          const occuredNames = [];\r\n          return {\r\n            ...row,\r\n            results: _.filter(res => {\r\n              const alreadyOccured = occuredNames.includes(res.nickname);\r\n              occuredNames.push(res.nickname);\r\n              return !alreadyOccured;\r\n            }, row.results),\r\n          };\r\n        }),\r\n      (names.length || namesOr.length || namesNot.length) &&\r\n        _.filter(row => {\r\n          const rowNames = _.map('nickname', row.results);\r\n          return (\r\n            (!names.length || _.every(name => rowNames.includes(name), names)) &&\r\n            (!namesOr.length || _.some(name => rowNames.includes(name), namesOr)) &&\r\n            (!namesNot.length || !_.some(name => rowNames.includes(name), namesNot))\r\n          );\r\n        }),\r\n      _.filter(row => _.size(row.results)),\r\n      ...sortingFunctions,\r\n      filter.song && (items => matchSorter(items, filter.song, { keys: ['song'] })),\r\n    ])\r\n  )(data);\r\n  // console.log('Elapsed:', performance.now() - start);\r\n  return result;\r\n};\r\n\r\nexport const filteredDataSelector = createSelector(\r\n  state => state.top.data,\r\n  state => state.top.filter,\r\n  getFilteredData\r\n);\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash/fp';\r\nimport Select from 'react-select';\r\nimport classNames from 'classnames';\r\nimport numeral from 'numeral';\r\nimport localForage from 'localforage';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport {\r\n  FaRedoAlt,\r\n  FaExclamationTriangle,\r\n  FaSearch,\r\n  FaYoutube,\r\n  FaAngleDoubleUp,\r\n} from 'react-icons/fa';\r\n\r\n// styles\r\nimport './leaderboard.scss';\r\n\r\n// components\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport CollapsibleBar from 'components/Shared/CollapsibleBar';\r\nimport ChartFilter from './ChartFilter';\r\nimport PresetsControl from './PresetsControl';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\nimport { SORT } from 'constants/leaderboard';\r\nimport { DEBUG } from 'constants/env';\r\n\r\n// reducers\r\nimport { fetchTopScores, setFilter, resetFilter, defaultFilter } from 'reducers/top';\r\nimport { selectPreset, openPreset } from 'reducers/presets';\r\n\r\n// utils\r\nimport { getExp } from 'utils/exp';\r\nimport { tooltipFormatter, tooltipFormatterForBests, getTimeAgo } from 'utils/leaderboards';\r\nimport { colorsArray } from 'utils/colors';\r\nimport { playersSelector, filteredDataSelector } from 'reducers/selectors';\r\n\r\n// code\r\nconst sortingOptions = [\r\n  {\r\n    label: 'от новых скоров',\r\n    value: SORT.DEFAULT,\r\n  },\r\n  {\r\n    label: 'от новых скоров конкретного игрока',\r\n    value: SORT.NEW_SCORES_PLAYER,\r\n  },\r\n  // {\r\n  //   label: 'отставанию от остальных',\r\n  //   value: SORT.PROTAGONIST,\r\n  // },\r\n  // ...(DEBUG\r\n  //   ? [\r\n  {\r\n    label: 'от худших результатов',\r\n    value: SORT.RANK_ASC,\r\n  },\r\n  {\r\n    label: 'от лучших результатов',\r\n    value: SORT.RANK_DESC,\r\n  },\r\n  //   ]\r\n  // : []),\r\n];\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    players: playersSelector(state),\r\n    filteredData: filteredDataSelector(state),\r\n    data: state.top.data,\r\n    filter: state.top.filter,\r\n    error: state.top.error,\r\n    isLoading: state.top.isLoading,\r\n    presets: state.presets.presets,\r\n    currentPreset: state.presets.currentPreset,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopScores,\r\n  setFilter,\r\n  resetFilter,\r\n  selectPreset,\r\n  openPreset,\r\n};\r\n\r\nclass Leaderboard extends Component {\r\n  static propTypes = {\r\n    match: toBe.object,\r\n    data: toBe.array,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  state = { showItemsCount: 20 };\r\n\r\n  setFilter = _.curry((name, value) => {\r\n    const filter = { ...this.props.filter, [name]: value };\r\n    this.props.setFilter(filter);\r\n    localForage.setItem('filter', filter);\r\n  });\r\n\r\n  resetFilter = () => {\r\n    this.props.resetFilter();\r\n    localForage.setItem('filter', defaultFilter);\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchTopScores();\r\n  };\r\n\r\n  onTypeSongName = _.debounce(300, value => {\r\n    this.setFilter('song', value);\r\n  });\r\n\r\n  renderSimpleSearch() {\r\n    const { isLoading, filter } = this.props;\r\n    return (\r\n      <div className=\"simple-search\">\r\n        <div className=\"song-name _margin-right _margin-bottom\">\r\n          <Input\r\n            value={filter.song || ''}\r\n            placeholder=\"название песни...\"\r\n            className=\"form-control\"\r\n            onChange={this.onTypeSongName}\r\n          />\r\n        </div>\r\n        <div className=\"chart-range _margin-right _margin-bottom\">\r\n          <ChartFilter filterValue={filter.chartRange} onChange={this.setFilter('chartRange')} />\r\n        </div>\r\n        <div className=\"_flex-fill\" />\r\n        <div className=\"_flex-row _margin-bottom\">\r\n          <PresetsControl />\r\n          <button className=\"btn btn-sm btn-dark btn-icon _margin-right\" onClick={this.resetFilter}>\r\n            <FaRedoAlt /> сбросить фильтры\r\n          </button>\r\n          <button\r\n            disabled={isLoading}\r\n            className=\"btn btn-sm btn-dark btn-icon\"\r\n            onClick={this.onRefresh}\r\n          >\r\n            <FaSearch /> обновить\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFilters() {\r\n    const { players, filter } = this.props;\r\n\r\n    return (\r\n      <div className=\"filters\">\r\n        <div className=\"people-filters\">\r\n          <label className=\"label\">показывать чарты, которые сыграл:</label>\r\n          <div className=\"players-block\">\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">каждый из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'players', filter)}\r\n                onChange={this.setFilter('players')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и хоть один из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersOr', filter)}\r\n                onChange={this.setFilter('playersOr')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и никто из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersNot', filter)}\r\n                onChange={this.setFilter('playersNot')}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Toggle\r\n            checked={_.getOr(false, 'showRank', filter)}\r\n            onChange={this.setFilter('showRank')}\r\n          >\r\n            показывать скоры на ранке\r\n          </Toggle>\r\n        </div>\r\n        {_.get('showRank', filter) && (\r\n          <>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showOnlyRank', filter)}\r\n                onChange={value => {\r\n                  this.setFilter('showOnlyRank', value);\r\n                  if (_.get('showRankAndNorank', filter)) {\r\n                    this.setFilter('showRankAndNorank', false);\r\n                  }\r\n                }}\r\n              >\r\n                <strong>только</strong> на ранке\r\n              </Toggle>\r\n            </div>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showRankAndNorank', filter)}\r\n                onChange={value => {\r\n                  this.setFilter('showRankAndNorank', value);\r\n                  if (_.get('showOnlyRank', filter)) {\r\n                    this.setFilter('showOnlyRank', false);\r\n                  }\r\n                }}\r\n              >\r\n                показывать лучшие скоры с ранком и без\r\n              </Toggle>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSortings() {\r\n    const { players, filter } = this.props;\r\n    return (\r\n      <div className=\"sortings\">\r\n        <div>\r\n          <label className=\"label\">сортировка:</label>\r\n          <Select\r\n            placeholder=\"выберите сортировку\"\r\n            className=\"select\"\r\n            classNamePrefix=\"select\"\r\n            isClearable={false}\r\n            options={sortingOptions}\r\n            value={_.getOr(sortingOptions[0], 'sortingType', filter)}\r\n            onChange={this.setFilter('sortingType')}\r\n          />\r\n        </div>\r\n        {[SORT.PROTAGONIST, SORT.RANK_ASC, SORT.RANK_DESC, SORT.NEW_SCORES_PLAYER].includes(\r\n          _.get('sortingType.value', filter)\r\n        ) && (\r\n          <div>\r\n            <label className=\"label\">игрок:</label>\r\n            <Select\r\n              className={classNames('select players', {\r\n                'red-border': !_.get('protagonist', filter),\r\n              })}\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              value={_.getOr(null, 'protagonist', filter)}\r\n              onChange={this.setFilter('protagonist')}\r\n            />\r\n          </div>\r\n        )}\r\n        {[SORT.PROTAGONIST].includes(_.get('sortingType.value', filter)) && (\r\n          <div>\r\n            <label className=\"label\">не учитывать в сравнении:</label>\r\n            <Select\r\n              closeMenuOnSelect={false}\r\n              className=\"select players\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              isMulti\r\n              value={_.getOr([], 'excludeAntagonists', filter)}\r\n              onChange={this.setFilter('excludeAntagonists')}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, filteredData, error, filter } = this.props;\r\n    const { showItemsCount } = this.state;\r\n    const canShowMore = filteredData.length > showItemsCount;\r\n    const visibleData = _.slice(0, showItemsCount, filteredData);\r\n\r\n    const showProtagonistRatingChange = [SORT.PROTAGONIST, SORT.RANK_ASC, SORT.RANK_DESC].includes(\r\n      _.get('sortingType.value', filter)\r\n    );\r\n    const highlightProtagonist = [\r\n      SORT.PROTAGONIST,\r\n      SORT.RANK_ASC,\r\n      SORT.RANK_DESC,\r\n      SORT.NEW_SCORES_PLAYER,\r\n    ].includes(_.get('sortingType.value', filter));\r\n    const protagonistName = _.get('protagonist.value', filter);\r\n    const uniqueSelectedNames = _.slice(\r\n      0,\r\n      colorsArray.length,\r\n      _.uniq(\r\n        _.compact([\r\n          highlightProtagonist && protagonistName,\r\n          ..._.map('value', filter.players),\r\n          ..._.map('value', filter.playersOr),\r\n        ])\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div className=\"leaderboard-page\">\r\n        <div className=\"content\">\r\n          <div className=\"search-block\">\r\n            {this.renderSimpleSearch()}\r\n            <CollapsibleBar title=\"фильтры\">{this.renderFilters()}</CollapsibleBar>\r\n            <CollapsibleBar title=\"сортировка\">{this.renderSortings()}</CollapsibleBar>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!!this.props.presets.length && (\r\n            <div className=\"presets-buttons\">\r\n              <span>пресеты:</span>\r\n              {this.props.presets.map(preset => (\r\n                <ToggleButton\r\n                  key={preset.name}\r\n                  text={preset.name}\r\n                  className=\"btn btn-sm btn-dark _margin-right\"\r\n                  active={_.get('filter', preset) === this.props.filter}\r\n                  onToggle={() => {\r\n                    this.props.selectPreset(preset);\r\n                    this.props.openPreset();\r\n                  }}\r\n                ></ToggleButton>\r\n              ))}\r\n            </div>\r\n          )}\r\n          <div className=\"top-list\">\r\n            {_.isEmpty(filteredData) && !isLoading && (error ? error.message : 'ничего не найдено')}\r\n            {!isLoading &&\r\n              visibleData.map((chart, chartIndex) => {\r\n                let topPlace = 1;\r\n                const occuredNicknames = [];\r\n                const results = chart.results.map((res, index) => {\r\n                  const isSecondOccurenceInResults = occuredNicknames.includes(res.nickname);\r\n                  occuredNicknames.push(res.nickname);\r\n                  if (index === 0) {\r\n                    topPlace = 1;\r\n                  } else if (\r\n                    !isSecondOccurenceInResults &&\r\n                    res.score !== _.get([index - 1, 'score'], chart.results)\r\n                  ) {\r\n                    topPlace += 1;\r\n                  }\r\n                  return {\r\n                    ...res,\r\n                    topPlace,\r\n                    isSecondOccurenceInResults,\r\n                  };\r\n                });\r\n                return (\r\n                  <div className=\"song-block\" key={chart.song + chart.chartLabel}>\r\n                    <div className=\"song-name\">\r\n                      <div\r\n                        className={classNames('chart-name', {\r\n                          single: chart.chartType === 'S',\r\n                          singlep: chart.chartType === 'SP',\r\n                          doublep: chart.chartType === 'DP',\r\n                          double: chart.chartType === 'D',\r\n                          coop: chart.chartType === 'COOP',\r\n                        })}\r\n                      >\r\n                        <span className=\"chart-letter\">{chart.chartType}</span>\r\n                        <span className=\"chart-number\">{chart.chartLevel}</span>\r\n                      </div>\r\n                      <div>{chart.song}</div>\r\n                      <div className=\"youtube-link\">\r\n                        <a\r\n                          href={`https://youtube.com/results?search_query=${chart.song\r\n                            .replace(/ /g, '+')\r\n                            .replace(/-/g, '')}+${chart.chartLabel}`}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          <FaYoutube />\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"charts\">\r\n                      <div className=\"chart\">\r\n                        <div className=\"results\">\r\n                          <table>\r\n                            {chartIndex === 0 && (\r\n                              <thead>\r\n                                <tr>\r\n                                  <th className=\"place\"></th>\r\n                                  <th className=\"nickname\"></th>\r\n                                  <th className=\"judge\"></th>\r\n                                  <th className=\"score\">score</th>\r\n                                  <th className=\"grade\"></th>\r\n                                  <th className=\"number\">miss</th>\r\n                                  <th className=\"number\">bad</th>\r\n                                  <th className=\"number\">good</th>\r\n                                  <th className=\"number\">great</th>\r\n                                  <th className=\"number\">perfect</th>\r\n                                  <th className=\"combo\">combo</th>\r\n                                  <th className=\"accuracy\">accuracy</th>\r\n                                  <th className=\"date\"></th>\r\n                                </tr>\r\n                              </thead>\r\n                            )}\r\n                            <tbody>\r\n                              {results.map((res, index) => {\r\n                                const nameIndex = uniqueSelectedNames.indexOf(res.nickname);\r\n                                let placeDifference, newIndex;\r\n                                if (res.scoreIncrease && res.date === chart.latestScoreDate) {\r\n                                  const prevScore = res.score - res.scoreIncrease;\r\n                                  newIndex = _.findLastIndex(res => res.score > prevScore, results);\r\n                                  placeDifference = newIndex - index;\r\n                                }\r\n                                return (\r\n                                  <tr\r\n                                    key={res.score + res.nickname}\r\n                                    className={classNames({\r\n                                      empty: !res.isExactDate,\r\n                                      latest: res.date === chart.latestScoreDate,\r\n                                    })}\r\n                                  >\r\n                                    <td className=\"place\">\r\n                                      {res.isSecondOccurenceInResults ? '' : `#${res.topPlace}`}\r\n                                    </td>\r\n                                    <td\r\n                                      className=\"nickname\"\r\n                                      style={\r\n                                        nameIndex > -1\r\n                                          ? { fontWeight: 'bold', color: colorsArray[nameIndex] }\r\n                                          : {}\r\n                                      }\r\n                                    >\r\n                                      {res.nickname}\r\n                                      {!!placeDifference && (\r\n                                        <span className=\"change-holder up\">\r\n                                          <span>{placeDifference}</span>\r\n                                          <FaAngleDoubleUp />\r\n                                        </span>\r\n                                      )}\r\n                                      {DEBUG && (\r\n                                        <span>\r\n                                          {' '}\r\n                                          {res.startingRating &&\r\n                                            Math.round(res.startingRating)}{' '}\r\n                                          {res.ratingDiff && Math.round(res.ratingDiff)}{' '}\r\n                                          {res.ratingDiffLast && Math.round(res.ratingDiffLast)}\r\n                                        </span>\r\n                                      )}\r\n                                      {!DEBUG &&\r\n                                        showProtagonistRatingChange &&\r\n                                        res.nickname === protagonistName &&\r\n                                        res.ratingDiff && (\r\n                                          <span>\r\n                                            {` (${res.ratingDiff > 0 ? '+' : ''}${Math.round(\r\n                                              res.ratingDiff\r\n                                            )})`}\r\n                                          </span>\r\n                                        )}\r\n                                      {_.get('sortingType.value', filter) === SORT.PROTAGONIST &&\r\n                                        res.nickname === protagonistName &&\r\n                                        chart.distanceFromProtagonist > 0 && (\r\n                                          <span className=\"protagonist-diff\">\r\n                                            {' '}\r\n                                            -{(chart.distanceFromProtagonist * 100).toFixed(1)}%\r\n                                          </span>\r\n                                        )}\r\n                                    </td>\r\n                                    <td\r\n                                      className={classNames('judge', {\r\n                                        vj: res.isRank,\r\n                                        hj: res.isHJ,\r\n                                      })}\r\n                                    >\r\n                                      {res.isRank && (\r\n                                        <div className=\"inner\">\r\n                                          {res.isExactDate ? (\r\n                                            'VJ'\r\n                                          ) : (\r\n                                            <Tooltip\r\n                                              content={\r\n                                                <div>\r\n                                                  наличие ранка на этом результате было угадано,\r\n                                                  основываясь на скоре\r\n                                                </div>\r\n                                              }\r\n                                              tooltipClassName=\"pumpking-tooltip\"\r\n                                            >\r\n                                              VJ?\r\n                                            </Tooltip>\r\n                                          )}\r\n                                        </div>\r\n                                      )}\r\n                                      {res.isHJ && <div className=\"inner\">HJ</div>}\r\n                                    </td>\r\n                                    <td className=\"score\">\r\n                                      <Overlay\r\n                                        overlayClassName=\"score-overlay-outer\"\r\n                                        overlayItem={\r\n                                          <span className=\"score-span\">\r\n                                            {/* {res.scoreIncrease > res.score * 0.8 && <FaPlus />} */}\r\n                                            {res.scoreIncrease > res.score * 0.8 && '*'}\r\n                                            {numeral(res.score).format('0,0')}\r\n                                          </span>\r\n                                        }\r\n                                        placement=\"top\"\r\n                                      >\r\n                                        <div className=\"score-overlay\">\r\n                                          {DEBUG && (\r\n                                            <>\r\n                                              <div>\r\n                                                <span className=\"_grey\">result id: </span>\r\n                                                {res.id}\r\n                                              </div>\r\n                                              <div>\r\n                                                <span className=\"_grey\">player id: </span>\r\n                                                {res.playerId}\r\n                                              </div>\r\n                                            </>\r\n                                          )}\r\n                                          <div>\r\n                                            <span className=\"_grey\">игрок: </span>\r\n                                            <NavLink\r\n                                              exact\r\n                                              to={routes.profile.getPath({ id: res.playerId })}\r\n                                            >\r\n                                              {res.nickname} ({res.nicknameArcade})\r\n                                            </NavLink>\r\n                                          </div>\r\n                                          <div>\r\n                                            <span className=\"_grey\">опыт: </span>+\r\n                                            {numeral(getExp(res, chart)).format('0,0')}\r\n                                          </div>\r\n                                          {!res.isExactDate && (\r\n                                            <div className=\"warning\">\r\n                                              <FaExclamationTriangle />\r\n                                              рекорд взят с my best. часть данных недоступна\r\n                                            </div>\r\n                                          )}\r\n                                          {res.isExactDate && (\r\n                                            <>\r\n                                              {res.mods && (\r\n                                                <div>\r\n                                                  <span className=\"_grey\">моды: </span>\r\n                                                  {res.mods}\r\n                                                </div>\r\n                                              )}\r\n                                              {res.calories && (\r\n                                                <div>\r\n                                                  <span className=\"_grey\">ккал: </span>\r\n                                                  {res.calories}\r\n                                                </div>\r\n                                              )}\r\n                                              {res.scoreIncrease && (\r\n                                                <div>\r\n                                                  <span className=\"_grey\">прирост: </span>+\r\n                                                  {numeral(res.scoreIncrease).format('0,0')}\r\n                                                </div>\r\n                                              )}\r\n                                              {res.originalChartMix && (\r\n                                                <div>\r\n                                                  <div className=\"warning\">\r\n                                                    <FaExclamationTriangle />\r\n                                                    было сыграно на {res.originalChartMix}\r\n                                                  </div>\r\n                                                  {res.originalChartLabel && (\r\n                                                    <div>\r\n                                                      <span className=\"_grey\">\r\n                                                        оригинальный чарт:{' '}\r\n                                                      </span>\r\n                                                      {res.originalChartLabel}\r\n                                                    </div>\r\n                                                  )}\r\n                                                  {res.originalScore && (\r\n                                                    <div>\r\n                                                      <span className=\"_grey\">\r\n                                                        оригинальный скор:{' '}\r\n                                                      </span>\r\n                                                      {res.originalScore}\r\n                                                    </div>\r\n                                                  )}\r\n                                                </div>\r\n                                              )}\r\n                                              {res.scoreIncrease > res.score * 0.8 && '* сайтрид'}\r\n                                            </>\r\n                                          )}\r\n                                        </div>\r\n                                      </Overlay>\r\n                                    </td>\r\n                                    <td className=\"grade\">\r\n                                      <div className=\"img-holder\">\r\n                                        {res.grade && res.grade !== '?' && (\r\n                                          <img\r\n                                            src={`${process.env.PUBLIC_URL}/grades/${res.grade}.png`}\r\n                                            alt={res.grade}\r\n                                          />\r\n                                        )}\r\n                                        {res.grade === '?' && null}\r\n                                      </div>\r\n                                    </td>\r\n                                    <td className=\"number miss\">{res.miss}</td>\r\n                                    <td className=\"number bad\">{res.bad}</td>\r\n                                    <td className=\"number good\">{res.good}</td>\r\n                                    <td className=\"number great\">{res.great}</td>\r\n                                    <td className=\"number perfect\">{res.perfect}</td>\r\n                                    <td className=\"combo\">\r\n                                      {res.combo}\r\n                                      {res.combo ? 'x' : ''}\r\n                                    </td>\r\n                                    <td className=\"accuracy\">\r\n                                      {res.accuracy}\r\n                                      {res.accuracy ? '%' : ''}\r\n                                    </td>\r\n                                    <td\r\n                                      className={classNames('date', {\r\n                                        latest: res.date === chart.latestScoreDate,\r\n                                      })}\r\n                                    >\r\n                                      <Tooltip\r\n                                        content={\r\n                                          res.isExactDate\r\n                                            ? tooltipFormatter(res.dateObject)\r\n                                            : tooltipFormatterForBests(res.dateObject)\r\n                                        }\r\n                                        tooltipClassName=\"pumpking-tooltip\"\r\n                                      >\r\n                                        {getTimeAgo(res.dateObject)}\r\n                                        {res.isExactDate ? '' : '?'}\r\n                                      </Tooltip>\r\n                                    </td>\r\n                                  </tr>\r\n                                );\r\n                              })}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            {!isLoading && canShowMore && (\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() =>\r\n                  this.setState(state => ({ showItemsCount: state.showItemsCount + 10 }))\r\n                }\r\n              >\r\n                show more...\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Leaderboard);\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n// import numeral from 'numeral';\r\nimport classNames from 'classnames';\r\nimport { GiQueenCrown } from 'react-icons/gi';\r\nimport { FaAngleDoubleUp, FaAngleDoubleDown } from 'react-icons/fa';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nimport { getRankImg } from 'utils/exp';\r\n\r\nconst getGradeImg = grade => (\r\n  <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n);\r\n\r\nexport default function RankingList({ ranking, isLoading }) {\r\n  return (\r\n    <div className=\"ranking-list\">\r\n      {_.isEmpty(ranking) && !isLoading && 'ничего не найдено'}\r\n      {isLoading && <Loader />}\r\n      {!isLoading && (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"place\"></th>\r\n              <th className=\"change\"></th>\r\n              <th className=\"exp-rank\">rank</th>\r\n              <th className=\"name\">name</th>\r\n              <th className=\"name2\">piu name</th>\r\n              <th className=\"rating\">elo</th>\r\n              <th className=\"rating-change-cell\"></th>\r\n              {/* <th className=\"total-score\">total score</th> */}\r\n              <th className=\"grades sss\">{getGradeImg('SSS')}</th>\r\n              <th className=\"grades ss\">{getGradeImg('SS')}</th>\r\n              <th className=\"grades s\">{getGradeImg('S')}</th>\r\n              <th className=\"grades a\">{getGradeImg('A+')}</th>\r\n              <th className=\"grades b\">{getGradeImg('B')}</th>\r\n              <th className=\"grades c\">{getGradeImg('C')}</th>\r\n              <th className=\"grades d\">{getGradeImg('D')}</th>\r\n              <th className=\"grades f\">{getGradeImg('F')}</th>\r\n              <th className=\"playcount\">scores</th>\r\n              {/* <th className=\"calories\">kcal</th> */}\r\n              <th className=\"accuracy\">accuracy</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {ranking.map((player, playerIndex) => {\r\n              return (\r\n                <tr className=\"player\" key={player.name}>\r\n                  <td className=\"place\">\r\n                    {playerIndex === 0 ? <GiQueenCrown /> : `#${playerIndex + 1}`}\r\n                  </td>\r\n                  <td className=\"change\">\r\n                    {player.change > 0 && (\r\n                      <div className=\"change-holder up\">\r\n                        <span>{player.change}</span>\r\n                        <FaAngleDoubleUp />\r\n                      </div>\r\n                    )}\r\n                    {player.change < 0 && (\r\n                      <div className=\"change-holder down\">\r\n                        <span>{-player.change}</span>\r\n                        <FaAngleDoubleDown />\r\n                      </div>\r\n                    )}\r\n                    {!!player.change && _.isString(player.change) && (\r\n                      <div className=\"change-holder text\">\r\n                        <span>{player.change}</span>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"exp-rank\">{getRankImg(player.expRank)}</td>\r\n                  <td className=\"name\">\r\n                    <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                      {player.name}\r\n                    </NavLink>\r\n                  </td>\r\n                  <td className=\"name\">\r\n                    <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                      {player.nameArcade}\r\n                    </NavLink>\r\n                  </td>\r\n                  <td className=\"rating\">{player.rating}</td>\r\n                  <td className=\"rating-change-cell\">\r\n                    {!!player.prevRating && player.prevRating !== player.rating && (\r\n                      <span\r\n                        className={classNames('rating-change', {\r\n                          down: player.prevRating > player.rating,\r\n                          up: player.prevRating < player.rating,\r\n                        })}\r\n                      >\r\n                        {player.prevRating < player.rating ? '+' : ''}\r\n                        {player.rating - player.prevRating}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                  {/* <td className=\"total-score\">\r\n                    <div>S: {numeral(player.totalScore.S).format('0,0')}</div>\r\n                    <div>D: {numeral(player.totalScore.D).format('0,0')}</div>\r\n                  </td> */}\r\n                  <td className=\"grades sss\">{player.grades.SSS}</td>\r\n                  <td className=\"grades ss\">{player.grades.SS}</td>\r\n                  <td className=\"grades s\">{player.grades.S}</td>\r\n                  <td className=\"grades a\">{player.grades.A}</td>\r\n                  <td className=\"grades b\">{player.grades.B}</td>\r\n                  <td className=\"grades c\">{player.grades.C}</td>\r\n                  <td className=\"grades d\">{player.grades.D}</td>\r\n                  <td className=\"grades f\">{player.grades.F}</td>\r\n                  <td className=\"playcount\">{player.count}</td>\r\n                  {/* <td className=\"calories\">{numeral(player.totalScore.calories).format('0,0')}</td> */}\r\n                  <td className=\"accuracy\">\r\n                    {player.accuracy ? `${player.accuracy.toFixed(2)}%` : ''}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function RankingFaq() {\r\n  return (\r\n    <div className=\"faq\">\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Как считается рейтинг?</div>\r\n        <div className=\"answer\">\r\n          A: Используется <a href=\"https://en.wikipedia.org/wiki/Elo_rating_system\">рейтинг Эло</a>,\r\n          широко используемый в шахматах и других играх, слегка модицированный под условия игры на\r\n          пампе. Средний рейтинг - 1000. Коэффициент К зависит от уровня чарта (более сложные чарты\r\n          сильнее влияют на рейтинг). Количество очков влияет на заработанный рейтинг (маленький\r\n          отрыв от противника не даст так много очков как большой отрыв).\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Система Эло используется для игр 1 на 1, как она используется на пампе, где на одном\r\n          чарте играет много игроков?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: Рекорды на одном чарте делятся на несколько игр 1 на 1. Если есть 3 игрока: A, B, C; то\r\n          считается, что было 3 отдельные игры: A vs B, A vs C, B vs C.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Учитываются ли рекорды на ранке в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: Да. Как минимум потому что у нас есть много рекордов, взятых с машин бестов, и мы не\r\n          знаем наверняка, на ранке они или нет. Если у игрока в топе есть два скора - на ранке и\r\n          без ранка, используется тот, где больше очков.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Почему меня нет в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: В таблицу попадают только те, у кого есть хотя бы 20 игр 1 на 1. Первые 20 игр\r\n          используются для определения изначального рейтинга.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Почему суммарное количество оценок S-A-B не совпадает с общим количеством скоров?\r\n        </div>\r\n        <div className=\"answer\">A: Не для каждого результата известна оценка.</div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Если у меня есть несколько рекордов на А, несколько на А+, как считается суммарное\r\n          количество грейдов в таблице?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: В каждой колонке учитываются обе буквы - и треснутые, и с удержанным лайфом. То есть и\r\n          А, и А+ идут в колонку А. Точно так же для B, C, D.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Убери аккураси из таблицы!</div>\r\n        <div className=\"answer\">A: Грем, это секция для вопросов.</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle } from 'react-icons/fa';\r\nimport { Link, Route, withRouter } from 'react-router-dom';\r\n\r\n// styles\r\nimport './ranking.scss';\r\n\r\n// components\r\nimport RankingList from './RankingList';\r\nimport RankingFaq from './RankingFaq';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport { fetchTopScores } from 'reducers/top';\r\n\r\n// utils\r\n\r\n// code\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ranking: state.ranking.data,\r\n    error: state.top.error,\r\n    isLoading: state.top.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopScores,\r\n};\r\n\r\nclass Ranking extends Component {\r\n  static propTypes = {\r\n    ranking: toBe.array,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    ranking: [],\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchTopScores();\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, ranking, error } = this.props;\r\n\r\n    return (\r\n      <div className=\"ranking-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.path}\r\n              render={() => (\r\n                <>\r\n                  <Link to={routes.ranking.faq.path}>\r\n                    <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n                      <FaQuestionCircle /> faq\r\n                    </button>\r\n                  </Link>\r\n                  <button\r\n                    disabled={isLoading}\r\n                    className=\"btn btn-sm btn-dark btn-icon\"\r\n                    onClick={this.onRefresh}\r\n                  >\r\n                    <FaSearch /> обновить\r\n                  </button>\r\n                </>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.faq.path}\r\n              render={() => (\r\n                <Link to={routes.ranking.path}>\r\n                  <button className=\"btn btn-sm btn-dark btn-icon\">назад</button>\r\n                </Link>\r\n              )}\r\n            />\r\n          </div>\r\n          <Route\r\n            exact\r\n            path={routes.ranking.path}\r\n            render={() => <RankingList ranking={ranking} isLoading={isLoading} />}\r\n          />\r\n          <Route exact path={routes.ranking.faq.path} component={RankingFaq} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Ranking));\r\n","import React from 'react';\r\n\r\nimport { ranks, getRankImg } from 'utils/exp';\r\n\r\nexport default function ExpFaq() {\r\n  return (\r\n    <div className=\"faq-exp\">\r\n      <div className=\"faq-header\">\r\n        <strong>Опыт</strong> игрока основывается на количестве сыгранных песен и чартов.\r\n        <br />\r\n        Чем выше уровень чарта и чем лучше оценка на чарте, тем больше опыта он даёт.\r\n        <br />\r\n        Повторные попытки на тех же чартах не дают больше опыта. Чтобы поднимать свой уровень, играй\r\n        новые треки и чарты.\r\n      </div>\r\n      <div className=\"faq-header\">Список уровней и необходимый опыт для их получения:</div>\r\n      <div className=\"ranks-list\">\r\n        {ranks.map(rank => (\r\n          <div key={rank.threshold} className=\"rank\">\r\n            <div className=\"exp-rank\">{getRankImg(rank)}</div>\r\n            <div className=\"threshold\">{rank.threshold}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle, FaTimes } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport ReactModal from 'react-modal';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as RechartsTooltip,\r\n  ReferenceLine,\r\n  CartesianGrid,\r\n  Line,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Label,\r\n} from 'recharts';\r\nimport { createSelector } from 'reselect';\r\nimport _ from 'lodash/fp';\r\n\r\n// styles\r\nimport './profile.scss';\r\n\r\n// constants\r\n\r\n// components\r\nimport Range from 'components/Shared/Range';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport ExpFaq from './ExpFaq';\r\n\r\n// reducers\r\nimport { fetchTopScores } from 'reducers/top';\r\nimport { setProfilesFilter, resetProfilesFilter } from 'reducers/profiles';\r\n\r\n// utils\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { achievements } from 'utils/achievements';\r\nimport { getRankImg } from 'utils/exp';\r\n\r\n// code\r\nconst MIN_GRAPH_HEIGHT = undefined;\r\nconst defaultGradesDistribution = {\r\n  SSS: 0,\r\n  SS: 0,\r\n  S: 0,\r\n  'A+': 0,\r\n  A: 0,\r\n  B: 0,\r\n  C: 0,\r\n  D: 0,\r\n  F: 0,\r\n};\r\nconst defaultGradesWithLevelsDistribution = _.flow(\r\n  _.flatMap(type => {\r\n    return _.flow(\r\n      _.toPairs,\r\n      _.map(([grade, value]) => [`${type}-${grade}`, value])\r\n    )(defaultGradesDistribution);\r\n  }),\r\n  _.fromPairs\r\n)(['S', 'D']);\r\n\r\nconst cutRange = (array, range) => {\r\n  const startIndex = _.findIndex(item => item.date > range[0], array);\r\n  const endIndex = _.findLastIndex(item => item.date < range[1], array);\r\n  let firstElement =\r\n    startIndex > 0 ? array[startIndex - 1] : startIndex === 0 ? array[startIndex] : _.last(array);\r\n  let lastElement = endIndex > -1 ? array[endIndex] : _.first(array);\r\n  firstElement = { ...firstElement, date: range[0] };\r\n  lastElement = { ...lastElement, date: range[1] };\r\n  const middleElements =\r\n    startIndex > -1 && endIndex > -1 ? array.slice(startIndex, endIndex + 1) : [];\r\n  return [firstElement, ...middleElements, lastElement];\r\n};\r\nconst profileSelector = createSelector(\r\n  (state, props) => _.toInteger(props.match.params.id),\r\n  state => state.profiles.data,\r\n  state => state.profiles.filter,\r\n  state => state.top.players,\r\n  state => state.ranking.data,\r\n  state => state.tracklist.data,\r\n  (id, data, filter, players, ranking, tracklist) => {\r\n    const profile = data[id];\r\n    if (_.isEmpty(profile)) {\r\n      return null;\r\n    }\r\n    const levelsDistribution = _.flow(\r\n      _.get('resultsByLevel'),\r\n      _.toPairs,\r\n      _.map(([x, y]) => ({\r\n        x: _.toInteger(x),\r\n        S:\r\n          (_.size(_.filter(res => res.chart.chartType === 'S' || res.chart.chartType === 'SP', y)) /\r\n            tracklist.singlesLevels[x]) *\r\n          100,\r\n        D:\r\n          (-_.size(\r\n            _.filter(res => res.chart.chartType === 'D' || res.chart.chartType === 'DP', y)\r\n          ) /\r\n            tracklist.doublesLevels[x]) *\r\n          100,\r\n      }))\r\n    )(profile);\r\n    const gradesData = _.flow(\r\n      _.get('resultsByLevel'),\r\n      _.toPairs,\r\n      _.map(\r\n        _.update('[1].result.grade', grade =>\r\n          grade && grade.includes('+') && grade !== 'A+' ? grade.replace('+', '') : grade\r\n        )\r\n      )\r\n    )(profile);\r\n    const gradesDistribution = _.flow(\r\n      _.map(([x, y]) => ({\r\n        x: _.toInteger(x),\r\n        ...defaultGradesDistribution,\r\n        ..._.omit('?', _.mapValues(_.size, _.groupBy('result.grade', y))),\r\n      })),\r\n      _.map(item => {\r\n        const grades = _.pick(Object.keys(defaultGradesDistribution), item);\r\n        const sum = _.sum(_.values(grades));\r\n        return {\r\n          ...item,\r\n          gradesValues: grades,\r\n          ...(sum === 0 ? grades : _.mapValues(value => (100 * value) / sum, grades)),\r\n        };\r\n      })\r\n    )(gradesData);\r\n    const gradesAndLevelsDistribution = _.flow(\r\n      _.map(([x, y]) => {\r\n        const groupedResults = _.groupBy('result.grade', y);\r\n        const counts = _.omit(\r\n          '?',\r\n          _.mapValues(\r\n            _.countBy(res => {\r\n              return res.chart.chartType === 'S' || res.chart.chartType === 'SP'\r\n                ? 'S'\r\n                : res.chart.chartType === 'D' || res.chart.chartType === 'DP'\r\n                ? 'D'\r\n                : 'Other';\r\n            }),\r\n            groupedResults\r\n          )\r\n        );\r\n        const reduced = _.reduce(\r\n          (acc, [grade, levelsData]) => {\r\n            const accData = _.flow(\r\n              _.toPairs,\r\n              _.map(([type, count]) => [\r\n                `${type}-${grade}`,\r\n                type === 'S'\r\n                  ? (count / tracklist.singlesLevels[x]) * 100\r\n                  : (-count / tracklist.doublesLevels[x]) * 100,\r\n              ]),\r\n              _.fromPairs\r\n            )(levelsData);\r\n            return { ...acc, ...accData };\r\n          },\r\n          {},\r\n          _.toPairs(counts)\r\n        );\r\n\r\n        return {\r\n          x: _.toInteger(x),\r\n          ...defaultGradesWithLevelsDistribution,\r\n          ...reduced,\r\n        };\r\n      })\r\n    )(gradesData);\r\n    const lastTickRating = _.last(profile.ratingHistory).date;\r\n    const lastTickRanking = _.last(profile.rankingHistory).date;\r\n    const lastTick = lastTickRating > lastTickRanking ? lastTickRating : lastTickRanking; // End graph at either point\r\n    const firstTick = _.first(profile.ratingHistory).date; // Start graph from the first battle of this player\r\n\r\n    const minMaxRange = [firstTick / 1000 / 60 / 60 / 24, lastTick / 1000 / 60 / 60 / 24];\r\n    const filterRange = filter.dayRange || minMaxRange;\r\n    const dayRangeMs = [filterRange[0] * 1000 * 60 * 60 * 24, filterRange[1] * 1000 * 60 * 60 * 24];\r\n    const placesChanges = cutRange(profile.rankingHistory, dayRangeMs);\r\n    const ratingChanges = cutRange(profile.ratingHistory, dayRangeMs);\r\n    const rankingIndex = _.findIndex({ id }, ranking);\r\n    return {\r\n      ...profile,\r\n      minMaxRange,\r\n      levelsDistribution,\r\n      gradesDistribution,\r\n      gradesAndLevelsDistribution,\r\n      placesChanges,\r\n      ratingChanges,\r\n      player: {\r\n        ..._.find({ id }, players),\r\n        rank: rankingIndex + 1,\r\n        ranking: ranking[rankingIndex],\r\n      },\r\n    };\r\n  }\r\n);\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    profile: profileSelector(state, props),\r\n    tracklist: state.tracklist.data,\r\n    filter: state.profiles.filter,\r\n    error: state.top.error,\r\n    isLoading: state.top.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopScores,\r\n  setProfilesFilter,\r\n  resetProfilesFilter,\r\n};\r\n\r\nclass Profile extends Component {\r\n  static propTypes = {\r\n    profile: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    profile: {},\r\n  };\r\n\r\n  state = {\r\n    isLevelGraphCombined: true,\r\n    showFaq: false,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetProfilesFilter();\r\n  }\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchTopScores();\r\n  };\r\n\r\n  onChangeDayRange = range => {\r\n    const { filter } = this.props;\r\n    this.props.setProfilesFilter({\r\n      ...filter,\r\n      dayRange: range,\r\n    });\r\n  };\r\n\r\n  onShowFaq = () => {\r\n    this.setState({ showFaq: true });\r\n  };\r\n\r\n  onHideFaq = () => {\r\n    this.setState({ showFaq: false });\r\n  };\r\n\r\n  renderRankingHistory() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={profile.ratingChanges} margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={value => new Date(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={['dataMin - 100', 'dataMax + 100']}\r\n            tickFormatter={Math.round}\r\n            width={40}\r\n          />\r\n          <ReferenceLine y={1000} stroke=\"white\" />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{new Date(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Rating: {Math.round(payload[0].value)}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderPlaceHistory() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={profile.placesChanges} margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={value => new Date(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={[1, dataMax => (dataMax < 3 ? dataMax + 2 : dataMax + 1)]}\r\n            interval={0}\r\n            reversed\r\n            width={40}\r\n          />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{new Date(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Place: #{payload[0].value}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGrades() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <BarChart\r\n          data={profile.gradesDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {_.filter(item => item.value > 0, payload).map(item => (\r\n                    <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                      {item.name}: {payload[0].payload.gradesValues[item.name]}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            domain={[0, 100]}\r\n            ticks={[0, 50, 100]}\r\n            tickFormatter={x => `${Math.round(x)}%`}\r\n            width={40}\r\n          />\r\n          <Legend />\r\n          <Bar dataKey=\"SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"F\" fill=\"#774949\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradesWithLevels() {\r\n    const { profile, tracklist } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={0.74}>\r\n        <BarChart\r\n          data={profile.gradesAndLevelsDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n          stackOffset=\"sign\"\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              const doubleItems = _.filter(\r\n                item => item.value !== 0 && item.dataKey.startsWith('D'),\r\n                payload\r\n              );\r\n              const singleItems = _.filter(\r\n                item => item.value !== 0 && item.dataKey.startsWith('S'),\r\n                payload\r\n              );\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {!!singleItems.length && (\r\n                    <>\r\n                      <div>Single:</div>\r\n                      {singleItems.map(item => (\r\n                        <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                          {item.name.slice(2)}: {Math.round(Math.abs(item.value))}% (\r\n                          {Math.round((tracklist.singlesLevels[item.payload.x] * item.value) / 100)}\r\n                          /{tracklist.singlesLevels[item.payload.x]})\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                  {!!doubleItems.length && (\r\n                    <>\r\n                      <div>Double:</div>\r\n                      {doubleItems.map(item => (\r\n                        <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                          {item.name.slice(2)}: {Math.round(Math.abs(item.value))}% (\r\n                          {Math.round(\r\n                            (tracklist.doublesLevels[item.payload.x] * -item.value) / 100\r\n                          )}\r\n                          /{tracklist.doublesLevels[item.payload.x]})\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            tickFormatter={x => `${Math.round(Math.abs(x))}%`}\r\n            width={40}\r\n            domain={[dataMin => Math.min(dataMin, -10), dataMax => Math.max(10, dataMax)]}\r\n          />\r\n          <Bar dataKey=\"S-SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Label value=\"Double\" offset={0} position=\"insideBottomLeft\" />\r\n          <Label value=\"Single\" offset={0} position=\"insideTopLeft\" />\r\n          <ReferenceLine y={0} stroke=\"#bbb\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderLevels() {\r\n    const { profile, tracklist } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <BarChart\r\n          data={profile.levelsDistribution}\r\n          stackOffset=\"sign\"\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              const totalD = tracklist.doublesLevels[payload[0].payload.x];\r\n              const totalS = tracklist.singlesLevels[payload[0].payload.x];\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {totalS > 0 && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n                      Single: {Math.abs(payload[1].value).toFixed(1)}% (\r\n                      {Math.round((payload[1].value * totalS) / 100)}/{totalS})\r\n                    </div>\r\n                  )}\r\n                  {totalD > 0 && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n                      Double: {Math.abs(payload[0].value).toFixed(1)}% (\r\n                      {Math.round((Math.abs(payload[0].value) * totalD) / 100)}/{totalD})\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            tickFormatter={x => Math.round(Math.abs(x)) + '%'}\r\n            width={40}\r\n            domain={[dataMin => Math.min(dataMin, -10), dataMax => Math.max(10, dataMax)]}\r\n          />\r\n          <RechartsTooltip />\r\n          <ReferenceLine y={0} stroke=\"#555\" />\r\n          <Legend />\r\n          <Bar dataKey=\"D\" fill=\"#169c16\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#af2928\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradeBlock(type, grade) {\r\n    const { profile } = this.props;\r\n    const obj = profile.progress[type];\r\n    const typeLetter = type === 'double' ? 'D' : 'S';\r\n    const progr = Math.floor((obj[`${grade}-bonus-level-coef`] || 0) * 100);\r\n    const minNumber = obj[`${grade}-bonus-level-min-number`];\r\n    const currentNumber = obj[`${grade}-bonus-level-achieved-number`];\r\n    const levelString = obj[`${grade}-bonus-level`]\r\n      ? `${typeLetter}${obj[`${grade}-bonus-level`]}`\r\n      : '?';\r\n    return (\r\n      <div className=\"grade-block\">\r\n        <div className=\"grade-letter\">\r\n          <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n        </div>\r\n        <div className=\"grade-level\">{levelString}</div>\r\n        <div className=\"grade-progress\">\r\n          {progr}% ({progr === 100 ? minNumber : currentNumber}/{minNumber})\r\n        </div>\r\n        <div className=\"grade-progress\">бонус: +{Math.floor(obj[`${grade}-bonus`])}</div>\r\n        <div\r\n          className={classNames('progress-background', {\r\n            complete: progr === 100,\r\n            zero: progr === 0,\r\n          })}\r\n          style={{\r\n            height: `${progr}%`,\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderAchievement(achName, achievement) {\r\n    const Icon = achievements[achName].icon;\r\n    const description = achievements[achName].description;\r\n    return (\r\n      <Tooltip\r\n        key={achName}\r\n        content={<div>{description}</div>}\r\n        tooltipClassName=\"pumpking-tooltip achievement-tooltip\"\r\n      >\r\n        <div className=\"ach-block\">\r\n          {Icon && (\r\n            <div className=\"ach-icon\">\r\n              <Icon />\r\n            </div>\r\n          )}\r\n          <div className=\"ach-name\">{achName}</div>\r\n          <div\r\n            className={classNames('progress-background', {\r\n              complete: achievement.progress === 100,\r\n              zero: achievement.progress === 0,\r\n            })}\r\n            style={{\r\n              height: `${Math.round(achievement.progress)}%`,\r\n            }}\r\n          />\r\n        </div>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, profile, error, filter } = this.props;\r\n    const { isLevelGraphCombined } = this.state;\r\n\r\n    if (_.isEmpty(profile)) {\r\n      return null;\r\n    }\r\n\r\n    const expProgress = profile.expRankNext\r\n      ? (profile.exp - profile.expRank.threshold) /\r\n        (profile.expRankNext.threshold - profile.expRank.threshold)\r\n      : 100;\r\n    return (\r\n      <div className=\"profile-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            {/* <div className=\"beta\">страница в бета-версии</div> */}\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"btn btn-sm btn-dark btn-icon\"\r\n              onClick={this.onRefresh}\r\n            >\r\n              <FaSearch /> обновить\r\n            </button>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!isLoading && (\r\n            <div className=\"profile\">\r\n              <div className=\"profile-header\">\r\n                <div className=\"profile-name text-with-header\">\r\n                  <div className=\"text-header\">игрок</div>\r\n                  <div>{profile.player.nickname}</div>\r\n                </div>\r\n                <div className=\"text-with-header\">\r\n                  <div className=\"text-header\">ранк</div>\r\n                  <div>#{profile.player.rank}</div>\r\n                </div>\r\n                <div className=\"text-with-header\">\r\n                  <div className=\"text-header\">эло</div>\r\n                  <div>{profile.player.ranking.rating}</div>\r\n                </div>\r\n                <div className=\"text-with-header\">\r\n                  <div className=\"text-header\">последняя игра</div>\r\n                  <div>\r\n                    {profile.lastResultDate ? getTimeAgo(profile.lastResultDate) : 'никогда'}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"profile-section\">\r\n                <div className=\"profile-sm-section-header _flex-row _align-center\">\r\n                  <span>опыт</span>\r\n                  <div className=\"_flex-fill\" />\r\n                  <div onClick={this.onShowFaq} className=\"_clickable\">\r\n                    <FaQuestionCircle onClick={this.onShowFaq} />\r\n                  </div>\r\n                  <ReactModal\r\n                    ariaHideApp={false}\r\n                    className=\"Modal faq-modal\"\r\n                    overlayClassName=\"Overlay\"\r\n                    isOpen={this.state.showFaq}\r\n                    onRequestClose={this.onHideFaq}\r\n                  >\r\n                    <div className=\"close-btn\" onClick={this.onHideFaq}>\r\n                      <FaTimes />\r\n                    </div>{' '}\r\n                    <ExpFaq />\r\n                  </ReactModal>\r\n                </div>\r\n                <div className=\"exp-range\">\r\n                  <div className=\"rank exp-rank\">\r\n                    {getRankImg(profile.expRank)}\r\n                    {profile.expRank && <div>{profile.expRank.threshold}</div>}\r\n                  </div>\r\n                  <div className=\"exp-line-with-label\">\r\n                    <div className=\"exp-label\">\r\n                      {profile.expRankNext ? (\r\n                        <>\r\n                          <span className=\"taken-num\">\r\n                            {Math.round(profile.exp - profile.expRank.threshold)}\r\n                          </span>\r\n                          {` / ${profile.expRankNext.threshold - profile.expRank.threshold}`}\r\n                        </>\r\n                      ) : null}\r\n                    </div>\r\n                    <div className=\"exp-line\">\r\n                      <div\r\n                        className=\"taken\"\r\n                        style={{ width: Math.floor(100 * expProgress) + '%' }}\r\n                      ></div>\r\n                      <div\r\n                        className=\"rest\"\r\n                        style={{ width: 100 - Math.ceil(100 * expProgress) + '%' }}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"exp-label\">\r\n                      total: <span className=\"taken-num\">{Math.round(profile.exp)}</span>\r\n                    </div>\r\n                  </div>\r\n                  {profile.expRankNext && (\r\n                    <div className=\"rank exp-rank\">\r\n                      {getRankImg(profile.expRankNext)}\r\n                      {profile.expRankNext && <div>{profile.expRankNext.threshold}</div>}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"profile-section-horizontal-container\">\r\n                <div className=\"profile-section\">\r\n                  <div className=\"profile-section-content\">\r\n                    {!isLevelGraphCombined ? (\r\n                      <>\r\n                        <div className=\"profile-section-2\">\r\n                          <div className=\"profile-sm-section-header flex\">\r\n                            <span>уровни</span>\r\n                            <div className=\"toggle-holder\">\r\n                              <Toggle\r\n                                className=\"combine-toggle\"\r\n                                checked={isLevelGraphCombined}\r\n                                onChange={() =>\r\n                                  this.setState(state => ({\r\n                                    isLevelGraphCombined: !state.isLevelGraphCombined,\r\n                                  }))\r\n                                }\r\n                              >\r\n                                объединить графики\r\n                              </Toggle>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"chart-container\">{this.renderLevels()}</div>\r\n                        </div>\r\n                        <div className=\"profile-section-2\">\r\n                          <div className=\"profile-sm-section-header\">\r\n                            <span>оценки</span>\r\n                          </div>\r\n                          <div className=\"chart-container\">{this.renderGrades()}</div>\r\n                        </div>\r\n                      </>\r\n                    ) : (\r\n                      <div className=\"profile-section-2\">\r\n                        <div className=\"profile-sm-section-header flex\">\r\n                          <span>оценки</span>\r\n                          <div className=\"toggle-holder\">\r\n                            <Toggle\r\n                              className=\"combine-toggle\"\r\n                              checked={isLevelGraphCombined}\r\n                              onChange={() =>\r\n                                this.setState(state => ({\r\n                                  isLevelGraphCombined: !state.isLevelGraphCombined,\r\n                                }))\r\n                              }\r\n                            >\r\n                              объединить графики\r\n                            </Toggle>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"chart-container single-double-labels\">\r\n                          {this.renderGradesWithLevels()}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"profile-section\">\r\n                  <div className=\"profile-section-content\">\r\n                    <div className=\"profile-section-2\">\r\n                      <div className=\"profile-sm-section-header\">\r\n                        <span>эло</span>\r\n                      </div>\r\n                      <div className=\"chart-container\">{this.renderRankingHistory()}</div>\r\n                    </div>\r\n                    <div className=\"profile-section-2\">\r\n                      <div className=\"profile-sm-section-header\">\r\n                        <span>место в топе</span>\r\n                      </div>\r\n                      <div className=\"chart-container\">{this.renderPlaceHistory()}</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"range-container\">\r\n                    <Range\r\n                      range={filter.dayRange || profile.minMaxRange}\r\n                      min={profile.minMaxRange[0]}\r\n                      max={profile.minMaxRange[1]}\r\n                      onChange={this.onChangeDayRange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"profile-section progress-section\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>достижения по уровням</span>\r\n                </div>\r\n                <div className=\"progress-blocks-single-double\">\r\n                  <div className=\"progress-block\">\r\n                    <div className=\"achievements-grades single\">\r\n                      {this.renderGradeBlock('single', 'A')}\r\n                      {this.renderGradeBlock('single', 'A+')}\r\n                      {this.renderGradeBlock('single', 'S')}\r\n                      {this.renderGradeBlock('single', 'SS')}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"progress-block\">\r\n                    <div className=\"achievements-grades double\">\r\n                      {this.renderGradeBlock('double', 'A')}\r\n                      {this.renderGradeBlock('double', 'A+')}\r\n                      {this.renderGradeBlock('double', 'S')}\r\n                      {this.renderGradeBlock('double', 'SS')}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"bonus-faq\">\r\n                  * суммарный бонус (+{Math.round(profile.progress.bonus)}) добавляется к стартовому\r\n                  Эло\r\n                  <br />* для получения ачивки нужно сыграть около 10% всех чартов данного левела на\r\n                  нужный грейд\r\n                </div>\r\n              </div>\r\n              <div className=\"profile-section\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>достижения</span>\r\n                </div>\r\n                <div className=\"achievements\">\r\n                  {_.keys(profile.achievements).map(achName =>\r\n                    this.renderAchievement(achName, profile.achievements[achName])\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Profile));\r\n","import React, { Component } from 'react';\r\n// import toBe from 'prop-types';\r\n// import classNames from 'classnames';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './top-bar.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nclass TopBar extends Component {\r\n  static propTypes = {};\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"top-bar\">\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <NavLink exact to={routes.leaderboard.path}>\r\n                leaderboard\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink exact to={routes.ranking.path}>\r\n                ranking\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopBar;\r\n","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport 'react-responsive-ui/style.css';\r\nimport './App.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport Leaderboard from 'components/Leaderboard/Leaderboard';\r\nimport Ranking from 'components/Ranking/Ranking';\r\nimport Profile from 'components/Profile/Profile';\r\nimport TopBar from 'components/Shared/TopBar/TopBar';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <TopBar />\r\n        <Route exact path=\"/\" render={() => <Redirect to={routes.leaderboard.path} />} />\r\n        <Route path={routes.leaderboard.path} component={Leaderboard} />\r\n        <Route path={routes.ranking.path} component={Ranking} />\r\n        <Route path={routes.profile.path} component={Profile} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TRACKLIST/LOADING`;\r\nconst SUCCESS = `TRACKLIST/SUCCESS`;\r\nconst ERROR = `TRACKLIST/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTracklist = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await fetchJson({ url: `${HOST}/tracklist/stats/XX` });\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport top from 'reducers/top';\r\nimport tracklist from 'reducers/tracklist';\r\nimport ranking from 'reducers/ranking';\r\nimport profiles from 'reducers/profiles';\r\nimport presets from 'reducers/presets';\r\n\r\nconst rootReducer = combineReducers({\r\n  presets,\r\n  profiles,\r\n  ranking,\r\n  top,\r\n  tracklist,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && process.env.NODE_ENV === 'development'\r\n    ? compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__({\r\n          stateSanitizer: state => ({\r\n            ...state,\r\n          }),\r\n        })\r\n      )\r\n    : applyMiddleware(thunk)\r\n);\r\n","import 'promise-polyfill';\r\nimport 'whatwg-fetch';\r\nimport 'utils/polyfills';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport localForage from 'localforage';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './index.scss';\r\nimport App from 'components/App';\r\n\r\nimport { CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nimport { store } from 'reducers';\r\nimport { fetchTopScores, setFilter } from 'reducers/top';\r\nimport { fetchTracklist } from 'reducers/tracklist';\r\n\r\nlocalForage\r\n  .getItem('filter')\r\n  .then(filter => {\r\n    if (filter) {\r\n      store.dispatch(\r\n        setFilter({\r\n          ...filter,\r\n          chartRange: filter.chartRange && {\r\n            ...filter.chartRange,\r\n            range: _.every(\r\n              r => r >= CHART_MIN_MAX[0] && r <= CHART_MIN_MAX[1],\r\n              filter.chartRange.range\r\n            )\r\n              ? filter.chartRange.range\r\n              : CHART_MIN_MAX,\r\n          },\r\n        })\r\n      );\r\n    }\r\n  })\r\n  .catch(error => console.error('Cannot get filter from local storage', error));\r\n\r\nstore.dispatch(fetchTracklist()).then(() => {\r\n  store.dispatch(fetchTopScores());\r\n});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}