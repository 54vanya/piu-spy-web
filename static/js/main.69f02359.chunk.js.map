{"version":3,"sources":["webpack:///./src/utils/workers/profilesPostProcess.js?f05c","utils/polyfills.js","constants/routes.js","constants/leaderboard.js","components/Shared/Loader/index.js","reducers/user/resetAction.js","utils/fetch.js","constants/backend.js","reducers/trackStats/mostPlayed.js","reducers/trackStats/mostPlayedMonth.js","reducers/trackStats/leastPlayed.js","utils/leaderboards.js","utils/date.js","components/SongsTop/SongsTop.js","components/Shared/ToggleButton/ToggleButton.js","components/Shared/Input/Input.js","components/Shared/Toggle/Toggle.js","components/Shared/CollapsibleBar/index.js","components/Shared/Overlay/Overlay.js","components/Shared/Range/index.js","components/Leaderboard/ChartFilter.js","utils/expRanks.js","utils/exp.js","utils/achievements.js","utils/score.js","utils/workers/profilesPostProcess.js","constants/env.js","reducers/results.js","reducers/presets.js","components/Leaderboard/PresetsControl.js","components/Shared/Flag/index.js","components/SocketTracker/helpers.js","utils/colors.js","components/Leaderboard/Result.js","components/Leaderboard/ChartLabel.js","components/Leaderboard/Chart.js","reducers/selectors.js","components/Leaderboard/Leaderboard.js","components/Ranking/RankingList.js","components/Ranking/RankingFaq.js","reducers/preferences.js","components/Ranking/Ranking.js","components/Profile/MostPlayed.js","components/Profile/ExpFaq.js","reducers/profiles.js","utils/profiles.js","components/Profile/Profile.js","components/ProfileCompare/ProfileCompare.js","reducers/user/index.js","reducers/login.js","components/Shared/TopBar/TopBar.js","components/LoginScreen/LoginScreen.js","constants/popups.js","reducers/popups.js","components/Shared/Popups/AchievementPopup.js","components/Shared/Popups/RankUpPopup.js","components/Shared/Popups/index.js","reducers/topPerSong.js","components/SocketTracker/PlayerCard.js","components/SocketTracker/SocketTracker.js","reducers/tracklist.js","components/App.js","reducers/trackStats/index.js","reducers/index.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","Number","isNaN","value","Math","sign","x","Array","prototype","findIndex","Object","defineProperty","predicate","this","TypeError","o","len","length","thisArg","arguments","k","kValue","call","configurable","writable","routes","leaderboard","path","songs","ranking","faq","profile","getPath","params","id","compare","compareToId","SORT","DEFAULT","PROTAGONIST","RANK_ASC","RANK_DESC","PP_ASC","PP_DESC","NEW_SCORES_PLAYER","EASIEST_SONGS","HARDEST_SONGS","CHART_MIN_MAX","DURATION","STD","SHORT","REMIX","FULL","DURATION_DEFAULT","_","values","Loader","className","width","height","viewBox","xmlns","fill","cx","cy","r","attributeName","from","to","begin","dur","calcMode","repeatCount","fillOpacity","RESET","resetUser","type","fetchJson","url","request","method","postJson","body","JSON","stringify","headers","defaultHeaders","async","dispatch","getState","session","cookies","get","response","fetch","credentials","status","json","error","isObject","isString","Error","message","Promise","reject","HOST","SOCKET_SERVER_IP","LOADING","SUCCESS","ERROR","initialState","isLoading","data","TimeAgo","addLocale","ru","timeAgo","timeStyle","flavour","gradation","convenient","units","tooltipFormatter","result","isExactDate","dateObject","toLocaleDateString","resultType","undefined","isMyBest","isMachineBest","style","display","alignItems","flexDirection","getTimeAgo","date","dayDiff","moment","startOf","diff","hour","format","parseDate","textDate","toDate","Date","TopList","fetchList","title","renderRightSide","useState","setData","setLoading","getRightSide","item","countplay","useEffect","then","success","catch","map","index","key","classNames","best","full_name","leastPlayedRightSide","last_play","connect","fetchMostPlayed","fetchMostPlayedMonth","fetchLeastPlayed","ToggleButton","props","active","onToggle","text","onClick","React","PureComponent","Input","state","isNil","defaultValue","bindAll","prevProps","setState","e","newValue","target","onChange","numericValue","min","max","onBlur","handleBlur","omit","onKeyPress","handleKeyPress","onInput","handleChange","noop","Component","defaultProps","Toggle","constructor","super","checked","uniqueId","render","htmlFor","children","CollapsibleBar","open","defaultOpen","POPPER_MODIFIERS","preventOverflow","enabled","padding","boundariesElement","PLACEMENT_ARROW_MAPPING","right","left","top","bottom","getArrowPlacement","placement","split","Overlay","isVisible","containerItemRef","createRef","renderPopper","bind","toggleOverlayVisibility","event","closest","hideOverlay","ref","arrowProps","outOfBoundaries","scheduleUpdate","hideWhenOutOfBounds","data-placement","overlayClassName","overlayItem","Fragment","ReactDOM","createPortal","container","document","modifiers","referenceElement","current","defaultTypes","listensToClickOutside","Range","range","step","renderTrack","onMouseDown","onTouchStart","position","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","justifyContent","boxShadow","ChartFilter","filterValue","onChangeEx","getOr","duration","buttonText","t","isEqual","isEmpty","newMin","newMax","includes","without","ranks","threshold","iconName","color","gradeValue","F","D","C","B","A","S","SS","SSS","getExp","chart","isBestGradeOnChart","chartType","chartLevel","grade","getRankImg","rank","src","process","alt","achievements","icon","GiRank1","description","resultFunction","progress","combo","GiRank2","GiRank3","GiSmokingFinger","playedSongs","songsToPlay","song","uniq","GiRetroController","GiLoveSong","Улитка","GiSnail","charts","some","songToPlay","chartLabel","GiPodiumSecond","miss","bad","GiLifeBar","GiWoodenPegleg","good","great","initialAchievementState","getScoreWithoutBonus","score","postProcessProfiles","profiles","tracklist","mapValues","neededGrades","expRank","findLast","exp","expRanks","expRankNext","find","double","single","gradeIncrementMap","accuracyPointsRaw","keys","resultsByLevel","forEach","level","res","isRank","accuracyRaw","push","toNumber","sharedChartId","thisGrade","thisPlayerId","playerId","otherResults","results","filter","sort","a","b","indexOf","gradeIncArray","gradeInc","l","g","prog","incrementLevel","number","minimumNumber","totalCharts","round","sqrt","getMinimumNumber","bonusCoefficientNumber","bonus","getBonusForLevel","achievementBonus","accuracy","countAcc","sumAccuracy","interpolateDifficulties","sharedCharts","debug","sums","size","accuracyPointsInterpolated","maxAccuracy","maxBy","y","maxLevelWithMaxAcc","points","regression","logarithmic","f","calculated","predict","yx","i","interpolatedPoint","pair","returnValue","interpolatedDifficulty","weight","abs","interpolation","identity","reduce","acc","diffSum","weightSum","averageDifficulty","getProcessedProfiles","battles","resultInfo","chartId","chartResults","maxPP","maxScore","K","scoreRaw","pp","ppPotential","ppRatio","ppFixed","toFixed","scores","pp_","s","rating","processPP","dictScoreInfo","logText","dictChartElo","getDictChartEloId","enemyScore","dictRatingDiff","getDictRatingDiffId","p1","p2","scoreMultiplier","scoreInfo","enemyScoreInfo","startingRating","battleCount","r1","r2","R1","R2","E1","E2","S1","S2","kRating1","kRating2","maxK1","maxK2","kLevel1","kLevel2","kLevel","kMinimizer","startsWith","K1","K2","dr1","dr2","baseEloId1","baseEloId2","baseEloP1","baseEloP2","ratingDiffId1","ratingDiffId2","ratingDiff","ratingDiffLast","floor","playersSorted","flow","orderBy","battleDate","player","lastPlace","rankingHistory","place","getTime","p1LastRating","last","ratingHistory","p2LastRating","toInteger","ratingRaw","now","processBattles","localStorage","window","debugOn","setItem","debugOff","removeItem","DEBUG","getItem","STOP_LOADING","SET_FILTER","RESET_FILTER","RANKING_CHANGE_SET","PROFILES_UPDATE","highscoresUrl","REACT_APP_SOCKET","defaultFilter","showRank","showRankAndNorank","isLoadingRanking","players","gradeComparator","guessGrade","misses","bads","goods","greats","mapResult","recognition_notes","isUnknownPlayer","arcade_name","isIntermediateResult","shared_chart","nickname","nicknameArcade","gained","exact_gain_date","rank_mode","_r","originalChartMix","original_mix","originalChartLabel","original_label","originalScore","original_score","scoreIncrease","score_increase","calories","perfect","perfects","max_combo","mods","mods_list","isHJ","maxTotalSteps","infos","fixableIndex","absentNumbersCount","localStepSum","isNumber","tryFixIncompleteResult","accRaw","getMaxRawScore","initializeProfile","fromPairs","nameArcade","resultsByGrade","lastResultDate","count","grades","lastBattleDate","region","achName","getProfileInfoFromResult","replace","convert","cap","achState","fetchResults","processResultsData","console","log","shared_charts","mappedResults","getTopResultId","getBestGradeResultId","topResults","bestGradeResults","resRaw","sharedChart","label","toUpper","chart_label","match","track_name","max_total_steps","allResultsIds","chartTop","topResultId","currentTopResult","oldScoreIndex","splice","newScoreIndex","sortedLastIndexBy","latestScoreDate","enemyResult","bestGradeResultId","currentBestGradeRes","maxScoreCandidate","processData","toPairs","originalData","input","promise","worker","WorkerProfilesProcessing","profilesProcessing","output","q","calculateRankingChanges","terminate","setFilter","getListOfNames","getMapOfRatings","all","localForage","lastChangedRanking","lastChangedRankingPoints","lastFetchedRanking","listNow","listLastFetched","listLastChanged","mapPointsNow","mapPointsLastFetched","rankingsPointsMap","listPrev","warn","SELECT_PRESET","LOAD_PRESETS","LOADING_START","LOADING_END","presets","currentPreset","itemToOption","reloadPresets","startLoading","endLoading","selectPreset","openPreset","noPresetsMessage","mapDispatchToProps","loadPresets","savePreset","newPreset","confirm","withoutOldPreset","remove","newPresets","deletePreset","PresetsControl","onChangeSelection","selected","onRewritePreset","onSavePreset","isAddingNew","classNamePrefix","placeholder","options","noOptionsMessage","disabled","Flag","backgroundImage","preprocessData","fullRes","every","stepSum","sum","n","track","mix","resultInfoOverrides","numb","latest","hasRankScore","useTracked","resetIndicatorData","isDebugOn","prevData","setPrevData","currData","setCurrData","resetIndicator","useRef","reset","useCallback","useMemo","useResetTrackedObject","object","tracking","colorsArray","forwardRef","placeDifference","showProtagonistEloChange","showProtagonistPpChange","protagonistName","uniqueSelectedNames","leftProfile","rightProfile","isSocketView","inf","ratingInfoBlock","flag","nameIndex","empty","outline","isSecondOccurenceInResults","topPlace","fontWeight","mod","avMod","endsWith","xMod","numeral","exact","vj","hj","getShortTimeAgo","content","tooltipClassName","singlep","doublep","coop","Chart","allResults","playersHiddenStatus","chartOriginal","chartIndex","overrides","setOverrides","isHidingPlayers","setHidingPlayers","first","occuredNicknames","hiddenPlayersCount","isPlayerHidden","onRedoLatestResult","throttle","ANIMATION_DURATION","newOverrides","drop","onUndoLatestResult","undoedResult","undoedPlayerId","previousPlayerResult","newResults","compact","latestScore","overrideChart","isActive","totalResultsCount","countBy","true","currentIndex","canUndo","interpDiff","ChartLabel","href","queryString","search_query","rel","enterAnimation","leaveAnimation","typeName","maintainContainerHeight","isProtagonist","newIndex","prevScore","findLastIndex","preferences","playersSelector","createSelector","user","isCurrentPlayer","sortBy","it","toLower","filteredDataSelector","names","namesOr","playersOr","namesNot","playersNot","sortingType","protagonist","excludeAntagonists","defaultSorting","newScoresProtagonistSorting","protagonistSorting","row","protIndex","protScore","enemies","take","uniqBy","distanceFromProtagonist","dist","enemy","getPpSorting","field","direction","info","Infinity","getEloSorting","getDiffSorting","chartInfo","sortingFunctions","chartRange","items","rows","filterCharts","showOnlyRank","occuredNames","alreadyOccured","rowNames","matchSorter","trim","sortingOptions","resetFilter","Leaderboard","showItemsCount","curry","onRefresh","onTypeSongName","debounce","renderSimpleSearch","renderFilters","closeMenuOnSelect","isMulti","renderSortings","isClearable","filteredData","canShowMore","visibleData","slice","highlightProtagonist","preset","getGradeImg","RankingList","updatePreferences","playerIndex","isHidden","showHiddenPlayersInRanking","change","prevRating","down","up","set","RankingFaq","CHANGE","defaultPreferences","rankingSelector","Ranking","onChangeHidingPlayers","component","withRouter","limit","setLimit","latestDate","ExpFaq","setProfilesFilter","resetProfilesFilter","cutRange","array","startIndex","endIndex","firstElement","lastElement","defaultGradesDistribution","defaultGradesWithLevelsDistribution","flatMap","profileSelectorCreator","idParamName","levelsDistribution","singlesLevels","doublesLevels","gradesData","update","gradesDistribution","groupBy","pick","gradesValues","gradesAndLevelsDistribution","groupedResults","counts","reduced","levelsData","lastTickRating","lastTickRanking","lastTick","firstTick","lastDay","endOf","minMaxRange","filterRange","dayRange","dayRangeMs","placesChanges","ratingChanges","MIN_GRAPH_HEIGHT","profileSelector","otherPlayersSelector","ind","Profile","isLevelGraphCombined","showFaq","onChangeDayRange","onShowFaq","onHideFaq","circleShape","args","componentWillUnmount","renderRankingHistory","minHeight","aspect","margin","strokeDasharray","dataKey","domain","tickFormatter","allowDecimals","stroke","isAnimationActive","payload","strokeWidth","dot","renderAccuracyPoints","interpolated","pointsByType","ticks","shape","false","renderPlaceHistory","dataMax","interval","reversed","renderGrades","stackId","renderGradesWithLevels","stackOffset","doubleItems","singleItems","dataMin","offset","renderLevels","totalD","totalS","renderGradeBlock","obj","typeLetter","progr","minNumber","currentNumber","levelString","complete","zero","renderAchievement","achievement","Icon","renderProfile","otherPlayers","expProgress","history","ariaHideApp","isOpen","onRequestClose","ceil","currentRange","dateL","dateR","l1","l2","MostPlayed","BARS_MODES","SINGLE_TWO","SINGLE_FIVE","DOUBLE_TWO","DOUBLE_FIVE","BOTH_TWO","BOTH_FIVE","getCompareBars","mode","profile1Selector","profile2Selector","getCombinedData","memoize","rc1","rc2","allRC","rating2","rating1","sortedUniqBy","allPC","place2","place1","perLevelComparison","p1win","p1notPlayed","p2win","p2notPlayed","notPlayed","twoBars","p1index","p2index","perType","normalizeTwo","dataObj","totalPlayed","normalizeFive","total","chartLevels","ProfileCompare","compareBarsMode","rhMargin","rhXDomain","rhYDomain","rhXTickFormatter","rhTooltip","profile2","p1Name","p2Name","plcMargin","plcTooltip","isTwo","renderLegendItem","plcXDomain","plcXTicks","plcXFormatter","combinedData","useProfile2","renderPerLevelComparison","layout","profile1","fetchUser","login","googleResponse","token","tokenId","expires","loginACs","logout","isLoadingLogin","isLoadingUser","isClown","setClown","onGoogleResponse","clientId","onSuccess","onFailure","cookiePolicy","TYPES","ACHIEVEMENT","RANK_UP","ADD_POPUP","REMOVE_POPUP","ID_PREFIX","popups","AchievementPopup","playerName","achievementName","progressNumber","setProgressNumber","RankUpPopup","prevPlace","currPlace","list","prevList","currList","setPlace","setList","listTop","delay","pl","renderPlayerLine","popupByType","popupStyles","overlay","transition","opacity","removePopup","visiblePopup","setVisiblePopup","contentRef","popup","persistent","setTimeout","fadeOut","timeout","onAfterOpen","fadeIn","popupBody","PopupComponent","parameters","fetchingParams","PlayerCard","trackedData","isLeft","topPlayersList","addPopup","renderDeltaText","prevN","delta","rivals","closestPlayers","resetData","isDataValid","useTrackedEx","takenWidth","emptyWidth","diffWidth","renderExpLine","elo","STATE_RESET_TIMEOUT_SEC","topPlayersListSelector","fetchTopPerSong","songName","leftLabel","rightLabel","song_name","join","processedData","appendNewResults","lastDate","start_date","appendedResults","currentResults","oldResult","old","mergedData","popupType","fetchUserPreferences","topPerSong","songTopData","setMessage","socketErrorMessage","setSocketErrorMessage","isSocketReady","setSocketReady","isAlive","setAlive","setLeftLabel","setRightLabel","leftPlayer","setLeftPlayer","rightPlayer","setRightPlayer","recognizedSongName","setRecognizedSongName","leftPreferences","setLeftPreferences","rightPreferences","setRightPreferences","resultsContainerRef","leftResultRef","rightResultRef","socketRef","timeoutResetTokenRef","minBy","p","lev","onChangeAchievements","prevAchievement","currAchievement","leftTracked","resetLeftTracked","rightTracked","resetRightTracked","restartTimeout","clearTimeout","WebSocket","onerror","onopen","onmessage","parse","newSongName","totalSize","clientWidth","h","clientHeight","scaleHH","offsetWidth","scaleHW","offsetHeight","scaleWH","scaleWW","transform","scaleW","scaleH","leftChart","rightChart","chartsToShow","leftPlayersHiddenStatus","omitBy","v","rightPlayersHiddenStatus","isHiddenInBoth","ReactModal","setAppElement","fetchTracklist","fetchPreferences","userData","SocketTracker","SongsTop","combineReducers","mostPlayed","action","mostPlayedMonth","leastPlayed","rootReducer","merge","hasPrevList","playerOriginal","trackStats","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","getElementById"],"mappings":"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LF,OAAQuG,EAASO,SAAS7O,EAASI,MACnC4H,SAAU,SAAAD,GACRgB,EAAS,CACPuF,SAAUvG,EAAM,uBACRuG,GADQ,CACEtO,EAASI,OACvBE,IAAEwO,QAAQ,CAAC9O,EAASI,MAAOkO,Y,wBClL1C,MAAMS,GAAQ,CACnB,CACEC,UAAW,EACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,QACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,UAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,IACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,QAET,CACEF,UAAW,KACXC,SAAU,SACVC,MAAO,QAET,CAC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","file":"static/js/main.69f02359.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"getProcessedProfiles\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"96f7f8399e32da25c536.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","/* eslint-disable */\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\r\nNumber.isNaN =\r\n  Number.isNaN ||\r\n  function(value) {\r\n    return value !== value;\r\n  };\r\n\r\nif (typeof Math.sign === 'undefined') {\r\n  Math.sign = function(x) {\r\n    return x > 0 ? 1 : x < 0 ? -1 : x;\r\n  };\r\n}\r\n\r\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\r\nif (!Array.prototype.findIndex) {\r\n  Object.defineProperty(Array.prototype, 'findIndex', {\r\n    value: function(predicate) {\r\n      // 1. Let O be ? ToObject(this value).\r\n      if (this == null) {\r\n        throw new TypeError('\"this\" is null or not defined');\r\n      }\r\n\r\n      var o = Object(this);\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('predicate must be a function');\r\n      }\r\n\r\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n      var thisArg = arguments[1];\r\n\r\n      // 5. Let k be 0.\r\n      var k = 0;\r\n\r\n      // 6. Repeat, while k < len\r\n      while (k < len) {\r\n        // a. Let Pk be ! ToString(k).\r\n        // b. Let kValue be ? Get(O, Pk).\r\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n        // d. If testResult is true, return k.\r\n        var kValue = o[k];\r\n        if (predicate.call(thisArg, kValue, k, o)) {\r\n          return k;\r\n        }\r\n        // e. Increase k by 1.\r\n        k++;\r\n      }\r\n\r\n      // 7. Return -1.\r\n      return -1;\r\n    },\r\n    configurable: true,\r\n    writable: true,\r\n  });\r\n}\r\n","export const routes = {\r\n  leaderboard: {\r\n    path: `/leaderboard`,\r\n  },\r\n  songs: {\r\n    path: `/songs`,\r\n  },\r\n  ranking: {\r\n    path: `/ranking`,\r\n    faq: {\r\n      path: '/ranking/faq',\r\n    },\r\n  },\r\n  profile: {\r\n    path: `/profiles/:id`,\r\n    getPath: params => `/profiles/${params.id}`,\r\n    compare: {\r\n      path: `/profiles/:id/vs/:compareToId`,\r\n      getPath: params => `/profiles/${params.id}/vs/${params.compareToId}`,\r\n    },\r\n  },\r\n};\r\n","import _ from 'lodash/fp';\r\n\r\nexport const SORT = {\r\n  DEFAULT: 'default',\r\n  PROTAGONIST: 'protagonist',\r\n  RANK_ASC: 'rankAsc',\r\n  RANK_DESC: 'rankDesc',\r\n  PP_ASC: 'ppAsc',\r\n  PP_DESC: 'ppDesc',\r\n  NEW_SCORES_PLAYER: 'newScoresPlayer',\r\n  EASIEST_SONGS: 'easiestSongs',\r\n  HARDEST_SONGS: 'hardestSongs',\r\n};\r\n\r\nexport const CHART_MIN_MAX = [1, 28];\r\nexport const DURATION = {\r\n  STD: 'Standard',\r\n  SHORT: 'Short',\r\n  REMIX: 'Remix',\r\n  FULL: 'Full',\r\n};\r\nexport const DURATION_DEFAULT = _.values(DURATION);\r\n","import React from 'react';\r\n\r\nimport './loader.scss';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"loader\">\r\n      <svg\r\n        width=\"40\"\r\n        height=\"12\"\r\n        viewBox=\"0 0 120 30\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"#eee\"\r\n      >\r\n        <circle cx=\"15\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"60\" cy=\"15\" r=\"9\" fillOpacity=\"0.3\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"9\"\r\n            to=\"9\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"9;15;9\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"0.5\"\r\n            to=\"0.5\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\".5;1;.5\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n        <circle cx=\"105\" cy=\"15\" r=\"15\">\r\n          <animate\r\n            attributeName=\"r\"\r\n            from=\"15\"\r\n            to=\"15\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"15;9;15\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"fill-opacity\"\r\n            from=\"1\"\r\n            to=\"1\"\r\n            begin=\"0s\"\r\n            dur=\"0.8s\"\r\n            values=\"1;.5;1\"\r\n            calcMode=\"linear\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","export const RESET = `USER/RESET`;\r\nexport const resetUser = () => ({ type: RESET });\r\n","import _ from 'lodash/fp';\r\nimport cookies from 'browser-cookies';\r\n\r\nimport { resetUser } from 'reducers/user/resetAction';\r\n\r\nexport const fetchJson = ({ url }) => request({ url, method: 'get' });\r\nexport const postJson = ({ url, body }) =>\r\n  request({\r\n    url,\r\n    method: 'post',\r\n    body: JSON.stringify(body),\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n    },\r\n  });\r\n\r\nconst defaultHeaders = {};\r\n\r\nexport const request = ({ url, method, body, headers }) => async (dispatch, getState) => {\r\n  try {\r\n    const session = cookies.get('session');\r\n    if (session) {\r\n      defaultHeaders['Session'] = session;\r\n    }\r\n    const response = await fetch(url, {\r\n      method,\r\n      body,\r\n      headers: { ...defaultHeaders, ...headers },\r\n      credentials: 'include',\r\n    });\r\n    if (response.status >= 200 && response.status < 300) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      const error = await response.json();\r\n      if (_.isObject(error) && _.isString(error.error)) {\r\n        throw new Error(error.error);\r\n      } else if (_.isString(error)) {\r\n        throw new Error(error);\r\n      } else {\r\n        throw new Error('HTTP Status ' + response.status);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    if (error.message === 'Invalid session') {\r\n      dispatch(resetUser());\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n","// export const HOST = 'http://localhost:5000';\r\nexport const HOST = 'https://vps720616.ovh.net:5000';\r\nexport const SOCKET_SERVER_IP = 'ws://127.0.0.1:6789';\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `MOST_PLAYED/LOADING`;\r\nconst SUCCESS = `MOST_PLAYED/SUCCESS`;\r\nconst ERROR = `MOST_PLAYED/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchMostPlayed = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-played` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `MOST_PLAYED_MONTH/LOADING`;\r\nconst SUCCESS = `MOST_PLAYED_MONTH/SUCCESS`;\r\nconst ERROR = `MOST_PLAYED_MONTH/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchMostPlayedMonth = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-played-month` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `LEAST_PLAYED/LOADING`;\r\nconst SUCCESS = `LEAST_PLAYED/SUCCESS`;\r\nconst ERROR = `LEAST_PLAYED/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchLeastPlayed = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/track-stats/most-time-not-played` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport moment from 'moment';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\n\r\nconst timeStyle = {\r\n  flavour: 'long',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nexport const tooltipFormatter = result => {\r\n  if (!result.isExactDate) {\r\n    const resultType =\r\n      result.isMyBest === undefined && result.isMachineBest === undefined\r\n        ? 'с my best или machine best'\r\n        : result.isMyBest\r\n        ? 'с my best'\r\n        : result.isMachineBest\r\n        ? 'с machine best'\r\n        : 'хз откуда';\r\n    return (\r\n      <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n        <div>точная дата взятия неизвестна</div>\r\n        <div>скор был записан {resultType}</div>\r\n        <div>дата записи: {result.dateObject.toLocaleDateString()}</div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return result.dateObject.toLocaleDateString();\r\n  }\r\n};\r\n\r\nexport const getTimeAgo = date => {\r\n  const dayDiff = moment()\r\n    .startOf('day')\r\n    .diff(moment(date).startOf('day'), 'days');\r\n  const hour = moment(date).hour();\r\n  if (moment().hour() < 5) {\r\n    return dayDiff <= 1 ? 'сегодня' : timeAgo.format(date, timeStyle);\r\n  }\r\n  return dayDiff === 0\r\n    ? hour < 5\r\n      ? 'вчера ночью'\r\n      : 'сегодня'\r\n    : dayDiff === 1\r\n    ? 'вчера'\r\n    : timeAgo.format(date, timeStyle);\r\n};\r\n","import moment from 'moment';\r\n\r\nexport const parseDate = (textDate) => {\r\n  if (typeof textDate === 'string') {\r\n    return moment(textDate).toDate();\r\n  } else {\r\n    return new Date(textDate);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaPlay } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\n// styles\r\nimport './songs-top.scss';\r\n\r\n// components\r\nimport Loader from 'components/Shared/Loader';\r\n\r\n// constants\r\n\r\n// reducers\r\nimport { fetchMostPlayed } from 'reducers/trackStats/mostPlayed';\r\nimport { fetchMostPlayedMonth } from 'reducers/trackStats/mostPlayedMonth';\r\nimport { fetchLeastPlayed } from 'reducers/trackStats/leastPlayed';\r\n\r\n// utils\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { parseDate } from 'utils/date';\r\n\r\n// code\r\nfunction TopList({ fetchList, title, renderRightSide }) {\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const getRightSide =\r\n    renderRightSide ||\r\n    (item => (\r\n      <div className=\"playcount\">\r\n        <FaPlay />\r\n        <span>{item.countplay}</span>\r\n      </div>\r\n    ));\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchList()\r\n      .then(data => {\r\n        data.success && setData(data.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [fetchList]);\r\n\r\n  return (\r\n    <div className=\"top-songs-list\">\r\n      <div className=\"top-songs-header\">\r\n        <span>{title}</span>\r\n      </div>\r\n      {isLoading && <Loader />}\r\n      {!isLoading &&\r\n        data.map((item, index) => {\r\n          return (\r\n            <div key={item.id} className=\"top-songs-item\">\r\n              <div className={classNames('place', `top-${index + 1}`, { best: index < 3 })}>\r\n                <span>{index + 1}.</span>\r\n              </div>\r\n              <div className=\"song-name\">{item.full_name}</div>\r\n              {getRightSide(item)}\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst leastPlayedRightSide = item => (\r\n  <div className=\"date\">\r\n    <span>{item.last_play ? getTimeAgo(parseDate(item.last_play)) : 'никогда'}</span>\r\n  </div>\r\n);\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    fetchMostPlayed,\r\n    fetchMostPlayedMonth,\r\n    fetchLeastPlayed,\r\n  }\r\n)(function SongsTop({ fetchMostPlayed, fetchMostPlayedMonth, fetchLeastPlayed }) {\r\n  return (\r\n    <div className=\"songs-top-page\">\r\n      <TopList fetchList={fetchMostPlayed} title=\"топ популярных треков\" />\r\n      <TopList fetchList={fetchMostPlayedMonth} title=\"топ популярных треков за месяц\" />\r\n      <TopList\r\n        fetchList={fetchLeastPlayed}\r\n        title=\"треки, которые долго не играли\"\r\n        renderRightSide={leastPlayedRightSide}\r\n      />\r\n      <div className=\"top-songs-list -placeholder\" />\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './toggle-button.scss';\r\n\r\nexport default class ToggleButton extends React.PureComponent {\r\n  static propTypes = {\r\n    text: toBe.string,\r\n    onToggle: toBe.func,\r\n    active: toBe.bool,\r\n  };\r\n\r\n  render() {\r\n    const { active, onToggle, text } = this.props;\r\n    return (\r\n      <div\r\n        className={classNames('toggle-button', { active: active })}\r\n        onClick={() => onToggle(!active)}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable react/no-deprecated */\r\n// imports from vendor deps\r\nimport React from 'react';\r\nimport toBe from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\n\r\n// imports from styles\r\nexport default class Input extends React.Component {\r\n  static propTypes = {\r\n    value: toBe.any,\r\n    defaultValue: toBe.any,\r\n    onChange: toBe.func,\r\n    onBlur: toBe.func,\r\n    type: toBe.string,\r\n    className: toBe.string,\r\n    trimOnBlur: toBe.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    value: null,\r\n    type: 'text',\r\n    onChange: _.noop,\r\n    onBlur: _.noop,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: (!_.isNil(props.value) ? props.value : props.defaultValue) || '',\r\n    };\r\n    _.bindAll(['handleChange', 'handleBlur', 'handleKeyPress'], this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.value !== this.props.value) {\r\n      this.setState({ value: this.props.value });\r\n    }\r\n  }\r\n\r\n  handleChange(e) {\r\n    const newValue = e.target.value;\r\n    this.setState({ value: newValue }, () => this.props.onChange(newValue));\r\n  }\r\n\r\n  handleBlur(e) {\r\n    const { type } = this.props;\r\n    const { value } = this.state;\r\n    if (type === 'number') {\r\n      const numericValue = Number(value);\r\n      if (numericValue >= Number(e.target.min) && numericValue <= Number(e.target.max)) {\r\n        this.props.onBlur(numericValue, e);\r\n      } else {\r\n        this.setState({ value: this.props.value });\r\n        this.props.onBlur(this.props.value, e);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleKeyPress(e) {\r\n    if (e.key === 'Enter') {\r\n      this.handleBlur(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props;\r\n\r\n    // HACK: This component uses onInput instead of onChange\r\n    // because IE11 fails to call onChange events when you paste/cut using context menu (RMB)\r\n    // We're using onInput because it works fine, and because for text input\r\n    // there's no difference between how onChange and onInput work\r\n    return (\r\n      <input\r\n        {..._.omit(['defaultValue', 'onChange'], this.props)}\r\n        className={classNames(className, 'text-input')}\r\n        value={this.state.value}\r\n        onBlur={this.handleBlur}\r\n        onKeyPress={this.handleKeyPress}\r\n        onInput={this.handleChange}\r\n        onChange={_.noop} // Handled by onInput\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './toggle.scss';\r\n\r\n// imports from styles\r\nexport default class Toggle extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.id = _.uniqueId();\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.props.onChange(e.target.checked);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"toggle-checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle-checkbox-cb\"\r\n          id={this.id}\r\n          onChange={this.onChange}\r\n          checked={this.props.checked}\r\n        />\r\n        <label htmlFor={this.id} className=\"toggle\">\r\n          <span></span>\r\n        </label>\r\n        {this.props.children && (\r\n          <label htmlFor={this.id} className=\"text-label\">\r\n            {this.props.children}\r\n          </label>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\n\r\nimport './styles.scss';\r\n\r\nexport default class CollapsibleBar extends PureComponent {\r\n  static propTypes = {\r\n    className: toBe.string,\r\n    children: toBe.any,\r\n    title: toBe.any,\r\n    defaultOpen: toBe.bool,\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = { open: props.defaultOpen || false };\r\n  }\r\n\r\n  render() {\r\n    const { children, title, className } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classNames('collapsible-bar', className, { open })}>\r\n        <div className=\"header\" onClick={() => this.setState(state => ({ open: !state.open }))}>\r\n          <div className=\"collapse-button\">\r\n            <FaChevronRight />\r\n          </div>\r\n          <div className=\"title\">{title}</div>\r\n        </div>\r\n        {children && <div className=\"collapsible-children\">{children}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport toBe from 'prop-types';\r\nimport { Popper } from 'react-popper';\r\nimport classNames from 'classnames';\r\nimport listensToClickOutside from 'react-onclickoutside';\r\n\r\nimport './overlay.scss';\r\n\r\nconst POPPER_MODIFIERS = {\r\n  preventOverflow: {\r\n    enabled: true,\r\n    padding: 10,\r\n    boundariesElement: 'viewport',\r\n  },\r\n};\r\n\r\nconst PLACEMENT_ARROW_MAPPING = {\r\n  right: 'left',\r\n  left: 'right',\r\n  top: 'bottom',\r\n  bottom: 'top',\r\n};\r\n\r\nconst getArrowPlacement = placement => {\r\n  return placement && PLACEMENT_ARROW_MAPPING[placement.split('-')[0]];\r\n};\r\n\r\nclass Overlay extends React.PureComponent {\r\n  static propTypes = {\r\n    placement: toBe.string,\r\n    overlayItem: toBe.any,\r\n    hideWhenOutOfBounds: toBe.bool,\r\n  };\r\n\r\n  static defaultTypes = {\r\n    placement: 'bottom',\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isVisible: false,\r\n    };\r\n    this.containerItemRef = React.createRef();\r\n    this.renderPopper = this.renderPopper.bind(this);\r\n    this.toggleOverlayVisibility = this.toggleOverlayVisibility.bind(this);\r\n  }\r\n\r\n  hideOverlay() {\r\n    this.setState({\r\n      isVisible: false,\r\n    });\r\n  }\r\n\r\n  toggleOverlayVisibility() {\r\n    this.setState({\r\n      isVisible: !this.state.isVisible,\r\n    });\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    const preventHiding = event && event.target.closest('.inner-popper-overlay'); // prevent overlays from hiding when a modal is opened within overlay\r\n\r\n    if (!preventHiding) {\r\n      this.hideOverlay();\r\n    }\r\n  }\r\n\r\n  renderPopper({ ref, style, placement, arrowProps, scheduleUpdate, outOfBoundaries }) {\r\n    const { children, hideWhenOutOfBounds } = this.props;\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        data-placement={placement}\r\n        className={classNames(\r\n          'inner-popper-overlay',\r\n          `arrow-${getArrowPlacement(placement)}`,\r\n          this.props.overlayClassName,\r\n          { 'out-of-bounds': outOfBoundaries && hideWhenOutOfBounds }\r\n        )}\r\n      >\r\n        <div className=\"arrow-hider\">\r\n          <div className=\"arrow\" ref={arrowProps.ref} style={arrowProps.style} />\r\n        </div>\r\n        <div\r\n          className=\"inner-popper-content\"\r\n          // ref={ref => this.setupPopperContentRef(scheduleUpdate, ref)}\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { placement, overlayItem } = this.props;\r\n    const { isVisible } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"overlay-item\"\r\n          ref={this.containerItemRef}\r\n          onClick={this.toggleOverlayVisibility}\r\n        >\r\n          {overlayItem}\r\n        </div>\r\n        {isVisible &&\r\n          ReactDOM.createPortal(\r\n            <Popper\r\n              container={document.body}\r\n              modifiers={POPPER_MODIFIERS}\r\n              placement={placement}\r\n              referenceElement={this.containerItemRef.current}\r\n            >\r\n              {this.renderPopper}\r\n            </Popper>,\r\n            document.body\r\n          )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default listensToClickOutside(Overlay);\r\n","import React from 'react';\r\nimport { Range as ReactRange, getTrackBackground } from 'react-range';\r\n\r\nexport default function Range({ range, min, max, onChange }) {\r\n  return (\r\n    <ReactRange\r\n      values={range}\r\n      step={1}\r\n      min={min}\r\n      max={max}\r\n      onChange={onChange}\r\n      renderTrack={({ props, children }) => (\r\n        <div\r\n          onMouseDown={props.onMouseDown}\r\n          onTouchStart={props.onTouchStart}\r\n          style={{\r\n            ...props.style,\r\n            position: 'relative',\r\n            height: '10px',\r\n            display: 'flex',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <div\r\n            ref={props.ref}\r\n            style={{\r\n              height: '6px',\r\n              width: '100%',\r\n              borderRadius: '3px',\r\n              background: getTrackBackground({\r\n                values: range,\r\n                colors: ['#ccc', '#88d3ff', '#ccc'],\r\n                min,\r\n                max,\r\n              }),\r\n              alignSelf: 'center',\r\n            }}\r\n          >\r\n            {children}\r\n          </div>\r\n        </div>\r\n      )}\r\n      renderThumb={({ props, isDragged }) => (\r\n        <div\r\n          {...props}\r\n          style={{\r\n            ...props.style,\r\n            height: '12px',\r\n            width: '12px',\r\n            borderRadius: '6px',\r\n            backgroundColor: '#FFF',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            boxShadow: '0px 2px 3px #AAA',\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              height: '6px',\r\n              width: '6px',\r\n              borderRadius: '3px',\r\n              backgroundColor: isDragged ? '#88d3ff' : '#CCC',\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\nimport { FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Range from 'components/Shared/Range';\r\n\r\nimport { CHART_MIN_MAX, DURATION_DEFAULT, DURATION } from 'constants/leaderboard';\r\n\r\nexport default function ChartFilter({ filterValue, onChange: onChangeEx }) {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filterValue);\r\n  const type = _.getOr(null, 'type', filterValue);\r\n  const duration = _.getOr(DURATION_DEFAULT, 'duration', filterValue);\r\n\r\n  let buttonText = 'фильтр чартов';\r\n  if (filterValue) {\r\n    const t = type || '';\r\n    buttonText = range[0] === range[1] ? `${t}${range[0]}` : `${t}${range[0]} - ${t}${range[1]}`;\r\n    buttonText = 'чарты: ' + buttonText;\r\n    if (!_.isEqual(duration, DURATION_DEFAULT)) {\r\n      buttonText += ' ***';\r\n      // buttonText += ` (${_.values(DURATION)\r\n      //   .filter(dur => duration.includes(dur))\r\n      //   .map(s => s.slice(0, 2))\r\n      //   .join('-')})`;\r\n    }\r\n  }\r\n\r\n  const onChange = value => {\r\n    onChangeEx({\r\n      range,\r\n      type,\r\n      ...value,\r\n      duration: _.isEmpty(value.duration) ? duration : value.duration,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Overlay\r\n        overlayClassName=\"chart-range-overlay-outer\"\r\n        overlayItem={\r\n          <button className=\"filter-charts-button btn btn-sm btn-dark\">{buttonText}</button>\r\n        }\r\n      >\r\n        <div className=\"chart-range-overlay\">\r\n          <div className=\"buttons\">\r\n            <ToggleButton\r\n              text=\"Single\"\r\n              active={type === 'S'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  type: active ? 'S' : null,\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Double\"\r\n              active={type === 'D'}\r\n              onToggle={active => {\r\n                onChange({\r\n                  type: active ? 'D' : null,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <Range\r\n            range={range}\r\n            min={CHART_MIN_MAX[0]}\r\n            max={CHART_MIN_MAX[1]}\r\n            onChange={r => onChange({ range: r })}\r\n          />\r\n          <div className=\"inputs\">\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  range: [Math.max(range[0] - 1, CHART_MIN_MAX[0]), range[1]],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={CHART_MIN_MAX[0]}\r\n              max={Math.min(CHART_MIN_MAX[1], range[1])}\r\n              value={range[0]}\r\n              onBlur={value => {\r\n                onChange({ range: [value, range[1]] });\r\n              }}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMin = Math.min(range[0] + 1, CHART_MIN_MAX[1]);\r\n                onChange({\r\n                  range: [newMin, range[1] < newMin ? newMin : range[1]],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() => {\r\n                const newMax = Math.max(range[1] - 1, CHART_MIN_MAX[0]);\r\n                onChange({\r\n                  range: [range[0] > newMax ? newMax : range[0], newMax],\r\n                });\r\n              }}\r\n            >\r\n              <FaCaretLeft />\r\n            </button>\r\n            <Input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min={Math.max(CHART_MIN_MAX[0], range[0])}\r\n              max={CHART_MIN_MAX[1]}\r\n              value={range[1]}\r\n              onBlur={value => onChange({ range: [range[0], value] })}\r\n            />\r\n            <button\r\n              className=\"btn btn-sm btn-dark\"\r\n              onClick={() =>\r\n                onChange({\r\n                  range: [range[0], Math.min(range[1] + 1, CHART_MIN_MAX[1])],\r\n                })\r\n              }\r\n            >\r\n              <FaCaretRight />\r\n            </button>\r\n          </div>\r\n          <div className=\"buttons-duration\">\r\n            <ToggleButton\r\n              text=\"Standard\"\r\n              active={duration.includes(DURATION.STD)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.STD]\r\n                    : _.without([DURATION.STD], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Short\"\r\n              active={duration.includes(DURATION.SHORT)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.SHORT]\r\n                    : _.without([DURATION.SHORT], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Remix\"\r\n              active={duration.includes(DURATION.REMIX)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.REMIX]\r\n                    : _.without([DURATION.REMIX], duration),\r\n                });\r\n              }}\r\n            />\r\n            <ToggleButton\r\n              text=\"Full\"\r\n              active={duration.includes(DURATION.FULL)}\r\n              onToggle={active => {\r\n                onChange({\r\n                  duration: active\r\n                    ? [...duration, DURATION.FULL]\r\n                    : _.without([DURATION.FULL], duration),\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Overlay>\r\n    </div>\r\n  );\r\n}\r\n","export const ranks = [\r\n  {\r\n    threshold: 0,\r\n    iconName: '0.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 1000,\r\n    iconName: '1.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 2000,\r\n    iconName: '2.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 3000,\r\n    iconName: '3.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 4000,\r\n    iconName: '4.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 5000,\r\n    iconName: '5.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 6250,\r\n    iconName: '6.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 7500,\r\n    iconName: '7.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 8750,\r\n    iconName: '8.png',\r\n    color: 'bronze',\r\n  },\r\n  {\r\n    threshold: 10000,\r\n    iconName: '9.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 12000,\r\n    iconName: '10.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 14000,\r\n    iconName: '11.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 16000,\r\n    iconName: '12.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 18000,\r\n    iconName: '13.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 22000,\r\n    iconName: '14.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 26000,\r\n    iconName: '15.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 30000,\r\n    iconName: '16.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 35000,\r\n    iconName: '17.png',\r\n    color: 'silver',\r\n  },\r\n  {\r\n    threshold: 40000,\r\n    iconName: '18.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 50000,\r\n    iconName: '19.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 60000,\r\n    iconName: '20.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 70000,\r\n    iconName: '21.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 80000,\r\n    iconName: '22.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 100000,\r\n    iconName: '23.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 120000,\r\n    iconName: '24.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 140000,\r\n    iconName: '25.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 160000,\r\n    iconName: '26.png',\r\n    color: 'gold',\r\n  },\r\n  {\r\n    threshold: 180000,\r\n    iconName: '27.png',\r\n    color: 'green',\r\n  },\r\n];\r\n","import React from 'react';\r\n\r\nexport const gradeValue = {\r\n  F: 0.1,\r\n  D: 0.2,\r\n  'D+': 0.3,\r\n  C: 0.3,\r\n  'C+': 0.5,\r\n  B: 0.5,\r\n  'B+': 0.8,\r\n  A: 0.8,\r\n  'A+': 1,\r\n  S: 1.1,\r\n  SS: 1.2,\r\n  SSS: 1.2,\r\n};\r\n\r\nexport const getExp = (result, chart) => {\r\n  if (!result.isBestGradeOnChart) {\r\n    return 0;\r\n  }\r\n  if (chart.chartType === 'COOP') {\r\n    return (chart.chartLevel * 1000 * (gradeValue[result.grade] || 0.8)) / 8;\r\n  }\r\n  const exp = (chart.chartLevel ** 2.31 * (gradeValue[result.grade] || 0.8)) / 9;\r\n  return exp;\r\n};\r\n\r\nexport const getRankImg = rank =>\r\n  rank && (\r\n    <img\r\n      className={rank.color}\r\n      src={`${process.env.PUBLIC_URL}/ranks/${rank.iconName}`}\r\n      alt={rank.threshold}\r\n    />\r\n  );\r\n\r\nexport { ranks } from './expRanks';\r\n","import _ from 'lodash/fp';\r\n\r\nimport {\r\n  GiLoveSong,\r\n  GiLifeBar,\r\n  GiSmokingFinger,\r\n  GiSnail,\r\n  GiRetroController,\r\n  GiRank1,\r\n  GiRank2,\r\n  GiRank3,\r\n  GiWoodenPegleg,\r\n  GiPodiumSecond,\r\n} from 'react-icons/gi';\r\n\r\nexport const achievements = {\r\n  '500 комбо': {\r\n    icon: GiRank1,\r\n    description: 'Заработать 500+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 500 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  '1000 комбо': {\r\n    icon: GiRank2,\r\n    description: 'Заработать 1000+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 1000 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  '2000 комбо': {\r\n    icon: GiRank3,\r\n    description: 'Заработать 2000+ комбо на любом чарте',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.combo >= 2000 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Мастер фингеринга': {\r\n    icon: GiSmokingFinger,\r\n    description: 'Сыграть все Fingers треки',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: ['Monkey Fingers', 'Kimchi Fingers', 'Monkey Fingers 2', 'Money Fingers'],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  '8-bit': {\r\n    icon: GiRetroController,\r\n    description: 'Сыграть Seize My Day, Tales of Pumpnia и Pumptris (8bit ver.)',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: ['Seize My Day', 'Tales of Pumpnia', 'Pumptris (8bit ver.)'],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  'Love is...': {\r\n    icon: GiLoveSong,\r\n    description: 'Сыграть все Love is a Danger Zone треки',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: [\r\n        'Love is a Danger Zone',\r\n        'Love is a Danger Zone [SHORT]',\r\n        'Love is a Danger Zone (Cranky Mix)',\r\n        'Love is a Danger Zone 2',\r\n        'Love is a Danger Zone 2 [SHORT]',\r\n        'Love is a Danger Zone 2 [FULL]',\r\n        'Love is a Danger Zone 2 (D&G Ver.)',\r\n        'Love is a Danger Zone (try to B.P.M.)',\r\n      ],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.includes(chart.song)\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  Улитка: {\r\n    icon: GiSnail,\r\n    description:\r\n      'Мастер замедлений: сыграть старшие чарты Twist of Fate, Karyawisata, Awakening и Moonlight',\r\n    initialState: {\r\n      progress: 0,\r\n      playedSongs: [],\r\n      songsToPlay: [\r\n        { song: 'Twist of Fate (feat. Ruriling)', charts: ['D20', 'S19'] },\r\n        { song: 'Karyawisata', charts: ['S20', 'D16'] },\r\n        { song: 'Awakening', charts: ['S19', 'D20'] },\r\n        { song: 'Moonlight', charts: ['S19', 'D21'] },\r\n      ],\r\n    },\r\n    resultFunction: (result, chart, state) => {\r\n      const playedSongs = state.songsToPlay.some(\r\n        songToPlay => chart.song === songToPlay.song && songToPlay.charts.includes(chart.chartLabel)\r\n      )\r\n        ? _.uniq([...state.playedSongs, chart.song])\r\n        : state.playedSongs;\r\n      return {\r\n        playedSongs,\r\n        songsToPlay: state.songsToPlay,\r\n        progress: (100 * playedSongs.length) / state.songsToPlay.length,\r\n      };\r\n    },\r\n  },\r\n  'Коричневая S': {\r\n    icon: GiPodiumSecond,\r\n    description: 'Получить S, но 5+ бэдов',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress: state.progress === 100 ? 100 : result.miss === 0 && result.bad >= 5 ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Мы выживали как могли': {\r\n    icon: GiLifeBar,\r\n    description: 'Получить B или ниже, но удержать лайфбар',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress:\r\n          state.progress === 100 ? 100 : ['B+', 'C+', 'D+'].includes(result.grade) ? 100 : 0,\r\n      };\r\n    },\r\n  },\r\n  'Падовый мисс': {\r\n    icon: GiWoodenPegleg,\r\n    description: 'Когда от SSS тебя удерживают только миссы из-за плохого моддинга падов',\r\n    resultFunction: (result, chart, state) => {\r\n      return {\r\n        progress:\r\n          state.progress === 100\r\n            ? 100\r\n            : result.miss > 0 && result.bad === 0 && result.good === 0 && result.great === 0\r\n            ? 100\r\n            : 0,\r\n      };\r\n    },\r\n  },\r\n};\r\n\r\nexport const initialAchievementState = {\r\n  progress: 0,\r\n};\r\n","export const getScoreWithoutBonus = (score, grade) => {\r\n  if (grade === 'SSS') return score - 300000;\r\n  if (grade === 'SS') return score - 150000;\r\n  if (grade === 'S') return score - 100000;\r\n  return score;\r\n};\r\n","import _ from 'lodash/fp';\r\nimport regression from 'regression';\r\n\r\nimport { ranks as expRanks } from 'utils/expRanks';\r\n\r\nconst processBattles = ({ battles, profiles, debug, resultInfo: dictScoreInfo }) => {\r\n  let logText = '';\r\n  const dictChartElo = {};\r\n  const getDictChartEloId = (score, enemyScore) =>\r\n    `${score.playerId}vs${enemyScore.playerId}-${score.sharedChartId}-${score.isRank}`;\r\n  const dictRatingDiff = {};\r\n  const getDictRatingDiffId = (score) => `${score.playerId}-${score.sharedChartId}-${score.isRank}`;\r\n  // const dictScoreInfo = {};\r\n  battles.forEach(([score, enemyScore, song]) => {\r\n    // For each battle\r\n    const p1 = profiles[score.playerId];\r\n    const p2 = profiles[enemyScore.playerId];\r\n\r\n    const scoreMultiplier = score.isRank ? 1.2 : 1;\r\n    let maxScore = null;\r\n    if (song.maxScore) {\r\n      maxScore = song.maxScore * scoreMultiplier;\r\n      if (\r\n        Math.max(maxScore, score.score, enemyScore.score) !== maxScore &&\r\n        !score.isRank &&\r\n        (!score.isExactDate || !enemyScore.isExactDate)\r\n      ) {\r\n        maxScore *= 1.2;\r\n        // Rank from machine best wasn't recognized most likely.\r\n        // Increasing max score by 20% is fine\r\n      }\r\n      if (Math.max(maxScore, score.score, enemyScore.score) !== maxScore) {\r\n        // If calculated max score isn't max score anyway, use current scores as max + cherry on top\r\n        maxScore = Math.max(maxScore, score.score, enemyScore.score) + 10000;\r\n      }\r\n    }\r\n\r\n    // Data to be appended to every score outside of this thread\r\n    if (!dictScoreInfo[score.id]) dictScoreInfo[score.id] = {};\r\n    if (!dictScoreInfo[enemyScore.id]) dictScoreInfo[enemyScore.id] = {};\r\n    const scoreInfo = dictScoreInfo[score.id];\r\n    const enemyScoreInfo = dictScoreInfo[enemyScore.id];\r\n\r\n    // Rating at the start of battle for this score\r\n    if (!scoreInfo.startingRating) scoreInfo.startingRating = p1.rating;\r\n    if (!enemyScoreInfo.startingRating) enemyScoreInfo.startingRating = p2.rating;\r\n\r\n    // Counting the number of battles\r\n    p1.battleCount++;\r\n    p2.battleCount++;\r\n\r\n    // This is one match between two players\r\n    //// Elo formula\r\n    // const r1 = score.startingRating;\r\n    // const r2 = enemyScore.startingRating;\r\n    const r1 = p1.rating;\r\n    const r2 = p2.rating;\r\n    const R1 = 10 ** (r1 / 400);\r\n    const R2 = 10 ** (r2 / 400);\r\n    const E1 = R1 / (R1 + R2);\r\n    const E2 = R2 / (R1 + R2);\r\n    let A = score.score;\r\n    let B = enemyScore.score;\r\n    let S1, S2;\r\n    if (A === B) {\r\n      S1 = S2 = 0.5;\r\n    } else if (maxScore && A !== 0 && B !== 0) {\r\n      A = maxScore / A - 1;\r\n      B = maxScore / B - 1;\r\n      S1 = (B / (A + B) - 0.5) * 5 + 0.5;\r\n      S2 = (A / (A + B) - 0.5) * 5 + 0.5;\r\n    } else {\r\n      S1 = A > B ? 1 : B < A ? 0 : 0.5;\r\n      S2 = 1 - S1;\r\n    }\r\n    S1 = Math.max(0, Math.min(1, S1)); // Set strict boundaries to [0, 1]\r\n    S2 = Math.max(0, Math.min(1, S2));\r\n\r\n    const kRating1 = Math.max(0, Math.min(1, (r1 - 700) / 800));\r\n    const kRating2 = Math.max(0, Math.min(1, (r2 - 700) / 800));\r\n    const maxK1 = 20 + 20 * kRating1;\r\n    const maxK2 = 20 + 20 * kRating2;\r\n    const chartLevel = Number(song.interpolatedDifficulty || song.chartLevel);\r\n    const kLevel1 = Math.max(\r\n      1,\r\n      Math.min(maxK1, (chartLevel / 25) ** ((kRating1 - 0.5) * 5 + 2.5) * maxK1)\r\n    );\r\n    const kLevel2 = Math.max(\r\n      1,\r\n      Math.min(maxK2, (chartLevel / 25) ** ((kRating2 - 0.5) * 5 + 2.5) * maxK2)\r\n    );\r\n    const kLevel = Math.min(kLevel1, kLevel2);\r\n\r\n    // When YOU vs ENEMY both have SS/SSS, and both scores are very close to SSS, this battle will NOT affect ELO too much\r\n    let kMinimizer = 1;\r\n    const kDropCutoff = 0.98; // Score is 98% of max score or higher -- K will be lower\r\n    if (\r\n      song.maxScore &&\r\n      (score.grade.startsWith('SS') || (score.miss === 0 && score.bad === 0)) &&\r\n      (enemyScore.grade.startsWith('SS') || (enemyScore.miss === 0 && enemyScore.bad === 0)) &&\r\n      score.score / maxScore > kDropCutoff &&\r\n      enemyScore.score / maxScore > kDropCutoff\r\n    ) {\r\n      kMinimizer =\r\n        Math.max(\r\n          Math.min(\r\n            1,\r\n            Math.max(\r\n              100 - (100 * score.score) / maxScore,\r\n              100 - (100 * enemyScore.score) / maxScore\r\n            ) /\r\n              (100 - kDropCutoff * 100)\r\n          ),\r\n          0\r\n        ) ** 2;\r\n    }\r\n\r\n    const K1 = kLevel * kMinimizer;\r\n    const K2 = kLevel * kMinimizer;\r\n    let dr1 = K1 * (S1 - E1);\r\n    let dr2 = K2 * (S2 - E2);\r\n    // Do not decrease rating if you have SSS - RIP zero-sum algorithm\r\n    dr1 = dr1 < 0 && score.grade === 'SSS' ? 0 : dr1;\r\n    dr2 = dr2 < 0 && enemyScore.grade === 'SSS' ? 0 : dr2;\r\n    // Recording this value for display\r\n    const baseEloId1 = getDictChartEloId(score, enemyScore);\r\n    const baseEloId2 = getDictChartEloId(enemyScore, score);\r\n    const baseEloP1 = dictChartElo[baseEloId1] || 0;\r\n    const baseEloP2 = dictChartElo[baseEloId2] || 0;\r\n    dictChartElo[baseEloId1] = dr1;\r\n    dictChartElo[baseEloId2] = dr2;\r\n\r\n    // Change rating as a result of this battle\r\n    p1.rating = p1.rating + dr1 - baseEloP1;\r\n    p2.rating = p2.rating + dr2 - baseEloP2;\r\n\r\n    const ratingDiffId1 = getDictRatingDiffId(score);\r\n    const ratingDiffId2 = getDictRatingDiffId(enemyScore);\r\n    dictRatingDiff[ratingDiffId1] = (dictRatingDiff[ratingDiffId1] || 0) + dr1 - baseEloP1;\r\n    dictRatingDiff[ratingDiffId2] = (dictRatingDiff[ratingDiffId2] || 0) + dr2 - baseEloP2;\r\n\r\n    // Q\r\n    scoreInfo.ratingDiff = dictRatingDiff[ratingDiffId1];\r\n    scoreInfo.ratingDiffLast = dr1 - baseEloP1;\r\n\r\n    enemyScoreInfo.ratingDiff = dictRatingDiff[ratingDiffId2];\r\n    enemyScoreInfo.ratingDiffLast = dr2 - baseEloP2;\r\n\r\n    if (debug) {\r\n      // if (score.sharedChartId === 5292) {\r\n      // if (song.song === 'Club Night') {\r\n      // if (score.nickname === 'Liza' || enemyScore.nickname === 'Liza') {\r\n      // if (!song.maxScore) {\r\n      logText += `${song.chartLabel} - ${song.song} (${song.sharedChartId}) - ${\r\n        profiles[score.playerId].name\r\n      } / ${profiles[enemyScore.playerId].name}\r\n- ${score.score} / ${enemyScore.score} (${Math.floor(maxScore)} (${Math.floor(\r\n        song.maxScore * scoreMultiplier\r\n      )})) - R ${S1.toFixed(2)}/${S2.toFixed(2)} E ${E1.toFixed(2)} / ${E2.toFixed(2)}\r\n- Rating ${r1.toFixed(2)} / ${r2.toFixed(2)} - ${dr1.toFixed(2)} / ${dr2.toFixed(\r\n        2\r\n      )} - K ${K1.toFixed(2)} ${K2.toFixed(2)}${\r\n        kMinimizer === 1 ? '' : ` (coef ${kMinimizer.toFixed(2)})`\r\n      }\r\n- Base elo: ${baseEloP1.toFixed(2)} / ${baseEloP2.toFixed(2)}\r\n- Elo change: ${(dr1 - baseEloP1).toFixed(2)} / ${(dr2 - baseEloP2).toFixed(2)}\r\n- New base elo: ${dictChartElo[baseEloId1].toFixed(2)} / ${dictChartElo[baseEloId2].toFixed(2)}\r\n- RD: ${dictRatingDiff[ratingDiffId1].toFixed(2)} / ${dictRatingDiff[ratingDiffId2].toFixed(2)}\\n`;\r\n    }\r\n    // Rating floor\r\n    p1.rating = Math.max(100, p1.rating);\r\n    p2.rating = Math.max(100, p2.rating);\r\n\r\n    const playersSorted = _.flow(\r\n      _.keys,\r\n      _.map((id) => ({ id, rating: profiles[id].rating })),\r\n      _.orderBy(['rating'], ['desc'])\r\n    )(profiles);\r\n    const battleDate =\r\n      score.dateObject > enemyScore.dateObject ? score.dateObject : enemyScore.dateObject;\r\n    playersSorted.forEach((player, index) => {\r\n      const lastPlace = profiles[player.id].lastPlace;\r\n      if (lastPlace !== index + 1) {\r\n        profiles[player.id].rankingHistory.push({\r\n          place: index + 1,\r\n          date: battleDate.getTime(),\r\n        });\r\n        profiles[player.id].lastPlace = index + 1;\r\n      }\r\n    });\r\n\r\n    const p1LastRating = _.last(p1.ratingHistory);\r\n    const p2LastRating = _.last(p2.ratingHistory);\r\n    if (p1LastRating !== p1.rating) {\r\n      p1.ratingHistory.push({\r\n        rating: p1.rating,\r\n        date: battleDate.getTime(),\r\n      });\r\n    }\r\n    if (p2LastRating !== p2.rating) {\r\n      p2.ratingHistory.push({\r\n        rating: p2.rating,\r\n        date: battleDate.getTime(),\r\n      });\r\n    }\r\n  });\r\n\r\n  _.flow(\r\n    _.keys,\r\n    _.forEach((key) => {\r\n      profiles[key].id = _.toInteger(key);\r\n      profiles[key].accuracy =\r\n        profiles[key].countAcc > 0\r\n          ? Math.round((profiles[key].sumAccuracy / profiles[key].countAcc) * 100) / 100\r\n          : null;\r\n      profiles[key].ratingRaw = profiles[key].rating;\r\n      profiles[key].rating = Math.round(profiles[key].rating);\r\n      profiles[key].rankingHistory = [\r\n        ...profiles[key].rankingHistory,\r\n        { place: _.get('place', _.last(profiles[key].rankingHistory)), date: Date.now() },\r\n      ];\r\n    })\r\n  )(profiles);\r\n  return { logText };\r\n};\r\n\r\nconst postProcessProfiles = (profiles, tracklist) => {\r\n  const getBonusForLevel = (level) => (30 * (1 + 2 ** (level / 4))) / 11;\r\n  const getMinimumNumber = (totalCharts) =>\r\n    Math.round(\r\n      Math.min(totalCharts, 1 + totalCharts / 20 + Math.sqrt(Math.max(totalCharts - 1, 0)) * 0.7)\r\n    );\r\n\r\n  const newProfiles = _.mapValues((profile) => {\r\n    const neededGrades = ['A', 'A+', 'S', 'SS', 'SSS'];\r\n    profile.expRank = _.findLast((rank) => rank.threshold <= profile.exp, expRanks);\r\n    profile.expRankNext = _.find((rank) => rank.threshold > profile.exp, expRanks);\r\n    profile.progress = {\r\n      double: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n      single: {\r\n        SS: {},\r\n        S: {},\r\n        'A+': {},\r\n        A: {},\r\n      },\r\n    };\r\n    const gradeIncrementMap = {\r\n      SSS: ['SS', 'S', 'A+', 'A'],\r\n      SS: ['SS', 'S', 'A+', 'A'],\r\n      S: ['S', 'A+', 'A'],\r\n      'A+': ['A+', 'A'],\r\n      A: ['A'],\r\n    };\r\n    const incrementLevel = (l, g, chartType) => {\r\n      const prog =\r\n        chartType === 'S' || chartType === 'SP'\r\n          ? profile.progress.single\r\n          : chartType === 'D' || chartType === 'DP'\r\n          ? profile.progress.double\r\n          : null;\r\n      if (prog) {\r\n        prog[g][l] = prog[g][l] ? prog[g][l] + 1 : 1;\r\n      }\r\n    };\r\n\r\n    profile.accuracyPointsRaw = [];\r\n    _.keys(profile.resultsByLevel).forEach((level) => {\r\n      profile.resultsByLevel[level].forEach((res) => {\r\n        if (!res.result.isRank && res.result.accuracyRaw) {\r\n          profile.accuracyPointsRaw.push([\r\n            _.toNumber(level),\r\n            res.result.accuracyRaw,\r\n            res.result.sharedChartId,\r\n          ]);\r\n        }\r\n\r\n        const thisGrade = res.result.grade;\r\n        const thisPlayerId = res.result.playerId;\r\n        const otherResults = res.chart.results.filter((r) => r.playerId === thisPlayerId);\r\n        if (otherResults.length > 1) {\r\n          const sortedResults = otherResults.sort(\r\n            (a, b) => neededGrades.indexOf(b.grade) - neededGrades.indexOf(a.grade)\r\n          );\r\n          if (sortedResults[0].grade !== thisGrade) {\r\n            return; // Don't do anything when we have a different result with better grade\r\n          }\r\n        }\r\n        const gradeIncArray = gradeIncrementMap[thisGrade];\r\n        if (gradeIncArray) {\r\n          gradeIncArray.forEach((gradeInc) => {\r\n            incrementLevel(level, gradeInc, res.chart.chartType);\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    ['single', 'double'].forEach((chartType) => {\r\n      profile.progress[`${chartType}-bonus`] = 0;\r\n      _.keys(profile.progress[chartType]).forEach((grade) => {\r\n        profile.progress[chartType][`${grade}-bonus`] = 0;\r\n        _.keys(profile.progress[chartType][grade]).forEach((level) => {\r\n          const number = profile.progress[chartType][grade][level];\r\n          const totalCharts = tracklist.data[`${chartType}sLevels`][level];\r\n          const minimumNumber = getMinimumNumber(totalCharts);\r\n          const bonusCoefficientNumber = Math.min(1, number / minimumNumber);\r\n          const rawBonus = getBonusForLevel(level);\r\n          const bonus = rawBonus * bonusCoefficientNumber;\r\n          profile.progress[chartType][grade][`${level}-bonus`] = bonus;\r\n          profile.progress[chartType][grade][`${level}-bonus-coef`] = bonusCoefficientNumber;\r\n          profile.progress[chartType][grade][`${level}-min-number`] = minimumNumber;\r\n          profile.progress[chartType][grade][`${level}-achieved-number`] = number;\r\n          if (bonus >= profile.progress[chartType][`${grade}-bonus`]) {\r\n            profile.progress[chartType][`${grade}-bonus`] = bonus;\r\n            profile.progress[chartType][`${grade}-bonus-level`] = level;\r\n            profile.progress[chartType][`${grade}-bonus-level-coef`] = bonusCoefficientNumber;\r\n            profile.progress[chartType][`${grade}-bonus-level-min-number`] = minimumNumber;\r\n            profile.progress[chartType][`${grade}-bonus-level-achieved-number`] = number;\r\n          }\r\n        });\r\n        profile.progress[`${chartType}-bonus`] += profile.progress[chartType][`${grade}-bonus`];\r\n      });\r\n    });\r\n    profile.progress.bonus = profile.progress['double-bonus'] + profile.progress['single-bonus'];\r\n    profile.achievementBonus = profile.progress.bonus;\r\n    profile.accuracy =\r\n      profile.countAcc > 0\r\n        ? Math.round((profile.sumAccuracy / profile.countAcc) * 100) / 100\r\n        : null;\r\n    return profile;\r\n  }, profiles);\r\n  return newProfiles;\r\n};\r\n\r\nconst processPP = ({ profiles, sharedCharts }) => {\r\n  const resultInfo = {};\r\n  // const now = new Date();\r\n  for (const chartId in sharedCharts) {\r\n    const chart = sharedCharts[chartId];\r\n    const chartResults = chart.results;\r\n    const chartLevel = Number(chart.interpolatedDifficulty || chart.chartLevel);\r\n    const maxPP = chartLevel ** 2.2 / 7.6; // 7;\r\n    if (chart.maxScore) {\r\n      const maxScore = chart.maxScore;\r\n      for (const result of chartResults) {\r\n        if (!result.isRank && maxScore) {\r\n          const K1 = Math.max(0, Math.min(1, result.scoreRaw / maxScore - 0.3) / 0.7);\r\n          // Optional: decrease PP values for older scores. Testing showing this doesn't change anything really\r\n          // const millisecOld = now - result.dateObject;\r\n          // const maxDays = 365;\r\n          // const maxTimeDecrease = 0;\r\n          // const K2 =\r\n          //   1 -\r\n          //   maxTimeDecrease * Math.min(1, Math.max(0, millisecOld / 1000 / 60 / 60 / 24 / maxDays));\r\n          // const K = K1 * K2;\r\n\r\n          const K = K1;\r\n\r\n          // Final PP value\r\n          const pp = K * maxPP;\r\n          // Record result data\r\n          resultInfo[result.id] = {\r\n            pp: {\r\n              pp,\r\n              k: K,\r\n              maxScore,\r\n              maxPP,\r\n              ppPotential: maxPP - pp,\r\n              ppRatio: pp / maxPP,\r\n              ppFixed: Number(pp.toFixed(1)),\r\n            },\r\n          };\r\n          const profile = profiles[result.playerId];\r\n          if (profile) {\r\n            if (!profile.pp) {\r\n              profile.pp = { scores: [], pp: 0 };\r\n            }\r\n            profile.pp.scores.push({\r\n              pp_: Number(pp.toFixed(1)),\r\n              s: chart.song,\r\n              l: chart.chartLabel,\r\n              pp,\r\n              result,\r\n              chart,\r\n              K,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // Calculate total pp\r\n  for (const playerId in profiles) {\r\n    const profile = profiles[playerId];\r\n    if (profile.pp) {\r\n      profile.pp.scores.sort((a, b) => b.pp - a.pp);\r\n      profile.pp.pp = 0;\r\n      profile.pp.scores.forEach((score, index) => {\r\n        profile.pp.pp += 0.95 ** index * score.pp;\r\n      });\r\n      profile.rating = profile.pp.pp;\r\n    } else {\r\n      profile.rating = 0;\r\n    }\r\n  }\r\n  return resultInfo;\r\n};\r\n\r\nconst interpolateDifficulties = ({ sharedCharts, profiles, debug }) => {\r\n  let newSharedCharts = _.mapValues((chart) => {\r\n    const datas = chart.results\r\n      .map((r) => {\r\n        const profile = profiles[r.playerId];\r\n        if (!profile || !r.accuracy || r.isRank || _.size(profile.accuracyPointsRaw) < 50) {\r\n          return null;\r\n        }\r\n\r\n        if (!profile.accuracyPointsInterpolated) {\r\n          const maxAccuracy = _.maxBy(([x, y]) => y, profile.accuracyPointsRaw)[1];\r\n          const maxLevelWithMaxAcc = _.maxBy(\r\n            ([x, y]) => x,\r\n            _.filter(([x, y]) => y === maxAccuracy, profile.accuracyPointsRaw)\r\n          )[0];\r\n          const points = profile.accuracyPointsRaw\r\n            .filter(([x, y]) => x >= maxLevelWithMaxAcc - 1)\r\n            .map(([x, y]) => [30 - x, 101 - y]);\r\n          const result = regression.logarithmic(points);\r\n\r\n          const f = (x) => {\r\n            const calculated = 101 - result.predict(30 - x)[1];\r\n            return Math.max(0, Math.min(calculated, 100));\r\n          };\r\n          const yx = [];\r\n          for (let i = 1; i <= 28; i += 0.05) {\r\n            yx.push([i, f(i)]);\r\n          }\r\n\r\n          profile.accuracyPointsInterpolated = yx;\r\n        }\r\n\r\n        const interpolatedPoint = _.find(\r\n          (pair) => pair[1] < r.accuracyRaw,\r\n          profile.accuracyPointsInterpolated\r\n        );\r\n        const returnValue = {\r\n          interpolatedDifficulty: interpolatedPoint && interpolatedPoint[0],\r\n          weight:\r\n            r.accuracyRaw > 98\r\n              ? 1 - (r.accuracyRaw - 98) / (100 - 98)\r\n              : r.accuracyRaw < 80\r\n              ? Math.max(0, (r.accuracyRaw - 50) / (80 - 50))\r\n              : 1,\r\n        };\r\n        returnValue.weight *= Math.min(\r\n          1,\r\n          Math.max(0.1, (8 - Math.abs(returnValue.interpolatedDifficulty - chart.chartLevel)) / 8)\r\n        );\r\n        if (debug) {\r\n          r.interpolation = returnValue;\r\n        }\r\n        return returnValue;\r\n      })\r\n      .filter(_.identity);\r\n    const sums = datas.reduce(\r\n      (acc, item) => {\r\n        if (!item.interpolatedDifficulty) {\r\n          return acc;\r\n        }\r\n        return {\r\n          diffSum: acc.diffSum + item.interpolatedDifficulty * item.weight,\r\n          weightSum: acc.weightSum + item.weight,\r\n        };\r\n      },\r\n      { diffSum: 0, weightSum: 0 }\r\n    );\r\n    sums.diffSum += _.toNumber(chart.chartLevel) * 2;\r\n    sums.weightSum += 2;\r\n    const averageDifficulty = sums.diffSum / sums.weightSum;\r\n    // console.log(chart.song, chart.chartLabel, JSON.stringify(datas), averageDifficulty);\r\n\r\n    return {\r\n      ...chart,\r\n      interpolatedDifficulty: averageDifficulty,\r\n    };\r\n  }, sharedCharts);\r\n  return newSharedCharts;\r\n};\r\n\r\nexport const getProcessedProfiles = ({ profiles, sharedCharts, tracklist, battles, debug }) => {\r\n  // Calculate Progress achievements and bonus for starting Elo\r\n  profiles = postProcessProfiles(profiles, tracklist);\r\n\r\n  // Recalculate chart difficulty\r\n  sharedCharts = interpolateDifficulties({ debug, sharedCharts, profiles });\r\n\r\n  // Calculate PP\r\n  const resultInfo = processPP({\r\n    profiles,\r\n    sharedCharts,\r\n  });\r\n\r\n  // Calculate ELO\r\n  const { logText } = processBattles({\r\n    battles,\r\n    profiles,\r\n    resultInfo,\r\n    debug,\r\n  });\r\n\r\n  return { profiles, resultInfo, sharedCharts, logText };\r\n};\r\n","if (localStorage) {\r\n  window.debugOn = () => {\r\n    localStorage.setItem('debug', 1);\r\n  };\r\n  window.debugOff = () => {\r\n    localStorage.removeItem('debug');\r\n  };\r\n}\r\n\r\nexport const DEBUG = localStorage && localStorage.getItem('debug');\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\nimport queryString from 'query-string';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\nimport { getExp } from 'utils/exp';\r\nimport { achievements, initialAchievementState } from 'utils/achievements';\r\nimport { parseDate } from 'utils/date';\r\nimport { getScoreWithoutBonus } from 'utils/score';\r\n\r\nimport WorkerProfilesProcessing from 'workerize-loader!utils/workers/profilesPostProcess'; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport * as profilesProcessing from 'utils/workers/profilesPostProcess';\r\n\r\nimport { HOST } from 'constants/backend';\r\nimport { DEBUG } from 'constants/env';\r\n\r\nconst LOADING = `TOP/LOADING`;\r\nconst STOP_LOADING = `TOP/STOP_LOADING`;\r\nconst SUCCESS = `TOP/SUCCESS`;\r\nconst ERROR = `TOP/ERROR`;\r\nconst SET_FILTER = `TOP/SET_FILTER`;\r\nconst RESET_FILTER = `TOP/RESET_FILTER`;\r\nconst RANKING_CHANGE_SET = `TOP/RANKING_CHANGE_SET`;\r\nconst PROFILES_UPDATE = `TOP/PROFILES_UPDATE`;\r\n\r\nconst highscoresUrl = process.env.REACT_APP_SOCKET\r\n  ? 'results/highscores/trusted'\r\n  : 'results/highscores';\r\n\r\nexport const defaultFilter = { showRank: true, showRankAndNorank: true };\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  isLoadingRanking: false,\r\n  data: [],\r\n  filter: defaultFilter,\r\n  players: {},\r\n  profiles: {},\r\n  results: [],\r\n  resultInfo: {},\r\n  sharedCharts: {},\r\n};\r\n\r\nexport const gradeComparator = {\r\n  '?': 0,\r\n  F: 1,\r\n  D: 2,\r\n  'D+': 3,\r\n  C: 4,\r\n  'C+': 5,\r\n  B: 6,\r\n  'B+': 7,\r\n  A: 8,\r\n  'A+': 9,\r\n  S: 10,\r\n  SS: 11,\r\n  SSS: 12,\r\n};\r\n\r\nconst tryFixIncompleteResult = (result, maxTotalSteps) => {\r\n  if (!maxTotalSteps) {\r\n    return;\r\n  }\r\n  const infos = [result.perfect, result.great, result.good, result.bad, result.miss];\r\n  let fixableIndex = -1,\r\n    absentNumbersCount = 0,\r\n    localStepSum = 0;\r\n  for (let i = 0; i < 5; ++i) {\r\n    if (!_.isNumber(infos[i])) {\r\n      fixableIndex = i;\r\n      absentNumbersCount++;\r\n    } else {\r\n      localStepSum += infos[i];\r\n    }\r\n  }\r\n  if (absentNumbersCount === 1) {\r\n    result[['perfect', 'great', 'good', 'bad', 'miss'][fixableIndex]] =\r\n      maxTotalSteps - localStepSum;\r\n  }\r\n};\r\n\r\nconst guessGrade = (result) => {\r\n  if (result.misses === 0 && result.bads === 0 && result.goods === 0) {\r\n    if (result.greats === 0) {\r\n      return 'SSS';\r\n    } else {\r\n      return 'SS';\r\n    }\r\n  }\r\n  return result.grade;\r\n};\r\n\r\nconst mapResult = (res, players, chart) => {\r\n  if (typeof res.recognition_notes === 'undefined') {\r\n    // Short result, minimum info, only for ELO calculation\r\n    // Will be replaced with better result later\r\n    return {\r\n      id: res.id,\r\n      isUnknownPlayer: players[res.player].arcade_name === 'PUMPITUP',\r\n      isIntermediateResult: true,\r\n      sharedChartId: res.shared_chart,\r\n      playerId: res.player,\r\n      nickname: players[res.player].nickname,\r\n      nicknameArcade: players[res.player].arcade_name,\r\n      date: res.gained,\r\n      dateObject: parseDate(res.gained),\r\n      grade: res.grade,\r\n      isExactDate: !!res.exact_gain_date,\r\n      score: res.score,\r\n      scoreRaw: getScoreWithoutBonus(res.score, res.grade),\r\n      isRank: !!res.rank_mode,\r\n    };\r\n  }\r\n  // Full best result\r\n  let _r = {\r\n    isUnknownPlayer: players[res.player].arcade_name === 'PUMPITUP',\r\n    isIntermediateResult: false,\r\n    sharedChartId: res.shared_chart,\r\n    id: res.id,\r\n    playerId: res.player,\r\n    nickname: players[res.player].nickname,\r\n    nicknameArcade: players[res.player].arcade_name,\r\n    originalChartMix: res.original_mix,\r\n    originalChartLabel: res.original_label,\r\n    originalScore: res.original_score,\r\n    date: res.gained,\r\n    dateObject: parseDate(res.gained),\r\n    grade: res.grade !== '?' ? res.grade : guessGrade(res),\r\n    isExactDate: !!res.exact_gain_date,\r\n    score: res.score,\r\n    scoreRaw: getScoreWithoutBonus(res.score, res.grade),\r\n    scoreIncrease: res.score_increase,\r\n    calories: res.calories && res.calories / 1000,\r\n    perfect: res.perfects,\r\n    great: res.greats,\r\n    good: res.goods,\r\n    bad: res.bads,\r\n    miss: res.misses,\r\n    combo: res.max_combo,\r\n    mods: res.mods_list,\r\n    isRank: !!res.rank_mode,\r\n    isHJ: (res.mods_list || '').split(' ').includes('HJ'),\r\n    isMachineBest: res.recognition_notes === 'machine_best',\r\n    isMyBest: res.recognition_notes === 'personal_best',\r\n  };\r\n\r\n  tryFixIncompleteResult(_r, chart.maxTotalSteps);\r\n\r\n  const perfects = Math.sqrt(_r.perfect) * 10;\r\n  const acc = perfects\r\n    ? Math.floor(\r\n        ((perfects * 100 + _r.great * 85 + _r.good * 60 + _r.bad * 20 + _r.miss * -25) /\r\n          (perfects + _r.great + _r.good + _r.bad + _r.miss)) *\r\n          100\r\n      ) / 100\r\n    : null;\r\n  const accRaw = _r.perfect\r\n    ? Math.floor(\r\n        ((_r.perfect * 100 + _r.great * 85 + _r.good * 60 + _r.bad * 20 + _r.miss * -25) /\r\n          (_r.perfect + _r.great + _r.good + _r.bad + _r.miss)) *\r\n          100\r\n      ) / 100\r\n    : null;\r\n\r\n  _r.accuracy = acc < 0 ? 0 : accRaw === 100 ? 100 : acc && +acc.toFixed(2);\r\n  _r.accuracyRaw = _.toNumber(_r.accuracy);\r\n  return _r;\r\n};\r\n\r\nconst getMaxRawScore = (score) => {\r\n  return ((score.scoreRaw / score.accuracy) * 100) / (score.isRank ? 1.2 : 1);\r\n};\r\n\r\nconst initializeProfile = (result, profiles, players) => {\r\n  const id = result.playerId;\r\n  const resultsByLevel = _.fromPairs(Array.from({ length: 28 }).map((x, i) => [i + 1, []]));\r\n  profiles[id] = {\r\n    name: result.nickname,\r\n    nameArcade: result.nicknameArcade,\r\n    resultsByGrade: {},\r\n    resultsByLevel,\r\n    lastResultDate: result.dateObject,\r\n    count: 0,\r\n    battleCount: 0,\r\n    countAcc: 0,\r\n    grades: { F: 0, D: 0, C: 0, B: 0, A: 0, S: 0, SS: 0, SSS: 0 },\r\n    sumAccuracy: 0,\r\n    rankingHistory: [],\r\n    ratingHistory: [],\r\n    lastPlace: null,\r\n    lastBattleDate: 0,\r\n    region: players[id].region,\r\n  };\r\n  profiles[id].achievements = _.flow(\r\n    _.keys,\r\n    _.map((achName) => [\r\n      achName,\r\n      { ...(achievements[achName].initialState || initialAchievementState) },\r\n    ]),\r\n    _.fromPairs\r\n  )(achievements);\r\n  profiles[id].exp = 0;\r\n};\r\n\r\nconst getProfileInfoFromResult = (result, chart, profiles) => {\r\n  const profile = profiles[result.playerId];\r\n\r\n  profile.count++;\r\n  if (result.accuracy) {\r\n    profile.countAcc++;\r\n    profile.sumAccuracy += result.accuracy;\r\n  }\r\n  profile.grades[result.grade.replace('+', '')]++;\r\n  if (chart.chartType !== 'COOP' && result.isBestGradeOnChart) {\r\n    profile.resultsByGrade[result.grade] = [\r\n      ...(profile.resultsByGrade[result.grade] || []),\r\n      { result, chart },\r\n    ];\r\n    profile.resultsByLevel[chart.chartLevel] = [\r\n      ...(profile.resultsByLevel[chart.chartLevel] || []),\r\n      { result, chart },\r\n    ];\r\n  }\r\n  if (result.isExactDate && profile.lastResultDate < result.dateObject) {\r\n    profile.lastResultDate = result.dateObject;\r\n  }\r\n  profile.achievements = _.mapValues.convert({ cap: false })((achState, achName) => {\r\n    return achievements[achName].resultFunction(result, chart, achState, profile);\r\n  }, profile.achievements);\r\n  profile.exp += getExp(result, chart);\r\n};\r\n\r\nconst processData = (data, tracklist) => {\r\n  const { players, results, shared_charts } = data;\r\n  //// Initialization\r\n  // Init for TOP\r\n  const mappedResults = [];\r\n  const getTopResultId = (result) => `${result.sharedChartId}-${result.playerId}-${result.isRank}`;\r\n  const getBestGradeResultId = (result) => `${result.sharedChartId}-${result.playerId}`;\r\n  const topResults = {}; // Temp object\r\n  const bestGradeResults = {}; // Temp object\r\n  const top = {}; // Main top scores pbject\r\n\r\n  // Battles for ELO calculation\r\n  const battles = [];\r\n\r\n  // Profiles for every player\r\n  let profiles = {};\r\n\r\n  // Loop 1\r\n  for (let resRaw of results) {\r\n    if (!players[resRaw.player]) {\r\n      // Player of this result was not found in list of players. Ignoring this result like it doesn't exist\r\n      continue;\r\n    }\r\n\r\n    const sharedChartId = resRaw.shared_chart;\r\n    // Initialize Song\r\n    if (!top[sharedChartId]) {\r\n      const sharedChart = shared_charts[sharedChartId];\r\n      const label = _.toUpper(sharedChart.chart_label);\r\n      const [chartType, chartLevel] = label.match(/(\\D+)|(\\d+)/g);\r\n      top[sharedChartId] = {\r\n        song: sharedChart.track_name,\r\n        chartLabel: label,\r\n        chartLevel,\r\n        chartType,\r\n        duration: sharedChart.duration,\r\n        sharedChartId: sharedChartId,\r\n        maxTotalSteps: sharedChart.max_total_steps,\r\n        results: [],\r\n        allResultsIds: [],\r\n      };\r\n    }\r\n\r\n    // Getting current chart and result (mapped)\r\n    const chartTop = top[sharedChartId];\r\n    const result = mapResult(resRaw, players, chartTop);\r\n    mappedResults.push(result);\r\n\r\n    // Inserting result into TOP\r\n    const topResultId = getTopResultId(result);\r\n    const currentTopResult = topResults[topResultId];\r\n    if (!currentTopResult || currentTopResult.score < result.score) {\r\n      if (currentTopResult) {\r\n        const oldScoreIndex = chartTop.results.indexOf(currentTopResult);\r\n        if (oldScoreIndex !== -1) {\r\n          chartTop.results.splice(oldScoreIndex, 1);\r\n        }\r\n      }\r\n      const newScoreIndex = _.sortedLastIndexBy((r) => -r.score, result, chartTop.results);\r\n      if (!result.isUnknownPlayer || newScoreIndex === 0) {\r\n        chartTop.results.splice(newScoreIndex, 0, result);\r\n        chartTop.latestScoreDate = result.date;\r\n        chartTop.allResultsIds.push(result.playerId);\r\n        topResults[topResultId] = result;\r\n      }\r\n      if (!result.isUnknownPlayer) {\r\n        chartTop.results.forEach((enemyResult) => {\r\n          if (\r\n            !enemyResult.isUnknownPlayer &&\r\n            enemyResult.isRank === result.isRank &&\r\n            enemyResult.playerId !== result.playerId &&\r\n            result.score &&\r\n            enemyResult.score\r\n          ) {\r\n            battles.push([result, enemyResult, chartTop]);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    // Getting best grade of player on this chart\r\n    if (!result.isIntermediateResult) {\r\n      const bestGradeResultId = getBestGradeResultId(result);\r\n      const currentBestGradeRes = bestGradeResults[bestGradeResultId];\r\n      if (\r\n        !currentBestGradeRes ||\r\n        gradeComparator[currentBestGradeRes.grade] <= gradeComparator[result.grade]\r\n      ) {\r\n        // Using <= here, so newer scores always win and rewrite old scores\r\n        currentBestGradeRes && (currentBestGradeRes.isBestGradeOnChart = false);\r\n        result.isBestGradeOnChart = true;\r\n        bestGradeResults[bestGradeResultId] = result;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Loop 2, when the TOP is already set up\r\n  for (let chartId in top) {\r\n    const chart = top[chartId];\r\n    chart.maxScore = null;\r\n    for (let result of chart.results) {\r\n      if (!result.isRank) {\r\n        if (result.accuracy) {\r\n          const maxScoreCandidate = getMaxRawScore(result, chart);\r\n          if (chart.maxScore < maxScoreCandidate) {\r\n            chart.maxScore = maxScoreCandidate;\r\n          }\r\n        } else if (chart.maxScore && chart.maxScore < result.score) {\r\n          chart.maxScore = result.score;\r\n        }\r\n      }\r\n      // Getting some info about players\r\n      if (!result.isUnknownPlayer && !result.isIntermediateResult) {\r\n        if (!profiles[result.playerId]) {\r\n          initializeProfile(result, profiles, players);\r\n        }\r\n        getProfileInfoFromResult(result, chart, profiles);\r\n      }\r\n    }\r\n  }\r\n\r\n  return { mappedResults, profiles, sharedCharts: top, battles };\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case STOP_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: initialState.data,\r\n        players: initialState.players,\r\n        profiles: initialState.profiles,\r\n        results: initialState.results,\r\n        sharedCharts: initialState.sharedCharts,\r\n        scoreInfo: {},\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isLoadingRanking: true,\r\n        data: action.data,\r\n        players: action.players,\r\n        profiles: action.profiles,\r\n        results: action.results,\r\n        sharedCharts: action.sharedCharts,\r\n        originalData: action.originalData,\r\n        scoreInfo: {},\r\n      };\r\n    case PROFILES_UPDATE:\r\n      return {\r\n        ...state,\r\n        isLoadingRanking: false,\r\n        profiles: action.profiles,\r\n        resultInfo: action.resultInfo,\r\n        sharedCharts: action.sharedCharts,\r\n        data: _.values(action.sharedCharts),\r\n      };\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    case RANKING_CHANGE_SET:\r\n      const hasPrevList = !_.isEmpty(action.listPrev);\r\n      return {\r\n        ...state,\r\n        profiles: _.mapValues((playerOriginal) => {\r\n          const player = {\r\n            ...playerOriginal,\r\n            prevRating: _.get(playerOriginal.id, action.rankingsPointsMap),\r\n          };\r\n          if (!hasPrevList) {\r\n            return player; // First time opening this thing and we didn't have any previous data\r\n          }\r\n          if (!_.includes(player.id, action.listPrev)) {\r\n            return { ...player, change: 'NEW' };\r\n          } else if (!_.includes(player.id, action.listNow)) {\r\n            // Should NEVER happen, idk if this is possible\r\n            return { ...player, change: '?' };\r\n          } else {\r\n            return {\r\n              ...player,\r\n              change: _.indexOf(player.id, action.listPrev) - _.indexOf(player.id, action.listNow),\r\n            };\r\n          }\r\n        }, state.profiles),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchResults = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        fetchJson({\r\n          url: `${HOST}/${highscoresUrl}`,\r\n        })\r\n      );\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n      // HACKS for test\r\n      // data.results = _.dropRight(500, data.results);\r\n      // data.results = _.dropRight(9500, data.results);\r\n      // console.log(1, data.results);\r\n      // data.results = _.filter((res) => res.gained < '2020-07-05 00:00:00', data.results);\r\n      // data.results = _.filter(res => res.gained < '2020-03-12 16:55:00', data.results);\r\n      // data.results = _.filter(res => res.gained < '2020-03-12 16:34:51', data.results);\r\n      // console.log(2, data.results);\r\n\r\n      dispatch(processResultsData(data));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const appendNewResults = (lastDate) => {\r\n  return async (dispatch, getState) => {\r\n    const { originalData, sharedCharts } = getState().results;\r\n    if (!lastDate) {\r\n      return dispatch(fetchResults());\r\n    }\r\n\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        fetchJson({\r\n          url: `${HOST}/${highscoresUrl}?${queryString.stringify({ start_date: lastDate })}`,\r\n        })\r\n      );\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n\r\n      const appendedResults = _.filter((result) => {\r\n        const currentResults = sharedCharts[result.shared_chart];\r\n        if (!currentResults) {\r\n          return true;\r\n        }\r\n        const oldResult = _.find(\r\n          (old) =>\r\n            old.id === result.id ||\r\n            (old.playerId === result.player && old.isRank === !!result.rank_mode),\r\n          currentResults.results\r\n        );\r\n        if (!oldResult) {\r\n          if (result.player === 1 && currentResults.results[0].score > result.score) {\r\n            return false;\r\n          }\r\n          return true;\r\n        }\r\n        if (oldResult.id === result.id || oldResult.score >= result.score) {\r\n          return false;\r\n        }\r\n        return true;\r\n      }, data.results);\r\n\r\n      console.log('Received results:', data, '; Will append:', appendedResults);\r\n\r\n      if (!_.isEmpty(appendedResults)) {\r\n        const mergedData = {\r\n          players: data.players,\r\n          results: [...originalData.results, ...appendedResults],\r\n          shared_charts: { ...originalData.shared_charts, ...data.shared_charts },\r\n        };\r\n        dispatch(processResultsData(mergedData));\r\n      } else {\r\n        dispatch({ type: STOP_LOADING });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: ERROR, error });\r\n    }\r\n  };\r\n};\r\n\r\nconst processResultsData = (data) => {\r\n  return async (dispatch, getState) => {\r\n    const { tracklist } = getState();\r\n    const { sharedCharts, mappedResults, profiles, battles } = processData(data, tracklist);\r\n\r\n    dispatch({\r\n      type: SUCCESS,\r\n      data: _.values(sharedCharts),\r\n      players: _.flow(\r\n        _.toPairs,\r\n        _.map(([id, player]) => ({ ...player, id: _.toInteger(id) }))\r\n      )(data.players),\r\n      results: mappedResults,\r\n      profiles,\r\n      sharedCharts,\r\n      originalData: data,\r\n    });\r\n\r\n    // Parallelized calculation of ELO and profile data\r\n    const input = { sharedCharts, profiles, tracklist, battles, debug: DEBUG };\r\n    let promise, worker;\r\n    if (window.Worker) {\r\n      worker = new WorkerProfilesProcessing();\r\n      promise = worker.getProcessedProfiles(input);\r\n    } else {\r\n      promise = new Promise((res) => res(profilesProcessing.getProcessedProfiles(input)));\r\n    }\r\n\r\n    const output = await promise;\r\n    DEBUG && console.log(output.logText);\r\n    DEBUG &&\r\n      console.log(\r\n        'Processed profiles:',\r\n        Object.values(output.profiles)\r\n          .filter((q) => q.pp)\r\n          .sort((a, b) => b.pp.pp - a.pp.pp)\r\n      );\r\n    // console.log(output.sharedCharts);\r\n    // let byLevel = _.groupBy((ch) => ch.chartLevel, _.values(output.sharedCharts));\r\n    // function getSD(array) {\r\n    //   const n = array.length;\r\n    //   const mean = array.reduce((a, b) => a + b) / n;\r\n    //   return Math.sqrt(array.map((x) => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / n);\r\n    // }\r\n    // byLevel = _.mapValues((charts) => {\r\n    //   return {\r\n    //     avgLevel: _.meanBy((ch) => ch.interpolatedDifficulty || Number(ch.chartLevel), charts),\r\n    //     deviation: getSD(charts.map((ch) => ch.interpolatedDifficulty || Number(ch.chartLevel))),\r\n    //     charts,\r\n    //   };\r\n    // }, byLevel);\r\n    // console.log(byLevel);\r\n    // console.log(\r\n    //   _.values(byLevel)\r\n    //     .map((q) => `${q.avgLevel}\\t${q.deviation}`)\r\n    //     .join('\\n')\r\n    // );\r\n    dispatch({\r\n      type: PROFILES_UPDATE,\r\n      ...output,\r\n    });\r\n    dispatch(calculateRankingChanges(output.profiles));\r\n    if (worker) worker.terminate();\r\n  };\r\n};\r\n\r\nexport const setFilter = (filter) => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\n\r\nexport const resetFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n\r\nconst getListOfNames = _.map('id');\r\nconst getMapOfRatings = _.flow(\r\n  _.map((q) => [q.id, q.rating]),\r\n  _.fromPairs\r\n);\r\n\r\nexport const calculateRankingChanges = (profiles) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const ranking = _.orderBy('ratingRaw', 'desc', _.values(profiles));\r\n      const [lastChangedRanking, lastChangedRankingPoints, lastFetchedRanking] = await Promise.all([\r\n        localForage.getItem('lastChangedRanking_v3'),\r\n        localForage.getItem('lastChangedRankingPoints_v3'),\r\n        localForage.getItem('lastFetchedRanking_v3'),\r\n      ]);\r\n      const listNow = getListOfNames(ranking);\r\n      const listLastFetched = getListOfNames(lastFetchedRanking);\r\n      const listLastChanged = getListOfNames(lastChangedRanking);\r\n      const mapPointsNow = getMapOfRatings(ranking);\r\n      const mapPointsLastFetched = getMapOfRatings(lastFetchedRanking);\r\n      const mapPointsLastChanged = getMapOfRatings(lastChangedRankingPoints);\r\n\r\n      let rankingsPointsMap = mapPointsLastChanged;\r\n      // console.log(listNow, listLastFetched, listLastChanged);\r\n      // console.log(mapPointsNow, mapPointsLastFetched, mapPointsLastChanged);\r\n      if (!_.isEqual(mapPointsNow, mapPointsLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRankingPoints_v3', lastFetchedRanking);\r\n        rankingsPointsMap = mapPointsLastFetched;\r\n      }\r\n      let listPrev = listLastChanged;\r\n      if (!_.isEqual(listNow, listLastFetched)) {\r\n        // Between this fetch and last fetch there was a CHANGE in ranking\r\n        localForage.setItem('lastChangedRanking_v3', lastFetchedRanking);\r\n        listPrev = listLastFetched;\r\n      }\r\n      dispatch({\r\n        type: RANKING_CHANGE_SET,\r\n        listNow,\r\n        listPrev,\r\n        rankingsPointsMap,\r\n      });\r\n      localForage.setItem('lastFetchedRanking_v3', ranking);\r\n    } catch (error) {\r\n      console.warn('Cannot get ranking from local storage', error);\r\n    }\r\n  };\r\n};\r\n","import _ from 'lodash/fp';\r\nimport localForage from 'localforage';\r\n\r\nimport { setFilter } from 'reducers/results';\r\n\r\nconst SELECT_PRESET = `PRESETS/SELECT_PRESET`;\r\nconst LOAD_PRESETS = `PRESETS/LOAD_PRESETS`;\r\nconst LOADING_START = `PRESETS/LOADING_START`;\r\nconst LOADING_END = `PRESETS/LOADING_END`;\r\n\r\nconst initialState = {\r\n  presets: [],\r\n  currentPreset: null,\r\n  isLoading: false,\r\n};\r\n\r\nconst itemToOption = item =>\r\n  item && {\r\n    ...item,\r\n    label: item.name,\r\n    value: item.name,\r\n  };\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_PRESETS:\r\n      const currentPreset = _.find({ name: _.get('name', state.currentPreset) }, action.presets);\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(currentPreset) || null,\r\n        presets: _.map(itemToOption, action.presets),\r\n      };\r\n    case SELECT_PRESET:\r\n      return {\r\n        ...state,\r\n        currentPreset: itemToOption(action.currentPreset),\r\n      };\r\n    case LOADING_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case LOADING_END:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst reloadPresets = presets => ({ type: LOAD_PRESETS, presets: presets || [] });\r\n\r\nconst startLoading = () => ({\r\n  type: LOADING_START,\r\n});\r\n\r\nconst endLoading = () => ({\r\n  type: LOADING_END,\r\n});\r\n\r\nexport const selectPreset = currentPreset => ({\r\n  type: SELECT_PRESET,\r\n  currentPreset,\r\n});\r\n\r\nexport const loadPresets = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    dispatch(reloadPresets(presets));\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const savePreset = name => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const { filter } = getState().top;\r\n    const newPreset = { name, filter };\r\n    if (!_.some({ name }, presets)) {\r\n      const newPresets = [...(presets || []), newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      dispatch(selectPreset(newPreset));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    } else if (window.confirm('Preset with this name already exists, replace it?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      const newPresets = [...withoutOldPreset, newPreset];\r\n      dispatch(reloadPresets(newPresets));\r\n      localForage.setItem('filterPresets', newPresets);\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const openPreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const currentPreset = getState().presets.currentPreset;\r\n  const name = _.get('name', currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = name && _.find({ name }, presets);\r\n    if (preset) {\r\n      dispatch(selectPreset(currentPreset));\r\n      dispatch(setFilter(currentPreset.filter));\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n\r\nexport const deletePreset = () => (dispatch, getState) => {\r\n  dispatch(startLoading());\r\n  const name = _.get('name', getState().presets.currentPreset);\r\n  return localForage.getItem('filterPresets').then(presets => {\r\n    const preset = _.find({ name }, presets);\r\n    if (preset && window.confirm('Are you sure you want to delete selected preset?')) {\r\n      const withoutOldPreset = _.remove({ name }, presets);\r\n      dispatch(reloadPresets(withoutOldPreset));\r\n      localForage.setItem('filterPresets', withoutOldPreset);\r\n    } else {\r\n      // Preset not found for some reason, update list\r\n      dispatch(reloadPresets(presets));\r\n    }\r\n    dispatch(endLoading());\r\n  });\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaLayerGroup, FaFolderOpen, FaSave, FaPlus, FaTrashAlt } from 'react-icons/fa';\r\nimport Select from 'react-select';\r\n\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\nimport Input from 'components/Shared/Input/Input';\r\n\r\nimport { loadPresets, savePreset, selectPreset, openPreset, deletePreset } from 'reducers/presets';\r\n\r\nconst overlayItem = (\r\n  <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n    <FaLayerGroup />\r\n    пресеты\r\n  </button>\r\n);\r\n\r\nconst noPresetsMessage = () => 'пусто';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ...state.presets,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  loadPresets,\r\n  savePreset,\r\n  openPreset,\r\n  deletePreset,\r\n  selectPreset,\r\n};\r\n\r\nclass PresetsControl extends React.Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    this.props.loadPresets();\r\n  }\r\n\r\n  onChangeSelection = selected => {\r\n    this.props.selectPreset(selected.name);\r\n  };\r\n\r\n  onRewritePreset = () => {\r\n    const { currentPreset } = this.props;\r\n    this.props.savePreset(currentPreset.name);\r\n  };\r\n\r\n  onSavePreset = () => {\r\n    const { name } = this.state;\r\n    this.props.savePreset(name);\r\n    this.setState({ isAddingNew: false });\r\n  };\r\n\r\n  render() {\r\n    const { presets, currentPreset, isLoading } = this.props;\r\n    const { name, isAddingNew } = this.state;\r\n    return (\r\n      <div>\r\n        <Overlay overlayItem={overlayItem}>\r\n          <div className=\"presets-control-overlay\">\r\n            <Select\r\n              className=\"select _margin-bottom\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"пресеты...\"\r\n              options={presets}\r\n              value={currentPreset}\r\n              onChange={this.props.selectPreset}\r\n              noOptionsMessage={noPresetsMessage}\r\n            />\r\n            {currentPreset && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.props.openPreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaFolderOpen /> открыть\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                  onClick={this.onRewritePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaSave /> перезаписать\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon\"\r\n                  onClick={this.props.deletePreset}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaTrashAlt /> удалить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {!isAddingNew && (\r\n              <div className=\"buttons-presets _margin-bottom\">\r\n                <div className=\"_flex-fill\" />\r\n\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left _self-align-end\"\r\n                  onClick={() => this.setState({ isAddingNew: true })}\r\n                  disabled={isLoading}\r\n                >\r\n                  <FaPlus /> добавить\r\n                </button>\r\n              </div>\r\n            )}\r\n            {isAddingNew && (\r\n              <div className=\"adding-new _margin-bottom\">\r\n                <Input\r\n                  value={name}\r\n                  placeholder=\"имя пресета...\"\r\n                  className=\"form-control\"\r\n                  onChange={name => this.setState({ name })}\r\n                />\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={this.onSavePreset}\r\n                  disabled={!name || isLoading}\r\n                >\r\n                  <FaSave /> сохранить\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\r\n                  onClick={() => this.setState({ isAddingNew: false })}\r\n                  disabled={isLoading}\r\n                >\r\n                  отмена\r\n                </button>\r\n              </div>\r\n            )}\r\n            {/* <div>\r\n              <Toggle\r\n                checked={false}\r\n                onToggle={active => {\r\n                  localForage.setItem('showTabs', active);\r\n                }}\r\n              >\r\n                показывать табы с пресетами\r\n              </Toggle>\r\n            </div> */}\r\n          </div>\r\n        </Overlay>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PresetsControl);\r\n","import React from 'react';\r\n\r\nconst Flag = ({ region }) => {\r\n  return (\r\n    <div\r\n      className=\"flag-img\"\r\n      style={{\r\n        backgroundImage: `url(https://osu.ppy.sh/images/flags/${region}.png)`,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Flag;\r\n","import { useState, useEffect, useMemo, useCallback, useRef } from 'react';\r\nimport _ from 'lodash/fp';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { convenient } from 'javascript-time-ago/gradation';\r\nimport moment from 'moment';\r\n\r\nTimeAgo.addLocale(ru);\r\nconst timeAgo = new TimeAgo('ru-RU');\r\nconst timeStyle = {\r\n  flavour: 'short',\r\n  gradation: convenient,\r\n  units: ['day', 'week', 'month'],\r\n};\r\nexport const getTimeAgo = (date) => {\r\n  const dayDiff = moment().startOf('day').diff(moment(date).startOf('day'), 'days');\r\n  return dayDiff === 0\r\n    ? 'сегодня'\r\n    : dayDiff === 1\r\n    ? 'вчера'\r\n    : timeAgo.format(date, timeStyle).replace('назад', '');\r\n};\r\n\r\nexport const preprocessData = (data) => ({\r\n  ...data,\r\n  results: _.flow(\r\n    _.get('results'),\r\n    _.toPairs,\r\n    _.map(([chartId, item]) => {\r\n      const fullRes = _.find(\r\n        (r) => _.every(_.isNumber, [r.perfects, r.greats, r.goods, r.bads, r.misses]),\r\n        item.results\r\n      );\r\n      const stepSum =\r\n        fullRes &&\r\n        [fullRes.perfects, fullRes.greats, fullRes.goods, fullRes.bads, fullRes.misses].reduce(\r\n          (sum, n) => sum + n,\r\n          0\r\n        );\r\n\r\n      const [chartType, chartLevel] = item.chart_label.match(/(\\D+)|(\\d+)/g);\r\n\r\n      return {\r\n        song: item.track,\r\n        sharedChartId: _.toNumber(chartId),\r\n        chartLabel: item.chart_label,\r\n        chartLevel,\r\n        chartType,\r\n        mix: item.mix,\r\n        duration: item.duration,\r\n        results: item.results.map((res, index) => {\r\n          let resultInfoOverrides = {};\r\n          if (stepSum) {\r\n            const infos = [res.perfects, res.greats, res.goods, res.bads, res.misses];\r\n            let fixableIndex = -1;\r\n            let localStepSum = 0;\r\n            const canFix =\r\n              infos.filter((numb, index) => {\r\n                if (!_.isNumber(numb)) {\r\n                  fixableIndex = index;\r\n                  return true;\r\n                }\r\n                localStepSum += numb;\r\n                return false;\r\n              }).length === 1;\r\n            if (canFix) {\r\n              resultInfoOverrides[['perfect', 'great', 'good', 'bad', 'miss'][fixableIndex]] =\r\n                stepSum - localStepSum;\r\n            }\r\n          }\r\n          return {\r\n            id: res.id,\r\n            playerId: res.player,\r\n            nickname: data.players[res.player].nickname,\r\n            nicknameArcade: data.players[res.player].arcade_name,\r\n            originalChartMix: res.originalChartMix,\r\n            originalChartLabel: res.originalChartLabel,\r\n            originalScore: res.originalScore,\r\n            date: res.gained,\r\n            dateObject: new Date(res.gained),\r\n            grade: res.grade,\r\n            isExactDate: !!res.exact_gain_date,\r\n            score: res.score,\r\n            scoreIncrease: res.score_increase,\r\n            calories: res.calories && res.calories / 1000,\r\n            perfect: res.perfects,\r\n            great: res.greats,\r\n            good: res.goods,\r\n            bad: res.bads,\r\n            miss: res.misses,\r\n            combo: res.max_combo,\r\n            mods: res.mods_list,\r\n            isRank: !!res.rank_mode,\r\n            isHJ: (res.mods_list || '').split(' ').includes('HJ'),\r\n            ...resultInfoOverrides,\r\n          };\r\n        }),\r\n      };\r\n    }),\r\n    _.map((song) => {\r\n      return {\r\n        ...song,\r\n        latestScoreDate: song.results.reduce(\r\n          (latest, current) => (current.date > latest ? current.date : latest),\r\n          song.results[0].date\r\n        ),\r\n        results: song.results.map((res) => {\r\n          const perfects = (Math.sqrt(res.perfect) * _.toInteger(song.chartLevel)) / 2;\r\n          const acc = perfects\r\n            ? Math.floor(\r\n                ((perfects * 100 + res.great * 60 + res.good * 30 + res.miss * -20) /\r\n                  (perfects + res.great + res.good + res.bad + res.miss)) *\r\n                  100\r\n              ) / 100\r\n            : null;\r\n          const accRaw = res.perfect\r\n            ? Math.floor(\r\n                ((res.perfect * 100 + res.great * 60 + res.good * 30 + res.miss * -20) /\r\n                  (res.perfect + res.great + res.good + res.bad + res.miss)) *\r\n                  100\r\n              ) / 100\r\n            : null;\r\n          return {\r\n            ...res,\r\n            accuracy: acc < 0 ? 0 : accRaw === 100 ? 100 : acc && +acc.toFixed(2),\r\n            accuracyRaw: accRaw,\r\n            hasRankScore: _.some({ playerId: res.playerId, isRank: true }, song.results),\r\n          };\r\n        }),\r\n      };\r\n    }),\r\n    _.orderBy(['latestScoreDate', 'song', 'chartLevel'], ['desc', 'asc', 'desc'])\r\n  )(data),\r\n});\r\n\r\nexport const useTrackedEx = ({\r\n  data,\r\n  resetData,\r\n  onChange = _.noop,\r\n  isDataValid = _.identity,\r\n  isDebugOn = false,\r\n}) => {\r\n  const [prevData, setPrevData] = useState(data);\r\n  const [currData, setCurrData] = useState(data);\r\n  const resetIndicator = useRef(resetData);\r\n\r\n  useEffect(() => {\r\n    // isDebugOn && console.log('tracking effect', resetIndicatorData, data, currData, prevData);\r\n    if (resetIndicator.current !== resetData) {\r\n      // isDebugOn && console.log('resetting due to indicator chage', data);\r\n      resetIndicator.current = resetData;\r\n      setPrevData(data);\r\n      setCurrData(data);\r\n    } else if (isDataValid(data) && !_.isEqual(data, currData)) {\r\n      // isDebugOn && console.log('data has updated', data, currData);\r\n      setPrevData(currData);\r\n      setCurrData(data);\r\n      onChange(currData, data);\r\n    }\r\n  }, [data, onChange, currData, prevData, resetData, isDataValid]);\r\n\r\n  const reset = useCallback(() => {\r\n    // isDebugOn && console.log('reset called from function');\r\n    setPrevData(data);\r\n    setCurrData(data);\r\n  }, [data]);\r\n\r\n  return useMemo(() => [currData, prevData, reset], [currData, prevData, reset]);\r\n};\r\n\r\nexport const useTracked = (data, resetIndicatorData, onChange = _.noop, isDebugOn) => {\r\n  const [prevData, setPrevData] = useState(data);\r\n  const [currData, setCurrData] = useState(data);\r\n  const resetIndicator = useRef(resetIndicatorData);\r\n\r\n  useEffect(() => {\r\n    // isDebugOn && console.log('tracking effect', resetIndicatorData, data, currData, prevData);\r\n    if (resetIndicator.current !== resetIndicatorData) {\r\n      // isDebugOn && console.log('resetting due to indicator chage', data);\r\n      resetIndicator.current = resetIndicatorData;\r\n      setPrevData(data);\r\n      setCurrData(data);\r\n    } else if (data && !_.isEqual(data, currData)) {\r\n      // isDebugOn && console.log('data has updated', data, currData);\r\n      setPrevData(currData);\r\n      setCurrData(data);\r\n      onChange(currData, data);\r\n    }\r\n  }, [data, onChange, currData, prevData, resetIndicatorData]);\r\n\r\n  const reset = useCallback(() => {\r\n    // isDebugOn && console.log('reset called from function');\r\n    setPrevData(data);\r\n    setCurrData(data);\r\n  }, [data]);\r\n\r\n  return useMemo(() => [currData, prevData, reset], [currData, prevData, reset]);\r\n};\r\n\r\nexport const useResetTrackedObject = (object) => {\r\n  return useCallback(() => {\r\n    const trackings = _.values(object);\r\n    trackings.forEach((tracking) => tracking[2]());\r\n  }, [object]);\r\n};\r\n","export const colorsArray = [\r\n  '#4DB3FF',\r\n  '#80B300',\r\n  '#FF6655',\r\n  '#FF99E6',\r\n  '#33FFCC',\r\n  '#e633c8',\r\n  '#dbe812',\r\n  '#FF1A66',\r\n  '#991AFF',\r\n  '#E6B333',\r\n  '#1AB399',\r\n  '#4D8066',\r\n  '#CC9999',\r\n  '#00E680',\r\n  '#809980',\r\n  '#E6FF80',\r\n  '#1AFF33',\r\n  '#999933',\r\n  '#E6331A',\r\n  '#CCCC00',\r\n  '#66E64D',\r\n  '#4D80CC',\r\n  '#9900B3',\r\n  '#4DB380',\r\n  '#FF4D4D',\r\n];\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport _ from 'lodash/fp';\r\nimport classNames from 'classnames';\r\nimport numeral from 'numeral';\r\nimport { FaExclamationTriangle, FaAngleDoubleUp } from 'react-icons/fa';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\n\r\nimport { routes } from 'constants/routes';\r\nimport { DEBUG } from 'constants/env';\r\n\r\nimport Flag from 'components/Shared/Flag';\r\nimport Overlay from 'components/Shared/Overlay/Overlay';\r\n\r\nimport { getTimeAgo as getShortTimeAgo } from 'components/SocketTracker/helpers';\r\n\r\nimport { tooltipFormatter } from 'utils/leaderboards';\r\nimport { getExp } from 'utils/exp';\r\nimport { colorsArray } from 'utils/colors';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    resultInfo: state.results.resultInfo,\r\n    profiles: state.results.profiles,\r\n  };\r\n};\r\n\r\nconst Result = (\r\n  {\r\n    // shared\r\n    res,\r\n    chart,\r\n    resultInfo,\r\n    profiles,\r\n    placeDifference,\r\n    // leaderboard\r\n    showProtagonistEloChange = false,\r\n    showProtagonistPpChange = false,\r\n    protagonistName = null,\r\n    uniqueSelectedNames = [],\r\n    // socket\r\n    leftProfile = {},\r\n    rightProfile = {},\r\n    isSocketView = false,\r\n  },\r\n  ref\r\n) => {\r\n  const inf = resultInfo[res.id] || {};\r\n\r\n  // Rating info for nickname column:\r\n  let ratingInfoBlock = null;\r\n  if (DEBUG) {\r\n    // In debug mode we show all info\r\n    ratingInfoBlock = (\r\n      <>\r\n        <span className=\"debug-elo-info\">\r\n          {' '}\r\n          {inf.startingRating && Math.round(inf.startingRating)}\r\n          {' / '}\r\n          {inf.ratingDiff > 0 ? '+' : ''}\r\n          {inf.ratingDiff && Math.round(inf.ratingDiff)}\r\n          {' / '}\r\n          {inf.pp && inf.pp.ppFixed}pp\r\n        </span>\r\n      </>\r\n    );\r\n  } else if (\r\n    res.nickname === protagonistName &&\r\n    (showProtagonistEloChange || showProtagonistPpChange)\r\n  ) {\r\n    // In non-debug mode we show relevant info for selected protagonist\r\n    ratingInfoBlock = (\r\n      <>\r\n        {' / '}\r\n        {showProtagonistEloChange && inf.ratingDiff && (\r\n          <span>{`${inf.ratingDiff > 0 ? '+' : ''}${Math.round(inf.ratingDiff)}`}</span>\r\n        )}\r\n        {showProtagonistPpChange && inf.pp && <span>{inf.pp.ppFixed}pp</span>}\r\n      </>\r\n    );\r\n  }\r\n\r\n  const flag = profiles[res.playerId] ? <Flag region={profiles[res.playerId].region} /> : null;\r\n\r\n  const nameIndex = uniqueSelectedNames.indexOf(res.nickname);\r\n\r\n  return (\r\n    <tr\r\n      key={res.id}\r\n      ref={ref}\r\n      className={classNames({\r\n        empty: !res.isExactDate,\r\n        latest: res.date === chart.latestScoreDate,\r\n        left: res.nickname === leftProfile.name,\r\n        right: res.nickname === rightProfile.name,\r\n      })}\r\n      style={\r\n        nameIndex > -1\r\n          ? {\r\n              background: colorsArray[nameIndex] + '3A',\r\n              outline: `1px solid ${colorsArray[nameIndex]}A0`,\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      {!isSocketView && (\r\n        <td className=\"place\">{res.isSecondOccurenceInResults ? '' : `#${res.topPlace}`}</td>\r\n      )}\r\n      <td className=\"nickname\" style={nameIndex > -1 ? { fontWeight: 'bold' } : {}}>\r\n        <div className=\"nickname-container\">\r\n          {flag}\r\n          <span className=\"nickname-text\">\r\n            {res.nickname}\r\n            {!!placeDifference && (\r\n              <span className=\"change-holder up\">\r\n                <span>{placeDifference}</span>\r\n                <FaAngleDoubleUp />\r\n              </span>\r\n            )}\r\n            {ratingInfoBlock}\r\n          </span>\r\n          {!isSocketView && (\r\n            <div className=\"mods-container\">\r\n              {isSocketView &&\r\n                res.mods &&\r\n                res.mods\r\n                  .split(' ')\r\n                  .filter((mod) => mod.includes('AV'))\r\n                  .map((avMod) => (\r\n                    <div className=\"mod av-mod\">\r\n                      <div className=\"av-text\">AV</div>\r\n                      <div className=\"av-number\">{avMod.replace('AV', '')}</div>\r\n                    </div>\r\n                  ))}\r\n              {isSocketView &&\r\n                res.mods &&\r\n                res.mods\r\n                  .split(' ')\r\n                  .filter((mod) => mod.endsWith('X'))\r\n                  .map((xMod) => (\r\n                    <div className=\"mod x-mod\">\r\n                      <div className=\"x-number\">{xMod}</div>\r\n                    </div>\r\n                  ))}\r\n              {res.isRank && <div className=\"mod vj\">{res.isExactDate ? 'R' : 'R?'}</div>}\r\n              {res.isHJ && <div className=\"mod hj\">HJ</div>}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </td>\r\n      <td className=\"score\">\r\n        <Overlay\r\n          overlayClassName=\"score-overlay-outer\"\r\n          overlayItem={\r\n            <span className=\"score-span\">\r\n              {res.scoreIncrease > res.score * 0.8 && '*'}\r\n              {numeral(res.score).format('0,0')}\r\n            </span>\r\n          }\r\n          placement=\"top\"\r\n        >\r\n          <div className=\"score-overlay\">\r\n            {DEBUG && (\r\n              <>\r\n                <div>\r\n                  <span className=\"_grey\">result id: </span>\r\n                  {res.id}\r\n                </div>\r\n                <div>\r\n                  <span className=\"_grey\">player id: </span>\r\n                  {res.playerId}\r\n                </div>\r\n              </>\r\n            )}\r\n            <div>\r\n              <span className=\"_grey\">игрок: </span>\r\n              <NavLink exact to={routes.profile.getPath({ id: res.playerId })}>\r\n                {res.nickname} ({res.nicknameArcade})\r\n              </NavLink>\r\n            </div>\r\n            {!!getExp(res, chart) && (\r\n              <div className=\"important\">\r\n                <span className=\"_grey\">опыт: </span>+{numeral(getExp(res, chart)).format('0,0')}\r\n              </div>\r\n            )}\r\n            {_.isNumber(inf.startingRating) && _.isNumber(inf.ratingDiff) && (\r\n              <div className=\"important\">\r\n                <span className=\"_grey\">эло: {inf.startingRating.toFixed(0)} </span>\r\n                {inf.ratingDiff >= 0 ? `+${inf.ratingDiff.toFixed(0)}` : inf.ratingDiff.toFixed(0)}\r\n              </div>\r\n            )}\r\n            {inf.pp && (\r\n              <div className=\"important\">\r\n                <span className=\"_grey\">pp: </span>\r\n                <span>{inf.pp.ppFixed}pp</span>\r\n              </div>\r\n            )}\r\n            {!res.isExactDate && (\r\n              <div className=\"warning\">\r\n                <FaExclamationTriangle />\r\n                рекорд взят с my best. часть данных недоступна\r\n              </div>\r\n            )}\r\n            {!!res.isExactDate && (\r\n              <>\r\n                {!!res.mods && (\r\n                  <div>\r\n                    <span className=\"_grey\">моды: </span>\r\n                    {res.mods}\r\n                  </div>\r\n                )}\r\n                {!!res.calories && (\r\n                  <div>\r\n                    <span className=\"_grey\">ккал: </span>\r\n                    {res.calories}\r\n                  </div>\r\n                )}\r\n                {!!res.scoreIncrease && (\r\n                  <div>\r\n                    <span className=\"_grey\">прирост: </span>+\r\n                    {numeral(res.scoreIncrease).format('0,0')}\r\n                  </div>\r\n                )}\r\n                {res.originalChartMix && (\r\n                  <div>\r\n                    <div className=\"warning\">\r\n                      <FaExclamationTriangle />\r\n                      было сыграно на {res.originalChartMix}\r\n                    </div>\r\n                    {res.originalChartLabel && (\r\n                      <div>\r\n                        <span className=\"_grey\">оригинальный чарт: </span>\r\n                        {res.originalChartLabel}\r\n                      </div>\r\n                    )}\r\n                    {res.originalScore && (\r\n                      <div>\r\n                        <span className=\"_grey\">оригинальный скор: </span>\r\n                        {res.originalScore}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                {res.scoreIncrease > res.score * 0.8 && '* сайтрид'}\r\n              </>\r\n            )}\r\n          </div>\r\n        </Overlay>\r\n      </td>\r\n      <td className=\"grade\">\r\n        <div className=\"img-holder\">\r\n          {res.grade && res.grade !== '?' && (\r\n            <img src={`${process.env.PUBLIC_URL}/grades/${res.grade}.png`} alt={res.grade} />\r\n          )}\r\n          {res.grade === '?' && null}\r\n        </div>\r\n      </td>\r\n      {isSocketView && (\r\n        <td\r\n          className={classNames('mods', {\r\n            vj: res.isRank,\r\n            hj: res.isHJ,\r\n          })}\r\n        >\r\n          <div className=\"mods-container\">\r\n            {isSocketView &&\r\n              res.mods &&\r\n              res.mods\r\n                .split(' ')\r\n                .filter((mod) => mod.includes('AV'))\r\n                .map((avMod) => (\r\n                  <div className=\"av-mod\">\r\n                    <div className=\"av-text\">AV</div>\r\n                    <div className=\"av-number\">{avMod.replace('AV', '')}</div>\r\n                  </div>\r\n                ))}\r\n            {isSocketView &&\r\n              res.mods &&\r\n              res.mods\r\n                .split(' ')\r\n                .filter((mod) => mod.endsWith('X'))\r\n                .map((xMod) => (\r\n                  <div className=\"x-mod\">\r\n                    <div className=\"x-number\">{xMod}</div>\r\n                  </div>\r\n                ))}\r\n            {res.isRank && <div className=\"inner\">{res.isExactDate ? 'R' : 'R?'}</div>}\r\n            {res.isHJ && <div className=\"inner\">HJ</div>}\r\n          </div>\r\n        </td>\r\n      )}\r\n      <td className=\"number miss\">{res.miss}</td>\r\n      <td className=\"number bad\">{res.bad}</td>\r\n      <td className=\"number good\">{res.good}</td>\r\n      <td className=\"number great\">{res.great}</td>\r\n      <td className=\"number perfect\">{res.perfect}</td>\r\n      <td className=\"combo\">\r\n        {res.combo}\r\n        {res.combo ? 'x' : ''}\r\n      </td>\r\n      <td className=\"accuracy\">\r\n        {res.accuracy === 100 ? 100 : res.accuracy ? res.accuracy.toFixed(2) : ''}\r\n        {res.accuracy ? '%' : ''}\r\n      </td>\r\n      <td\r\n        className={classNames('date', {\r\n          latest: res.date === chart.latestScoreDate,\r\n        })}\r\n      >\r\n        {isSocketView ? (\r\n          getShortTimeAgo(res.dateObject)\r\n        ) : (\r\n          <Tooltip content={tooltipFormatter(res)} tooltipClassName=\"pumpking-tooltip\">\r\n            {getShortTimeAgo(res.dateObject)}\r\n            {res.isExactDate ? '' : '?'}\r\n          </Tooltip>\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null, null, { forwardRef: true })(React.forwardRef(Result));\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport default ({ type, level }) => {\r\n  return (\r\n    <div\r\n      className={classNames('chart-name', {\r\n        single: type === 'S',\r\n        singlep: type === 'SP',\r\n        doublep: type === 'DP',\r\n        double: type === 'D',\r\n        coop: type === 'COOP',\r\n      })}\r\n    >\r\n      <span className=\"chart-letter\">{type}</span>\r\n      <span className=\"chart-number\">{level}</span>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash/fp';\r\nimport { FaYoutube, FaBackward, FaForward, FaGlobeAmericas } from 'react-icons/fa';\r\nimport classNames from 'classnames';\r\nimport FlipMove from 'react-flip-move';\r\nimport queryString from 'query-string';\r\n\r\nimport { DEBUG } from 'constants/env';\r\n\r\nimport Result from './Result';\r\nimport ChartLabel from './ChartLabel';\r\n\r\nconst ANIMATION_DURATION = 250;\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    allResults: state.results.results,\r\n    sharedCharts: state.results.sharedCharts,\r\n    playersHiddenStatus: props.playersHiddenStatus || state.preferences.data.playersHiddenStatus,\r\n  };\r\n};\r\n\r\nconst Chart = React.forwardRef(\r\n  (\r\n    {\r\n      allResults,\r\n      playersHiddenStatus = {},\r\n      sharedCharts = {},\r\n      // shared\r\n      chart: chartOriginal,\r\n      // leaderboards\r\n      showProtagonistEloChange = false,\r\n      showProtagonistPpChange = false,\r\n      uniqueSelectedNames = [],\r\n      protagonistName = null,\r\n      chartIndex,\r\n      // socket stuff\r\n      leftProfile = {},\r\n      rightProfile = {},\r\n      isSocketView = false,\r\n    },\r\n    ref\r\n  ) => {\r\n    const [overrides, setOverrides] = useState(null);\r\n    const [isHidingPlayers, setHidingPlayers] = useState(true);\r\n    const chart = _.first(overrides) || chartOriginal;\r\n    if (DEBUG) {\r\n      console.log(chart, overrides);\r\n    }\r\n\r\n    let topPlace = 1;\r\n    const occuredNicknames = [];\r\n    let hiddenPlayersCount = 0;\r\n    const results = chart.results.map((res, index) => {\r\n      const isPlayerHidden = isHidingPlayers && (playersHiddenStatus[res.playerId] || false);\r\n      const isSecondOccurenceInResults = occuredNicknames.includes(res.nickname);\r\n      occuredNicknames.push(res.nickname);\r\n      if (index === 0) {\r\n        topPlace = 1;\r\n      } else if (\r\n        !isSecondOccurenceInResults &&\r\n        res.score !== _.get([index - 1, 'score'], chart.results)\r\n      ) {\r\n        topPlace += 1;\r\n      }\r\n      if (isPlayerHidden) {\r\n        hiddenPlayersCount++;\r\n      }\r\n      return {\r\n        ...res,\r\n        topPlace,\r\n        isSecondOccurenceInResults,\r\n        isPlayerHidden,\r\n      };\r\n    });\r\n\r\n    const onRedoLatestResult = _.throttle(ANIMATION_DURATION + 10, (chart) => {\r\n      const newOverrides = _.drop(1, overrides);\r\n      setOverrides(_.size(newOverrides) === 1 ? null : newOverrides);\r\n    });\r\n\r\n    const onUndoLatestResult = _.throttle(ANIMATION_DURATION + 10, (chart) => {\r\n      if (_.isEmpty(results)) {\r\n        setOverrides(null);\r\n      }\r\n      const undoedResult = _.maxBy('date', results);\r\n      if (!undoedResult) return;\r\n\r\n      const undoedPlayerId = undoedResult.playerId;\r\n      const previousPlayerResult = _.findLast(\r\n        (res) =>\r\n          res.playerId === undoedPlayerId &&\r\n          res.sharedChartId === chart.sharedChartId &&\r\n          res.isRank === undoedResult.isRank &&\r\n          res.date < undoedResult.date,\r\n        allResults\r\n      );\r\n      const newResults = _.orderBy(\r\n        'score',\r\n        'desc',\r\n        _.compact(\r\n          _.map((res) => (res.id === undoedResult.id ? previousPlayerResult : res), results)\r\n        )\r\n      );\r\n      const latestScore = _.maxBy('date', newResults);\r\n      const overrideChart = {\r\n        ...chart,\r\n        latestScoreDate: latestScore && latestScore.date,\r\n        results: newResults,\r\n      };\r\n      if (_.isEmpty(newResults)) {\r\n        setOverrides(null);\r\n      } else {\r\n        setOverrides([overrideChart, ...(overrides || [chart])]);\r\n      }\r\n    });\r\n\r\n    const isActive = !_.isEmpty(overrides);\r\n    const totalResultsCount = _.countBy((id) => !playersHiddenStatus[id], chart.allResultsIds).true;\r\n    const currentIndex = isActive ? 1 + totalResultsCount - _.size(overrides) : totalResultsCount;\r\n    const canUndo = !(currentIndex === 1 && totalResultsCount === 1);\r\n\r\n    // TODO: remove check from sharedCharts when SocketTracker works off results data instead of topPerSong\r\n    const interpDiff =\r\n      chart.interpolatedDifficulty ||\r\n      _.get('interpolatedDifficulty', sharedCharts[chart.sharedChartId]);\r\n\r\n    return (\r\n      <div className=\"song-block\" ref={ref}>\r\n        <div className=\"song-name\">\r\n          <ChartLabel type={chart.chartType} level={chart.chartLevel} />\r\n          {isSocketView ? (\r\n            <div className=\"song-name-text\">\r\n              {interpDiff ? `(${interpDiff.toFixed(1)}) ` : ''}\r\n              {chart.song}\r\n            </div>\r\n          ) : (\r\n            <div className=\"song-name-text\">\r\n              {chart.song}{' '}\r\n              <span className=\"_grey-text\">({interpDiff && interpDiff.toFixed(1)})</span>\r\n            </div>\r\n          )}\r\n          {!isSocketView && (\r\n            <div className=\"youtube-link\">\r\n              <a\r\n                href={`https://youtube.com/results?${queryString.stringify({\r\n                  search_query: `${chart.song} ${chart.chartLabel}`.replace(/( -)|(- )/g, ' '),\r\n                })}`}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <FaYoutube />\r\n              </a>\r\n            </div>\r\n          )}\r\n          <div className=\"_flex-fill\" />\r\n          <div className=\"right-side-block\">\r\n            {hiddenPlayersCount > 0 && (\r\n              <div\r\n                className={classNames('players-hidden-count _grey-text', {\r\n                  '_on-hover': !isSocketView,\r\n                })}\r\n              >\r\n                скрыто: {hiddenPlayersCount}\r\n              </div>\r\n            )}\r\n            {(hiddenPlayersCount > 0 || !isHidingPlayers) && !isSocketView && (\r\n              <div\r\n                className=\"globe-icon _on-hover\"\r\n                onClick={() => setHidingPlayers(!isHidingPlayers)}\r\n              >\r\n                <FaGlobeAmericas />\r\n              </div>\r\n            )}\r\n            {!isSocketView && (\r\n              <div\r\n                className={classNames('undo-result-button _on-hover', {\r\n                  active: isActive,\r\n                })}\r\n              >\r\n                <FaBackward\r\n                  className={classNames('backward-btn', { disabled: !canUndo })}\r\n                  onClick={() => canUndo && onUndoLatestResult(chart)}\r\n                />\r\n                <span className=\"number\">\r\n                  {currentIndex}/{totalResultsCount}\r\n                </span>\r\n                <FaForward\r\n                  className={classNames('forward-btn', { disabled: !isActive })}\r\n                  onClick={() => isActive && onRedoLatestResult(chart)}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"charts\">\r\n          {!_.isEmpty(results) && (\r\n            <div className=\"chart\">\r\n              <div className=\"results\">\r\n                <table>\r\n                  {/* {chartIndex === 0 && (\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"place\"></th>\r\n                        <th className=\"nickname\"></th>\r\n                        <th className=\"judge\"></th>\r\n                        <th className=\"score\">score</th>\r\n                        <th className=\"grade\"></th>\r\n                        <th className=\"number\">miss</th>\r\n                        <th className=\"number\">bad</th>\r\n                        <th className=\"number\">good</th>\r\n                        <th className=\"number\">great</th>\r\n                        <th className=\"number\">perfect</th>\r\n                        <th className=\"combo\">combo</th>\r\n                        <th className=\"accuracy\">accuracy</th>\r\n                        <th className=\"date\"></th>\r\n                      </tr>\r\n                    </thead>\r\n                  )} */}\r\n                  <FlipMove\r\n                    enterAnimation=\"fade\"\r\n                    leaveAnimation=\"fade\"\r\n                    typeName=\"tbody\"\r\n                    maintainContainerHeight\r\n                    duration={ANIMATION_DURATION}\r\n                  >\r\n                    {results.map((res, index) => {\r\n                      const isProtagonist = res.nickname === protagonistName;\r\n                      if (\r\n                        (res.isPlayerHidden && !isProtagonist) ||\r\n                        (res.isUnknownPlayer && index !== 0)\r\n                      ) {\r\n                        return null;\r\n                      }\r\n\r\n                      let placeDifference, newIndex;\r\n                      if (res.scoreIncrease && res.date === chart.latestScoreDate) {\r\n                        const prevScore = res.score - res.scoreIncrease;\r\n                        newIndex = _.findLastIndex((res) => res.score > prevScore, results);\r\n                        placeDifference = newIndex - index;\r\n                      }\r\n\r\n                      return (\r\n                        <Result\r\n                          key={res.isRank + '_' + res.nickname}\r\n                          chart={chart}\r\n                          results={results}\r\n                          res={res}\r\n                          placeDifference={placeDifference}\r\n                          showProtagonistEloChange={showProtagonistEloChange}\r\n                          showProtagonistPpChange={showProtagonistPpChange}\r\n                          uniqueSelectedNames={uniqueSelectedNames}\r\n                          protagonistName={protagonistName}\r\n                          leftProfile={leftProfile}\r\n                          rightProfile={rightProfile}\r\n                          isSocketView={isSocketView}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </FlipMove>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default connect(mapStateToProps, null, null, { forwardRef: true })(Chart);\r\n","import _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport matchSorter from 'match-sorter';\r\n\r\nimport { SORT, CHART_MIN_MAX, DURATION_DEFAULT } from 'constants/leaderboard';\r\n\r\nexport const playersSelector = createSelector(\r\n  (state) => state.results.players,\r\n  (state) => state.user.data.player.id,\r\n  (players, playerId) =>\r\n    _.flow(\r\n      _.toPairs,\r\n      _.map(([, { nickname, arcade_name, id, region }]) => ({\r\n        label: `${nickname} (${arcade_name})`,\r\n        value: nickname,\r\n        isCurrentPlayer: playerId === id,\r\n      })),\r\n      _.sortBy((it) => (it.isCurrentPlayer ? '!' : _.toLower(it.label)))\r\n    )(players)\r\n);\r\n\r\nconst filterCharts = (filter, rows) => {\r\n  const range = _.getOr(CHART_MIN_MAX, 'range', filter);\r\n  const type = _.getOr(null, 'type', filter);\r\n  const duration = _.getOr(DURATION_DEFAULT, 'duration', filter);\r\n\r\n  return _.filter((row) => {\r\n    if (duration !== DURATION_DEFAULT && !duration.includes(row.duration)) {\r\n      return false;\r\n    }\r\n    return (\r\n      row.chartLevel >= range[0] &&\r\n      row.chartLevel <= range[1] &&\r\n      (!type || row.chartType.startsWith(type))\r\n    );\r\n  }, rows);\r\n};\r\n\r\nconst getFilteredData = (data, sharedCharts, filter, resultInfo = {}, preferences) => {\r\n  // const start = performance.now();\r\n  // const playersHiddenStatus = preferences.playersHiddenStatus;\r\n  const names = _.map('value', filter.players);\r\n  const namesOr = _.map('value', filter.playersOr);\r\n  const namesNot = _.map('value', filter.playersNot);\r\n  const sortingType = _.get('value', filter.sortingType);\r\n  const protagonist = [\r\n    SORT.PROTAGONIST,\r\n    SORT.RANK_ASC,\r\n    SORT.RANK_DESC,\r\n    SORT.PP_ASC,\r\n    SORT.PP_DESC,\r\n    SORT.NEW_SCORES_PLAYER,\r\n  ].includes(sortingType)\r\n    ? _.get('value', filter.protagonist)\r\n    : null;\r\n  const excludeAntagonists = _.map('value', filter.excludeAntagonists);\r\n\r\n  const defaultSorting = [_.orderBy(['latestScoreDate'], ['desc'])];\r\n  const newScoresProtagonistSorting = !protagonist\r\n    ? defaultSorting\r\n    : [\r\n        _.orderBy(\r\n          [\r\n            (song) =>\r\n              _.max(\r\n                _.map(\r\n                  (res) => (res.nickname === protagonist ? res.dateObject.getTime() : 0),\r\n                  song.results\r\n                )\r\n              ),\r\n          ],\r\n          ['desc']\r\n        ),\r\n      ];\r\n  const protagonistSorting = [\r\n    _.filter((row) => _.map('nickname', row.results).includes(protagonist)),\r\n    _.map((row) => {\r\n      const protIndex = _.findIndex({ nickname: protagonist }, row.results);\r\n      const protScore = row.results[protIndex].score;\r\n      const enemies = _.flow([\r\n        _.take(protIndex),\r\n        _.uniqBy('nickname'),\r\n        _.remove((res) => excludeAntagonists.includes(res.nickname) || res.score === protScore),\r\n      ])(row.results);\r\n      const distance = Math.sqrt(\r\n        _.reduce((dist, enemy) => dist + (enemy.score / protScore - 0.99) ** 2, 0, enemies)\r\n      );\r\n      return {\r\n        ...row,\r\n        distanceFromProtagonist: distance,\r\n      };\r\n    }),\r\n    _.orderBy(['distanceFromProtagonist'], ['desc']),\r\n  ];\r\n  const getPpSorting = (field, direction = 'desc') => [\r\n    _.filter((row) => _.map('nickname', row.results).includes(protagonist)),\r\n    _.orderBy(\r\n      [\r\n        (row) => {\r\n          const result = _.find({ nickname: protagonist }, row.results);\r\n          const info = resultInfo[result.id] || {};\r\n          return _.getOr(direction === 'desc' ? -Infinity : Infinity, field, info);\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const getEloSorting = (direction) => [\r\n    _.filter((row) => _.map('nickname', row.results).includes(protagonist)),\r\n    _.orderBy(\r\n      [\r\n        (row) => {\r\n          const score = _.find({ nickname: protagonist }, row.results);\r\n          const info = resultInfo[score.id];\r\n          return _.getOr(direction === 'asc' ? Infinity : -Infinity, 'ratingDiff', info);\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const getDiffSorting = (direction = 'desc') => [\r\n    _.orderBy(\r\n      [\r\n        (row) => {\r\n          const chartInfo = sharedCharts[row.sharedChartId];\r\n          return _.getOr(_.toNumber(row.chartLevel), 'interpolatedDifficulty', chartInfo);\r\n        },\r\n      ],\r\n      [direction]\r\n    ),\r\n  ];\r\n  const sortingFunctions =\r\n    {\r\n      [SORT.DEFAULT]: defaultSorting,\r\n      [SORT.NEW_SCORES_PLAYER]: newScoresProtagonistSorting,\r\n      [SORT.PROTAGONIST]: protagonistSorting,\r\n      [SORT.RANK_ASC]: getEloSorting('asc'),\r\n      [SORT.RANK_DESC]: getEloSorting('desc'),\r\n      [SORT.PP_ASC]: getPpSorting('pp.ppRatio', 'asc'),\r\n      [SORT.PP_DESC]: getPpSorting('pp.pp'),\r\n      [SORT.EASIEST_SONGS]: getDiffSorting('asc'),\r\n      [SORT.HARDEST_SONGS]: getDiffSorting('desc'),\r\n    }[sortingType] || defaultSorting;\r\n\r\n  const result = _.flow(\r\n    _.compact([\r\n      _.map((row) => {\r\n        let latestScoreDate = null;\r\n        const results = row.results.filter((res, index) => {\r\n          // const isHiddenByPreferences =\r\n          //   playersHiddenStatus[res.playerId] && protagonist !== res.nickname;\r\n          // const isVisible = !isHiddenByPreferences && (!res.isUnknownPlayer || index === 0);\r\n          const isVisible = !res.isUnknownPlayer || index === 0;\r\n          if (isVisible && (!latestScoreDate || latestScoreDate < res.date)) {\r\n            latestScoreDate = res.date;\r\n          }\r\n          return isVisible;\r\n        }, row.results);\r\n        return {\r\n          ...row,\r\n          latestScoreDate,\r\n          results,\r\n        };\r\n      }),\r\n      filter.chartRange && ((items) => filterCharts(filter.chartRange, items)),\r\n      !filter.showRank &&\r\n        _.map((row) => ({ ...row, results: _.filter((res) => !res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        filter.showOnlyRank &&\r\n        _.map((row) => ({ ...row, results: _.filter((res) => res.isRank, row.results) })),\r\n      filter.showRank &&\r\n        !filter.showOnlyRank &&\r\n        !filter.showRankAndNorank &&\r\n        _.map((row) => {\r\n          const occuredNames = [];\r\n          return {\r\n            ...row,\r\n            results: _.filter((res) => {\r\n              const alreadyOccured = occuredNames.includes(res.nickname);\r\n              occuredNames.push(res.nickname);\r\n              return !alreadyOccured;\r\n            }, row.results),\r\n          };\r\n        }),\r\n      (names.length || namesOr.length || namesNot.length) &&\r\n        _.filter((row) => {\r\n          const rowNames = _.map('nickname', row.results);\r\n          return (\r\n            (!names.length || _.every((name) => rowNames.includes(name), names)) &&\r\n            (!namesOr.length || _.some((name) => rowNames.includes(name), namesOr)) &&\r\n            (!namesNot.length || !_.some((name) => rowNames.includes(name), namesNot))\r\n          );\r\n        }),\r\n      _.filter((row) => _.size(row.results)),\r\n      ...sortingFunctions,\r\n      filter.song && ((items) => matchSorter(items, filter.song.trim(), { keys: ['song'] })),\r\n    ])\r\n  )(data);\r\n  // console.log('Elapsed:', performance.now() - start);\r\n  return result;\r\n};\r\n\r\nexport const filteredDataSelector = createSelector(\r\n  (state) => state.results.data,\r\n  (state) => state.results.sharedCharts,\r\n  (state) => state.results.filter,\r\n  (state) => state.results.resultInfo,\r\n  (state) => state.preferences.data,\r\n  getFilteredData\r\n);\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash/fp';\r\nimport Select from 'react-select';\r\nimport classNames from 'classnames';\r\nimport localForage from 'localforage';\r\nimport { FaRedoAlt, FaSearch } from 'react-icons/fa';\r\n\r\n// styles\r\nimport './leaderboard.scss';\r\n\r\n// components\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Input from 'components/Shared/Input/Input';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport CollapsibleBar from 'components/Shared/CollapsibleBar';\r\nimport ChartFilter from './ChartFilter';\r\nimport PresetsControl from './PresetsControl';\r\nimport Chart from './Chart';\r\n\r\n// constants\r\nimport { SORT } from 'constants/leaderboard';\r\n\r\n// reducers\r\nimport { fetchResults, setFilter, resetFilter, defaultFilter } from 'reducers/results';\r\nimport { selectPreset, openPreset } from 'reducers/presets';\r\n\r\n// utils\r\nimport { colorsArray } from 'utils/colors';\r\nimport { playersSelector, filteredDataSelector } from 'reducers/selectors';\r\n\r\n// code\r\nconst sortingOptions = [\r\n  {\r\n    label: 'от новых скоров',\r\n    value: SORT.DEFAULT,\r\n  },\r\n  {\r\n    label: 'от новых скоров конкретного игрока',\r\n    value: SORT.NEW_SCORES_PLAYER,\r\n  },\r\n  // {\r\n  //   label: 'отставанию от остальных',\r\n  //   value: SORT.PROTAGONIST,\r\n  // },\r\n  {\r\n    label: 'от худших результатов (эло)',\r\n    value: SORT.RANK_ASC,\r\n  },\r\n  {\r\n    label: 'от лучших результатов (эло)',\r\n    value: SORT.RANK_DESC,\r\n  },\r\n  {\r\n    label: 'от худших результатов (pp)',\r\n    value: SORT.PP_ASC,\r\n  },\r\n  {\r\n    label: 'от лучших результатов (pp)',\r\n    value: SORT.PP_DESC,\r\n  },\r\n  {\r\n    label: 'от лёгких чартов',\r\n    value: SORT.EASIEST_SONGS,\r\n  },\r\n  {\r\n    label: 'от сложных чартов',\r\n    value: SORT.HARDEST_SONGS,\r\n  },\r\n];\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    players: playersSelector(state),\r\n    filteredData: filteredDataSelector(state),\r\n    filter: state.results.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading: state.results.isLoading || state.tracklist.isLoading,\r\n    presets: state.presets.presets,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setFilter,\r\n  resetFilter,\r\n  selectPreset,\r\n  openPreset,\r\n};\r\n\r\nclass Leaderboard extends Component {\r\n  static propTypes = {\r\n    match: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  state = { showItemsCount: 20 };\r\n\r\n  setFilter = _.curry((name, value) => {\r\n    const filter = { ...this.props.filter, [name]: value };\r\n    this.props.setFilter(filter);\r\n    localForage.setItem('filter', filter);\r\n  });\r\n\r\n  resetFilter = () => {\r\n    this.props.resetFilter();\r\n    localForage.setItem('filter', defaultFilter);\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onTypeSongName = _.debounce(300, (value) => {\r\n    this.setFilter('song', value);\r\n  });\r\n\r\n  renderSimpleSearch() {\r\n    const { isLoading, filter } = this.props;\r\n    return (\r\n      <div className=\"simple-search\">\r\n        <div className=\"song-name _margin-right _margin-bottom\">\r\n          <Input\r\n            value={filter.song || ''}\r\n            placeholder=\"название песни...\"\r\n            className=\"form-control\"\r\n            onChange={this.onTypeSongName}\r\n          />\r\n        </div>\r\n        <div className=\"chart-range _margin-right _margin-bottom\">\r\n          <ChartFilter filterValue={filter.chartRange} onChange={this.setFilter('chartRange')} />\r\n        </div>\r\n        <div className=\"_flex-fill\" />\r\n        <div className=\"_flex-row _margin-bottom\">\r\n          <PresetsControl />\r\n          <button className=\"btn btn-sm btn-dark btn-icon _margin-right\" onClick={this.resetFilter}>\r\n            <FaRedoAlt /> сбросить фильтры\r\n          </button>\r\n          <button\r\n            disabled={isLoading}\r\n            className=\"btn btn-sm btn-dark btn-icon\"\r\n            onClick={this.onRefresh}\r\n          >\r\n            <FaSearch /> обновить\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFilters() {\r\n    const { players, filter } = this.props;\r\n    return (\r\n      <div className=\"filters\">\r\n        <div className=\"people-filters\">\r\n          <label className=\"label\">показывать чарты, которые сыграл:</label>\r\n          <div className=\"players-block\">\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">каждый из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'players', filter)}\r\n                onChange={this.setFilter('players')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и хоть один из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersOr', filter)}\r\n                onChange={this.setFilter('playersOr')}\r\n              />\r\n            </div>\r\n            <div className=\"_margin-right\">\r\n              <label className=\"label\">и никто из этих</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                isMulti\r\n                options={players}\r\n                value={_.getOr(null, 'playersNot', filter)}\r\n                onChange={this.setFilter('playersNot')}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Toggle\r\n            checked={_.getOr(false, 'showRank', filter)}\r\n            onChange={this.setFilter('showRank')}\r\n          >\r\n            показывать скоры на ранке\r\n          </Toggle>\r\n        </div>\r\n        {_.get('showRank', filter) && (\r\n          <>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showOnlyRank', filter)}\r\n                onChange={(value) => {\r\n                  this.setFilter('showOnlyRank', value);\r\n                  if (_.get('showRankAndNorank', filter)) {\r\n                    this.setFilter('showRankAndNorank', false);\r\n                  }\r\n                }}\r\n              >\r\n                <strong>только</strong> на ранке\r\n              </Toggle>\r\n            </div>\r\n            <div>\r\n              <Toggle\r\n                checked={_.getOr(false, 'showRankAndNorank', filter)}\r\n                onChange={(value) => {\r\n                  this.setFilter('showRankAndNorank', value);\r\n                  if (_.get('showOnlyRank', filter)) {\r\n                    this.setFilter('showOnlyRank', false);\r\n                  }\r\n                }}\r\n              >\r\n                показывать лучшие скоры с ранком и без\r\n              </Toggle>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSortings() {\r\n    const { players, filter } = this.props;\r\n    return (\r\n      <div className=\"sortings\">\r\n        <div>\r\n          <label className=\"label\">сортировка:</label>\r\n          <Select\r\n            placeholder=\"выберите сортировку\"\r\n            className=\"select\"\r\n            classNamePrefix=\"select\"\r\n            isClearable={false}\r\n            options={sortingOptions}\r\n            value={_.getOr(sortingOptions[0], 'sortingType', filter)}\r\n            onChange={this.setFilter('sortingType')}\r\n          />\r\n        </div>\r\n        {[\r\n          SORT.PROTAGONIST,\r\n          SORT.RANK_ASC,\r\n          SORT.RANK_DESC,\r\n          SORT.PP_ASC,\r\n          SORT.PP_DESC,\r\n          SORT.NEW_SCORES_PLAYER,\r\n        ].includes(_.get('sortingType.value', filter)) && (\r\n          <div>\r\n            <label className=\"label\">игрок:</label>\r\n            <Select\r\n              className={classNames('select players', {\r\n                'red-border': !_.get('protagonist', filter),\r\n              })}\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              value={_.getOr(null, 'protagonist', filter)}\r\n              onChange={this.setFilter('protagonist')}\r\n            />\r\n          </div>\r\n        )}\r\n        {[SORT.PROTAGONIST].includes(_.get('sortingType.value', filter)) && (\r\n          <div>\r\n            <label className=\"label\">не учитывать в сравнении:</label>\r\n            <Select\r\n              closeMenuOnSelect={false}\r\n              className=\"select players\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"игроки...\"\r\n              options={players}\r\n              isMulti\r\n              value={_.getOr([], 'excludeAntagonists', filter)}\r\n              onChange={this.setFilter('excludeAntagonists')}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, filteredData, error, filter } = this.props;\r\n    const { showItemsCount } = this.state;\r\n    const canShowMore = filteredData.length > showItemsCount;\r\n    const visibleData = _.slice(0, showItemsCount, filteredData);\r\n\r\n    const sortingType = _.get('sortingType.value', filter);\r\n    const showProtagonistEloChange = [SORT.RANK_ASC, SORT.RANK_DESC].includes(sortingType);\r\n    const showProtagonistPpChange = [SORT.PP_ASC, SORT.PP_DESC].includes(sortingType);\r\n    const highlightProtagonist = [\r\n      SORT.PROTAGONIST,\r\n      SORT.RANK_ASC,\r\n      SORT.RANK_DESC,\r\n      SORT.PP_ASC,\r\n      SORT.PP_DESC,\r\n      SORT.NEW_SCORES_PLAYER,\r\n    ].includes(sortingType);\r\n    const protagonistName = _.get('protagonist.value', filter);\r\n    const uniqueSelectedNames = _.slice(\r\n      0,\r\n      colorsArray.length,\r\n      _.uniq(\r\n        _.compact([\r\n          highlightProtagonist && protagonistName,\r\n          ..._.map('value', filter.players),\r\n          ..._.map('value', filter.playersOr),\r\n        ])\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div className=\"leaderboard-page\">\r\n        <div className=\"content\">\r\n          <div className=\"search-block\">\r\n            {this.renderSimpleSearch()}\r\n            <CollapsibleBar title=\"фильтры\">{this.renderFilters()}</CollapsibleBar>\r\n            <CollapsibleBar title=\"сортировка\">{this.renderSortings()}</CollapsibleBar>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!!this.props.presets.length && (\r\n            <div className=\"presets-buttons\">\r\n              <span>пресеты:</span>\r\n              {this.props.presets.map((preset) => (\r\n                <ToggleButton\r\n                  key={preset.name}\r\n                  text={preset.name}\r\n                  className=\"btn btn-sm btn-dark _margin-right\"\r\n                  active={_.get('filter', preset) === this.props.filter}\r\n                  onToggle={() => {\r\n                    this.props.selectPreset(preset);\r\n                    this.props.openPreset();\r\n                  }}\r\n                ></ToggleButton>\r\n              ))}\r\n            </div>\r\n          )}\r\n          <div className=\"top-list\">\r\n            {_.isEmpty(filteredData) && !isLoading && (error ? error.message : 'ничего не найдено')}\r\n            {!isLoading &&\r\n              visibleData.map((chart, chartIndex) => {\r\n                return (\r\n                  <Chart\r\n                    key={chart.sharedChartId}\r\n                    chart={chart}\r\n                    chartIndex={chartIndex}\r\n                    showProtagonistEloChange={showProtagonistEloChange}\r\n                    showProtagonistPpChange={showProtagonistPpChange}\r\n                    uniqueSelectedNames={uniqueSelectedNames}\r\n                    protagonistName={protagonistName}\r\n                  />\r\n                );\r\n              })}\r\n            {!isLoading && canShowMore && (\r\n              <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                onClick={() =>\r\n                  this.setState((state) => ({ showItemsCount: state.showItemsCount + 10 }))\r\n                }\r\n              >\r\n                show more...\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Leaderboard);\r\n","import React from 'react';\r\nimport _ from 'lodash/fp';\r\n// import numeral from 'numeral';\r\nimport classNames from 'classnames';\r\nimport { GiQueenCrown } from 'react-icons/gi';\r\nimport { FaAngleDoubleUp, FaAngleDoubleDown } from 'react-icons/fa';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { routes } from 'constants/routes';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\nimport Flag from 'components/Shared/Flag';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\n// import CheckBox from 'components/Shared/CheckBox';\r\n\r\nimport { getRankImg } from 'utils/exp';\r\n\r\nconst getGradeImg = (grade) => (\r\n  <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n);\r\n\r\nexport default function RankingList({ ranking, isLoading, preferences, updatePreferences }) {\r\n  return (\r\n    <div className=\"ranking-list\">\r\n      {_.isEmpty(ranking) && !isLoading && 'ничего не найдено'}\r\n      {isLoading && <Loader />}\r\n      {!isLoading && (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"place\"></th>\r\n              <th className=\"change\"></th>\r\n              <th className=\"exp-rank\">rank</th>\r\n              <th className=\"name\">name</th>\r\n              <th className=\"name name-piu\">piu name</th>\r\n              <th className=\"rating\">elo</th>\r\n              <th className=\"rating-change-cell\"></th>\r\n              <th className=\"rating\">pp</th>\r\n              {/* <th className=\"total-score\">total score</th> */}\r\n              <th className=\"grades sss\">{getGradeImg('SSS')}</th>\r\n              <th className=\"grades ss\">{getGradeImg('SS')}</th>\r\n              <th className=\"grades s\">{getGradeImg('S')}</th>\r\n              <th className=\"grades a\">{getGradeImg('A+')}</th>\r\n              <th className=\"grades b\">{getGradeImg('B')}</th>\r\n              <th className=\"grades c\">{getGradeImg('C')}</th>\r\n              <th className=\"grades d\">{getGradeImg('D')}</th>\r\n              <th className=\"grades f\">{getGradeImg('F')}</th>\r\n              <th className=\"playcount\">scores</th>\r\n              {/* <th className=\"calories\">kcal</th> */}\r\n              <th className=\"accuracy\">accuracy</th>\r\n              <th className=\"hide-col\"> </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {ranking.map((player, playerIndex) => {\r\n              const isHidden = preferences.playersHiddenStatus[player.id];\r\n              if (isHidden && !preferences.showHiddenPlayersInRanking) {\r\n                return null;\r\n              }\r\n              return (\r\n                <tr\r\n                  className={classNames('player', { 'hidden-player': isHidden })}\r\n                  key={player.name}\r\n                >\r\n                  <td className=\"place\">\r\n                    {playerIndex === 0 ? <GiQueenCrown /> : `#${playerIndex + 1}`}\r\n                  </td>\r\n                  <td className=\"change\">\r\n                    {player.change > 0 && (\r\n                      <div className=\"change-holder up\">\r\n                        <span>{player.change}</span>\r\n                        <FaAngleDoubleUp />\r\n                      </div>\r\n                    )}\r\n                    {player.change < 0 && (\r\n                      <div className=\"change-holder down\">\r\n                        <span>{-player.change}</span>\r\n                        <FaAngleDoubleDown />\r\n                      </div>\r\n                    )}\r\n                    {!!player.change && _.isString(player.change) && (\r\n                      <div className=\"change-holder text\">\r\n                        <span>{player.change}</span>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"exp-rank\">{getRankImg(player.expRank)}</td>\r\n                  <td className=\"name\">\r\n                    <div className=\"name-container\">\r\n                      <Flag region={player.region} />\r\n                      <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                        {player.name}\r\n                      </NavLink>\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"name name-piu\">\r\n                    <NavLink exact to={routes.profile.getPath({ id: player.id })}>\r\n                      {player.nameArcade}\r\n                    </NavLink>\r\n                  </td>\r\n                  <td className=\"rating\">{player.rating}</td>\r\n                  <td className=\"rating-change-cell\">\r\n                    {!!player.prevRating && player.prevRating !== player.rating && (\r\n                      <span\r\n                        className={classNames('rating-change', {\r\n                          down: player.prevRating > player.rating,\r\n                          up: player.prevRating < player.rating,\r\n                        })}\r\n                      >\r\n                        {player.prevRating < player.rating ? '+' : ''}\r\n                        {player.rating - player.prevRating}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"rating secondary\">{Math.round(player.pp.pp)}</td>\r\n                  <td className=\"grades sss\">{player.grades.SSS}</td>\r\n                  <td className=\"grades ss\">{player.grades.SS}</td>\r\n                  <td className=\"grades s\">{player.grades.S}</td>\r\n                  <td className=\"grades a\">{player.grades.A}</td>\r\n                  <td className=\"grades b\">{player.grades.B}</td>\r\n                  <td className=\"grades c\">{player.grades.C}</td>\r\n                  <td className=\"grades d\">{player.grades.D}</td>\r\n                  <td className=\"grades f\">{player.grades.F}</td>\r\n                  <td className=\"playcount\">{player.count}</td>\r\n                  <td className=\"accuracy\">\r\n                    {player.accuracy ? `${player.accuracy.toFixed(2)}%` : ''}\r\n                  </td>\r\n                  <td className=\"hide-col\">\r\n                    <Toggle\r\n                      onChange={() => {\r\n                        updatePreferences(\r\n                          _.set(['playersHiddenStatus', player.id], !isHidden, preferences)\r\n                        );\r\n                      }}\r\n                      checked={!isHidden}\r\n                    />\r\n                    {/* <CheckBox\r\n                      onChange={() => {\r\n                        updatePreferences(\r\n                          _.set(['playersHiddenStatus', player.id], !isHidden, preferences)\r\n                        );\r\n                      }}\r\n                      isChecked={isHidden}\r\n                    /> */}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function RankingFaq() {\r\n  return (\r\n    <div className=\"faq\">\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Как считается рейтинг?</div>\r\n        <div className=\"answer\">\r\n          A: Используется <a href=\"https://en.wikipedia.org/wiki/Elo_rating_system\">рейтинг Эло</a>,\r\n          широко используемый в шахматах и других играх, слегка модицированный под условия игры на\r\n          пампе. Средний рейтинг - 1000. Коэффициент К зависит от уровня чарта (более сложные чарты\r\n          сильнее влияют на рейтинг). Количество очков влияет на заработанный рейтинг (маленький\r\n          отрыв от противника не даст так много очков как большой отрыв).\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Что такое рр и чем оно отличается от эло?</div>\r\n        <div className=\"answer\">\r\n          A: РР (performance points) - система очков, взятая из osu!. Эло - система рейтинга, взятая\r\n          из шахмат. Основные отличия:\r\n          <br />\r\n          С эло твои очки зависят от других игроков на этом чарте, с рр твои очки зависят только от\r\n          того, как ты сыграешь чарт.\r\n          <br />\r\n          С эло можно потерять очки или заставить другого игрока их потерять, с рр можно только\r\n          набирать больше очков.\r\n          <br />\r\n          С эло намного проще кого-то обогнать, с рр люди редко меняются местами в рейтинге.\r\n          <br />\r\n          Эло показывает кто кого обыгрывает в последнее время, а рр показывает, кто на каком\r\n          примерно уровне по скиллу.\r\n          <br />\r\n          Сейчас рейтинг сортируется по Эло. РР выступает в качестве дополнительной инфы для\r\n          интереса, плюс используется как стартовое значение Эло.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Система Эло используется для игр 1 на 1, как она используется на пампе, где на одном\r\n          чарте играет много игроков?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: Рекорды на одном чарте делятся на несколько игр 1 на 1. Если есть 3 игрока: A, B, C; то\r\n          считается, что было 3 отдельные игры: A vs B, A vs C, B vs C.\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Как считается сумма рр?</div>\r\n        <div className=\"answer\">\r\n          A: Сначала все скоры игрока сортируются по рр. Затем в общую сумму рр добавляется 100% от\r\n          лучшего скора, 95% от второго скора, 90% от третьего, 86% от 4-го и так далее. (Формула\r\n          коэффициента - 0.95^N). Таким образом, на общую сумму рр больше всего влияют самые лучшие\r\n          результаты человека за всё время, и чтобы поднять свой уровень рр, нужно получать новые\r\n          топовые результаты (и поднимать свой скилл).\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Учитываются ли рекорды на ранке в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: Да. Как минимум потому что у нас есть много рекордов, взятых с машин бестов, и мы не\r\n          знаем наверняка, на ранке они или нет. Если у игрока в топе есть два скора - на ранке и\r\n          без ранка, используется тот, где больше очков.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Почему меня нет в рейтинге?</div>\r\n        <div className=\"answer\">\r\n          A: В таблицу попадают только те, у кого есть хотя бы 20 игр 1 на 1. Первые 20 игр\r\n          используются для определения изначального рейтинга.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Почему суммарное количество оценок S-A-B не совпадает с общим количеством скоров?\r\n        </div>\r\n        <div className=\"answer\">A: Не для каждого результата известна оценка.</div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">\r\n          Q: Если у меня есть несколько рекордов на А, несколько на А+, как считается суммарное\r\n          количество грейдов в таблице?\r\n        </div>\r\n        <div className=\"answer\">\r\n          A: В каждой колонке учитываются обе буквы - и треснутые, и с удержанным лайфом. То есть и\r\n          А, и А+ идут в колонку А. Точно так же для B, C, D.\r\n        </div>\r\n      </div>\r\n      <div className=\"question-answer\">\r\n        <div className=\"question\">Q: Убери аккураси из таблицы!</div>\r\n        <div className=\"answer\">A: Грем, это секция для вопросов.</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import _ from 'lodash/fp';\r\n\r\nimport { fetchJson, postJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `PREFERENCES/LOADING`;\r\nconst SUCCESS = `PREFERENCES/SUCCESS`;\r\nconst ERROR = `PREFERENCES/ERROR`;\r\n// const UPDATE_LOADING = `PREFERENCES/UPDATE/LOADING`;\r\n// const UPDATE_SUCCESS = `PREFERENCES/UPDATE/SUCCESS`;\r\n// const UPDATE_ERROR = `PREFERENCES/UPDATE/ERROR`;\r\nconst CHANGE = `PREFERENCES/CHANGE`;\r\n\r\nconst defaultPreferences = {\r\n  playersHiddenStatus: {},\r\n};\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: defaultPreferences,\r\n  error: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: defaultPreferences,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: _.merge(defaultPreferences, action.data),\r\n      };\r\n    case CHANGE:\r\n      return {\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchPreferences = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/profile/preferences` }));\r\n      dispatch({ type: SUCCESS, data: data.preferences });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchUserPreferences = (id) => {\r\n  return async (dispatch) => {\r\n    const data = await dispatch(fetchJson({ url: `${HOST}/player/${id}/preferences` }));\r\n    return data;\r\n  };\r\n};\r\n\r\nexport const updatePreferences = (preferences) => {\r\n  return async (dispatch) => {\r\n    // dispatch({ type: LOADING });\r\n    dispatch({ type: CHANGE, data: preferences });\r\n    try {\r\n      await dispatch(\r\n        postJson({\r\n          url: `${HOST}/profile/preferences`,\r\n          body: { preferences },\r\n        })\r\n      );\r\n      // dispatch({ type: SUCCESS, data: data.preferences });\r\n      // return data.preferences;\r\n    } catch (error) {\r\n      // dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle } from 'react-icons/fa';\r\nimport { Link, Route, withRouter } from 'react-router-dom';\r\nimport { createSelector } from 'reselect';\r\nimport _ from 'lodash/fp';\r\n\r\n// styles\r\nimport './ranking.scss';\r\n\r\n// components\r\nimport RankingList from './RankingList';\r\nimport RankingFaq from './RankingFaq';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\nimport { updatePreferences } from 'reducers/preferences';\r\n\r\n// utils\r\n\r\n// code\r\nconst rankingSelector = createSelector(\r\n  (state) => state.results.profiles,\r\n  // _.flow(_.values, _.orderBy(['pp.pp'], ['desc']))\r\n  _.flow(_.values, _.orderBy(['ratingRaw'], ['desc']))\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    preferences: state.preferences.data,\r\n    ranking: rankingSelector(state),\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading:\r\n      state.results.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  updatePreferences,\r\n};\r\n\r\nclass Ranking extends Component {\r\n  static propTypes = {\r\n    ranking: toBe.array,\r\n    error: toBe.object,\r\n    preferences: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n    updatePreferences: toBe.func.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    ranking: [],\r\n  };\r\n\r\n  onChangeHidingPlayers = () => {\r\n    const { preferences, updatePreferences } = this.props;\r\n\r\n    updatePreferences(\r\n      _.set(['showHiddenPlayersInRanking'], !preferences.showHiddenPlayersInRanking, preferences)\r\n    );\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, ranking, error, preferences, updatePreferences } = this.props;\r\n    return (\r\n      <div className=\"ranking-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.path}\r\n              render={() => (\r\n                <>\r\n                  <button\r\n                    className=\"btn btn-sm btn-dark btn-icon _margin-right\"\r\n                    onClick={this.onChangeHidingPlayers}\r\n                  >\r\n                    {preferences.showHiddenPlayersInRanking\r\n                      ? 'скрыть невыбранных'\r\n                      : 'показать всех'}\r\n                  </button>\r\n                  <Link to={routes.ranking.faq.path}>\r\n                    <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\r\n                      <FaQuestionCircle /> faq\r\n                    </button>\r\n                  </Link>\r\n                  <button\r\n                    disabled={isLoading}\r\n                    className=\"btn btn-sm btn-dark btn-icon\"\r\n                    onClick={this.onRefresh}\r\n                  >\r\n                    <FaSearch /> обновить\r\n                  </button>\r\n                </>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path={routes.ranking.faq.path}\r\n              render={() => (\r\n                <Link to={routes.ranking.path}>\r\n                  <button className=\"btn btn-sm btn-dark btn-icon\">назад</button>\r\n                </Link>\r\n              )}\r\n            />\r\n          </div>\r\n          <Route\r\n            exact\r\n            path={routes.ranking.path}\r\n            render={() => (\r\n              <RankingList\r\n                ranking={ranking}\r\n                isLoading={isLoading}\r\n                preferences={preferences}\r\n                updatePreferences={updatePreferences}\r\n              />\r\n            )}\r\n          />\r\n          <Route exact path={routes.ranking.faq.path} component={RankingFaq} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Ranking));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash/fp';\r\nimport { FaPlay } from 'react-icons/fa';\r\nimport { MdExpandMore } from 'react-icons/md';\r\n\r\nimport { fetchJson } from 'utils/fetch';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { parseDate } from 'utils/date';\r\n\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport './most-played.scss';\r\n\r\nexport default connect(\r\n  state => ({ charts: state.results.sharedCharts }),\r\n  { fetchJson }\r\n)(({ playerId, charts, fetchJson }) => {\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [limit, setLimit] = useState(10);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchJson({\r\n      url: `${HOST}/player/${playerId}/mostPlayed?limit=${limit}`,\r\n    })\r\n      .then(result => {\r\n        setLoading(false);\r\n        if (result.success) {\r\n          setData(result.data);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [playerId, limit, fetchJson]);\r\n\r\n  return (\r\n    <div className=\"most-played\">\r\n      {isLoading && <Loader />}\r\n      {data.map(item => {\r\n        const chart = charts[item.shared_chart];\r\n        return (\r\n          <div className=\"chart\" key={item.shared_chart}>\r\n            <div\r\n              className={classNames('chart-name', {\r\n                single: chart.chartType === 'S',\r\n                singlep: chart.chartType === 'SP',\r\n                doublep: chart.chartType === 'DP',\r\n                double: chart.chartType === 'D',\r\n                coop: chart.chartType === 'COOP',\r\n              })}\r\n            >\r\n              <span className=\"chart-letter\">{chart.chartType}</span>\r\n              <span className=\"chart-number\">{chart.chartLevel}</span>\r\n            </div>\r\n            <div className=\"song-name\">{chart.song}</div>\r\n            <div className=\"date\">\r\n              {item.latestDate ? getTimeAgo(parseDate(item.latestDate)) : null}\r\n            </div>\r\n            <div className=\"playcount\">\r\n              <FaPlay />\r\n              <span>{item.count}</span>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      {limit === _.size(data) && (\r\n        <button\r\n          className=\"show-more btn btn-sm btn-dark btn-icon\"\r\n          onClick={() => setLimit(limit + 10)}\r\n        >\r\n          <MdExpandMore /> больше\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\n\r\nimport { ranks, getRankImg } from 'utils/exp';\r\n\r\nexport default function ExpFaq() {\r\n  return (\r\n    <div className=\"faq-exp\">\r\n      <div className=\"faq-header\">\r\n        <strong>Опыт</strong> игрока основывается на количестве сыгранных песен и чартов.\r\n        <br />\r\n        Чем выше уровень чарта и чем лучше оценка на чарте, тем больше опыта он даёт.\r\n        <br />\r\n        Повторные попытки на тех же чартах не дают больше опыта. Чтобы поднимать свой уровень, играй\r\n        новые треки и чарты.\r\n      </div>\r\n      <div className=\"faq-header\">Список уровней и необходимый опыт для их получения:</div>\r\n      <div className=\"ranks-list\">\r\n        {ranks.map(rank => (\r\n          <div key={rank.threshold} className=\"rank\">\r\n            <div className=\"exp-rank\">{getRankImg(rank)}</div>\r\n            <div className=\"threshold\">{rank.threshold}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const SET_FILTER = `PROFILES/SET_FILTER`;\r\nconst RESET_FILTER = `PROFILES/RESET_FILTER`;\r\n\r\nexport const defaultFilter = {};\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  filter: defaultFilter,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: defaultFilter,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setProfilesFilter = filter => ({\r\n  type: SET_FILTER,\r\n  filter,\r\n});\r\n\r\nexport const resetProfilesFilter = () => ({\r\n  type: RESET_FILTER,\r\n});\r\n","import _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport moment from 'moment';\r\n\r\nconst cutRange = (array, range) => {\r\n  const startIndex = _.findIndex(item => item.date > range[0], array);\r\n  const endIndex = _.findLastIndex(item => item.date < range[1], array);\r\n  let firstElement =\r\n    startIndex > 0 ? array[startIndex - 1] : startIndex === 0 ? array[startIndex] : _.last(array);\r\n  let lastElement = endIndex > -1 ? array[endIndex] : _.first(array);\r\n  firstElement = { ...firstElement, date: range[0] };\r\n  lastElement = { ...lastElement, date: range[1] };\r\n  const middleElements =\r\n    startIndex > -1 && endIndex > -1 ? array.slice(startIndex, endIndex + 1) : [];\r\n\r\n  return [firstElement, ...middleElements, lastElement];\r\n};\r\n\r\nconst defaultGradesDistribution = {\r\n  SSS: 0,\r\n  SS: 0,\r\n  S: 0,\r\n  'A+': 0,\r\n  A: 0,\r\n  B: 0,\r\n  C: 0,\r\n  D: 0,\r\n  F: 0,\r\n};\r\nconst defaultGradesWithLevelsDistribution = _.flow(\r\n  _.flatMap(type => {\r\n    return _.flow(\r\n      _.toPairs,\r\n      _.map(([grade, value]) => [`${type}-${grade}`, value])\r\n    )(defaultGradesDistribution);\r\n  }),\r\n  _.fromPairs\r\n)(['S', 'D']);\r\n\r\nexport const profileSelectorCreator = idParamName =>\r\n  createSelector(\r\n    (state, props) => _.toInteger(props.match.params[idParamName]),\r\n    state => state.results.isLoading || state.results.isLoadingRanking,\r\n    state => state.results.profiles,\r\n    state => state.profiles.filter,\r\n    state => state.tracklist.data,\r\n    (id, isLoading, profiles, filter, tracklist) => {\r\n      const profile = profiles[id];\r\n      if (_.isEmpty(profile) || isLoading) {\r\n        return null;\r\n      }\r\n      const levelsDistribution = _.flow(\r\n        _.get('resultsByLevel'),\r\n        _.toPairs,\r\n        _.map(([x, y]) => ({\r\n          x: _.toInteger(x),\r\n          S:\r\n            (_.size(\r\n              _.filter(res => res.chart.chartType === 'S' || res.chart.chartType === 'SP', y)\r\n            ) /\r\n              tracklist.singlesLevels[x]) *\r\n            100,\r\n          D:\r\n            (-_.size(\r\n              _.filter(res => res.chart.chartType === 'D' || res.chart.chartType === 'DP', y)\r\n            ) /\r\n              tracklist.doublesLevels[x]) *\r\n            100,\r\n        }))\r\n      )(profile);\r\n      const gradesData = _.flow(\r\n        _.get('resultsByLevel'),\r\n        _.toPairs,\r\n        _.map(\r\n          _.update('[1].result.grade', grade =>\r\n            grade && grade.includes('+') && grade !== 'A+' ? grade.replace('+', '') : grade\r\n          )\r\n        )\r\n      )(profile);\r\n      const gradesDistribution = _.flow(\r\n        _.map(([x, y]) => ({\r\n          x: _.toInteger(x),\r\n          ...defaultGradesDistribution,\r\n          ..._.omit('?', _.mapValues(_.size, _.groupBy('result.grade', y))),\r\n        })),\r\n        _.map(item => {\r\n          const grades = _.pick(Object.keys(defaultGradesDistribution), item);\r\n          const sum = _.sum(_.values(grades));\r\n          return {\r\n            ...item,\r\n            gradesValues: grades,\r\n            ...(sum === 0 ? grades : _.mapValues(value => (100 * value) / sum, grades)),\r\n          };\r\n        })\r\n      )(gradesData);\r\n      const gradesAndLevelsDistribution = _.flow(\r\n        _.map(([x, y]) => {\r\n          const groupedResults = _.groupBy('result.grade', y);\r\n          const counts = _.omit(\r\n            '?',\r\n            _.mapValues(\r\n              _.countBy(res => {\r\n                return res.chart.chartType === 'S' || res.chart.chartType === 'SP'\r\n                  ? 'S'\r\n                  : res.chart.chartType === 'D' || res.chart.chartType === 'DP'\r\n                  ? 'D'\r\n                  : 'Other';\r\n              }),\r\n              groupedResults\r\n            )\r\n          );\r\n          const reduced = _.reduce(\r\n            (acc, [grade, levelsData]) => {\r\n              const accData = _.flow(\r\n                _.toPairs,\r\n                _.map(([type, count]) => [\r\n                  `${type}-${grade}`,\r\n                  type === 'S'\r\n                    ? (count / tracklist.singlesLevels[x]) * 100\r\n                    : (-count / tracklist.doublesLevels[x]) * 100,\r\n                ]),\r\n                _.fromPairs\r\n              )(levelsData);\r\n              return { ...acc, ...accData };\r\n            },\r\n            {},\r\n            _.toPairs(counts)\r\n          );\r\n\r\n          return {\r\n            x: _.toInteger(x),\r\n            ...defaultGradesWithLevelsDistribution,\r\n            ...reduced,\r\n          };\r\n        })\r\n      )(gradesData);\r\n\r\n      const lastTickRating = _.last(profile.ratingHistory).date;\r\n      const lastTickRanking = _.last(profile.rankingHistory).date;\r\n      const lastTick = lastTickRating > lastTickRanking ? lastTickRating : lastTickRanking; // End graph at either point\r\n      const firstTick = _.first(profile.ratingHistory).date; // Start graph from the first battle of this player\r\n      const lastDay = moment(lastTick).endOf('day');\r\n      const firstDay = moment(firstTick).startOf('day');\r\n      const minMaxRange = [firstDay / 1000 / 60 / 60 / 24, lastDay / 1000 / 60 / 60 / 24];\r\n\r\n      const filterRange = filter.dayRange || [\r\n        Math.max(minMaxRange[0], minMaxRange[1] - 30),\r\n        minMaxRange[1],\r\n      ];\r\n      const dayRangeMs = [\r\n        +moment(filterRange[0] * 1000 * 60 * 60 * 24).startOf('day'),\r\n        +moment(filterRange[1] * 1000 * 60 * 60 * 24).endOf('day'),\r\n      ];\r\n      const placesChanges = cutRange(profile.rankingHistory, dayRangeMs);\r\n      const ratingChanges = cutRange(profile.ratingHistory, dayRangeMs);\r\n\r\n      const rank = 1 + _.findIndex({ id }, _.orderBy(['ratingRaw'], ['desc'], _.values(profiles)));\r\n\r\n      return {\r\n        ...profile,\r\n        rank,\r\n        minMaxRange,\r\n        filterRange,\r\n        levelsDistribution,\r\n        gradesDistribution,\r\n        gradesAndLevelsDistribution,\r\n        placesChanges,\r\n        ratingChanges,\r\n      };\r\n    }\r\n  );\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaQuestionCircle, FaTimes, FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport ReactModal from 'react-modal';\r\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\r\nimport Select from 'react-select';\r\nimport moment from 'moment';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as RechartsTooltip,\r\n  ReferenceLine,\r\n  CartesianGrid,\r\n  Line,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Label,\r\n  Scatter,\r\n  ScatterChart,\r\n} from 'recharts';\r\nimport _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\n\r\n// styles\r\nimport './profile.scss';\r\n\r\n// constants\r\nimport { routes } from 'constants/routes';\r\nimport { DEBUG } from 'constants/env';\r\n\r\n// components\r\nimport Range from 'components/Shared/Range';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport MostPlayed from './MostPlayed';\r\nimport ExpFaq from './ExpFaq';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\nimport { setProfilesFilter, resetProfilesFilter } from 'reducers/profiles';\r\n\r\n// utils\r\nimport { profileSelectorCreator } from 'utils/profiles';\r\nimport { parseDate } from 'utils/date';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { achievements } from 'utils/achievements';\r\nimport { getRankImg } from 'utils/exp';\r\n\r\n// code\r\nconst MIN_GRAPH_HEIGHT = undefined;\r\n\r\nconst profileSelector = profileSelectorCreator('id');\r\n\r\nexport const otherPlayersSelector = createSelector(\r\n  (state) => state.results.players,\r\n  (state, props) => _.toNumber(props.match.params.id),\r\n  (players, id) =>\r\n    _.flow(\r\n      _.toPairs,\r\n      _.map(([ind, { nickname, arcade_name, id }]) => ({\r\n        label: `${nickname} (${arcade_name})`,\r\n        value: nickname,\r\n        id: _.toNumber(id),\r\n      })),\r\n      _.remove((it) => it.id === id),\r\n      _.sortBy((it) => _.toLower(it.label))\r\n    )(players)\r\n);\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    profile: profileSelector(state, props),\r\n    otherPlayers: otherPlayersSelector(state, props),\r\n    tracklist: state.tracklist.data,\r\n    filter: state.profiles.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    sharedCharts: state.results.sharedCharts,\r\n    isLoading:\r\n      state.results.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setProfilesFilter,\r\n  resetProfilesFilter,\r\n};\r\n\r\nclass Profile extends Component {\r\n  static propTypes = {\r\n    profile: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    profile: {},\r\n  };\r\n\r\n  state = {\r\n    isLevelGraphCombined: true,\r\n    showFaq: false,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetProfilesFilter();\r\n  }\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onChangeDayRange = (range) => {\r\n    const { filter } = this.props;\r\n    this.props.setProfilesFilter({\r\n      ...filter,\r\n      dayRange: range,\r\n    });\r\n  };\r\n\r\n  onShowFaq = () => {\r\n    this.setState({ showFaq: true });\r\n  };\r\n\r\n  onHideFaq = () => {\r\n    this.setState({ showFaq: false });\r\n  };\r\n\r\n  renderRankingHistory() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={profile.ratingChanges} margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={(value) => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={['dataMin - 100', 'dataMax + 100']}\r\n            tickFormatter={Math.round}\r\n            width={40}\r\n          />\r\n          <ReferenceLine y={1000} stroke=\"white\" />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Rating: {Math.round(payload[0].value)}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  circleShape = (args) => (\r\n    <circle key={args.key} cx={args.cx} cy={args.cy} r={4} fill={args.fill}></circle>\r\n  );\r\n  renderAccuracyPoints(interpolated = false) {\r\n    const { profile, sharedCharts } = this.props;\r\n    const pointsByType = _.groupBy(([, , chartId]) => {\r\n      const type = sharedCharts[chartId].chartType;\r\n      return type === 'D' || type === 'DP';\r\n    }, profile.accuracyPointsRaw);\r\n    if (!interpolated) {\r\n      return (\r\n        <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n          <ScatterChart margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis\r\n              dataKey=\"[0]\"\r\n              type=\"number\"\r\n              domain={[1, 28]}\r\n              tickFormatter={(value) => Math.round(value)}\r\n              ticks={[1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27]}\r\n            />\r\n            <YAxis\r\n              dataKey=\"[1]\"\r\n              type=\"number\"\r\n              domain={[0, 100]}\r\n              width={40}\r\n              tickFormatter={(value) => Math.round(value) + '%'}\r\n            />\r\n            <Scatter data={pointsByType.true} shape={this.circleShape} fill=\"#169c16\" />\r\n            <Scatter data={pointsByType.false} shape={this.circleShape} fill=\"#af2928\" />\r\n            <RechartsTooltip\r\n              isAnimationActive={false}\r\n              content={({ active, payload, label }) => {\r\n                if (!payload || !payload[0] || !payload[1]) {\r\n                  return null;\r\n                }\r\n                const chart = payload[0].payload[2] && sharedCharts[payload[0].payload[2]];\r\n                return (\r\n                  <div className=\"history-tooltip\">\r\n                    <div>Level: {payload[0].value}</div>\r\n                    <div>Accuracy: {payload[1].value}%</div>\r\n                    {chart && (\r\n                      <div>\r\n                        {chart.song} {chart.chartLabel} ({chart.interpolatedDifficulty.toFixed(1)})\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                );\r\n              }}\r\n            />\r\n          </ScatterChart>\r\n        </ResponsiveContainer>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"[0]\"\r\n            type=\"number\"\r\n            domain={[1, 28]}\r\n            tickFormatter={(value) => Math.round(value)}\r\n          />\r\n          <YAxis domain={[0, 100]} width={40} />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{payload[0].payload[0]}</div>\r\n                  {payload && payload[0] && <div>Acc: #{payload[0].value}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            data={profile.accuracyPointsInterpolated}\r\n            isAnimationActive={false}\r\n            dataKey=\"[1]\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderPlaceHistory() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={profile.placesChanges} margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={(value) => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={[1, (dataMax) => (dataMax < 3 ? dataMax + 2 : dataMax + 1)]}\r\n            interval={0}\r\n            reversed\r\n            width={40}\r\n          />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload && payload[0] && <div>Place: #{payload[0].value}</div>}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGrades() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <BarChart\r\n          data={profile.gradesDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {_.filter((item) => item.value > 0, payload).map((item) => (\r\n                    <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                      {item.name}: {payload[0].payload.gradesValues[item.name]}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            domain={[0, 100]}\r\n            ticks={[0, 50, 100]}\r\n            tickFormatter={(x) => `${Math.round(x)}%`}\r\n            width={40}\r\n          />\r\n          <Legend />\r\n          <Bar dataKey=\"SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"F\" fill=\"#774949\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradesWithLevels() {\r\n    const { profile, tracklist } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={0.74}>\r\n        <BarChart\r\n          data={profile.gradesAndLevelsDistribution}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n          stackOffset=\"sign\"\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              const doubleItems = _.filter(\r\n                (item) => item.value !== 0 && item.dataKey.startsWith('D'),\r\n                payload\r\n              );\r\n              const singleItems = _.filter(\r\n                (item) => item.value !== 0 && item.dataKey.startsWith('S'),\r\n                payload\r\n              );\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {!!singleItems.length && (\r\n                    <>\r\n                      <div>Single:</div>\r\n                      {singleItems.map((item) => (\r\n                        <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                          {item.name.slice(2)}: {Math.round(Math.abs(item.value))}% (\r\n                          {Math.round((tracklist.singlesLevels[item.payload.x] * item.value) / 100)}\r\n                          /{tracklist.singlesLevels[item.payload.x]})\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                  {!!doubleItems.length && (\r\n                    <>\r\n                      <div>Double:</div>\r\n                      {doubleItems.map((item) => (\r\n                        <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n                          {item.name.slice(2)}: {Math.round(Math.abs(item.value))}% (\r\n                          {Math.round(\r\n                            (tracklist.doublesLevels[item.payload.x] * -item.value) / 100\r\n                          )}\r\n                          /{tracklist.doublesLevels[item.payload.x]})\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            tickFormatter={(x) => `${Math.round(Math.abs(x))}%`}\r\n            width={40}\r\n            domain={[(dataMin) => Math.min(dataMin, -10), (dataMax) => Math.max(10, dataMax)]}\r\n          />\r\n          <Bar dataKey=\"S-SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S-F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-SSS\" fill=\"#ffd700\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-SS\" fill=\"#dab800\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-S\" fill=\"#b19500\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-A+\" fill=\"#396eef\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-A\" fill=\"#828fb7\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-B\" fill=\"#7a6490\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-C\" fill=\"#6d5684\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-D\" fill=\"#5d4e6d\" stackId=\"stack\" />\r\n          <Bar dataKey=\"D-F\" fill=\"#774949\" stackId=\"stack\" />\r\n          <Label value=\"Double\" offset={0} position=\"insideBottomLeft\" />\r\n          <Label value=\"Single\" offset={0} position=\"insideTopLeft\" />\r\n          <ReferenceLine y={0} stroke=\"#bbb\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderLevels() {\r\n    const { profile, tracklist } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <BarChart\r\n          data={profile.levelsDistribution}\r\n          stackOffset=\"sign\"\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              const totalD = tracklist.doublesLevels[payload[0].payload.x];\r\n              const totalS = tracklist.singlesLevels[payload[0].payload.x];\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>Level: {payload[0].payload.x}</div>\r\n                  {totalS > 0 && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n                      Single: {Math.abs(payload[1].value).toFixed(1)}% (\r\n                      {Math.round((payload[1].value * totalS) / 100)}/{totalS})\r\n                    </div>\r\n                  )}\r\n                  {totalD > 0 && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n                      Double: {Math.abs(payload[0].value).toFixed(1)}% (\r\n                      {Math.round((Math.abs(payload[0].value) * totalD) / 100)}/{totalD})\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis\r\n            tickFormatter={(x) => Math.round(Math.abs(x)) + '%'}\r\n            width={40}\r\n            domain={[(dataMin) => Math.min(dataMin, -10), (dataMax) => Math.max(10, dataMax)]}\r\n          />\r\n          <RechartsTooltip />\r\n          <ReferenceLine y={0} stroke=\"#555\" />\r\n          <Legend />\r\n          <Bar dataKey=\"D\" fill=\"#169c16\" stackId=\"stack\" />\r\n          <Bar dataKey=\"S\" fill=\"#af2928\" stackId=\"stack\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderGradeBlock(type, grade) {\r\n    const { profile } = this.props;\r\n    const obj = profile.progress[type];\r\n    const typeLetter = type === 'double' ? 'D' : 'S';\r\n    const progr = Math.floor((obj[`${grade}-bonus-level-coef`] || 0) * 100);\r\n    const minNumber = obj[`${grade}-bonus-level-min-number`];\r\n    const currentNumber = obj[`${grade}-bonus-level-achieved-number`];\r\n    const levelString = obj[`${grade}-bonus-level`]\r\n      ? `${typeLetter}${obj[`${grade}-bonus-level`]}`\r\n      : '?';\r\n    return (\r\n      <div className=\"grade-block\">\r\n        <div className=\"grade-letter\">\r\n          <img src={`${process.env.PUBLIC_URL}/grades/${grade}.png`} alt={grade} />\r\n        </div>\r\n        <div className=\"grade-level\">{levelString}</div>\r\n        <div className=\"grade-progress\">\r\n          {progr}% ({progr === 100 ? minNumber : currentNumber}/{minNumber})\r\n        </div>\r\n        <div\r\n          className={classNames('progress-background', {\r\n            complete: progr === 100,\r\n            zero: progr === 0,\r\n          })}\r\n          style={{\r\n            height: `${progr}%`,\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderAchievement(achName, achievement) {\r\n    const Icon = achievements[achName].icon;\r\n    const description = achievements[achName].description;\r\n    return (\r\n      <Tooltip\r\n        key={achName}\r\n        content={<div>{description}</div>}\r\n        tooltipClassName=\"pumpking-tooltip achievement-tooltip\"\r\n      >\r\n        <div className=\"ach-block\">\r\n          {Icon && (\r\n            <div className=\"ach-icon\">\r\n              <Icon />\r\n            </div>\r\n          )}\r\n          <div className=\"ach-name\">{achName}</div>\r\n          <div\r\n            className={classNames('progress-background', {\r\n              complete: achievement.progress === 100,\r\n              zero: achievement.progress === 0,\r\n            })}\r\n            style={{\r\n              height: `${Math.round(achievement.progress)}%`,\r\n            }}\r\n          />\r\n        </div>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  renderProfile() {\r\n    const { profile, otherPlayers, filter } = this.props;\r\n    const { isLevelGraphCombined } = this.state;\r\n    const expProgress = profile.expRankNext\r\n      ? (profile.exp - profile.expRank.threshold) /\r\n        (profile.expRankNext.threshold - profile.expRank.threshold)\r\n      : 100;\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"profile-header\">\r\n          <div className=\"profile-name text-with-header\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile.lastResultDate ? getTimeAgo(profile.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n          <div className=\"_flex-fill\"></div>\r\n          <div className=\"text-with-header -select\">\r\n            <div className=\"text-header\">сравнить с</div>\r\n            <div>\r\n              <Select\r\n                closeMenuOnSelect\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                options={otherPlayers}\r\n                onChange={(value) => {\r\n                  this.props.history.push(\r\n                    routes.profile.compare.getPath({ id: profile.id, compareToId: value.id })\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header _flex-row _align-center\">\r\n            <span>опыт</span>\r\n            <div className=\"_flex-fill\" />\r\n            <div onClick={this.onShowFaq} className=\"_clickable\">\r\n              <FaQuestionCircle onClick={this.onShowFaq} />\r\n            </div>\r\n            <ReactModal\r\n              ariaHideApp={false}\r\n              className=\"Modal faq-modal\"\r\n              overlayClassName=\"Overlay\"\r\n              isOpen={this.state.showFaq}\r\n              onRequestClose={this.onHideFaq}\r\n            >\r\n              <div className=\"close-btn\" onClick={this.onHideFaq}>\r\n                <FaTimes />\r\n              </div>{' '}\r\n              <ExpFaq />\r\n            </ReactModal>\r\n          </div>\r\n          <div className=\"exp-range\">\r\n            <div className=\"rank exp-rank\">\r\n              {getRankImg(profile.expRank)}\r\n              {profile.expRank && <div>{profile.expRank.threshold}</div>}\r\n            </div>\r\n            <div className=\"exp-line-with-label\">\r\n              <div className=\"exp-label\">\r\n                {profile.expRankNext ? (\r\n                  <>\r\n                    <span className=\"taken-num\">\r\n                      {Math.round(profile.exp - profile.expRank.threshold)}\r\n                    </span>\r\n                    {` / ${profile.expRankNext.threshold - profile.expRank.threshold}`}\r\n                  </>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"exp-line\">\r\n                <div className=\"taken\" style={{ width: Math.floor(100 * expProgress) + '%' }}></div>\r\n                <div\r\n                  className=\"rest\"\r\n                  style={{ width: 100 - Math.ceil(100 * expProgress) + '%' }}\r\n                ></div>\r\n              </div>\r\n              <div className=\"exp-label\">\r\n                total: <span className=\"taken-num\">{Math.round(profile.exp)}</span>\r\n              </div>\r\n            </div>\r\n            {profile.expRankNext && (\r\n              <div className=\"rank exp-rank\">\r\n                {getRankImg(profile.expRankNext)}\r\n                {profile.expRankNext && <div>{profile.expRankNext.threshold}</div>}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              {!isLevelGraphCombined ? (\r\n                <>\r\n                  <div className=\"profile-section-2\">\r\n                    <div className=\"profile-sm-section-header flex\">\r\n                      <span>уровни</span>\r\n                      <div className=\"toggle-holder\">\r\n                        <Toggle\r\n                          className=\"combine-toggle\"\r\n                          checked={isLevelGraphCombined}\r\n                          onChange={() =>\r\n                            this.setState((state) => ({\r\n                              isLevelGraphCombined: !state.isLevelGraphCombined,\r\n                            }))\r\n                          }\r\n                        >\r\n                          объединить графики\r\n                        </Toggle>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"chart-container\">{this.renderLevels()}</div>\r\n                  </div>\r\n                  <div className=\"profile-section-2\">\r\n                    <div className=\"profile-sm-section-header\">\r\n                      <span>оценки</span>\r\n                    </div>\r\n                    <div className=\"chart-container\">{this.renderGrades()}</div>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div className=\"profile-section-2\">\r\n                  <div className=\"profile-sm-section-header flex\">\r\n                    <span>оценки</span>\r\n                    <div className=\"toggle-holder\">\r\n                      <Toggle\r\n                        className=\"combine-toggle\"\r\n                        checked={isLevelGraphCombined}\r\n                        onChange={() =>\r\n                          this.setState((state) => ({\r\n                            isLevelGraphCombined: !state.isLevelGraphCombined,\r\n                          }))\r\n                        }\r\n                      >\r\n                        объединить графики\r\n                      </Toggle>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"chart-container single-double-labels\">\r\n                    {this.renderGradesWithLevels()}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>эло</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderRankingHistory()}</div>\r\n                {/* <div className=\"chart-container\">{this.renderAccuracyPoints()}</div> */}\r\n              </div>\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>место в топе</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderPlaceHistory()}</div>\r\n                {/* <div className=\"chart-container\">{this.renderAccuracyPoints(true)}</div> */}\r\n              </div>\r\n            </div>\r\n            {(() => {\r\n              const currentRange = filter.dayRange || profile.filterRange;\r\n              const dateL = moment(currentRange[0] * 1000 * 60 * 60 * 24).format('L');\r\n              const dateR = moment(currentRange[1] * 1000 * 60 * 60 * 24).format('L');\r\n              const l1 = Math.max(currentRange[0] - 1, profile.minMaxRange[0]);\r\n              const l2 = Math.min(currentRange[0] + 1, currentRange[1]);\r\n              const r1 = Math.max(currentRange[1] - 1, currentRange[0]);\r\n              const r2 = Math.min(currentRange[1] + 1, profile.minMaxRange[1]);\r\n              return (\r\n                <div className=\"range-container\">\r\n                  <Range\r\n                    range={currentRange}\r\n                    min={profile.minMaxRange[0]}\r\n                    max={profile.minMaxRange[1]}\r\n                    onChange={this.onChangeDayRange}\r\n                  />\r\n                  <div className=\"range-controls _flex-row\">\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l1, currentRange[1]])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateL}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l2, currentRange[1]])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                    <div className=\"_flex-fill\"></div>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r1])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateR}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r2])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })()}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>точность по уровням</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderAccuracyPoints()}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\"></div>\r\n        </div>\r\n        <div className=\"profile-section progress-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>достижения по уровням</span>\r\n          </div>\r\n          <div className=\"progress-blocks-single-double\">\r\n            <div className=\"progress-block\">\r\n              <div className=\"achievements-grades single\">\r\n                {this.renderGradeBlock('single', 'A')}\r\n                {this.renderGradeBlock('single', 'A+')}\r\n                {this.renderGradeBlock('single', 'S')}\r\n                {this.renderGradeBlock('single', 'SS')}\r\n              </div>\r\n            </div>\r\n            <div className=\"progress-block\">\r\n              <div className=\"achievements-grades double\">\r\n                {this.renderGradeBlock('double', 'A')}\r\n                {this.renderGradeBlock('double', 'A+')}\r\n                {this.renderGradeBlock('double', 'S')}\r\n                {this.renderGradeBlock('double', 'SS')}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"bonus-faq\">\r\n            * для получения ачивки нужно сыграть около 10% всех чартов данного левела на нужный\r\n            грейд\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>достижения</span>\r\n          </div>\r\n          <div className=\"achievements\">\r\n            {_.keys(profile.achievements).map((achName) =>\r\n              this.renderAchievement(achName, profile.achievements[achName])\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section\">\r\n          <div className=\"profile-sm-section-header\">\r\n            <span>часто играемые чарты</span>\r\n          </div>\r\n          <MostPlayed playerId={profile.id} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, profile, error } = this.props;\r\n    DEBUG && console.log('profile:', profile);\r\n    return (\r\n      <div className=\"profile-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"btn btn-sm btn-dark btn-icon\"\r\n              onClick={this.onRefresh}\r\n            >\r\n              <FaSearch /> обновить\r\n            </button>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!isLoading && _.isEmpty(profile) && <div className=\"profile\">Profile not found</div>}\r\n          {!isLoading && !_.isEmpty(profile) && this.renderProfile()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Profile));\r\n","import React, { Component } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FaSearch, FaCaretLeft, FaCaretRight } from 'react-icons/fa';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport Select from 'react-select';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as RechartsTooltip,\r\n  ReferenceLine,\r\n  CartesianGrid,\r\n  Line,\r\n  ResponsiveContainer,\r\n  ScatterChart,\r\n  Scatter,\r\n} from 'recharts';\r\nimport _ from 'lodash/fp';\r\nimport memoize from 'lru-memoize';\r\n\r\n// styles\r\nimport './profile-compare.scss';\r\n\r\n// constants\r\nimport { DEBUG } from 'constants/env';\r\nimport { routes } from 'constants/routes';\r\n\r\n// components\r\nimport ToggleButton from 'components/Shared/ToggleButton/ToggleButton';\r\nimport Toggle from 'components/Shared/Toggle/Toggle';\r\nimport Loader from 'components/Shared/Loader';\r\nimport Range from 'components/Shared/Range';\r\n\r\n// reducers\r\nimport { fetchResults } from 'reducers/results';\r\nimport { setProfilesFilter, resetProfilesFilter } from 'reducers/profiles';\r\n\r\n// utils\r\nimport { profileSelectorCreator } from 'utils/profiles';\r\nimport { parseDate } from 'utils/date';\r\nimport { getTimeAgo } from 'utils/leaderboards';\r\nimport { otherPlayersSelector } from 'components/Profile/Profile';\r\n\r\n// code\r\nconst BARS_MODES = {\r\n  SINGLE_TWO: 'SINGLE_TWO',\r\n  SINGLE_FIVE: 'SINGLE_FIVE',\r\n  DOUBLE_TWO: 'DOUBLE_TWO',\r\n  DOUBLE_FIVE: 'DOUBLE_FIVE',\r\n  BOTH_TWO: 'BOTH_TWO',\r\n  BOTH_FIVE: 'BOTH_FIVE',\r\n};\r\nconst getCompareBars = (mode) => {\r\n  switch (mode) {\r\n    case BARS_MODES.SINGLE_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"single.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"single.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.SINGLE_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"single.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar\r\n          key=\"2\"\r\n          dataKey=\"single.p2notPlayed\"\r\n          fill=\"#899db3\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"3\"\r\n          dataKey=\"single.notPlayed\"\r\n          fill=\"#70707060\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"4\"\r\n          dataKey=\"single.p1notPlayed\"\r\n          fill=\"#bfa988\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar key=\"5\" dataKey=\"single.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    case BARS_MODES.DOUBLE_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"double.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"double.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.DOUBLE_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"double.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar\r\n          key=\"2\"\r\n          dataKey=\"double.p2notPlayed\"\r\n          fill=\"#899db3\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"3\"\r\n          dataKey=\"double.notPlayed\"\r\n          fill=\"#70707060\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"4\"\r\n          dataKey=\"double.p1notPlayed\"\r\n          fill=\"#bfa988\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar key=\"5\" dataKey=\"double.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    case BARS_MODES.BOTH_TWO:\r\n      return [\r\n        <Bar\r\n          key=\"11\"\r\n          dataKey=\"all.twoBars.p1win\"\r\n          fill=\"#4696f0\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n        <Bar\r\n          key=\"22\"\r\n          dataKey=\"all.twoBars.p2win\"\r\n          fill=\"#eda338\"\r\n          stackId=\"stack\"\r\n          isAnimationActive\r\n        />,\r\n      ];\r\n    case BARS_MODES.BOTH_FIVE:\r\n      return [\r\n        <Bar key=\"1\" dataKey=\"all.p1win\" fill=\"#4696f0\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"2\" dataKey=\"all.p2notPlayed\" fill=\"#899db3\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"3\" dataKey=\"all.notPlayed\" fill=\"#70707060\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"4\" dataKey=\"all.p1notPlayed\" fill=\"#bfa988\" stackId=\"stack\" isAnimationActive />,\r\n        <Bar key=\"5\" dataKey=\"all.p2win\" fill=\"#eda338\" stackId=\"stack\" isAnimationActive />,\r\n      ];\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst MIN_GRAPH_HEIGHT = undefined;\r\n\r\nconst profile1Selector = profileSelectorCreator('id');\r\nconst profile2Selector = profileSelectorCreator('compareToId');\r\n\r\nconst getCombinedData = memoize()((p1, p2, tracklist) => {\r\n  if (!p1 || !p2) {\r\n    return {};\r\n  }\r\n  let rc1 = p1.ratingChanges[0].rating;\r\n  let rc2 = p2.ratingChanges[0].rating;\r\n  const allRC = _.flow(\r\n    _.sortBy('date'),\r\n    _.map((item) => {\r\n      if (item.rating) {\r\n        rc1 = item.rating;\r\n      }\r\n      if (item.rating2) {\r\n        rc2 = item.rating2;\r\n      }\r\n      return {\r\n        rating1: rc1,\r\n        rating2: rc2,\r\n        date: item.date,\r\n      };\r\n    }),\r\n    _.sortedUniqBy('date')\r\n  )([\r\n    ...p1.ratingChanges,\r\n    ...p2.ratingChanges.map((it) => ({ date: it.date, rating2: it.rating })),\r\n  ]);\r\n\r\n  rc1 = p1.placesChanges[0].place;\r\n  rc2 = p2.placesChanges[0].place;\r\n  const allPC = _.flow(\r\n    _.sortBy('date'),\r\n    _.map((item) => {\r\n      if (item.place) {\r\n        rc1 = item.place;\r\n      }\r\n      if (item.place2) {\r\n        rc2 = item.place2;\r\n      }\r\n      return {\r\n        place1: rc1,\r\n        place2: rc2,\r\n        date: item.date,\r\n      };\r\n    })\r\n  )([...p1.placesChanges, ...p2.placesChanges.map((it) => ({ date: it.date, place2: it.place }))]);\r\n\r\n  const perLevelComparison = _.fromPairs(Array.from({ length: 28 }).map((x, i) => [i + 1, {}]));\r\n  _.keys(perLevelComparison).forEach((level) => {\r\n    const charts = _.flow(\r\n      _.map('chart'),\r\n      _.uniqBy('sharedChartId')\r\n    )([...p1.resultsByLevel[level], ...p2.resultsByLevel[level]]);\r\n    const data = {\r\n      x: level,\r\n      all: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        // notPlayedHalf: 0,\r\n        twoBars: {},\r\n      },\r\n      double: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        twoBars: {},\r\n      },\r\n      single: {\r\n        p1win: 0,\r\n        p1notPlayed: 0,\r\n        p2win: 0,\r\n        p2notPlayed: 0,\r\n        notPlayed: 0,\r\n        twoBars: {},\r\n      },\r\n    };\r\n    charts.forEach((chart) => {\r\n      const p1index = chart.results.findIndex((r) => r.playerId === p1.id);\r\n      const p2index = chart.results.findIndex((r) => r.playerId === p2.id);\r\n      const perType = chart.chartType.startsWith('D') ? data.double : data.single;\r\n      if (p1index < 0 && p2index < 0) {\r\n        console.log('wtf?');\r\n      } else if (p1index < 0) {\r\n        data.all.p1notPlayed++;\r\n        perType.p1notPlayed++;\r\n      } else if (p2index < 0) {\r\n        data.all.p2notPlayed++;\r\n        perType.p2notPlayed++;\r\n      } else if (p1index < p2index) {\r\n        data.all.p1win++;\r\n        perType.p1win++;\r\n      } else if (p2index < p1index) {\r\n        data.all.p2win++;\r\n        perType.p2win++;\r\n      }\r\n    });\r\n\r\n    const normalizeTwo = (dataObj) => {\r\n      const totalPlayed = dataObj.p1win + dataObj.p2win || 1; // in case of divide by 0\r\n      dataObj.twoBars.p1win = dataObj.p1win / totalPlayed;\r\n      dataObj.twoBars.p2win = dataObj.p2win / totalPlayed;\r\n    };\r\n    normalizeTwo(data.all);\r\n    normalizeTwo(data.single);\r\n    normalizeTwo(data.double);\r\n\r\n    const normalizeFive = (dataObj, total) => {\r\n      dataObj.p1win = dataObj.p1win / total;\r\n      dataObj.p1notPlayed = dataObj.p1notPlayed / total;\r\n      dataObj.p2win = dataObj.p2win / total;\r\n      dataObj.p2notPlayed = dataObj.p2notPlayed / total;\r\n      dataObj.notPlayed =\r\n        1 - dataObj.p1win - dataObj.p1notPlayed - dataObj.p2win - dataObj.p2notPlayed;\r\n      // dataObj.notPlayedHalf = dataObj.notPlayed / 2;\r\n    };\r\n    normalizeFive(data.all, tracklist.chartLevels[level]);\r\n    normalizeFive(data.double, tracklist.doublesLevels[level]);\r\n    normalizeFive(data.single, tracklist.singlesLevels[level]);\r\n\r\n    perLevelComparison[level] = data;\r\n  });\r\n\r\n  return {\r\n    ratingChanges: allRC,\r\n    placesChanges: allPC,\r\n    perLevelComparison: _.values(perLevelComparison),\r\n  };\r\n});\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const profile1 = profile1Selector(state, props);\r\n  const profile2 = profile2Selector(state, props);\r\n  return {\r\n    profile: profile1,\r\n    profile2,\r\n    otherPlayers: otherPlayersSelector(state, props),\r\n    combinedData: getCombinedData(profile1, profile2, state.tracklist.data),\r\n    tracklist: state.tracklist.data,\r\n    filter: state.profiles.filter,\r\n    error: state.results.error || state.tracklist.error,\r\n    isLoading:\r\n      state.results.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchResults,\r\n  setProfilesFilter,\r\n  resetProfilesFilter,\r\n};\r\n\r\nclass ProfileCompare extends Component {\r\n  static propTypes = {\r\n    profile: toBe.object,\r\n    error: toBe.object,\r\n    isLoading: toBe.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    profile: {},\r\n    profile2: {},\r\n    combinedData: {},\r\n  };\r\n\r\n  state = {\r\n    isLevelGraphCombined: true,\r\n    compareBarsMode: BARS_MODES.BOTH_TWO,\r\n  };\r\n\r\n  onRefresh = () => {\r\n    const { isLoading } = this.props;\r\n    !isLoading && this.props.fetchResults();\r\n  };\r\n\r\n  onChangeDayRange = (range) => {\r\n    const { filter } = this.props;\r\n    this.props.setProfilesFilter({\r\n      ...filter,\r\n      dayRange: range,\r\n    });\r\n  };\r\n\r\n  rhMargin = { top: 5, bottom: 5, right: 5, left: 0 };\r\n  rhXDomain = ['dataMin', 'dataMax'];\r\n  rhYDomain = ['dataMin - 100', 'dataMax + 100'];\r\n  rhXTickFormatter = (value) => parseDate(value).toLocaleDateString();\r\n  rhTooltip = ({ active, payload, label }) => {\r\n    const { profile, profile2 } = this.props;\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n    if (!payload || !payload[0]) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"history-tooltip\">\r\n        <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n        {payload[1] && (\r\n          <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n            {p1Name}: {Math.round(payload[1].value)}\r\n          </div>\r\n        )}\r\n        {payload[0] && (\r\n          <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n            {p2Name}: {Math.round(payload[0].value)}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderRankingHistory() {\r\n    const { combinedData } = this.props;\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart data={combinedData.ratingChanges} margin={this.rhMargin}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={this.rhXDomain}\r\n            tickFormatter={this.rhXTickFormatter}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={this.rhYDomain}\r\n            tickFormatter={Math.round}\r\n            width={40}\r\n          />\r\n          <ReferenceLine y={1000} stroke=\"white\" />\r\n          <RechartsTooltip isAnimationActive={false} content={this.rhTooltip} />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating2\"\r\n            stroke=\"#ffd388\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            isAnimationActive={false}\r\n            dataKey=\"rating1\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  circleShape = (args) => (\r\n    <circle key={args.key} cx={args.cx} cy={args.cy} r={4} fill={args.fill}></circle>\r\n  );\r\n  renderAccuracyPoints(useProfile2 = false) {\r\n    const { profile, profile2 } = this.props;\r\n\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <ScatterChart margin={{ top: 5, bottom: 5, right: 5, left: 0 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"[0]\"\r\n            type=\"number\"\r\n            domain={[1, 28]}\r\n            tickFormatter={(value) => Math.round(value)}\r\n            ticks={[1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27]}\r\n          />\r\n          <YAxis\r\n            dataKey=\"[1]\"\r\n            type=\"number\"\r\n            domain={[0, 100]}\r\n            width={40}\r\n            tickFormatter={(value) => Math.round(value) + '%'}\r\n          />\r\n          <Scatter\r\n            shape={this.circleShape}\r\n            data={(useProfile2 ? profile2 : profile).accuracyPointsRaw}\r\n            fill={useProfile2 ? '#ffd388' : '#88d3ff'}\r\n          />\r\n        </ScatterChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderPlaceHistory() {\r\n    const { combinedData, profile, profile2 } = this.props;\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n\r\n    return (\r\n      <ResponsiveContainer minHeight={MIN_GRAPH_HEIGHT} aspect={1.6}>\r\n        <LineChart\r\n          data={combinedData.placesChanges}\r\n          margin={{ top: 5, bottom: 5, right: 5, left: 0 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            type=\"number\"\r\n            domain={['dataMin', 'dataMax']}\r\n            tickFormatter={(value) => parseDate(value).toLocaleDateString()}\r\n          />\r\n          <YAxis\r\n            allowDecimals={false}\r\n            domain={[1, (dataMax) => (dataMax < 3 ? dataMax + 2 : dataMax + 1)]}\r\n            interval={0}\r\n            reversed\r\n            width={40}\r\n          />\r\n          <RechartsTooltip\r\n            isAnimationActive={false}\r\n            content={({ active, payload, label }) => {\r\n              if (!payload || !payload[0]) {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"history-tooltip\">\r\n                  <div>{parseDate(payload[0].payload.date).toLocaleDateString()}</div>\r\n                  {payload[1] && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[1].color }}>\r\n                      {p1Name}: #{payload[1].value}\r\n                    </div>\r\n                  )}\r\n                  {payload[0] && (\r\n                    <div style={{ fontWeight: 'bold', color: payload[0].color }}>\r\n                      {p2Name}: #{payload[0].value}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place2\"\r\n            stroke=\"#ffd388\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"stepAfter\"\r\n            dataKey=\"place1\"\r\n            stroke=\"#88d3ff\"\r\n            strokeWidth={3}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  plcMargin = { top: 5, bottom: 5, right: 5, left: 0 };\r\n  plcTooltip = ({ active, payload, label }) => {\r\n    const { profile, profile2 } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n    const isTwo = [BARS_MODES.SINGLE_TWO, BARS_MODES.DOUBLE_TWO, BARS_MODES.BOTH_TWO].includes(\r\n      compareBarsMode\r\n    );\r\n    const p1Name = profile.name;\r\n    const p2Name = profile2.name;\r\n\r\n    if (!payload || !payload[0]) {\r\n      return null;\r\n    }\r\n    const renderLegendItem = (item, label) => (\r\n      <div key={item.name} style={{ fontWeight: 'bold', color: item.color }}>\r\n        {label}: {Math.round(_.get(item.dataKey, item.payload) * 100)}%\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"history-tooltip\">\r\n        <div>Level: {payload[0].payload.x}</div>\r\n        {renderLegendItem(payload[0], `${p1Name} wins`)}\r\n        {!isTwo && renderLegendItem(payload[1], `${p2Name} has no score`)}\r\n        {!isTwo && renderLegendItem(payload[2], `Both have no score`)}\r\n        {!isTwo && renderLegendItem(payload[3], `${p1Name} has no score`)}\r\n        {renderLegendItem(isTwo ? payload[1] : payload[4], `${p2Name} wins`)}\r\n      </div>\r\n    );\r\n  };\r\n  plcXDomain = [0, 1];\r\n  plcXTicks = [0, 0.5, 1];\r\n  plcXFormatter = (x) => `${Math.round(x * 100)}%`;\r\n\r\n  renderPerLevelComparison() {\r\n    const { combinedData } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" aspect={0.7}>\r\n        <BarChart\r\n          layout=\"vertical\"\r\n          data={[...combinedData.perLevelComparison]}\r\n          margin={this.plcMargin}\r\n        >\r\n          <RechartsTooltip isAnimationActive={false} content={this.plcTooltip} />\r\n          <YAxis reversed dataKey=\"x\" type=\"category\" width={23} />\r\n          <XAxis\r\n            type=\"number\"\r\n            domain={this.plcXDomain}\r\n            ticks={this.plcXTicks}\r\n            tickFormatter={this.plcXFormatter}\r\n          />\r\n          <ReferenceLine x={0.5} stroke=\"#666\" />\r\n          {getCompareBars(compareBarsMode)}\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  renderProfile() {\r\n    const { profile, profile2, filter, otherPlayers } = this.props;\r\n    const { compareBarsMode } = this.state;\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"profile-header\">\r\n          <div className=\"profile-name text-with-header blue\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile.lastResultDate ? getTimeAgo(profile.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n          <div className=\"_flex-fill\"></div>\r\n          <div className=\"text-with-header -select\">\r\n            <div className=\"text-header\">сравнить с</div>\r\n            <div>\r\n              <Select\r\n                closeMenuOnSelect\r\n                className=\"select players\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"игроки...\"\r\n                options={otherPlayers}\r\n                onChange={(value) => {\r\n                  this.props.history.push(\r\n                    routes.profile.compare.getPath({ id: profile.id, compareToId: value.id })\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-header right-align\">\r\n          <div className=\"profile-name text-with-header orange\">\r\n            <div className=\"text-header\">игрок</div>\r\n            <div>{profile2.name}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">ранк</div>\r\n            <div>#{profile2.rank}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">эло</div>\r\n            <div>{profile2.rating}</div>\r\n          </div>\r\n          <div className=\"text-with-header\">\r\n            <div className=\"text-header\">последняя игра</div>\r\n            <div>{profile2.lastResultDate ? getTimeAgo(profile2.lastResultDate) : 'никогда'}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header flex\">\r\n                  <span>победы по уровням</span>\r\n                </div>\r\n                <div className=\"profile-sm-section-header flex\">\r\n                  {(() => {\r\n                    const isTwo = [\r\n                      BARS_MODES.SINGLE_TWO,\r\n                      BARS_MODES.DOUBLE_TWO,\r\n                      BARS_MODES.BOTH_TWO,\r\n                    ].includes(compareBarsMode);\r\n                    return (\r\n                      <div className=\"toggle-holder\">\r\n                        <Toggle\r\n                          className=\"combine-toggle\"\r\n                          checked={!isTwo}\r\n                          onChange={() =>\r\n                            this.setState((state) => ({\r\n                              compareBarsMode: {\r\n                                [BARS_MODES.SINGLE_TWO]: BARS_MODES.SINGLE_FIVE,\r\n                                [BARS_MODES.DOUBLE_TWO]: BARS_MODES.DOUBLE_FIVE,\r\n                                [BARS_MODES.BOTH_TWO]: BARS_MODES.BOTH_FIVE,\r\n                                [BARS_MODES.SINGLE_FIVE]: BARS_MODES.SINGLE_TWO,\r\n                                [BARS_MODES.DOUBLE_FIVE]: BARS_MODES.DOUBLE_TWO,\r\n                                [BARS_MODES.BOTH_FIVE]: BARS_MODES.BOTH_TWO,\r\n                              }[state.compareBarsMode],\r\n                            }))\r\n                          }\r\n                        >\r\n                          подробно\r\n                        </Toggle>\r\n                        <div className=\"tabs-holder\">\r\n                          <ToggleButton\r\n                            text=\"все\"\r\n                            active={[BARS_MODES.BOTH_TWO, BARS_MODES.BOTH_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={() => {\r\n                              this.setState((state) => ({\r\n                                compareBarsMode: isTwo ? BARS_MODES.BOTH_TWO : BARS_MODES.BOTH_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                          <ToggleButton\r\n                            text=\"синглы\"\r\n                            active={[BARS_MODES.SINGLE_TWO, BARS_MODES.SINGLE_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={(active) => {\r\n                              this.setState((state) => ({\r\n                                compareBarsMode: isTwo\r\n                                  ? BARS_MODES.SINGLE_TWO\r\n                                  : BARS_MODES.SINGLE_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                          <ToggleButton\r\n                            text=\"даблы\"\r\n                            active={[BARS_MODES.DOUBLE_TWO, BARS_MODES.DOUBLE_FIVE].includes(\r\n                              compareBarsMode\r\n                            )}\r\n                            onToggle={(active) => {\r\n                              this.setState((state) => ({\r\n                                compareBarsMode: isTwo\r\n                                  ? BARS_MODES.DOUBLE_TWO\r\n                                  : BARS_MODES.DOUBLE_FIVE,\r\n                              }));\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })()}\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderPerLevelComparison()}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>эло</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderRankingHistory()}</div>\r\n              </div>\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>место в топе</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderPlaceHistory()}</div>\r\n              </div>\r\n            </div>\r\n            {(() => {\r\n              const currentRange = filter.dayRange || profile.filterRange;\r\n              const dateL = moment(currentRange[0] * 1000 * 60 * 60 * 24).format('L');\r\n              const dateR = moment(currentRange[1] * 1000 * 60 * 60 * 24).format('L');\r\n              const l1 = Math.max(currentRange[0] - 1, profile.minMaxRange[0]);\r\n              const l2 = Math.min(currentRange[0] + 1, currentRange[1]);\r\n              const r1 = Math.max(currentRange[1] - 1, currentRange[0]);\r\n              const r2 = Math.min(currentRange[1] + 1, profile.minMaxRange[1]);\r\n              return (\r\n                <div className=\"range-container\">\r\n                  <Range\r\n                    range={currentRange}\r\n                    min={profile.minMaxRange[0]}\r\n                    max={profile.minMaxRange[1]}\r\n                    onChange={this.onChangeDayRange}\r\n                  />\r\n                  <div className=\"range-controls _flex-row\">\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l1, currentRange[1]])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateL}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([l2, currentRange[1]])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                    <div className=\"_flex-fill\"></div>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r1])}\r\n                    >\r\n                      <FaCaretLeft />\r\n                    </button>\r\n                    <span className=\"date-text\">{dateR}</span>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark\"\r\n                      onClick={() => this.onChangeDayRange([currentRange[0], r2])}\r\n                    >\r\n                      <FaCaretRight />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })()}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-section-horizontal-container\">\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>точность по уровням</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderAccuracyPoints()}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-section\">\r\n            <div className=\"profile-section-content\">\r\n              <div className=\"profile-section-2\">\r\n                <div className=\"profile-sm-section-header\">\r\n                  <span>точность по уровням</span>\r\n                </div>\r\n                <div className=\"chart-container\">{this.renderAccuracyPoints(true)}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, profile, error } = this.props;\r\n    DEBUG && console.log('profile:', profile);\r\n    return (\r\n      <div className=\"profile-compare-page\">\r\n        <div className=\"content\">\r\n          {error && error.message}\r\n          <div className=\"top-controls\">\r\n            <div className=\"_flex-fill\" />\r\n            <button\r\n              disabled={isLoading}\r\n              className=\"btn btn-sm btn-dark btn-icon\"\r\n              onClick={this.onRefresh}\r\n            >\r\n              <FaSearch /> обновить\r\n            </button>\r\n          </div>\r\n          {isLoading && <Loader />}\r\n          {!isLoading && _.isEmpty(profile) && <div className=\"profile\">Profile not found</div>}\r\n          {!isLoading && !_.isEmpty(profile) && this.renderProfile()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProfileCompare));\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\nimport { RESET } from './resetAction';\r\n\r\nconst LOADING = `USER/LOADING`;\r\nconst SUCCESS = `USER/SUCCESS`;\r\nconst ERROR = `USER/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        data: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: null,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    case RESET:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchUser = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/profile` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport { resetUser } from './resetAction';\r\n","import cookies from 'browser-cookies';\r\n\r\nimport { postJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport { fetchUser, resetUser } from 'reducers/user';\r\n\r\nconst LOADING = `LOGIN/LOADING`;\r\nconst SUCCESS = `LOGIN/SUCCESS`;\r\nconst ERROR = `LOGIN/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n  error: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        data: null,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n        data: null,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const login = googleResponse => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(\r\n        postJson({\r\n          url: `${HOST}/login/google`,\r\n          body: { token: googleResponse.tokenId },\r\n        })\r\n      );\r\n      cookies.set('session', data.session, { expires: 30 });\r\n      dispatch({ type: SUCCESS, data });\r\n      dispatch(fetchUser());\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    dispatch(resetUser());\r\n    try {\r\n      const data = await dispatch(\r\n        postJson({\r\n          url: `${HOST}/logout`,\r\n        })\r\n      );\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './top-bar.scss';\r\n\r\n// routes\r\nimport { routes } from 'constants/routes';\r\n\r\n// reducers\r\nimport * as loginACs from 'reducers/login';\r\n\r\n// redux\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoadingLogin: state.login.isLoading,\r\n    isLoadingUser: state.user.isLoading,\r\n    user: state.user.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login: loginACs.login,\r\n  logout: loginACs.logout,\r\n};\r\n\r\nfunction TopBar({ isLoadingLogin, isLoadingUser, user, login, logout }) {\r\n  return (\r\n    <header className=\"top-bar\">\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <NavLink exact to={routes.leaderboard.path}>\r\n              leaderboards\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact to={routes.ranking.path}>\r\n              ranking\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact to={routes.songs.path}>\r\n              songs\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div className=\"_flex-fill\" />\r\n      <div className=\"login-container\">\r\n        <NavLink\r\n          className=\"player-info\"\r\n          exact\r\n          to={routes.profile.getPath({ id: _.get('player.id', user) })}\r\n        >\r\n          {_.getOr('', 'player.nickname', user)}\r\n        </NavLink>\r\n        <button\r\n          className=\"btn btn-dark btn-icon btn-sm\"\r\n          onClick={logout}\r\n          disabled={isLoadingLogin || isLoadingUser}\r\n        >\r\n          <span> logout</span>\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { FaGoogle } from 'react-icons/fa';\r\nimport Emoji from 'react-emoji-render';\r\n\r\nimport './login-screen.scss';\r\n\r\n// reducers\r\nimport * as loginACs from 'reducers/login';\r\n\r\n// redux\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoading: state.login.isLoading,\r\n    error: state.login.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login: loginACs.login,\r\n};\r\n\r\nfunction LoginScreen({ isLoading, error, login }) {\r\n  const [isClown, setClown] = useState(false);\r\n  const onGoogleResponse = res => {\r\n    if (res.error) {\r\n      console.log('Google login response error:', res);\r\n    } else {\r\n      login(res);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <div className=\"site-name\">pumpking</div>\r\n      <div className=\"login-button\">\r\n        <GoogleLogin\r\n          clientId=\"197132042723-cmibep21qf6dald9l2l01rif7l5dtd4s.apps.googleusercontent.com\"\r\n          buttonText=\"Login\"\r\n          onSuccess={onGoogleResponse}\r\n          onFailure={onGoogleResponse}\r\n          cookiePolicy={'single_host_origin'}\r\n          render={({ onClick, disabled }) => (\r\n            <button\r\n              className=\"btn btn-dark btn-icon btn-sm\"\r\n              onClick={onClick}\r\n              disabled={disabled || isLoading}\r\n            >\r\n              <FaGoogle />\r\n              <span> login</span>\r\n            </button>\r\n          )}\r\n        />\r\n      </div>\r\n      {error && <div className=\"error\">{error.message}</div>}\r\n      <div className=\"footer\">\r\n        By logging in, you agree to our{' '}\r\n        {isClown ? (\r\n          <Emoji text=\"🤡\" className=\"clown\" />\r\n        ) : (\r\n          <span onClick={() => setClown(true)} className=\"link-style\">\r\n            Privacy Policy\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginScreen);\r\n","export const TYPES = {\r\n  ACHIEVEMENT: 'ACHIEVEMENT',\r\n  RANK_UP: 'RANK_UP',\r\n};\r\n","import _ from 'lodash/fp';\r\n\r\nconst ADD_POPUP = `POPUPS/ADD`;\r\nconst REMOVE_POPUP = `POPUPS/REMOVE`;\r\n\r\nconst ID_PREFIX = 'popup';\r\n\r\nconst initialState = {\r\n  popups: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_POPUP:\r\n      const id = _.uniqueId(ID_PREFIX);\r\n      return {\r\n        ...state,\r\n        popups: [\r\n          ...state.popups,\r\n          {\r\n            id,\r\n            type: action.popupType,\r\n            ..._.pick(['parameters', 'fadeIn', 'fadeOut', 'timeout', 'persistent'], action),\r\n          },\r\n        ],\r\n      };\r\n    case REMOVE_POPUP:\r\n      return {\r\n        ...state,\r\n        popups: _.remove({ id: action.id }, state.popups),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addPopup = ({ type, parameters, fadeIn, fadeOut, timeout, persistent }) => {\r\n  return { type: ADD_POPUP, popupType: type, parameters, fadeIn, fadeOut, timeout, persistent };\r\n};\r\n\r\nexport const removePopup = ({ id }) => {\r\n  return { type: REMOVE_POPUP, id };\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { GiAchievement } from 'react-icons/gi';\r\nimport classNames from 'classnames';\r\n\r\nimport { achievements } from 'utils/achievements';\r\n\r\nconst renderAchievement = (achName, progress) => {\r\n  const Icon = achievements[achName].icon;\r\n  return (\r\n    <div className=\"ach-block\">\r\n      {Icon && (\r\n        <div className=\"ach-icon\">\r\n          <Icon />\r\n        </div>\r\n      )}\r\n      <div className=\"ach-name\">{achName}</div>\r\n      <div\r\n        className={classNames('progress-background', {\r\n          complete: progress === 100,\r\n          zero: progress === 0,\r\n        })}\r\n        style={{\r\n          height: `${Math.round(progress)}%`,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AchievementPopup = ({ playerName, achievementName, progress }) => {\r\n  const [progressNumber, setProgressNumber] = useState(progress[0]);\r\n\r\n  useEffect(() => {\r\n    setProgressNumber(progress[1]);\r\n  }, []); // eslint-disable-line\r\n\r\n  return (\r\n    <div className=\"achievement-popup popup\">\r\n      <div className=\"player\">\r\n        <GiAchievement />\r\n        <span>{playerName}</span>\r\n        <GiAchievement />\r\n      </div>\r\n      <div className=\"ach-holder\">{renderAchievement(achievementName, progressNumber)}</div>\r\n      <div className=\"description\">{achievements[achievementName].description}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AchievementPopup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { GiAchievement } from 'react-icons/gi';\r\nimport _ from 'lodash/fp';\r\nimport FlipMove from 'react-flip-move';\r\nimport classNames from 'classnames';\r\n\r\nconst renderPlayerLine = (pl, isCurrentPlayer) => {\r\n  return (\r\n    <div className={`closest-player ${isCurrentPlayer ? 'current-player' : ''}`}>\r\n      <div className=\"place\">#{pl.place}</div>\r\n      <div className=\"name\">{pl.name}</div>\r\n      <div className=\"elo\">{pl.rating}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RankUpPopup = ({ playerName, place: [prevPlace, currPlace], list: [prevList, currList] }) => {\r\n  const [place, setPlace] = useState(prevPlace);\r\n  const [list, setList] = useState(prevList);\r\n\r\n  useEffect(() => {\r\n    setList(currList);\r\n    setPlace(currPlace);\r\n  }, []); // eslint-disable-line\r\n\r\n  const listTop = Math.min(0, Math.max(-60 * (_.size(list) - 7), -60 * (place - 4)));\r\n  return (\r\n    <div className=\"rank-up-popup popup\">\r\n      <div className=\"player\">\r\n        <GiAchievement />\r\n        <span>{playerName}</span>\r\n        <GiAchievement />\r\n      </div>\r\n      <div className=\"ranking-holder\">\r\n        <div className=\"moving-list\" style={{ top: listTop }}>\r\n          <FlipMove duration={4500} delay={2000} maintainContainerHeight>\r\n            {list.map((pl, index) => {\r\n              return (\r\n                <div\r\n                  key={pl.id}\r\n                  className={classNames('player-block', { current: index === place - 1 })}\r\n                >\r\n                  {renderPlayerLine(pl, index === place - 1)}\r\n                </div>\r\n              );\r\n            })}\r\n          </FlipMove>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankUpPopup;\r\n","import React, { useEffect, useCallback, useState, useRef } from 'react';\r\nimport toBe from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport ReactModal from 'react-modal';\r\nimport _ from 'lodash/fp';\r\n\r\nimport './popups.scss';\r\n\r\nimport { TYPES } from 'constants/popups';\r\n\r\nimport { removePopup } from 'reducers/popups';\r\n\r\nimport AchievementPopup from './AchievementPopup';\r\nimport RankUpPopup from './RankUpPopup';\r\n\r\nconst popupByType = {\r\n  [TYPES.ACHIEVEMENT]: AchievementPopup,\r\n  [TYPES.RANK_UP]: RankUpPopup,\r\n};\r\n\r\nconst popupStyles = {\r\n  overlay: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0.1)',\r\n  },\r\n  content: {\r\n    top: null,\r\n    bottom: null,\r\n    left: null,\r\n    right: null,\r\n    position: null,\r\n    borderRadius: null,\r\n    padding: null,\r\n    background: null,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    height: '100%',\r\n    transition: '2.5s opacity ease',\r\n    opacity: 1,\r\n  },\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    popups: state.popups.popups,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  removePopup,\r\n};\r\n\r\nconst Popups = ({ popups, removePopup }) => {\r\n  const [visiblePopup, setVisiblePopup] = useState(null);\r\n  const contentRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (popups.length > 0) {\r\n      const popup = popups[0];\r\n      setVisiblePopup(popup);\r\n      if (!popup.persistent) {\r\n        setTimeout(() => {\r\n          if (popup && popup.fadeOut) {\r\n            contentRef.current.style.opacity = 0;\r\n            setTimeout(() => {\r\n              setVisiblePopup(null);\r\n              removePopup(popup);\r\n            }, 2500);\r\n          } else {\r\n            setVisiblePopup(null);\r\n            removePopup(popup);\r\n          }\r\n        }, popup.timeout || 6000);\r\n      }\r\n    } else {\r\n      setVisiblePopup(null);\r\n    }\r\n  }, [popups, removePopup]);\r\n\r\n  const onAfterOpen = useCallback(() => {\r\n    if (visiblePopup && visiblePopup.fadeIn) {\r\n      contentRef.current.style.opacity = 1;\r\n    }\r\n  }, [visiblePopup]);\r\n\r\n  let style = popupStyles;\r\n  let popupBody = null;\r\n  if (visiblePopup) {\r\n    const PopupComponent = popupByType[visiblePopup.type];\r\n    popupBody = PopupComponent ? (\r\n      <PopupComponent {...visiblePopup.parameters} />\r\n    ) : (\r\n      <div>{JSON.stringify(visiblePopup)}</div>\r\n    );\r\n\r\n    if (visiblePopup.fadeIn) {\r\n      style = _.set('content.opacity', 0, popupStyles);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"popups-holder\">\r\n      <ReactModal\r\n        isOpen={!!visiblePopup}\r\n        contentRef={(ref) => (contentRef.current = ref)}\r\n        onAfterOpen={onAfterOpen}\r\n        style={style}\r\n      >\r\n        {popupBody}\r\n      </ReactModal>\r\n    </div>\r\n  );\r\n};\r\nPopups.propTypes = {\r\n  popups: toBe.array,\r\n  removePopup: toBe.func,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Popups);\r\n","import { fetchJson } from 'utils/fetch';\r\nimport queryString from 'query-string';\r\nimport _ from 'lodash/fp';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nimport { preprocessData } from 'components/SocketTracker/helpers';\r\n\r\nconst LOADING = `TOP_PER_SONG/LOADING`;\r\nconst SUCCESS = `TOP_PER_SONG/SUCCESS`;\r\nconst ERROR = `TOP_PER_SONG/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n  error: null,\r\n  fetchingParams: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        fetchingParams: action.fetchingParams,\r\n        data: null,\r\n        error: null,\r\n      };\r\n    case ERROR:\r\n      return action.fetchingParams === state.fetchingParams\r\n        ? {\r\n            ...state,\r\n            isLoading: false,\r\n            error: action.error,\r\n            data: null,\r\n            fetchingParams: null,\r\n          }\r\n        : state;\r\n    case SUCCESS:\r\n      return action.fetchingParams === state.fetchingParams\r\n        ? {\r\n            ...state,\r\n            isLoading: false,\r\n            data: action.data,\r\n            fetchingParams: null,\r\n          }\r\n        : state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTopPerSong = (songName, leftLabel, rightLabel) => {\r\n  const fetchingParams = queryString.stringify({\r\n    song_name: songName,\r\n    charts: _.compact(_.uniq([leftLabel, rightLabel])).join(','),\r\n  });\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING, fetchingParams });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/topPerSong?${fetchingParams}` }));\r\n      const processedData = _.flow(preprocessData, _.get('results'))(data);\r\n      dispatch({ type: SUCCESS, data: processedData, fetchingParams });\r\n      return processedData;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error, fetchingParams });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React, { useCallback } from 'react';\r\nimport _ from 'lodash/fp';\r\n\r\nimport { TYPES } from 'constants/popups';\r\n\r\nimport ChartLabel from 'components/Leaderboard/ChartLabel';\r\n\r\nimport { getRankImg } from 'utils/exp';\r\nimport { useTrackedEx } from './helpers';\r\n\r\nexport const PlayerCard = ({\r\n  player,\r\n  profile,\r\n  label,\r\n  trackedData,\r\n  isLeft = false,\r\n  preferences,\r\n  topPlayersList,\r\n  addPopup,\r\n}) => {\r\n  const playersHiddenStatus = _.getOr({}, 'playersHiddenStatus', preferences);\r\n\r\n  const renderDeltaText = (n, prevN) => {\r\n    if (!prevN || prevN === n) {\r\n      return null;\r\n    }\r\n    const delta = n - prevN;\r\n    return (\r\n      <span className={`change ${delta >= 0 ? 'pos' : 'neg'}`}>\r\n        {delta < 0 ? delta.toFixed(1) : `+${delta.toFixed(1)}`}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const renderExpLine = () => {\r\n    if (!profile.expRank || !profile.exp) {\r\n      return null;\r\n    }\r\n\r\n    let takenWidth = profile.expRankNext\r\n      ? (profile.exp - profile.expRank.threshold) /\r\n        (profile.expRankNext.threshold - profile.expRank.threshold)\r\n      : 1;\r\n    const emptyWidth = 1 - takenWidth;\r\n    let diffWidth = 0;\r\n\r\n    if (trackedData.exp[1]) {\r\n      takenWidth = profile.expRankNext\r\n        ? (trackedData.exp[1] - profile.expRank.threshold) /\r\n          (profile.expRankNext.threshold - profile.expRank.threshold)\r\n        : 1;\r\n      diffWidth = 1 - emptyWidth - takenWidth;\r\n    }\r\n    return (\r\n      <div className=\"exp-line\">\r\n        <div className=\"taken\" style={{ width: Math.floor(100 * takenWidth) + '%' }}></div>\r\n        <div className=\"diff\" style={{ width: Math.ceil(100 * diffWidth) + '%' }}></div>\r\n        <div className=\"rest\" style={{ width: Math.ceil(100 * emptyWidth) + '%' }}></div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const rivals = topPlayersList.filter((pl) => !playersHiddenStatus[pl.id]);\r\n  const playerIndex = _.findIndex({ id: profile.id }, rivals);\r\n  const closestPlayers =\r\n    playerIndex < 0\r\n      ? []\r\n      : rivals.slice(Math.max(0, playerIndex - 2), Math.min(playerIndex + 3, rivals.length));\r\n\r\n  useTrackedEx({\r\n    data: topPlayersList,\r\n    resetData: profile.name,\r\n    isDataValid: useCallback(_.get('[0].rating'), []), // top list is only valid when rating is calculated\r\n    onChange: useCallback(\r\n      (prevList, currList) => {\r\n        const prevPlace = _.get('place', _.find({ id: profile.id }, prevList));\r\n        const currPlace = _.get('place', _.find({ id: profile.id }, currList));\r\n        // console.log('List update:', prevList, currList, prevPlace, currPlace);\r\n        if (prevPlace && currPlace && prevPlace > currPlace) {\r\n          // console.log('Place update:', profile.name, prevPlace, currPlace);\r\n          addPopup({\r\n            type: TYPES.RANK_UP,\r\n            fadeIn: true,\r\n            fadeOut: true,\r\n            timeout: 7500,\r\n            parameters: {\r\n              playerName: profile.name,\r\n              place: [prevPlace, currPlace],\r\n              list: [prevList, currList],\r\n            },\r\n          });\r\n        }\r\n      },\r\n      [addPopup, profile.id, profile.name]\r\n    ),\r\n  });\r\n\r\n  const [type, level] = label ? label.match(/(\\D+)|(\\d+)/g) : [];\r\n\r\n  return (\r\n    <div className={`player-container ${isLeft ? 'left' : 'right'}`}>\r\n      {player && (\r\n        <>\r\n          {/* <div className=\"title-header\">player {isLeft ? 1 : 2}:</div> */}\r\n          <div className=\"name-with-label\">\r\n            <div className=\"name\">{profile.name || player}</div>\r\n            <div className=\"chart-label\">\r\n              <ChartLabel type={type} level={level} />\r\n            </div>\r\n          </div>\r\n          {profile.exp && profile.expRank && (\r\n            <div className=\"exp exp-rank\">\r\n              {getRankImg(profile.expRank)}\r\n              {renderExpLine()}\r\n            </div>\r\n          )}\r\n          {trackedData.exp[0] && (\r\n            <div className=\"exp-text\">\r\n              <span className=\"_grey-text\">exp:</span>\r\n              <span>{Math.round(trackedData.exp[0])}</span>\r\n              {renderDeltaText(trackedData.exp[0], trackedData.exp[1])}\r\n            </div>\r\n          )}\r\n          {trackedData.elo[0] && (\r\n            <div className=\"rating\">\r\n              <span className=\"_grey-text\">elo:</span>\r\n              <span>{Math.round(trackedData.elo[0])}</span>\r\n              {renderDeltaText(trackedData.elo[0], trackedData.elo[1])}\r\n            </div>\r\n          )}\r\n          {trackedData.pp[0] && (\r\n            <div className=\"rating\">\r\n              <span className=\"_grey-text\">pp:</span>\r\n              <span>{Math.round(trackedData.pp[0])}</span>\r\n              {renderDeltaText(trackedData.pp[0], trackedData.pp[1])}\r\n            </div>\r\n          )}\r\n          <div className=\"closest-players\">\r\n            {_.map((pl) => {\r\n              return (\r\n                <div className={`closest-player ${profile.id === pl.id ? 'current-player' : ''}`}>\r\n                  <div className=\"place\">#{pl.place}</div>\r\n                  <div className=\"name\">{pl.name}</div>\r\n                  <div className=\"elo\">{pl.rating}</div>\r\n                </div>\r\n              );\r\n            }, closestPlayers)}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState, useRef, useCallback, useMemo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash/fp';\r\nimport { createSelector } from 'reselect';\r\nimport lev from 'fast-levenshtein';\r\n\r\nimport './socket.scss';\r\n\r\nimport { SOCKET_SERVER_IP } from 'constants/backend';\r\n\r\nimport Popups from 'components/Shared/Popups';\r\nimport Loader from 'components/Shared/Loader';\r\n\r\nimport { appendNewResults } from 'reducers/results';\r\nimport { fetchTopPerSong } from 'reducers/topPerSong';\r\nimport { fetchUserPreferences } from 'reducers/preferences';\r\nimport { addPopup } from 'reducers/popups';\r\n\r\nimport { useTracked, useResetTrackedObject } from './helpers';\r\n\r\nimport { PlayerCard } from './PlayerCard';\r\nimport Chart from 'components/Leaderboard/Chart';\r\nimport { TYPES } from 'constants/popups';\r\n\r\n// code\r\nconst STATE_RESET_TIMEOUT_SEC = 5 * 60 + 10; // 5 minutes 10 seconds\r\n\r\nconst topPlayersListSelector = createSelector(\r\n  (state) => state.results.profiles,\r\n  _.flow(_.values, _.orderBy('ratingRaw', 'desc'), (items) =>\r\n    items.map((it, index) => ({ place: index + 1, ..._.pick(['id', 'name', 'rating'], it) }))\r\n  )\r\n);\r\n\r\n// redux\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.topPerSong.isLoading,\r\n    songTopData: state.topPerSong.data,\r\n    error: state.topPerSong.error,\r\n    profiles: state.results.profiles,\r\n    topPlayersList: topPlayersListSelector(state),\r\n    sharedCharts: state.results.sharedCharts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTopPerSong,\r\n  appendNewResults,\r\n  addPopup,\r\n  fetchUserPreferences,\r\n};\r\n\r\nfunction TrackerApp({\r\n  isLoading,\r\n  fetchTopPerSong,\r\n  fetchUserPreferences,\r\n  appendNewResults,\r\n  songTopData,\r\n  error,\r\n  profiles,\r\n  topPlayersList,\r\n  sharedCharts = {},\r\n  addPopup,\r\n}) {\r\n  // useEffect(() => {\r\n  //   addPopup({\r\n  //     type: TYPES.ACHIEVEMENT,\r\n  //     fadeIn: true,\r\n  //     fadeOut: true,\r\n  //     // persistent: true,\r\n  //     parameters: {\r\n  //       playerName: 'grumd',\r\n  //       achievementName: 'Падовый мисс',\r\n  //       progress: [0, 100],\r\n  //     },\r\n  //   });\r\n  //   addPopup({\r\n  //     type: TYPES.ACHIEVEMENT,\r\n  //     fadeIn: true,\r\n  //     fadeOut: true,\r\n  //     parameters: {\r\n  //       playerName: 'Dino',\r\n  //       achievementName: 'Мастер фингеринга',\r\n  //       progress: [33, 66],\r\n  //     },\r\n  //   });\r\n  // }, [addPopup]);\r\n  // useEffect(() => {\r\n  //   if (_.get('[0].rating', topPlayersList)) {\r\n  //     const prevList = [...topPlayersList];\r\n  //     const p = 30,\r\n  //       c = 26;\r\n  //     const currList = _.pullAt(p - 1, topPlayersList);\r\n  //     currList.splice(c - 1, 0, topPlayersList[p - 1]);\r\n  //     addPopup({\r\n  //       type: TYPES.RANK_UP,\r\n  //       fadeIn: true,\r\n  //       fadeOut: true,\r\n  //       persistent: true,\r\n  //       parameters: {\r\n  //         playerName: 'grumd',\r\n  //         place: [p, c],\r\n  //         list: [prevList, currList],\r\n  //       },\r\n  //     });\r\n  //   }\r\n  // }, [addPopup, topPlayersList]);\r\n\r\n  // Setup\r\n  const [message, setMessage] = useState('');\r\n  const [socketErrorMessage, setSocketErrorMessage] = useState('');\r\n  const [isSocketReady, setSocketReady] = useState(false);\r\n  const [isAlive, setAlive] = useState(null);\r\n  const [leftLabel, setLeftLabel] = useState(null);\r\n  const [rightLabel, setRightLabel] = useState(null);\r\n  const [leftPlayer, setLeftPlayer] = useState(null);\r\n  const [rightPlayer, setRightPlayer] = useState(null);\r\n  const [recognizedSongName, setRecognizedSongName] = useState('');\r\n  const [leftPreferences, setLeftPreferences] = useState(null);\r\n  const [rightPreferences, setRightPreferences] = useState(null);\r\n\r\n  const resultsContainerRef = useRef(null);\r\n  const leftResultRef = useRef(null);\r\n  const rightResultRef = useRef(null);\r\n\r\n  const socketRef = useRef(null);\r\n  const timeoutResetTokenRef = useRef(null);\r\n\r\n  // Get profile objects from player names\r\n  const leftProfile = useMemo(() => {\r\n    if (!leftPlayer || _.isEmpty(profiles)) return {};\r\n    return _.minBy((p) => lev.get(p.nameArcade, leftPlayer), _.values(profiles)) || {};\r\n  }, [leftPlayer, profiles]);\r\n  const rightProfile = useMemo(() => {\r\n    if (!rightPlayer || _.isEmpty(profiles)) return {};\r\n    return _.minBy((p) => lev.get(p.nameArcade, rightPlayer), _.values(profiles)) || {};\r\n  }, [rightPlayer, profiles]);\r\n\r\n  const onChangeAchievements = (playerName) => (prevAchievement, currAchievement) => {\r\n    _.keys(prevAchievement).forEach((achievementName) => {\r\n      if (prevAchievement[achievementName].progress !== currAchievement[achievementName].progress) {\r\n        addPopup({\r\n          type: TYPES.ACHIEVEMENT,\r\n          fadeIn: true,\r\n          fadeOut: true,\r\n          parameters: {\r\n            playerName,\r\n            achievementName,\r\n            progress: [\r\n              prevAchievement[achievementName].progress,\r\n              currAchievement[achievementName].progress,\r\n            ],\r\n          },\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  // Track changes in profiles\r\n  const leftTracked = {\r\n    pp: useTracked(_.get('pp.pp', leftProfile), leftProfile.name),\r\n    elo: useTracked(leftProfile.ratingRaw, leftProfile.name),\r\n    exp: useTracked(leftProfile.exp, leftProfile.name),\r\n    expRank: useTracked(leftProfile.expRank, leftProfile.name),\r\n    achievements: useTracked(\r\n      leftProfile.achievements,\r\n      leftProfile.name,\r\n      onChangeAchievements(leftProfile.name)\r\n    ),\r\n  };\r\n  const resetLeftTracked = useResetTrackedObject(leftTracked);\r\n  const rightTracked = {\r\n    pp: useTracked(_.get('pp.pp', rightProfile), rightProfile.name),\r\n    elo: useTracked(rightProfile.ratingRaw, rightProfile.name),\r\n    exp: useTracked(rightProfile.exp, rightProfile.name),\r\n    expRank: useTracked(rightProfile.expRank, rightProfile.name),\r\n    achievements: useTracked(\r\n      rightProfile.achievements,\r\n      rightProfile.name,\r\n      onChangeAchievements(rightProfile.name)\r\n    ),\r\n  };\r\n  const resetRightTracked = useResetTrackedObject(rightTracked);\r\n\r\n  // Fetch preferences when player id changes\r\n  useEffect(() => {\r\n    if (leftProfile.id) {\r\n      fetchUserPreferences(leftProfile.id).then((response) => {\r\n        setLeftPreferences(response.preferences);\r\n      });\r\n    }\r\n  }, [leftProfile.id, fetchUserPreferences]);\r\n  useEffect(() => {\r\n    if (rightProfile.id) {\r\n      fetchUserPreferences(rightProfile.id).then((response) => {\r\n        setRightPreferences(response.preferences);\r\n      });\r\n    }\r\n  }, [rightProfile.id, fetchUserPreferences]);\r\n\r\n  // Reset the page when sockets didn't receive any messages for a long time\r\n  const restartTimeout = useCallback(() => {\r\n    setAlive(true);\r\n    if (timeoutResetTokenRef.current) {\r\n      clearTimeout(timeoutResetTokenRef.current);\r\n    }\r\n    timeoutResetTokenRef.current = setTimeout(() => {\r\n      // TODO: reset page\r\n      setAlive(false);\r\n      setLeftPlayer(null);\r\n      setRightPlayer(null);\r\n      setLeftLabel(null);\r\n      setRightLabel(null);\r\n      setRecognizedSongName('');\r\n      setLeftPreferences(null);\r\n      setRightPreferences(null);\r\n    }, STATE_RESET_TIMEOUT_SEC * 1000);\r\n  }, []);\r\n\r\n  // Start websockets\r\n  useEffect(() => {\r\n    socketRef.current = new WebSocket(SOCKET_SERVER_IP);\r\n    socketRef.current.onerror = () => {\r\n      setMessage(`Cannot connect to websocket server, please reload the page`);\r\n    };\r\n    socketRef.current.onopen = (e) => {\r\n      setSocketReady(true);\r\n    };\r\n  }, []);\r\n\r\n  // Set the onmessage callback\r\n  useEffect(() => {\r\n    socketRef.current.onmessage = (event) => {\r\n      restartTimeout();\r\n      try {\r\n        const data = event && event.data && JSON.parse(event.data);\r\n        console.log(data);\r\n\r\n        if (data.type === 'result_screen') {\r\n          console.log('Resetting tracking because received result screen');\r\n          resetLeftTracked();\r\n          resetRightTracked();\r\n          const songName = data.data.track_name;\r\n          const leftLabel = _.get('left.chart_label', data.data);\r\n          const rightLabel = _.get('right.chart_label', data.data);\r\n          const leftPlayer = _.get('left.result.player_name', data.data);\r\n          const rightPlayer = _.get('right.result.player_name', data.data);\r\n          setLeftPlayer(leftPlayer);\r\n          setRightPlayer(rightPlayer);\r\n          setLeftLabel(leftLabel);\r\n          setRightLabel(rightLabel);\r\n          setRecognizedSongName(songName);\r\n          appendNewResults(data.data.gained); // Fetch results that we don't have here yet (to calculate elo)\r\n          fetchTopPerSong(songName, leftLabel, rightLabel);\r\n        } else if (data.type === 'chart_selected') {\r\n          setSocketErrorMessage(data.data.error || '');\r\n          if (data.data.leftPlayer || data.data.rightPlayer) {\r\n            setLeftPlayer(data.data.leftPlayer);\r\n            setRightPlayer(data.data.rightPlayer);\r\n          }\r\n          if (data.data.leftLabel || data.data.rightLabel) {\r\n            setLeftLabel(data.data.leftLabel);\r\n            setRightLabel(data.data.rightLabel);\r\n            if (data.data.text) {\r\n              // If we have full info, try to fetch if needed\r\n              const newSongName = data.data.text;\r\n              setRecognizedSongName(newSongName);\r\n              console.log('song name', newSongName, recognizedSongName);\r\n              if (recognizedSongName !== newSongName) {\r\n                fetchTopPerSong(newSongName, data.data.leftLabel, data.data.rightLabel);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.log('on message error', e);\r\n        setMessage(`Error: ${e.message}`);\r\n      }\r\n    };\r\n  }, [\r\n    recognizedSongName,\r\n    fetchTopPerSong,\r\n    restartTimeout,\r\n    appendNewResults,\r\n    resetLeftTracked,\r\n    resetRightTracked,\r\n  ]);\r\n\r\n  // FOR DEBUG\r\n  // useEffect(() => {\r\n  //   if (!_.isEmpty(profiles) && !leftPlayer && !rightPlayer) {\r\n  //     socketRef.current.onmessage({\r\n  //       data:\r\n  //         '{\"type\": \"chart_selected\", \"data\": {\"text\": \"Iolite Sky\", \"leftLabel\": \"D17\", \"rightLabel\": \"S16\", \"leftPlayer\": \"GRUMD\", \"rightPlayer\": \"DINO\"}}',\r\n  //     });\r\n  //   }\r\n  // }, [profiles, leftPlayer, rightPlayer]);\r\n\r\n  // Resize the results blocks to fill the most space on the page\r\n  useEffect(() => {\r\n    // return;\r\n    if (resultsContainerRef.current && leftResultRef.current) {\r\n      if (rightResultRef.current) {\r\n        // Both refs\r\n        const left = leftResultRef.current;\r\n        const right = rightResultRef.current;\r\n        const totalSize = {\r\n          w: resultsContainerRef.current.clientWidth,\r\n          h: resultsContainerRef.current.clientHeight,\r\n        };\r\n        const scaleHH = totalSize.w / (left.offsetWidth + right.offsetWidth);\r\n        const scaleHW = totalSize.h / Math.max(left.offsetHeight, right.offsetHeight);\r\n        const scaleWH = totalSize.w / Math.max(left.offsetWidth, right.offsetWidth);\r\n        const scaleWW = totalSize.h / (left.offsetHeight + right.offsetHeight);\r\n        // console.log(scaleHH, scaleHW, scaleWH, scaleWW);\r\n        if (Math.min(scaleHH, scaleHW) > Math.min(scaleWH, scaleWW)) {\r\n          resultsContainerRef.current.style.flexDirection = 'row';\r\n          resultsContainerRef.current.style.alignItems = 'center';\r\n          if (scaleHH > scaleHW) {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleHW})`;\r\n          } else {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleHH})`;\r\n          }\r\n        } else {\r\n          resultsContainerRef.current.style.flexDirection = 'column';\r\n          resultsContainerRef.current.style.alignItems = 'center';\r\n          if (scaleWH > scaleWW) {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleWW})`;\r\n          } else {\r\n            resultsContainerRef.current.style.transform = `scale(${0.98 * scaleWH})`;\r\n          }\r\n        }\r\n      } else {\r\n        // One ref\r\n        const left = leftResultRef.current;\r\n        const totalSize = {\r\n          w: resultsContainerRef.current.clientWidth,\r\n          h: resultsContainerRef.current.clientHeight,\r\n        };\r\n        const scaleW = totalSize.w / left.offsetWidth;\r\n        const scaleH = totalSize.h / left.offsetHeight;\r\n        if (scaleW < scaleH) {\r\n          resultsContainerRef.current.style.transform = `scale(${0.98 * scaleW})`;\r\n        } else {\r\n          resultsContainerRef.current.style.transform = `scale(${0.98 * scaleH})`;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  const leftChart = _.find({ chartLabel: leftLabel }, songTopData);\r\n  const rightChart = _.find({ chartLabel: rightLabel }, songTopData);\r\n  const chartsToShow = _.uniq(_.compact([leftChart, rightChart]));\r\n\r\n  return (\r\n    <div className=\"tracker-container\">\r\n      <Popups />\r\n      <div className=\"sidebar\">\r\n        <PlayerCard\r\n          player={leftPlayer}\r\n          profile={leftProfile}\r\n          label={leftLabel}\r\n          trackedData={leftTracked}\r\n          preferences={leftPreferences}\r\n          topPlayersList={topPlayersList}\r\n          isLeft\r\n          addPopup={addPopup}\r\n        />\r\n        <PlayerCard\r\n          player={rightPlayer}\r\n          profile={rightProfile}\r\n          label={rightLabel}\r\n          trackedData={rightTracked}\r\n          preferences={rightPreferences}\r\n          topPlayersList={topPlayersList}\r\n          addPopup={addPopup}\r\n        />\r\n      </div>\r\n      <div className=\"results\" ref={resultsContainerRef}>\r\n        {(error || message) && (\r\n          <div className=\"error\">\r\n            {message}\r\n            <br />\r\n            {error && error.message}\r\n          </div>\r\n        )}\r\n        {isSocketReady &&\r\n          !leftPlayer &&\r\n          !rightPlayer &&\r\n          !socketErrorMessage &&\r\n          !isLoading &&\r\n          _.isEmpty(chartsToShow) &&\r\n          (isAlive === null ? (\r\n            <div className=\"msg\">Waiting for recognizer...</div>\r\n          ) : isAlive ? (\r\n            <div className=\"msg\">Waiting for chart select...</div>\r\n          ) : (\r\n            <div className=\"offline msg\">Recognizer is offline</div>\r\n          ))}\r\n        {isSocketReady &&\r\n          (leftLabel || rightLabel) &&\r\n          !socketErrorMessage &&\r\n          !isLoading &&\r\n          _.isEmpty(chartsToShow) &&\r\n          'No results for this chart'}\r\n        {isLoading && <Loader />}\r\n        {!isLoading &&\r\n          chartsToShow.map((chart, chartIndex) => {\r\n            const leftPlayersHiddenStatus = _.omitBy(\r\n              (v) => !v,\r\n              _.getOr({}, 'playersHiddenStatus', leftPreferences)\r\n            );\r\n            const rightPlayersHiddenStatus = _.omitBy(\r\n              (v) => !v,\r\n              _.getOr({}, 'playersHiddenStatus', rightPreferences)\r\n            );\r\n\r\n            const isHiddenInBoth = Object.keys(leftPlayersHiddenStatus).reduce(\r\n              (obj, key) => ({\r\n                ...obj,\r\n                [key]: leftPlayersHiddenStatus[key] && rightPlayersHiddenStatus[key],\r\n              }),\r\n              {}\r\n            );\r\n            return (\r\n              <Chart\r\n                ref={chartIndex === 0 ? leftResultRef : rightResultRef}\r\n                playersHiddenStatus={isHiddenInBoth}\r\n                key={chart.sharedChartId}\r\n                chart={chart}\r\n                leftProfile={leftProfile}\r\n                rightProfile={rightProfile}\r\n                isSocketView\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TrackerApp);\r\n","import { fetchJson } from 'utils/fetch';\r\n\r\nimport { HOST } from 'constants/backend';\r\n\r\nconst LOADING = `TRACKLIST/LOADING`;\r\nconst SUCCESS = `TRACKLIST/SUCCESS`;\r\nconst ERROR = `TRACKLIST/ERROR`;\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const fetchTracklist = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: LOADING });\r\n    try {\r\n      const data = await dispatch(fetchJson({ url: `${HOST}/tracklist/stats/XX` }));\r\n      dispatch({ type: SUCCESS, data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: ERROR, error });\r\n      return null;\r\n    }\r\n  };\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport localForage from 'localforage';\r\nimport ReactModal from 'react-modal';\r\nimport _ from 'lodash/fp';\r\n\r\nimport 'react-responsive-ui/style.css';\r\nimport './App.scss';\r\n\r\nimport { routes } from 'constants/routes';\r\nimport { CHART_MIN_MAX } from 'constants/leaderboard';\r\n\r\nimport SongsTop from 'components/SongsTop/SongsTop';\r\nimport Leaderboard from 'components/Leaderboard/Leaderboard';\r\nimport Ranking from 'components/Ranking/Ranking';\r\nimport Profile from 'components/Profile/Profile';\r\nimport ProfileCompare from 'components/ProfileCompare/ProfileCompare';\r\nimport TopBar from 'components/Shared/TopBar/TopBar';\r\nimport Loader from 'components/Shared/Loader';\r\nimport LoginScreen from 'components/LoginScreen/LoginScreen';\r\nimport SocketTracker from 'components/SocketTracker/SocketTracker';\r\n\r\nimport { fetchResults, setFilter } from 'reducers/results';\r\nimport { fetchTracklist } from 'reducers/tracklist';\r\nimport { fetchUser } from 'reducers/user';\r\nimport { fetchPreferences } from 'reducers/preferences';\r\n\r\nReactModal.setAppElement('#root');\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userData: state.user.data,\r\n    isLoading: state.user.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setFilter,\r\n  fetchResults,\r\n  fetchTracklist,\r\n  fetchUser,\r\n  fetchPreferences,\r\n};\r\n\r\nfunction App({\r\n  fetchUser,\r\n  fetchTracklist,\r\n  fetchResults,\r\n  fetchPreferences,\r\n  setFilter,\r\n  userData,\r\n  isLoading,\r\n}) {\r\n  useEffect(() => {\r\n    if (!process.env.REACT_APP_SOCKET) {\r\n      fetchUser();\r\n      localForage\r\n        .getItem('filter')\r\n        .then((filter) => {\r\n          if (filter) {\r\n            setFilter({\r\n              ..._.omit('song', filter),\r\n              chartRange: filter.chartRange && {\r\n                ...filter.chartRange,\r\n                range: _.every(\r\n                  (r) => r >= CHART_MIN_MAX[0] && r <= CHART_MIN_MAX[1],\r\n                  filter.chartRange.range\r\n                )\r\n                  ? filter.chartRange.range\r\n                  : CHART_MIN_MAX,\r\n              },\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => console.error('Cannot get filter from local storage', error));\r\n    }\r\n  }, [fetchUser, fetchTracklist, fetchResults, setFilter]);\r\n\r\n  useEffect(() => {\r\n    if (!process.env.REACT_APP_SOCKET && userData && userData.player) {\r\n      Promise.all([fetchTracklist(), fetchPreferences()]).then(() => {\r\n        fetchResults();\r\n      });\r\n    }\r\n  }, [userData, fetchPreferences, fetchResults, fetchTracklist]);\r\n\r\n  useEffect(() => {\r\n    if (process.env.REACT_APP_SOCKET) {\r\n      fetchTracklist().then(() => {\r\n        fetchResults();\r\n      });\r\n    }\r\n  }, [fetchResults, fetchTracklist]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <Loader />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (process.env.REACT_APP_SOCKET) {\r\n    return <SocketTracker />;\r\n  }\r\n\r\n  if (!userData || !userData.player) {\r\n    return <LoginScreen />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TopBar />\r\n      <Route exact path=\"/\" render={() => <Redirect to={routes.leaderboard.path} />} />\r\n      <Route path={routes.leaderboard.path} component={Leaderboard} />\r\n      <Route path={routes.ranking.path} component={Ranking} />\r\n      <Route path={routes.profile.path}>\r\n        <Switch>\r\n          <Route path={routes.profile.path} exact component={Profile} />\r\n          <Route path={routes.profile.compare.path} exact component={ProfileCompare} />\r\n        </Switch>\r\n      </Route>\r\n      <Route path={routes.songs.path} component={SongsTop} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { combineReducers } from 'redux';\r\n\r\nimport mostPlayed from './mostPlayed';\r\nimport mostPlayedMonth from './mostPlayedMonth';\r\nimport leastPlayed from './leastPlayed';\r\n\r\nexport default combineReducers({\r\n  mostPlayed,\r\n  mostPlayedMonth,\r\n  leastPlayed,\r\n});\r\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport _ from 'lodash/fp';\r\n\r\nimport tracklist from 'reducers/tracklist';\r\nimport trackStats from 'reducers/trackStats';\r\nimport popups from 'reducers/popups';\r\nimport profiles from 'reducers/profiles';\r\nimport preferences from 'reducers/preferences';\r\nimport presets from 'reducers/presets';\r\nimport results from 'reducers/results';\r\nimport user from 'reducers/user';\r\nimport login from 'reducers/login';\r\nimport topPerSong from 'reducers/topPerSong';\r\n\r\nconst rootReducer = combineReducers({\r\n  topPerSong,\r\n  login,\r\n  popups,\r\n  preferences,\r\n  presets,\r\n  profiles,\r\n  results,\r\n  trackStats,\r\n  tracklist,\r\n  user,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && process.env.NODE_ENV === 'development'\r\n    ? compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__({\r\n          stateSanitizer: (state) => ({\r\n            ...state,\r\n            results: {\r\n              ...state.results,\r\n              data: `big array, ${_.size(state.results.data)}`,\r\n              results: `big array, ${_.size(state.results.results)}`,\r\n              sharedCharts: 'big object',\r\n              originalData: 'big object',\r\n              resultInfo: 'big object',\r\n              profiles: _.mapValues(\r\n                (pl) => ({\r\n                  ...pl,\r\n                  resultsByGrade: '...',\r\n                  resultsByLevel: '...',\r\n                  rankingHistory: '...',\r\n                  ratingHistory: '...',\r\n                  pp: {\r\n                    pp: pl.pp && pl.pp.pp,\r\n                    scores: '...',\r\n                  },\r\n                }),\r\n                state.results.profiles\r\n              ),\r\n            },\r\n          }),\r\n        })\r\n      )\r\n    : applyMiddleware(thunk)\r\n);\r\n","import 'promise-polyfill';\r\nimport 'whatwg-fetch';\r\nimport 'utils/polyfills';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.scss';\r\nimport App from 'components/App';\r\n\r\nimport { store } from 'reducers';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}